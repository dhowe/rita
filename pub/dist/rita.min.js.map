{"version":3,"sources":["../node_modules/he/he.js","../src/rita.js","../src/stemmer.js","../src/tokenizer.js","../src/conjugator.js","../src/util.js","../src/rita_dict.js","../src/lexicon.js","../src/tagger.js","../src/inflector.js","../src/rita_lts.js","../src/analyzer.js","../src/concorder.js","../src/randgen.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../src/markov.js","../node_modules/riscript/src/riscript.js","../node_modules/riscript/src/parser.js","../node_modules/riscript/src/util.js","../node_modules/riscript/src/visitor.js","../node_modules/riscript/src/tokens.js","../node_modules/riscript/src/grammar.js","../node_modules/mingo/dist/esm/util.js","../node_modules/mingo/dist/esm/core.js","../node_modules/mingo/dist/esm/operators/expression/boolean/index.js","../node_modules/mingo/dist/esm/operators/expression/boolean/and.js","../node_modules/mingo/dist/esm/operators/expression/boolean/not.js","../node_modules/mingo/dist/esm/operators/expression/boolean/or.js","../node_modules/mingo/dist/esm/operators/expression/comparison/index.js","../node_modules/mingo/dist/esm/operators/expression/comparison/cmp.js","../node_modules/mingo/dist/esm/lazy.js","../node_modules/mingo/dist/esm/aggregator.js","../node_modules/mingo/dist/esm/cursor.js","../node_modules/mingo/dist/esm/query.js","../node_modules/mingo/dist/esm/operators/_predicates.js","../node_modules/mingo/dist/esm/operators/expression/comparison/eq.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/ne.js","../node_modules/mingo/dist/esm/operators/expression/date/_internal.js","../node_modules/mingo/dist/esm/operators/window/_internal.js","../node_modules/mingo/dist/esm/operators/pipeline/sort.js","../node_modules/mingo/dist/esm/operators/pipeline/limit.js","../node_modules/mingo/dist/esm/operators/expression/array/nin.js","../node_modules/mingo/dist/esm/operators/expression/array/slice.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/_internal.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitAnd.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitOr.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitXor.js","../node_modules/mingo/dist/esm/operators/expression/date/dateFromString.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/_internal.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atan.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atanh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/degreesToRadians.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/radiansToDegrees.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/tan.js","../node_modules/mingo/dist/esm/operators/pipeline/project.js","../node_modules/mingo/dist/esm/operators/pipeline/skip.js","../node_modules/mingo/dist/esm/operators/projection/index.js","../node_modules/mingo/dist/esm/operators/projection/elemMatch.js","../node_modules/mingo/dist/esm/operators/projection/slice.js","../node_modules/mingo/dist/esm/operators/query/index.js","../node_modules/mingo/dist/esm/operators/query/array/all.js","../node_modules/mingo/dist/esm/operators/query/array/elemMatch.js","../node_modules/mingo/dist/esm/operators/query/array/size.js","../node_modules/mingo/dist/esm/operators/query/bitwise/_internal.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllClear.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllSet.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnyClear.js","../node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnySet.js","../node_modules/mingo/dist/esm/operators/query/comparison/eq.js","../node_modules/mingo/dist/esm/operators/query/comparison/gt.js","../node_modules/mingo/dist/esm/operators/query/comparison/gte.js","../node_modules/mingo/dist/esm/operators/query/comparison/in.js","../node_modules/mingo/dist/esm/operators/query/comparison/lt.js","../node_modules/mingo/dist/esm/operators/query/comparison/lte.js","../node_modules/mingo/dist/esm/operators/query/comparison/ne.js","../node_modules/mingo/dist/esm/operators/query/comparison/nin.js","../node_modules/mingo/dist/esm/operators/query/element/exists.js","../node_modules/mingo/dist/esm/operators/query/element/type.js","../node_modules/mingo/dist/esm/operators/query/evaluation/expr.js","../node_modules/mingo/dist/esm/operators/query/evaluation/jsonSchema.js","../node_modules/mingo/dist/esm/operators/query/evaluation/mod.js","../node_modules/mingo/dist/esm/operators/query/evaluation/regex.js","../node_modules/mingo/dist/esm/operators/query/evaluation/where.js","../node_modules/mingo/dist/esm/operators/query/logical/and.js","../node_modules/mingo/dist/esm/operators/query/logical/or.js","../node_modules/mingo/dist/esm/operators/query/logical/nor.js","../node_modules/mingo/dist/esm/operators/query/logical/not.js","../node_modules/mingo/dist/esm/init/basic.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/_arrayMap.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/toFinite.js","../node_modules/lodash-es/toInteger.js","../node_modules/lodash-es/identity.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_toSource.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_apply.js","../node_modules/lodash-es/noop.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_shortOut.js","../node_modules/lodash-es/constant.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_baseSetToString.js","../node_modules/lodash-es/_setToString.js","../node_modules/lodash-es/_arrayEach.js","../node_modules/lodash-es/_baseFindIndex.js","../node_modules/lodash-es/_baseIsNaN.js","../node_modules/lodash-es/_strictIndexOf.js","../node_modules/lodash-es/_baseIndexOf.js","../node_modules/lodash-es/_arrayIncludes.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/eq.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/_overRest.js","../node_modules/lodash-es/_baseRest.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/_isIterateeCall.js","../node_modules/lodash-es/_createAssigner.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/isBuffer.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/assign.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_isKey.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_Map.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/memoize.js","../node_modules/lodash-es/_memoizeCapped.js","../node_modules/lodash-es/_stringToPath.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/_castPath.js","../node_modules/lodash-es/_toKey.js","../node_modules/lodash-es/_baseGet.js","../node_modules/lodash-es/get.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/_isFlattenable.js","../node_modules/lodash-es/_baseFlatten.js","../node_modules/lodash-es/flatten.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_baseSlice.js","../node_modules/lodash-es/_arrayReduce.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/lodash-es/clone.js","../node_modules/lodash-es/compact.js","../node_modules/lodash-es/_setCacheAdd.js","../node_modules/lodash-es/_setCacheHas.js","../node_modules/lodash-es/_SetCache.js","../node_modules/lodash-es/_arraySome.js","../node_modules/lodash-es/_cacheHas.js","../node_modules/lodash-es/_equalArrays.js","../node_modules/lodash-es/_mapToArray.js","../node_modules/lodash-es/_setToArray.js","../node_modules/lodash-es/_equalByTag.js","../node_modules/lodash-es/_equalObjects.js","../node_modules/lodash-es/_baseIsEqualDeep.js","../node_modules/lodash-es/_baseIsEqual.js","../node_modules/lodash-es/_baseIsMatch.js","../node_modules/lodash-es/_isStrictComparable.js","../node_modules/lodash-es/_getMatchData.js","../node_modules/lodash-es/_matchesStrictComparable.js","../node_modules/lodash-es/_baseMatches.js","../node_modules/lodash-es/_baseHasIn.js","../node_modules/lodash-es/_hasPath.js","../node_modules/lodash-es/hasIn.js","../node_modules/lodash-es/_baseMatchesProperty.js","../node_modules/lodash-es/_baseProperty.js","../node_modules/lodash-es/_basePropertyDeep.js","../node_modules/lodash-es/property.js","../node_modules/lodash-es/_baseIteratee.js","../node_modules/lodash-es/_arrayAggregator.js","../node_modules/lodash-es/_createBaseFor.js","../node_modules/lodash-es/_baseFor.js","../node_modules/lodash-es/_baseForOwn.js","../node_modules/lodash-es/_createBaseEach.js","../node_modules/lodash-es/_baseEach.js","../node_modules/lodash-es/_baseAggregator.js","../node_modules/lodash-es/_createAggregator.js","../node_modules/lodash-es/defaults.js","../node_modules/lodash-es/isArrayLikeObject.js","../node_modules/lodash-es/_arrayIncludesWith.js","../node_modules/lodash-es/_baseDifference.js","../node_modules/lodash-es/difference.js","../node_modules/lodash-es/last.js","../node_modules/lodash-es/drop.js","../node_modules/lodash-es/dropRight.js","../node_modules/lodash-es/_castFunction.js","../node_modules/lodash-es/forEach.js","../node_modules/lodash-es/_arrayEvery.js","../node_modules/lodash-es/_baseEvery.js","../node_modules/lodash-es/every.js","../node_modules/lodash-es/_baseFilter.js","../node_modules/lodash-es/filter.js","../node_modules/lodash-es/_createFind.js","../node_modules/lodash-es/findIndex.js","../node_modules/lodash-es/find.js","../node_modules/lodash-es/head.js","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/map.js","../node_modules/lodash-es/flatMap.js","../node_modules/lodash-es/groupBy.js","../node_modules/lodash-es/_baseHas.js","../node_modules/lodash-es/has.js","../node_modules/lodash-es/isString.js","../node_modules/lodash-es/_baseValues.js","../node_modules/lodash-es/values.js","../node_modules/lodash-es/includes.js","../node_modules/lodash-es/indexOf.js","../node_modules/lodash-es/isEmpty.js","../node_modules/lodash-es/_baseIsRegExp.js","../node_modules/lodash-es/isRegExp.js","../node_modules/lodash-es/isUndefined.js","../node_modules/lodash-es/negate.js","../node_modules/lodash-es/_baseSet.js","../node_modules/lodash-es/_basePickBy.js","../node_modules/lodash-es/pickBy.js","../node_modules/lodash-es/_baseReduce.js","../node_modules/lodash-es/reduce.js","../node_modules/lodash-es/reject.js","../node_modules/lodash-es/_baseSome.js","../node_modules/lodash-es/some.js","../node_modules/lodash-es/_createSet.js","../node_modules/lodash-es/_baseUniq.js","../node_modules/lodash-es/uniq.js","../node_modules/@chevrotain/utils/src/print.ts","../node_modules/@chevrotain/utils/src/timer.ts","../node_modules/@chevrotain/utils/src/to-fast-properties.ts","../node_modules/@chevrotain/gast/src/model.ts","../node_modules/@chevrotain/gast/src/visitor.ts","../node_modules/@chevrotain/gast/src/helpers.ts","../node_modules/chevrotain/src/parse/grammar/rest.ts","../node_modules/chevrotain/src/parse/grammar/first.ts","../node_modules/chevrotain/src/parse/constants.ts","../node_modules/chevrotain/src/parse/grammar/follow.ts","../node_modules/@chevrotain/regexp-to-ast/src/utils.ts","../node_modules/@chevrotain/regexp-to-ast/src/character-classes.ts","../node_modules/@chevrotain/regexp-to-ast/src/regexp-parser.ts","../node_modules/@chevrotain/regexp-to-ast/src/base-regexp-visitor.ts","../node_modules/chevrotain/src/scan/reg_exp_parser.ts","../node_modules/chevrotain/src/scan/reg_exp.ts","../node_modules/chevrotain/src/scan/lexer.ts","../node_modules/chevrotain/src/scan/tokens.ts","../node_modules/chevrotain/src/scan/lexer_errors_public.ts","../node_modules/chevrotain/src/scan/lexer_public.ts","../node_modules/chevrotain/src/scan/tokens_public.ts","../node_modules/chevrotain/src/parse/errors_public.ts","../node_modules/chevrotain/src/parse/grammar/resolver.ts","../node_modules/chevrotain/src/parse/grammar/interpreter.ts","../node_modules/chevrotain/src/parse/grammar/lookahead.ts","../node_modules/chevrotain/src/parse/grammar/checks.ts","../node_modules/chevrotain/src/parse/grammar/gast/gast_resolver_public.ts","../node_modules/chevrotain/src/parse/exceptions_public.ts","../node_modules/chevrotain/src/parse/parser/traits/recoverable.ts","../node_modules/chevrotain/src/parse/grammar/keys.ts","../node_modules/chevrotain/src/parse/grammar/llk_lookahead.ts","../node_modules/chevrotain/src/parse/parser/traits/looksahead.ts","../node_modules/chevrotain/src/parse/cst/cst.ts","../node_modules/chevrotain/src/lang/lang_extensions.ts","../node_modules/chevrotain/src/parse/cst/cst_visitor.ts","../node_modules/chevrotain/src/parse/parser/traits/tree_builder.ts","../node_modules/chevrotain/src/parse/parser/traits/lexer_adapter.ts","../node_modules/chevrotain/src/parse/parser/traits/recognizer_api.ts","../node_modules/chevrotain/src/parse/parser/traits/recognizer_engine.ts","../node_modules/chevrotain/src/parse/parser/traits/error_handler.ts","../node_modules/chevrotain/src/parse/parser/traits/context_assist.ts","../node_modules/chevrotain/src/parse/parser/traits/gast_recorder.ts","../node_modules/chevrotain/src/parse/parser/traits/perf_tracer.ts","../node_modules/chevrotain/src/parse/parser/utils/apply_mixins.ts","../node_modules/chevrotain/src/parse/parser/parser.ts"],"sourcesContent":["/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","import Stemmer from './stemmer.js';\nimport Tokenizer from './tokenizer.js';\nimport Conjugator from './conjugator.js';\nimport Lexicon from './lexicon.js';\nimport Tagger from './tagger.js';\nimport Inflector from './inflector.js';\nimport Analyzer from './analyzer.js';\nimport Concorder from './concorder.js';\nimport RandGen from './randgen.js';\nimport RiMarkov from './markov.js';\n\nimport { RiScript, RiGrammar } from 'riscript';\n\n/** @module rita */\n\n/**\n * @class RiTa\n * @memberof module:rita  \n */\nclass RiTa {\n\n  /**\n   * Create a RiTa grammar instance\n   * @param {object} [rules] - the rules of the grammar\n   * @param {object} [context] - the context of the grammar\n   * @param {object} [options] - options for the grammar\n   * @returns {RiGrammar} - a new RiGrammar instance\n   */\n  static grammar(rules, context, options) {\n    return new RiGrammar(rules, context, { ...options, RiTa });\n  }\n\n  /**\n   * Add a transform function to the RiScript parser\n   * @param {string} name - the name of the transform\n   * @param {function} definition - the transform function\n   */\n  static addTransform(name, definition) {\n    RiTa.riscript.addTransform(name, definition);\n  }\n\n  /**\n   * Remove a transform function from the RiScript parser\n   * @param {string} name - the name of the transform to remove\n   */\n  static removeTransform(name) {\n    RiTa.riscript.removeTransform(name);\n  }\n\n  /**\n   * Returns the names of all current transform functions\n   * @returns {string[]} the names of all transforms\n   */\n  static getTransforms() {\n    return RiTa.riscript.getTransforms();\n  }\n\n  /**\n   * Adds the appropriate article ('a' or 'an') to the word, according to its phonemes (useful as a transform function)\n   * @param {string} word - the word to transform\n   * @returns {string} - the word with an article, e.g., 'honor' -> 'an honor'\n   */\n  static articlize(word) {\n    // @ts-ignore\n    return RiScript.articlize(word, RiTa);\n  }\n\n  /**\n   * Evaluates the input script via the RiScript parser\n   * @param {string} script - the script to evaluate\n   * @param {object} [context] - the context to evaluate the script ing\n   * @param {object} [options] - options for the evaluation\n   * @param {boolean} [options.trace] - whether to trace the evaluation\n   * @returns {string} the result of the evaluation\n   */\n  static evaluate(script, context, options) {\n    return RiTa.riscript.evaluate(script, context, { ...options });\n  }\n\n  /**\n   * Creates a new RiMarkov object\n   * @param {number} n - an int representing the n-factor of the markov chain \n   * @param {object} [options] - options for the markov chain\n   * @param {string|string[]} [options.text] - a text string, or array of sentences, to add to the model (same as via model.addText()\n   * @param {number} [options.maxLengthMatch] - # of words allowed in result to match a sequence in the input, default=∞\n   * @param {number} [options.maxAttempts=999] - max attempts before to complete one ore more generations before erroring, default=999\n   * @param {function} [options.tokenize] - custom tokenizer with tokenize() method, defaults to RiTa.tokenize()\n   * @param {function} [options.untokenize] - custom untokenizer with untokenize() method, defaults to RiTa.untokenize()\n   * @param {boolean} [options.disableInputChecks=false] - if true, allow result to be present in the input, default\n   * @param {boolean} [options.trace] - output trace info to the console\n   * @returns {RiMarkov}\n   */\n  static markov(n, options) {\n    return new RiMarkov(n, options);\n  }\n\n  /**\n   * Return a list of occurrences of the key word in the Key-Word-In-Context (KWIC) model.\n   * @overload\n   * @param {string} keyword \n   * @param {object} [options]  \n   * @param {number} [options.numWords] - the number of words to include in the context\n   * @param {string} [options.text] - the text as input for the KWIC model\n   * @param {string[]} [options.words] - the array of words to be used as input for the KWIC model\n   * @returns {string[]} all the occurrences of the keyword in the model, each with no more \n   * than 'numWords' words of context on either side\n   * @overload\n   * @param {string} keyword\n   * @param {number} text - the number of words to include in the context\n   * @returns {string[]} all the occurrences of the keyword in the model, each with no more \n   * than 'numWords' words of context on either side\n   */\n  static kwic(keyword, options) {\n    return RiTa.concorder.kwic(keyword, options);\n  }\n\n  /**\n   * Creates a concordance, a list of words with their frequency of occurence, from the given text and options.\n   * @param {string} text - the text from which to create the concordance\n   * @param {object} [options] - options for the concordance\n   * @param {boolean} [options.ignoreCase=false] - whether to ignore case when creating the concordance\n   * @param {boolean} [options.ignoreStopWords=false] - whether to ignore stop words like\n   *  'the', 'and', 'a', 'of', etc, as specified in RiTa.STOP_WORDS\n   * @param {boolean} [options.ignorePunctuation=false] - whether to ignore punctuation when creating the concordance\n   * @param {string[]} [options.wordsToIgnore=null] - words to ignore when creating the concordance (alternate stop-words)\n   * @returns {object} the concordance, an object with words as keys and frequencies as values\n   */\n  static concordance(text, options) {\n    return RiTa.concorder.concordance(text, options);\n  }\n\n  /**\n   * Returns a random ordering of the input array or a random ordering of integers from 1 to k\n   * @overload\n   * @param {object[]} array - the array to shuffle\n   * @returns {object[]} the input array in a random order\n   * @overload\n   * @param {number} k - the number of integers to return\n   * @returns {number[]} an array of arrays of integers from 1 to k in random order \n   */\n  static randomOrdering(arrayOrInt) {\n    return RiTa.randomizer.randomOrdering(arrayOrInt);\n  }\n\n  /**\n   * Sets the seed for the RiTa random number generator\n   * @param {number} seed - the seed to set \n   */\n  static randomSeed(seed) {\n    RiTa.randomizer.seed(seed);\n  }\n\n  /**\n   * Returns true if the sentence is a question, else false\n   * @param {string} sentence \n   * @returns {boolean} - true if the sentence is a question, else false\n   */\n  static isQuestion(sentence) {\n    return RiTa.QUESTIONS.includes\n      (RiTa.tokenize(sentence)[0].toLowerCase());\n  }\n\n  /**\n   * Returns true if the character is a vowel, else false\n   * @param {string} char \n   * @returns {boolean} - true if the character is a vowel, else false\n   */\n  static isVowel(char) { // remove?\n    return char && char.length === 1 && RiTa.VOWELS.includes(char);\n  }\n\n  /**\n   * Returns true if the character is a consonant, else false\n   * @param {string} char \n   * @returns {boolean} - true if the character is a consonant, else false\n   */\n  static isConsonant(char) {\n    return (char && char.length === 1 && !RiTa.VOWELS.includes(char)\n      && IS_LETTER.test(char));\n  }\n\n  /**\n   * Capitalizes the first letter of the input string, leaving others unchanged\n   * @param {string} string - the string to capitalize\n   * @returns {string} the capitalized string\n   */\n  static capitalize(string) {\n    return string ? string[0].toUpperCase() + string.substring(1) : '';\n  }\n\n  /**\n   * Return a random word from the lexicon matching the specified criteria \n   * (length, syllable-count, phonemic pattern, stress pattern, part-of-speech, etc.).\n   * @param {(string|RegExp)} [pattern] - the pattern to match\n   * @param {object} [options] \n   * @param {number} [options.minLength=4] - the minimum length of the word\n   * @param {number} [options.maxLength=-1] - the maximum length of the word\n   * @param {number} [options.numSyllables=null] - the number of syllables in the word \n   * @param {number} [options.limit=10] - the maximum number of results to retur   \n   * @param {string} [options.pos=null] - the part-of-speech of the word to return,\n   *  either from the Penn tag set or the simplified tag set [a, r, v, n]\n   * @param {RegExp} [options.pattern=null] - the spelling or phonemic pattern to match\n   * @param {string} [options.type=null] - the type of regex or string pattern to match, \n   * options are 'stresses' or 'phones' or 'letters' (the default)\n   * @returns {string} a random word matching the criteria in the options object \n   */\n  static randomWord(pattern, options) {\n    return RiTa.lexicon.randomWord(pattern, options);\n  }\n\n  /**\n   * Returns words that rhyme with the given word. Two words are considered as rhyming if\n   * their final stressed vowel and all following phonemes are identical.\n   * @param {string} word \n   * @param {object} [options]\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @returns {Promise<string[]>} an array of rhymes that match criteria in the options object \n   */\n  static async rhymes(word, options) {\n    return await RiTa.lexicon.rhymes(word, options);\n  }\n\n  /**\n   * Returns words that rhyme with the given word. Two words are considered as rhyming if\n   * their final stressed vowel and all following phonemes are identical.\n   * @param {string} word1 - the first word to compare\n   * @param {string} word2 - the second word to compare\n   * @returns {boolean}  true if the two words rhyme, else false\n   */\n  static isRhyme(word1, word2) {\n    return RiTa.lexicon.isRhyme(word1, word2);\n  }\n\n\n  /**\n   * Finds alliterations by comparing the phonemes of the input string to those\n   *  of each word in the lexicon via a minimum-edit-distance metric.\n   * @param {string} word \n   * @param {object} [options]\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @returns {Promise<string[]>} an array of alliterations matching criteria in the options object \n   */\n  static async alliterations(word, options) {\n    return await RiTa.lexicon.alliterations(word, options);\n  }\n\n  /**\n   * Returns true if the word is in the lexicon, else false\n   * @param {string} word - the word to check\n   * @param {object} [options] - options for the search\n   * @param {boolean} [options.noDerivations=false] - whether to ignore derivations and only search for raw words\n   * @returns {boolean} true if the word is in the lexicon, else false\n   */\n  static hasWord(word, options) {\n    return RiTa.lexicon.hasWord(word, options);\n  }\n\n  /**\n   * Returns true if the word is an abbreviation, else false\n   * @param {string} input - the word to check\n   * @param {object} [options] - options for the search\n   * @param {boolean} [options.caseSensitive=false] - whether to ignore case when checking for abbreviations\n   * @returns {boolean} true if the word is an abbreviation, else false\n   */\n  static isAbbrev(input, options) {\n    if (typeof input === 'string') {\n      if (options?.caseSensitive) return RiTa.ABRV.includes(input.trim());\n      let check = input.trim().toLowerCase();\n      return RiTa.ABRV.some(a => a.toLowerCase() === check);\n    }\n  }\n\n  /**\n   * Returns true if the two words are an alliteration (if their first stressed consonants match). \n   * Note: returns true if wordA.equals(wordB) and false if either (or both) are null.\n   * @param {string} word1 - the first word to compare\n   * @param {string} word2 - the second word to compare\n   * @returns {boolean}  true if the two words are an alliteration, else false\n   */\n  static isAlliteration(word1, word2) {\n    return RiTa.lexicon.isAlliteration(word1, word2);\n  }\n\n  /**\n   * Compares the letters of the input word (using a version of the Levenstein min-edit distance algorithm) \n   * to each word in the lexicon, returning the set of closest matches that also match the criteria in the options object.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return  (pass -1 to return all matches) \n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set or the simplified tag set [a, r, v, n]\n   * @returns {Promise<string[]>} an array of words matching the spelling pattern and criteria in the options object \n   */\n  static async spellsLike(word, options) {\n    return await RiTa.lexicon.spellsLike(word, options);\n  }\n\n  /**\n   * Compares the phonemes of the input pattern (using a version of the Levenstein min-edit distance algorithm)\n   *  to each word in the lexicon, returning the set of closest matches that also match the criteria in the options object.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {boolean} [options.matchSpelling=false] if true will also attempt to match spelling by returning an intersection with RiTa.spellsLike()\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @returns {Promise<string[]>} an array of words matching the phonemic pattern and criteria in the options object \n   */\n  static async soundsLike(word, options) {\n    return await RiTa.lexicon.soundsLike(word, options);\n  }\n\n  /**\n   * Generates part-of-speech tags for each word in the input with tags \n   * from the Penn tag set or the simplified tag set [a, r, v, n].\n   * @param {(string|string[])} word - the word or words to tag\n   * @param {object} [options] - options for the tagging\n   * @param {boolean} [options.simple] - use simple tags (noun=n,verb=v,adverb=a,adjective=r)\n   * @returns {string|string[]} - an array of part-of-speech tags for each word in the input\n   */\n  static pos(word, options) {\n    if (options && 'inline' in options) {\n      throw Error('Use RiTa.posInline() instead');\n    }\n    return RiTa.tagger.tag(word, options);\n  }\n\n  /**\n   * Returns true if the word has a noun form. That is, if any of its possible\n   *  parts of speech are any variant of a noun in the Penn tag set(e.g. nn, nns, nnp, nnps).\n   * @param {string} word - the word to check\n   * @returns {string} - true if the word is a noun, else false\n   */\n  static isNoun(word) {\n    return RiTa.tagger.isNoun(word);\n  }\n\n  /**\n   * Returns true if word has an adjective form. That is, if any of its possible parts of speech\n   *  are any variant of an adjective in the Penn tag set (e.g. jj, jjr, jjs).\n   * @param {string} word - the word to check\n   * @returns {string} - true if the word is an adjective, else false\n   */\n  static isAdjective(word) {\n    return RiTa.tagger.isAdjective(word);\n  }\n\n  /**\n   * Returns true if the word has an adverb form. That is, if any of its possible parts of speech \n   * are any variant of an adverb in the Penn tag set (e.g. rb, rbr, rbs).\n   * @param {string} word - the word to check\n   * @returns {string} - true if the word is an adverb, else false\n   */\n  static isAdverb(word) {\n    return RiTa.tagger.isAdverb(word);\n  }\n\n  /**\n   * Returns true for if word has a verb form. That is, if any of its possible \n   * parts of speech are any variant of a verb in the Penn tag set (e.g. vb, vbg, vbd, vbp, vbz).\n   * @param {string} word - the word to check\n   * @returns {string} - true if the word is a verb, else false\n   */\n  static isVerb(word) {\n    return RiTa.tagger.isVerb(word);\n  }\n\n  /**\n   * Returns true if every character of 'text' is a punctuation character.\n   * @param {string} text \n   * @returns {boolean} true if every character of 'text' is punctuation, else false\n   */\n  static isPunct(text) {\n    return text && text.length && ONLY_PUNCT.test(text);\n  }\n\n\n  /**\n   * Tags the input string with part-of-speech tags, either from the Penn tag set or the simplified tag set [a, r, v, n].\n   * @param {string} sentence - the sentence to tag\n   * @param {object} [options] - options for the tagging\n   * @param {boolean} [options.simple=false] - use the simplified tag set [a, r, v, n]\n   * @returns {string} the tagged sentence\n   */\n  static posInline(sentence, options) {\n    return RiTa.tagger.tag(sentence, { ...options, inline: true });\n  }\n\n  /**\n   * Return the singular form of the input word\n   * @param {string} word - the word to singularize\n   * @returns {string} the singular form of the input word\n   */\n  static singularize(word) {\n    return RiTa.inflector.singularize(word);\n  }\n\n  /**\n   * Return the plural form of the input word\n   * @param {string} word - the word to pluralize\n   * @returns {string} the plural form of the input word\n   */\n  static pluralize(word) {\n    return RiTa.inflector.pluralize(word);\n  }\n\n  /**\n   * Searches for words in the lexicon matching the given criteria, either by length, syllable-count, \n   * spelling, phonemes, stresses, part-of-speech, etc. If no regex or options are supplied, the full set of words is returned.\n   * @param {(string|RegExp)} [pattern] - the pattern to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @param {string} [options.type] - the type of regex or string pattern to match, options are 'stresses'\n   *  or 'phones' or 'letters' (the default)\n   * @returns {Promise<string[]>} an array of words matching the criteria in both the pattern and the options object \n   */\n  static async search(pattern, options) {\n    return await RiTa.lexicon.search(pattern, options);\n  }\n\n  /**\n    * Returns an array containing all unique alphabetical words (tokens) in the text.\n    * Punctuation and case are ignored unless specified otherwise.\n    * @param {string} text - The text from which to extract the tokens\n    * @param {object} [options] - The options\n    * @param {boolean} [options.caseSensitive=false] - Whether to pay attention to case\n    * @param {boolean} [options.ignoreStopWords=false] - Whether to ignore words such as 'the', 'and', 'a', 'of', etc,\n    *  as specified in RiTa.STOP_WORDS\n    * @param {boolean} [options.splitContractions=false] - Whether to convert contractions\n    *  (e.g., \"I'd\" or \"she'll\") into multiple individual tokens\n    * @param {boolean} [options.includePunct=false] - Whether to include punctuation in the results\n    * @param {boolean} [options.sort=false] - Whether to sort the tokens before returning them\n    * @returns {string[]} Array of tokens\n    */\n  static tokens(text, options = {\n    caseSensitive: false,\n    ignoreStopWords: false,\n    splitContractions: false,\n    includePunct: false,\n    sort: false\n  }) {\n    return RiTa.tokenizer.tokens(text, options);\n  }\n\n\n  /**\n   * Tokenizes an input string into words, according to the Penn Treebank conventions\n   * @param {string} input - The text to tokenize\n   * @param {object} [options] - The options\n   * @param {RegExp} [options.regex=null] - An optional custom regex to split on\n   * @param {boolean} [options.splitHyphens=false] - Whether to split hyphenated words \n   * (e.g., \"mother-in-law\") into multiple individual tokens\n   * @param {boolean} [options.splitContractions=false] - Whether to split contractions \n   * (e.g., \"I'd\" or \"she'll\") into multiple individual tokens\n   * @returns {string[]} Array of tokens\n   */\n  static tokenize(input, options) {\n    return RiTa.tokenizer.tokenize(input, options);\n  }\n\n  /**\n   * Joins an array (of words and punctuation) into a sentence, according to \n   * the Penn Treebank conventions. The inverse of RiTa.tokenize().\n   * @param {string[]} input - The array of words to join\n   * @param {string} [delim=' '] - The delimiter to use between words, or a space by default\n   * @returns {string} The joined sentence\n   */\n  static untokenize(input, delim = ' ') {\n    return RiTa.tokenizer.untokenize(input, delim);\n  }\n\n  /**\n   * Split the input text into sentences following using Penn Treebank conventions and the specified options.\n   * @param {string} text - The text to split\n   * @param {(string|RegExp)} [pattern] - An optional custom regex to split on\n   * @returns {string[]} An array of sentences\n   */\n  static sentences(text, pattern) {\n    return RiTa.tokenizer.sentences(text, pattern);\n  }\n\n  /**\n   * Returns true if the word is a 'stop word', a commonly used word that is often ignored in text processing. \n   * To use your own list, set RiTa.STOP_WORDS to a new array of (lowercase) words.\n   * @param {string} word - the word to check\n   * @returns {boolean} true if the word is a stop word, else false\n   */\n  static isStopWord(word) {\n    return RiTa.STOP_WORDS.includes(word.toLowerCase());\n  }\n\n  /**\n   * Extracts base roots from a word according to the Pling stemming algorithm.\n   * @param {string} word - the word to stem \n   * @returns {string} the base root of the word\n   */\n  static stem(word) {\n    return Stemmer.stem(word);\n  }\n\n  /**\n   * Returns the present participle of the input word (e.g., \"walking\" for \"walk\").\n   * @param {string} verbWord - the word to get the present participle of\n   * @returns {string} the present participle of the input word\n   */\n  static presentPart(verbWord) {\n    return RiTa.conjugator.presentPart(verbWord);\n  }\n\n  /**\n   * Returns the past participle of the input word (e.g., \"walked\" for \"walk\").\n   * @param {string} verbWord \n   * @returns {string} the past participle of the input word\n   */\n  static pastPart(verbWord) {\n    return RiTa.conjugator.pastPart(verbWord);\n  }\n\n  /**\n   * Conjugates the 'verb' according to the specified options (tense, person, number, etc.)\n   * @param {string} verbWord \n   * @param {object} [options]\n   * @param {number} [options.tense] - the tense of the verb, either RiTa.PAST, RiTa.PRESENT, or RiTa.FUTURE\n   * @param {number} [options.person] - the person of the verb, either RiTa.FIRST, RiTa.SECOND, or RiTa.THIRD\n   * @param {number} [options.number] - the number of the verb, either RiTa.SINGULAR or RiTa.PLURAL\n   * @param {number} [options.form] - the form of the verb, either RiTa.INFINITIVE or RiTa.GERUND\n   * @param {boolean} [options.passive] - whether the verb should be passive\n   * @param {boolean} [options.progressive] - whether the verb should be progressive\n   * @param {boolean} [options.perfect] - whether the verb should be perfect\n   * @param {boolean} [options.interrogative] - whether the verb should be in interrogative form\n   * @returns {string} the conjugated verb\n   */\n  static conjugate(verbWord, options) {\n    return RiTa.conjugator.conjugate(verbWord, options);\n  }\n\n  /**\n   * Analyzes the input and returns a new string containing the stresses for each syllable of the input text .\n   * @param {string} input - the text to analyze\n   * @param {object} [options] - options for the analysis\n   * @returns {string} a string containing the stresses for each syllable of the input text\n   */\n  static stresses(input, options) {\n    return RiTa.analyzer.analyze(input, options).stresses;\n  }\n\n  /**\n   * Analyzes the input and returns a new string containing the syllables of the input text.\n   * @param {string} input - the text to analyze\n   * @param {object} [options] - options for the analysis\n   * @returns {string} a string containing the syllables of the input text\n   */\n  static syllables(input, options) {\n    return RiTa.analyzer.analyze(input, options).syllables;\n  }\n\n  /**\n   * Analyzes the input and returns a new string containing the phonemes of the input text.\n   * @param {string} input - the text to analyze\n   * @param {object} [options] - options for the analysis\n   * @returns {string} a string containing the phones of the input text\n   */\n  static phones(input, options) {\n    return RiTa.analyzer.analyze(input, options).phones;\n  }\n\n  /**\n   * Analyzes the input to compute a set of features for the input,\n   * including phonemes, syllables, stresses, and part-of-speech tags.\n   * @param {string} input - the text to analyze\n   * @param {object} [options] - options for the analysis\n   * @param {boolean} [options.simple=false] - whether to use the simplified tag set [a, r, v, n]\n   * @returns {object} an object containing the features of the input text (phones, syllables, stresses, pos), or the features inline\n   */\n  static analyze(input, options) {\n    return RiTa.analyzer.analyze(input, options);\n  }\n\n  ////////////////////////////// lex-sync ////////////////////////////\n\n  /**\n   * A synchronous version of RiTa.spellsLike(). It compares the letters of the input word \n   * (using a version of the Levenstein min-edit distance algorithm) to each word in the lexicon,\n   *  returning the set of closest matches that also match the criteria in the options object.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words\n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   * or the simplified tag set [a, r, v, n]\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @return {string[]} an array of words matching the spelling pattern and criteria in the options object\n   */\n  static spellsLikeSync(word, options) {\n    return RiTa.lexicon.spellsLikeSync(word, options);\n  }\n\n  /**\n   * A synchronous version of RiTa.lexicon.soundsLike(). It compares the phonemes of the input pattern (using a version of the Levenstein min-edit distance algorithm)\n   *  to each word in the lexicon, returning the set of closest matches that also match the criteria in the options object.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words \n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.matchSpelling=false] if true will also attempt to match spelling by returning an intersection with RiTa.spellsLike()\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @return {string[]} an array of words matching the phonemic pattern and criteria in the options object \n   */\n  static soundsLikeSync(word, options) {\n    return RiTa.lexicon.soundsLikeSync(word, options);\n  }\n\n  /**\n   * Synchronous version of RiTa.rhymes(). Returns words that rhyme with the given word. \n   * Two words are considered as rhyming if their final stressed vowel and all following phonemes are identical.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words\n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set  \n   * or the simplified tag set [a, r, v, n]\n   * @return {string[]} an array of rhymes that match criteria in the options object\n   */\n  static rhymesSync(word, options) {\n    return RiTa.lexicon.rhymesSync(word, options);\n  }\n\n  /**\n   * A synchronous version of RiTa.search(). Searches for words in the lexicon matching\n   *  the given criteria, either by length, syllable-count, spelling, phonemes, stresses, \n   * part-of-speech, etc.\n   * @param {(string|RegExp)} [pattern] - the pattern to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words\n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   * or the simplified tag set [a, r, v, n]\n   * @param {string} [options.type] - the type of regex or string pattern to match, options are 'stresses' or 'phones' or 'letters' (the default)\n   * @return {string[]} an array of words matching the criteria in both the pattern and the options object\n   */\n  static searchSync(pattern, options) {\n    return RiTa.lexicon.searchSync(pattern, options);\n  }\n\n  /**\n   * A synchronous version of RiTa.alliterations(). Finds alliterations by comparing the phonemes\n   * of the input string to those of each word in the lexicon via a minimum-edit-distance metric.\n   * @param {string} word - the word to match\n   * @param {object} [options] - options for the search\n   * @param {number} [options.minLength=4] - the minimum length of the words\n   * @param {number} [options.maxLength] - the maximum length of the words\n   * @param {number} [options.numSyllables] - the number of syllables in the words\n   * @param {number} [options.limit=10] - the maximum number of results to return (pass -1 to return all matches)\n   * @param {boolean} [options.shuffle=false] - whether to shuffle the results before returning them\n   * @param {string} [options.pos] - the part-of-speech of the words to return, either from the Penn tag set\n   *  or the simplified tag set [a, r, v, n]\n   * @return {string[]} an array of alliterations matching criteria in the options object\n   */\n  static alliterationsSync(word, options) {\n    return RiTa.lexicon.alliterationsSync(word, options);\n  }\n\n  ////////////////////////////// niapa /////////////////////////////\n\n  /**\n   * Returns a random integer from a range\n   * The version of random() with one parameter returns a random integer from 0 up to but not including the number. \n   * The version of random() with two parameters returns a random integer from the first number up to but not including the second.\n   * @param {number} param1 - the first parameter\n   * @param {number} [param2] - the second optional parameter\n   * @returns {number} a random integer from the range\n   */\n  static randi(param1, param2) {\n    return Math.floor(RiTa.random(...arguments)); // keep args\n  }\n\n  /**\n   * Returns a random number or a random element from an array.\n   * The version of random() with no parameters returns a random number from 0 up to but not including 1.\n   * The version of random() with one parameter works one of two ways. If the argument passed is a number, random() returns a random number from 0 up to but not including the number. \n   * If the argument passed is an array, random() returns a random element from that array.\n   * The version of random() with two parameters returns a random number from the first number up to but not including the second.   \n   * @param {number|object[]} [param1] - the minimum value of the random number, or an array of values to choose from\n   * @param {number} [param2] - the maximum value of the random number\n   * @returns {number|object} a random number or a random element from the array\n   */\n  static random(param1, param2) {\n    return RiTa.randomizer.random(...arguments); // keep args\n  }\n}\n\n// CLASSES (for testing)\nRiTa.RiGrammar = RiGrammar;\nRiTa.RiMarkov = RiMarkov;\nRiTa.Stemmer = Stemmer;\n\n// COMPONENTS\nRiTa.randomizer = new RandGen();\nRiTa.tagger = new Tagger(RiTa);\nRiTa.analyzer = new Analyzer(RiTa);\nRiTa.concorder = new Concorder(RiTa);\nRiTa.tokenizer = new Tokenizer(RiTa);\nRiTa.inflector = new Inflector(RiTa);\nRiTa.lexicon = new Lexicon(RiTa);\nRiTa.conjugator = new Conjugator(RiTa);\n\n// BACKREFS\nRiMarkov.parent = RiTa;\nStemmer.tokenizer = RiTa.tokenizer;\n\n// MESSAGES\nRiTa.SILENT = false;\nRiTa.SILENCE_LTS = false;\n\n// CONSTANTS\nRiTa.VERSION = '3.0.28'; // injected by build script\nRiTa.FIRST = 1;\nRiTa.SECOND = 2;\nRiTa.THIRD = 3;\nRiTa.PAST = 4;\nRiTa.PRESENT = 5;\nRiTa.FUTURE = 6;\nRiTa.SINGULAR = 7;\nRiTa.PLURAL = 8;\nRiTa.NORMAL = 9;\nRiTa.STRESS = '1';\nRiTa.NOSTRESS = '0';\nRiTa.PHONE_BOUNDARY = '-';\nRiTa.WORD_BOUNDARY = \" \";\nRiTa.SYLLABLE_BOUNDARY = \"/\";\nRiTa.SENTENCE_BOUNDARY = \"|\";\nRiTa.VOWELS = \"aeiou\";\n\n// RiTa.MODAL_EXCEPTIONS = [\"hardness\", \"shortness\"];\nRiTa.PHONES = ['aa', 'ae', 'ah', 'ao', 'aw', 'ay', 'b', 'ch', 'd', 'dh', 'eh', 'er', 'ey', 'f', 'g', 'hh', 'ih', 'iy', 'jh', 'k', 'l', 'm', 'n', 'ng', 'ow', 'oy', 'p', 'r', 's', 'sh', 't', 'th', 'uh', 'uw', 'v', 'w', 'y', 'z', 'zh'];\nRiTa.ABRV = [\"Adm.\", \"Capt.\", \"Cmdr.\", \"Col.\", \"Dr.\", \"Gen.\", \"Gov.\", \"Lt.\", \"Maj.\", \"Messrs.\", \"Mr.\", \"Mrs.\", \"Ms.\", \"Prof.\", \"Rep.\", \"Reps.\", \"Rev.\", \"Sen.\", \"Sens.\", \"Sgt.\", \"Sr.\", \"St.\", \"A.k.a.\", \"C.f.\", \"I.e.\", \"E.g.\", \"Vs.\", \"V.\", \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"Mar.\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"];\nRiTa.QUESTIONS = [\"was\", \"what\", \"when\", \"where\", \"which\", \"why\", \"who\", \"will\", \"would\", \"who\", \"how\", \"if\", \"is\", \"could\", \"might\", \"does\", \"are\", \"have\"];\nRiTa.STOP_WORDS = [\"and\", \"a\", \"of\", \"in\", \"i\", \"you\", \"is\", \"to\", \"that\", \"it\", \"for\", \"on\", \"have\", \"with\", \"this\", \"be\", \"not\", \"are\", \"as\", \"was\", \"but\", \"or\", \"from\", \"my\", \"at\", \"if\", \"they\", \"your\", \"all\", \"he\", \"by\", \"one\", \"me\", \"what\", \"so\", \"can\", \"will\", \"do\", \"an\", \"about\", \"we\", \"just\", \"would\", \"there\", \"no\", \"like\", \"out\", \"his\", \"has\", \"up\", \"more\", \"who\", \"when\", \"don't\", \"some\", \"had\", \"them\", \"any\", \"their\", \"it's\", \"only\", \"which\", \"i'm\", \"been\", \"other\", \"were\", \"how\", \"then\", \"now\", \"her\", \"than\", \"she\", \"well\", \"also\", \"us\", \"very\", \"because\", \"am\", \"here\", \"could\", \"even\", \"him\", \"into\", \"our\", \"much\", \"too\", \"did\", \"should\", \"over\", \"want\", \"these\", \"may\", \"where\", \"most\", \"many\", \"those\", \"does\", \"why\", \"please\", \"off\", \"going\", \"its\", \"i've\", \"down\", \"that's\", \"can't\", \"you're\", \"didn't\", \"another\", \"around\", \"must\", \"few\", \"doesn't\", \"the\", \"every\", \"yes\", \"each\", \"maybe\", \"i'll\", \"away\", \"doing\", \"oh\", \"else\", \"isn't\", \"he's\", \"there's\", \"hi\", \"won't\", \"ok\", \"they're\", \"yeah\", \"mine\", \"we're\", \"what's\", \"shall\", \"she's\", \"hello\", \"okay\", \"here's\", \"less\", \"didn't\", \"said\", \"over\", \"this\", \"that\", \"just\", \"then\", \"under\", \"some\"];\nRiTa.MASS_NOUNS = [\"abalone\", \"asbestos\", \"barracks\", \"bathos\", \"breeches\", \"beef\", \"britches\", \"chaos\", \"chinese\", \"cognoscenti\", \"clippers\", \"corps\", \"cosmos\", \"crossroads\", \"diabetes\", \"ethos\", \"gallows\", \"graffiti\", \"herpes\", \"innings\", \"lens\", \"means\", \"measles\", \"mews\", \"mumps\", \"news\", \"pasta\", \"pathos\", \"pincers\", \"pliers\", \"proceedings\", \"rabies\", \"rhinoceros\", \"sassafras\", \"scissors\", \"series\", \"shears\", \"species\", \"tuna\", \"acoustics\", \"aesthetics\", \"aquatics\", \"basics\", \"ceramics\", \"classics\", \"cosmetics\", \"dialectics\", \"deer\", \"dynamics\", \"ethics\", \"harmonics\", \"heroics\", \"mechanics\", \"metrics\", \"ooze\", \"optics\", \"physics\", \"polemics\", \"pyrotechnics\", \"statistics\", \"tactics\", \"tropics\", \"bengalese\", \"bengali\", \"bonsai\", \"booze\", \"cellulose\", \"mess\", \"moose\", \"burmese\", \"chinese\", \"colossus\", \"congolese\", \"discus\", \"electrolysis\", \"emphasis\", \"expertise\", \"flu\", \"fructose\", \"gauze\", \"glucose\", \"grease\", \"guyanese\", \"haze\", \"incense\", \"japanese\", \"lebanese\", \"malaise\", \"mayonnaise\", \"maltese\", \"music\", \"money\", \"menopause\", \"merchandise\", \"olympics\", \"overuse\", \"paradise\", \"poise\", \"potash\", \"portuguese\", \"prose\", \"recompense\", \"remorse\", \"repose\", \"senegalese\", \"siamese\", \"singhalese\", \"sleaze\", \"sioux\", \"sudanese\", \"suspense\", \"swiss\", \"taiwanese\", \"vietnamese\", \"unease\", \"aircraft\", \"anise\", \"antifreeze\", \"applause\", \"archdiocese\", \"apparatus\", \"asparagus\", \"bellows\", \"bison\", \"bluefish\", \"bourgeois\", \"bream\", \"brill\", \"butterfingers\", \"cargo\", \"carp\", \"catfish\", \"chassis\", \"clone\", \"clones\", \"clothes\", \"chub\", \"cod\", \"codfish\", \"coley\", \"contretemps\", \"crawfish\", \"crayfish\", \"cuttlefish\", \"dice\", \"dogfish\", \"doings\", \"dory\", \"downstairs\", \"eldest\", \"earnings\", \"economics\", \"electronics\", \"firstborn\", \"fish\", \"flatfish\", \"flounder\", \"fowl\", \"fry\", \"fries\", \"works\", \"goldfish\", \"golf\", \"grand\", \"grief\", \"haddock\", \"hake\", \"halibut\", \"headquarters\", \"herring\", \"hertz\", \"honey\", \"horsepower\", \"goods\", \"hovercraft\", \"ironworks\", \"kilohertz\", \"ling\", \"shrimp\", \"swine\", \"lungfish\", \"mackerel\", \"macaroni\", \"megahertz\", \"moorfowl\", \"moorgame\", \"mullet\", \"nepalese\", \"offspring\", \"pants\", \"patois\", \"pekinese\", \"perch\", \"pickerel\", \"pike\", \"potpourri\", \"precis\", \"quid\", \"rand\", \"rendezvous\", \"roach\", \"salmon\", \"samurai\", \"seychelles\", \"shad\", \"sheep\", \"shellfish\", \"smelt\", \"spaghetti\", \"spacecraft\", \"starfish\", \"stockfish\", \"sunfish\", \"superficies\", \"sweepstakes\", \"smallpox\", \"swordfish\", \"tennis\", \"tobacco\", \"triceps\", \"trout\", \"tunafish\", \"turbot\", \"trousers\", \"turf\", \"dibs\", \"undersigned\", \"waterfowl\", \"waterworks\", \"waxworks\", \"wildfowl\", \"woodworm\", \"yen\", \"aries\", \"pisces\", \"forceps\", \"jeans\", \"mathematics\", \"odds\", \"politics\", \"remains\", \"aids\", \"wildlife\", \"shall\", \"would\", \"may\", \"might\", \"ought\", \"should\", \"acne\", \"admiration\", \"advice\", \"air\", \"anger\", \"anticipation\", \"assistance\", \"awareness\", \"bacon\", \"baggage\", \"blood\", \"bravery\", \"chess\", \"clay\", \"clothing\", \"coal\", \"compliance\", \"comprehension\", \"confusion\", \"consciousness\", \"cream\", \"darkness\", \"diligence\", \"dust\", \"education\", \"empathy\", \"enthusiasm\", \"envy\", \"equality\", \"equipment\", \"evidence\", \"feedback\", \"fitness\", \"flattery\", \"foliage\", \"fun\", \"furniture\", \"garbage\", \"gold\", \"gossip\", \"grammar\", \"gratitude\", \"gravel\", \"guilt\", \"happiness\", \"hardware\", \"hate\", \"hay\", \"health\", \"heat\", \"help\", \"hesitation\", \"homework\", \"honesty\", \"honor\", \"honour\", \"hospitality\", \"hostility\", \"humanity\", \"humility\", \"ice\", \"immortality\", \"independence\", \"information\", \"integrity\", \"intimidation\", \"jargon\", \"jealousy\", \"jewelry\", \"justice\", \"knowledge\", \"literacy\", \"logic\", \"luck\", \"lumber\", \"luggage\", \"mail\", \"management\", \"milk\", \"morale\", \"mud\", \"nonsense\", \"oppression\", \"optimism\", \"oxygen\", \"participation\", \"pay\", \"peace\", \"perseverance\", \"pessimism\", \"pneumonia\", \"poetry\", \"police\", \"pride\", \"privacy\", \"propaganda\", \"public\", \"punctuation\", \"recovery\", \"rice\", \"rust\", \"satisfaction\", \"schnapps\", \"shame\", \"slang\", \"software\", \"stamina\", \"starvation\", \"steam\", \"steel\", \"stuff\", \"support\", \"sweat\", \"thunder\", \"timber\", \"toil\", \"traffic\", \"tongs\", \"training\", \"trash\", \"valor\", \"vehemence\", \"violence\", \"warmth\", \"waste\", \"weather\", \"wheat\", \"wisdom\", \"work\", \"accommodation\", \"advertising\", \"aid\", \"art\", \"bread\", \"business\", \"butter\", \"calm\", \"cash\", \"cheese\", \"childhood\", \"clothing \", \"coffee\", \"content\", \"corruption\", \"courage\", \"currency\", \"damage\", \"danger\"/*, \"data\"*/, \"determination\", \"electricity\", \"employment\", \"energy\", \"entertainment\", \"failure\", \"fame\", \"fire\", \"flour\", \"food\", \"freedom\", \"friendship\", \"fuel\", \"genetics\", \"hair\", \"harm\", \"hospitality \", \"housework\", \"humour\", \"imagination\", \"importance\", \"innocence\", \"intelligence\", \"juice\", \"kindness\", \"labour\", \"lack\", \"laughter\", \"leisure\", \"literature\", \"litter\", \"love\", \"magic\", \"metal\", \"motherhood\", \"motivation\", \"nature\", \"nutrition\", \"obesity\", \"oil\", \"old age\", \"paper\", \"patience\", \"permission\", \"pollution\", \"poverty\", \"power\", \"production\", \"progress\", \"pronunciation\", \"publicity\", \"quality\", \"quantity\", \"racism\", \"rain\", \"relaxation\", \"research\", \"respect\", \"room (space)\", \"rubbish\", \"safety\", \"salt\", \"sand\", \"seafood\", \"shopping\", \"silence\", \"smoke\", \"snow\", \"soup\", \"speed\", \"spelling\", \"stress \", \"sugar\", \"sunshine\", \"tea\", \"time\", \"tolerance\", \"trade\", \"transportation\", \"travel\", \"trust\", \"understanding\", \"unemployment\", \"usage\", \"vision\", \"water\", \"wealth\", \"weight\", \"welfare\", \"width\", \"wood\", \"yoga\", \"youth\", \"homecare\", \"childcare\", \"fanfare\", \"healthcare\", \"medicare\"];\n\nRiTa.INFINITIVE = 1;\nRiTa.GERUND = 2;\n\n// For tokenization, Can't -> Can not, etc.\nRiTa.SPLIT_CONTRACTIONS = false;\n\nconst ONLY_PUNCT = /^[\\p{P}|\\+|-|<|>|\\^|\\$|\\ufffd|`]*$/u;\nconst IS_LETTER = /^[a-z\\u00C0-\\u00ff]+$/;\n\nRiTa.riscript = new RiScript({ RiTa });\n\nexport { RiTa, RiMarkov };\n","/**  @memberof module:rita */\nclass SnowballStemmer {\n\n  constructor() {\n    this.bra = 0;\n    this.ket = 0;\n    this.limit = 0;\n    this.cursor = 0;\n    this.limit_backward = 0;\n    this.current;\n  }\n\n  setCurrent(word) {\n    this.current = word;\n    this.cursor = 0;\n    this.limit = word.length;\n    this.limit_backward = 0;\n    this.bra = this.cursor;\n    this.ket = this.limit;\n  }\n\n  getCurrent() {\n    var result = this.current;\n    this.current = null;\n    return result;\n  }\n\n  ////////////////////////////////////////////////////////\n\n  in_grouping(s, min, max) {\n    if (this.cursor < this.limit) {\n      var ch = this.current.charCodeAt(this.cursor);\n      if (ch <= max && ch >= min) {\n        ch -= min;\n        if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n          this.cursor++;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  in_grouping_b(s, min, max) {\n    if (this.cursor > this.limit_backward) {\n      var ch = this.current.charCodeAt(this.cursor - 1);\n      if (ch <= max && ch >= min) {\n        ch -= min;\n        if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n          this.cursor--;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  out_grouping(s, min, max) {\n    if (this.cursor < this.limit) {\n      var ch = this.current.charCodeAt(this.cursor);\n      if (ch > max || ch < min) {\n        this.cursor++;\n        return true;\n      }\n      ch -= min;\n      if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n        this.cursor++;\n        return true;\n      }\n    }\n    return false;\n  }\n  out_grouping_b(s, min, max) {\n    if (this.cursor > this.limit_backward) {\n      var ch = this.current.charCodeAt(this.cursor - 1);\n      if (ch > max || ch < min) {\n        this.cursor--;\n        return true;\n      }\n      ch -= min;\n      if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n        this.cursor--;\n        return true;\n      }\n    }\n    return false;\n  }\n  eq_s(s_size, s) {\n    if (this.limit - this.cursor < s_size)\n      return false;\n    for (var i = 0; i < s_size; i++)\n      if (this.current.charCodeAt(this.cursor + i) != s.charCodeAt(i))\n        return false;\n    this.cursor += s_size;\n    return true;\n  }\n  eq_s_b(s_size, s) {\n    if (this.cursor - this.limit_backward < s_size)\n      return false;\n    for (var i = 0; i < s_size; i++)\n      if (this.current.charCodeAt(this.cursor - s_size + i) != s\n        .charCodeAt(i))\n        return false;\n    this.cursor -= s_size;\n    return true;\n  }\n  find_among(v, v_size) {\n    var i = 0, j = v_size, c = this.cursor, l = this.limit, common_i = 0, common_j = 0, first_key_inspected = false;\n    while (true) {\n      var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n        ? common_i\n        : common_j, w = v[k];\n      for (var i2 = common; i2 < w.s_size; i2++) {\n        if (c + common == l) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c + common) - w.s[i2];\n        if (diff)\n          break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0 || j == i || first_key_inspected)\n          break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w.s_size) {\n        this.cursor = c + w.s_size;\n        if (!w.method)\n          return w.result;\n        var res = w.method();\n        this.cursor = c + w.s_size;\n        if (res)\n          return w.result;\n      }\n      i = w.substring_i;\n      if (i < 0)\n        return 0;\n    }\n  }\n  find_among_b(v, v_size) {\n    var i = 0, j = v_size, c = this.cursor, lb = this.limit_backward, common_i = 0,\n      common_j = 0, first_key_inspected = false;\n    while (true) {\n      var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n        ? common_i\n        : common_j, w = v[k];\n      for (var i2 = w.s_size - 1 - common; i2 >= 0; i2--) {\n        if (c - common == lb) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c - 1 - common) - w.s[i2];\n        if (diff)\n          break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0 || j == i || first_key_inspected)\n          break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w.s_size) {\n        this.cursor = c - w.s_size;\n        if (!w.method)\n          return w.result;\n        var res = w.method();\n        this.cursor = c - w.s_size;\n        if (res)\n          return w.result;\n      }\n      i = w.substring_i;\n      if (i < 0)\n        return 0;\n    }\n  }\n  replace_s(c_bra, c_ket, s) {\n    var adjustment = s.length - (c_ket - c_bra), left = this.current\n      .substring(0, c_bra), right = this.current.substring(c_ket);\n    this.current = left + s + right;\n    this.limit += adjustment;\n    if (this.cursor >= c_ket)\n      this.cursor += adjustment;\n    else if (this.cursor > c_bra)\n      this.cursor = c_bra;\n    return adjustment;\n  }\n  slice_check() {\n    if (this.bra < 0 || this.bra > this.ket || this.ket > this.limit\n      || this.limit > this.current.length)\n      throw (\"faulty slice operation\");\n  }\n  slice_from(s) {\n    this.slice_check();\n    this.replace_s(this.bra, this.ket, s);\n  }\n  slice_del() {\n    this.slice_from(\"\");\n  }\n  insert(c_bra, c_ket, s) {\n    var adjustment = this.replace_s(c_bra, c_ket, s);\n    if (c_bra <= this.bra)\n      this.bra += adjustment;\n    if (c_bra <= this.ket)\n      this.ket += adjustment;\n  }\n  slice_to() {\n    this.slice_check();\n    return this.current.substring(this.bra, this.ket);\n  }\n  eq_v_b(s) {\n    return this.eq_s_b(s.length, s);\n  }\n}\n\n/**  @memberof module:rita */\nclass Among {\n\n  constructor(s, substring_i, result) {\n    if ((!s && s != \"\") || (!substring_i && (substring_i != 0)) || !result)\n      throw (\"Bad Among initialisation: s:\" + s + \", substring_i: \"\n        + substring_i + \", result: \" + result);\n    this.s_size = s.length;\n    this.s = this.toCharArray(s);\n    this.substring_i = substring_i;\n    this.result = result;\n  }\n\n  toCharArray(s) {\n    var sLength = s.length, charArr = new Array(sLength);\n    for (var i = 0; i < sLength; i++)\n      charArr[i] = s.charCodeAt(i);\n    return charArr;\n  }\n}\n\n\nconst a_0 = [\n  new Among(\"arsen\", -1, -1),\n  new Among(\"commun\", -1, -1),\n  new Among(\"gener\", -1, -1)\n],\n  a_1 = [\n    new Among(\"'\", -1, 1),\n    new Among(\"'s'\", 0, 1),\n    new Among(\"'s\", -1, 1)\n  ],\n  a_2 = [\n    new Among(\"ied\", -1, 2),\n    new Among(\"s\", -1, 3),\n    new Among(\"ies\", 1, 2),\n    new Among(\"sses\", 1, 1),\n    new Among(\"ss\", 1, -1),\n    new Among(\"us\", 1, -1)\n  ],\n  a_3 = [\n    new Among(\"\", -1, 3),\n    new Among(\"bb\", 0, 2),\n    new Among(\"dd\", 0, 2),\n    new Among(\"ff\", 0, 2),\n    new Among(\"gg\", 0, 2),\n    new Among(\"bl\", 0, 1),\n    new Among(\"mm\", 0, 2),\n    new Among(\"nn\", 0, 2),\n    new Among(\"pp\", 0, 2),\n    new Among(\"rr\", 0, 2),\n    new Among(\"at\", 0, 1),\n    new Among(\"tt\", 0, 2),\n    new Among(\"iz\", 0, 1)\n  ],\n  a_4 = [\n    new Among(\"ed\", -1, 2),\n    new Among(\"eed\", 0, 1),\n    new Among(\"ing\", -1, 2),\n    new Among(\"edly\", -1, 2),\n    new Among(\"eedly\", 3, 1),\n    new Among(\"ingly\", -1, 2)\n  ],\n  a_5 = [\n    new Among(\"anci\", -1, 3),\n    new Among(\"enci\", -1, 2),\n    new Among(\"ogi\", -1, 13),\n    new Among(\"li\", -1, 16),\n    new Among(\"bli\", 3, 12),\n    new Among(\"abli\", 4, 4),\n    new Among(\"alli\", 3, 8),\n    new Among(\"fulli\", 3, 14),\n    new Among(\"lessli\", 3, 15),\n    new Among(\"ousli\", 3, 10),\n    new Among(\"entli\", 3, 5),\n    new Among(\"aliti\", -1, 8),\n    new Among(\"biliti\", -1, 12),\n    new Among(\"iviti\", -1, 11),\n    new Among(\"tional\", -1, 1),\n    new Among(\"ational\", 14, 7),\n    new Among(\"alism\", -1, 8),\n    new Among(\"ation\", -1, 7),\n    new Among(\"ization\", 17, 6),\n    new Among(\"izer\", -1, 6),\n    new Among(\"ator\", -1, 7),\n    new Among(\"iveness\", -1, 11),\n    new Among(\"fulness\", -1, 9),\n    new Among(\"ousness\", -1, 10)\n  ],\n\n  a_6 = [\n    new Among(\"icate\", -1, 4),\n    new Among(\"ative\", -1, 6),\n    new Among(\"alize\", -1, 3),\n    new Among(\"iciti\", -1, 4),\n    new Among(\"ical\", -1, 4),\n    new Among(\"tional\", -1, 1),\n    new Among(\"ational\", 5, 2),\n    new Among(\"ful\", -1, 5),\n    new Among(\"ness\", -1, 5)\n  ],\n  a_7 = [\n    new Among(\"ic\", -1, 1),\n    new Among(\"ance\", -1, 1),\n    new Among(\"ence\", -1, 1),\n    new Among(\"able\", -1, 1),\n    new Among(\"ible\", -1, 1),\n    new Among(\"ate\", -1, 1),\n    new Among(\"ive\", -1, 1),\n    new Among(\"ize\", -1, 1),\n    new Among(\"iti\", -1, 1),\n    new Among(\"al\", -1, 1),\n    new Among(\"ism\", -1, 1),\n    new Among(\"ion\", -1, 2),\n    new Among(\"er\", -1, 1),\n    new Among(\"ous\", -1, 1),\n    new Among(\"ant\", -1, 1),\n    new Among(\"ent\", -1, 1),\n    new Among(\"ment\", 15, 1),\n    new Among(\"ement\", 16, 1)\n  ],\n  a_8 = [\n    new Among(\"e\", -1, 1),\n    new Among(\"l\", -1, 2)\n  ],\n  a_9 = [\n    new Among(\"succeed\", -1, -1),\n    new Among(\"proceed\", -1, -1),\n    new Among(\"exceed\", -1, -1),\n    new Among(\"canning\", -1, -1),\n    new Among(\"inning\", -1, -1),\n    new Among(\"earring\", -1, -1),\n    new Among(\"herring\", -1, -1),\n    new Among(\"outing\", -1, -1)\n  ],\n  a_10 = [\n    new Among(\"andes\", -1, -1),\n    new Among(\"atlas\", -1, -1),\n    new Among(\"bias\", -1, -1),\n    new Among(\"cosmos\", -1, -1),\n    new Among(\"dying\", -1, 3),\n    new Among(\"early\", -1, 9),\n    new Among(\"gently\", -1, 7),\n    new Among(\"howe\", -1, -1),\n    new Among(\"idly\", -1, 6),\n    new Among(\"lying\", -1, 4),\n    new Among(\"news\", -1, -1),\n    new Among(\"only\", -1, 10),\n    new Among(\"singly\", -1, 11),\n    new Among(\"skies\", -1, 2),\n    new Among(\"skis\", -1, 1),\n    new Among(\"sky\", -1, -1),\n    new Among(\"tying\", -1, 5),\n    new Among(\"ugly\", -1, 8)\n  ];\n\nconst g_v = [17, 65, 16, 1], g_v_WXY = [1, 17,\n  65, 208, 1], g_valid_LI = [55, 141, 2];\nconst habr = [r_Step_1b, r_Step_1c, r_Step_2, r_Step_3, r_Step_4, r_Step_5];\nlet B_Y_found, I_p2, I_p1;\n\n\n\n\nfunction r_prelude() {\n  var v_1 = Stemmer.impl.cursor, v_2;\n  B_Y_found = false;\n  Stemmer.impl.bra = Stemmer.impl.cursor;\n  if (Stemmer.impl.eq_s(1, \"'\")) {\n    Stemmer.impl.ket = Stemmer.impl.cursor;\n    Stemmer.impl.slice_del();\n  }\n  Stemmer.impl.cursor = v_1;\n  Stemmer.impl.bra = v_1;\n  if (Stemmer.impl.eq_s(1, \"y\")) {\n    Stemmer.impl.ket = Stemmer.impl.cursor;\n    Stemmer.impl.slice_from(\"Y\");\n    B_Y_found = true;\n  }\n  Stemmer.impl.cursor = v_1;\n  while (true) {\n    v_2 = Stemmer.impl.cursor;\n    if (Stemmer.impl.in_grouping(g_v, 97, 121)) {\n      Stemmer.impl.bra = Stemmer.impl.cursor;\n      if (Stemmer.impl.eq_s(1, \"y\")) {\n        Stemmer.impl.ket = Stemmer.impl.cursor;\n        Stemmer.impl.cursor = v_2;\n        Stemmer.impl.slice_from(\"Y\");\n        B_Y_found = true;\n        continue;\n      }\n    }\n    if (v_2 >= Stemmer.impl.limit) {\n      Stemmer.impl.cursor = v_1;\n      return;\n    }\n    Stemmer.impl.cursor = v_2 + 1;\n  }\n}\n\nfunction r_mark_regions() {\n  var v_1 = Stemmer.impl.cursor;\n  I_p1 = Stemmer.impl.limit;\n  I_p2 = I_p1;\n  if (!Stemmer.impl.find_among(a_0, 3)) {\n    Stemmer.impl.cursor = v_1;\n    if (habr1()) {\n      Stemmer.impl.cursor = v_1;\n      return;\n    }\n  }\n  I_p1 = Stemmer.impl.cursor;\n  if (!habr1())\n    I_p2 = Stemmer.impl.cursor;\n}\n\nfunction habr1() {\n  while (!Stemmer.impl.in_grouping(g_v, 97, 121)) {\n    if (Stemmer.impl.cursor >= Stemmer.impl.limit)\n      return true;\n    Stemmer.impl.cursor++;\n  }\n  while (!Stemmer.impl.out_grouping(g_v, 97, 121)) {\n    if (Stemmer.impl.cursor >= Stemmer.impl.limit)\n      return true;\n    Stemmer.impl.cursor++;\n  }\n  return false;\n}\n\nfunction r_shortv() {\n  var v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n  if (!(Stemmer.impl.out_grouping_b(g_v_WXY, 89, 121)\n    && Stemmer.impl.in_grouping_b(g_v, 97, 121) && Stemmer.impl.out_grouping_b(g_v,\n      97, 121))) {\n    Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n    if (!Stemmer.impl.out_grouping_b(g_v, 97, 121)\n      || !Stemmer.impl.in_grouping_b(g_v, 97, 121)\n      || Stemmer.impl.cursor > Stemmer.impl.limit_backward)\n      return false;\n  }\n  return true;\n}\n\nfunction r_R1() {\n  return I_p1 <= Stemmer.impl.cursor;\n}\n\nfunction r_R2() {\n  return I_p2 <= Stemmer.impl.cursor;\n}\n\nfunction r_Step_1a() {\n  var among_var, v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_1, 3);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    if (among_var == 1)\n      Stemmer.impl.slice_del();\n  } else\n    Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_2, 6);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    switch (among_var) {\n      case 1:\n        Stemmer.impl.slice_from(\"ss\");\n        break;\n      case 2:\n        var c = Stemmer.impl.cursor - 2;\n        if (Stemmer.impl.limit_backward > c || c > Stemmer.impl.limit) {\n          Stemmer.impl.slice_from(\"ie\");\n          break;\n        }\n        Stemmer.impl.cursor = c;\n        Stemmer.impl.slice_from(\"i\");\n        break;\n      case 3:\n        do {\n          if (Stemmer.impl.cursor <= Stemmer.impl.limit_backward)\n            return;\n          Stemmer.impl.cursor--;\n        } while (!Stemmer.impl.in_grouping_b(g_v, 97, 121));\n        Stemmer.impl.slice_del();\n        break;\n    }\n  }\n}\n\nfunction r_Step_1b() {\n  var among_var, v_1, v_3, v_4;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_4, 6);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    switch (among_var) {\n      case 1:\n        if (r_R1())\n          Stemmer.impl.slice_from(\"ee\");\n        break;\n      case 2:\n        v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n        while (!Stemmer.impl.in_grouping_b(g_v, 97, 121)) {\n          if (Stemmer.impl.cursor <= Stemmer.impl.limit_backward)\n            return;\n          Stemmer.impl.cursor--;\n        }\n        Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n        Stemmer.impl.slice_del();\n        v_3 = Stemmer.impl.limit - Stemmer.impl.cursor;\n        among_var = Stemmer.impl.find_among_b(a_3, 13);\n        if (among_var) {\n          Stemmer.impl.cursor = Stemmer.impl.limit - v_3;\n          switch (among_var) {\n            case 1:\n              var c = Stemmer.impl.cursor;\n              Stemmer.impl.insert(Stemmer.impl.cursor, Stemmer.impl.cursor, \"e\");\n              Stemmer.impl.cursor = c;\n              break;\n            case 2:\n              Stemmer.impl.ket = Stemmer.impl.cursor;\n              if (Stemmer.impl.cursor > Stemmer.impl.limit_backward) {\n                Stemmer.impl.cursor--;\n                Stemmer.impl.bra = Stemmer.impl.cursor;\n                Stemmer.impl.slice_del();\n              }\n              break;\n            case 3:\n              if (Stemmer.impl.cursor == I_p1) {\n                v_4 = Stemmer.impl.limit - Stemmer.impl.cursor;\n                if (r_shortv()) {\n                  Stemmer.impl.cursor = Stemmer.impl.limit - v_4;\n                  var c = Stemmer.impl.cursor;\n                  Stemmer.impl.insert(Stemmer.impl.cursor, Stemmer.impl.cursor, \"e\");\n                  Stemmer.impl.cursor = c;\n                }\n              }\n              break;\n          }\n        }\n        break;\n    }\n  }\n}\n\nfunction r_Step_1c() {\n  var v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  if (!Stemmer.impl.eq_s_b(1, \"y\")) {\n    Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n    if (!Stemmer.impl.eq_s_b(1, \"Y\"))\n      return;\n  }\n  Stemmer.impl.bra = Stemmer.impl.cursor;\n  if (Stemmer.impl.out_grouping_b(g_v, 97, 121) && Stemmer.impl.cursor > Stemmer.impl.limit_backward)\n    Stemmer.impl.slice_from(\"i\");\n}\n\nfunction r_Step_2() {\n  var among_var;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_5, 24);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    if (r_R1()) {\n      switch (among_var) {\n        case 1:\n          Stemmer.impl.slice_from(\"tion\");\n          break;\n        case 2:\n          Stemmer.impl.slice_from(\"ence\");\n          break;\n        case 3:\n          Stemmer.impl.slice_from(\"ance\");\n          break;\n        case 4:\n          Stemmer.impl.slice_from(\"able\");\n          break;\n        case 5:\n          Stemmer.impl.slice_from(\"ent\");\n          break;\n        case 6:\n          Stemmer.impl.slice_from(\"ize\");\n          break;\n        case 7:\n          Stemmer.impl.slice_from(\"ate\");\n          break;\n        case 8:\n          Stemmer.impl.slice_from(\"al\");\n          break;\n        case 9:\n          Stemmer.impl.slice_from(\"ful\");\n          break;\n        case 10:\n          Stemmer.impl.slice_from(\"ous\");\n          break;\n        case 11:\n          Stemmer.impl.slice_from(\"ive\");\n          break;\n        case 12:\n          Stemmer.impl.slice_from(\"ble\");\n          break;\n        case 13:\n          if (Stemmer.impl.eq_s_b(1, \"l\"))\n            Stemmer.impl.slice_from(\"og\");\n          break;\n        case 14:\n          Stemmer.impl.slice_from(\"ful\");\n          break;\n        case 15:\n          Stemmer.impl.slice_from(\"less\");\n          break;\n        case 16:\n          if (Stemmer.impl.in_grouping_b(g_valid_LI, 99, 116))\n            Stemmer.impl.slice_del();\n          break;\n      }\n    }\n  }\n}\n\nfunction r_Step_3() {\n  var among_var;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_6, 9);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    if (r_R1()) {\n      switch (among_var) {\n        case 1:\n          Stemmer.impl.slice_from(\"tion\");\n          break;\n        case 2:\n          Stemmer.impl.slice_from(\"ate\");\n          break;\n        case 3:\n          Stemmer.impl.slice_from(\"al\");\n          break;\n        case 4:\n          Stemmer.impl.slice_from(\"ic\");\n          break;\n        case 5:\n          Stemmer.impl.slice_del();\n          break;\n        case 6:\n          if (r_R2())\n            Stemmer.impl.slice_del();\n          break;\n      }\n    }\n  }\n}\n\nfunction r_Step_4() {\n  var among_var, v_1;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_7, 18);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    if (r_R2()) {\n      switch (among_var) {\n        case 1:\n          Stemmer.impl.slice_del();\n          break;\n        case 2:\n          v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n          if (!Stemmer.impl.eq_s_b(1, \"s\")) {\n            Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n            if (!Stemmer.impl.eq_s_b(1, \"t\"))\n              return;\n          }\n          Stemmer.impl.slice_del();\n          break;\n      }\n    }\n  }\n}\n\nfunction r_Step_5() {\n  var among_var, v_1;\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among_b(a_8, 2);\n  if (among_var) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    switch (among_var) {\n      case 1:\n        v_1 = Stemmer.impl.limit - Stemmer.impl.cursor;\n        if (!r_R2()) {\n          Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n          if (!r_R1() || r_shortv())\n            return;\n          Stemmer.impl.cursor = Stemmer.impl.limit - v_1;\n        }\n        Stemmer.impl.slice_del();\n        break;\n      case 2:\n        if (!r_R2() || !Stemmer.impl.eq_s_b(1, \"l\"))\n          return;\n        Stemmer.impl.slice_del();\n        break;\n    }\n  }\n}\n\nfunction r_exception2() {\n  Stemmer.impl.ket = Stemmer.impl.cursor;\n  if (Stemmer.impl.find_among_b(a_9, 8)) {\n    Stemmer.impl.bra = Stemmer.impl.cursor;\n    return Stemmer.impl.cursor <= Stemmer.impl.limit_backward;\n  }\n  return false;\n}\n\nfunction r_exception1() {\n  var among_var;\n  Stemmer.impl.bra = Stemmer.impl.cursor;\n  among_var = Stemmer.impl.find_among(a_10, 18);\n  if (among_var) {\n    Stemmer.impl.ket = Stemmer.impl.cursor;\n    if (Stemmer.impl.cursor >= Stemmer.impl.limit) {\n      switch (among_var) {\n        case 1:\n          Stemmer.impl.slice_from(\"ski\");\n          break;\n        case 2:\n          Stemmer.impl.slice_from(\"sky\");\n          break;\n        case 3:\n          Stemmer.impl.slice_from(\"die\");\n          break;\n        case 4:\n          Stemmer.impl.slice_from(\"lie\");\n          break;\n        case 5:\n          Stemmer.impl.slice_from(\"tie\");\n          break;\n        case 6:\n          Stemmer.impl.slice_from(\"idl\");\n          break;\n        case 7:\n          Stemmer.impl.slice_from(\"gentl\");\n          break;\n        case 8:\n          Stemmer.impl.slice_from(\"ugli\");\n          break;\n        case 9:\n          Stemmer.impl.slice_from(\"earli\");\n          break;\n        case 10:\n          Stemmer.impl.slice_from(\"onli\");\n          break;\n        case 11:\n          Stemmer.impl.slice_from(\"singl\");\n          break;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction r_postlude() {\n  var v_1;\n  if (B_Y_found) {\n    while (true) {\n      v_1 = Stemmer.impl.cursor;\n      Stemmer.impl.bra = v_1;\n      if (Stemmer.impl.eq_s(1, \"Y\")) {\n        Stemmer.impl.ket = Stemmer.impl.cursor;\n        Stemmer.impl.cursor = v_1;\n        Stemmer.impl.slice_from(\"y\");\n        continue;\n      }\n      Stemmer.impl.cursor = v_1;\n      if (Stemmer.impl.cursor >= Stemmer.impl.limit)\n        return;\n      Stemmer.impl.cursor++;\n    }\n  }\n}\n\n/**\n * @class Stemmer\n * @memberof module:rita\n */\nclass Stemmer {\n\n  static tokenizer;\n  static impl = new SnowballStemmer();\n\n  static stem(input) {\n\n    if (typeof input !== 'string') throw Error('Expects string');\n\n    if (!input.includes(' ')) { // basic case: one word\n      return Stemmer.stemEnglish(input);\n    }\n\n    // multiple words, tokenize then untokenize\n    const words = Stemmer.tokenizer.tokenize(input); // requires backref - yuck\n    const stems = Stemmer.stemAll(words);\n    return Stemmer.tokenizer.untokenize(stems);\n  }\n\n  static stemAll(input) {\n    // let s = new Stemmer();\n    return input.map(i => Stemmer.stemEnglish(i));\n  }\n\n  static stemEnglish(word) {\n    Stemmer.impl.setCurrent(word);\n    var v_1 = Stemmer.impl.cursor;\n    if (!r_exception1()) {\n      Stemmer.impl.cursor = v_1;\n      var c = Stemmer.impl.cursor + 3;\n      if (0 <= c && c <= Stemmer.impl.limit) {\n        Stemmer.impl.cursor = v_1;\n        r_prelude();\n        Stemmer.impl.cursor = v_1;\n        r_mark_regions();\n        Stemmer.impl.limit_backward = v_1;\n        Stemmer.impl.cursor = Stemmer.impl.limit;\n        r_Step_1a();\n        Stemmer.impl.cursor = Stemmer.impl.limit;\n        if (!r_exception2())\n          for (var i = 0; i < habr.length; i++) {\n            Stemmer.impl.cursor = Stemmer.impl.limit;\n            habr[i]();\n          }\n        Stemmer.impl.cursor = Stemmer.impl.limit_backward;\n        r_postlude();\n      }\n    }\n    return Stemmer.impl.getCurrent();\n  }\n}\n\nexport default Stemmer;","/**\n * @class Tokenizer\n * @memberof module:rita\n */\nclass Tokenizer {\n\n  constructor(parent) {\n    this.RiTa = parent;\n    this.splitter = /(\\S.+?[.!?][\"\\u201D]?)(?=\\s+|$)/g;\n  }\n\n  /**\n   * Returns an array containing all unique alphabetical words (tokens) in the text.\n   * Punctuation and case are ignored unless specified otherwise.\n   * @param {string} text - The text from which to extract the tokens\n   * @param {object} [options] - The options\n   * @param {boolean} [options.caseSensitive=false] - Whether to pay attention to case\n   * @param {boolean} [options.ignoreStopWords=false] - Whether to ignore words like 'the', 'and', 'a', 'of', etc, as specified in RiTa.STOP_WORDS\n   * @param {boolean} [options.splitContractions=false] - Whether to convert contractions (e.g., \"I'd\" or \"she'll\") into multiple individual tokens\n   * @param {boolean} [options.includePunct=false] - Whether to include punctuation in the results\n   * @param {boolean} [options.sort=false] - Whether to sort the tokens before returning them\n   * @returns {string[]} Array of tokens\n   */\n  tokens(text, options = {\n    caseSensitive: false,\n    ignoreStopWords: false,\n    splitContractions: false,\n    includePunct: false,\n    sort: false,\n  }) {\n    let words = this.tokenize(text, options), map = {};\n    words.forEach(w => {\n      if (!options.caseSensitive) w = w.toLowerCase();\n      if (options.includePunct || ALPHA_RE.test(w)) map[w] = 1;\n    });\n    let tokens = Object.keys(map);\n    if (options.ignoreStopWords) tokens = tokens.filter(t => !this.RiTa.isStopWord(t));\n    return options.sort ? tokens.sort() : tokens;\n  }\n\n  tokenize(input, opts = {\n    // regex: null,\n    // splitHyphens: false,\n    // splitContractions: false\n  }) {\n    if (typeof input !== 'string') return [];\n\n    if (opts.regex) return input.split(opts.regex); // TODO: tests\n\n    let { tags, text } = this.pushTags(input.trim());\n\n    for (let i = 0; i < TOKENIZE_RE.length; i += 2) {\n      text = text.replace(TOKENIZE_RE[i], TOKENIZE_RE[i + 1]);\n    }\n\n    // https://github.com/dhowe/rita/issues/65\n    // default behavior is to keep hyphen\n    if (opts.splitHyphens) {\n      text = text.replace(/([a-zA-Z]+)-([a-zA-Z]+)/g, \"$1 - $2\");\n    }\n\n    if (this.RiTa.SPLIT_CONTRACTIONS || opts.splitContractions) {\n      for (let i = 0; i < CONTRACTS_RE.length; i += 2) {\n        text = text.replace(CONTRACTS_RE[i], CONTRACTS_RE[i + 1]);\n        //if (pre !== text) console.log('splitCon: ' + pre + '->' + text);\n      }\n    }\n\n    let result = this.popTags(text.trim().split(WS_RE), tags);\n\n    return result;\n  }\n\n  untokenize(arr, delim = ' ') { // very ugly (but works somehow)\n\n    if (!arr || !Array.isArray(arr)) return '';\n\n    arr = this.preProcessTags(arr);\n\n    let nextNoSpace = false, afterQuote = false, midSentence = false;\n    let withinQuote = arr.length && QUOTE_RE.test(arr[0]);\n    let result = arr[0] || '';\n\n    for (let i = 1; i < arr.length; i++) {\n\n      if (!arr[i]) continue;\n      let thisToken = arr[i];\n      let lastToken = arr[i - 1];\n      let thisComma = thisToken === ',', lastComma = lastToken === ',';\n      let thisNBPunct = NOSP_BF_PUNCT_RE.test(thisToken)\n        || UNTAG_RE[2].test(thisToken) || LINEBREAK_RE.test(thisToken); // NB -> no space before the punctuation (add closing tag)\n      let thisLBracket = LB_RE.test(thisToken); // LBracket -> left bracket\n      let thisRBracket = RB_RE.test(thisToken); // RBracket -> right bracket\n      let lastNBPunct = NOSP_BF_PUNCT_RE.test(lastToken)\n        || LINEBREAK_RE.test(lastToken); // NB -> no space before\n      let lastNAPunct = NOSP_AF_PUNCT_RE.test(lastToken)\n        || UNTAG_RE[1].test(lastToken) || LINEBREAK_RE.test(lastToken); // NA -> no space after (add opening tag)\n      let lastLB = LB_RE.test(lastToken), lastRB = RB_RE.test(lastToken);\n      let lastEndWithS = (lastToken[lastToken.length - 1] === 's' &&\n        lastToken != \"is\" && lastToken != \"Is\" && lastToken != \"IS\");\n      let lastIsWWW = WWW_RE.test(lastToken), isDomain = DOMAIN_RE.test(thisToken);\n      let nextIsS = i == arr.length - 1 ? false : (arr[i + 1] === \"s\"\n        || arr[i + 1] === \"S\");\n      let lastQuote = QUOTE_RE.test(lastToken), isLast = (i == arr.length - 1);\n      let thisQuote = QUOTE_RE.test(thisToken);\n      let thisLineBreak = LINEBREAK_RE.test(thisToken);\n\n      if ((lastToken === \".\" && isDomain) || nextNoSpace) {\n        nextNoSpace = false;\n        result += thisToken;\n        continue;\n\n      } else if (thisToken === \".\" && lastIsWWW) {\n        nextNoSpace = true;\n\n      } else if (thisLBracket) {\n        result += delim;\n\n      } else if (lastRB) {\n        if (!thisNBPunct && !thisLBracket) {\n          result += delim;\n        }\n\n      } else if (thisQuote) {\n\n        if (withinQuote) {\n          // no-delim, mark quotation done\n          afterQuote = true;\n          withinQuote = false;\n        } else if (!((APOS_RE.test(thisToken) && lastEndWithS) ||\n          (APOS_RE.test(thisToken) && nextIsS))) {\n          withinQuote = true;\n          afterQuote = false;\n          result += delim;\n        }\n\n      } else if (afterQuote && !thisNBPunct) {\n        result += delim;\n        afterQuote = false;\n\n      } else if (lastQuote && thisComma) {\n        midSentence = true;\n\n      } else if (midSentence && lastComma) {\n        result += delim;\n        midSentence = false;\n\n      } else if ((!thisNBPunct && !lastQuote && !lastNAPunct\n        && !lastLB && !thisRBracket) ||\n        (!isLast && thisNBPunct && lastNBPunct && !lastNAPunct &&\n          !lastQuote && !lastLB && !thisRBracket) && !thisLineBreak) {\n        result += delim;\n      }\n\n      result += thisToken; // add to result\n      if (thisNBPunct && !lastNBPunct && !withinQuote\n        && SQUOTE_RE.test(thisToken) && lastEndWithS) {\n        result += delim;\n      }\n    }\n\n    return result.trim();\n  }\n\n  /**\n   * Split the input text into sentences according to the options\n   * @param {string} text - The text to split\n   * @param {(string|RegExp)} [regex] - An optional custom regex to split on\n   * @returns {string[]} An array of sentences\n   */\n  sentences(text, regex) {\n    if (!text || !text.length) return [text];\n\n    let clean = text.replace(NL_RE, ' ')\n\n    let delim = '___';\n    let re = new RegExp(delim, 'g');\n    let pattern = regex || this.splitter;\n\n    let unescapeAbbrevs = (arr) => {\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = arr[i].replace(re, \".\");\n      }\n      return arr;\n    }\n\n    let escapeAbbrevs = (text) => {\n      let abbrevs = this.RiTa.ABRV;\n      for (let i = 0; i < abbrevs.length; i++) {\n        let abv = abbrevs[i];\n        let idx = text.indexOf(abv);\n        while (idx > -1) {\n          text = text.replace(abv, abv.replace('.', delim));\n          idx = text.indexOf(abv);\n        }\n      }\n      return text;\n    }\n\n    let arr = escapeAbbrevs(clean).match(pattern);\n    return arr?.length ? unescapeAbbrevs(arr) : [text];\n  }\n\n\n  pushTags(text) {\n    let tags = [], tagIdx = 0;\n    while (TAG_RE.test(text)) {\n      tags.push(text.match(TAG_RE)[0]);\n      text = text.replace(TAG_RE, \" _\" + TAG + (tagIdx++) + \"_ \");\n    }\n\n    return { tags, text };\n  }\n\n  popTags(result, tags) {\n    for (let i = 0; i < result.length; i++) {\n      if (POPTAG_RE.test(result[i])) {\n        result[i] = tags.shift();\n      }\n      if (result[i].includes('_') && !EMAIL_RE.test(result[i]) && !URL_RE.test(result[i])) {\n        result[i] = result[i].replace(UNDER_RE, \"$1 $2\");\n      }\n    }\n    return result;\n  }\n\n  preProcessTags(array) {\n    let result = [], currentIdx = 0;\n    while (currentIdx < array.length) {\n      let currentToken = array[currentIdx];\n      if (!LT_RE.test(currentToken)) {\n        result.push(currentToken);\n        currentIdx++;\n        continue;\n      } // if not '<'\n      let subArray = [array[currentIdx]];\n      let inspectIdx = currentIdx + 1;\n      while (inspectIdx < array.length) {\n        subArray.push(array[inspectIdx]);\n        if (LT_RE.test(array[inspectIdx])) break;\n        if (GT_RE.test(array[inspectIdx])) break;\n        inspectIdx++;\n      }\n      if (LT_RE.test(subArray[subArray.length - 1])) {\n        result = result.concat(subArray.slice(0, subArray.length - 1));\n        currentIdx = inspectIdx;\n        continue;\n      }\n      if (!GT_RE.test(subArray[subArray.length - 1])) {\n        result = result.concat(subArray);\n        currentIdx = inspectIdx + 1;\n        continue;\n      }\n      if (!TAG_RE.test(subArray.join(''))) {\n        result = result.concat(subArray);\n        currentIdx = inspectIdx + 1;\n        continue;\n      }\n      let tag = this.tagSubarrayToString(subArray);\n      result.push(tag);\n      currentIdx = inspectIdx + 1;\n    }\n    return result;\n  }\n\n  tagSubarrayToString(array) {\n    if (!LT_RE.test(array[0]) || !GT_RE.test(array[array.length - 1])) {\n      throw Error(array + 'is not a tag');\n    }\n    let start = array[0].trim();\n    let end = array[array.length - 1].trim();\n\n    let inspectIdx = 1;\n    while (inspectIdx < array.length - 1 && TAGSTART_RE.test(array[inspectIdx])) {\n      start += array[inspectIdx].trim();\n      inspectIdx++;\n    }\n\n    let contentStartIdx = inspectIdx;\n    inspectIdx = array.length - 2;\n    while (inspectIdx > contentStartIdx && TAGEND_RE.test(array[inspectIdx])) {\n      end = array[inspectIdx].trim() + end;\n      inspectIdx--;\n    }\n\n    let contentEndIdx = inspectIdx;\n    let result = start + this.untokenize\n      (array.slice(contentStartIdx, contentEndIdx + 1)).trim() + end;\n\n    return result;\n  }\n}\n\nconst UNTAG_RE = [\n  /^ *<[a-z][a-z0-9='\"#;:&\\s\\-\\+\\/\\.\\?]*\\/> *$/i, // empty tags <br/> <img /> etc. -> like a normal word\n  /^ *<([a-z][a-z0-9='\"#;:&\\s\\-\\+\\/\\.\\?]*[a-z0-9='\"#;:&\\s\\-\\+\\.\\?]|[a-z])> *$/i, // opening tags <a>, <p> etc. -> no space after \n  /^ *<\\/[a-z][a-z0-9='\"#;:&\\s\\-\\+\\/\\.\\?]*> *$/i, // closing tags </a> </p> etc. -> no space before\n  /^ *<!DOCTYPE[^>]*> *$/i, // <!DOCTYPE> -> like a normal word\n  /^ *<!--[^->]*--> *$/i // <!-- --> -> like a normal word\n];\n\nconst LT_RE = /^ *< *$/;\nconst GT_RE = /^ *> *$/;\nconst TAGSTART_RE = /^ *[!\\-\\/] *$/;\nconst TAGEND_RE = /^ *[\\-\\/] *$/\nconst NOSP_AF_PUNCT_RE = /^[\\^\\*\\$\\/\\u2044#\\-@\\u00b0\\u2012\\u2013\\u2014]+$/;\nconst TAG = \"TAG\", UNDER_RE = /([0-9a-zA-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]|[\\.\\,])_([0-9a-zA-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF])/g;\nconst LB_RE = /^[\\[\\(\\{\\u27e8]+$/, RB_RE = /^[\\)\\]\\}\\u27e9]+$/;\nconst QUOTE_RE = /^[\"\"\\u201c\\u201d\\u2019\\u2018`''\\u00ab\\u00bb]+$/;\nconst DOMAIN_RE = /^(com|org|edu|net|xyz|gov|int|eu|hk|tw|cn|de|ch|fr)$/;\nconst SQUOTE_RE = /^[\\u2019\\u2018`']+$/, ALPHA_RE = /^[A-Za-z’']+$/, WS_RE = / +/;\nconst APOS_RE = /^[\\u2019']+$/, NL_RE = /(\\r?\\n)+/g, WWW_RE = /^(www[0-9]?|WWW[0-9]?)$/;\nconst NOSP_BF_PUNCT_RE = /^[,\\.\\;\\:\\?\\!\\)\"\"\\u201c\\u201d\\u2019\\u2018`'%\\u2026\\u2103\\^\\*\\u00b0\\/\\u2044\\u2012\\u2013\\u2014\\-@]+$/;\nconst LINEBREAK_RE = /[\\n\\r\\036]/;\nconst URL_RE = /((http[s]?):(\\/\\/))?([-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b)([-a-zA-Z0-9()@:%_\\+.~#?&\\/\\/=]*)/;\nconst EMAIL_RE = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst TOKENIZE_RE = [\n  // save  --------\n  /([Ee])[.]([Gg])[.]/g, \"_$1$2_\", //E.g\n  /([Ii])[.]([Ee])[.]/g, \"_$1$2_\", //i.e\n  /([Aa])[.]([Mm])[.]/g, \"_$1$2_\", //a.m.\n  /([Pp])[.]([Mm])[.]/g, \"_$1$2_\", //p.m.\n  /(Cap)[\\.]/g, \"_Cap_\", //Cap.\n  /([Cc])[\\.]/g, \"_$1_\", //c.\n  /([Ee][Tt])[\\s]([Aa][Ll])[\\.]/, \"_$1zzz$2_\", // et al.\n  /(etc|ETC)[\\.]/g, \"_$1_\", //etc.\n  /([Pp])[\\.]([Ss])[\\.]/g, \"_$1$2dot_\", // p.s.\n  /([Pp])[\\.]([Ss])/g, \"_$1$2_\", // p.s\n  /([Pp])([Hh])[\\.]([Dd])/g, \"_$1$2$3_\", // Ph.D\n  /([Rr])[\\.]([Ii])[\\.]([Pp])/g, \"_$1$2$3_\", // R.I.P\n  /([Vv])([Ss]?)[\\.]/g, \"_$1$2_\", // vs. and v.\n  /([Mm])([Rr]|[Ss]|[Xx])[\\.]/g, \"_$1$2_\", // Mr. Ms. and Mx.\n  /([Dd])([Rr])[\\.]/g, \"_$1$2_\", // Dr.\n  /([Pp])([Ff])[\\.]/g, \"_$1$2_\", // Pf.\n  /([Ii])([Nn])([Dd]|[Cc])[\\.]/g, \"_$1$2$3_\", // Ind. and Inc.\n  /([Cc])([Oo])[\\.][\\,][\\s]([Ll])([Tt])([Dd])[\\.]/g, \"_$1$2dcs$3$4$5_\", // co., ltd.\n  /([Cc])([Oo])[\\.][\\s]([Ll])([Tt])([Dd])[\\.]/g, \"_$1$2ds$3$4$5_\", // co. ltd.\n  /([Cc])([Oo])[\\.][\\,]([Ll])([Tt])([Dd])[\\.]/g, \"_$1$2dc$3$4$5_\", // co.,ltd.\n  /([Cc])([Oo])([Rr]?)([Pp]?)[\\.]/g, \"_$1$2$3$4_\", // Corp. and Co.\n  /([Ll])([Tt])([Dd])[\\.]/g, \"_$1$2$3_\", // ltd.\n  /(prof|Prof|PROF)[\\.]/g, \"_$1_\", //Prof. \n  //   /(\\w+([\\.-_]?\\w+)*)@(\\w+([\\.-_]?\\w+)*)\\.(\\w{2,3})/g, \"$1__AT__$3.$5\", //email addresses\n  // /^\\w+([\\.-]?\\w+)+@\\w+([\\.:]?\\w+)+(\\.[a-zA-Z0-9]{2,3})+$/g, \"$1__AT__$2\", //email addresses\n  /([\\w.]+)@(\\w+\\.\\w+)/g, \"$1__AT__$2\",\n  /((http[s]?):(\\/\\/))([-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b)([-a-zA-Z0-9()@:%_\\+.~#?&\\/\\/=]*)/g, \"$2COLON$3$4$5\", //urls with http(s)\n  //decimal #\n  /([\\-]?[0-9]+)\\.([0-9]+)/g, \"$1DECIMALDOT$2_\", //(-)27.3\n  /([\\-]?[0-9]+)\\.([0-9]+)e([\\-]?[0-9]+)/g, \"_$1DECIMALDOT$2POWERE$3_\", //(-)1.2e10\n  /([0-9]{1,3}),([0-9]{3})/g, \"$1_DECIMALCOMMA_$2\", // large numbers like 19,700 or 200,000,000.13\n  /([A-Za-z0-9])\\.([A-Za-z0-9])/g, \"$1_DECIMALDOT_$2\", //www.example.com\n\n  //escape sequences of line breaks in ASCII\n  /\\r\\n/g, \" _CARRIAGERETURNLINEFEED_ \", // CR LF\n  /\\n\\r/g, \" _LINEFEEDCARRIAGERETURN_ \", // LF CR\n  /\\n/g, \" _LINEFEED_ \", // LF\n  /\\r/g, \" _CARRIAGERETURN_ \", // CR\n  /\\036/g, \" _RECORDSEPARATOR_ \", // RS\n  //--------------------------\n  /\\.\\.\\.\\s/g, \"_elipsisDDD_ \",\n  /([\\?!\\\"\\u201C\\.,;:@#$%&])/g, \" $1 \",\n  /\\u2026/g, \" \\u2026 \",\n  /\\s+/g, ' ',\n  /,([^0-9])/g, \" , $1\",\n  /([^.])([.])([\\])}>\\\"'\\u2019]*)\\s*$/g, \"$1 $2$3 \",\n  /([\\[\\](){}<>\\u27e8\\u27e9])/g, \" $1 \",\n  /--/g, \" -- \",\n  /\\u2012/g, \" \\u2012 \", //\" ‒ \"\n  /\\u2013/g, \" \\u2013 \", // \" — \"\n  /\\u2014/g, \" \\u2014 \",//\" – \"\n  /$/g, ' ',\n  /^/g, ' ',\n  /([^'])' | '/g, \"$1 ' \",\n  / \\u2018/g, \" \\u2018 \",\n  /'([SMD]) /g, \" '$1 \",\n  / ([A-Z]) \\./g, \" $1. \",\n  /^\\s+/g, '',\n  /\\^/g, \" ^ \",\n  /\\u00b0/g, \" \\u00b0 \",\n  /_elipsisDDD_/g, \" ... \",\n\n  //pop ------------------\n  /_([Ee])([Gg])_/g, \"$1.$2.\", //Eg\n  /_([Ii])([Ee])_/g, \"$1.$2.\", //ie\n  /_([Aa])([Mm])_/g, \"$1.$2.\", //a.m.\n  /_([Pp])([Mm])_/g, \"$1.$2.\", //p.m.\n  /_Cap_/g, \"Cap.\", //Cap.\n  /_([Cc])_/g, \"$1.\", //c.\n  /_([Ee][Tt])zzz([Aa][Ll])_/, \"$1_$2.\", // et al.\n  /_(etc|ETC)_/g, \"$1.\", //etc.\n  /_([Pp])([Ss])dot_/g, \"$1.$2.\", // p.s.\n  /_([Pp])([Ss])_/g, \"$1.$2\",\n  /_([Pp])([Hh])([Dd])_/g, \"$1$2.$3\", // Ph.D\n  /_([Rr])([Ii])([Pp])_/g, \"$1.$2.$3\", // R.I.P\n  /_([Vv])([Ss]?)_/g, \"$1$2.\", // vs. and v.\n  /_([Mm])([Rr]|[Ss]|[Xx])_/g, \"$1$2.\", // Mr. Ms. and Mx.\n  /_([Dd])([Rr])_/g, \"$1$2.\", // Dr.\n  /_([Pp])([Ff])_/g, \"$1$2.\", // Pf.\n  /_([Ii])([Nn])([Dd]|[Cc])_/g, \"$1$2$3.\", // Ind. and Inc.\n  /_([Cc])([Oo])([Rr]?)([Pp]?)_/g, \"$1$2$3$4.\", // Corp. and Co.\n  /_([Cc])([Oo])dc([Ll])([Tt])([Dd])_/g, \"$1$2.,$3$4$5.\", // co.,ltd.\n  /_([Ll])([Tt])([Dd])_/g, \"$1$2$3.\", // ltd.\n  /_([Cc])([Oo])dcs([Ll])([Tt])([Dd])_/g, \"$1$2.,_$3$4$5.\", // co., ltd.\n  /_([Cc])([Oo])ds([Ll])([Tt])([Dd])_/g, \"$1$2._$3$4$5.\", // co. ltd.\n  /_(prof|PROF|Prof)_/g, \"$1.\", //Prof.\n  /([\\-]?[0-9]+)DECIMALDOT([0-9]+)_/g, \"$1.$2\", //(-)27.3\n  /_([\\-]?[0-9]+)\\DECIMALDOT([0-9]+)POWERE([\\-]?[0-9]+)_/g, \"$1.$2e$3\", //(-)1.2e(-)9\n  /_DECIMALCOMMA_/g, \",\", // large numbers like 200,000,000.13\n  /_DECIMALDOT_/g, \".\",\n  // /(\\w+([\\.-]?\\w+)*)__AT__(\\w+([\\.-]?\\w+)*)\\.(\\w{2,3})/g, \"$1@$3.$5\",\n  /__AT__/g, \"@\",\n  /((http[s]?)COLON(\\/\\/))([-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b)([-a-zA-Z0-9()@:%_\\+.~#?&\\/\\/=]*)/g, \"$2:$3$4$5\",\n  /_LINEFEED_/g, \"\\n\", // LF\n  /_CARRIAGERETURN_/g, \"\\r\", // CR\n  /_CARRIAGERETURNLINEFEED_/g, \"\\r\\n\", // CR LF\n  /_LINEFEEDCARRIAGERETURN_/g, \"\\n\\r\", // LF CR\n  /_RECORDSEPARATOR_/g, \"\\\\036\", // RS\n];\n\nconst CONTRACTS_RE = [\n  // TODO: 'She'd have wanted' -> 'She would have wanted'\n  /([Cc])an['\\u2019]t/g, \"$1an not\",\n  /([Dd])idn['\\u2019]t/g, \"$1id not\",\n  /([CcWw])ouldn['\\u2019]t/g, \"$1ould not\",\n  /([Ss])houldn['\\u2019]t/g, \"$1hould not\",\n  /([Ii])t['\\u2019]s/g, \"$1t is\",\n  /([tT]hat)['\\u2019]s/g, \"$1 is\",\n  /(she|he|you|they|i)['\\u2019]d/gi, \"$1 had\", // changed from would, 12/8/23\n  /(she|he|you|they|i)['\\u2019]ll/gi, \"$1 will\",\n  /n['\\u2019]t /g, \" not \",\n  /['\\u2019]ve /g, \" have \",\n  /['\\u2019]re /g, \" are \"\n];\n\nconst TAG_RE = /(<\\/?[a-z][a-z0-9='\"#;:&\\s\\-\\+\\/\\.\\?]*\\/?>|<!DOCTYPE[^>]*>|<!--[^>-]*-->)/i; // html tags (rita#103)\nconst POPTAG_RE = new RegExp(`_${TAG}[0-9]+_`);\n\nexport default Tokenizer;","/**\n * @memberof module:rita\n */\nclass RegularExpression {\n\n  constructor(regex, offset, suffix) {\n    this.raw = regex;\n    this.regex = new RegExp(regex);\n    this.offset = offset;\n    this.suffix = suffix || '';\n  }\n\n  applies(word) {\n    return this.regex.test(word);\n  }\n\n  fire(word) {\n    return this.truncate(word) + this.suffix;\n  }\n\n  truncate(word) {\n    return (this.offset === 0) ? word :\n      word.substr(0, word.length - this.offset);\n  }\n\n  toString() {\n    return '/' + this.raw + '/';\n  }\n}\n\nconst RE = (a, b, c, _/*??*/) => new RegularExpression(a, b, c);\n\n/**\n * @class Conjugator\n * @memberof module:rita\n */\nclass Conjugator {\n\n  constructor(parent) {\n    this.RiTa = parent;\n    this._reset();\n    this.RiTa.search({ pos: 'v', limit: -1, minLength: -1 })\n      .then(res => {\n        this.allVerbs = res;\n        this.verbsEndingInE = res.filter(v => v.endsWith(\"e\"));\n        this.verbsEndingInDouble = res.filter(v => /([^])\\1$/.test(v));\n      });\n  }\n\n  // TODO: add handling of past tense modals.\n  conjugate(verb, args) {\n\n    if (!verb || !verb.length) throw Error('No verb');\n    if (!args) return verb;\n\n    verb = verb.toLowerCase();\n\n    // make sure verb is in base form\n    if (!this.RiTa.tagger.allTags(verb).includes(\"vb\")) {\n      verb = this.unconjugate(verb) || verb;\n    }\n    args = this._parseArgs(args);\n\n    // handle 'to be' verbs and stemming\n    let frontVG = TO_BE.includes(verb) ? \"be\" : this._handleStem(verb);\n\n    let actualModal, verbForm, conjs = [], RiTa = this.RiTa;\n\n    if (this.form === RiTa.INFINITIVE) {\n      actualModal = \"to\";\n    }\n    if (this.tense === RiTa.FUTURE) {\n      actualModal = \"will\";\n    }\n    if (this.passive) {\n      conjs.push(this.pastPart(frontVG));\n      frontVG = \"be\";\n    }\n    if (this.progressive) {\n      conjs.push(this.presentPart(frontVG));\n      frontVG = \"be\";\n    }\n    if (this.perfect) {\n      conjs.push(this.pastPart(frontVG));\n      frontVG = \"have\";\n    }\n    if (actualModal) {\n      conjs.push(frontVG);\n      frontVG = null;\n    }\n\n    // Now inflect frontVG (if it exists) and push it on restVG\n    if (frontVG) {\n      if (this.form === RiTa.GERUND) { // gerund - use ING form\n        conjs.push(this.presentPart(frontVG));\n      } else if (this.interrogative && frontVG != \"be\" && conjs.length < 1) {\n        conjs.push(frontVG);\n      } else {\n        verbForm = this._verbForm(frontVG, this.tense, this.person, this.number);\n        conjs.push(verbForm);\n      }\n    }\n\n    // add modal, and we're done\n    actualModal && conjs.push(actualModal);\n\n    return conjs.reduce((acc, cur) => cur + ' ' + acc).trim();\n  }\n\n  unconjugate(word, opts = {}) { // NAPI (perhaps should be added?)  \n\n    if (typeof word !== 'string') return;\n\n    let dbug = opts && opts.dbug;\n\n    if (IRREG_VERBS_LEX.hasOwnProperty(word)) {\n      dbug && console.log(word + \" in exceptions1 (in lex)\");\n      return IRREG_VERBS_LEX[word];\n    }\n    else if (Object.values(IRREG_VERBS_LEX).includes(word)) {\n      dbug && console.log(word + \" is base form in exceptions1 (in lex)\");\n      return word;\n    }\n\n    if (IRREG_VERBS_NOLEX.hasOwnProperty(word)) {\n      dbug && console.log(word + \" is in exceptions2\");\n      return IRREG_VERBS_NOLEX[word];\n    }\n    else if (Object.values(IRREG_VERBS_NOLEX).includes(word)) {\n      dbug && console.log(word + \" is base form in exceptions2 (not in lex)\");\n      return word;\n    }\n\n    let tags = this.RiTa.tagger.allTags(word, { noGuessing: true });\n\n    // if its already a base form verb, return it\n    if (tags.some(t => t === 'vb')) {\n      dbug && console.log(word + \" is a base form verb\");\n      return word;\n    }\n\n    // Now check lemmatization rules /////////////////////////////////\n\n    // 1) 3rd person present (-s)\n    if (word.endsWith(\"s\")) {\n\n      if (word.endsWith(\"ies\")) {\n        dbug && console.log(\"'\" + word + \"' hit rule: ends with -ies\");\n        return word.slice(0, -3) + \"y\";\n      }\n      else if (/(ch|s|sh|x|z|o)es$/.test(word)) {\n        dbug && console.log(\"'\" + word + \"' hit rule: ends with -(ch|s|sh|x|z|o)es\");\n        return word.slice(0, -2);\n      }\n      dbug && console.log(\"'\" + word + \"' hit rule: ends with -s\");\n      return word.slice(0, -1);\n    }\n\n    // 2) past forms (-ed)\n    else if (word.endsWith(\"ed\")) {\n\n      if (word.endsWith(\"ied\")) {\n        dbug && console.log(\"'\" + word + \"' hit rule: ends with -ied\");\n        return word.slice(0, -3) + \"y\";\n      }\n      else if (/([a-z])\\1ed$/.test(word)) {\n        if (this.verbsEndingInDouble.includes(word.replace(/ed$/, \"\"))) {\n          dbug && console.log(\"'\" + word + \"' hit rule: ends with -ed\");\n          return word.slice(0, -2);\n        }\n        dbug && console.log(\"'\" + word + \"' hit rule: ends with -..ed\");\n        return word.slice(0, -3);\n      }\n      else if (word.endsWith(\"ed\")) {\n        if (this.verbsEndingInE.includes(word.replace(/d$/, \"\"))) {\n          dbug && console.log(\"'\" + word + \"' hit rule: ends with -(e)d\");\n          return word.slice(0, -1);\n        }\n        else {\n          dbug && console.log(\"'\" + word + \"' hit rule: ends with -ed\");\n          return word.slice(0, -2);\n        }\n      }\n    }\n\n    // 3) ends with -ing\n    else if (word.endsWith(\"ing\")) {\n\n      if (/([a-z])\\1ing$/.test(word)) {\n        if (this.verbsEndingInDouble.includes(word.slice(0, -3))) {\n          dbug && console.log(\"'\" + word + \"' hit rule: ends with -(XX)ing [in-list]\");\n          return word.slice(0, -3);\n        }\n\n        dbug && console.log(\"'\" + word + \"' hit rule: ends with -XXing [no-list]\");\n        return word.slice(0, -4);\n      }\n\n      if (word.endsWith('ying')) {\n        if (this.verbsEndingInE.includes(word.replace(/ying$/, \"ie\"))) {\n          dbug && console.log(\"'\" + word + \"' hit rule: base ends with -ying\");\n          return word.slice(0, -4) + \"ie\";\n        }\n      }\n\n      if (this.verbsEndingInE.includes(word.replace(/ing$/, \"e\"))) {\n        dbug && console.log(\"'\" + word + \"' hit rule: base ends with -(e)ing\");\n        return word.slice(0, -3) + \"e\";\n      }\n\n      dbug && console.log(\"'\" + word + \"' hit rule: ends with -ing\");\n\n      return word.slice(0, -3);\n    }\n\n    else {\n\n      // if it hasn't matched anything AND is not a verb in lex, give up\n      if (!tags.some(t => t.startsWith('vb'))) {\n        dbug && console.log(word + \" is not a known verb\");\n        return word;\n      }\n    }\n\n    dbug && console.log(\"'\" + word + \"' hit no rules\");\n\n    return word;\n  }\n\n  presentPart(theVerb) {\n    return theVerb === 'be' ? 'being' :\n      this._checkRules(PRESENT_PART_RULESET, theVerb);\n  }\n\n  pastPart(theVerb) {\n    if (this._isPastParticiple(theVerb)) return theVerb;\n    return this._checkRules(PAST_PART_RULESET, theVerb);\n  }\n\n  toString() {\n    return \"  ---------------------\" + \"\\n\" + \"  Passive = \" + this.passive +\n      '\\n' + \"  Perfect = \" + this.perfect + '\\n' + \"  Progressive = \" +\n      this.progressive + '\\n' + \"  ---------------------\" + '\\n' + \"  Number = \" +\n      this.number + '\\n' + \"  Person = \" + this.person + '\\n' + \"  Tense = \" +\n      this.tense + '\\n' + \"  ---------------------\" + '\\n';\n  }\n\n  /////////////////////////////// End API ///////////////////////////////////\n\n  _reset() {\n    this.IRREG_VERBS_LEX_VB = IRREG_VERBS_LEX;     // for tagger\n    this.IRREG_VERBS_NOLEX = IRREG_VERBS_NOLEX;  // for tagger\n    this.IRREG_PAST_PART = IRREG_PAST_PART; // for tagger\n    this.perfect = this.progressive = this.passive = this.interrogative = false;\n    this.tense = this.RiTa.PRESENT;\n    this.person = this.RiTa.FIRST;\n    this.number = this.RiTa.SINGULAR;\n    this.form = this.RiTa.NORMAL;\n  }\n\n  _parseArgs(args) {\n\n    this._reset();\n\n    const RiTa = this.RiTa;\n    if (typeof args === 'string') {\n      if (/^[123][SP](Pr|Pa|Fu)$/.test(args)) {\n        let opts = {};\n        opts.person = parseInt(args[0]);\n        opts.number = args[1] === 'S' ? RiTa.SINGULAR : RiTa.PLURAL;\n        let tense = args.substr(2);\n        if (tense === 'Pr') opts.tense = RiTa.PRESENT;\n        if (tense === 'Fu') opts.tense = RiTa.FUTURE;\n        if (tense === 'Pa') opts.tense = RiTa.PAST;\n        args = opts;\n      }\n      else {\n        throw Error('Invalid args: ' + args)\n      }\n    }\n\n    if (args.number) this.number = args.number;\n    if (args.person) this.person = args.person;\n    if (args.tense) this.tense = args.tense;\n    if (args.form) this.form = args.form;\n    if (args.passive) this.passive = args.passive;\n    if (args.progressive) this.progressive = args.progressive;\n    if (args.interrogative) this.interrogative = args.interrogative;\n    if (args.perfect) this.perfect = args.perfect;\n  }\n\n  _checkRules(ruleSet, theVerb) {\n\n    if (!theVerb || !theVerb.length) return '';\n\n    theVerb = theVerb.trim();\n\n    let dbug = 0, res, name = ruleSet.name;\n    let rules = ruleSet.rules, defRule = ruleSet.defaultRule;\n\n    if (!rules) console.error(\"no rule: \" + ruleSet.name + ' of ' + theVerb);\n    if (MODALS.includes(theVerb)) return theVerb;\n\n    for (let i = 0; i < rules.length; i++) {\n      dbug && console.log(\"checkRules(\" + name + \").fire(\" + i + \")=\" + rules[i].regex);\n      if (rules[i].applies(theVerb)) {\n        let got = rules[i].fire(theVerb);\n        dbug && console.log(\"HIT(\" + name + \").fire(\" + i + \")=\" + rules[i].regex + \"_returns: \" + got);\n        return got;\n      }\n    }\n    dbug && console.log(\"NO HIT!\");\n    if (ruleSet.doubling && VERB_CONS_DOUBLING.includes(theVerb)) {\n      dbug && console.log(\"doDoubling!\");\n      theVerb = this._doubleFinalConsonant(theVerb);\n    }\n\n    res = defRule.fire(theVerb);\n    dbug && console.log(\"checkRules(\" + name + \").returns: \" + res);\n\n    return res;\n  }\n\n  _doubleFinalConsonant(word) {\n    return word + word.charAt(word.length - 1);\n  }\n\n  _isPastParticiple(word) {\n    const w = word.toLowerCase();\n    const lex = this.RiTa.lexicon;\n    const posArr = lex._posArr(w);\n\n    // in dict?\n    if (posArr && posArr.includes(\"vbn\")) return true;\n\n    // is irregular?\n    if (IRREG_PAST_PART.includes(w)) return true;\n\n    // ends with ed?\n    if (w.endsWith(\"ed\")) {\n\n      let pos = lex._posArr(w.substring(0, w.length - 1)) // created\n        || lex._posArr(w.substring(0, w.length - 2));     // played\n\n      if (!pos && w.charAt(w.length - 3) === w.charAt(w.length - 4)) {\n        pos = lex._posArr(w.substring(0, w.length - 3)); // hopped\n      }\n      if (!pos && w.endsWith(\"ied\")) {\n        pos = lex._posArr(w.substring(0, w.length - 3) + \"y\"); // cried\n      }\n      if (pos && pos.includes('vb')) return true;\n    }\n\n    // ends with en?\n    if (w.endsWith(\"en\")) {\n\n      let pos = lex._posArr(w.substring(0, w.length - 1)) // arisen\n        || lex._posArr(w.substring(0, w.length - 2)); // eaten\n\n      if (!pos && w.charAt(w.length - 3) === w.charAt(w.length - 4)) {\n        // forgotten / bitten ... (past tense + en)? \n        pos = lex._posArr(w.substring(0, w.length - 3));\n      }\n      if (pos && (pos.includes('vb') || pos.includes(\"vbd\"))) return true;\n\n      // special cases\n      let stem = w.substring(0, w.length - 2);\n      if (/^(writt|ridd|chidd|swoll)$/.test(stem)) return true;\n    }\n\n    // ends with n, d, or t?\n    if (/[ndt]$/.test(w) && Object.keys(IRREG_VERBS_LEX).includes(w)) {\n      // grown, thrown, heard, learnt...\n      // start, bust...\n      let pos = lex._posArr(w.substring(0, w.length - 1))\n      if (pos && (pos.includes('vb'))) return true;\n    }\n\n    return false;\n  }\n\n  _pastTense(theVerb, pers, numb) {\n    const RiTa = this.RiTa;\n    if (theVerb.toLowerCase() === \"be\") {\n      switch (numb) {\n        case RiTa.SINGULAR:\n          switch (pers) {\n            case RiTa.FIRST: break;\n            case RiTa.THIRD: return \"was\";\n            case RiTa.SECOND: return \"were\";\n          }\n          break;\n        case RiTa.PLURAL:\n          return \"were\";\n      }\n    }\n    return this._checkRules(PAST_RULESET, theVerb);\n  }\n\n  _presentTense(theVerb, person, number) {\n    person = person || this.person;\n    number = number || this.number;\n    const RiTa = this.RiTa;\n    if (person === RiTa.THIRD && number === RiTa.SINGULAR) {\n      return this._checkRules(PRESENT_RULESET, theVerb);\n    }\n    else if (theVerb === \"be\") {\n      if (number === RiTa.SINGULAR) {\n        switch (person) {\n          case RiTa.FIRST: return \"am\";\n          case RiTa.SECOND: return \"are\";\n          case RiTa.THIRD: return \"is\";\n        }\n      } else {\n        return \"are\";\n      }\n    }\n    return theVerb;\n  }\n\n  _verbForm(theVerb, tense, person, number) {\n    switch (tense) {\n      case this.RiTa.PRESENT:\n        return this._presentTense(theVerb, person, number);\n      case this.RiTa.PAST:\n        return this._pastTense(theVerb, person, number);\n    }\n    return theVerb;\n  }\n\n  _handleStem = function (word) {\n\n    if (this.RiTa.lexicon.data.hasOwnProperty(word)\n      && this.RiTa.tagger.allTags(word).includes(\"vb\")) {\n      return word;\n    }\n\n    let w = word;\n    let allVerb = this.allVerbs;\n    while (w.length > 1) {\n      let pattern = new RegExp(\"^\" + w);\n      let guess = allVerb.filter(item => pattern.test(item));\n      if (!guess || guess.length < 1) {\n        w = w.slice(0, -1);\n        continue;\n      }\n      // always look for shorter words first\n      guess.sort((a, b) => a.length - b.length);\n\n      // look for words (a===b or stem(b)===a) first\n      for (let i = 0; i < guess.length; i++) {\n        if (word === guess[i]) return word;\n        if (this.RiTa.stem(guess[i]) === word) return guess[i];\n        if (this.unconjugate(this.RiTa.stem(guess[i])) === word) return guess[i];\n      }\n\n      w = w.slice(0, -1);\n    }\n\n    // can't find possible word in dict, return original\n    return word;\n  }\n}\n\nconst IRREG_VERBS_LEX = {\n  \"abetted\": \"abet\", \"abetting\": \"abet\", \"abhorred\": \"abhor\", \"abhorring\": \"abhor\", \"abode\": \"abide\", \"accompanied\": \"accompany\", \"acidified\": \"acidify\", \"acquitted\": \"acquit\", \"acquitting\": \"acquit\", \"addrest\": \"address\", \"admitted\": \"admit\", \"admitting\": \"admit\", \"allotted\": \"allot\", \"allotting\": \"allot\", \"am\": \"be\", \"amplified\": \"amplify\", \"annulled\": \"annul\", \"annulling\": \"annul\", \"applied\": \"apply\", \"arcked\": \"arc\", \"arcking\": \"arc\", \"are\": \"be\", \"arisen\": \"arise\", \"arose\": \"arise\", \"ate\": \"eat\", \"atrophied\": \"atrophy\", \"awoke\": \"awake\", \"awoken\": \"awake\", \"bade\": \"bid\", \"bagged\": \"bag\", \"bagging\": \"bag\", \"bandied\": \"bandy\", \"banned\": \"ban\", \"banning\": \"ban\", \"barred\": \"bar\", \"barrelled\": \"barrel\", \"barrelling\": \"barrel\", \"barring\": \"bar\", \"batted\": \"bat\", \"batting\": \"bat\", \"beaten\": \"beat\", \"beautified\": \"beautify\", \"became\": \"become\", \"bed\": \"bed\", \"bedded\": \"bed\", \"bedding\": \"bed\", \"bedevilled\": \"bedevil\", \"bedevilling\": \"bedevil\", \"been\": \"be\", \"befallen\": \"befall\", \"befell\": \"befall\", \"befitted\": \"befit\", \"befitting\": \"befit\", \"began\": \"begin\", \"begat\": \"beget\", \"begetting\": \"beget\", \"begged\": \"beg\", \"begging\": \"beg\", \"beginning\": \"begin\", \"begot\": \"beget\", \"begotten\": \"beget\", \"begun\": \"begin\", \"beheld\": \"behold\", \"beholden\": \"behold\", \"belying\": \"belie\", \"benefitted\": \"benefit\", \"benefitting\": \"benefit\", \"bent\": \"bend\", \"bespoke\": \"bespeak\", \"bespoken\": \"bespeak\", \"betted\": \"bet\", \"betting\": \"bet\", \"bevelled\": \"bevel\", \"bevelling\": \"bevel\", \"biassed\": \"bias\", \"biassing\": \"bias\", \"bidden\": \"bid\", \"bidding\": \"bid\", \"bit\": \"bite\", \"bitted\": \"bit\", \"bitten\": \"bite\", \"bitting\": \"bit\", \"bled\": \"bleed\", \"blest\": \"bless\", \"blew\": \"blow\", \"blipped\": \"blip\", \"blipping\": \"blip\", \"blotted\": \"blot\", \"blotting\": \"blot\", \"blown\": \"blow\", \"blurred\": \"blur\", \"blurring\": \"blur\", \"bore\": \"bear\", \"born\": \"bear\", \"bought\": \"buy\", \"bound\": \"bind\", \"bragged\": \"brag\", \"bragging\": \"brag\", \"bred\": \"breed\", \"broke\": \"break\", \"broken\": \"break\", \"brought\": \"bring\", \"browbeaten\": \"browbeat\", \"budded\": \"bud\", \"budding\": \"bud\", \"bugged\": \"bug\", \"bugging\": \"bug\", \"built\": \"build\", \"bullied\": \"bully\", \"bummed\": \"bum\", \"bumming\": \"bum\", \"buried\": \"bury\", \"burnt\": \"burn\", \"bypast\": \"bypass\", \"calcified\": \"calcify\", \"came\": \"come\", \"cancelled\": \"cancel\", \"cancelling\": \"cancel\", \"canned\": \"can\", \"canning\": \"can\", \"capped\": \"cap\", \"capping\": \"cap\", \"carried\": \"carry\", \"caught\": \"catch\", \"certified\": \"certify\", \"channelled\": \"channel\", \"channelling\": \"channel\", \"charred\": \"char\", \"charring\": \"char\", \"chatted\": \"chat\", \"chatting\": \"chat\", \"chid\": \"chide\", \"chidden\": \"chide\", \"chinned\": \"chin\", \"chinning\": \"chin\", \"chiselled\": \"chisel\", \"chiselling\": \"chisel\", \"chopped\": \"chop\", \"chopping\": \"chop\", \"chose\": \"choose\", \"chosen\": \"choose\", \"chugged\": \"chug\", \"chugging\": \"chug\", \"clad\": \"clothe\", \"clarified\": \"clarify\", \"classified\": \"classify\", \"clipped\": \"clip\", \"clipping\": \"clip\", \"clogged\": \"clog\", \"clogging\": \"clog\", \"clung\": \"cling\", \"co-ordinate\": \"coordinate\", \"co-ordinated\": \"coordinate\", \"co-ordinates\": \"coordinate\", \"co-ordinating\": \"coordinate\", \"codified\": \"codify\", \"combatted\": \"combat\", \"combatting\": \"combat\", \"committed\": \"commit\", \"committing\": \"commit\", \"compelled\": \"compel\", \"compelling\": \"compel\", \"complied\": \"comply\", \"concurred\": \"concur\", \"concurring\": \"concur\", \"conferred\": \"confer\", \"conferring\": \"confer\", \"controlled\": \"control\", \"controlling\": \"control\", \"copied\": \"copy\", \"corralled\": \"corral\", \"corralling\": \"corral\", \"counselled\": \"counsel\", \"counselling\": \"counsel\", \"crammed\": \"cram\", \"cramming\": \"cram\", \"crept\": \"creep\", \"cried\": \"cry\", \"cropped\": \"crop\", \"cropping\": \"crop\", \"crucified\": \"crucify\", \"cupped\": \"cup\", \"cupping\": \"cup\", \"curried\": \"curry\", \"curst\": \"curse\", \"cutting\": \"cut\", \"dallied\": \"dally\", \"dealt\": \"deal\", \"decried\": \"decry\", \"deferred\": \"defer\", \"deferring\": \"defer\", \"defied\": \"defy\", \"demurred\": \"demur\", \"demurring\": \"demur\", \"denied\": \"deny\", \"deterred\": \"deter\", \"deterring\": \"deter\", \"detoxified\": \"detoxify\", \"dialled\": \"dial\", \"dialling\": \"dial\", \"did\": \"do\", \"digging\": \"dig\", \"dignified\": \"dignify\", \"dimmed\": \"dim\", \"dimming\": \"dim\", \"dipped\": \"dip\", \"dipping\": \"dip\", \"dirtied\": \"dirty\", \"dispelled\": \"dispel\", \"dispelling\": \"dispel\", \"disqualified\": \"disqualify\", \"dissatisfied\": \"dissatisfy\", \"diversified\": \"diversify\", \"divvied\": \"divvy\", \"dizzied\": \"dizzy\", \"done\": \"do\", \"donned\": \"don\", \"donning\": \"don\", \"dotted\": \"dot\", \"dotting\": \"dot\", \"dove\": \"dive\", \"dragged\": \"drag\", \"dragging\": \"drag\", \"drank\": \"drink\", \"drawn\": \"draw\", \"dreamt\": \"dream\", \"drew\": \"draw\", \"dried\": \"dry\", \"dripped\": \"drip\", \"dripping\": \"drip\", \"driven\": \"drive\", \"dropped\": \"drop\", \"dropping\": \"drop\", \"drove\": \"drive\", \"drubbed\": \"drub\", \"drubbing\": \"drub\", \"drummed\": \"drum\", \"drumming\": \"drum\", \"drunk\": \"drink\", \"dubbed\": \"dub\", \"dubbing\": \"dub\", \"duelled\": \"duel\", \"duelling\": \"duel\", \"dug\": \"dig\", \"dwelt\": \"dwell\", \"dying\": \"die\", \"eaten\": \"eat\", \"eavesdropped\": \"eavesdrop\", \"eavesdropping\": \"eavesdrop\", \"electrified\": \"electrify\", \"embedded\": \"embed\", \"embedding\": \"embed\", \"embodied\": \"embody\", \"emitted\": \"emit\", \"emitting\": \"emit\", \"emptied\": \"empty\", \"enthralled\": \"enthral\", \"enthralling\": \"enthral\", \"envied\": \"envy\", \"equalled\": \"equal\", \"equalling\": \"equal\", \"equipped\": \"equip\", \"equipping\": \"equip\", \"excelled\": \"excel\", \"excelling\": \"excel\", \"exemplified\": \"exemplify\", \"expelled\": \"expel\", \"expelling\": \"expel\", \"extolled\": \"extol\", \"extolling\": \"extol\", \"fallen\": \"fall\", \"falsified\": \"falsify\", \"fancied\": \"fancy\", \"fanned\": \"fan\", \"fanning\": \"fan\", \"fed\": \"feed\", \"feed\": \"feed\", \"fell\": \"fall\", \"felt\": \"feel\", \"ferried\": \"ferry\", \"fitted\": \"fit\", \"fitting\": \"fit\", \"flagged\": \"flag\", \"flagging\": \"flag\", \"fled\": \"flee\", \"flew\": \"fly\", \"flipped\": \"flip\", \"flipping\": \"flip\", \"flitted\": \"flit\", \"flitting\": \"flit\", \"flopped\": \"flop\", \"flopping\": \"flop\", \"flown\": \"fly\", \"flung\": \"fling\", \"fogged\": \"fog\", \"fogging\": \"fog\", \"forbad\": \"forbid\", \"forbade\": \"forbid\", \"forbidden\": \"forbid\", \"forbidding\": \"forbid\", \"foregone\": \"forego\", \"foresaw\": \"foresee\", \"foreseen\": \"foresee\", \"foretold\": \"foretell\", \"forewent\": \"forego\", \"forgave\": \"forgive\", \"forgetting\": \"forget\", \"forgiven\": \"forgive\", \"forgone\": \"forgo\", \"forgot\": \"forget\", \"forgotten\": \"forget\", \"forsaken\": \"forsake\", \"forsook\": \"forsake\", \"fortified\": \"fortify\", \"forwent\": \"forgo\", \"fought\": \"fight\", \"found\": \"find\", \"fretted\": \"fret\", \"fretting\": \"fret\", \"fried\": \"fry\", \"frolicked\": \"frolic\", \"frolicking\": \"frolic\", \"froze\": \"freeze\", \"frozen\": \"freeze\", \"fuelled\": \"fuel\", \"fuelling\": \"fuel\", \"funnelled\": \"funnel\", \"funnelling\": \"funnel\", \"gapped\": \"gap\", \"gapping\": \"gap\", \"gassed\": \"gas\", \"gasses\": \"gas\", \"gassing\": \"gas\", \"gave\": \"give\", \"gelled\": \"gel\", \"gelling\": \"gel\", \"getting\": \"get\", \"girt\": \"gird\", \"given\": \"give\", \"glorified\": \"glorify\", \"glutted\": \"glut\", \"glutting\": \"glut\", \"gnawn\": \"gnaw\", \"gone\": \"go\", \"got\": \"get\", \"gotten\": \"get\", \"grabbed\": \"grab\", \"grabbing\": \"grab\", \"gratified\": \"gratify\", \"grew\": \"grow\", \"grinned\": \"grin\", \"grinning\": \"grin\", \"gripped\": \"grip\", \"gripping\": \"grip\", \"gript\": \"grip\", \"gritted\": \"grit\", \"gritting\": \"grit\", \"ground\": \"grind\", \"grovelled\": \"grovel\", \"grovelling\": \"grovel\", \"grown\": \"grow\", \"gummed\": \"gum\", \"gumming\": \"gum\", \"gunned\": \"gun\", \"gunning\": \"gun\", \"had\": \"have\", \"handicapped\": \"handicap\", \"handicapping\": \"handicap\", \"harried\": \"harry\", \"has\": \"have\", \"heard\": \"hear\", \"held\": \"hold\", \"hewn\": \"hew\", \"hid\": \"hide\", \"hidden\": \"hide\", \"hitting\": \"hit\", \"hobnobbed\": \"hobnob\", \"hobnobbing\": \"hobnob\", \"honied\": \"honey\", \"hopped\": \"hop\", \"hopping\": \"hop\", \"horrified\": \"horrify\", \"hove\": \"heave\", \"hugged\": \"hug\", \"hugging\": \"hug\", \"hummed\": \"hum\", \"humming\": \"hum\", \"hung\": \"hang\", \"hurried\": \"hurry\", \"identified\": \"identify\", \"impelled\": \"impel\", \"impelling\": \"impel\", \"implied\": \"imply\", \"incurred\": \"incur\", \"incurring\": \"incur\", \"indemnified\": \"indemnify\", \"inferred\": \"infer\", \"inferring\": \"infer\", \"initialled\": \"initial\", \"initialling\": \"initial\", \"intensified\": \"intensify\", \"interred\": \"inter\", \"interring\": \"inter\", \"interwove\": \"interweave\", \"interwoven\": \"interweave\", \"is\": \"be\", \"jagged\": \"jag\", \"jagging\": \"jag\", \"jammed\": \"jam\", \"jamming\": \"jam\", \"jetted\": \"jet\", \"jetting\": \"jet\", \"jimmied\": \"jimmy\", \"jogged\": \"jog\", \"jogging\": \"jog\", \"justified\": \"justify\", \"kept\": \"keep\", \"kidded\": \"kid\", \"kidding\": \"kid\", \"kidnapped\": \"kidnap\", \"kidnapping\": \"kidnap\", \"knelt\": \"kneel\", \"knew\": \"know\", \"knitted\": \"knit\", \"knitting\": \"knit\", \"knotted\": \"knot\", \"knotting\": \"knot\", \"known\": \"know\", \"labelled\": \"label\", \"labelling\": \"label\", \"laden\": \"lade\", \"lagged\": \"lag\", \"lagging\": \"lag\", \"laid\": \"lay\", \"lain\": \"lie\", \"lay\": \"lie\", \"leant\": \"lean\", \"leapfrogged\": \"leapfrog\", \"leapfrogging\": \"leapfrog\", \"leapt\": \"leap\", \"learnt\": \"learn\", \"led\": \"lead\", \"left\": \"leave\", \"lent\": \"lend\", \"letting\": \"let\", \"levelled\": \"level\", \"levelling\": \"level\", \"levied\": \"levy\", \"libelled\": \"libel\", \"libelling\": \"libel\", \"liquefied\": \"liquefy\", \"lit\": \"light\", \"lobbed\": \"lob\", \"lobbied\": \"lobby\", \"lobbing\": \"lob\", \"logged\": \"log\", \"logging\": \"log\", \"lost\": \"lose\", \"lugged\": \"lug\", \"lugging\": \"lug\", \"lying\": \"lie\", \"made\": \"make\", \"magnified\": \"magnify\", \"manned\": \"man\", \"manning\": \"man\", \"mapped\": \"map\", \"mapping\": \"map\", \"marred\": \"mar\", \"married\": \"marry\", \"marring\": \"mar\", \"marshalled\": \"marshal\", \"marshalling\": \"marshal\", \"marvelled\": \"marvel\", \"marvelling\": \"marvel\", \"meant\": \"mean\", \"met\": \"meet\", \"mimicked\": \"mimic\", \"mimicking\": \"mimic\", \"misapplied\": \"misapply\", \"misled\": \"mislead\", \"misspelt\": \"misspell\", \"mistaken\": \"mistake\", \"mistook\": \"mistake\", \"misunderstood\": \"misunderstand\", \"modelled\": \"model\", \"modelling\": \"model\", \"modified\": \"modify\", \"mollified\": \"mollify\", \"molten\": \"melt\", \"mopped\": \"mop\", \"mopping\": \"mop\", \"mown\": \"mow\", \"multiplied\": \"multiply\", \"mummified\": \"mummify\", \"mystified\": \"mystify\", \"nabbed\": \"nab\", \"nabbing\": \"nab\", \"nagged\": \"nag\", \"nagging\": \"nag\", \"napped\": \"nap\", \"napping\": \"nap\", \"netted\": \"net\", \"netting\": \"net\", \"nipped\": \"nip\", \"nipping\": \"nip\", \"nodded\": \"nod\", \"nodding\": \"nod\", \"notified\": \"notify\", \"nullified\": \"nullify\", \"occupied\": \"occupy\", \"occurred\": \"occur\", \"occurring\": \"occur\", \"offsetting\": \"offset\", \"omitted\": \"omit\", \"omitting\": \"omit\", \"ossified\": \"ossify\", \"outbidden\": \"outbid\", \"outbidding\": \"outbid\", \"outdid\": \"outdo\", \"outdone\": \"outdo\", \"outfitted\": \"outfit\", \"outfitting\": \"outfit\", \"outgrew\": \"outgrow\", \"outgrown\": \"outgrow\", \"outputted\": \"output\", \"outputting\": \"output\", \"outran\": \"outrun\", \"outrunning\": \"outrun\", \"outshone\": \"outshine\", \"outsold\": \"outsell\", \"outstripped\": \"outstrip\", \"outstripping\": \"outstrip\", \"outwitted\": \"outwit\", \"outwitting\": \"outwit\", \"overcame\": \"overcome\", \"overdid\": \"overdo\", \"overdone\": \"overdo\", \"overdrawn\": \"overdraw\", \"overdrew\": \"overdraw\", \"overflown\": \"overflow\", \"overheard\": \"overhear\", \"overhung\": \"overhang\", \"overlaid\": \"overlay\", \"overlapped\": \"overlap\", \"overlapping\": \"overlap\", \"overpaid\": \"overpay\", \"overridden\": \"override\", \"overrode\": \"override\",\n  \"oversaw\": \"oversee\", \"overseen\": \"oversee\", \"oversimplified\": \"oversimplify\", \"overspent\": \"overspend\", \"overstepped\": \"overstep\", \"overstepping\": \"overstep\", \"overtaken\": \"overtake\", \"overthrew\": \"overthrow\", \"overthrown\": \"overthrow\", \"overtook\": \"overtake\", \"pacified\": \"pacify\", \"padded\": \"pad\", \"padding\": \"pad\", \"paid\": \"pay\", \"panicked\": \"panic\", \"panicking\": \"panic\", \"panned\": \"pan\", \"panning\": \"pan\", \"parallelled\": \"parallel\", \"parallelling\": \"parallel\", \"parcelled\": \"parcel\", \"parcelling\": \"parcel\", \"parodied\": \"parody\", \"parried\": \"parry\", \"partaken\": \"partake\", \"partook\": \"partake\", \"patrolled\": \"patrol\", \"patrolling\": \"patrol\", \"patted\": \"pat\", \"patting\": \"pat\", \"pedalled\": \"pedal\", \"pedalling\": \"pedal\", \"pegged\": \"peg\", \"pegging\": \"peg\", \"pencilled\": \"pencil\", \"pencilling\": \"pencil\", \"penned\": \"pen\", \"penning\": \"pen\", \"pent\": \"pen\", \"permitted\": \"permit\", \"permitting\": \"permit\", \"personified\": \"personify\", \"petrified\": \"petrify\", \"petted\": \"pet\", \"petting\": \"pet\", \"photocopied\": \"photocopy\", \"pilloried\": \"pillory\", \"pinned\": \"pin\", \"pinning\": \"pin\", \"pitied\": \"pity\", \"pitted\": \"pit\", \"pitting\": \"pit\", \"planned\": \"plan\", \"planning\": \"plan\", \"pled\": \"plead\", \"plied\": \"ply\", \"plodded\": \"plod\", \"plodding\": \"plod\", \"plopped\": \"plop\", \"plopping\": \"plop\", \"plotted\": \"plot\", \"plotting\": \"plot\", \"plugged\": \"plug\", \"plugging\": \"plug\", \"popped\": \"pop\", \"popping\": \"pop\", \"potted\": \"pot\", \"potting\": \"pot\", \"preferred\": \"prefer\", \"preferring\": \"prefer\", \"preoccupied\": \"preoccupy\", \"prepaid\": \"prepay\", \"pried\": \"pry\", \"prodded\": \"prod\", \"prodding\": \"prod\", \"programmed\": \"program\", \"programmes\": \"program\", \"programming\": \"program\", \"propelled\": \"propel\", \"propelling\": \"propel\", \"prophesied\": \"prophesy\", \"propped\": \"prop\", \"propping\": \"prop\", \"proven\": \"prove\", \"pummelled\": \"pummel\", \"pummelling\": \"pummel\", \"purified\": \"purify\", \"putting\": \"put\", \"qualified\": \"qualify\", \"quantified\": \"quantify\", \"quarrelled\": \"quarrel\", \"quarrelling\": \"quarrel\", \"quitted\": \"quit\", \"quitting\": \"quit\", \"quizzed\": \"quiz\", \"quizzes\": \"quiz\", \"quizzing\": \"quiz\", \"rallied\": \"rally\", \"rammed\": \"ram\", \"ramming\": \"ram\", \"ran\": \"run\", \"rang\": \"ring\", \"rapped\": \"rap\", \"rapping\": \"rap\", \"rarefied\": \"rarefy\", \"ratified\": \"ratify\", \"ratted\": \"rat\", \"ratting\": \"rat\", \"rebelled\": \"rebel\", \"rebelling\": \"rebel\", \"rebuilt\": \"rebuild\", \"rebutted\": \"rebut\", \"rebutting\": \"rebut\", \"reclassified\": \"reclassify\", \"rectified\": \"rectify\", \"recurred\": \"recur\", \"recurring\": \"recur\", \"redid\": \"redo\", \"redone\": \"redo\", \"referred\": \"refer\", \"referring\": \"refer\", \"refitted\": \"refit\", \"refitting\": \"refit\", \"refuelled\": \"refuel\", \"refuelling\": \"refuel\", \"regretted\": \"regret\", \"regretting\": \"regret\", \"reheard\": \"rehear\", \"relied\": \"rely\", \"remade\": \"remake\", \"remarried\": \"remarry\", \"remitted\": \"remit\", \"remitting\": \"remit\", \"repaid\": \"repay\", \"repelled\": \"repel\", \"repelling\": \"repel\", \"replied\": \"reply\", \"resetting\": \"reset\", \"retaken\": \"retake\", \"rethought\": \"rethink\", \"retook\": \"retake\", \"retried\": \"retry\", \"retrofitted\": \"retrofit\", \"retrofitting\": \"retrofit\", \"revelled\": \"revel\", \"revelling\": \"revel\", \"revved\": \"rev\", \"revving\": \"rev\", \"rewritten\": \"rewrite\", \"rewrote\": \"rewrite\", \"ricochetted\": \"ricochet\", \"ricochetting\": \"ricochet\", \"ridded\": \"rid\", \"ridden\": \"ride\", \"ridding\": \"rid\", \"rigged\": \"rig\", \"rigging\": \"rig\", \"ripped\": \"rip\", \"ripping\": \"rip\", \"risen\": \"rise\", \"rivalled\": \"rival\", \"rivalling\": \"rival\", \"resold\": \"resell\", \"robbed\": \"rob\", \"robbing\": \"rob\", \"rode\": \"ride\", \"rose\": \"rise\", \"rotted\": \"rot\", \"rotting\": \"rot\", \"rubbed\": \"rub\", \"rubbing\": \"rub\", \"rung\": \"ring\", \"running\": \"run\", \"sagged\": \"sag\", \"sagging\": \"sag\", \"said\": \"say\", \"sallied\": \"sally\", \"sang\": \"sing\", \"sank\": \"sink\", \"sapped\": \"sap\", \"sapping\": \"sap\", \"sat\": \"sit\", \"satisfied\": \"satisfy\", \"savvied\": \"savvy\", \"saw\": \"see\", \"scanned\": \"scan\", \"scanning\": \"scan\", \"scrapped\": \"scrap\", \"scrapping\": \"scrap\", \"scrubbed\": \"scrub\", \"scrubbing\": \"scrub\", \"scurried\": \"scurry\", \"seed\": \"seed\", \"seen\": \"see\", \"sent\": \"send\", \"setting\": \"set\", \"sewn\": \"sew\", \"shaken\": \"shake\", \"shaven\": \"shave\", \"shed\": \"shed\", \"shedding\": \"shed\", \"shied\": \"shy\", \"shimmed\": \"shim\", \"shimmied\": \"shimmy\", \"shimming\": \"shim\", \"shipped\": \"ship\", \"shipping\": \"ship\", \"shone\": \"shine\", \"shook\": \"shake\", \"shopped\": \"shop\", \"shopping\": \"shop\", \"shot\": \"shoot\", \"shovelled\": \"shovel\", \"shovelling\": \"shovel\", \"shown\": \"show\", \"shrank\": \"shrink\", \"shredded\": \"shred\", \"shredding\": \"shred\", \"shrivelled\": \"shrivel\", \"shrivelling\": \"shrivel\", \"shrugged\": \"shrug\", \"shrugging\": \"shrug\", \"shrunk\": \"shrink\", \"shrunken\": \"shrink\", \"shunned\": \"shun\", \"shunning\": \"shun\", \"shutting\": \"shut\", \"sicked\": \"sic\", \"sicking\": \"sic\", \"sidestepped\": \"sidestep\", \"sidestepping\": \"sidestep\", \"signalled\": \"signal\", \"signalling\": \"signal\", \"signified\": \"signify\", \"simplified\": \"simplify\", \"singing\": \"sing\", \"sinned\": \"sin\", \"sinning\": \"sin\", \"sitting\": \"sit\", \"ski'd\": \"ski\", \"skidded\": \"skid\", \"skidding\": \"skid\", \"skimmed\": \"skim\", \"skimming\": \"skim\", \"skipped\": \"skip\", \"skipping\": \"skip\", \"slain\": \"slay\", \"slammed\": \"slam\", \"slamming\": \"slam\", \"slapped\": \"slap\", \"slapping\": \"slap\", \"sledding\": \"sled\", \"slept\": \"sleep\", \"slew\": \"slay\", \"slid\": \"slide\", \"slidden\": \"slide\", \"slipped\": \"slip\", \"slipping\": \"slip\", \"slitting\": \"slit\", \"slogged\": \"slog\", \"slogging\": \"slog\", \"slopped\": \"slop\", \"slopping\": \"slop\", \"slugged\": \"slug\", \"slugging\": \"slug\", \"slung\": \"sling\", \"slurred\": \"slur\", \"slurring\": \"slur\", \"smelt\": \"smell\", \"snagged\": \"snag\", \"snagging\": \"snag\", \"snapped\": \"snap\", \"snapping\": \"snap\", \"snipped\": \"snip\", \"snipping\": \"snip\", \"snubbed\": \"snub\", \"snubbing\": \"snub\", \"snuck\": \"sneak\", \"sobbed\": \"sob\", \"sobbing\": \"sob\", \"sold\": \"sell\", \"solidified\": \"solidify\", \"sought\": \"seek\", \"sown\": \"sow\", \"spanned\": \"span\", \"spanning\": \"span\", \"spat\": \"spit\", \"specified\": \"specify\", \"sped\": \"speed\", \"spelt\": \"spell\", \"spent\": \"spend\", \"spied\": \"spy\", \"spilt\": \"spill\", \"spinning\": \"spin\", \"spiralled\": \"spiral\", \"spiralling\": \"spiral\", \"spitted\": \"spit\", \"spitting\": \"spit\", \"splitting\": \"split\", \"spoilt\": \"spoil\", \"spoke\": \"speak\", \"spoken\": \"speak\", \"spotlit\": \"spotlight\", \"spotted\": \"spot\", \"spotting\": \"spot\", \"sprang\": \"spring\", \"sprung\": \"spring\", \"spun\": \"spin\", \"spurred\": \"spur\", \"spurring\": \"spur\", \"squatted\": \"squat\", \"squatting\": \"squat\", \"stank\": \"stink\", \"starred\": \"star\", \"starring\": \"star\", \"stemmed\": \"stem\", \"stemming\": \"stem\", \"stepped\": \"step\", \"stepping\": \"step\", \"stirred\": \"stir\", \"stirring\": \"stir\", \"stole\": \"steal\", \"stolen\": \"steal\", \"stood\": \"stand\", \"stopped\": \"stop\", \"stopping\": \"stop\", \"stove\": \"stave\", \"strapped\": \"strap\", \"strapping\": \"strap\", \"stratified\": \"stratify\", \"stridden\": \"stride\", \"stripped\": \"strip\", \"stripping\": \"strip\", \"striven\": \"strive\", \"strode\": \"stride\", \"strove\": \"strive\", \"struck\": \"strike\", \"strung\": \"string\", \"stubbed\": \"stub\", \"stubbing\": \"stub\", \"stuck\": \"stick\", \"studied\": \"study\", \"stung\": \"sting\", \"stunk\": \"stink\", \"stunned\": \"stun\", \"stunning\": \"stun\", \"stymying\": \"stymie\", \"subletting\": \"sublet\", \"submitted\": \"submit\", \"submitting\": \"submit\", \"summed\": \"sum\", \"summing\": \"sum\", \"sung\": \"sing\", \"sunk\": \"sink\", \"sunken\": \"sink\", \"sunned\": \"sun\", \"sunning\": \"sun\", \"supplied\": \"supply\", \"swabbed\": \"swab\", \"swabbing\": \"swab\", \"swam\": \"swim\", \"swapped\": \"swap\", \"swapping\": \"swap\", \"swept\": \"sweep\", \"swimming\": \"swim\", \"swivelled\": \"swivel\", \"swivelling\": \"swivel\", \"swollen\": \"swell\", \"swopped\": \"swap\", \"swopping\": \"swap\", \"swops\": \"swap\", \"swore\": \"swear\", \"sworn\": \"swear\", \"swum\": \"swim\", \"swung\": \"swing\", \"tagged\": \"tag\", \"tagging\": \"tag\", \"taken\": \"take\", \"tallied\": \"tally\", \"tapped\": \"tap\", \"tapping\": \"tap\", \"tarried\": \"tarry\", \"taught\": \"teach\", \"taxying\": \"taxi\", \"terrified\": \"terrify\", \"testified\": \"testify\", \"thinned\": \"thin\", \"thinning\": \"thin\", \"thought\": \"think\", \"threw\": \"throw\", \"thriven\": \"thrive\", \"throbbed\": \"throb\", \"throbbing\": \"throb\", \"throve\": \"thrive\", \"thrown\": \"throw\", \"thudded\": \"thud\", \"thudding\": \"thud\", \"tipped\": \"tip\", \"tipping\": \"tip\", \"told\": \"tell\", \"took\": \"take\", \"topped\": \"top\", \"topping\": \"top\", \"tore\": \"tear\", \"torn\": \"tear\", \"totalled\": \"total\", \"totalling\": \"total\", \"trafficked\": \"traffic\", \"trafficking\": \"traffic\", \"trameled\": \"trammel\", \"trameling\": \"trammel\", \"tramelled\": \"trammel\", \"tramelling\": \"trammel\", \"tramels\": \"trammel\", \"transferred\": \"transfer\", \"transferring\": \"transfer\", \"transmitted\": \"transmit\", \"transmitting\": \"transmit\", \"trapped\": \"trap\", \"trapping\": \"trap\", \"travelled\": \"travel\", \"travelling\": \"travel\", \"trekked\": \"trek\", \"trekking\": \"trek\", \"tried\": \"try\", \"trimmed\": \"trim\", \"trimming\": \"trim\", \"tripped\": \"trip\", \"tripping\": \"trip\", \"trod\": \"tread\", \"trodden\": \"tread\", \"trotted\": \"trot\", \"trotting\": \"trot\", \"tugged\": \"tug\", \"tugging\": \"tug\", \"tunnelled\": \"tunnel\", \"tunnelling\": \"tunnel\", \"tying\": \"tie\", \"typified\": \"typify\", \"undercutting\": \"undercut\", \"undergone\": \"undergo\", \"underlain\": \"underlie\", \"underlay\": \"underlie\", \"underlying\": \"underlie\", \"underpinned\": \"underpin\", \"underpinning\": \"underpin\", \"understood\": \"understand\", \"undertaken\": \"undertake\", \"undertook\": \"undertake\", \"underwent\": \"undergo\", \"underwritten\": \"underwrite\", \"underwrote\": \"underwrite\", \"undid\": \"undo\", \"undone\": \"undo\", \"unified\": \"unify\", \"unravelled\": \"unravel\", \"unravelling\": \"unravel\", \"unsteadied\": \"unsteady\", \"untying\": \"untie\", \"unwound\": \"unwind\", \"upheld\": \"uphold\", \"upsetting\": \"upset\", \"varied\": \"vary\", \"verified\": \"verify\", \"vilified\": \"vilify\", \"wadded\": \"wad\", \"wadding\": \"wad\", \"wagged\": \"wag\", \"wagging\": \"wag\", \"was\": \"be\", \"wearied\": \"weary\", \"wedded\": \"wed\", \"wedding\": \"wed\", \"weed\": \"weed\", \"went\": \"go\", \"wept\": \"weep\", \"were\": \"be\", \"wetted\": \"wet\", \"wetting\": \"wet\", \"whetted\": \"whet\", \"whetting\": \"whet\", \"whipped\": \"whip\", \"whipping\": \"whip\", \"whizzed\": \"whiz\", \"whizzes\": \"whiz\", \"whizzing\": \"whiz\", \"winning\": \"win\", \"withdrawn\": \"withdraw\", \"withdrew\": \"withdraw\", \"withheld\": \"withhold\", \"withstood\": \"withstand\", \"woke\": \"wake\", \"woken\": \"wake\", \"won\": \"win\", \"wore\": \"wear\", \"worn\": \"wear\", \"worried\": \"worry\", \"worshipped\": \"worship\", \"worshipping\": \"worship\", \"wound\": \"wind\", \"wove\": \"weave\", \"woven\": \"weave\", \"wrapped\": \"wrap\", \"wrapping\": \"wrap\", \"written\": \"write\", \"wrote\": \"write\", \"wrought\": \"work\", \"wrung\": \"wring\", \"yodelled\": \"yodel\", \"yodelling\": \"yodel\", \"zapped\": \"zap\", \"zapping\": \"zap\", \"zigzagged\": \"zigzag\", \"zigzagging\": \"zigzag\", \"zipped\": \"zip\", \"zipping\": \"zip\"\n}\n\nconst IRREG_VERBS_NOLEX = {\n  \"abutted\": \"abut\", \"abutting\": \"abut\", \"ad-libbed\": \"ad-lib\", \"ad-libbing\": \"ad-lib\", \"aerified\": \"aerify\", \"air-dried\": \"air-dry\", \"airdropped\": \"airdrop\", \"airdropping\": \"airdrop\", \"appalled\": \"appal\", \"appalling\": \"appal\", \"averred\": \"aver\", \"averring\": \"aver\", \"baby-sat\": \"baby-sit\", \"baby-sitting\": \"baby-sit\", \"back-pedalled\": \"back-pedal\", \"back-pedalling\": \"back-pedal\", \"backslid\": \"backslide\", \"backslidden\": \"backslide\", \"befogged\": \"befog\", \"befogging\": \"befog\", \"begirt\": \"begird\", \"bejewelled\": \"bejewel\", \"bejewelling\": \"bejewel\", \"belly-flopped\": \"belly-flop\", \"belly-flopping\": \"belly-flop\", \"blabbed\": \"blab\", \"blabbing\": \"blab\", \"bobbed\": \"bob\", \"bobbing\": \"bob\", \"bogged-down\": \"bog-down\", \"bogged_down\": \"bog_down\", \"bogging-down\": \"bog-down\", \"bogging_down\": \"bog_down\", \"bogs-down\": \"bog-down\", \"bogs_down\": \"bog_down\", \"booby-trapped\": \"booby-trap\", \"booby-trapping\": \"booby-trap\", \"bottle-fed\": \"bottle-feed\", \"breast-fed\": \"breast-feed\", \"brutified\": \"brutify\", \"bullshitted\": \"bullshit\", \"bullshitting\": \"bullshit\", \"bullwhipped\": \"bullwhip\", \"bullwhipping\": \"bullwhip\", \"caddies\": \"caddie\", \"caddying\": \"caddie\", \"carolled\": \"carol\", \"carolling\": \"carol\", \"catnapped\": \"catnap\", \"catnapping\": \"catnap\", \"citified\": \"citify\", \"cleft\": \"cleave\", \"clopped\": \"clop\", \"clopping\": \"clop\", \"clove\": \"cleave\", \"cloven\": \"cleave\", \"co-opted\": \"coopt\", \"co-opting\": \"coopt\", \"co-opts\": \"coopts\", \"co-starred\": \"co-star\", \"co-starring\": \"co-star\", \"coiffed\": \"coif\", \"coiffing\": \"coif\", \"court-martialled\": \"court-martial\", \"court-martialling\": \"court-martial\", \"crossbred\": \"crossbreed\", \"crosscutting\": \"crosscut\", \"curtsied\": \"curtsy\", \"dabbed\": \"dab\", \"dabbing\": \"dab\", \"dandified\": \"dandify\", \"debarred\": \"debar\", \"debarring\": \"debar\", \"debugged\": \"debug\", \"debugging\": \"debug\", \"decalcified\": \"decalcify\", \"declassified\": \"declassify\", \"decontrolled\": \"decontrol\", \"deep-fried\": \"deep-fry\", \"dehumidified\": \"dehumidify\", \"deified\": \"deify\", \"demystified\": \"demystify\", \"disbarred\": \"disbar\", \"disbarring\": \"disbar\", \"disembodied\": \"disembody\", \"disembowelled\": \"disembowel\", \"disembowelling\": \"disembowel\", \"disenthralled\": \"disenthral\", \"disenthralling\": \"disenthral\", \"disenthralls\": \"disenthral\", \"disenthrals\": \"disenthrall\", \"disinterred\": \"disinter\", \"disinterring\": \"disinter\", \"distilled\": \"distil\", \"distilling\": \"distil\", \"eddied\": \"eddy\", \"edified\": \"edify\", \"ego-tripped\": \"ego-trip\", \"ego-tripping\": \"ego-trip\", \"empanelled\": \"empanel\", \"empanelling\": \"empanel\", \"emulsified\": \"emulsify\", \"entrapped\": \"entrap\", \"entrapping\": \"entrap\", \"fibbed\": \"fib\", \"fibbing\": \"fib\", \"filled_up\": \"fill_up\", \"flip-flopped\": \"flip-flop\", \"flip-flopping\": \"flip-flop\", \"flogged\": \"flog\", \"flogging\": \"flog\", \"foreran\": \"forerun\", \"forerunning\": \"forerun\", \"foxtrotted\": \"foxtrot\", \"foxtrotting\": \"foxtrot\", \"freeze-dried\": \"freeze-dry\", \"frigged\": \"frig\", \"frigging\": \"frig\", \"fritted\": \"frit\", \"fritting\": \"frit\", \"fulfilled\": \"fulfil\", \"fulfilling\": \"fulfil\", \"gambolled\": \"gambol\", \"gambolling\": \"gambol\", \"gasified\": \"gasify\", \"gelt\": \"geld\", \"gets_lost\": \"get_lost\", \"gets_started\": \"get_started\", \"getting_lost\": \"get_lost\", \"getting_started\": \"get_started\", \"ghostwritten\": \"ghostwrite\", \"ghostwrote\": \"ghostwrite\", \"giftwrapped\": \"giftwrap\", \"giftwrapping\": \"giftwrap\", \"gilt\": \"gild\", \"gipped\": \"gip\", \"gipping\": \"gip\", \"glommed\": \"glom\", \"glomming\": \"glom\", \"goes_deep\": \"go_deep\", \"going_deep\": \"go_deep\", \"gone_deep\": \"go_deep\", \"goose-stepped\": \"goose-step\", \"goose-stepping\": \"goose-step\", \"got_lost\": \"get_lost\", \"got_started\": \"get_started\", \"gotten_lost\": \"get_lost\", \"gypped\": \"gyp\", \"gypping\": \"gyp\", \"had_a_feeling\": \"have_a_feeling\", \"had_left\": \"have_left\", \"had_the_feeling\": \"have_the_feeling\", \"hand-knitted\": \"hand-knit\", \"hand-knitting\": \"hand-knit\", \"handfed\": \"handfeed\", \"has_a_feeling\": \"have_a_feeling\", \"has_left\": \"have_left\", \"has_the_feeling\": \"have_the_feeling\", \"having_a_feeling\": \"have_a_feeling\", \"having_left\": \"have_left\", \"having_the_feeling\": \"have_the_feeling\", \"high-hatted\": \"high-hat\", \"high-hatting\": \"high-hat\", \"hogtying\": \"hogtie\", \"horsewhipped\": \"horsewhip\", \"horsewhipping\": \"horsewhip\", \"humidified\": \"humidify\", \"hypertrophied\": \"hypertrophy\", \"inbred\": \"inbreed\", \"installed\": \"instal\", \"installing\": \"instal\", \"interbred\": \"interbreed\", \"intercutting\": \"intercut\", \"interlaid\": \"interlay\", \"interlapped\": \"interlap\", \"intermarried\": \"intermarry\", \"jellified\": \"jellify\", \"jibbed\": \"jib\", \"jibbing\": \"jib\", \"jitterbugged\": \"jitterbug\", \"jitterbugging\": \"jitterbug\", \"joined_forces\": \"join_forces\", \"joining_battle\": \"join_battle\", \"joining_forces\": \"join_forces\", \"joins_battle\": \"join_battle\", \"joins_forces\": \"join_forces\", \"joy-ridden\": \"joy-ride\", \"joy-rode\": \"joy-ride\", \"jumped_off\": \"jump_off\", \"jumping_off\": \"jump_off\", \"jumps_off\": \"jump_off\", \"jutted\": \"jut\", \"jutting\": \"jut\", \"knapped\": \"knap\", \"knapping\": \"knap\", \"ko'd\": \"ko\", \"ko'ing\": \"ko\", \"ko's\": \"ko\", \"lallygagged\": \"lallygag\", \"lallygagging\": \"lallygag\", \"leaves_undone\": \"leave_undone\", \"leaving_undone\": \"leave_undone\", \"left_undone\": \"leave_undone\", \"lignified\": \"lignify\", \"liquified\": \"liquify\", \"looked_towards\": \"look_towards\", \"looking_towards\": \"look_towards\", \"looks_towards\": \"look_towards\", \"machine-gunned\": \"machine-gun\", \"machine-gunning\": \"machine-gun\", \"minified\": \"minify\", \"miscarried\": \"miscarry\", \"misdealt\": \"misdeal\", \"misgave\": \"misgive\", \"misgiven\": \"misgive\", \"mislaid\": \"mislay\", \"mispled\": \"misplead\", \"misspent\": \"misspend\", \"mortified\": \"mortify\", \"objectified\": \"objectify\", \"outfought\": \"outfight\", \"outridden\": \"outride\", \"outrode\": \"outride\", \"outshot\": \"outshoot\", \"outthought\": \"outthink\", \"overbidden\": \"overbid\", \"overbidding\": \"overbid\", \"overblew\": \"overblow\", \"overblown\": \"overblow\", \"overflew\": \"overfly\", \"overgrew\": \"overgrow\", \"overgrown\": \"overgrow\", \"overshot\": \"overshoot\", \"overslept\": \"oversleep\", \"overwritten\": \"overwrite\", \"overwrote\": \"overwrite\", \"pinch-hitting\": \"pinch-hit\", \"pistol-whipped\": \"pistol-whip\", \"pistol-whipping\": \"pistol-whip\", \"played_a_part\": \"play_a_part\", \"playing_a_part\": \"play_a_part\", \"plays_a_part\": \"play_a_part\", \"pommelled\": \"pommel\", \"pommelling\": \"pommel\", \"prettified\": \"prettify\", \"putrefied\": \"putrefy\", \"quickstepped\": \"quickstep\", \"quickstepping\": \"quickstep\", \"rappelled\": \"rappel\", \"rappelling\": \"rappel\", \"recapped\": \"recap\", \"recapping\": \"recap\", \"recommitted\": \"recommit\", \"recommitting\": \"recommit\", \"reified\": \"reify\", \"rent\": \"rend\", \"repotted\": \"repot\", \"repotting\": \"repot\", \"retransmitted\": \"retransmit\", \"retransmitting\": \"retransmit\", \"reunified\": \"reunify\", \"rewound\": \"rewind\", \"sanctified\": \"sanctify\", \"sandbagged\": \"sandbag\", \"sandbagging\": \"sandbag\", \"scarified\": \"scarify\", \"scatted\": \"scat\", \"scrammed\": \"scram\", \"scramming\": \"scram\", \"scrummed\": \"scrum\", \"scrumming\": \"scrum\", \"shagged\": \"shag\", \"shagging\": \"shag\", \"shaken_hands\": \"shake_hands\", \"shakes_hands\": \"shake_hands\", \"shaking_hands\": \"shake_hands\", \"sharecropped\": \"sharecrop\", \"sharecropping\": \"sharecrop\", \"shellacked\": \"shellac\", \"shellacking\": \"shellac\", \"shook_hands\": \"shake_hands\", \"shrink-wrapped\": \"shrink-wrap\", \"shrink-wrapping\": \"shrink-wrap\", \"sideslipped\": \"sideslip\", \"sideslipping\": \"sideslip\", \"sightsaw\": \"sightsee\", \"sightseen\": \"sightsee\", \"skinny-dipped\": \"skinny-dip\", \"skinny-dipping\": \"skinny-dip\", \"skydove\": \"skydive\", \"slunk\": \"slink\", \"smit\": \"smite\", \"smitten\": \"smite\", \"smote\": \"smite\", \"snivelled\": \"snivel\", \"snivelling\": \"snivel\", \"snogged\": \"snog\", \"snogging\": \"snog\", \"soft-pedalled\": \"soft-pedal\", \"soft-pedalling\": \"soft-pedal\", \"sparred\": \"spar\", \"sparring\": \"spar\", \"speechified\": \"speechify\", \"spellbound\": \"spellbind\", \"spin-dried\": \"spin-dry\", \"spoon-fed\": \"spoon-feed\", \"stems_from\": \"stem_from\", \"stencilled\": \"stencil\", \"stencilling\": \"stencil\", \"strewn\": \"strew\", \"strummed\": \"strum\", \"strumming\": \"strum\", \"stultified\": \"stultify\", \"stupefied\": \"stupefy\", \"subjectified\": \"subjectify\", \"subtotalled\": \"subtotal\", \"subtotalling\": \"subtotal\", \"sullied\": \"sully\", \"supped\": \"sup\", \"supping\": \"sup\", \"syllabified\": \"syllabify\", \"taken_a_side\": \"take_a_side\", \"taken_pains\": \"take_pains\", \"taken_steps\": \"take_steps\", \"takes_a_side\": \"take_a_side\", \"takes_pains\": \"take_pains\", \"takes_steps\": \"take_steps\", \"taking_a_side\": \"take_a_side\", \"taking_pains\": \"take_pains\", \"taking_steps\": \"take_steps\", \"talcked\": \"talc\", \"talcking\": \"talc\", \"threw_out\": \"throw_out\", \"throwing_out\": \"throw_out\", \"thrown_out\": \"throw_out\", \"throws_out\": \"throw_out\", \"thrummed\": \"thrum\", \"thrumming\": \"thrum\", \"took_a_side\": \"take_a_side\", \"took_pains\": \"take_pains\", \"took_steps\": \"take_steps\", \"trammed\": \"tram\", \"tramming\": \"tram\", \"transfixt\": \"transfix\", \"transmogrified\": \"transmogrify\", \"trepanned\": \"trepan\", \"trepanning\": \"trepan\", \"typesetting\": \"typeset\", \"typewritten\": \"typewrite\", \"typewrote\": \"typewrite\", \"uglified\": \"uglify\", \"unbound\": \"unbind\", \"unclad\": \"unclothe\", \"underbidding\": \"underbid\", \"underfed\": \"underfeed\", \"underpaid\": \"underpay\", \"undersold\": \"undersell\", \"understudied\": \"understudy\", \"unfroze\": \"unfreeze\", \"unfrozen\": \"unfreeze\", \"unlearnt\": \"unlearn\", \"unmade\": \"unmake\", \"unmanned\": \"unman\", \"unmanning\": \"unman\", \"unpinned\": \"unpin\", \"unpinning\": \"unpin\", \"unplugged\": \"unplug\", \"unplugging\": \"unplug\", \"unslung\": \"unsling\", \"unstrung\": \"unstring\", \"unstuck\": \"unstick\", \"unwrapped\": \"unwrap\", \"unwrapping\": \"unwrap\", \"unzipped\": \"unzip\", \"unzipping\": \"unzip\", \"uppercutting\": \"uppercut\", \"verbified\": \"verbify\", \"versified\": \"versify\", \"vivified\": \"vivify\", \"vying\": \"vie\", \"waylaid\": \"waylay\", \"went_deep\": \"go_deep\", \"whinnied\": \"whinny\", \"whirred\": \"whir\", \"whirring\": \"whir\", \"window-shopped\": \"window-shop\", \"window-shopping\": \"window-shop\", \"yakked\": \"yak\", \"yakking\": \"yak\", \"yapped\": \"yap\", \"yapping\": \"yap\",\n};\n\nconst CONS = \"[bcdfghjklmnpqrstvwxyz]\";\nconst MODALS = [\"shall\", \"would\", \"may\", \"might\", \"ought\", \"should\"];\nconst VERBAL_PREFIX = \"((be|with|pre|un|over|re|mis|under|out|up|fore|for|counter|co|sub)(-?))\";\nconst ANY_STEM_RE = \"^((\\\\w+)(-\\\\w+)*)(\\\\s((\\\\w+)(-\\\\w+)*))*$\";\n\nconst ING_FORM_RULES = [\n  RE(CONS + \"ie$\", 2, \"ying\", 1),\n  RE(\"[^oie]e$\", 1, \"ing\", 1),\n  RE(\"^trek$\", 1, \"cking\"),\n  RE(\"^bring$\", 0, \"ing\"),\n  RE(\"^be$\", 0, \"ing\"),\n  RE(\"^age$\", 1, \"ing\"),\n  RE(\"(ibe)$\", 1, \"ing\", 0)\n];\n\nconst PAST_PART_RULES = [\n\n  RE(CONS + \"y$\", 1, \"ied\", 1),\n  RE(\"^\" + VERBAL_PREFIX + \"?(bring)$\", 3, \"ought\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(take|rise|strew|blow|draw|drive|know|give|\" + \"arise|gnaw|grave|grow|hew|know|mow|see|sew|throw|prove|saw|quartersaw|\" + \"partake|sake|shake|shew|show|shrive|sightsee|strew|strive)$\",\n    0, \"n\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?[gd]o$\", 0, \"ne\", 1),\n  RE(\"^(beat|eat|be|fall)$\", 0, \"en\"),\n  RE(\"^(have)$\", 2, \"d\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?bid$\", 0, \"den\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?[lps]ay$\", 1, \"id\", 1),\n  RE(\"^behave$\", 0, \"d\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?have$\", 2, \"d\", 1),\n  RE(\"(sink|slink|drink|shrink|stink)$\", 3, \"unk\"),\n  RE(\"(([sfc][twlp]?r?|w?r)ing|hang)$\", 3, \"ung\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(shear|swear|wear|tear)$\", 3, \"orn\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(bend|spend|send|lend)$\", 1, \"t\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(weep|sleep|sweep|creep|keep$)$\", 2, \"pt\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(sell|tell)$\", 3, \"old\"),\n  RE(\"^(outfight|beseech)$\", 4, \"ought\"),\n  RE(\"^bear$\", 3, \"orne\"),\n  RE(\"^bethink$\", 3, \"ought\"),\n  RE(\"^buy$\", 2, \"ought\"),\n  RE(\"^aby$\", 1, \"ought\"),\n  RE(\"^tarmac\", 0, \"ked\"),\n  RE(\"^abide$\", 3, \"ode\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(speak|(a?)wake|break)$\", 3, \"oken\"),\n  RE(\"^backbite$\", 1, \"ten\"),\n  RE(\"^backslide$\", 1, \"den\"),\n  RE(\"^become$\", 3, \"ame\"),\n  RE(\"^begird$\", 3, \"irt\"),\n  RE(\"^outlie$\", 2, \"ay\"),\n  RE(\"^rebind$\", 3, \"ound\"),\n  RE(\"^relay$\", 2, \"aid\"),\n  RE(\"^shit$\", 3, \"hat\"),\n  RE(\"^bereave$\", 4, \"eft\"),\n  RE(\"^foreswear$\", 3, \"ore\"),\n  RE(\"^overfly$\", 1, \"own\"),\n  RE(\"^beget$\", 2, \"otten\"),\n  RE(\"^begin$\", 3, \"gun\"),\n  RE(\"^bestride$\", 1, \"den\"),\n  RE(\"^bite$\", 1, \"ten\"),\n  RE(\"^bleed$\", 4, \"led\"),\n  RE(\"^bog-down$\", 5, \"ged-down\"),\n  RE(\"^bind$\", 3, \"ound\"),\n  RE(\"^(.*)feed$\", 4, \"fed\"),\n  RE(\"^breed$\", 4, \"red\"),\n  RE(\"^brei\", 0, \"d\"),\n  RE(\"^bring$\", 3, \"ought\"),\n  RE(\"^build$\", 1, \"t\"),\n  RE(\"^come\", 0, \"\"),\n  RE(\"^catch$\", 3, \"ught\"),\n  RE(\"^chivy$\", 1, \"vied\"),\n  RE(\"^choose$\", 3, \"sen\"),\n  RE(\"^cleave$\", 4, \"oven\"),\n  RE(\"^crossbreed$\", 4, \"red\"),\n  RE(\"^deal\", 0, \"t\"),\n  RE(\"^dow$\", 1, \"ught\"),\n  RE(\"^dream\", 0, \"t\"),\n  RE(\"^dig$\", 3, \"dug\"),\n  RE(\"^dwell$\", 2, \"lt\"),\n  RE(\"^enwind$\", 3, \"ound\"),\n  RE(\"^feel$\", 3, \"elt\"),\n  RE(\"^flee$\", 2, \"ed\"),\n  RE(\"^floodlight$\", 5, \"lit\"),\n  RE(\"^fly$\", 1, \"own\"),\n  RE(\"^forbear$\", 3, \"orne\"),\n  RE(\"^forerun$\", 3, \"ran\"),\n  RE(\"^forget$\", 2, \"otten\"),\n  RE(\"^fight$\", 4, \"ought\"),\n  RE(\"^find$\", 3, \"ound\"),\n  RE(\"^freeze$\", 4, \"ozen\"),\n  RE(\"^gainsay$\", 2, \"aid\"),\n  RE(\"^gin$\", 3, \"gan\"),\n  RE(\"^gen-up$\", 3, \"ned-up\"),\n  RE(\"^ghostwrite$\", 1, \"ten\"),\n  RE(\"^get$\", 2, \"otten\"),\n  RE(\"^grind$\", 3, \"ound\"),\n  RE(\"^hacksaw\", 0, \"n\"),\n  RE(\"^hear$\", 0, \"d\"),\n  RE(\"^hold$\", 3, \"eld\"),\n  RE(\"^hide$\", 1, \"den\"),\n  RE(\"^honey$\", 2, \"ied\"),\n  RE(\"^inbreed$\", 4, \"red\"),\n  RE(\"^indwell$\", 3, \"elt\"),\n  RE(\"^interbreed$\", 4, \"red\"),\n  RE(\"^interweave$\", 4, \"oven\"),\n  RE(\"^inweave$\", 4, \"oven\"),\n  RE(\"^ken$\", 2, \"ent\"),\n  RE(\"^kneel$\", 3, \"elt\"),\n  RE(\"^lie$\", 2, \"ain\"),\n  RE(\"^leap$\", 0, \"t\"),\n  RE(\"^learn$\", 0, \"t\"),\n  RE(\"^lead$\", 4, \"led\"),\n  RE(\"^leave$\", 4, \"eft\"),\n  RE(\"^light$\", 5, \"lit\"),\n  RE(\"^lose$\", 3, \"ost\"),\n  RE(\"^make$\", 3, \"ade\"),\n  RE(\"^mean\", 0, \"t\"),\n  RE(\"^meet$\", 4, \"met\"),\n  RE(\"^misbecome$\", 3, \"ame\"),\n  RE(\"^misdeal$\", 2, \"alt\"),\n  RE(\"^mishear$\", 1, \"d\"),\n  RE(\"^mislead$\", 4, \"led\"),\n  RE(\"^misunderstand$\", 3, \"ood\"),\n  RE(\"^outbreed$\", 4, \"red\"),\n  RE(\"^outrun$\", 3, \"ran\"),\n  RE(\"^outride$\", 1, \"den\"),\n  RE(\"^outshine$\", 3, \"one\"),\n  RE(\"^outshoot$\", 4, \"hot\"),\n  RE(\"^outstand$\", 3, \"ood\"),\n  RE(\"^outthink$\", 3, \"ought\"),\n  RE(\"^outgo$\", 2, \"went\"),\n  RE(\"^overbear$\", 3, \"orne\"),\n  RE(\"^overbuild$\", 3, \"ilt\"),\n  RE(\"^overcome$\", 3, \"ame\"),\n  RE(\"^overfly$\", 2, \"lew\"),\n  RE(\"^overhear$\", 2, \"ard\"),\n  RE(\"^overlie$\", 2, \"ain\"),\n  RE(\"^overrun$\", 3, \"ran\"),\n  RE(\"^override$\", 1, \"den\"),\n  RE(\"^overshoot$\", 4, \"hot\"),\n  RE(\"^overwind$\", 3, \"ound\"),\n  RE(\"^overwrite$\", 1, \"ten\"),\n  RE(\"^plead$\", 2, \"d\"),\n  RE(\"^rebuild$\", 3, \"ilt\"),\n  RE(\"^red$\", 3, \"red\"),\n  RE(\"^redo$\", 1, \"one\"),\n  RE(\"^remake$\", 3, \"ade\"),\n  RE(\"^resit$\", 3, \"sat\"),\n  RE(\"^rethink$\", 3, \"ought\"),\n  RE(\"^rewind$\", 3, \"ound\"),\n  RE(\"^rewrite$\", 1, \"ten\"),\n  RE(\"^ride$\", 1, \"den\"),\n  RE(\"^reeve$\", 4, \"ove\"),\n  RE(\"^sit$\", 3, \"sat\"),\n  RE(\"^shoe$\", 3, \"hod\"),\n  RE(\"^shine$\", 3, \"one\"),\n  RE(\"^shoot$\", 4, \"hot\"),\n  RE(\"^ski$\", 1, \"i'd\"),\n  RE(\"^slide$\", 1, \"den\"),\n  RE(\"^smite$\", 1, \"ten\"),\n  RE(\"^seek$\", 3, \"ought\"),\n  RE(\"^spit$\", 3, \"pat\"),\n  RE(\"^speed$\", 4, \"ped\"),\n  RE(\"^spellbind$\", 3, \"ound\"),\n  RE(\"^spoil$\", 2, \"ilt\"),\n  RE(\"^spotlight$\", 5, \"lit\"),\n  RE(\"^spin$\", 3, \"pun\"),\n  RE(\"^steal$\", 3, \"olen\"),\n  RE(\"^stand$\", 3, \"ood\"),\n  RE(\"^stave$\", 3, \"ove\"),\n  RE(\"^stride$\", 1, \"den\"),\n  RE(\"^strike$\", 3, \"uck\"),\n  RE(\"^stick$\", 3, \"uck\"),\n  RE(\"^swell$\", 3, \"ollen\"),\n  RE(\"^swim$\", 3, \"wum\"),\n  RE(\"^teach$\", 4, \"aught\"),\n  RE(\"^think$\", 3, \"ought\"),\n  RE(\"^tread$\", 3, \"odden\"),\n  RE(\"^typewrite$\", 1, \"ten\"),\n  RE(\"^unbind$\", 3, \"ound\"),\n  RE(\"^underbuy$\", 2, \"ought\"),\n  RE(\"^undergird$\", 3, \"irt\"),\n  RE(\"^undergo$\", 1, \"one\"),\n  RE(\"^underlie$\", 2, \"ain\"),\n  RE(\"^undershoot$\", 4, \"hot\"),\n  RE(\"^understand$\", 3, \"ood\"),\n  RE(\"^unfreeze$\", 4, \"ozen\"),\n  RE(\"^unlearn\", 0, \"t\"),\n  RE(\"^unmake$\", 3, \"ade\"),\n  RE(\"^unreeve$\", 4, \"ove\"),\n  RE(\"^unstick$\", 3, \"uck\"),\n  RE(\"^unteach$\", 4, \"aught\"),\n  RE(\"^unthink$\", 3, \"ought\"),\n  RE(\"^untread$\", 3, \"odden\"),\n  RE(\"^unwind$\", 3, \"ound\"),\n  RE(\"^upbuild$\", 1, \"t\"),\n  RE(\"^uphold$\", 3, \"eld\"),\n  RE(\"^upheave$\", 4, \"ove\"),\n  RE(\"^waylay$\", 2, \"ain\"),\n  RE(\"^whipsaw$\", 2, \"awn\"),\n  RE(\"^withhold$\", 3, \"eld\"),\n  RE(\"^withstand$\", 3, \"ood\"),\n  RE(\"^win$\", 3, \"won\"),\n  RE(\"^wind$\", 3, \"ound\"),\n  RE(\"^weave$\", 4, \"oven\"),\n  RE(\"^write$\", 1, \"ten\"),\n  RE(\"^trek$\", 1, \"cked\"),\n  RE(\"^ko$\", 1, \"o'd\"),\n  RE(\"^win$\", 2, \"on\"),\n\n  RE(\"e$\", 0, \"d\", 1),\n\n  // Null past forms\n  RE(\"^\" + VERBAL_PREFIX + \"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|hit|offset|put|quit|\" + \"wed|typeset|wed|spread|split|slit|read|run|rerun|shut|shed)$\", 0)\n];\n\nconst PAST_RULES = [\n  RE(\"^(reduce)$\", 0, \"d\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?[pls]ay$\", 1, \"id\", 1),\n  RE(CONS + \"y$\", 1, \"ied\", 1),\n  RE(\"^(fling|cling|hang)$\", 3, \"ung\"),\n  RE(\"(([sfc][twlp]?r?|w?r)ing)$\", 3, \"ang\", 1),\n  RE(\"^\" + VERBAL_PREFIX + \"?(bend|spend|send|lend|spend)$\", 1, \"t\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?lie$\", 2, \"ay\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(weep|sleep|sweep|creep|keep)$\", 2, \"pt\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?(sell|tell)$\", 3, \"old\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?do$\", 1, \"id\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?dig$\", 2, \"ug\"),\n  RE(\"^behave$\", 0, \"d\"),\n  RE(\"^(have)$\", 2, \"d\"),\n  RE(\"(sink|drink)$\", 3, \"ank\"),\n  RE(\"^swing$\", 3, \"ung\"),\n  RE(\"^be$\", 2, \"was\"),\n  RE(\"^outfight$\", 4, \"ought\"),\n  RE(\"^tarmac\", 0, \"ked\"),\n  RE(\"^abide$\", 3, \"ode\"),\n  RE(\"^aby$\", 1, \"ought\"),\n  RE(\"^become$\", 3, \"ame\"),\n  RE(\"^begird$\", 3, \"irt\"),\n  RE(\"^outlie$\", 2, \"ay\"),\n  RE(\"^rebind$\", 3, \"ound\"),\n  RE(\"^shit$\", 3, \"hat\"),\n  RE(\"^bereave$\", 4, \"eft\"),\n  RE(\"^foreswear$\", 3, \"ore\"),\n  RE(\"^bename$\", 3, \"empt\"),\n  RE(\"^beseech$\", 4, \"ought\"),\n  RE(\"^bethink$\", 3, \"ought\"),\n  RE(\"^bleed$\", 4, \"led\"),\n  RE(\"^bog-down$\", 5, \"ged-down\"),\n  RE(\"^buy$\", 2, \"ought\"),\n  RE(\"^bind$\", 3, \"ound\"),\n  RE(\"^(.*)feed$\", 4, \"fed\"),\n  RE(\"^breed$\", 4, \"red\"),\n  RE(\"^brei$\", 2, \"eid\"),\n  RE(\"^bring$\", 3, \"ought\"),\n  RE(\"^build$\", 3, \"ilt\"),\n  RE(\"^come$\", 3, \"ame\"),\n  RE(\"^catch$\", 3, \"ught\"),\n  RE(\"^clothe$\", 5, \"lad\"),\n  RE(\"^crossbreed$\", 4, \"red\"),\n  RE(\"^deal$\", 2, \"alt\"),\n  RE(\"^dow$\", 1, \"ught\"),\n  RE(\"^dream$\", 2, \"amt\"),\n  RE(\"^dwell$\", 3, \"elt\"),\n  RE(\"^enwind$\", 3, \"ound\"),\n  RE(\"^feel$\", 3, \"elt\"),\n  RE(\"^flee$\", 3, \"led\"),\n  RE(\"^floodlight$\", 5, \"lit\"),\n  RE(\"^arise$\", 3, \"ose\"),\n  RE(\"^eat$\", 3, \"ate\"),\n  RE(\"^backbite$\", 4, \"bit\"),\n  RE(\"^backslide$\", 4, \"lid\"),\n  RE(\"^befall$\", 3, \"ell\"),\n  RE(\"^begin$\", 3, \"gan\"),\n  RE(\"^beget$\", 3, \"got\"),\n  RE(\"^behold$\", 3, \"eld\"),\n  RE(\"^bespeak$\", 3, \"oke\"),\n  RE(\"^bestride$\", 3, \"ode\"),\n  RE(\"^betake$\", 3, \"ook\"),\n  RE(\"^bite$\", 4, \"bit\"),\n  RE(\"^blow$\", 3, \"lew\"),\n  RE(\"^bear$\", 3, \"ore\"),\n  RE(\"^break$\", 3, \"oke\"),\n  RE(\"^choose$\", 4, \"ose\"),\n  RE(\"^cleave$\", 4, \"ove\"),\n  RE(\"^countersink$\", 3, \"ank\"),\n  RE(\"^drink$\", 3, \"ank\"),\n  RE(\"^draw$\", 3, \"rew\"),\n  RE(\"^drive$\", 3, \"ove\"),\n  RE(\"^fall$\", 3, \"ell\"),\n  RE(\"^fly$\", 2, \"lew\"),\n  RE(\"^flyblow$\", 3, \"lew\"),\n  RE(\"^forbid$\", 2, \"ade\"),\n  RE(\"^forbear$\", 3, \"ore\"),\n  RE(\"^foreknow$\", 3, \"new\"),\n  RE(\"^foresee$\", 3, \"saw\"),\n  RE(\"^forespeak$\", 3, \"oke\"),\n  RE(\"^forego$\", 2, \"went\"),\n  RE(\"^forgive$\", 3, \"ave\"),\n  RE(\"^forget$\", 3, \"got\"),\n  RE(\"^forsake$\", 3, \"ook\"),\n  RE(\"^forspeak$\", 3, \"oke\"),\n  RE(\"^forswear$\", 3, \"ore\"),\n  RE(\"^forgo$\", 2, \"went\"),\n  RE(\"^fight$\", 4, \"ought\"),\n  RE(\"^find$\", 3, \"ound\"),\n  RE(\"^freeze$\", 4, \"oze\"),\n  RE(\"^give$\", 3, \"ave\"),\n  RE(\"^geld$\", 3, \"elt\"),\n  RE(\"^gen-up$\", 3, \"ned-up\"),\n  RE(\"^ghostwrite$\", 3, \"ote\"),\n  RE(\"^get$\", 3, \"got\"),\n  RE(\"^grow$\", 3, \"rew\"),\n  RE(\"^grind$\", 3, \"ound\"),\n  RE(\"^hear$\", 2, \"ard\"),\n  RE(\"^hold$\", 3, \"eld\"),\n  RE(\"^hide$\", 4, \"hid\"),\n  RE(\"^honey$\", 2, \"ied\"),\n  RE(\"^inbreed$\", 4, \"red\"),\n  RE(\"^indwell$\", 3, \"elt\"),\n  RE(\"^interbreed$\", 4, \"red\"),\n  RE(\"^interweave$\", 4, \"ove\"),\n  RE(\"^inweave$\", 4, \"ove\"),\n  RE(\"^ken$\", 2, \"ent\"),\n  RE(\"^kneel$\", 3, \"elt\"),\n  RE(\"^^know$$\", 3, \"new\"),\n  RE(\"^leap$\", 2, \"apt\"),\n  RE(\"^learn$\", 2, \"rnt\"),\n  RE(\"^lead$\", 4, \"led\"),\n  RE(\"^leave$\", 4, \"eft\"),\n  RE(\"^light$\", 5, \"lit\"),\n  RE(\"^lose$\", 3, \"ost\"),\n  RE(\"^make$\", 3, \"ade\"),\n  RE(\"^mean$\", 2, \"ant\"),\n  RE(\"^meet$\", 4, \"met\"),\n  RE(\"^misbecome$\", 3, \"ame\"),\n  RE(\"^misdeal$\", 2, \"alt\"),\n  RE(\"^misgive$\", 3, \"ave\"),\n  RE(\"^mishear$\", 2, \"ard\"),\n  RE(\"^mislead$\", 4, \"led\"),\n  RE(\"^mistake$\", 3, \"ook\"),\n  RE(\"^misunderstand$\", 3, \"ood\"),\n  RE(\"^outbreed$\", 4, \"red\"),\n  RE(\"^outgrow$\", 3, \"rew\"),\n  RE(\"^outride$\", 3, \"ode\"),\n  RE(\"^outshine$\", 3, \"one\"),\n  RE(\"^outshoot$\", 4, \"hot\"),\n  RE(\"^outstand$\", 3, \"ood\"),\n  RE(\"^outthink$\", 3, \"ought\"),\n  RE(\"^outgo$\", 2, \"went\"),\n  RE(\"^outwear$\", 3, \"ore\"),\n  RE(\"^overblow$\", 3, \"lew\"),\n  RE(\"^overbear$\", 3, \"ore\"),\n  RE(\"^overbuild$\", 3, \"ilt\"),\n  RE(\"^overcome$\", 3, \"ame\"),\n  RE(\"^overdraw$\", 3, \"rew\"),\n  RE(\"^overdrive$\", 3, \"ove\"),\n  RE(\"^overfly$\", 2, \"lew\"),\n  RE(\"^overgrow$\", 3, \"rew\"),\n  RE(\"^overhear$\", 2, \"ard\"),\n  RE(\"^overpass$\", 3, \"ast\"),\n  RE(\"^override$\", 3, \"ode\"),\n  RE(\"^oversee$\", 3, \"saw\"),\n  RE(\"^overshoot$\", 4, \"hot\"),\n  RE(\"^overthrow$\", 3, \"rew\"),\n  RE(\"^overtake$\", 3, \"ook\"),\n  RE(\"^overwind$\", 3, \"ound\"),\n  RE(\"^overwrite$\", 3, \"ote\"),\n  RE(\"^partake$\", 3, \"ook\"),\n  RE(\"^\" + VERBAL_PREFIX + \"?run$\", 2, \"an\"),\n  RE(\"^ring$\", 3, \"ang\"),\n  RE(\"^rebuild$\", 3, \"ilt\"),\n  RE(\"^red\"),\n  RE(\"^reave$\", 4, \"eft\"),\n  RE(\"^remake$\", 3, \"ade\"),\n  RE(\"^resit$\", 3, \"sat\"),\n  RE(\"^rethink$\", 3, \"ought\"),\n  RE(\"^retake$\", 3, \"ook\"),\n  RE(\"^rewind$\", 3, \"ound\"),\n  RE(\"^rewrite$\", 3, \"ote\"),\n  RE(\"^ride$\", 3, \"ode\"),\n  RE(\"^rise$\", 3, \"ose\"),\n  RE(\"^reeve$\", 4, \"ove\"),\n  RE(\"^sing$\", 3, \"ang\"),\n  RE(\"^sink$\", 3, \"ank\"),\n  RE(\"^sit$\", 3, \"sat\"),\n  RE(\"^see$\", 3, \"saw\"),\n  RE(\"^shoe$\", 3, \"hod\"),\n  RE(\"^shine$\", 3, \"one\"),\n  RE(\"^shake$\", 3, \"ook\"),\n  RE(\"^shoot$\", 4, \"hot\"),\n  RE(\"^shrink$\", 3, \"ank\"),\n  RE(\"^shrive$\", 3, \"ove\"),\n  RE(\"^sightsee$\", 3, \"saw\"),\n  RE(\"^ski$\", 1, \"i'd\"),\n  RE(\"^skydive$\", 3, \"ove\"),\n  RE(\"^slay$\", 3, \"lew\"),\n  RE(\"^slide$\", 4, \"lid\"),\n  RE(\"^slink$\", 3, \"unk\"),\n  RE(\"^smite$\", 4, \"mit\"),\n  RE(\"^seek$\", 3, \"ought\"),\n  RE(\"^spit$\", 3, \"pat\"),\n  RE(\"^speed$\", 4, \"ped\"),\n  RE(\"^spellbind$\", 3, \"ound\"),\n  RE(\"^spoil$\", 2, \"ilt\"),\n  RE(\"^speak$\", 3, \"oke\"),\n  RE(\"^spotlight$\", 5, \"lit\"),\n  RE(\"^spring$\", 3, \"ang\"),\n  RE(\"^spin$\", 3, \"pun\"),\n  RE(\"^stink$\", 3, \"ank\"),\n  RE(\"^steal$\", 3, \"ole\"),\n  RE(\"^stand$\", 3, \"ood\"),\n  RE(\"^stave$\", 3, \"ove\"),\n  RE(\"^stride$\", 3, \"ode\"),\n  RE(\"^strive$\", 3, \"ove\"),\n  RE(\"^strike$\", 3, \"uck\"),\n  RE(\"^stick$\", 3, \"uck\"),\n  RE(\"^swim$\", 3, \"wam\"),\n  RE(\"^swear$\", 3, \"ore\"),\n  RE(\"^teach$\", 4, \"aught\"),\n  RE(\"^think$\", 3, \"ought\"),\n  RE(\"^throw$\", 3, \"rew\"),\n  RE(\"^take$\", 3, \"ook\"),\n  RE(\"^tear$\", 3, \"ore\"),\n  RE(\"^transship$\", 4, \"hip\"),\n  RE(\"^tread$\", 4, \"rod\"),\n  RE(\"^typewrite$\", 3, \"ote\"),\n  RE(\"^unbind$\", 3, \"ound\"),\n  RE(\"^unclothe$\", 5, \"lad\"),\n  RE(\"^underbuy$\", 2, \"ought\"),\n  RE(\"^undergird$\", 3, \"irt\"),\n  RE(\"^undershoot$\", 4, \"hot\"),\n  RE(\"^understand$\", 3, \"ood\"),\n  RE(\"^undertake$\", 3, \"ook\"),\n  RE(\"^undergo$\", 2, \"went\"),\n  RE(\"^underwrite$\", 3, \"ote\"),\n  RE(\"^unfreeze$\", 4, \"oze\"),\n  RE(\"^unlearn$\", 2, \"rnt\"),\n  RE(\"^unmake$\", 3, \"ade\"),\n  RE(\"^unreeve$\", 4, \"ove\"),\n  RE(\"^unspeak$\", 3, \"oke\"),\n  RE(\"^unstick$\", 3, \"uck\"),\n  RE(\"^unswear$\", 3, \"ore\"),\n  RE(\"^unteach$\", 4, \"aught\"),\n  RE(\"^unthink$\", 3, \"ought\"),\n  RE(\"^untread$\", 4, \"rod\"),\n  RE(\"^unwind$\", 3, \"ound\"),\n  RE(\"^upbuild$\", 3, \"ilt\"),\n  RE(\"^uphold$\", 3, \"eld\"),\n  RE(\"^upheave$\", 4, \"ove\"),\n  RE(\"^uprise$\", 3, \"ose\"),\n  RE(\"^upspring$\", 3, \"ang\"),\n  RE(\"^go$\", 2, \"went\"),\n  RE(\"^wiredraw$\", 3, \"rew\"),\n  RE(\"^withdraw$\", 3, \"rew\"),\n  RE(\"^withhold$\", 3, \"eld\"),\n  RE(\"^withstand$\", 3, \"ood\"),\n  RE(\"^wake$\", 3, \"oke\"),\n  RE(\"^win$\", 3, \"won\"),\n  RE(\"^wear$\", 3, \"ore\"),\n  RE(\"^wind$\", 3, \"ound\"),\n  RE(\"^weave$\", 4, \"ove\"),\n  RE(\"^write$\", 3, \"ote\"),\n  RE(\"^trek$\", 1, \"cked\"),\n  RE(\"^ko$\", 1, \"o'd\"),\n  RE(\"^bid\", 2, \"ade\"),\n  RE(\"^win$\", 2, \"on\"),\n  RE(\"^swim\", 2, \"am\"),\n  RE(\"e$\", 0, \"d\", 1),\n\n  // Null past forms\n  RE(\"^\" + VERBAL_PREFIX + \"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|\" + \"let|cost|burst|beat|beset|set|upset|offset|put|quit|wed|typeset|\" + \"wed|spread|split|slit|read|run|shut|shed|lay)$\", 0)\n];\n\nconst PRESENT_RULES = [\n  RE(\"^aby$\", 0, \"es\"),\n  RE(\"^bog-down$\", 5, \"s-down\"),\n  RE(\"^chivy$\", 1, \"vies\"),\n  RE(\"^gen-up$\", 3, \"s-up\"),\n  RE(\"^prologue$\", 3, \"gs\"),\n  RE(\"^picknic$\", 0, \"ks\"),\n  RE(\"^ko$\", 0, \"'s\"),\n  RE(\"[osz]$\", 0, \"es\", 1),\n  RE(\"^have$\", 2, \"s\"),\n  RE(CONS + \"y$\", 1, \"ies\", 1),\n  RE(\"^be$\", 2, \"is\"),\n  RE(\"([zsx]|ch|sh)$\", 0, \"es\", 1)\n];\n\nconst VERB_CONS_DOUBLING = [\"abat\", \"abet\", \"abhor\", \"abut\", \"accur\", \"acquit\", \"adlib\",\n  \"admit\", \"aerobat\", \"aerosol\", \"allot\", \"alot\", \"anagram\",\n  \"annul\", \"appal\", \"apparel\", \"armbar\", \"aver\", \"babysit\", \"airdrop\", \"appal\",\n  \"blackleg\", \"bobsled\", \"bur\", \"chum\", \"confab\", \"counterplot\", \"dib\",\n  \"backdrop\", \"backfil\", \"backflip\", \"backlog\", \"backpedal\", \"backslap\",\n  \"backstab\", \"bag\", \"balfun\", \"ballot\", \"ban\", \"bar\", \"barbel\", \"bareleg\",\n  \"barrel\", \"bat\", \"bayonet\", \"becom\", \"bed\", \"bedevil\", \"bedwet\",\n  \"befit\", \"befog\", \"beg\", \"beget\", \"begin\", \"bejewel\", \"benefit\",\n  \"beset\", \"besot\", \"bet\", \"bevel\", \"bewig\",\n  \"bib\", \"bid\", \"billet\", \"bin\", \"bip\", \"bit\", \"bitmap\", \"blab\", \"blag\", \"blam\",\n  \"blan\", \"blat\", \"bles\", \"blim\", \"blip\", \"blob\", \"bloodlet\", \"blot\", \"blub\",\n  \"blur\", \"bob\", \"bog\", \"booby-trap\", \"boobytrap\", \"booksel\",\n  \"bootleg\", \"bop\", \"bot\", \"bowel\", \"bracket\", \"brag\", \"brig\", \"brim\", \"bud\",\n  \"buffet\", \"bug\", \"bullshit\", \"bum\", \"bun\", \"bus\", \"but\", \"cab\", \"cabal\", \"cam\",\n  \"can\", \"cancel\", \"cap\", \"caravan\", \"carburet\", \"carnap\", \"carol\",\n  \"carpetbag\", \"castanet\", \"cat\", \"catcal\", \"catnap\", \"chanel\",\n  \"channel\", \"chap\", \"char\", \"chat\", \"chin\", \"chip\", \"chir\",\n  \"chirrup\", \"chisel\", \"chop\", \"chug\", \"chur\", \"clam\", \"clap\", \"clearcut\",\n  \"clip\", \"clodhop\", \"clog\", \"clop\", \"clot\", \"club\", \"co-star\", \"cob\", \"cobweb\", \"cod\", \"coif\",\n  \"com\", \"combat\", \"comit\", \"commit\", \"compel\", \"con\", \"concur\", \"confer\",\n  \"confiscat\", \"control\", \"cop\", \"coquet\", \"coral\", \"corral\", \"cosset\",\n  \"cotransmit\", \"councel\", \"council\", \"counsel\", \"court-martial\", \"crab\", \"cram\",\n  \"crap\", \"crib\", \"crop\", \"crossleg\", \"cub\", \"cudgel\", \"cum\", \"cun\", \"cup\",\n  \"cut\", \"dab\", \"dag\", \"dam\", \"dan\", \"dap\", \"daysit\", \"deadpan\",\n  \"debag\", \"debar\", \"log\", \"decommit\", \"decontrol\", \"defer\", \"defog\", \"deg\",\n  \"degas\", \"deinstal\", \"demur\", \"den\", \"denet\", \"depig\",\n  \"depip\", \"depit\", \"der\", \"deskil\", \"deter\", \"devil\", \"diagram\", \"dial\", \"dig\",\n  \"dim\", \"din\", \"dip\", \"disbar\", \"disbud\", \"discomfit\", \"disembed\", \"disembowel\",\n  \"dishevel\", \"disinter\", \"dispel\", \"distil\", \"dog\", \"dognap\",\n  \"don\", \"doorstep\", \"dot\", \"dowel\", \"drag\", \"drat\", \"driftnet\", \"distil\",\n  \"egotrip\", \"enrol\", \"enthral\", \"extol\", \"fulfil\", \"gaffe\", \"idyl\",\n  \"inspan\", \"drip\", \"drivel\", \"drop\", \"drub\", \"drug\", \"drum\", \"dub\", \"duel\",\n  \"dun\", \"earwig\", \"eavesdrop\", \"ecolabel\",\n  \"embed\", \"emit\", \"enamel\", \"endlabel\", \"endtrim\",\n  \"enrol\", \"enthral\", \"entrap\", \"enwrap\", \"equal\", \"equip\",\n  \"exaggerat\", \"excel\", \"expel\", \"extol\", \"fag\", \"fan\", \"farewel\", \"fat\",\n  \"featherbed\", \"feget\", \"fet\", \"fib\", \"fig\", \"fin\", \"fingerspel\", \"fingertip\",\n  \"fit\", \"flab\", \"flag\", \"flap\", \"flip\", \"flit\", \"flog\", \"flop\", \"fob\", \"focus\",\n  \"fog\", \"footbal\", \"footslog\", \"fop\", \"forbid\", \"forget\", \"format\",\n  \"fortunetel\", \"fot\", \"foxtrot\", \"frag\", \"freefal\", \"fret\", \"frig\", \"frip\",\n  \"frog\", \"frug\", \"fuel\", \"fufil\", \"fulfil\", \"fullyfit\", \"fun\", \"funnel\", \"fur\",\n  \"furpul\", \"gab\", \"gad\", \"gag\", \"gam\", \"gambol\", \"gap\", \"garot\", \"garrot\",\n  \"gas\", \"gat\", \"gel\", \"gen\", \"get\", \"giftwrap\", \"gig\", \"gimbal\", \"gin\", \"glam\",\n  \"glenden\", \"glendin\", \"globetrot\", \"glug\", \"glut\", \"gob\", \"goldpan\", \"goostep\",\n  \"gossip\", \"grab\", \"gravel\", \"grid\", \"grin\", \"grip\", \"grit\",\n  \"grovel\", \"grub\", \"gum\", \"gun\", \"gunrun\", \"gut\", \"gyp\", \"haircut\", \"ham\",\n  \"han\", \"handbag\", \"handicap\", \"handknit\", \"handset\", \"hap\", \"hareleg\", \"hat\",\n  \"headbut\", \"hedgehop\", \"hem\", \"hen\", \"hiccup\", \"highwal\", \"hip\", \"hit\",\n  \"hobnob\", \"hog\", \"hop\", \"horsewhip\", \"hostel\", \"hot\", \"hotdog\", \"hovel\", \"hug\",\n  \"hum\", \"humbug\", \"hup\", \"hut\", \"illfit\", \"imbed\",\n  \"impel\", \"imperil\", \"incur\", \"infer\", \"infil\",\n  \"inflam\", \"initial\", \"input\", \"inset\", \"instil\", \"inter\", \"interbed\",\n  \"intercrop\", \"intercut\", \"interfer\", \"instal\", \"instil\", \"intermit\",\n  \"jug\", \"mousse\", \"mud\", \"jab\", \"jag\",\n  \"jam\", \"jar\", \"jawdrop\", \"jet\", \"jetlag\", \"jewel\", \"jib\", \"jig\", \"jitterbug\",\n  \"job\", \"jog\", \"jot\", \"jut\", \"ken\", \"kennel\", \"kid\", \"kidnap\",\n  \"kip\", \"kit\", \"knap\", \"kneecap\", \"knit\", \"knob\", \"knot\",\n  \"label\", \"lag\", \"lam\", \"lap\", \"lavel\", \"leafcut\", \"leapfrog\", \"leg\", \"lem\",\n  \"lep\", \"let\", \"level\", \"libel\", \"lid\", \"lig\", \"lip\", \"lob\", \"log\", \"lok\",\n  \"lollop\", \"longleg\", \"lop\", \"lowbal\", \"lug\", \"mackerel\", \"mahom\", \"man\", \"map\",\n  \"mar\", \"marshal\", \"marvel\", \"mat\", \"matchwin\", \"metal\", \"micro-program\",\n  \"microplan\", \"microprogram\", \"milksop\", \"mis-cal\", \"mis-club\", \"mis-spel\",\n  \"miscal\", \"mishit\", \"mislabel\", \"mit\", \"mob\", \"mod\", \"model\", \"mohmam\",\n  \"monogram\", \"mop\", \"mothbal\", \"mug\", \"multilevel\", \"mum\", \"nab\", \"nag\", \"nan\",\n  \"nap\", \"net\", \"nightclub\", \"nightsit\", \"nip\", \"nod\", \"nonplus\", \"norkop\",\n  \"nostril\", \"not\", \"nut\", \"nutmeg\", \"occur\", \"ocur\", \"offput\", \"offset\", \"omit\",\n  \"ommit\", \"onlap\", \"out-general\", \"outbid\", \"outcrop\", \"outfit\",\n  \"outgas\", \"outgun\", \"outhit\", \"outjab\", \"outpol\", \"output\", \"outrun\",\n  \"outship\", \"outshop\", \"outstrip\", \"outswel\", \"outspan\", \"overcrop\",\n  \"pettifog\", \"photostat\", \"pouf\", \"preset\", \"prim\", \"pug\", \"ret\", \"rosin\",\n  \"outwit\", \"overbid\", \"overcal\", \"overcommit\", \"overcontrol\",\n  \"overcrap\", \"overdub\", \"overfil\", \"overhat\", \"overhit\", \"overlap\", \"overman\",\n  \"overplot\", \"overrun\", \"overshop\", \"overstep\", \"overtip\", \"overtop\", \"overwet\",\n  \"overwil\", \"pad\", \"paintbal\", \"pan\", \"panel\", \"paperclip\", \"par\", \"parallel\",\n  \"parcel\", \"pat\", \"patrol\", \"pedal\", \"peg\", \"pen\",\n  \"pencil\", \"pep\", \"permit\", \"pet\", \"petal\", \"photoset\",\n  \"picket\", \"pig\", \"pilot\", \"pin\", \"pinbal\", \"pip\", \"pipefit\", \"pipet\", \"pit\",\n  \"plan\", \"plit\", \"plod\", \"plop\", \"plot\", \"plug\", \"plumet\", \"plummet\", \"pod\",\n  \"policyset\", \"polyfil\", \"pop\", \"pot\", \"pram\", \"prebag\",\n  \"predistil\", \"predril\", \"prefer\", \"prefil\", \"preinstal\", \"prep\", \"preplan\",\n  \"preprogram\", \"prizewin\", \"prod\", \"profer\", \"prog\", \"program\", \"prop\",\n  \"propel\", \"pub\", \"pummel\", \"pun\", \"pup\", \"pushfit\", \"put\", \"quarel\", \"quarrel\",\n  \"quickskim\", \"quickstep\", \"quickwit\", \"quip\", \"quit\", \"quivertip\", \"quiz\",\n  \"rabbit\", \"rabit\", \"radiolabel\", \"rag\", \"ram\", \"ramrod\", \"rap\", \"rat\",\n  \"ratecap\", \"ravel\", \"readmit\", \"reallot\", \"rebel\", \"rebid\", \"rebin\", \"rebut\",\n  \"recap\", \"rechannel\", \"recommit\", \"recrop\", \"recur\", \"recut\", \"red\", \"redril\",\n  \"refer\", \"refit\", \"reformat\", \"refret\", \"refuel\", \"reget\", \"regret\", \"reinter\",\n  \"rejig\", \"rekit\", \"reknot\", \"relabel\", \"relet\", \"rem\", \"remap\", \"remetal\",\n  \"remit\", \"remodel\", \"reoccur\", \"rep\", \"repel\", \"repin\", \"replan\", \"replot\",\n  \"repol\", \"repot\", \"reprogram\", \"rerun\", \"reset\", \"resignal\", \"resit\", \"reskil\",\n  \"resubmit\", \"retransfer\", \"retransmit\", \"retro-fit\", \"retrofit\", \"rev\",\n  \"revel\", \"revet\", \"rewrap\", \"rib\", \"richochet\", \"ricochet\", \"rid\", \"rig\",\n  \"rim\", \"ringlet\", \"rip\", \"rit\", \"rival\", \"rivet\", \"roadrun\", \"rob\", \"rocket\",\n  \"rod\", \"roset\", \"rot\", \"rowel\", \"rub\", \"run\", \"runnel\", \"rut\", \"sab\", \"sad\",\n  \"sag\", \"sandbag\", \"sap\", \"scab\", \"scalpel\", \"scam\", \"scan\", \"scar\", \"scat\",\n  \"schlep\", \"scrag\", \"scram\", \"shall\", \"sled\", \"smut\", \"stet\",\n  \"trepan\", \"unrip\", \"unstop\", \"whir\", \"whop\", \"wig\", \"scrap\", \"scrat\", \"scrub\",\n  \"scrum\", \"scud\", \"scum\", \"scur\", \"sentinel\", \"set\", \"shag\", \"sham\", \"shed\", \"shim\", \"shin\", \"ship\", \"shir\", \"shit\", \"shlap\", \"shop\", \"shopfit\", \"shortfal\", \"shot\", \"shovel\",\n  \"shred\", \"shrinkwrap\", \"shrivel\", \"shrug\", \"shun\", \"shut\", \"side-step\",\n  \"sideslip\", \"sidestep\", \"signal\", \"sin\", \"sinbin\", \"sip\", \"sit\", \"skid\",\n  \"skim\", \"skin\", \"skip\", \"skir\", \"skrag\", \"slab\", \"slag\", \"slam\", \"slap\",\n  \"slim\", \"slip\", \"slit\", \"slob\", \"slog\", \"slop\", \"slot\", \"slowclap\", \"slug\",\n  \"slum\", \"slur\", \"smit\", \"snag\", \"snap\", \"snip\", \"snivel\", \"snog\", \"snorkel\",\n  \"snowcem\", \"snub\", \"snug\", \"sob\", \"sod\", \"softpedal\", \"son\", \"sop\", \"spam\",\n  \"span\", \"spar\", \"spat\", \"spin\", \"spiral\", \"spit\", \"splat\",\n  \"split\", \"spot\", \"sprig\", \"springtip\", \"spud\", \"spur\",\n  \"squat\", \"squirrel\", \"stab\", \"stag\", \"star\", \"stem\", \"sten\", \"stencil\", \"step\",\n  \"stir\", \"stop\", \"storytel\", \"strap\", \"strim\", \"strip\", \"strop\", \"strug\",\n  \"strum\", \"strut\", \"stub\", \"stud\", \"stun\", \"sub\", \"subcrop\", \"sublet\", \"submit\",\n  \"subset\", \"sum\", \"summit\", \"sun\", \"suntan\", \"sup\", \"super-chil\",\n  \"superad\", \"swab\", \"swag\", \"swan\", \"swap\", \"swat\", \"swig\", \"swim\", \"swivel\",\n  \"swot\", \"tab\", \"tag\", \"tan\", \"tansfer\", \"tap\", \"tar\", \"tassel\", \"tat\", \"tefer\",\n  \"teleshop\", \"tendril\", \"thermal\", \"thermostat\", \"thin\",\n  \"throb\", \"thrum\", \"thud\", \"thug\", \"tightlip\", \"tin\", \"tinsel\", \"tip\", \"tittup\",\n  \"toecap\", \"tog\", \"tom\", \"tomorrow\", \"top\", \"tot\", \"total\", \"towel\", \"traget\",\n  \"trainspot\", \"tram\", \"trammel\", \"transfer\", \"tranship\", \"transit\", \"transmit\",\n  \"trap\", \"travel\", \"trek\", \"trendset\", \"trim\", \"trip\", \"tripod\",\n  \"trod\", \"trot\", \"trowel\", \"tub\", \"tug\",\n  \"tunnel\", \"tup\", \"tut\", \"twat\", \"twig\", \"twin\", \"twit\", \"typeset\", \"tyset\",\n  \"un-man\", \"unban\", \"unbar\", \"unbob\", \"uncap\", \"unclip\", \"uncompel\", \"undam\",\n  \"underbid\", \"undercut\", \"underlet\", \"underman\", \"underpin\", \"unfit\", \"unfulfil\", \"unknot\",\n  \"unlip\", \"unlywil\", \"unman\", \"unpad\", \"unpeg\", \"unpin\", \"unplug\", \"unravel\",\n  \"unrol\", \"unscrol\", \"unsnap\", \"unstal\", \"unstep\", \"unstir\", \"untap\", \"unwrap\",\n  \"unzip\", \"up\", \"upset\", \"upskil\", \"upwel\", \"ven\", \"verbal\", \"vet\",\n  \"vignet\", \"wad\", \"wag\", \"wainscot\", \"wan\", \"war\", \"waterfal\",\n  \"waterfil\", \"waterlog\", \"weasel\", \"web\", \"wed\", \"wet\", \"wham\", \"whet\", \"whip\",\n  \"whir\", \"whiz\", \"whup\", \"wildcat\", \"win\", \"windmil\", \"wit\",\n  \"woodchop\", \"woodcut\", \"worship\", \"wrap\", \"wiretap\", \"yen\", \"yak\",\n  \"yap\", \"yip\", \"yodel\", \"zag\", \"zap\", \"zig\", \"zigzag\",\n  \"zip\", \"hocus\",\n];\n\nconst PAST_PART_RULESET = {\n  name: \"PAST_PARTICIPLE\",\n  defaultRule: RE(ANY_STEM_RE, 0, \"ed\", 2),\n  rules: PAST_PART_RULES,\n  doubling: true\n};\n\nconst PRESENT_PART_RULESET = {\n  name: \"ING_FORM\",\n  defaultRule: RE(ANY_STEM_RE, 0, \"ing\", 2),\n  rules: ING_FORM_RULES,\n  doubling: true\n};\n\nconst PAST_RULESET = {\n  name: \"PAST\",\n  defaultRule: RE(ANY_STEM_RE, 0, \"ed\", 2),\n  rules: PAST_RULES,\n  doubling: true\n};\n\nconst PRESENT_RULESET = {\n  name: \"PRESENT\",\n  defaultRule: RE(ANY_STEM_RE, 0, \"s\", 2),\n  rules: PRESENT_RULES,\n  doubling: false\n};\n\nconst TO_BE = [\"am\", \"are\", \"is\", \"was\", \"were\"];\n\nconst IRREG_PAST_PART = [\"done\", \"gone\", \"been\", \"begun\", \"bent\", \"bid\", \"bidden\", \"bled\", \"born\", \"bought\", \"brought\", \"built\", \"caught\", \"clad\", \"could\", \"crept\", \"dove\", \"drunk\", \"dug\", \"dwelt\", \"fed\", \"felt\", \"fled\", \"flung\", \"fought\", \"found\", \"ground\", \"had\", \"held\", \"hung\", \"hurt\", \"kept\", \"knelt\", \"laid\", \"lain\", \"led\", \"left\", \"lent\", \"lit\", \"lost\", \"made\", \"met\", \"mown\", \"paid\", \"pled\", \"relaid\", \"rung\", \"said\", \"sat\", \"sent\", \"shot\", \"slain\", \"slept\", \"slid\", \"sold\", \"sought\", \"spat\", \"sped\", \"spelt\", \"spent\", \"split\", \"sprung\", \"spun\", \"stood\", \"stuck\", \"struck\", \"stung\", \"stunk\", \"sung\", \"sunk\", \"swept\", \"sworn\", \"swum\", \"swung\", \"thought\", \"told\", \"torn\", \"undergone\", \"understood\", \"wept\", \"woken\", \"won\", \"worn\", \"wound\", \"wrung\"];\n\nConjugator.VERB_CONS_DOUBLING = VERB_CONS_DOUBLING; // for scripts\n\n\n\nexport default Conjugator;","\n/**\n * @class Util\n * @memberof module:rita\n */\nclass Util {\n\n  // Takes a syllabification and turns it into a string of phonemes,\n  // delimited with dashes, with spaces between syllables\n  static syllablesToPhones(syllables) {\n\n    let i, j, ret = [];\n    for (i = 0; i < syllables.length; i++) {\n\n      let syl = syllables[i],\n        stress = syl[0][0],\n        onset = syl[1],\n        nucleus = syl[2],\n        coda = syl[3];\n\n      if (stress && nucleus.length) nucleus[0] += stress;\n\n      let data = [];\n      for (j = 0; j < onset.length; j++) data.push(onset[j]);\n      for (j = 0; j < nucleus.length; j++) data.push(nucleus[j]);\n      for (j = 0; j < coda.length; j++) data.push(coda[j]);\n      ret.push(data.join('-'));\n    }\n\n    return ret.join(' ');\n  }\n\n  static syllablesFromPhones(input) { // adapted from FreeTTS\n\n    function extend(l1, l2) {\n      for (let i = 0; i < l2.length; i++) l1.push(l2[i]);\n    }\n\n    if (!input || !input.length) return '';\n\n    let dbug, internuclei = [];\n    let syllables = []; // returned data structure\n    let sylls = typeof input == 'string' ? input.split('-') : input;\n\n    for (let i = 0; i < sylls.length; i++) {\n\n      let phoneme = sylls[i].trim(), stress;\n      if (!phoneme.length) continue;\n\n      let last = phoneme.charAt(phoneme.length - 1);\n      if (this.isNum(last)) {\n        stress = last;\n        phoneme = phoneme.substring(0, phoneme.length - 1);\n      }\n\n      if (dbug) console.log(i + \")\" + phoneme + ' stress=' + stress + ' inter=' + internuclei.join(':'));\n\n      if (Util.Phones.vowels.includes(phoneme)) {\n\n        // Split the consonants seen since the last nucleus into coda and onset.\n        let coda, onset;\n\n        // Make the largest onset we can. The 'split' variable marks the break point.\n        for (let split = 0; split < internuclei.length + 1; split++) {\n\n          coda = internuclei.slice(0, split);\n          onset = internuclei.slice(split, internuclei.length);\n\n          if (dbug) console.log('  ' + split + ') onset=' + onset.join(':') +\n            '  coda=' + coda.join(':') + '  inter=' + internuclei.join(':'));\n\n          // If we are looking at a valid onset, or if we're at the start of the word\n          // (in which case an invalid onset is better than a coda that doesn't follow\n          // a nucleus), or if we've gone through all of the onsets and we didn't find\n          // any that are valid, then split the nonvowels we've seen at this location.\n          let bool = Util.Phones.onsets.includes(onset.join(\" \"));\n          if (bool || syllables.length === 0 || onset.length === 0) {\n            if (dbug) console.log('  break ' + phoneme);\n            break;\n          }\n        }\n\n        // Tack the coda onto the coda of the last syllable.\n        // Can't do it if this is the first syllable.\n        if (syllables.length > 0) {\n          extend(syllables[syllables.length - 1][3], coda);\n          if (dbug) console.log('  tack: ' + coda + ' -> len=' +\n            syllables[syllables.length - 1][3].length + \" [\" +\n            syllables[syllables.length - 1][3] + \"]\");\n        }\n\n        // Make a new syllable out of the onset and nucleus.\n        let toPush = [[stress], onset, [phoneme], []];\n        syllables.push(toPush);\n\n        // At this point we've processed the internuclei list.\n        internuclei = [];\n      } else if (!(Util.Phones.consonants.includes(phoneme)) && phoneme != ' ') {\n        throw Error('Invalid phoneme: ' + phoneme);\n      } else { // a consonant\n        internuclei.push(phoneme);\n      }\n    }\n\n    // Done looping through phonemes. We may have consonants left at the end.\n    // We may have even not found a nucleus.\n    if (internuclei.length > 0) {\n      if (syllables.length === 0) {\n        syllables.push([[undefined], internuclei, [], []]);\n      } else {\n        extend(syllables[syllables.length - 1][3], internuclei);\n      }\n    }\n    return Util.syllablesToPhones(syllables);\n  }\n\n  static isNum(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  \n  static numOpt(opts, name, def = 0) {\n    return Util.isNum(opts?.[name]) ? opts[name] : def;\n  }\n}\n\n// CLASSES ////////////////////////////////////////////////////\n\n/**\n * @class RE\n * @memberof module:rita\n */\nclass RE {\n\n  constructor(regex, offset, suffix) {\n    this.raw = regex;\n    this.regex = new RegExp(regex);\n    this.offset = offset;\n    this.suffix = suffix || '';\n  }\n\n  applies(word) {\n    return this.regex.test(word);\n  }\n\n  fire(word) {\n    return this.truncate(word) + this.suffix;\n  }\n\n  truncate(word) {\n    return (this.offset === 0) ? word :\n      word.substr(0, word.length - this.offset);\n  }\n\n  toString() {\n    return '/' + this.raw + '/';\n  }\n}\n\nUtil.Numbers = {\n  fromWords: { zero: 0, one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9, ten: 10, eleven: 11, twelve: 12, thirteen: 13, fourteen: 14, fifteen: 15, sixteen: 16, seventeen: 17, eighteen: 18, nineteen: 19, twenty: 20, thirty: 30, forty: 40, fifty: 50, sixty: 60, seventy: 70, eighty: 80, ninety: 90 },\n  toWords: { '0': 'zero', '1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine', '10': 'ten', '11': 'eleven', '12': 'twelve', '13': 'thirteen', '14': 'fourteen', '15': 'fifteen', '16': 'sixteen', '17': 'seventeen', '18': 'eighteen', '19': 'nineteen', '20': 'twenty', '30': 'thirty', '40': 'forty', '50': 'fifty', '60': 'sixty', '70': 'seventy', '80': 'eighty', '90': 'ninety' }\n}\n\nUtil.Phones = {\n  consonants: ['b', 'ch', 'd', 'dh', 'f', 'g', 'hh', 'jh', 'k', 'l', 'm',\n    'n', 'ng', 'p', 'r', 's', 'sh', 't', 'th', 'v', 'w', 'y', 'z', 'zh'\n  ],\n  vowels: ['aa', 'ae', 'ah', 'ao', 'aw', 'ax', 'ay', 'eh', 'er', 'ey', 'ih',\n    'iy', 'ow', 'oy', 'uh', 'uw'\n  ],\n  onsets: ['p', 't', 'k', 'b', 'd', 'g', 'f', 'v', 'th', 'dh', 's', 'z',\n    'sh', 'ch', 'jh', 'm', 'n', 'r', 'l', 'hh', 'w', 'y', 'p r', 't r',\n    'k r', 'b r', 'd r', 'g r', 'f r', 'th r', 'sh r', 'p l', 'k l', 'b l',\n    'g l', 'f l', 's l', 't w', 'k w', 'd w', 's w', 's p', 's t', 's k',\n    's f', 's m', 's n', 'g w', 'sh w', 's p r', 's p l', 's t r', 's k r',\n    's k w', 's k l', 'th w', 'zh', 'p y', 'k y', 'b y', 'f y', 'hh y',\n    'v y', 'th y', 'm y', 's p y', 's k y', 'g y', 'hh w', ''\n  ]\n};\n\nUtil.RE = function (a, b, c) { return new RE(a, b, c) };\n\n/* TODO: needs test cases, then remove [ones,tens,teens],\n *  then add words for . and -, then uncomment and use in LTS\nUtil.numToWords = function(num) {\n\n  const ones = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  const tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n  const teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\n  let nums = Util.Numbers.toWords;\n\n  function millions(n) {\n    return n >= 1000000 ? millions(Math.floor(n / 1000000))\n      + \" million \" + thousands(n % 1000000)\n      : thousands(n);\n  }\n\n  function thousands(n) {\n    return n >= 1000 ? hundreds(Math.floor(n / 1000)) +\n      \" thousand \" + hundreds(n % 1000)\n      : hundreds(n);\n  }\n\n  function hundreds(n) {\n    return n > 99 ? ones[Math.floor(n / 100)]\n      + \" hundred \" + digits(n % 100)\n      : digits(n);\n  }\n\n  function digits(n) {\n    if (n < 10) return ones[n];\n    else if (n >= 10 && n < 20) return teens[n - 10];\n    return tens[Math.floor(n / 10)] + ' ' + ones[n % 10]\n  }\n\n  function digitsNew(n) {\n    if (n <= 20) return nums[n+''];\n    return nums[(Math.floor(n / 10)*10)+''] + ' ' + nums[n % 10];\n  }\n\n  if (typeof num === 'string') num = parseInt(num);\n  if (num === 0) return \"zero\";\n  if (!Util.isNum(num)) return num; // warning?\n  return millions(num).replace(/\\s+/g, ' ').trim();\n}\n*/\n\nexport default Util;\n","  \n/** @type {object} */\nexport default {\n  \"a\": [\"ey1\", \"dt\"],\n  \"abalone\": [\"ae b-ah l-ow1 n-iy\", \"nn\"],\n  \"abandon\": [\"ah b-ae1-n d-ah-n\", \"vb vbp\"],\n  \"abandoned\": [\"ah b-ae1-n d-ah-n-d\", \"vbn vbd jj\"],\n  \"abandonment\": [\"ah b-ae1-n d-ah-n m-ah-n-t\", \"nn\"],\n  \"abashed\": [\"ah b-ae1-sh-t\", \"jj\"],\n  \"abate\": [\"ah b-ey1-t\", \"vb\"],\n  \"abbey\": [\"ae1 b-iy\", \"nn\"],\n  \"abbot\": [\"ae1 b-ah-t\", \"nn\"],\n  \"abbreviated\": [\"ah b-r-iy1 v-iy ey t-ah-d\", \"jj\"],\n  \"abbreviation\": [\"ah b-r-iy v-iy ey1 sh-ah-n\", \"nn\"],\n  \"abdicate\": [\"ae1-b d-ah k-ey-t\", \"vbp vb\"],\n  \"abdomen\": [\"ae-b d-ow1 m-ah-n\", \"nn\"],\n  \"abdominal\": [\"ae-b d-aa1 m-ah n-ah-l\", \"jj\"],\n  \"abduct\": [\"ae-b-d-ah1-k-t\", \"vb\"],\n  \"abduction\": [\"ae-b d-ah1-k sh-ah-n\", \"nn\"],\n  \"aberrant\": [\"ae b-eh1 r-ah-n-t\", \"jj\"],\n  \"aberration\": [\"ae b-er ey1 sh-ah-n\", \"nn\"],\n  \"abet\": [\"ah b-eh1-t\", \"vb\"],\n  \"abhor\": [\"ae-b hh-ao1-r\", \"vb\"],\n  \"abhorrent\": [\"ae-b hh-ao1 r-ah-n-t\", \"jj\"],\n  \"abide\": [\"ah b-ay1-d\", \"vb vbp\"],\n  \"abiding\": [\"ah b-ay1 d-ih-ng\", \"jj\"],\n  \"ability\": [\"ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"abject\": [\"ae1-b jh-eh-k-t\", \"jj\"],\n  \"ablaze\": [\"ah b-l-ey1-z\", \"jj rb\"],\n  \"able\": [\"ey1 b-ah-l\", \"jj\"],\n  \"abnormal\": [\"ae-b n-ao1-r m-ah-l\", \"jj\"],\n  \"abnormality\": [\"ae-b n-ao-r m-ae1 l-ah t-iy\", \"nn\"],\n  \"abnormally\": [\"ae-b n-ao1-r m-ah l-iy\", \"rb\"],\n  \"aboard\": [\"ah b-ao1-r-d\", \"in rb rp\"],\n  \"abode\": [\"ah b-ow1-d\", \"nn\"],\n  \"abolish\": [\"ah b-aa1 l-ih-sh\", \"vb\"],\n  \"abolition\": [\"ae b-ah l-ih1 sh-ah-n\", \"nn\"],\n  \"abolitionist\": [\"ae b-ah l-ih1 sh-ah n-ah-s-t\", \"nn\"],\n  \"abominable\": [\"ah b-aa1 m-ah n-ah b-ah-l\", \"jj\"],\n  \"abomination\": [\"ah b-aa m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"aboriginal\": [\"ae b-er ih1 jh-ah n-ah-l\", \"jj\"],\n  \"aborigine\": [\"ae b-er ih1 jh-ah n-iy\", \"nn\"],\n  \"abort\": [\"ah b-ao1-r-t\", \"vb\"],\n  \"aborted\": [\"ah b-ao1-r t-ih-d\", \"jj vbd vbn\"],\n  \"abortion\": [\"ah b-ao1-r sh-ah-n\", \"nn\"],\n  \"abortionist\": [\"ah b-ao1-r sh-ah-n ih-s-t\", \"nn\"],\n  \"abortive\": [\"ah b-ao1-r t-ih-v\", \"jj\"],\n  \"abound\": [\"ah b-aw1-n-d\", \"vbp vb\"],\n  \"about\": [\"ah b-aw1-t\", \"in rb rp rbr\"],\n  \"above\": [\"ah b-ah1-v\", \"in jj rb\"],\n  \"aboveboard\": [\"ah b-ah1-v b-ao-r-d\", \"jj\"],\n  \"abrasive\": [\"ah b-r-ey1 s-ih-v\", \"jj\"],\n  \"abreast\": [\"ah b-r-eh1-s-t\", \"rb\"],\n  \"abridge\": [\"ah-b-r-ih1-jh\", \"vb\"],\n  \"abroad\": [\"ah b-r-ao1-d\", \"rb\"],\n  \"abrogate\": [\"ae1 b-r-ah g-ey-t\", \"vb\"],\n  \"abrupt\": [\"ah b-r-ah1-p-t\", \"jj\"],\n  \"abruptly\": [\"ah b-r-ah1-p-t l-iy\", \"rb\"],\n  \"abruptness\": [\"ah b-r-ah1-p-t n-ah-s\", \"nn\"],\n  \"abscess\": [\"ae1-b s-eh-s\", \"nn\"],\n  \"absence\": [\"ae1-b s-ah-n-s\", \"nn\"],\n  \"absent\": [\"ae1-b s-ah-n-t\", \"jj vb\"],\n  \"absentee\": [\"ae-b s-ah-n t-iy1\", \"jj nn\"],\n  \"absolute\": [\"ae1-b s-ah l-uw-t\", \"jj nn\"],\n  \"absolutely\": [\"ae-b s-ah l-uw1-t l-iy\", \"rb\"],\n  \"absoluteness\": [\"ae1-b s-ah l-uw-t n-ah-s\", \"nn\"],\n  \"absolution\": [\"ae-b s-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"absolve\": [\"ah-b z-aa1-l-v\", \"vb vbp\"],\n  \"absorb\": [\"ah-b z-ao1-r-b\", \"vb vbp\"],\n  \"absorbed\": [\"ah-b z-ao1-r-b-d\", \"vbn jj vbd\"],\n  \"absorbency\": [\"ah-b z-ao1-r b-ah-n s-iy\", \"nn\"],\n  \"absorbent\": [\"ah-b z-ao1-r b-ah-n-t\", \"jj\"],\n  \"absorber\": [\"ah-b z-ao1-r b-er\", \"nn\"],\n  \"absorbing\": [\"ah-b z-ao1-r b-ih-ng\", \"vbg jj\"],\n  \"absorption\": [\"ah-b z-ao1-r-p sh-ah-n\", \"nn\"],\n  \"abstain\": [\"ah-b s-t-ey1-n\", \"vb vbp\"],\n  \"abstention\": [\"ah-b s-t-eh1-n ch-ah-n\", \"nn\"],\n  \"abstinence\": [\"ae1-b s-t-ah n-ah-n-s\", \"nn\"],\n  \"abstract\": [\"ae-b s-t-r-ae1-k-t\", \"jj nn vb vbp\"],\n  \"abstracted\": [\"ae1-b s-t-r-ae-k t-ih-d\", \"jj vbd\"],\n  \"abstraction\": [\"ae-b s-t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"abstruse\": [\"ah-b s-t-r-uw1-s\", \"jj\"],\n  \"absurd\": [\"ah-b s-er1-d\", \"jj\"],\n  \"absurdist\": [\"ah-b s-er1 d-ih-s-t\", \"jj nn\"],\n  \"absurdity\": [\"ah-b s-er1 d-ah t-iy\", \"nn\"],\n  \"absurdly\": [\"ah-b s-er1-d l-iy\", \"rb\"],\n  \"abundance\": [\"ah b-ah1-n d-ah-n-s\", \"nn\"],\n  \"abundant\": [\"ah b-ah1-n d-ah-n-t\", \"jj\"],\n  \"abundantly\": [\"ah b-ah1-n d-ah-n-t l-iy\", \"rb\"],\n  \"abuse\": [\"ah b-y-uw1-s\", \"nn vb vbp\"],\n  \"abused\": [\"ah b-y-uw1-z-d\", \"vbn jj vbd\"],\n  \"abuser\": [\"ah b-y-uw1 z-er\", \"nn\"],\n  \"abusive\": [\"ah b-y-uw1 s-ih-v\", \"jj\"],\n  \"abuzz\": [\"ah b-ah1-z\", \"jj\"],\n  \"abysmal\": [\"ah b-ih1-z m-ah-l\", \"jj\"],\n  \"abyss\": [\"ah b-ih1-s\", \"nn\"],\n  \"acacia\": [\"ah k-ey1 sh-ah\", \"nn\"],\n  \"academia\": [\"ae k-ah d-iy1 m-iy ah\", \"nn\"],\n  \"academic\": [\"ae k-ah d-eh1 m-ih-k\", \"jj nn\"],\n  \"academically\": [\"ae k-ah d-eh1 m-ih-k l-iy\", \"rb\"],\n  \"academician\": [\"ae k-ah d-ah m-ih1 sh-ah-n\", \"nn\"],\n  \"academy\": [\"ah k-ae1 d-ah m-iy\", \"nn\"],\n  \"accede\": [\"ae-k s-iy1-d\", \"vb\"],\n  \"accelerate\": [\"ae-k s-eh1 l-er ey-t\", \"vb vbp\"],\n  \"accelerated\": [\"ae-k s-eh1 l-er ey t-ih-d\", \"vbn jj vbd\"],\n  \"accelerating\": [\"ae-k s-eh1 l-er ey t-ih-ng\", \"vbg jj\"],\n  \"acceleration\": [\"ae-k s-eh l-er ey1 sh-ah-n\", \"nn\"],\n  \"accelerator\": [\"ae-k s-eh1 l-er ey t-er\", \"nn\"],\n  \"accelerometer\": [\"ae-k s-eh l-er aa1 m-ah t-er\", \"nn\"],\n  \"accent\": [\"ah-k s-eh1-n-t\", \"nn vb\"],\n  \"accented\": [\"ae1-k s-eh-n t-ih-d\", \"vbn jj\"],\n  \"accentuate\": [\"ae-k s-eh1-n ch-uw ey-t\", \"vb\"],\n  \"accept\": [\"ae-k s-eh1-p-t\", \"vb vbp\"],\n  \"acceptability\": [\"ah-k s-eh-p t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"acceptable\": [\"ae-k s-eh1-p t-ah b-ah-l\", \"jj\"],\n  \"acceptance\": [\"ae-k s-eh1-p t-ah-n-s\", \"nn\"],\n  \"accepted\": [\"ae-k s-eh1-p t-ih-d\", \"vbn jj vbd\"],\n  \"accepting\": [\"ae-k s-eh1-p t-ih-ng\", \"vbg jj\"],\n  \"access\": [\"ae1-k s-eh-s\", \"nn vb\"],\n  \"accessibility\": [\"ae-k s-eh s-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"accessible\": [\"ae-k s-eh1 s-ah b-ah-l\", \"jj\"],\n  \"accessory\": [\"ae-k s-eh1 s-er iy\", \"nn jj\"],\n  \"accident\": [\"ae1-k s-ah d-ah-n-t\", \"nn\"],\n  \"accidental\": [\"ae-k s-ah d-eh1-n t-ah-l\", \"jj\"],\n  \"accidentally\": [\"ae-k s-ah d-eh1-n t-ah l-iy\", \"rb\"],\n  \"accidently\": [\"ae1-k s-ah d-ah-n-t l-iy\", \"rb\"],\n  \"acclaim\": [\"ah k-l-ey1-m\", \"nn vb\"],\n  \"acclaimed\": [\"ah k-l-ey1-m-d\", \"vbn vbd jj\"],\n  \"accolade\": [\"ae1 k-ah l-ey-d\", \"nn\"],\n  \"accommodate\": [\"ah k-aa1 m-ah d-ey-t\", \"vb vbp\"],\n  \"accommodation\": [\"ah k-aa m-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"accompaniment\": [\"ah k-ah1-m-p n-ih m-ah-n-t\", \"nn\"],\n  \"accompanist\": [\"ah k-ah1-m p-ah n-ah-s-t\", \"nn\"],\n  \"accompany\": [\"ah k-ah1-m p-ah n-iy\", \"vb vbp\"],\n  \"accompanying\": [\"ah k-ah1-m p-ah n-iy ih-ng\", \"vbg jj\"],\n  \"accomplice\": [\"ah k-aa1-m p-l-ah-s\", \"nn\"],\n  \"accomplish\": [\"ah k-aa1-m p-l-ih-sh\", \"vb vbp\"],\n  \"accomplished\": [\"ah k-aa1-m p-l-ih-sh-t\", \"vbn jj vbd\"],\n  \"accomplishment\": [\"ah k-aa1-m p-l-ih-sh m-ah-n-t\", \"nn\"],\n  \"accord\": [\"ah k-ao1-r-d\", \"nn vbp rb vb\"],\n  \"accordance\": [\"ah k-ao1-r d-ah-n-s\", \"nn\"],\n  \"accordingly\": [\"ah k-ao1-r d-ih-ng l-iy\", \"rb\"],\n  \"accordion\": [\"ah k-ao1-r d-iy ah-n\", \"nn\"],\n  \"accost\": [\"ah-k-ao1-s-t\", \"vb\"],\n  \"account\": [\"ah k-aw1-n-t\", \"nn vbp vb\"],\n  \"accountability\": [\"ah k-aw1-n t-ah b-ih l-ih t-iy\", \"nn\"],\n  \"accountable\": [\"ah k-aw1-n t-ah b-ah-l\", \"jj\"],\n  \"accountant\": [\"ah k-aw1-n t-ah-n-t\", \"nn\"],\n  \"accouterment\": [\"ah k-uw1 t-er m-ah-n-t\", \"nn\"],\n  \"accredit\": [\"ah-k-r-eh1-d-ih-t\", \"vb\"],\n  \"accreditation\": [\"ah k-r-eh d-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"accretion\": [\"ah k-r-iy1 sh-ah-n\", \"nn\"],\n  \"accrual\": [\"ah k-r-uw1 ah-l\", \"nn\"],\n  \"accrue\": [\"ah k-r-uw1\", \"vb\"],\n  \"accrued\": [\"ah k-r-uw1-d\", \"vbn jj\"],\n  \"accumulate\": [\"ah k-y-uw1 m-y-ah l-ey-t\", \"vb vbp\"],\n  \"accumulated\": [\"ah k-y-uw1 m-y-ah l-ey t-ih-d\", \"vbn jj vbd\"],\n  \"accumulating\": [\"ah k-y-uw1 m-y-ah l-ey t-ih-ng\", \"vbg jj\"],\n  \"accumulation\": [\"ah k-y-uw m-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"accuracy\": [\"ae1 k-y-er ah s-iy\", \"nn\"],\n  \"accurate\": [\"ae1 k-y-er ah-t\", \"jj\"],\n  \"accurately\": [\"ae1 k-y-er ah-t l-iy\", \"rb\"],\n  \"accusation\": [\"ae k-y-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"accusatory\": [\"ah k-y-uw1 z-ah t-ao r-iy\", \"jj\"],\n  \"accuse\": [\"ah k-y-uw1-z\", \"vb vbp\"],\n  \"accused\": [\"ah k-y-uw1-z-d\", \"vbn vbd jj nn\"],\n  \"accuser\": [\"ah k-y-uw1 z-er\", \"nn\"],\n  \"accusing\": [\"ah k-y-uw1 z-ih-ng\", \"vbg jj\"],\n  \"accusingly\": [\"ah k-y-uw1 z-ih-ng l-iy\", \"rb\"],\n  \"accustom\": [\"ah-k-ah1-s-t-ah-m\", \"vb\"],\n  \"accustomed\": [\"ah k-ah1 s-t-ah-m-d\", \"vbn jj\"],\n  \"ace\": [\"ey1-s\", \"nn\"],\n  \"acerbic\": [\"ah s-eh1-r b-ih-k\", \"jj\"],\n  \"acetate\": [\"ae1 s-ah t-ey-t\", \"nn\"],\n  \"acetone\": [\"ae1 s-ah t-ow-n\", \"nn\"],\n  \"acetylene\": [\"ah s-eh1 t-ah l-iy-n\", \"nn\"],\n  \"ache\": [\"ey1-k\", \"nn vb vbp\"],\n  \"achievable\": [\"ah ch-iy1 v-ah b-ah-l\", \"jj\"],\n  \"achieve\": [\"ah ch-iy1-v\", \"vb vbp\"],\n  \"achieved\": [\"ah ch-iy1-v-d\", \"vbn vbd jj\"],\n  \"achievement\": [\"ah ch-iy1-v m-ah-n-t\", \"nn\"],\n  \"aching\": [\"ey1 k-ih-ng\", \"vbg jj\"],\n  \"acid\": [\"ae1 s-ah-d\", \"nn jj\"],\n  \"acidified\": [\"ah s-ih1 d-ah f-ay-d\", \"vbn\"],\n  \"acidify\": [\"ah-s-ih1-d-ah-f-ay\", \"vb\"],\n  \"acidity\": [\"ah s-ih1 d-ah t-iy\", \"nn\"],\n  \"acidly\": [\"ae1 s-ah-d l-iy\", \"rb\"],\n  \"aciduria\": [\"ae s-ah d-uh1 r-iy ah\", \"nn\"],\n  \"acknowledge\": [\"ae-k n-aa1 l-ih-jh\", \"vbp vb\"],\n  \"acknowledged\": [\"ae-k n-aa1 l-ih-jh-d\", \"vbd vbn jj\"],\n  \"acknowledgement\": [\"ae-k n-aa1 l-ih-jh m-ah-n-t\", \"nn\"],\n  \"acknowledgment\": [\"ae-k n-aa1 l-ih-jh m-ah-n-t\", \"nn\"],\n  \"acne\": [\"ae1-k n-iy\", \"nn\"],\n  \"acolyte\": [\"ae1 k-ah l-ay-t\", \"nn\"],\n  \"acorn\": [\"ey1 k-ao-r-n\", \"nn\"],\n  \"acoustic\": [\"ah k-uw1 s-t-ih-k\", \"jj\"],\n  \"acoustical\": [\"ah k-uw1 s-t-ih k-ah-l\", \"jj\"],\n  \"acoustically\": [\"ah k-uw1 s-t-ih-k l-iy\", \"rb\"],\n  \"acquaint\": [\"ah k-w-ey1-n-t\", \"vb\"],\n  \"acquaintance\": [\"ah k-w-ey1-n t-ah-n-s\", \"nn\"],\n  \"acquiesce\": [\"ae k-w-iy eh1-s\", \"vb\"],\n  \"acquiescence\": [\"ae k-w-iy eh1 s-ah-n-s\", \"nn\"],\n  \"acquire\": [\"ah k-w-ay1 er\", \"vb nn vbp\"],\n  \"acquired\": [\"ah k-w-ay1 er-d\", \"vbn jj vbd\"],\n  \"acquirer\": [\"ah k-w-ay1 er er\", \"nn\"],\n  \"acquisition\": [\"ae k-w-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"acquisitive\": [\"ah k-w-ih1 z-ah t-ih-v\", \"jj\"],\n  \"acquit\": [\"ah k-w-ih1-t\", \"vb\"],\n  \"acquittal\": [\"ah k-w-ih1 t-ah-l\", \"nn\"],\n  \"acre\": [\"ey1 k-er\", \"nn\"],\n  \"acreage\": [\"ey1 k-er ih-jh\", \"nn\"],\n  \"acrimonious\": [\"ae k-r-ah m-ow1 n-iy ah-s\", \"jj\"],\n  \"acrimony\": [\"ae1 k-r-ih m-ow n-iy\", \"nn\"],\n  \"acrobat\": [\"ae1 k-r-ah b-ae-t\", \"nn\"],\n  \"acrobatic\": [\"ae k-r-ah b-ae1 t-ih-k\", \"jj\"],\n  \"acronym\": [\"ae1 k-r-ah n-ih-m\", \"nn\"],\n  \"across\": [\"ah k-r-ao1-s\", \"in rb rp\"],\n  \"acrylic\": [\"ah k-r-ih1 l-ih-k\", \"nn\"],\n  \"act\": [\"ae1-k-t\", \"nn vbp vb\"],\n  \"acting\": [\"ae1-k t-ih-ng\", \"vbg jj nn\"],\n  \"action\": [\"ae1-k sh-ah-n\", \"nn\"],\n  \"actionable\": [\"ae1-k sh-ah-n ah b-ah-l\", \"jj\"],\n  \"activate\": [\"ae1-k t-ah v-ey-t\", \"vbp vb\"],\n  \"activated\": [\"ae1-k t-ah v-ey t-ah-d\", \"vbn jj\"],\n  \"activation\": [\"ae-k t-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"active\": [\"ae1-k t-ih-v\", \"jj nn\"],\n  \"actively\": [\"ae1-k t-ih-v l-iy\", \"rb\"],\n  \"activism\": [\"ae1-k t-ih v-ih z-ah-m\", \"nn\"],\n  \"activist\": [\"ae1-k t-ah v-ah-s-t\", \"nn jj\"],\n  \"activity\": [\"ae-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"actor\": [\"ae1-k t-er\", \"nn\"],\n  \"actress\": [\"ae1-k t-r-ah-s\", \"nn\"],\n  \"actual\": [\"ae1-k ch-uw ah-l\", \"jj\"],\n  \"actuality\": [\"ae-k ch-uw ae1 l-ah t-iy\", \"nn\"],\n  \"actually\": [\"ae1-k ch-uw ah l-iy\", \"rb\"],\n  \"actuarial\": [\"ae-k ch-uw eh1 r-iy ah-l\", \"jj\"],\n  \"actuary\": [\"ae1-k ch-uw eh r-iy\", \"nn\"],\n  \"acumen\": [\"ah k-y-uw1 m-ah-n\", \"nn\"],\n  \"acupuncture\": [\"ae1 k-y-uw p-ah-ng-k ch-er\", \"nn\"],\n  \"acute\": [\"ah k-y-uw1-t\", \"jj nn\"],\n  \"acutely\": [\"ah k-y-uw1-t l-iy\", \"rb\"],\n  \"ad\": [\"ae1-d\", \"nn\"],\n  \"adage\": [\"ae1 d-ah-jh\", \"nn\"],\n  \"adagio\": [\"ah d-aa1 zh-iy ow\", \"nn rb\"],\n  \"adamant\": [\"ae1 d-ah m-ah-n-t\", \"jj\"],\n  \"adamantly\": [\"ae1 d-ah m-ah-n-t l-iy\", \"rb\"],\n  \"adapt\": [\"ah d-ae1-p-t\", \"vb vbp\"],\n  \"adaptability\": [\"ah d-ae-p t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"adaptable\": [\"ah d-ae1-p t-ah b-ah-l\", \"jj\"],\n  \"adaptation\": [\"ae d-ah-p t-ey1 sh-ah-n\", \"nn\"],\n  \"adapter\": [\"ah d-ae1-p t-er\", \"nn\"],\n  \"adaptor\": [\"ah d-ae1-p t-er\", \"nn\"],\n  \"add\": [\"ae1-d\", \"vb vbp\"],\n  \"added\": [\"ae1 d-ah-d\", \"vbd jj vbn\"],\n  \"addict\": [\"ah d-ih1-k-t\", \"nn vb\"],\n  \"addicted\": [\"ah d-ih1-k t-ah-d\", \"vbn jj\"],\n  \"addiction\": [\"ah d-ih1-k sh-ah-n\", \"nn\"],\n  \"addictive\": [\"ah d-ih1-k t-ih-v\", \"jj\"],\n  \"addition\": [\"ah d-ih1 sh-ah-n\", \"nn\"],\n  \"additional\": [\"ah d-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"additionally\": [\"ah d-ih1 sh-ah-n ah l-iy\", \"rb\"],\n  \"additive\": [\"ae1 d-ah t-ih-v\", \"nn\"],\n  \"addle\": [\"ae1-d-ah-l\", \"vb\"],\n  \"addled\": [\"ae1 d-ah-l-d\", \"jj vbn\"],\n  \"address\": [\"ae1 d-r-eh-s\", \"nn vbp vb\"],\n  \"addressed\": [\"ah d-r-eh1-s-t\", \"vbn jj vbd\"],\n  \"addressee\": [\"ae d-r-eh s-iy1\", \"nn\"],\n  \"adept\": [\"ah d-eh1-p-t\", \"jj\"],\n  \"adequacy\": [\"ae1 d-ah k-w-ah s-iy\", \"nn\"],\n  \"adequate\": [\"ae1 d-ah k-w-ah-t\", \"jj\"],\n  \"adequately\": [\"ae1 d-ah k-w-ah-t l-iy\", \"rb\"],\n  \"adhere\": [\"ah-d hh-ih1-r\", \"vb vbp\"],\n  \"adherence\": [\"ah-d hh-ih1 r-ah-n-s\", \"nn\"],\n  \"adherent\": [\"ah-d hh-ih1 r-ah-n-t\", \"jj nn\"],\n  \"adhesive\": [\"ae-d hh-iy1 s-ih-v\", \"jj nn\"],\n  \"adjacent\": [\"ah jh-ey1 s-ah-n-t\", \"jj\"],\n  \"adjective\": [\"ae1 jh-ih-k t-ih-v\", \"nn\"],\n  \"adjoin\": [\"ah-jh-oy1-n\", \"vb\"],\n  \"adjoining\": [\"ah jh-oy1 n-ih-ng\", \"vbg jj\"],\n  \"adjourn\": [\"ah jh-er1-n\", \"vb\"],\n  \"adjournment\": [\"ah jh-er1-n m-ah-n-t\", \"nn\"],\n  \"adjudge\": [\"ah-jh-ah1-jh\", \"vb\"],\n  \"adjudicate\": [\"ah jh-uw1 d-ih k-ey-t\", \"vb\"],\n  \"adjudication\": [\"ah jh-uw d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"adjunct\": [\"ae1 jh-ah-ng-k-t\", \"nn jj\"],\n  \"adjust\": [\"ah jh-ah1-s-t\", \"vb vbp\"],\n  \"adjustable\": [\"ah jh-ah1 s-t-ah b-ah-l\", \"jj\"],\n  \"adjusted\": [\"ah jh-ah1 s-t-ah-d\", \"vbn jj vbd\"],\n  \"adjuster\": [\"ah jh-ah1 s-t-er\", \"nn\"],\n  \"adjustment\": [\"ah jh-ah1-s-t m-ah-n-t\", \"nn\"],\n  \"adman\": [\"ae1-d m-ah-n\", \"nn\"],\n  \"administer\": [\"ah-d m-ih1 n-ah s-t-er\", \"vb vbp\"],\n  \"administrate\": [\"ae-d m-ih1 n-ih s-t-r-ey-t\", \"vb\"],\n  \"administration\": [\"ae-d m-ih n-ih s-t-r-ey1 sh-ah-n\", \"nn\"],\n  \"administrative\": [\"ah-d m-ih1 n-ah s-t-r-ey t-ih-v\", \"jj\"],\n  \"administratively\": [\"ae-d m-ih n-ah s-t-r-ey1 t-ih-v l-iy\", \"rb\"],\n  \"administrator\": [\"ah-d m-ih1 n-ah s-t-r-ey t-er\", \"nn\"],\n  \"admirable\": [\"ae1-d m-er ah b-ah-l\", \"jj\"],\n  \"admirably\": [\"ae1-d m-er ah b-l-iy\", \"rb\"],\n  \"admiral\": [\"ae1-d m-er ah-l\", \"nn\"],\n  \"admiralty\": [\"ae1-d m-er ah-l t-iy\", \"nn\"],\n  \"admiration\": [\"ae-d m-er ey1 sh-ah-n\", \"nn\"],\n  \"admire\": [\"ae-d m-ay1-r\", \"vb vbp\"],\n  \"admired\": [\"ah-d m-ay1 er-d\", \"vbd vbn jj\"],\n  \"admirer\": [\"ae-d m-ay1 r-er\", \"nn\"],\n  \"admiringly\": [\"ae-d m-ay1 r-ih-ng l-iy\", \"rb\"],\n  \"admissible\": [\"ah-d m-ih1 s-ah b-ah-l\", \"jj\"],\n  \"admission\": [\"ae-d m-ih1 sh-ah-n\", \"nn\"],\n  \"admit\": [\"ah-d m-ih1-t\", \"vb vbp\"],\n  \"admittance\": [\"ah-d m-ih1 t-ah-n-s\", \"nn\"],\n  \"admitted\": [\"ah-d m-ih1 t-ah-d\", \"vbd vbn jj\"],\n  \"admittedly\": [\"ae-d m-ih1 t-ih-d l-iy\", \"rb\"],\n  \"admonish\": [\"ae-d-m-aa1-n-ih-sh\", \"vb\"],\n  \"admonition\": [\"ae-d m-ah n-ih1 sh-ah-n\", \"nn\"],\n  \"adobe\": [\"ah d-ow1 b-iy\", \"nn\"],\n  \"adolescence\": [\"ae d-ah l-eh1 s-ah-n-s\", \"nn\"],\n  \"adolescent\": [\"ae d-ah l-eh1 s-ah-n-t\", \"nn jj\"],\n  \"adopt\": [\"ah d-aa1-p-t\", \"vb vbp\"],\n  \"adoptable\": [\"ah d-aa1-p t-ah b-ah-l\", \"jj\"],\n  \"adopted\": [\"ah d-aa1-p t-ah-d\", \"vbn vbd jj\"],\n  \"adoptee\": [\"ah d-aa1-p t-iy1\", \"nn\"],\n  \"adoption\": [\"ah d-aa1-p sh-ah-n\", \"nn\"],\n  \"adoptive\": [\"ah d-aa1-p t-ih-v\", \"jj\"],\n  \"adorable\": [\"ah d-ao1 r-ah b-ah-l\", \"jj\"],\n  \"adore\": [\"ah d-ao1-r\", \"vbp vb\"],\n  \"adorn\": [\"ah d-ao1-r-n\", \"vb vbp\"],\n  \"adrenal\": [\"ah d-r-iy1 n-ah-l\", \"jj nn\"],\n  \"adrenaline\": [\"ah d-r-eh1 n-ah l-ah-n\", \"nn\"],\n  \"adrift\": [\"ah d-r-ih1-f-t\", \"rb\"],\n  \"adroit\": [\"ah d-r-oy1-t\", \"jj\"],\n  \"adroitly\": [\"ah d-r-oy1-t l-iy\", \"rb\"],\n  \"adulation\": [\"ae jh-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"adult\": [\"ah d-ah1-l-t\", \"nn jj\"],\n  \"adulterate\": [\"ah-d-ah1-l-t-er-ey-t\", \"vb\"],\n  \"adulterated\": [\"ah d-ah1-l t-er ey t-ih-d\", \"vbn jj\"],\n  \"adulterer\": [\"ah d-ah1-l t-er er\", \"nn\"],\n  \"adulterous\": [\"ah d-ah1-l t-er ah-s\", \"jj\"],\n  \"adultery\": [\"ah d-ah1-l t-er iy\", \"nn\"],\n  \"adulthood\": [\"ah d-ah1-l-t hh-uh-d\", \"nn\"],\n  \"advance\": [\"ah-d v-ae1-n-s\", \"nn jj vb vbp\"],\n  \"advanced\": [\"ah-d v-ae1-n-s-t\", \"vbd vbn jj\"],\n  \"advancement\": [\"ah-d v-ae1-n-s m-ah-n-t\", \"nn\"],\n  \"advancer\": [\"ah-d v-ae1-n s-er\", \"nn\"],\n  \"advancing\": [\"ah-d v-ae1-n s-ih-ng\", \"vbg jj\"],\n  \"advantage\": [\"ae-d v-ae1-n t-ih-jh\", \"nn vb\"],\n  \"advantageous\": [\"ae-d v-ah-n t-ey1 jh-ah-s\", \"jj\"],\n  \"advent\": [\"ae1-d v-eh-n-t\", \"nn\"],\n  \"adventure\": [\"ae-d v-eh1-n ch-er\", \"nn vb\"],\n  \"adventurer\": [\"ae-d v-eh1-n ch-er er\", \"nn\"],\n  \"adventuresome\": [\"ae-d v-eh1-n ch-er s-ah-m\", \"jj\"],\n  \"adventurous\": [\"ae-d v-eh1-n ch-er ah-s\", \"jj\"],\n  \"adverb\": [\"ae1-d v-er-b\", \"nn\"],\n  \"adverbial\": [\"ae-d v-er1 b-iy ah-l\", \"jj\"],\n  \"adversarial\": [\"ae-d v-er s-eh1 r-iy ah-l\", \"jj\"],\n  \"adversary\": [\"ae1-d v-er s-eh r-iy\", \"nn jj\"],\n  \"adverse\": [\"ae-d v-er1-s\", \"jj\"],\n  \"adversely\": [\"ae-d v-er1-s l-iy\", \"rb\"],\n  \"adversity\": [\"ae-d v-er1 s-ih t-iy\", \"nn\"],\n  \"advertise\": [\"ae1-d v-er t-ay-z\", \"vb vbp\"],\n  \"advertised\": [\"ae1-d v-er t-ay-z-d\", \"vbn jj vbd\"],\n  \"advertisement\": [\"ah-d v-er1 t-ah-z m-ah-n-t\", \"nn\"],\n  \"advertiser\": [\"ae1-d v-er t-ay z-er\", \"nn\"],\n  \"advertorial\": [\"ae-d v-er t-ao1 r-iy ah-l\", \"jj\"],\n  \"advice\": [\"ae-d v-ay1-s\", \"nn\"],\n  \"advisable\": [\"ah-d v-ay1 z-ah b-ah-l\", \"jj\"],\n  \"advise\": [\"ae-d v-ay1-z\", \"vb vbp\"],\n  \"advised\": [\"ae-d v-ay1-z-d\", \"vbn vbd jj\"],\n  \"advisedly\": [\"ae-d v-ay1 z-ah-d l-iy\", \"rb\"],\n  \"advisement\": [\"ah-d v-ay1-z m-ah-n-t\", \"nn\"],\n  \"adviser\": [\"ae-d v-ay1 z-er\", \"nn\"],\n  \"advisor\": [\"ae-d v-ay1 z-er\", \"nn\"],\n  \"advisory\": [\"ae-d v-ay1 z-er iy\", \"jj nn\"],\n  \"advocacy\": [\"ae1-d v-ah k-ah s-iy\", \"nn\"],\n  \"advocate\": [\"ae1-d v-ah k-ah-t\", \"nn vb vbp\"],\n  \"aegis\": [\"iy1 jh-ah-s\", \"nn\"],\n  \"aerial\": [\"eh1 r-iy ah-l\", \"jj\"],\n  \"aerobic\": [\"eh r-ow1 b-ih-k\", \"jj\"],\n  \"aerobics\": [\"er ow1 b-ih-k-s\", \"nn\"],\n  \"aerodynamic\": [\"eh r-ow d-ay n-ae1 m-ih-k\", \"jj\"],\n  \"aeronautical\": [\"eh r-ow n-aa1 t-ah k-ah-l\", \"jj\"],\n  \"aerosol\": [\"eh1 r-ah s-aa-l\", \"nn\"],\n  \"aerospace\": [\"eh1 r-ow s-p-ey-s\", \"nn jj\"],\n  \"aesthetic\": [\"eh-s th-eh1 t-ih-k\", \"jj nn\"],\n  \"aesthetically\": [\"eh-s th-eh1 t-ih-k l-iy\", \"rb\"],\n  \"afar\": [\"ah f-aa1-r\", \"rb\"],\n  \"affable\": [\"ae1 f-ah b-ah-l\", \"jj\"],\n  \"affair\": [\"ah f-eh1-r\", \"nn\"],\n  \"affect\": [\"ah f-eh1-k-t\", \"vb vbp nn\"],\n  \"affectation\": [\"ae f-eh-k t-ey1 sh-ah-n\", \"nn\"],\n  \"affected\": [\"ah f-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"affection\": [\"ah f-eh1-k sh-ah-n\", \"nn\"],\n  \"affectionate\": [\"ah f-eh1-k sh-ah-n ah-t\", \"jj\"],\n  \"affectionately\": [\"ah f-eh1-k sh-ah-n ah-t l-iy\", \"rb\"],\n  \"afferent\": [\"ae1 f-er ah-n-t\", \"jj\"],\n  \"affidavit\": [\"ae f-ah d-ey1 v-ah-t\", \"nn\"],\n  \"affiliate\": [\"ah f-ih1 l-iy ey-t\", \"nn vb\"],\n  \"affiliated\": [\"ah f-ih1 l-iy ey t-ah-d\", \"vbn jj\"],\n  \"affiliation\": [\"ah f-ih l-iy ey1 sh-ah-n\", \"nn\"],\n  \"affinity\": [\"ah f-ih1 n-ah t-iy\", \"nn\"],\n  \"affirm\": [\"ah f-er1-m\", \"vb vbp\"],\n  \"affirmation\": [\"ae f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"affirmative\": [\"ah f-er1 m-ah t-ih-v\", \"jj nn\"],\n  \"affix\": [\"ae1 f-ih-k-s\", \"vb\"],\n  \"affixed\": [\"ah f-ih1-k-s-t\", \"vbn jj\"],\n  \"afflict\": [\"ah f-l-ih1-k-t\", \"vb\"],\n  \"afflicted\": [\"ah f-l-ih1-k t-ah-d\", \"vbn jj\"],\n  \"affliction\": [\"ah f-l-ih1-k sh-ah-n\", \"nn\"],\n  \"affluence\": [\"ae1 f-l-uw ah-n-s\", \"nn\"],\n  \"affluent\": [\"ae1 f-l-uw ah-n-t\", \"jj nn\"],\n  \"afford\": [\"ah f-ao1-r-d\", \"vb vbp\"],\n  \"affordability\": [\"ah f-ao-r d-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"affordable\": [\"ah f-ao1-r d-ah b-ah-l\", \"jj\"],\n  \"affront\": [\"ah f-r-ah1-n-t\", \"nn vb\"],\n  \"afghan\": [\"ae1-f g-ae-n\", \"nn\"],\n  \"aficionado\": [\"ah f-iy sh-y-ah n-aa1 d-ow\", \"nn\"],\n  \"afraid\": [\"ah f-r-ey1-d\", \"jj\"],\n  \"after\": [\"ae1-f t-er\", \"in rb rp\"],\n  \"afterburner\": [\"ae1-f t-er b-er n-er\", \"nn\"],\n  \"aftereffect\": [\"ae1-f t-er ah f-eh-k-t\", \"nn\"],\n  \"afterglow\": [\"ae1-f t-er g-l-ow\", \"nn\"],\n  \"aftermarket\": [\"ae1-f t-er m-aa-r k-ih-t\", \"jj nn\"],\n  \"aftermath\": [\"ae1-f t-er m-ae-th\", \"nn\"],\n  \"afternoon\": [\"ae-f t-er n-uw1-n\", \"nn\"],\n  \"aftershock\": [\"ae1-f t-er sh-aa-k\", \"nn\"],\n  \"afterthought\": [\"ae1-f t-er th-aa-t\", \"nn\"],\n  \"afterward\": [\"ae1-f t-er w-er-d\", \"rb\"],\n  \"afterwards\": [\"ae1-f t-er w-er-d-z\", \"rb\"],\n  \"again\": [\"ah g-eh1-n\", \"rb\"],\n  \"against\": [\"ah g-eh1-n-s-t\", \"in\"],\n  \"agate\": [\"ae1 g-ah-t\", \"nn\"],\n  \"age\": [\"ey1-jh\", \"nn vb vbp\"],\n  \"aged\": [\"ey1-jh-d\", \"vbn jj vbd\"],\n  \"ageless\": [\"ey1-jh l-ah-s\", \"jj\"],\n  \"agency\": [\"ey1 jh-ah-n s-iy\", \"nn\"],\n  \"agenda\": [\"ah jh-eh1-n d-ah\", \"nn\"],\n  \"agent\": [\"ey1 jh-ah-n-t\", \"nn\"],\n  \"agglomeration\": [\"ah g-l-aa m-er ey1 sh-ah-n\", \"nn\"],\n  \"aggrandize\": [\"ah-g-r-ae1-n-d-ay-z\", \"vb\"],\n  \"aggravate\": [\"ae1 g-r-ah v-ey-t\", \"vbp vb\"],\n  \"aggravating\": [\"ae1 g-r-ah v-ey t-ih-ng\", \"vbg jj\"],\n  \"aggregate\": [\"ae1 g-r-ah g-ah-t\", \"jj nn\"],\n  \"aggression\": [\"ah g-r-eh1 sh-ah-n\", \"nn\"],\n  \"aggressive\": [\"ah g-r-eh1 s-ih-v\", \"jj\"],\n  \"aggressively\": [\"ah g-r-eh1 s-ih-v l-iy\", \"rb\"],\n  \"aggressiveness\": [\"ah g-r-eh1 s-ih-v n-ah-s\", \"nn\"],\n  \"aggressor\": [\"ah g-r-eh1 s-er\", \"nn\"],\n  \"aggrieve\": [\"ah-g-r-iy1-v\", \"vb\"],\n  \"aggrieved\": [\"ah g-r-iy1-v-d\", \"vbn jj\"],\n  \"aghast\": [\"ah g-ae1-s-t\", \"jj\"],\n  \"agile\": [\"ae1 jh-ah-l\", \"jj\"],\n  \"agility\": [\"ah jh-ih1 l-ah t-iy\", \"nn\"],\n  \"aging\": [\"ey1 jh-ih-ng\", \"vbg jj nn\"],\n  \"agitate\": [\"ae1 jh-ah t-ey-t\", \"vb vbp\"],\n  \"agitation\": [\"ae jh-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"agitator\": [\"ae1 jh-ah t-ey t-er\", \"nn\"],\n  \"agleam\": [\"ah-g l-iy1-m\", \"jj\"],\n  \"ago\": [\"ah g-ow1\", \"rb in\"],\n  \"agonize\": [\"ae1 g-ah n-ay-z\", \"vb vbp\"],\n  \"agonized\": [\"ae1 g-ah n-ay-z-d\", \"vbd jj\"],\n  \"agonizing\": [\"ae1 g-ah n-ay z-ih-ng\", \"jj\"],\n  \"agony\": [\"ae1 g-ah n-iy\", \"nn\"],\n  \"agrarian\": [\"ah g-r-eh1 r-iy ah-n\", \"jj nn\"],\n  \"agree\": [\"ah g-r-iy1\", \"vb vbp\"],\n  \"agreeable\": [\"ah g-r-iy1 ah b-ah-l\", \"jj\"],\n  \"agreed\": [\"ah g-r-iy1-d\", \"vbd vbn jj\"],\n  \"agreement\": [\"ah g-r-iy1 m-ah-n-t\", \"nn\"],\n  \"agricultural\": [\"ae g-r-ah k-ah1-l ch-er ah-l\", \"jj\"],\n  \"agriculture\": [\"ae1 g-r-ih k-ah-l ch-er\", \"nn\"],\n  \"agronomist\": [\"ah g-r-aa1 n-ah m-ih-s-t\", \"nn\"],\n  \"aground\": [\"ah g-r-aw1-n-d\", \"rb\"],\n  \"ahead\": [\"ah hh-eh1-d\", \"rb jj\"],\n  \"ahs\": [\"aa1-z\", \"uh\"],\n  \"aid\": [\"ey1-d\", \"nn vb vbp\"],\n  \"aide\": [\"ey1-d\", \"nn\"],\n  \"ail\": [\"ey1-l\", \"vb\"],\n  \"aileron\": [\"ey1 l-er aa-n\", \"nn\"],\n  \"ailing\": [\"ey1 l-ih-ng\", \"vbg jj\"],\n  \"ailment\": [\"ey1-l m-ah-n-t\", \"nn\"],\n  \"aim\": [\"ey1-m\", \"nn vbp vb\"],\n  \"aimless\": [\"ey1-m l-ah-s\", \"jj\"],\n  \"aimlessly\": [\"ey1-m l-ah-s l-iy\", \"rb\"],\n  \"air\": [\"eh1-r\", \"nn vb\"],\n  \"airbag\": [\"eh1-r b-ae-g\", \"nn\"],\n  \"airborne\": [\"eh1-r b-ao-r-n\", \"jj\"],\n  \"aircraft\": [\"eh1-r k-r-ae-f-t\", \"nn\"],\n  \"airfare\": [\"eh1-r f-eh-r\", \"nn\"],\n  \"airfield\": [\"eh1-r f-iy-l-d\", \"nn\"],\n  \"airflow\": [\"eh1-r f-l-ow\", \"nn\"],\n  \"airframe\": [\"eh1-r f-r-ey-m\", \"nn\"],\n  \"airless\": [\"eh1-r l-ah-s\", \"jj\"],\n  \"airlift\": [\"eh1-r l-ih-f-t\", \"nn vb\"],\n  \"airline\": [\"eh1-r l-ay-n\", \"nn\"],\n  \"airliner\": [\"eh1-r l-ay n-er\", \"nn\"],\n  \"airmail\": [\"eh1-r m-ey-l\", \"nn\"],\n  \"airman\": [\"eh1-r m-ah-n\", \"nn\"],\n  \"airplane\": [\"eh1-r p-l-ey-n\", \"nn\"],\n  \"airport\": [\"eh1-r p-ao-r-t\", \"nn\"],\n  \"airspeed\": [\"eh1-r s-p-iy-d\", \"nn\"],\n  \"airstrip\": [\"eh1-r s-t-r-ih-p\", \"nn\"],\n  \"airtime\": [\"eh1-r t-ay-m\", \"nn\"],\n  \"airwave\": [\"eh1-r w-ey-v\", \"nn\"],\n  \"airway\": [\"eh1-r w-ey\", \"nn\"],\n  \"airy\": [\"eh1 r-iy\", \"jj\"],\n  \"aisle\": [\"ay1-l\", \"nn\"],\n  \"ajar\": [\"ah jh-aa1-r\", \"rb\"],\n  \"alabaster\": [\"ae1 l-ah b-ae s-t-er\", \"jj\"],\n  \"alarm\": [\"ah l-aa1-r-m\", \"nn vb\"],\n  \"alarmed\": [\"ah l-aa1-r-m-d\", \"vbn jj\"],\n  \"alarming\": [\"ah l-aa1-r m-ih-ng\", \"jj vbg\"],\n  \"alarmingly\": [\"ah l-aa1-r m-ih-ng l-iy\", \"rb\"],\n  \"alarmist\": [\"ah l-aa1-r m-ah-s-t\", \"jj\"],\n  \"alas\": [\"ah l-ae1-s\", \"uh\"],\n  \"albatross\": [\"ae1-l b-ah t-r-aa-s\", \"nn\"],\n  \"albeit\": [\"ao-l b-iy1 ih-t\", \"in rb\"],\n  \"albino\": [\"ae-l b-ay1 n-ow\", \"nn\"],\n  \"album\": [\"ae1-l b-ah-m\", \"nn\"],\n  \"albumin\": [\"ae-l b-y-uw1 m-ah-n\", \"nn\"],\n  \"alchemy\": [\"ae1-l k-ah m-iy\", \"nn\"],\n  \"alcohol\": [\"ae1-l k-ah hh-aa-l\", \"nn\"],\n  \"alcoholic\": [\"ae-l k-ah hh-aa1 l-ih-k\", \"jj nn\"],\n  \"alcoholism\": [\"ae1-l k-ah hh-ao l-ih z-ah-m\", \"nn\"],\n  \"alcove\": [\"ae1-l k-ow-v\", \"nn\"],\n  \"alderman\": [\"ao1-l d-er m-ah-n\", \"nn\"],\n  \"ale\": [\"ey1-l\", \"nn\"],\n  \"alert\": [\"ah l-er1-t\", \"jj vbp nn vb\"],\n  \"alertness\": [\"ah l-er1-t n-ah-s\", \"nn\"],\n  \"alfalfa\": [\"ae-l f-ae1-l f-ah\", \"nn\"],\n  \"algae\": [\"ae1-l jh-iy\", \"nn\"],\n  \"algebra\": [\"ae1-l jh-ah b-r-ah\", \"nn\"],\n  \"algebraic\": [\"ae-l jh-ah b-r-ey1 ih-k\", \"jj\"],\n  \"algorithm\": [\"ae1-l g-er ih dh-ah-m\", \"nn\"],\n  \"alias\": [\"ey1 l-iy ah-s\", \"nn\"],\n  \"alibi\": [\"ae1 l-ah b-ay\", \"nn\"],\n  \"alien\": [\"ey1 l-iy ah-n\", \"jj nn\"],\n  \"alienate\": [\"ey1 l-y-ah n-ey-t\", \"vb\"],\n  \"alienating\": [\"ey1 l-iy ah n-ey t-ih-ng\", \"vbg jj\"],\n  \"alienation\": [\"ey l-iy ah n-ey1 sh-ah-n\", \"nn\"],\n  \"alight\": [\"ah l-ay1-t\", \"jj vb\"],\n  \"align\": [\"ah l-ay1-n\", \"vb vbp\"],\n  \"aligned\": [\"ah l-ay1-n-d\", \"vbn jj\"],\n  \"alignment\": [\"ah l-ay1-n m-ah-n-t\", \"nn\"],\n  \"alike\": [\"ah l-ay1-k\", \"rb jj\"],\n  \"alimony\": [\"ae1 l-ah m-ow n-iy\", \"nn\"],\n  \"alive\": [\"ah l-ay1-v\", \"jj rb\"],\n  \"alkali\": [\"ae1-l k-ah l-ay\", \"nn\"],\n  \"alkaline\": [\"ae1-l k-ah l-ay-n\", \"jj\"],\n  \"alkaloid\": [\"ae1-l k-ah l-oy-d\", \"nn\"],\n  \"all\": [\"ao1-l\", \"dt rb pdt\"],\n  \"allay\": [\"ah l-ey1\", \"vb\"],\n  \"allegation\": [\"ae l-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"allege\": [\"ah l-eh1-jh\", \"vbp vb\"],\n  \"alleged\": [\"ah l-eh1-jh-d\", \"vbn jj vbd\"],\n  \"allegedly\": [\"ah l-eh1 jh-ah-d l-iy\", \"rb\"],\n  \"allegiance\": [\"ah l-iy1 jh-ah-n-s\", \"nn\"],\n  \"allegorical\": [\"ae l-ah g-ao1 r-ah k-ah-l\", \"jj\"],\n  \"allegory\": [\"ae1 l-ah g-ao r-iy\", \"nn\"],\n  \"allegro\": [\"ah l-eh1 g-r-ow\", \"jj\"],\n  \"allergic\": [\"ah l-er1 jh-ih-k\", \"jj\"],\n  \"allergy\": [\"ae1 l-er jh-iy\", \"nn\"],\n  \"alleviate\": [\"ah l-iy1 v-iy ey-t\", \"vb vbp\"],\n  \"alley\": [\"ae1 l-iy\", \"nn\"],\n  \"alleyway\": [\"ae1 l-iy w-ey\", \"nn\"],\n  \"alliance\": [\"ah l-ay1 ah-n-s\", \"nn\"],\n  \"allied\": [\"ah l-ay1-d\", \"vbn jj vbd\"],\n  \"alligator\": [\"ae1 l-ah g-ey t-er\", \"nn\"],\n  \"alliterative\": [\"ah l-ih1 t-er ah t-ih-v\", \"jj\"],\n  \"allocate\": [\"ae1 l-ah k-ey-t\", \"vb vbp\"],\n  \"allocation\": [\"ae l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"allocator\": [\"ae1 l-ah k-ey t-er\", \"nn\"],\n  \"allot\": [\"ah l-aa1-t\", \"vb\"],\n  \"allotment\": [\"ah l-aa1-t m-ah-n-t\", \"nn\"],\n  \"allow\": [\"ah l-aw1\", \"vb vbp\"],\n  \"allowable\": [\"ah l-aw1 ah b-ah-l\", \"jj\"],\n  \"allowance\": [\"ah l-aw1 ah-n-s\", \"nn\"],\n  \"allowed\": [\"ah l-aw1-d\", \"vbn jj vbd\"],\n  \"alloy\": [\"ae1 l-oy\", \"nn\"],\n  \"allude\": [\"ah-l-uw1-d\", \"vb\"],\n  \"allure\": [\"ah l-uh1-r\", \"nn\"],\n  \"alluring\": [\"ah l-uh1 r-ih-ng\", \"jj\"],\n  \"allusion\": [\"ah l-uw1 zh-ah-n\", \"nn\"],\n  \"alluvial\": [\"ae l-uw1 v-iy ah-l\", \"jj\"],\n  \"ally\": [\"ae1 l-ay\", \"nn\"],\n  \"alma\": [\"ae1-l m-ah\", \"jj nn\"],\n  \"almanac\": [\"ao1-l m-ah n-ae-k\", \"nn\"],\n  \"almond\": [\"aa1 m-ah-n-d\", \"nn\"],\n  \"almost\": [\"ao1-l m-ow-s-t\", \"rb jj\"],\n  \"aloft\": [\"ah l-ao1-f-t\", \"rb\"],\n  \"alone\": [\"ah l-ow1-n\", \"rb jj\"],\n  \"along\": [\"ah l-ao1-ng\", \"in rb rp\"],\n  \"alongside\": [\"ah l-ao1-ng s-ay1-d\", \"in rb\"],\n  \"aloof\": [\"ah l-uw1-f\", \"jj rb\"],\n  \"aloofness\": [\"ah l-uw1-f n-ah-s\", \"nn\"],\n  \"aloud\": [\"ah l-aw1-d\", \"rb\"],\n  \"alpha\": [\"ae1-l f-ah\", \"jj nn\"],\n  \"alphabet\": [\"ae1-l f-ah b-eh-t\", \"nn\"],\n  \"alphabetic\": [\"ae-l f-ah b-eh1 t-ih-k\", \"jj\"],\n  \"alphabetical\": [\"ae-l f-ah b-eh1 t-ih k-ah-l\", \"jj\"],\n  \"alphabetically\": [\"ae-l f-ah b-eh1 t-ih-k l-iy\", \"rb\"],\n  \"already\": [\"ao-l r-eh1 d-iy\", \"rb\"],\n  \"also\": [\"ao1-l s-ow\", \"rb .\"],\n  \"altar\": [\"ao1-l t-er\", \"nn\"],\n  \"alter\": [\"ao1-l t-er\", \"vb vbp\"],\n  \"alteration\": [\"ao-l t-er ey1 sh-ah-n\", \"nn\"],\n  \"altercation\": [\"aa-l t-er k-ey1 sh-ah-n\", \"nn\"],\n  \"altered\": [\"ao1-l t-er-d\", \"vbn jj vbd\"],\n  \"alternate\": [\"ao1-l t-er n-ah-t\", \"jj vbp nn vb\"],\n  \"alternately\": [\"ao1-l t-er n-ah-t l-iy\", \"rb\"],\n  \"alternative\": [\"ao-l t-er1 n-ah t-ih-v\", \"nn jj\"],\n  \"alternatively\": [\"ao-l t-er1 n-ah t-ih-v l-iy\", \"rb\"],\n  \"although\": [\"ao-l dh-ow1\", \"in\"],\n  \"altitude\": [\"ae1-l t-ah t-uw-d\", \"nn\"],\n  \"altogether\": [\"ao-l t-ah g-eh1 dh-er\", \"rb\"],\n  \"altruism\": [\"ae1-l t-r-uw ih z-ah-m\", \"nn\"],\n  \"altruistic\": [\"ao-l t-r-uw ih1 s-t-ih-k\", \"jj\"],\n  \"alum\": [\"ae1 l-ah-m\", \"nn\"],\n  \"aluminum\": [\"ah l-uw1 m-ah n-ah-m\", \"nn jj\"],\n  \"alumnus\": [\"ah l-ah1-m n-ah-s\", \"nn\"],\n  \"always\": [\"ao1-l w-ey-z\", \"rb\"],\n  \"am\": [\"ae1-m\", \"vbp rb\"],\n  \"amalgam\": [\"ah m-ae1-l g-ah-m\", \"nn\"],\n  \"amalgamate\": [\"ah-m-ae1-l-g-ah-m-ey-t\", \"vb\"],\n  \"amalgamation\": [\"ah m-ae-l g-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"amass\": [\"ah m-ae1-s\", \"vb vbp\"],\n  \"amateur\": [\"ae1 m-ah t-er\", \"nn jj\"],\n  \"amateurish\": [\"ae1 m-ah ch-er ih-sh\", \"jj\"],\n  \"amaze\": [\"ah m-ey1-z\", \"vb vbp\"],\n  \"amazed\": [\"ah m-ey1-z-d\", \"vbn vbd jj\"],\n  \"amazement\": [\"ah m-ey1-z m-ah-n-t\", \"nn\"],\n  \"amazing\": [\"ah m-ey1 z-ih-ng\", \"jj\"],\n  \"amazingly\": [\"ah m-ey1 z-ih-ng l-iy\", \"rb\"],\n  \"amazon\": [\"ae1 m-ah z-aa-n\", \"nn\"],\n  \"ambassador\": [\"ae-m b-ae1 s-ah d-er\", \"nn\"],\n  \"amber\": [\"ae1-m b-er\", \"jj nn\"],\n  \"ambiance\": [\"ae1-m b-iy ah-n-s\", \"nn\"],\n  \"ambidextrous\": [\"ae-m b-ah d-eh1-k-s t-r-ah-s\", \"jj\"],\n  \"ambiguity\": [\"ae-m b-ih g-y-uw1 ah t-iy\", \"nn\"],\n  \"ambiguous\": [\"ae-m b-ih1 g-y-uw ah-s\", \"jj\"],\n  \"ambition\": [\"ae-m b-ih1 sh-ah-n\", \"nn\"],\n  \"ambitious\": [\"ae-m b-ih1 sh-ah-s\", \"jj\"],\n  \"ambitiously\": [\"ae-m b-ih1 sh-ah-s l-iy\", \"rb\"],\n  \"ambivalence\": [\"ae-m b-ih1 v-ah l-ah-n-s\", \"nn\"],\n  \"ambivalent\": [\"ae-m b-ih1 v-ah l-ah-n-t\", \"jj\"],\n  \"amble\": [\"ae1-m b-ah-l\", \"vb\"],\n  \"ambrosial\": [\"ae-m b-r-ow1 zh-ah-l\", \"jj\"],\n  \"ambulance\": [\"ae1-m b-y-ah l-ah-n-s\", \"nn\"],\n  \"ambulatory\": [\"ae1-m b-y-ah l-ah t-ao r-iy\", \"jj\"],\n  \"ambush\": [\"ae1-m b-uh-sh\", \"nn vb\"],\n  \"amelioration\": [\"ah m-iy l-y-er ey1 sh-ah-n\", \"nn\"],\n  \"amen\": [\"ey m-eh1-n\", \"uh\"],\n  \"amenable\": [\"ah m-eh1 n-ah b-ah-l\", \"jj\"],\n  \"amend\": [\"ah m-eh1-n-d\", \"vb vbp\"],\n  \"amendment\": [\"ah m-eh1-n-d m-ah-n-t\", \"nn\"],\n  \"amenity\": [\"ah m-eh1 n-ah t-iy\", \"nn\"],\n  \"amiable\": [\"ey1 m-iy ah b-ah-l\", \"jj\"],\n  \"amicable\": [\"ae1 m-ih k-ah b-ah-l\", \"jj\"],\n  \"amicably\": [\"ae1 m-ih k-ah b-l-iy\", \"rb\"],\n  \"amicus\": [\"ah m-iy1 k-ah-s\", \"nn\"],\n  \"amid\": [\"ah m-ih1-d\", \"in\"],\n  \"amidst\": [\"ah m-ih1-d-s-t\", \"in\"],\n  \"amiss\": [\"ah m-ih1-s\", \"jj\"],\n  \"amity\": [\"ae1 m-ih t-iy\", \"nn\"],\n  \"ammo\": [\"ae1 m-ow\", \"nn\"],\n  \"ammonia\": [\"ah m-ow1 n-y-ah\", \"nn\"],\n  \"ammonium\": [\"ah m-ow1 n-iy ah-m\", \"nn\"],\n  \"ammunition\": [\"ae m-y-ah n-ih1 sh-ah-n\", \"nn\"],\n  \"amnesty\": [\"ae1-m n-ah s-t-iy\", \"nn\"],\n  \"amniotic\": [\"ae1-m n-iy ao t-ih-k\", \"jj\"],\n  \"amok\": [\"ah m-ah1-k\", \"rb\"],\n  \"among\": [\"ah m-ah1-ng\", \"in\"],\n  \"amongst\": [\"ah m-ah1-ng-s-t\", \"in\"],\n  \"amoral\": [\"ey m-ao1 r-ah-l\", \"jj\"],\n  \"amorist\": [\"ae1 m-er ah-s-t\", \"nn\"],\n  \"amorous\": [\"ae1 m-er ah-s\", \"jj\"],\n  \"amorphous\": [\"ah m-ao1-r f-ah-s\", \"jj\"],\n  \"amortize\": [\"ae1 m-er t-ay-z\", \"vb\"],\n  \"amount\": [\"ah m-aw1-n-t\", \"nn vb vbp\"],\n  \"amphetamine\": [\"ae-m f-eh1 t-ah m-iy-n\", \"nn\"],\n  \"amphibious\": [\"ae-m f-ih1 b-iy ah-s\", \"jj\"],\n  \"amphitheater\": [\"ae1-m f-ah th-iy ah t-er\", \"nn\"],\n  \"ample\": [\"ae1-m p-ah-l\", \"jj\"],\n  \"amplification\": [\"ae-m p-l-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"amplifier\": [\"ae1-m p-l-ah f-ay er\", \"nn\"],\n  \"amplify\": [\"ae1-m p-l-ah f-ay\", \"vb\"],\n  \"amplitude\": [\"ae1-m p-l-ah t-uw-d\", \"nn\"],\n  \"amply\": [\"ae1-m p-l-iy\", \"rb\"],\n  \"amputate\": [\"ae1-m-p-y-ah-t-ey-t\", \"vb\"],\n  \"amputation\": [\"ae-m p-y-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"amulet\": [\"ae1 m-y-ah l-ah-t\", \"nn\"],\n  \"amuse\": [\"ah m-y-uw1-z\", \"vb vbp\"],\n  \"amused\": [\"ah m-y-uw1-z-d\", \"vbn jj vbd\"],\n  \"amusement\": [\"ah m-y-uw1-z m-ah-n-t\", \"nn\"],\n  \"amusing\": [\"ah m-y-uw1 z-ih-ng\", \"jj\"],\n  \"amusingly\": [\"ah m-y-uw1 z-ih-ng l-iy\", \"rb\"],\n  \"an\": [\"ae1-n\", \"dt cc jj\"],\n  \"anachronism\": [\"ah n-ae1 k-r-ah n-ih z-ah-m\", \"nn\"],\n  \"anachronistic\": [\"ah n-ae k-r-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"anaconda\": [\"ae n-ah k-aa1-n d-ah\", \"nn\"],\n  \"anaerobic\": [\"ae n-er ow1 b-ih-k\", \"jj\"],\n  \"anaesthesia\": [\"ae n-ah-s th-iy1 zh-ah\", \"nn\"],\n  \"anagram\": [\"ae1 n-ah g-r-ae-m\", \"nn\"],\n  \"analgesic\": [\"ae n-ah-l jh-iy1 s-ih-k\", \"jj nn\"],\n  \"analog\": [\"ae1 n-ah l-ao-g\", \"nn jj\"],\n  \"analogous\": [\"ah n-ae1 l-ah g-ah-s\", \"jj\"],\n  \"analogue\": [\"ae1 n-ah l-ao-g\", \"nn\"],\n  \"analogy\": [\"ah n-ae1 l-ah jh-iy\", \"nn\"],\n  \"analyse\": [\"ah n-ae1 l-ah-z\", \"vb\"],\n  \"analysis\": [\"ah n-ae1 l-ah s-ah-s\", \"nn\"],\n  \"analyst\": [\"ae1 n-ah l-ah-s-t\", \"nn\"],\n  \"analytic\": [\"ae n-ah l-ih1 t-ih-k\", \"jj nn\"],\n  \"analytical\": [\"ae n-ah l-ih1 t-ih k-ah-l\", \"jj\"],\n  \"analytically\": [\"ae n-ah l-ih1 t-ih-k l-iy\", \"rb\"],\n  \"analyticity\": [\"ae n-ah l-ah t-ih1 s-ah t-iy\", \"nn\"],\n  \"analyzable\": [\"ae1 n-ah l-ay z-ah b-ah-l\", \"jj\"],\n  \"analyze\": [\"ae1 n-ah l-ay-z\", \"vb vbp\"],\n  \"analyzer\": [\"ae1 n-ah l-ay z-er\", \"nn\"],\n  \"anarchic\": [\"ae n-aa1-r k-ih-k\", \"jj\"],\n  \"anarchical\": [\"ae n-aa1-r k-ah k-ah-l\", \"jj\"],\n  \"anarchist\": [\"ae1 n-er k-ah-s-t\", \"nn\"],\n  \"anarchy\": [\"ae1 n-er k-iy\", \"nn\"],\n  \"anathema\": [\"ah n-ae1 th-ah m-ah\", \"nn\"],\n  \"anatomical\": [\"ae n-ah t-aa1 m-ah k-ah-l\", \"jj nn\"],\n  \"anatomically\": [\"ae n-ah t-aa1 m-ah-k l-iy\", \"rb\"],\n  \"anatomy\": [\"ah n-ae1 t-ah m-iy\", \"nn\"],\n  \"ancestor\": [\"ae1-n s-eh s-t-er\", \"nn\"],\n  \"ancestral\": [\"ae-n s-eh1-s t-r-ah-l\", \"jj\"],\n  \"ancestry\": [\"ae1-n s-eh-s t-r-iy\", \"nn\"],\n  \"anchor\": [\"ae1-ng k-er\", \"nn vbp vb\"],\n  \"anchorage\": [\"ae1-ng k-er ah-jh\", \"nn\"],\n  \"anchored\": [\"ae1-ng k-er-d\", \"vbn vbd jj\"],\n  \"anchovy\": [\"ae-n ch-ow1 v-iy\", \"nn\"],\n  \"ancient\": [\"ey1-n ch-ah-n-t\", \"jj nn\"],\n  \"ancillary\": [\"ae1-n s-ah l-eh r-iy\", \"jj\"],\n  \"and\": [\"ae1-n-d\", \"cc\"],\n  \"anecdotal\": [\"ae n-ah-k d-ow1 t-ah-l\", \"jj\"],\n  \"anecdote\": [\"ae1 n-ah-k d-ow-t\", \"nn\"],\n  \"anemia\": [\"ah n-iy1 m-iy ah\", \"nn\"],\n  \"anemic\": [\"ah n-iy1 m-ih-k\", \"jj\"],\n  \"anesthetic\": [\"ae n-ah-s th-eh1 t-ih-k\", \"nn\"],\n  \"anew\": [\"ah n-uw1\", \"rb\"],\n  \"angel\": [\"ey1-n jh-ah-l\", \"nn\"],\n  \"angelfish\": [\"ey1-n jh-ah-l f-ih-sh\", \"nn\"],\n  \"angelic\": [\"ae-n jh-eh1 l-ih-k\", \"jj\"],\n  \"angelica\": [\"ae-n jh-eh1 l-ih k-ah\", \"nn\"],\n  \"anger\": [\"ae1-ng g-er\", \"nn vb vbp\"],\n  \"angered\": [\"ae1-ng g-er-d\", \"vbn jj vbd\"],\n  \"angina\": [\"ae-n jh-ay1 n-ah\", \"nn\"],\n  \"angle\": [\"ae1-ng g-ah-l\", \"nn vb\"],\n  \"angler\": [\"ae1-ng g-l-er\", \"nn\"],\n  \"angora\": [\"ae-ng g-ao1 r-ah\", \"nn\"],\n  \"angrily\": [\"ae1-ng g-r-ah l-iy\", \"rb\"],\n  \"angry\": [\"ae1-ng g-r-iy\", \"jj\"],\n  \"angst\": [\"aa1-ng-k-s-t\", \"nn\"],\n  \"anguish\": [\"ae1-ng g-w-ih-sh\", \"nn\"],\n  \"anguished\": [\"ae1-ng g-w-ih-sh-t\", \"jj\"],\n  \"angular\": [\"ae1-ng g-y-ah l-er\", \"jj\"],\n  \"animal\": [\"ae1 n-ah m-ah-l\", \"nn jj\"],\n  \"animate\": [\"ae1 n-ah m-ah-t\", \"jj vb\"],\n  \"animated\": [\"ae1 n-ah m-ey t-ah-d\", \"jj vbd vbn\"],\n  \"animation\": [\"ae n-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"animism\": [\"ae1 n-ah m-ih z-ah-m\", \"nn\"],\n  \"animosity\": [\"ae n-ah m-aa1 s-ah t-iy\", \"nn\"],\n  \"anise\": [\"ae1 n-ah-s\", \"nn\"],\n  \"ankle\": [\"ae1-ng k-ah-l\", \"nn\"],\n  \"annals\": [\"ae1 n-ah-l-z\", \"nn\"],\n  \"annex\": [\"ae1 n-eh-k-s\", \"nn vb\"],\n  \"annexation\": [\"ae n-eh-k s-ey1 sh-ah-n\", \"nn\"],\n  \"annihilate\": [\"ah n-ay1 ah l-ey-t\", \"vb\"],\n  \"annihilation\": [\"ah n-ay ah l-ey1 sh-ah-n\", \"nn\"],\n  \"anniversary\": [\"ae n-ah v-er1 s-er iy\", \"nn\"],\n  \"annotate\": [\"ae1-n-ah-t-ey-t\", \"vb\"],\n  \"announce\": [\"ah n-aw1-n-s\", \"vb vbp\"],\n  \"announced\": [\"ah n-aw1-n-s-t\", \"vbd vbn jj\"],\n  \"announcement\": [\"ah n-aw1-n s-m-ah-n-t\", \"nn\"],\n  \"announcer\": [\"ah n-aw1-n s-er\", \"nn\"],\n  \"announcment\": [\"ah n-aw1-n s-m-ah-n-t\", \"nn\"],\n  \"annoy\": [\"ah n-oy1\", \"vb vbp\"],\n  \"annoyance\": [\"ah n-oy1 ah-n-s\", \"nn\"],\n  \"annoyed\": [\"ah n-oy1-d\", \"vbn vbd jj\"],\n  \"annoying\": [\"ah n-oy1 ih-ng\", \"jj nn\"],\n  \"annual\": [\"ae1 n-y-uw ah-l\", \"jj nn vb\"],\n  \"annualize\": [\"ae1-n-y-uw-w-ah-l-ay-z\", \"vb\"],\n  \"annualized\": [\"ae1 n-y-uw w-ah l-ay-z-d\", \"vbn vbd jj\"],\n  \"annually\": [\"ae1 n-y-uw ah l-iy\", \"rb\"],\n  \"annuity\": [\"ah n-uw1 ah t-iy\", \"nn\"],\n  \"annul\": [\"ae1-n-ah-l\", \"vb\"],\n  \"annum\": [\"ae1 n-ah-m\", \"nn\"],\n  \"anode\": [\"ae1 n-ow-d\", \"nn\"],\n  \"anomalous\": [\"ah n-aa1 m-ah l-ah-s\", \"jj\"],\n  \"anomaly\": [\"ah n-aa1 m-ah l-iy\", \"nn\"],\n  \"anonymity\": [\"ae n-ah n-ih1 m-ih t-iy\", \"nn\"],\n  \"anonymous\": [\"ah n-aa1 n-ah m-ah-s\", \"jj\"],\n  \"anonymously\": [\"ah n-aa1 n-ah m-ah-s l-iy\", \"rb\"],\n  \"anorexia\": [\"ae n-er eh1-k s-iy ah\", \"nn\"],\n  \"another\": [\"ah n-ah1 dh-er\", \"dt jj nn\"],\n  \"answer\": [\"ae1-n s-er\", \"nn vb vbp\"],\n  \"answerable\": [\"ae1-n s-er ah b-ah-l\", \"jj\"],\n  \"ant\": [\"ae1-n-t\", \"nn\"],\n  \"antacid\": [\"ae-n t-ae1 s-ah-d\", \"nn\"],\n  \"antagonism\": [\"ae-n t-ae1 g-ah n-ih z-ah-m\", \"nn\"],\n  \"antagonist\": [\"ae-n t-ae1 g-ah n-ah-s-t\", \"nn\"],\n  \"antagonistic\": [\"ae-n t-ae g-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"antagonize\": [\"ae-n t-ae1 g-ah n-ay-z\", \"vb vbp\"],\n  \"ante\": [\"ae1-n t-iy\", \"nn vb\"],\n  \"anteater\": [\"ae1-n-t iy t-er\", \"nn\"],\n  \"antebellum\": [\"ae-n t-ih b-eh1 l-ah-m\", \"jj\"],\n  \"antecedent\": [\"ae-n t-ih s-iy1 d-ah-n-t\", \"nn\"],\n  \"antelope\": [\"ae1-n t-ah l-ow-p\", \"nn\"],\n  \"antenna\": [\"ae-n t-eh1 n-ah\", \"nn\"],\n  \"anterior\": [\"ae-n t-ih1 r-iy er\", \"jj\"],\n  \"anthem\": [\"ae1-n th-ah-m\", \"nn\"],\n  \"anthology\": [\"ae-n th-aa1 l-ah jh-iy\", \"nn\"],\n  \"anthrax\": [\"ae1-n th-r-ae-k-s\", \"nn\"],\n  \"anthropologist\": [\"ae-n th-r-ah p-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"anthropology\": [\"ae-n th-r-ah p-aa1 l-ah jh-iy\", \"nn\"],\n  \"antibacterial\": [\"ae-n t-iy b-ae-k t-ih1 r-iy ah-l\", \"jj\"],\n  \"antibiotic\": [\"ae-n t-iy b-iy aa1 t-ih-k\", \"nn jj\"],\n  \"antibody\": [\"ae1-n t-ih b-aa d-iy\", \"nn\"],\n  \"antic\": [\"ae1-n t-ih-k\", \"jj\"],\n  \"anticipate\": [\"ae-n t-ih1 s-ah p-ey-t\", \"vb vbp\"],\n  \"anticipated\": [\"ae-n t-ih1 s-ah p-ey t-ah-d\", \"vbn jj vbd\"],\n  \"anticipation\": [\"ae-n t-ih s-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"anticipatory\": [\"ae-n t-ih1 s-ah p-ah t-ao r-iy\", \"jj\"],\n  \"antidepressant\": [\"ae-n t-iy d-ih p-r-eh1 s-ah-n-t\", \"nn\"],\n  \"antidote\": [\"ae1-n t-ih d-ow-t\", \"nn\"],\n  \"antifreeze\": [\"ae1-n t-iy f-r-iy-z\", \"nn\"],\n  \"antigen\": [\"ae1-n t-ah jh-ah-n\", \"nn\"],\n  \"antihistamine\": [\"ae-n t-iy hh-ih1 s-t-ah m-ah-n\", \"nn\"],\n  \"antipathy\": [\"ae-n t-ih1 p-ah th-iy\", \"nn\"],\n  \"antiquated\": [\"ae1-n t-ah k-w-ey t-ah-d\", \"jj\"],\n  \"antique\": [\"ae-n t-iy1-k\", \"jj nn\"],\n  \"antiquity\": [\"ae-n t-ih1 k-w-ah t-iy\", \"nn\"],\n  \"antiseptic\": [\"ae-n t-ah s-eh1-p t-ih-k\", \"jj nn\"],\n  \"antisocial\": [\"ae-n t-ih s-ow1 sh-ah-l\", \"jj\"],\n  \"antithesis\": [\"ae-n t-ih1 th-ah s-ah-s\", \"nn\"],\n  \"antithetical\": [\"ae-n t-ah th-eh1 t-ih k-ah-l\", \"jj\"],\n  \"antiviral\": [\"ae-n t-iy v-ay1 r-ah-l\", \"jj nn\"],\n  \"antsy\": [\"ae1-n-t s-iy\", \"jj rb\"],\n  \"anvil\": [\"ae1-n v-ah-l\", \"nn\"],\n  \"anxiety\": [\"ae-ng z-ay1 ah t-iy\", \"nn\"],\n  \"anxious\": [\"ae1-ng-k sh-ah-s\", \"jj\"],\n  \"anxiously\": [\"ae1-ng-k sh-ah-s l-iy\", \"rb\"],\n  \"any\": [\"eh1 n-iy\", \"dt rb\"],\n  \"anybody\": [\"eh1 n-iy b-ah d-iy\", \"nn\"],\n  \"anyhow\": [\"eh1 n-iy hh-aw\", \"rb\"],\n  \"anymore\": [\"eh n-iy m-ao1-r\", \"rb\"],\n  \"anyone\": [\"eh1 n-iy w-ah-n\", \"nn\"],\n  \"anyplace\": [\"eh1 n-iy p-l-ey-s\", \"rb\"],\n  \"anything\": [\"eh1 n-iy th-ih-ng\", \"nn\"],\n  \"anytime\": [\"eh1 n-iy t-ay-m\", \"rb\"],\n  \"anyway\": [\"eh1 n-iy w-ey\", \"rb\"],\n  \"anyways\": [\"eh1 n-iy w-ey-z\", \"uh\"],\n  \"anywhere\": [\"eh1 n-iy w-eh-r\", \"rb\"],\n  \"aorta\": [\"ey ao1-r t-ah\", \"nn\"],\n  \"apace\": [\"ah p-ey1-s\", \"rb\"],\n  \"apart\": [\"ah p-aa1-r-t\", \"rb rp jj\"],\n  \"apartheid\": [\"ah p-aa1-r-t ay-t\", \"nn\"],\n  \"apartment\": [\"ah p-aa1-r-t m-ah-n-t\", \"nn\"],\n  \"apathetic\": [\"ae p-ah th-eh1 t-ih-k\", \"jj\"],\n  \"apathy\": [\"ae1 p-ah th-iy\", \"nn\"],\n  \"ape\": [\"ey1-p\", \"nn vb\"],\n  \"aperture\": [\"ae1 p-er ch-er\", \"nn\"],\n  \"apex\": [\"ey1 p-eh-k-s\", \"nn\"],\n  \"aphorism\": [\"ae1 f-er ih z-ah-m\", \"nn\"],\n  \"apiece\": [\"ah p-iy1-s\", \"rb jj\"],\n  \"aplenty\": [\"ah p-l-eh1-n t-iy\", \"jj rb\"],\n  \"aplomb\": [\"ah p-l-aa1-m\", \"nn\"],\n  \"apocalypse\": [\"ah p-aa1 k-ah l-ih-p-s\", \"nn\"],\n  \"apocalyptic\": [\"ah p-aa k-ah l-ih1-p t-ih-k\", \"jj\"],\n  \"apocryphal\": [\"ah p-aa1 k-r-ah f-ah-l\", \"jj\"],\n  \"apogee\": [\"ae1 p-ah jh-iy\", \"nn\"],\n  \"apologetic\": [\"ah p-aa l-ah jh-eh1 t-ih-k\", \"jj\"],\n  \"apologetically\": [\"ah p-aa l-ah jh-eh1 t-ih-k l-iy\", \"rb\"],\n  \"apologist\": [\"ah p-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"apologize\": [\"ah p-aa1 l-ah jh-ay-z\", \"vb\"],\n  \"apology\": [\"ah p-aa1 l-ah jh-iy\", \"nn\"],\n  \"apoplectic\": [\"ae p-ah p-l-eh1-k t-ih-k\", \"jj\"],\n  \"apostle\": [\"ah p-aa1 s-ah-l\", \"nn\"],\n  \"apothecary\": [\"ah p-aa1 th-ah k-eh r-iy\", \"nn\"],\n  \"apotheosis\": [\"ah p-aa th-iy ow1 s-ah-s\", \"nn\"],\n  \"appall\": [\"ah-p-ao1-l\", \"vb\"],\n  \"appalled\": [\"ah p-ao1-l-d\", \"vbn jj\"],\n  \"appalling\": [\"ah p-ao1 l-ih-ng\", \"jj\"],\n  \"appallingly\": [\"ah p-ao1 l-ih-ng l-iy\", \"rb\"],\n  \"apparatus\": [\"ae p-er ae1 t-ah-s\", \"nn\"],\n  \"apparel\": [\"ah p-ae1 r-ah-l\", \"nn vb\"],\n  \"apparent\": [\"ah p-eh1 r-ah-n-t\", \"jj nn\"],\n  \"apparently\": [\"ah p-eh1 r-ah-n-t l-iy\", \"rb\"],\n  \"apparition\": [\"ae p-er ih1 sh-ah-n\", \"nn\"],\n  \"appeal\": [\"ah p-iy1-l\", \"nn vbp vb\"],\n  \"appealing\": [\"ah p-iy1 l-ih-ng\", \"jj vbg\"],\n  \"appear\": [\"ah p-ih1-r\", \"vb vbp\"],\n  \"appearance\": [\"ah p-ih1 r-ah-n-s\", \"nn\"],\n  \"appease\": [\"ah p-iy1-z\", \"vb\"],\n  \"appeasement\": [\"ah p-iy1-z m-ah-n-t\", \"nn\"],\n  \"appeasing\": [\"ah p-iy1 z-ih-ng\", \"nn\"],\n  \"appellate\": [\"ah p-eh1 l-ih-t\", \"jj nn\"],\n  \"append\": [\"ah p-eh1-n-d\", \"vb\"],\n  \"appendage\": [\"ah p-eh1-n d-ih jh-ih\", \"nn\"],\n  \"appetite\": [\"ae1 p-ah t-ay-t\", \"nn\"],\n  \"appetizer\": [\"ae1 p-ah t-ay z-er\", \"nn\"],\n  \"appetizing\": [\"ae1 p-ih t-ay z-ih-ng\", \"jj\"],\n  \"applaud\": [\"ah p-l-ao1-d\", \"vbp vb\"],\n  \"applause\": [\"ah p-l-ao1-z\", \"nn\"],\n  \"apple\": [\"ae1 p-ah-l\", \"nn\"],\n  \"appliance\": [\"ah p-l-ay1 ah-n-s\", \"nn\"],\n  \"applicability\": [\"ae p-l-ah k-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"applicable\": [\"ae1 p-l-ah k-ah b-ah-l\", \"jj\"],\n  \"applicant\": [\"ae1 p-l-ih k-ah-n-t\", \"nn\"],\n  \"application\": [\"ae p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"applicator\": [\"ae1 p-l-ah k-ey t-er\", \"nn\"],\n  \"applied\": [\"ah p-l-ay1-d\", \"vbn vbd jj\"],\n  \"apply\": [\"ah p-l-ay1\", \"vb vbp\"],\n  \"appoint\": [\"ah p-oy1-n-t\", \"vb\"],\n  \"appointed\": [\"ah p-oy1-n t-ah-d\", \"vbn jj vbd\"],\n  \"appointee\": [\"ah p-oy-n t-iy1\", \"nn\"],\n  \"appointment\": [\"ah p-oy1-n-t m-ah-n-t\", \"nn\"],\n  \"apportion\": [\"ah p-ao1-r sh-ah-n\", \"vb\"],\n  \"appraisal\": [\"ah p-r-ey1 z-ah-l\", \"nn\"],\n  \"appraise\": [\"ah p-r-ey1-z\", \"vb\"],\n  \"appraiser\": [\"ah p-r-ey1 z-er\", \"nn\"],\n  \"appreciable\": [\"ah p-r-iy1 sh-ah b-ah-l\", \"jj\"],\n  \"appreciably\": [\"ah p-r-iy1 sh-ah b-l-iy\", \"rb\"],\n  \"appreciate\": [\"ah p-r-iy1 sh-iy ey-t\", \"vb vbp\"],\n  \"appreciated\": [\"ah p-r-iy1 sh-iy ey t-ih-d\", \"vbn vbd jj\"],\n  \"appreciation\": [\"ah p-r-iy sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"appreciative\": [\"ah p-r-iy1 sh-iy ey t-ih-v\", \"jj\"],\n  \"appreciatively\": [\"ah p-r-iy1 sh-iy ey t-ih-v l-iy\", \"rb\"],\n  \"apprehend\": [\"ae p-r-ih hh-eh1-n-d\", \"vb\"],\n  \"apprehension\": [\"ae p-r-ih hh-eh1-n sh-ah-n\", \"nn\"],\n  \"apprehensive\": [\"ae p-r-ih hh-eh1-n s-ih-v\", \"jj\"],\n  \"apprentice\": [\"ah p-r-eh1-n t-ah-s\", \"nn vb\"],\n  \"apprenticeship\": [\"ah p-r-eh1-n t-ah-s sh-ih-p\", \"nn\"],\n  \"apprise\": [\"ah-p-r-ay1-z\", \"vb\"],\n  \"approach\": [\"ah p-r-ow1-ch\", \"nn vb vbp\"],\n  \"approachable\": [\"ah p-r-ow1 ch-ah b-ah-l\", \"jj\"],\n  \"appropriate\": [\"ah p-r-ow1 p-r-iy ah-t\", \"jj vbp vb\"],\n  \"appropriately\": [\"ah p-r-ow1 p-r-iy ih-t l-iy\", \"rb\"],\n  \"appropriateness\": [\"ah p-r-ow1 p-r-iy ah-t n-ah-s\", \"nn\"],\n  \"appropriation\": [\"ah p-r-ow p-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"appropriator\": [\"ah p-r-ow1 p-r-iy ey t-er\", \"nn\"],\n  \"approval\": [\"ah p-r-uw1 v-ah-l\", \"nn\"],\n  \"approve\": [\"ah p-r-uw1-v\", \"vb vbp\"],\n  \"approved\": [\"ah p-r-uw1-v-d\", \"vbd vbn jj\"],\n  \"approvingly\": [\"ah p-r-uw1 v-ih-ng l-iy\", \"rb\"],\n  \"approximate\": [\"ah p-r-aa1-k s-ah m-ah-t\", \"jj vbp nn vb\"],\n  \"approximated\": [\"ah p-r-aa1-k s-ah m-ey t-ah-d\", \"vbn jj vbd\"],\n  \"approximately\": [\"ah p-r-aa1-k s-ah m-ah-t l-iy\", \"rb jj\"],\n  \"approximation\": [\"ah p-r-aa-k s-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"apricot\": [\"ey1 p-r-ah k-aa-t\", \"nn\"],\n  \"april\": [\"ey1 p-r-ah-l\", \"nn\"],\n  \"apron\": [\"ey1 p-r-ah-n\", \"nn\"],\n  \"apt\": [\"ae1-p-t\", \"jj\"],\n  \"aptitude\": [\"ae1-p t-ah t-uw-d\", \"nn\"],\n  \"aquamarine\": [\"aa k-w-ah m-er iy1-n\", \"nn\"],\n  \"aquarium\": [\"ah k-w-eh1 r-iy ah-m\", \"nn\"],\n  \"aquatic\": [\"ah k-w-aa1 t-ih-k\", \"jj\"],\n  \"aqueduct\": [\"ae1 k-w-ah d-ah-k-t\", \"nn\"],\n  \"aqueous\": [\"ey1 k-w-iy ah-s\", \"jj\"],\n  \"aquifer\": [\"ae1 k-w-ah f-er\", \"nn\"],\n  \"arabic\": [\"ae1 r-ah b-ih-k\", \"jj\"],\n  \"arable\": [\"eh1 r-ah b-ah-l\", \"jj\"],\n  \"arbiter\": [\"aa1-r b-ih t-er\", \"nn\"],\n  \"arbitrage\": [\"aa1-r b-ih t-r-aa-zh\", \"nn\"],\n  \"arbitrarily\": [\"aa1-r b-ih t-r-eh r-ah l-iy\", \"rb\"],\n  \"arbitrary\": [\"aa1-r b-ah t-r-eh r-iy\", \"jj\"],\n  \"arbitrate\": [\"aa1-r b-ah t-r-ey-t\", \"vb\"],\n  \"arbitration\": [\"aa-r b-ih t-r-ey1 sh-ah-n\", \"nn\"],\n  \"arbitrator\": [\"aa1-r b-ih t-r-ey t-er\", \"nn\"],\n  \"arboreal\": [\"aa-r b-ao1 r-iy ah-l\", \"jj\"],\n  \"arc\": [\"aa1-r-k\", \"nn vb\"],\n  \"arcade\": [\"aa-r k-ey1-d\", \"nn\"],\n  \"arcane\": [\"aa-r k-ey1-n\", \"jj\"],\n  \"arch\": [\"aa1-r-ch\", \"nn vb vbp\"],\n  \"archaeological\": [\"aa-r k-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"archaeologist\": [\"aa-r k-iy aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"archaeology\": [\"aa-r k-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"archaic\": [\"aa-r k-ey1 ih-k\", \"jj\"],\n  \"archbishop\": [\"aa1-r-ch b-ih1 sh-ah-p\", \"nn\"],\n  \"archdiocese\": [\"aa1-r-ch d-ay1 ah s-ah-s\", \"nn\"],\n  \"arched\": [\"aa1-r-ch-t\", \"jj vbd vbn\"],\n  \"archenemy\": [\"aa1-r ch-eh1 n-ah m-iy\", \"nn\"],\n  \"archeological\": [\"aa-r k-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"archery\": [\"aa1-r ch-er iy\", \"nn\"],\n  \"archetype\": [\"aa1-r k-ih t-ay-p\", \"nn\"],\n  \"archipelago\": [\"aa-r k-ah p-eh1 l-ah g-ow\", \"nn\"],\n  \"architect\": [\"aa1-r k-ah t-eh-k-t\", \"nn\"],\n  \"architectural\": [\"aa-r k-ah t-eh1-k ch-er ah-l\", \"jj\"],\n  \"architecturally\": [\"aa-r k-ih t-eh1-k ch-er ah l-iy\", \"rb\"],\n  \"architecture\": [\"aa1-r k-ah t-eh-k ch-er\", \"nn\"],\n  \"archival\": [\"aa-r k-ay1 v-ah-l\", \"jj\"],\n  \"archive\": [\"aa1-r k-ay-v\", \"nn\"],\n  \"archivist\": [\"aa1-r k-ah v-ih-s-t\", \"nn\"],\n  \"archrival\": [\"aa1-r-ch r-ay v-ah-l\", \"jj nn\"],\n  \"arctic\": [\"aa1-r-k t-ih-k\", \"jj\"],\n  \"ardent\": [\"aa1-r d-ah-n-t\", \"jj\"],\n  \"ardently\": [\"aa1-r d-ah-n-t l-iy\", \"rb\"],\n  \"ardor\": [\"aa1-r d-er\", \"nn\"],\n  \"arduous\": [\"aa1-r jh-uw ah-s\", \"jj\"],\n  \"are\": [\"aa1-r\", \"vbp\"],\n  \"aren't\": [\"aa1-r-ah-n-t\", \"vbp\"],\n  \"area\": [\"eh1 r-iy ah\", \"nn\"],\n  \"arena\": [\"er iy1 n-ah\", \"nn\"],\n  \"argon\": [\"aa1-r g-aa-n\", \"nn\"],\n  \"argot\": [\"aa1-r g-ah-t\", \"nn\"],\n  \"arguably\": [\"aa1-r g-y-uw ah b-l-iy\", \"rb\"],\n  \"argue\": [\"aa1-r g-y-uw\", \"vbp vb\"],\n  \"argument\": [\"aa1-r g-y-ah m-ah-n-t\", \"nn\"],\n  \"aria\": [\"aa1 r-iy ah\", \"nn\"],\n  \"arid\": [\"ae1 r-ah-d\", \"jj\"],\n  \"arise\": [\"er ay1-z\", \"vb vbp\"],\n  \"arisen\": [\"er ih1 z-ah-n\", \"vbn\"],\n  \"aristocracy\": [\"eh r-ah s-t-aa1 k-r-ah s-iy\", \"nn\"],\n  \"aristocrat\": [\"er ih1 s-t-ah k-r-ae-t\", \"nn\"],\n  \"aristocratic\": [\"er ih s-t-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"arithmetic\": [\"eh r-ih-th m-eh1 t-ih-k\", \"nn\"],\n  \"arm\": [\"aa1-r-m\", \"nn vb\"],\n  \"armadillo\": [\"aa-r m-ah d-ih1 l-ow\", \"nn\"],\n  \"armament\": [\"aa1-r m-ah m-ah-n-t\", \"nn\"],\n  \"armchair\": [\"aa1-r-m ch-eh-r\", \"nn jj\"],\n  \"armed\": [\"aa1-r-m-d\", \"vbn jj\"],\n  \"arming\": [\"aa1-r m-ih-ng\", \"nn\"],\n  \"armistice\": [\"aa1-r m-ah s-t-ah-s\", \"nn\"],\n  \"armor\": [\"aa1-r m-er\", \"nn vb\"],\n  \"armored\": [\"aa1-r m-er-d\", \"jj vbn\"],\n  \"armory\": [\"aa1-r m-er iy\", \"nn\"],\n  \"armpit\": [\"aa1-r-m p-ih-t\", \"nn\"],\n  \"army\": [\"aa1-r m-iy\", \"nn\"],\n  \"aroma\": [\"er ow1 m-ah\", \"nn\"],\n  \"aromatic\": [\"eh r-ah m-ae1 t-ih-k\", \"jj\"],\n  \"arose\": [\"er ow1-z\", \"vbd\"],\n  \"around\": [\"er aw1-n-d\", \"in rb rp\"],\n  \"arousal\": [\"er aw1 z-ah-l\", \"jj\"],\n  \"arouse\": [\"er aw1-z\", \"vb vbp\"],\n  \"arraign\": [\"er-ey1-n\", \"vb\"],\n  \"arrange\": [\"er ey1-n-jh\", \"vb vbp\"],\n  \"arrangement\": [\"er ey1-n-jh m-ah-n-t\", \"nn\"],\n  \"array\": [\"er ey1\", \"nn vb\"],\n  \"arrearage\": [\"er iy1 r-ih-jh\", \"nn\"],\n  \"arrears\": [\"er ih1-r-z\", \"nn\"],\n  \"arrest\": [\"er eh1-s-t\", \"nn vbp vb\"],\n  \"arresting\": [\"er eh1 s-t-ih-ng\", \"vbg jj\"],\n  \"arrival\": [\"er ay1 v-ah-l\", \"nn\"],\n  \"arrive\": [\"er ay1-v\", \"vb vbp\"],\n  \"arrogance\": [\"eh1 r-ah g-ah-n-s\", \"nn\"],\n  \"arrogant\": [\"eh1 r-ah g-ah-n-t\", \"jj\"],\n  \"arrogantly\": [\"eh1 r-ah g-ah-n-t l-iy\", \"rb\"],\n  \"arrogate\": [\"ae1 r-ow g-ey-t\", \"vb\"],\n  \"arrow\": [\"ae1 r-ow\", \"nn\"],\n  \"arrowhead\": [\"ae1 r-ow hh-eh-d\", \"nn\"],\n  \"arsenal\": [\"aa1-r s-ah n-ah-l\", \"nn\"],\n  \"arsenic\": [\"aa1-r s-ah n-ih-k\", \"nn\"],\n  \"arson\": [\"aa1-r s-ah-n\", \"nn\"],\n  \"arsonist\": [\"aa1-r s-ah n-ah-s-t\", \"nn\"],\n  \"art\": [\"aa1-r-t\", \"nn\"],\n  \"arterial\": [\"aa-r t-ih1 r-iy ah-l\", \"jj\"],\n  \"artery\": [\"aa1-r t-er iy\", \"nn\"],\n  \"artful\": [\"aa1-r-t f-ah-l\", \"jj\"],\n  \"artfully\": [\"aa1-r-t f-ah l-iy\", \"rb\"],\n  \"arthritic\": [\"aa-r th-r-ih1 t-ih-k\", \"jj\"],\n  \"arthritis\": [\"aa-r-th r-ay1 t-ah-s\", \"nn\"],\n  \"artichoke\": [\"aa1-r t-ah ch-ow-k\", \"nn\"],\n  \"article\": [\"aa1-r t-ah k-ah-l\", \"nn\"],\n  \"articulate\": [\"aa-r t-ih1 k-y-ah l-ey-t\", \"jj vb\"],\n  \"articulation\": [\"aa-r t-ih k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"artifact\": [\"aa1-r t-ah f-ae-k-t\", \"nn\"],\n  \"artifice\": [\"aa1-r t-ah f-ih-s\", \"nn\"],\n  \"artificial\": [\"aa-r t-ah f-ih1 sh-ah-l\", \"jj nn\"],\n  \"artificially\": [\"aa-r t-ah f-ih1 sh-ah l-iy\", \"rb\"],\n  \"artillery\": [\"aa-r t-ih1 l-er iy\", \"nn\"],\n  \"artisan\": [\"aa1-r t-ah z-ah-n\", \"nn\"],\n  \"artist\": [\"aa1-r t-ah-s-t\", \"nn\"],\n  \"artistic\": [\"aa-r t-ih1 s-t-ih-k\", \"jj\"],\n  \"artistically\": [\"aa-r t-ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"artistry\": [\"aa1-r t-ih-s t-r-iy\", \"nn\"],\n  \"artsy\": [\"aa1-r-t s-iy1\", \"jj\"],\n  \"artwork\": [\"aa1-r-t w-er-k\", \"nn\"],\n  \"arty\": [\"aa1-r t-iy\", \"jj\"],\n  \"as\": [\"ae1-z\", \"in rb\"],\n  \"asbestos\": [\"ae-s b-eh1 s-t-ah-s\", \"nn\"],\n  \"ascend\": [\"ah s-eh1-n-d\", \"vb\"],\n  \"ascendancy\": [\"ah s-eh1-n d-ah-n s-iy\", \"nn\"],\n  \"ascendency\": [\"ah s-eh1-n d-ah-n s-iy\", \"nn\"],\n  \"ascension\": [\"ah s-eh1-n sh-ah-n\", \"nn\"],\n  \"ascent\": [\"ah s-eh1-n-t\", \"nn\"],\n  \"ascertain\": [\"ae s-er t-ey1-n\", \"vb\"],\n  \"ascetic\": [\"ah s-eh1 t-ih-k\", \"nn\"],\n  \"ascribe\": [\"ah s-k-r-ay1-b\", \"vb\"],\n  \"ash\": [\"ae1-sh\", \"nn\"],\n  \"ashamed\": [\"ah sh-ey1-m-d\", \"jj\"],\n  \"ashen\": [\"ae1 sh-ah-n\", \"jj\"],\n  \"ashore\": [\"ah sh-ao1-r\", \"rb jj\"],\n  \"ashtray\": [\"ae1-sh t-r-ey\", \"nn\"],\n  \"aside\": [\"ah s-ay1-d\", \"rb rp\"],\n  \"asinine\": [\"ae1 s-ah n-ay-n\", \"jj\"],\n  \"ask\": [\"ae1-s-k\", \"vb vbp\"],\n  \"askance\": [\"ah s-k-ae1-n-s\", \"rb\"],\n  \"askew\": [\"ah s-k-y-uw1\", \"rb\"],\n  \"asleep\": [\"ah s-l-iy1-p\", \"rb jj\"],\n  \"asparagus\": [\"ah s-p-eh1 r-ah g-ah-s\", \"nn\"],\n  \"aspect\": [\"ae1 s-p-eh-k-t\", \"nn\"],\n  \"aspen\": [\"ae1 s-p-ah-n\", \"nn jj\"],\n  \"aspersion\": [\"ah s-p-er1 zh-ah-n\", \"nn\"],\n  \"asphalt\": [\"ae1-s f-ao-l-t\", \"nn jj\"],\n  \"aspirant\": [\"ae1 s-p-er ah-n-t\", \"nn\"],\n  \"aspiration\": [\"ae s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"aspire\": [\"ah s-p-ay1-r\", \"vb vbp\"],\n  \"aspirin\": [\"ae1 s-p-r-ih-n\", \"nn\"],\n  \"aspiring\": [\"ah s-p-ay1 r-ih-ng\", \"jj vbg\"],\n  \"ass\": [\"ae1-s\", \"nn\"],\n  \"assail\": [\"ah s-ey1-l\", \"vb\"],\n  \"assailant\": [\"ah s-ey1 l-ah-n-t\", \"nn\"],\n  \"assassin\": [\"ah s-ae1 s-ah-n\", \"nn\"],\n  \"assassinate\": [\"ah s-ae1 s-ah n-ey-t\", \"vb\"],\n  \"assassination\": [\"ah s-ae s-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"assault\": [\"ah s-ao1-l-t\", \"nn vb vbp\"],\n  \"assay\": [\"ae1 s-iy\", \"nn\"],\n  \"assemblage\": [\"ah s-eh1-m b-l-ah-jh\", \"nn\"],\n  \"assemble\": [\"ah s-eh1-m b-ah-l\", \"vb vbp\"],\n  \"assembled\": [\"ah s-eh1-m b-ah-l-d\", \"vbn vbd jj\"],\n  \"assembly\": [\"ah s-eh1-m b-l-iy\", \"nn\"],\n  \"assent\": [\"ah s-eh1-n-t\", \"vb\"],\n  \"assert\": [\"ah s-er1-t\", \"vb vbp\"],\n  \"assertedly\": [\"ah s-er1 t-ih-d l-iy\", \"rb\"],\n  \"assertion\": [\"ah s-er1 sh-ah-n\", \"nn\"],\n  \"assertive\": [\"ah s-er1 t-ih-v\", \"jj\"],\n  \"assertiveness\": [\"ah s-er1 t-ih-v n-ah-s\", \"nn\"],\n  \"assess\": [\"ah s-eh1-s\", \"vb vbp\"],\n  \"assessment\": [\"ah s-eh1-s m-ah-n-t\", \"nn\"],\n  \"assessor\": [\"ah s-eh1 s-er\", \"nn\"],\n  \"asset\": [\"ae1 s-eh-t\", \"nn\"],\n  \"assiduously\": [\"ah s-ih1 d-w-ah-s l-iy\", \"rb\"],\n  \"assign\": [\"ah s-ay1-n\", \"vb vbp\"],\n  \"assigned\": [\"ah s-ay1-n-d\", \"vbn vbd jj\"],\n  \"assignment\": [\"ah s-ay1-n m-ah-n-t\", \"nn\"],\n  \"assimilate\": [\"ah s-ih1 m-ah l-ey-t\", \"vb\"],\n  \"assimilated\": [\"ah s-ih1 m-ah l-ey t-ih-d\", \"vbn jj\"],\n  \"assimilation\": [\"ah s-ih m-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"assist\": [\"ah s-ih1-s-t\", \"vb nn vbp\"],\n  \"assistance\": [\"ah s-ih1 s-t-ah-n-s\", \"nn\"],\n  \"assistant\": [\"ah s-ih1 s-t-ah-n-t\", \"nn jj\"],\n  \"associate\": [\"ah s-ow1 s-iy ah-t\", \"jj vbp nn vb\"],\n  \"associated\": [\"ah s-ow1 s-iy ey t-ah-d\", \"vbn vbd jj\"],\n  \"association\": [\"ah s-ow s-iy ey1 sh-ah-n\", \"nn\"],\n  \"assort\": [\"ah-s-ao1-r-t\", \"vb\"],\n  \"assorted\": [\"ah s-ao1-r t-ih-d\", \"jj vbn\"],\n  \"assortment\": [\"ah s-ao1-r-t m-ah-n-t\", \"nn\"],\n  \"assuage\": [\"ah s-w-ey1-jh\", \"vb\"],\n  \"assume\": [\"ah s-uw1-m\", \"vb vbp\"],\n  \"assumed\": [\"ah s-uw1-m-d\", \"vbn vbd jj\"],\n  \"assumption\": [\"ah s-ah1-m-p sh-ah-n\", \"nn\"],\n  \"assurance\": [\"ah sh-uh1 r-ah-n-s\", \"nn\"],\n  \"assure\": [\"ah sh-uh1-r\", \"vb vbp\"],\n  \"assured\": [\"ah sh-uh1-r-d\", \"vbn vbd jj nn\"],\n  \"assuredly\": [\"ah sh-uh1 r-ah-d l-iy\", \"rb\"],\n  \"aster\": [\"ae1 s-t-er\", \"nn\"],\n  \"asteroid\": [\"ae1 s-t-er oy-d\", \"jj nn\"],\n  \"asthma\": [\"ae1-z m-ah\", \"nn\"],\n  \"astonish\": [\"ah-s-t-aa1-n-ih-sh\", \"vb\"],\n  \"astonishing\": [\"ah s-t-aa1 n-ih sh-ih-ng\", \"jj\"],\n  \"astonishingly\": [\"ah s-t-aa1 n-ih sh-ih-ng l-iy\", \"rb\"],\n  \"astonishment\": [\"ah s-t-aa1 n-ih-sh m-ah-n-t\", \"nn\"],\n  \"astound\": [\"ah s-t-aw1-n-d\", \"vb\"],\n  \"astounded\": [\"ah s-t-aw1-n d-ih-d\", \"vbn jj\"],\n  \"astounding\": [\"ah s-t-aw1-n d-ih-ng\", \"jj\"],\n  \"astoundingly\": [\"ah s-t-aw1-n d-ih-ng l-iy\", \"rb\"],\n  \"astral\": [\"ae1-s t-r-ah-l\", \"jj\"],\n  \"astray\": [\"ah s-t-r-ey1\", \"rb\"],\n  \"astride\": [\"ah s-t-r-ay1-d\", \"in\"],\n  \"astringent\": [\"ah s-t-r-ih1-n jh-ah-n-t\", \"jj\"],\n  \"astrological\": [\"ae-s t-r-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"astrology\": [\"ah s-t-r-aa1 l-ah jh-iy\", \"nn\"],\n  \"astronaut\": [\"ae1 s-t-r-ah n-aa-t\", \"nn\"],\n  \"astronomer\": [\"ah s-t-r-aa1 n-ah m-er\", \"nn\"],\n  \"astronomical\": [\"ae s-t-r-ah n-aa1 m-ih k-ah-l\", \"jj\"],\n  \"astronomically\": [\"ae s-t-r-ah n-aa1 m-ih-k l-iy\", \"rb\"],\n  \"astronomy\": [\"ah s-t-r-aa1 n-ah m-iy\", \"nn\"],\n  \"astrophysicist\": [\"ae s-t-r-ow f-ih1 s-ih s-ih-s-t\", \"nn\"],\n  \"astute\": [\"ah s-t-uw1-t\", \"jj\"],\n  \"astuteness\": [\"ah s-t-uw1-t n-ah-s\", \"nn\"],\n  \"asunder\": [\"ah s-ah1-n d-er\", \"rb\"],\n  \"asylum\": [\"ah s-ay1 l-ah-m\", \"nn\"],\n  \"asymmetry\": [\"ey s-ih1 m-ah t-r-iy\", \"nn\"],\n  \"at\": [\"ae1-t\", \"in rb rp\"],\n  \"atavistic\": [\"ae1 t-ah v-ih s-t-ih-k\", \"jj\"],\n  \"ataxia\": [\"ey1 t-ae1-k s-iy ah\", \"nn\"],\n  \"ate\": [\"ey1-t\", \"vbd\"],\n  \"atheism\": [\"ah th-ay1 s-ah-m\", \"nn\"],\n  \"atheist\": [\"ey1 th-iy ah-s-t\", \"jj nn\"],\n  \"atheistic\": [\"ey th-iy ih1 s-t-ih-k\", \"jj\"],\n  \"athlete\": [\"ae1-th l-iy-t\", \"nn\"],\n  \"athletic\": [\"ae-th l-eh1 t-ih-k\", \"jj\"],\n  \"athletically\": [\"ae-th l-eh1 t-ih-k l-iy\", \"rb\"],\n  \"atmosphere\": [\"ae1-t m-ah s-f-ih-r\", \"nn\"],\n  \"atmospheric\": [\"ae-t m-ah-s f-eh1 r-ih-k\", \"jj\"],\n  \"atom\": [\"ae1 t-ah-m\", \"nn\"],\n  \"atomic\": [\"ah t-aa1 m-ih-k\", \"jj\"],\n  \"atonal\": [\"ey t-ow1 n-ah-l\", \"jj\"],\n  \"atone\": [\"ah t-ow1-n\", \"vb\"],\n  \"atonement\": [\"ah t-ow1-n m-ah-n-t\", \"nn\"],\n  \"atop\": [\"ah t-aa1-p\", \"in\"],\n  \"atrium\": [\"ey1 t-r-iy ah-m\", \"nn\"],\n  \"atrocious\": [\"ah t-r-ow1 sh-ah-s\", \"jj\"],\n  \"atrocity\": [\"ah t-r-aa1 s-ah t-iy\", \"nn\"],\n  \"atrophied\": [\"ae1 t-r-ah f-iy-d\", \"vbn\"],\n  \"atrophy\": [\"ae1 t-r-ah f-iy\", \"nn vb vbp\"],\n  \"attach\": [\"ah t-ae1-ch\", \"vb vbp\"],\n  \"attache\": [\"ae t-ah sh-ey1\", \"nn\"],\n  \"attached\": [\"ah t-ae1-ch-t\", \"vbn jj vbd\"],\n  \"attachment\": [\"ah t-ae1-ch m-ah-n-t\", \"nn\"],\n  \"attack\": [\"ah t-ae1-k\", \"nn vbp vb\"],\n  \"attacker\": [\"ah t-ae1 k-er\", \"nn\"],\n  \"attain\": [\"ah t-ey1-n\", \"vb vbp\"],\n  \"attainable\": [\"ah t-ey1 n-ah b-ah-l\", \"jj\"],\n  \"attainment\": [\"ah t-ey1-n m-ah-n-t\", \"nn\"],\n  \"attempt\": [\"ah t-eh1-m-p-t\", \"nn vbp vb\"],\n  \"attempted\": [\"ah t-eh1-m-p t-ah-d\", \"vbd jj vbn\"],\n  \"attend\": [\"ah t-eh1-n-d\", \"vb vbp\"],\n  \"attendance\": [\"ah t-eh1-n d-ah-n-s\", \"nn\"],\n  \"attendant\": [\"ah t-eh1-n d-ah-n-t\", \"nn jj\"],\n  \"attendee\": [\"ah t-eh1-n d-iy1\", \"nn\"],\n  \"attention\": [\"ah t-eh1-n sh-ah-n\", \"nn\"],\n  \"attentive\": [\"ah t-eh1-n t-ih-v\", \"jj\"],\n  \"attentively\": [\"ah t-eh1-n t-ih-v l-iy\", \"rb\"],\n  \"attest\": [\"ah t-eh1-s-t\", \"vb vbp\"],\n  \"attic\": [\"ae1 t-ih-k\", \"nn\"],\n  \"attire\": [\"ah t-ay1 er\", \"nn vb\"],\n  \"attired\": [\"ah t-ay1-r-d\", \"jj vbn\"],\n  \"attitude\": [\"ae1 t-ah t-uw-d\", \"nn\"],\n  \"attorney\": [\"ah t-er1 n-iy\", \"nn\"],\n  \"attract\": [\"ah t-r-ae1-k-t\", \"vb vbp\"],\n  \"attraction\": [\"ah t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"attractive\": [\"ah t-r-ae1-k t-ih-v\", \"jj\"],\n  \"attractively\": [\"ah t-r-ae1-k t-ih-v l-iy\", \"rb\"],\n  \"attractiveness\": [\"ah t-r-ae1-k t-ih-v n-ah-s\", \"nn\"],\n  \"attributable\": [\"ah t-r-ih1 b-y-ah t-ah b-ah-l\", \"jj\"],\n  \"attribute\": [\"ae1 t-r-ah b-y-uw-t\", \"vbp nn vb\"],\n  \"attrition\": [\"ah t-r-ih1 sh-ah-n\", \"nn\"],\n  \"attune\": [\"ah-t-uw1-n\", \"vb\"],\n  \"attuned\": [\"ah t-uw1-n-d\", \"vbn jj\"],\n  \"atypical\": [\"ey t-ih1 p-ih k-ah-l\", \"jj\"],\n  \"auburn\": [\"aa1 b-er-n\", \"jj\"],\n  \"auction\": [\"aa1-k sh-ah-n\", \"nn vb\"],\n  \"auctioneer\": [\"aa-k sh-ah n-ih1-r\", \"nn\"],\n  \"auctioning\": [\"ao1-k sh-ah-n ih-ng\", \"nn\"],\n  \"audacious\": [\"aa d-ey1 sh-ah-s\", \"jj\"],\n  \"audacity\": [\"aa d-ae1 s-ah t-iy\", \"nn\"],\n  \"audible\": [\"aa1 d-ah b-ah-l\", \"jj\"],\n  \"audibly\": [\"aa1 d-ah b-l-iy\", \"rb\"],\n  \"audience\": [\"aa1 d-iy ah-n-s\", \"nn\"],\n  \"audio\": [\"aa1 d-iy ow\", \"jj nn\"],\n  \"audiophile\": [\"ao d-iy1 ow f-iy-l\", \"nn\"],\n  \"audiotex\": [\"ao1 d-iy ow t-eh-k-s\", \"nn\"],\n  \"audiovisual\": [\"ao d-iy ow v-ih1 zh-uw ah-l\", \"jj\"],\n  \"audit\": [\"ao1 d-ih-t\", \"nn vb\"],\n  \"audited\": [\"ao1 d-ih t-ih-d\", \"vbn jj vbd\"],\n  \"audition\": [\"aa d-ih1 sh-ah-n\", \"nn vb\"],\n  \"auditor\": [\"ao1 d-ih t-er\", \"nn\"],\n  \"auditorium\": [\"ao d-ah t-ao1 r-iy ah-m\", \"nn\"],\n  \"augment\": [\"ao-g m-eh1-n-t\", \"vb vbp\"],\n  \"augmented\": [\"aa-g m-eh1-n t-ah-d\", \"vbn jj vbd\"],\n  \"augur\": [\"ao1 g-er\", \"vb vbp\"],\n  \"august\": [\"aa1 g-ah-s-t\", \"jj\"],\n  \"aunt\": [\"ae1-n-t\", \"nn\"],\n  \"aura\": [\"ao1 r-ah\", \"nn\"],\n  \"aural\": [\"ao1 r-ah-l\", \"jj\"],\n  \"auspice\": [\"ao1 s-p-ih s-ih\", \"nn\"],\n  \"auspicious\": [\"aa s-p-ih1 sh-ah-s\", \"jj\"],\n  \"austere\": [\"ao s-t-ih1-r\", \"jj\"],\n  \"austerely\": [\"ao s-t-ih1-r l-iy\", \"rb\"],\n  \"austerity\": [\"ao s-t-eh1 r-ih t-iy\", \"nn\"],\n  \"authentic\": [\"ah th-eh1-n t-ih-k\", \"jj\"],\n  \"authentically\": [\"ao th-eh1-n t-ih-k l-iy\", \"rb\"],\n  \"authenticate\": [\"ao th-eh1-n t-ah k-ey-t\", \"vb vbp\"],\n  \"authentication\": [\"ao th-eh-n t-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"authenticity\": [\"ao th-ah-n t-ih1 s-ih t-iy\", \"nn\"],\n  \"author\": [\"ao1 th-er\", \"nn vb\"],\n  \"authoritarian\": [\"ah th-ao r-ah t-eh1 r-iy ah-n\", \"jj\"],\n  \"authoritarianism\": [\"ah th-ao r-ah t-eh1 r-iy ah n-ih z-ah-m\", \"nn\"],\n  \"authoritative\": [\"ah th-ao1 r-ah t-ey t-ih-v\", \"jj\"],\n  \"authority\": [\"ah th-ao1 r-ah t-iy\", \"nn\"],\n  \"authorization\": [\"ao th-er ah z-ey1 sh-ah-n\", \"nn\"],\n  \"authorize\": [\"ao1 th-er ay-z\", \"vb\"],\n  \"authorized\": [\"ao1 th-er ay-z-d\", \"vbn jj vbd\"],\n  \"authorship\": [\"ao1 th-er sh-ih-p\", \"nn\"],\n  \"autism\": [\"ao1 t-ih z-ah-m\", \"nn\"],\n  \"autistic\": [\"ao t-ih1 s-t-ih-k\", \"jj\"],\n  \"auto\": [\"ao1 t-ow\", \"nn\"],\n  \"autobiographical\": [\"ao t-ah b-ay ah g-r-ae1 f-ih k-ah-l\", \"jj\"],\n  \"autobiography\": [\"ao t-ah b-ay aa1 g-r-ah f-iy\", \"nn\"],\n  \"autoclave\": [\"ao1 t-ow k-l-ey-v\", \"nn\"],\n  \"autocracy\": [\"ao t-aa1 k-r-ah s-iy\", \"nn\"],\n  \"autocrat\": [\"ao1 t-ah k-r-ae-t\", \"nn\"],\n  \"autocratic\": [\"ao t-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"autograph\": [\"ao1 t-ah g-r-ae-f\", \"nn vb\"],\n  \"autographed\": [\"ao1 t-ah g-r-ae-f-t\", \"vbn jj\"],\n  \"autoimmune\": [\"ao t-oy1 m-y-uw-n\", \"jj\"],\n  \"automaker\": [\"ao1 t-ow m-ey k-er\", \"nn\"],\n  \"automate\": [\"ao1 t-ah m-ey-t\", \"vb\"],\n  \"automated\": [\"ao1 t-ah m-ey t-ih-d\", \"vbn jj vbd\"],\n  \"automatic\": [\"ao t-ah m-ae1 t-ih-k\", \"jj nn\"],\n  \"automatically\": [\"ao t-ah m-ae1 t-ih-k l-iy\", \"rb\"],\n  \"automation\": [\"ao t-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"automaton\": [\"ao t-aa1 m-ah t-aa-n\", \"nn\"],\n  \"automobile\": [\"ao1 t-ah m-ow b-iy-l\", \"nn\"],\n  \"automotive\": [\"ao t-ah m-ow1 t-ih-v\", \"jj\"],\n  \"autonomic\": [\"ao t-ah n-aa1 m-ih-k\", \"jj\"],\n  \"autonomous\": [\"ao t-aa1 n-ah m-ah-s\", \"jj\"],\n  \"autonomously\": [\"ao t-aa1 n-ow m-ah-s l-iy\", \"rb\"],\n  \"autonomy\": [\"ao t-aa1 n-ah m-iy\", \"nn\"],\n  \"autopsy\": [\"ao1 t-aa-p s-iy\", \"nn vb\"],\n  \"autumn\": [\"ao1 t-ah-m\", \"nn\"],\n  \"autumnal\": [\"ao t-ah1-m n-ah-l\", \"jj\"],\n  \"auxiliary\": [\"aa-g z-ih1 l-y-er iy\", \"jj nn\"],\n  \"avail\": [\"ah v-ey1-l\", \"nn vb\"],\n  \"availability\": [\"ah v-ey l-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"available\": [\"ah v-ey1 l-ah b-ah-l\", \"jj\"],\n  \"avalanche\": [\"ae1 v-ah l-ae-n-ch\", \"nn\"],\n  \"avarice\": [\"ae1 v-er ah-s\", \"nn\"],\n  \"avenge\": [\"ah v-eh1-n-jh\", \"vb\"],\n  \"avenger\": [\"ah v-eh1-n jh-er\", \"nn\"],\n  \"avenging\": [\"ah v-eh1-n jh-ih-ng\", \"jj vbg\"],\n  \"avenue\": [\"ae1 v-ah n-uw\", \"nn\"],\n  \"average\": [\"ae1 v-er ih-jh\", \"jj nn vb vbp\"],\n  \"averaging\": [\"ae1 v-r-ih jh-ih-ng\", \"vbg jj nn\"],\n  \"averse\": [\"ah v-er1-s\", \"jj\"],\n  \"aversion\": [\"ah v-er1 zh-ah-n\", \"nn\"],\n  \"avert\": [\"ah v-er1-t\", \"vb\"],\n  \"aviary\": [\"ey1 v-iy eh r-iy\", \"nn\"],\n  \"aviation\": [\"ey v-iy ey1 sh-ah-n\", \"nn\"],\n  \"aviator\": [\"ey1 v-iy ey t-er\", \"nn\"],\n  \"avid\": [\"ae1 v-ah-d\", \"jj\"],\n  \"avidly\": [\"ae1 v-ah-d l-iy\", \"rb\"],\n  \"avionics\": [\"ey v-iy aa1 n-ih-k-s\", \"nn\"],\n  \"avocado\": [\"ae v-ah k-aa1 d-ow\", \"nn\"],\n  \"avocation\": [\"ae v-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"avoid\": [\"ah v-oy1-d\", \"vb jj vbp\"],\n  \"avoidable\": [\"ah v-oy1 d-ah b-ah-l\", \"jj\"],\n  \"avoidance\": [\"ah v-oy1 d-ah-n-s\", \"nn\"],\n  \"avoided\": [\"ah v-oy1 d-ah-d\", \"vbn jj vbd\"],\n  \"avowed\": [\"ah v-aw1-d\", \"jj\"],\n  \"avowedly\": [\"ah v-aw1 ah-d l-iy\", \"rb\"],\n  \"avuncular\": [\"ah v-ah1-ng k-y-ah l-er\", \"jj\"],\n  \"await\": [\"ah w-ey1-t\", \"vb vbp\"],\n  \"awaited\": [\"ah w-ey1 t-ah-d\", \"vbd jj vbn\"],\n  \"awake\": [\"ah w-ey1-k\", \"jj rb vb\"],\n  \"awaken\": [\"ah w-ey1 k-ah-n\", \"vb vbp\"],\n  \"award\": [\"ah w-ao1-r-d\", \"nn vbp vb\"],\n  \"aware\": [\"ah w-eh1-r\", \"jj\"],\n  \"awareness\": [\"ah w-eh1-r n-ah-s\", \"nn\"],\n  \"awash\": [\"ah w-aa1-sh\", \"jj rb\"],\n  \"away\": [\"ah w-ey1\", \"rb rp\"],\n  \"awe\": [\"aa1\", \"nn vb\"],\n  \"awed\": [\"ao1-d\", \"vbn jj\"],\n  \"awesome\": [\"aa1 s-ah-m\", \"jj\"],\n  \"awful\": [\"aa1 f-ah-l\", \"jj rb\"],\n  \"awfully\": [\"aa1-f l-iy\", \"rb\"],\n  \"awfulness\": [\"ao1 f-ah-l n-ah-s\", \"nn\"],\n  \"awhile\": [\"ah w-ay1-l\", \"rb\"],\n  \"awkward\": [\"aa1 k-w-er-d\", \"jj\"],\n  \"awkwardly\": [\"ao1 k-w-er-d l-iy\", \"rb\"],\n  \"awkwardness\": [\"ao1 k-w-er-d n-ah-s\", \"nn\"],\n  \"awoke\": [\"ah w-ow1-k\", \"vbd\"],\n  \"awoken\": [\"ah w-ow1 k-ah-n\", \"vbn\"],\n  \"awry\": [\"er ay1\", \"rb jj\"],\n  \"axe\": [\"ae1-k-s\", \"nn\"],\n  \"axiom\": [\"ae1-k s-iy ah-m\", \"nn\"],\n  \"axiomatic\": [\"ae-k s-iy ah m-ae1 t-ih-k\", \"jj\"],\n  \"axis\": [\"ae1-k s-ah-s\", \"nn\"],\n  \"axle\": [\"ae1-k s-ah-l\", \"nn\"],\n  \"ayatollah\": [\"ay ah t-ow1 l-ah\", \"nn\"],\n  \"azalea\": [\"ah z-ey1 l-y-ah\", \"nn\"],\n  \"azure\": [\"ae1 zh-er\", \"jj\"],\n  \"babble\": [\"b-ae1 b-ah-l\", \"nn vb\"],\n  \"babe\": [\"b-ey1-b\", \"nn\"],\n  \"baboon\": [\"b-ah b-uw1-n\", \"nn\"],\n  \"baby\": [\"b-ey1 b-iy\", \"nn uh\"],\n  \"babyhood\": [\"b-ey1 b-iy hh-uh-d\", \"nn\"],\n  \"bachelor\": [\"b-ae1 ch-ah l-er\", \"nn\"],\n  \"back\": [\"b-ae1-k\", \"rb in jj nn rp vb vbp\"],\n  \"backbone\": [\"b-ae1-k b-ow-n\", \"nn\"],\n  \"backdate\": [\"b-ae1-k-d-ey-t\", \"vb\"],\n  \"backdoor\": [\"b-ae1-k d-ao-r\", \"jj\"],\n  \"backdrop\": [\"b-ae1-k d-r-aa-p\", \"nn\"],\n  \"backed\": [\"b-ae1-k-t\", \"vbn jj vbd\"],\n  \"backer\": [\"b-ae1 k-er\", \"nn\"],\n  \"backfield\": [\"b-ae1-k f-iy-l-d\", \"nn\"],\n  \"backfire\": [\"b-ae1-k f-ay-r\", \"vb vbp\"],\n  \"background\": [\"b-ae1-k g-r-aw-n-d\", \"nn jj\"],\n  \"backhand\": [\"b-ae1-k hh-ae-n-d\", \"nn\"],\n  \"backhanded\": [\"b-ae1-k hh-ae-n d-ah-d\", \"jj\"],\n  \"backhoe\": [\"b-ae1-k hh-ow\", \"nn\"],\n  \"backlash\": [\"b-ae1-k l-ae-sh\", \"nn\"],\n  \"backlog\": [\"b-ae1-k l-aa-g\", \"nn\"],\n  \"backpack\": [\"b-ae1-k p-ae-k\", \"nn\"],\n  \"backpedal\": [\"b-ae1-k-p-eh-d-ah-l\", \"vb\"],\n  \"backroom\": [\"b-ae1-k r-uw-m\", \"nn\"],\n  \"backside\": [\"b-ae1-k s-ay-d\", \"nn\"],\n  \"backslap\": [\"b-ae1-k-s-l-ae-p\", \"vb\"],\n  \"backstage\": [\"b-ae1-k s-t-ey1-jh\", \"rb\"],\n  \"backstitch\": [\"b-ae1-k s-t-ih-ch\", \"nn vb\"],\n  \"backstop\": [\"b-ae1-k s-t-aa-p\", \"nn vb\"],\n  \"backtrack\": [\"b-ae1-k-t-r-ae-k\", \"vb\"],\n  \"backup\": [\"b-ae1-k ah-p\", \"nn jj\"],\n  \"backward\": [\"b-ae1-k w-er-d\", \"rb jj\"],\n  \"backwardness\": [\"b-ae1 k-w-er-d n-ah-s\", \"nn\"],\n  \"backwards\": [\"b-ae1-k w-er-d-z\", \"rb jj\"],\n  \"backwater\": [\"b-ae1-k w-ao t-er\", \"nn jj\"],\n  \"backwoods\": [\"b-ae1-k w-uh1-d-z\", \"nn\"],\n  \"backyard\": [\"b-ae1-k y-aa-r-d\", \"nn\"],\n  \"bacon\": [\"b-ey1 k-ah-n\", \"nn\"],\n  \"bacterial\": [\"b-ae-k t-ih1 r-iy ah-l\", \"jj\"],\n  \"bacterium\": [\"b-ae-k t-ih1 r-iy ah-m\", \"nn\"],\n  \"bad\": [\"b-ae1-d\", \"jj nn rb\"],\n  \"bade\": [\"b-ey1-d\", \"vbd\"],\n  \"badge\": [\"b-ae1-jh\", \"nn\"],\n  \"badger\": [\"b-ae1-jh-er\", \"vb\"],\n  \"badly\": [\"b-ae1-d l-iy\", \"rb\"],\n  \"badminton\": [\"b-ae1-d m-ih-n t-ah-n\", \"nn\"],\n  \"badness\": [\"b-ae1-d n-ah-s\", \"nn\"],\n  \"baffle\": [\"b-ae1 f-ah-l\", \"vb\"],\n  \"baffled\": [\"b-ae1 f-ah-l-d\", \"vbn jj vbd\"],\n  \"baffling\": [\"b-ae1 f-ah-l ih-ng\", \"jj\"],\n  \"bag\": [\"b-ae1-g\", \"nn vb\"],\n  \"bagel\": [\"b-ey1 g-ah-l\", \"nn\"],\n  \"baggage\": [\"b-ae1 g-ah-jh\", \"nn\"],\n  \"bagged\": [\"b-ae1-g-d\", \"vbd jj\"],\n  \"baggy\": [\"b-ae1 g-iy\", \"jj\"],\n  \"bagpipe\": [\"b-ae1-g p-ay-p\", \"nn\"],\n  \"bail\": [\"b-ey1-l\", \"vb nn\"],\n  \"bailiff\": [\"b-ey1 l-ah-f\", \"nn\"],\n  \"bailout\": [\"b-ey1-l aw-t\", \"nn\"],\n  \"bait\": [\"b-ey1-t\", \"nn vb\"],\n  \"bake\": [\"b-ey1-k\", \"jj vb\"],\n  \"baked\": [\"b-ey1-k-t\", \"jj vbd vbn\"],\n  \"baker\": [\"b-ey1 k-er\", \"nn\"],\n  \"bakery\": [\"b-ey1 k-er iy\", \"nn\"],\n  \"bakeware\": [\"b-ey1-k w-eh-r\", \"nn\"],\n  \"balance\": [\"b-ae1 l-ah-n-s\", \"nn vbp jj rb vb\"],\n  \"balanced\": [\"b-ae1 l-ah-n-s-t\", \"jj vbd vbn\"],\n  \"balcony\": [\"b-ae1-l k-ah n-iy\", \"nn\"],\n  \"bald\": [\"b-ao1-l-d\", \"jj\"],\n  \"balding\": [\"b-ao1-l d-ih-ng\", \"jj\"],\n  \"baldness\": [\"b-ao1-l-d n-ah-s\", \"nn\"],\n  \"bale\": [\"b-ey1-l\", \"nn vb vbp\"],\n  \"baleful\": [\"b-ey1-l f-ah-l\", \"jj\"],\n  \"balk\": [\"b-ao1-k\", \"vb vbp\"],\n  \"balkanized\": [\"b-ao1-l k-ah n-ay-z-d\", \"jj\"],\n  \"ball\": [\"b-ao1-l\", \"nn vb\"],\n  \"ballad\": [\"b-ae1 l-ah-d\", \"nn\"],\n  \"ballast\": [\"b-ae1 l-ah-s-t\", \"nn vb\"],\n  \"ballerina\": [\"b-ae l-er iy1 n-ah\", \"nn\"],\n  \"ballet\": [\"b-ae l-ey1\", \"nn\"],\n  \"ballistic\": [\"b-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"balloon\": [\"b-ah l-uw1-n\", \"nn vbp vb\"],\n  \"ballot\": [\"b-ae1 l-ah-t\", \"nn\"],\n  \"balloting\": [\"b-ae1 l-ah t-ih-ng\", \"nn\"],\n  \"ballpark\": [\"b-ao1-l p-aa-r-k\", \"nn\"],\n  \"ballplayer\": [\"b-ao1-l p-l-ey er\", \"nn\"],\n  \"ballroom\": [\"b-ao1-l r-uw-m\", \"nn\"],\n  \"ballyhoo\": [\"b-ae1 l-iy hh-uw1\", \"nn vb\"],\n  \"balm\": [\"b-aa1-m\", \"nn\"],\n  \"balmy\": [\"b-aa1 m-iy\", \"jj\"],\n  \"baloney\": [\"b-ah l-ow1 n-iy\", \"nn\"],\n  \"bam\": [\"b-ae1-m\", \"uh\"],\n  \"bambino\": [\"b-ae-m b-iy1 n-ow\", \"nn\"],\n  \"bamboo\": [\"b-ae-m b-uw1\", \"nn\"],\n  \"ban\": [\"b-ae1-n\", \"nn vb vbp\"],\n  \"banal\": [\"b-ah n-aa1-l\", \"jj\"],\n  \"banality\": [\"b-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"banana\": [\"b-ah n-ae1 n-ah\", \"nn\"],\n  \"band\": [\"b-ae1-n-d\", \"nn vb\"],\n  \"bandage\": [\"b-ae1-n d-ih-jh\", \"nn vb\"],\n  \"bandaged\": [\"b-ae1-n d-ah-jh-d\", \"vbn jj\"],\n  \"bandied\": [\"b-ae1-n d-iy-d\", \"vbn\"],\n  \"bandit\": [\"b-ae1-n d-ah-t\", \"nn\"],\n  \"bandstand\": [\"b-ae1-n-d s-t-ae-n-d\", \"nn\"],\n  \"bandwagon\": [\"b-ae1-n-d w-ae g-ah-n\", \"nn\"],\n  \"bandwidth\": [\"b-ae1-n-d w-ih-d-th\", \"nn\"],\n  \"bandy\": [\"b-ae1-n-d-iy\", \"vb\"],\n  \"bane\": [\"b-ey1-n\", \"nn\"],\n  \"bang\": [\"b-ae1-ng\", \"nn vb uh vbp\"],\n  \"bangish\": [\"b-ae1 ng-ih-sh\", \"jj\"],\n  \"banish\": [\"b-ae1 n-ih-sh\", \"vb\"],\n  \"banishment\": [\"b-ae1 n-ih-sh m-ah-n-t\", \"nn\"],\n  \"banister\": [\"b-ae1 n-ih s-t-er\", \"nn\"],\n  \"banjo\": [\"b-ae1-n jh-ow\", \"nn\"],\n  \"bank\": [\"b-ae1-ng-k\", \"nn vbp vb\"],\n  \"banked\": [\"b-ae1-ng-k-t\", \"vbd jj vbn\"],\n  \"banker\": [\"b-ae1-ng k-er\", \"nn\"],\n  \"bankroll\": [\"b-ae1-ng-k r-ow-l\", \"vb vbp\"],\n  \"bankrupt\": [\"b-ae1-ng k-r-ah-p-t\", \"jj nn vb vbp\"],\n  \"bankruptcy\": [\"b-ae1-ng k-r-ah-p s-iy\", \"nn\"],\n  \"banner\": [\"b-ae1 n-er\", \"nn\"],\n  \"banquet\": [\"b-ae1-ng k-w-ah-t\", \"nn\"],\n  \"banshee\": [\"b-ae-n sh-iy1\", \"nn\"],\n  \"banter\": [\"b-ae1-n t-er\", \"nn\"],\n  \"baptism\": [\"b-ae1-p t-ih z-ah-m\", \"nn\"],\n  \"baptismal\": [\"b-ae-p t-ih1-z m-ah-l\", \"jj\"],\n  \"baptistery\": [\"b-ae1-p t-ah-s t-r-iy\", \"nn\"],\n  \"baptize\": [\"b-ae-p-t-ay1-z\", \"vb\"],\n  \"bar\": [\"b-aa1-r\", \"nn vb vbp\"],\n  \"barb\": [\"b-aa1-r-b\", \"nn vb\"],\n  \"barbarian\": [\"b-aa-r b-eh1 r-iy ah-n\", \"nn\"],\n  \"barbaric\": [\"b-aa-r b-ae1 r-ih-k\", \"jj\"],\n  \"barbarous\": [\"b-aa1-r b-er ah-s\", \"jj\"],\n  \"barbecue\": [\"b-aa1-r b-ih k-y-uw\", \"nn vb\"],\n  \"barbed\": [\"b-aa1-r-b-d\", \"jj vbn\"],\n  \"barbequed\": [\"b-aa1-r b-ih k-y-uw-d\", \"jj\"],\n  \"barber\": [\"b-aa1-r b-er\", \"nn\"],\n  \"bard\": [\"b-aa1-r-d\", \"nn\"],\n  \"bare\": [\"b-eh1-r\", \"jj vb\"],\n  \"barefoot\": [\"b-eh1-r f-uh-t\", \"rb jj\"],\n  \"barely\": [\"b-eh1-r l-iy\", \"rb\"],\n  \"barest\": [\"b-eh1 r-ah-s-t\", \"jjs\"],\n  \"bargain\": [\"b-aa1-r g-ah-n\", \"nn vb\"],\n  \"bargaining\": [\"b-aa1-r g-ih n-ih-ng\", \"nn jj vbg\"],\n  \"barge\": [\"b-aa1-r-jh\", \"nn vb vbp\"],\n  \"baritone\": [\"b-eh1 r-ah t-ow-n\", \"nn jj\"],\n  \"barium\": [\"b-eh1 r-iy ah-m\", \"nn\"],\n  \"bark\": [\"b-aa1-r-k\", \"nn vb\"],\n  \"barley\": [\"b-aa1-r l-iy\", \"nn\"],\n  \"barn\": [\"b-aa1-r-n\", \"nn\"],\n  \"barnacle\": [\"b-aa1-r n-ah k-ah-l\", \"nn\"],\n  \"barnyard\": [\"b-aa1-r-n y-aa-r-d\", \"nn\"],\n  \"barometer\": [\"b-er aa1 m-ih t-er\", \"nn\"],\n  \"barometric\": [\"b-ae r-ah m-eh1 t-r-ih-k\", \"jj\"],\n  \"baron\": [\"b-ae1 r-ah-n\", \"nn\"],\n  \"baroque\": [\"b-er ow1-k\", \"jj nn\"],\n  \"barrack\": [\"b-ae1 r-ah-k\", \"nn\"],\n  \"barrage\": [\"b-er aa1-zh\", \"nn\"],\n  \"barrel\": [\"b-ae1 r-ah-l\", \"nn vb\"],\n  \"barren\": [\"b-ae1 r-ah-n\", \"jj\"],\n  \"barricade\": [\"b-ae1 r-ah k-ey-d\", \"nn vb\"],\n  \"barrier\": [\"b-ae1 r-iy er\", \"nn\"],\n  \"barrio\": [\"b-aa1 r-iy ow\", \"nn\"],\n  \"barrister\": [\"b-ae1 r-ih-s t-er\", \"nn\"],\n  \"barroom\": [\"b-aa1-r r-uw-m\", \"nn\"],\n  \"barrow\": [\"b-ae1 r-ow\", \"nn\"],\n  \"bartender\": [\"b-aa1-r t-eh-n d-er\", \"nn\"],\n  \"barter\": [\"b-aa1-r t-er\", \"nn vb\"],\n  \"base\": [\"b-ey1-s\", \"nn vbp jj vb\"],\n  \"baseball\": [\"b-ey1-s b-ao1-l\", \"nn\"],\n  \"baseless\": [\"b-ey1-s l-ah-s\", \"jj\"],\n  \"baseline\": [\"b-ey1-s l-ay-n\", \"nn jj\"],\n  \"baseman\": [\"b-ey1-s m-ah-n\", \"nn\"],\n  \"basement\": [\"b-ey1-s m-ah-n-t\", \"nn\"],\n  \"bash\": [\"b-ae1-sh\", \"nn vb\"],\n  \"basher\": [\"b-ae1 sh-er\", \"nn\"],\n  \"bashful\": [\"b-ae1-sh f-ah-l\", \"jj\"],\n  \"bashing\": [\"b-ae1 sh-ih-ng\", \"jj vbg\"],\n  \"basic\": [\"b-ey1 s-ih-k\", \"jj nn\"],\n  \"basically\": [\"b-ey1 s-ih-k l-iy\", \"rb\"],\n  \"basil\": [\"b-ae1 z-ah-l\", \"nn\"],\n  \"basin\": [\"b-ey1 s-ah-n\", \"nn\"],\n  \"basis\": [\"b-ey1 s-ah-s\", \"nn\"],\n  \"bask\": [\"b-ae1-s-k\", \"vb\"],\n  \"basket\": [\"b-ae1 s-k-ah-t\", \"nn\"],\n  \"basketball\": [\"b-ae1 s-k-ah-t b-ao-l\", \"nn\"],\n  \"bass\": [\"b-ae1-s\", \"nn\"],\n  \"bassist\": [\"b-ey1 s-ih-s-t\", \"nn\"],\n  \"bassoon\": [\"b-ah s-uw1-n\", \"nn\"],\n  \"bastard\": [\"b-ae1 s-t-er-d\", \"nn\"],\n  \"bastion\": [\"b-ae1 s-ch-ah-n\", \"nn\"],\n  \"bat\": [\"b-ae1-t\", \"nn vb\"],\n  \"batch\": [\"b-ae1-ch\", \"nn\"],\n  \"bated\": [\"b-ey1 t-ih-d\", \"jj\"],\n  \"bath\": [\"b-ae1-th\", \"nn\"],\n  \"bathe\": [\"b-ey1-dh\", \"vb\"],\n  \"bather\": [\"b-ey1 dh-er\", \"nn\"],\n  \"bathrobe\": [\"b-ae1-th r-ow-b\", \"nn\"],\n  \"bathroom\": [\"b-ae1-th r-uw-m\", \"nn\"],\n  \"bathtub\": [\"b-ae1-th t-ah-b\", \"nn\"],\n  \"baton\": [\"b-ah t-aa1-n\", \"nn\"],\n  \"battalion\": [\"b-ah t-ae1 l-y-ah-n\", \"nn\"],\n  \"batted\": [\"b-ae1 t-ih-d\", \"vbd vbn\"],\n  \"batter\": [\"b-ae1 t-er\", \"nn vb\"],\n  \"battered\": [\"b-ae1 t-er-d\", \"vbn vbd jj\"],\n  \"battery\": [\"b-ae1 t-er iy\", \"nn\"],\n  \"battle\": [\"b-ae1 t-ah-l\", \"nn vbp vb\"],\n  \"battlefield\": [\"b-ae1 t-ah-l f-iy-l-d\", \"nn\"],\n  \"battlefront\": [\"b-ae1 t-ah-l f-r-ah-n-t\", \"nn\"],\n  \"battleground\": [\"b-ae1 t-ah-l g-r-aw-n-d\", \"nn\"],\n  \"battlement\": [\"b-ae1 t-ah-l m-ah-n-t\", \"nn\"],\n  \"bauble\": [\"b-ao1 b-ah-l\", \"nn\"],\n  \"bawdy\": [\"b-ao1 d-iy\", \"jj\"],\n  \"bawl\": [\"b-ao1-l\", \"vb\"],\n  \"bay\": [\"b-ey1\", \"nn vb\"],\n  \"bayonet\": [\"b-ey1 ah n-eh-t\", \"nn\"],\n  \"bazaar\": [\"b-ah z-aa1-r\", \"nn\"],\n  \"be\": [\"b-iy1\", \"vb\"],\n  \"beach\": [\"b-iy1-ch\", \"nn vb\"],\n  \"beachfront\": [\"b-iy1-ch f-r-aa-n-t\", \"nn jj\"],\n  \"beachhead\": [\"b-iy1-ch hh-eh-d\", \"nn\"],\n  \"beacon\": [\"b-iy1 k-ah-n\", \"nn\"],\n  \"bead\": [\"b-iy1-d\", \"vb\"],\n  \"beadle\": [\"b-iy1 d-ah-l\", \"nn\"],\n  \"beadwork\": [\"b-iy1-d w-er-k\", \"nn\"],\n  \"beady\": [\"b-iy1 d-iy\", \"jj\"],\n  \"beak\": [\"b-iy1-k\", \"nn\"],\n  \"beaker\": [\"b-iy1 k-er\", \"nn\"],\n  \"beam\": [\"b-iy1-m\", \"nn vb\"],\n  \"beaming\": [\"b-iy1 m-ih-ng\", \"vbg jj\"],\n  \"bean\": [\"b-iy1-n\", \"nn vbn jj\"],\n  \"bear\": [\"b-eh1-r\", \"vb nn vbp\"],\n  \"bearable\": [\"b-eh1 r-ah b-ah-l\", \"jj\"],\n  \"beard\": [\"b-ih1-r-d\", \"nn vb\"],\n  \"bearded\": [\"b-ih1-r d-ah-d\", \"jj vbd vbn\"],\n  \"bearer\": [\"b-eh1 r-er\", \"nn\"],\n  \"bearing\": [\"b-eh1 r-ih-ng\", \"vbg jj nn\"],\n  \"bearish\": [\"b-eh1 r-ih-sh\", \"jj\"],\n  \"bearishly\": [\"b-eh1 r-ih-sh l-iy\", \"rb\"],\n  \"bearishness\": [\"b-eh1 r-ih-sh n-ah-s\", \"nn\"],\n  \"beast\": [\"b-iy1-s-t\", \"nn\"],\n  \"beat\": [\"b-iy1-t\", \"vb jj nn vbd vbp\"],\n  \"beaten\": [\"b-iy1 t-ah-n\", \"vbn jj\"],\n  \"beatnik\": [\"b-iy1-t n-ih-k\", \"nn\"],\n  \"beau\": [\"b-ow1\", \"nn\"],\n  \"beautiful\": [\"b-y-uw1 t-ah f-ah-l\", \"jj\"],\n  \"beautifully\": [\"b-y-uw1 t-ah f-l-iy\", \"rb\"],\n  \"beautify\": [\"b-y-uw1 t-ih f-ay\", \"vb vbp\"],\n  \"beauty\": [\"b-y-uw1 t-iy\", \"nn\"],\n  \"beaver\": [\"b-iy1 v-er\", \"nn\"],\n  \"bebop\": [\"b-iy1 b-aa-p\", \"nn\"],\n  \"becalmed\": [\"b-ih k-aa1-m-d\", \"jj\"],\n  \"became\": [\"b-ih k-ey1-m\", \"vbd\"],\n  \"because\": [\"b-ih k-ao1-z\", \"in rb\"],\n  \"beckon\": [\"b-eh1 k-ah-n\", \"vbp vb\"],\n  \"become\": [\"b-ih k-ah1-m\", \"vb vbn vbp\"],\n  \"bed\": [\"b-eh1-d\", \"nn vb vbp\"],\n  \"bedding\": [\"b-eh1 d-ih-ng\", \"nn\"],\n  \"bedevil\": [\"b-ih d-eh1 v-ah-l\", \"vb\"],\n  \"bedfellow\": [\"b-eh1-d f-eh l-ow\", \"nn\"],\n  \"bedlam\": [\"b-eh1-d l-ah-m\", \"nn\"],\n  \"bedpan\": [\"b-eh1-d p-ae-n\", \"nn\"],\n  \"bedraggled\": [\"b-ih d-r-ae1 g-ah-l-d\", \"jj\"],\n  \"bedridden\": [\"b-eh1-d r-ih d-ah-n\", \"jj\"],\n  \"bedrock\": [\"b-eh1-d r-aa-k\", \"nn\"],\n  \"bedroom\": [\"b-eh1-d r-uw-m\", \"nn\"],\n  \"bedside\": [\"b-eh1-d s-ay-d\", \"nn\"],\n  \"bedspread\": [\"b-eh1-d s-p-r-eh-d\", \"nn\"],\n  \"bedstraw\": [\"b-eh1-d s-t-r-ao\", \"nn\"],\n  \"bedtime\": [\"b-eh1-d t-ay-m\", \"nn\"],\n  \"bee\": [\"b-iy1\", \"nn\"],\n  \"beech\": [\"b-iy1-ch\", \"nn\"],\n  \"beef\": [\"b-iy1-f\", \"nn vb vbp\"],\n  \"beefsteak\": [\"b-iy1-f s-t-ey-k\", \"nn\"],\n  \"beefy\": [\"b-iy1 f-iy\", \"jj\"],\n  \"beehive\": [\"b-iy1 hh-ay-v\", \"nn\"],\n  \"been\": [\"b-ih1-n\", \"vbn\"],\n  \"beep\": [\"b-iy1-p\", \"nn\"],\n  \"beeper\": [\"b-iy1 p-er\", \"nn\"],\n  \"beer\": [\"b-ih1-r\", \"nn\"],\n  \"beet\": [\"b-iy1-t\", \"nn\"],\n  \"beetle\": [\"b-iy1 t-ah-l\", \"nn\"],\n  \"befall\": [\"b-ih f-ao1-l\", \"vb vbp\"],\n  \"befallen\": [\"b-ah f-aa1 l-ah-n\", \"vbn\"],\n  \"befell\": [\"b-ih f-eh1-l\", \"vbd\"],\n  \"befit\": [\"b-ih-f-ih1-t\", \"vb\"],\n  \"befitting\": [\"b-ih f-ih1 t-ih-ng\", \"vbg jj\"],\n  \"before\": [\"b-ih f-ao1-r\", \"in rb rp\"],\n  \"beforehand\": [\"b-ih f-ao1-r hh-ae-n-d\", \"rb\"],\n  \"befriend\": [\"b-ih-f-r-eh1-n-d\", \"vb\"],\n  \"befuddle\": [\"b-ih-f-ah1-d-ah-l\", \"vb\"],\n  \"beg\": [\"b-eh1-g\", \"vbp vb\"],\n  \"began\": [\"b-ih g-ae1-n\", \"vbd\"],\n  \"begat\": [\"b-ih g-ae1-t\", \"vbd\"],\n  \"beget\": [\"b-ih g-eh1-t\", \"vb vbp\"],\n  \"beggar\": [\"b-eh1 g-er\", \"nn\"],\n  \"begin\": [\"b-ih g-ih1-n\", \"vb vbp\"],\n  \"beginner\": [\"b-ih g-ih1 n-er\", \"nn\"],\n  \"beginning\": [\"b-ih g-ih1 n-ih-ng\", \"vbg jj nn\"],\n  \"begonia\": [\"b-ih g-ow1 n-y-ah\", \"nn\"],\n  \"begrudge\": [\"b-ih g-r-ah1-jh\", \"vb\"],\n  \"beguile\": [\"b-ih-g-ay1-l\", \"vb\"],\n  \"beguiling\": [\"b-ih g-ay1 l-ih-ng\", \"jj\"],\n  \"begun\": [\"b-ih g-ah1-n\", \"vbn\"],\n  \"behave\": [\"b-ih hh-ey1-v\", \"vb vbp\"],\n  \"behavior\": [\"b-ih hh-ey1 v-y-er\", \"nn\"],\n  \"behavioral\": [\"b-ih hh-ey1 v-y-er ah-l\", \"jj\"],\n  \"behead\": [\"b-ih-hh-eh1-d\", \"vb\"],\n  \"beheading\": [\"b-ih hh-eh1 d-ih-ng\", \"nn vbg\"],\n  \"behemoth\": [\"b-ah hh-iy1 m-ah-th\", \"nn\"],\n  \"behest\": [\"b-ih hh-eh1-s-t\", \"nn\"],\n  \"behind\": [\"b-ih hh-ay1-n-d\", \"in nn rb rp\"],\n  \"behold\": [\"b-ih hh-ow1-l-d\", \"vb\"],\n  \"beholden\": [\"b-ih hh-ow1-l d-ah-n\", \"jj\"],\n  \"beholder\": [\"b-iy hh-ow1-l d-er\", \"nn\"],\n  \"beige\": [\"b-ey1-zh\", \"jj\"],\n  \"being\": [\"b-iy1 ih-ng\", \"vbg jj nn\"],\n  \"belabor\": [\"b-ih-l-ey1-b-er\", \"vb\"],\n  \"belated\": [\"b-ih l-ey1 t-ih-d\", \"jj\"],\n  \"belatedly\": [\"b-ih l-ey1 t-ah-d l-iy\", \"rb\"],\n  \"belch\": [\"b-eh1-l-ch\", \"nn vb\"],\n  \"beleaguer\": [\"b-ih-l-iy1-g-er\", \"vb\"],\n  \"beleaguered\": [\"b-ih l-iy1 g-er-d\", \"jj vbn\"],\n  \"belfry\": [\"b-eh1-l f-r-iy\", \"nn\"],\n  \"belie\": [\"b-ih l-ay1\", \"vbp vb\"],\n  \"belief\": [\"b-ih l-iy1-f\", \"nn\"],\n  \"believable\": [\"b-ah l-iy1 v-ah b-ah-l\", \"jj\"],\n  \"believe\": [\"b-ih l-iy1-v\", \"vbp vb\"],\n  \"believer\": [\"b-ah l-iy1 v-er\", \"nn\"],\n  \"belittle\": [\"b-ih l-ih1 t-ah-l\", \"vbp vb\"],\n  \"belittled\": [\"b-ih l-ih1 t-ah-l-d\", \"jj\"],\n  \"bell\": [\"b-eh1-l\", \"nn\"],\n  \"bellhop\": [\"b-eh1-l hh-aa-p\", \"nn\"],\n  \"belligerence\": [\"b-ah l-ih1 jh-er ah-n-s\", \"nn\"],\n  \"belligerent\": [\"b-ah l-ih1 jh-er ah-n-t\", \"jj\"],\n  \"bellow\": [\"b-eh1 l-ow\", \"nn vb\"],\n  \"bellows\": [\"b-eh1 l-ow-z\", \"vbz nn\"],\n  \"bellwether\": [\"b-eh1-l w-eh dh-er\", \"nn jj\"],\n  \"belly\": [\"b-eh1 l-iy\", \"nn rb\"],\n  \"belong\": [\"b-ih l-ao1-ng\", \"vb vbp jj\"],\n  \"beloved\": [\"b-ih l-ah1-v-d\", \"jj vbn nn\"],\n  \"below\": [\"b-ih l-ow1\", \"in rb\"],\n  \"belt\": [\"b-eh1-l-t\", \"nn vb\"],\n  \"beltway\": [\"b-eh1-l-t w-ey\", \"nn\"],\n  \"beluga\": [\"b-ih l-uw1 g-ah\", \"nn\"],\n  \"bely\": [\"b-ah-l-ay1\", \"vb\"],\n  \"bemoan\": [\"b-ih m-ow1-n\", \"vb\"],\n  \"bemused\": [\"b-ih m-y-uw1-z-d\", \"jj\"],\n  \"bench\": [\"b-eh1-n-ch\", \"nn vb\"],\n  \"benchmark\": [\"b-eh1-n-ch m-aa-r-k\", \"nn jj\"],\n  \"bend\": [\"b-eh1-n-d\", \"vb nn\"],\n  \"beneath\": [\"b-ih n-iy1-th\", \"in rb\"],\n  \"benefactor\": [\"b-eh1 n-ah f-ae-k t-er\", \"nn\"],\n  \"beneficence\": [\"b-ah n-eh1 f-ah s-ah-n-s\", \"nn\"],\n  \"beneficial\": [\"b-eh n-ah f-ih1 sh-ah-l\", \"jj\"],\n  \"beneficially\": [\"b-eh n-ah f-ih1 sh-ah l-iy\", \"rb\"],\n  \"beneficiary\": [\"b-eh n-ah f-ih1 sh-iy eh r-iy\", \"nn jj\"],\n  \"benefit\": [\"b-eh1 n-ah f-ih-t\", \"nn vb vbp\"],\n  \"benevolence\": [\"b-ah n-eh1 v-ah l-ah-n-s\", \"nn\"],\n  \"benevolent\": [\"b-ah n-eh1 v-ah l-ah-n-t\", \"jj\"],\n  \"benighted\": [\"b-ih n-ay1 t-ih-d\", \"jj\"],\n  \"benign\": [\"b-ih n-ay1-n\", \"jj\"],\n  \"bent\": [\"b-eh1-n-t\", \"vbd vbn jj nn\"],\n  \"benzene\": [\"b-eh-n z-iy1-n\", \"nn\"],\n  \"bequeath\": [\"b-ih k-w-iy1-th\", \"vb\"],\n  \"bequest\": [\"b-ih k-w-eh1-s-t\", \"nn\"],\n  \"berate\": [\"b-ih-r-ey1-t\", \"vb\"],\n  \"bereavement\": [\"b-er iy1-v m-ah-n-t\", \"nn\"],\n  \"bereft\": [\"b-er eh1-f-t\", \"jj vbn\"],\n  \"beret\": [\"b-eh1 r-ah-t\", \"nn\"],\n  \"berg\": [\"b-er1-g\", \"nn\"],\n  \"berry\": [\"b-eh1 r-iy\", \"nn\"],\n  \"berserk\": [\"b-er s-er1-k\", \"jj rb\"],\n  \"berth\": [\"b-er1-th\", \"nn\"],\n  \"beryllium\": [\"b-er ih1 l-iy ah-m\", \"nn\"],\n  \"beset\": [\"b-ih s-eh1-t\", \"vbn jj vbd\"],\n  \"beside\": [\"b-ih s-ay1-d\", \"in rb\"],\n  \"besides\": [\"b-ih s-ay1-d-z\", \"in rb\"],\n  \"besiege\": [\"b-ih s-iy1-jh\", \"vb\"],\n  \"besieged\": [\"b-ih s-iy1-jh-d\", \"vbn jj\"],\n  \"bespeak\": [\"b-ih-s-p-iy1-k\", \"vb\"],\n  \"bespectacled\": [\"b-ih s-p-eh1-k t-ah k-ah-l-d\", \"jj\"],\n  \"best\": [\"b-eh1-s-t\", \"jjs rbs jjss nn rb vb\"],\n  \"bestial\": [\"b-eh1 s-ch-ah-l\", \"jj\"],\n  \"bestow\": [\"b-ih s-t-ow1\", \"vb\"],\n  \"bestseller\": [\"b-eh1-s-t s-eh1 l-er\", \"nn\"],\n  \"bestselling\": [\"b-eh1-s-t s-eh1 l-ih-ng\", \"jj\"],\n  \"bet\": [\"b-eh1-t\", \"nn rb vb vbd vbn vbp\"],\n  \"beta\": [\"b-ey1 t-ah\", \"nn jj\"],\n  \"betide\": [\"b-ih t-ay1-d\", \"vb\"],\n  \"betray\": [\"b-ih t-r-ey1\", \"vb vbp\"],\n  \"betrayal\": [\"b-ih t-r-ey1 ah-l\", \"nn\"],\n  \"better\": [\"b-eh1 t-er\", \"jjr rbr jj rb vb\"],\n  \"betterment\": [\"b-eh1 t-er m-ah-n-t\", \"nn\"],\n  \"between\": [\"b-ih t-w-iy1-n\", \"in rb\"],\n  \"bevel\": [\"b-eh1 v-ah-l\", \"vb\"],\n  \"beverage\": [\"b-eh1 v-er ih-jh\", \"nn\"],\n  \"bevy\": [\"b-eh1 v-iy\", \"nn\"],\n  \"beware\": [\"b-ih w-eh1-r\", \"vb vbp\"],\n  \"bewilder\": [\"b-ih-w-ih1-l-d-er\", \"vb\"],\n  \"bewildered\": [\"b-ih w-ih1-l d-er-d\", \"vbn jj\"],\n  \"bewildering\": [\"b-ih w-ih1-l d-er ih-ng\", \"vbg jj\"],\n  \"bewilderment\": [\"b-ih w-ih1-l d-er m-ah-n-t\", \"nn\"],\n  \"bewitch\": [\"b-ih-w-ih1-ch\", \"vb\"],\n  \"beyond\": [\"b-ih aa1-n-d\", \"in rb\"],\n  \"bi\": [\"b-ay1\", \"in\"],\n  \"bianco\": [\"b-iy aa1-ng k-ow\", \"nn\"],\n  \"biannual\": [\"b-ay ae1 n-uw ah-l\", \"jj\"],\n  \"bias\": [\"b-ay1 ah-s\", \"nn vb\"],\n  \"bib\": [\"b-ih1-b\", \"nn\"],\n  \"bible\": [\"b-ay1 b-ah-l\", \"jj nn\"],\n  \"biblical\": [\"b-ih1 b-l-ah k-ah-l\", \"jj\"],\n  \"bibliography\": [\"b-ih b-l-iy aa1 g-r-ah f-iy\", \"nn\"],\n  \"bicarbonate\": [\"b-ay k-aa1-r b-ah n-ah-t\", \"nn\"],\n  \"bicentennial\": [\"b-ay s-eh-n t-eh1 n-iy ah-l\", \"nn jj\"],\n  \"bicker\": [\"b-ih1-k-er\", \"vb\"],\n  \"bicycle\": [\"b-ay1 s-ih k-ah-l\", \"nn\"],\n  \"bicycling\": [\"b-ay1 s-ih k-ah l-ih-ng\", \"nn\"],\n  \"bid\": [\"b-ih1-d\", \"nn vbd vbn vbp vb\"],\n  \"bidden\": [\"b-ih1 d-ih-n\", \"vbn\"],\n  \"bidder\": [\"b-ih1 d-er\", \"nn\"],\n  \"bide\": [\"b-ay1-d\", \"vb\"],\n  \"biennial\": [\"b-ay eh1 n-iy ah-l\", \"jj\"],\n  \"bifocal\": [\"b-ay1 f-ow k-ah-l\", \"nn\"],\n  \"bifurcated\": [\"b-ih1 f-er k-ey t-ih-d\", \"jj\"],\n  \"big\": [\"b-ih1-g\", \"jj rb\"],\n  \"bigger\": [\"b-ih1 g-er\", \"jjr rbr\"],\n  \"biggest\": [\"b-ih1 g-ah-s-t\", \"jjs rbs\"],\n  \"biggie\": [\"b-ih1 g-iy\", \"nn\"],\n  \"bigness\": [\"b-ih1-g n-ah-s\", \"nn\"],\n  \"bigot\": [\"b-ih1 g-ah-t\", \"nn\"],\n  \"bigoted\": [\"b-ih1 g-ah t-ih-d\", \"jj\"],\n  \"bigotry\": [\"b-ih1 g-ah t-r-iy\", \"nn\"],\n  \"bike\": [\"b-ay1-k\", \"nn\"],\n  \"biker\": [\"b-ay1 k-er\", \"nn\"],\n  \"biking\": [\"b-ay1 k-ih-ng\", \"nn\"],\n  \"bikini\": [\"b-ih k-iy1 n-iy\", \"nn\"],\n  \"bilateral\": [\"b-ay l-ae1 t-er ah-l\", \"jj\"],\n  \"bile\": [\"b-ay1-l\", \"nn\"],\n  \"bilingual\": [\"b-ay l-ih1-ng g-w-ah-l\", \"jj\"],\n  \"bilious\": [\"b-ih1 l-iy ah-s\", \"jj\"],\n  \"bilk\": [\"b-ih1-l-k\", \"vb\"],\n  \"bill\": [\"b-ih1-l\", \"nn vbp vb\"],\n  \"billable\": [\"b-ih1 l-ah b-ah-l\", \"jj\"],\n  \"billboard\": [\"b-ih1-l b-ao-r-d\", \"nn\"],\n  \"billed\": [\"b-ih1-l-d\", \"vbn jj vbd\"],\n  \"billet\": [\"b-ih1 l-ah-t\", \"nn\"],\n  \"billfold\": [\"b-ih1-l f-ow-l-d\", \"nn\"],\n  \"billiard\": [\"b-ih1 l-y-er-d\", \"nn\"],\n  \"billiards\": [\"b-ih1 l-y-er-d-z\", \"nn\"],\n  \"billing\": [\"b-ih1 l-ih-ng\", \"nn vbg\"],\n  \"billion\": [\"b-ih1 l-y-ah-n\", \"nn\"],\n  \"billionaire\": [\"b-ih l-y-ah n-eh1-r\", \"nn\"],\n  \"billon\": [\"b-ih1 l-ah-n\", \"nn\"],\n  \"billow\": [\"b-ih1-l-ow\", \"vb\"],\n  \"bimbo\": [\"b-ih1-m b-ow\", \"nn\"],\n  \"bimonthly\": [\"b-ay m-ah1-n-th l-iy\", \"jj\"],\n  \"bin\": [\"b-ih1-n\", \"nn\"],\n  \"binary\": [\"b-ay1 n-er iy\", \"jj\"],\n  \"binational\": [\"b-ay n-ae1 sh-ah n-ah-l\", \"jj\"],\n  \"bind\": [\"b-ay1-n-d\", \"nn vb vbp\"],\n  \"binder\": [\"b-ay1-n d-er\", \"nn\"],\n  \"binding\": [\"b-ay1-n d-ih-ng\", \"nn jj vbg\"],\n  \"binge\": [\"b-ih1-n-jh\", \"nn\"],\n  \"bingo\": [\"b-ih1-ng g-ow\", \"nn\"],\n  \"binocular\": [\"b-ah n-aa1 k-y-ah l-er\", \"nn\"],\n  \"binomial\": [\"b-ay n-ow1 m-iy ah-l\", \"nn\"],\n  \"bio\": [\"b-ay ow1\", \"nn jj\"],\n  \"biochemical\": [\"b-ay ow k-eh1 m-ah k-ah-l\", \"jj\"],\n  \"biochemist\": [\"b-ay ow k-eh1 m-ah-s-t\", \"nn\"],\n  \"biochemistry\": [\"b-ay ow k-eh1 m-ah s-t-r-iy\", \"nn\"],\n  \"biodegradable\": [\"b-ay ow d-ah g-r-ey1 d-ah b-ah-l\", \"jj\"],\n  \"biofeedback\": [\"b-ay ow f-iy1-d b-ae-k\", \"nn\"],\n  \"biographer\": [\"b-ay aa1 g-r-ah f-er\", \"nn\"],\n  \"biographical\": [\"b-ay ah g-r-ae1 f-ih k-ah-l\", \"jj\"],\n  \"biography\": [\"b-ay aa1 g-r-ah f-iy\", \"nn\"],\n  \"biological\": [\"b-ay ah l-aa1 jh-ih k-ah-l\", \"jj nn\"],\n  \"biologically\": [\"b-ay ah l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"biologist\": [\"b-ay aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"biology\": [\"b-ay aa1 l-ah jh-iy\", \"nn\"],\n  \"biomedical\": [\"b-ay ow m-eh1 d-ih k-ah-l\", \"jj\"],\n  \"biopsy\": [\"b-ay1 aa-p s-iy\", \"nn\"],\n  \"biotech\": [\"b-ay1 ow t-eh-k\", \"jj nn\"],\n  \"biotechnology\": [\"b-ay ow t-eh-k n-aa1 l-ah jh-iy\", \"nn\"],\n  \"bipartisan\": [\"b-ay p-aa1-r t-ih z-ah-n\", \"jj\"],\n  \"biplane\": [\"b-ay1 p-l-ey-n\", \"nn\"],\n  \"biracial\": [\"b-ay r-ey1 sh-ah-l\", \"jj\"],\n  \"birch\": [\"b-er1-ch\", \"nn\"],\n  \"bird\": [\"b-er1-d\", \"nn\"],\n  \"birdie\": [\"b-er1 d-iy\", \"nn vb\"],\n  \"birth\": [\"b-er1-th\", \"nn\"],\n  \"birthday\": [\"b-er1-th d-ey\", \"nn\"],\n  \"birthplace\": [\"b-er1-th p-l-ey-s\", \"nn\"],\n  \"birthrate\": [\"b-er1-th r-ey-t\", \"nn\"],\n  \"birthright\": [\"b-er1-th r-ay-t\", \"nn\"],\n  \"biscuit\": [\"b-ih1 s-k-ah-t\", \"nn\"],\n  \"bisexual\": [\"b-ay s-eh1-k sh-uw ah-l\", \"jj\"],\n  \"bishop\": [\"b-ih1 sh-ah-p\", \"nn\"],\n  \"bison\": [\"b-ay1 s-ah-n\", \"nn\"],\n  \"bisque\": [\"b-ih1-s-k\", \"nn\"],\n  \"bit\": [\"b-ih1-t\", \"vbd nn rb\"],\n  \"bitch\": [\"b-ih1-ch\", \"nn vb\"],\n  \"bitchy\": [\"b-ih1 ch-iy\", \"jj\"],\n  \"bite\": [\"b-ay1-t\", \"vb vbp nn\"],\n  \"biting\": [\"b-ay1 t-ih-ng\", \"vbg jj\"],\n  \"bitten\": [\"b-ih1 t-ah-n\", \"vbn\"],\n  \"bitter\": [\"b-ih1 t-er\", \"jj\"],\n  \"bitterest\": [\"b-ih1 t-er ah-s-t\", \"jjs\"],\n  \"bitterly\": [\"b-ih1 t-er l-iy\", \"rb\"],\n  \"bitterness\": [\"b-ih1 t-er n-ah-s\", \"nn\"],\n  \"bittersweet\": [\"b-ih1 t-er s-w-iy-t\", \"jj\"],\n  \"bituminous\": [\"b-ih t-uw1 m-ah n-ah-s\", \"jj\"],\n  \"bivouac\": [\"b-ih1-v w-ae-k\", \"nn\"],\n  \"biweekly\": [\"b-ay w-iy1-k l-iy\", \"jj nn\"],\n  \"bizarre\": [\"b-ah z-aa1-r\", \"jj\"],\n  \"black\": [\"b-l-ae1-k\", \"jj nn vb\"],\n  \"blackberry\": [\"b-l-ae1-k b-eh r-iy\", \"nn\"],\n  \"blackboard\": [\"b-l-ae1-k b-ao-r-d\", \"nn\"],\n  \"blacken\": [\"b-l-ae1-k-ah-n\", \"vb\"],\n  \"blackened\": [\"b-l-ae1 k-ah-n-d\", \"vbn jj\"],\n  \"blacker\": [\"b-l-ae1 k-er\", \"jjr\"],\n  \"blackest\": [\"b-l-ae1 k-ah-s-t\", \"jjs\"],\n  \"blackjack\": [\"b-l-ae1-k jh-ae-k\", \"nn\"],\n  \"blacklist\": [\"b-l-ae1-k l-ih-s-t\", \"vb\"],\n  \"blackmail\": [\"b-l-ae1-k m-ey-l\", \"nn vb\"],\n  \"blackness\": [\"b-l-ae1-k n-ah-s\", \"nn\"],\n  \"blackout\": [\"b-l-ae1-k aw-t\", \"nn\"],\n  \"blacksmith\": [\"b-l-ae1-k s-m-ih-th\", \"nn\"],\n  \"bladder\": [\"b-l-ae1 d-er\", \"nn\"],\n  \"blade\": [\"b-l-ey1-d\", \"nn\"],\n  \"blame\": [\"b-l-ey1-m\", \"vb nn vbp\"],\n  \"blanche\": [\"b-l-ae1-n-ch\", \"jj nn\"],\n  \"bland\": [\"b-l-ae1-n-d\", \"jj\"],\n  \"blander\": [\"b-l-ae1-n d-er\", \"jjr\"],\n  \"blandly\": [\"b-l-ae1-n-d l-iy\", \"rb\"],\n  \"blandness\": [\"b-l-ae1-n-d n-ah-s\", \"nn\"],\n  \"blank\": [\"b-l-ae1-ng-k\", \"jj nn rb vb\"],\n  \"blanket\": [\"b-l-ae1-ng k-ah-t\", \"nn vbp jj vb\"],\n  \"blare\": [\"b-l-eh1-r\", \"vb\"],\n  \"blase\": [\"b-l-ey1-z\", \"jj nn\"],\n  \"blasphemous\": [\"b-l-ae1-s f-ah m-ah-s\", \"jj\"],\n  \"blasphemy\": [\"b-l-ae1-s f-ah m-iy\", \"nn\"],\n  \"blast\": [\"b-l-ae1-s-t\", \"nn vb\"],\n  \"blastdown\": [\"b-l-ae1-s-t d-aw-n\", \"nn\"],\n  \"blasting\": [\"b-l-ae1 s-t-ih-ng\", \"vbg jj\"],\n  \"blatant\": [\"b-l-ey1 t-ah-n-t\", \"jj\"],\n  \"blatantly\": [\"b-l-ey1 t-ah-n-t l-iy\", \"rb\"],\n  \"blaze\": [\"b-l-ey1-z\", \"nn vb vbp\"],\n  \"blazer\": [\"b-l-ey1 z-er\", \"nn\"],\n  \"blazing\": [\"b-l-ey1 z-ih-ng\", \"vbg jj\"],\n  \"bleach\": [\"b-l-iy1-ch\", \"nn vb\"],\n  \"bleached\": [\"b-l-iy1-ch-t\", \"jj vbn\"],\n  \"bleacher\": [\"b-l-iy1 ch-er\", \"nn\"],\n  \"bleak\": [\"b-l-iy1-k\", \"jj nn\"],\n  \"bleaker\": [\"b-l-iy1 k-er\", \"jjr\"],\n  \"bleary\": [\"b-l-ih1 r-iy\", \"jj\"],\n  \"bled\": [\"b-l-eh1-d\", \"vbd\"],\n  \"bleed\": [\"b-l-iy1-d\", \"vb vbp\"],\n  \"blemish\": [\"b-l-eh1 m-ih-sh\", \"nn\"],\n  \"blend\": [\"b-l-eh1-n-d\", \"nn vbp vb\"],\n  \"blended\": [\"b-l-eh1-n d-ah-d\", \"jj vbd vbn\"],\n  \"blender\": [\"b-l-eh1-n d-er\", \"nn\"],\n  \"bless\": [\"b-l-eh1-s\", \"vb\"],\n  \"blessed\": [\"b-l-eh1-s-t\", \"vbn jj vbd\"],\n  \"blessing\": [\"b-l-eh1 s-ih-ng\", \"nn vbg\"],\n  \"blew\": [\"b-l-uw1\", \"vbd\"],\n  \"blight\": [\"b-l-ay1-t\", \"nn vb\"],\n  \"blind\": [\"b-l-ay1-n-d\", \"jj vb\"],\n  \"blindfold\": [\"b-l-ay1-n-d f-ow-l-d\", \"nn vb\"],\n  \"blindfolded\": [\"b-l-ay1-n-d f-ow-l d-ih-d\", \"vbn jj vbd\"],\n  \"blinding\": [\"b-l-ay1-n d-ih-ng\", \"jj vbg\"],\n  \"blindly\": [\"b-l-ay1-n-d l-iy\", \"rb\"],\n  \"blindness\": [\"b-l-ay1-n-d n-ah-s\", \"nn\"],\n  \"blindside\": [\"b-l-ay1-n-d-s-ay-d\", \"vb\"],\n  \"blindsided\": [\"b-l-ay1-n-d s-ay d-ih-d\", \"vbn jj\"],\n  \"blink\": [\"b-l-ih1-ng-k\", \"vb nn\"],\n  \"blinking\": [\"b-l-ih1-ng k-ih-ng\", \"jj vbg rb\"],\n  \"blip\": [\"b-l-ih1-p\", \"nn vbp vb\"],\n  \"bliss\": [\"b-l-ih1-s\", \"nn\"],\n  \"blissful\": [\"b-l-ih1-s f-ah-l\", \"jj\"],\n  \"blissfully\": [\"b-l-ih1-s f-ah l-iy\", \"rb\"],\n  \"blister\": [\"b-l-ih1 s-t-er\", \"nn vb\"],\n  \"blistering\": [\"b-l-ih1 s-t-er ih-ng\", \"vbg jj\"],\n  \"blithe\": [\"b-l-ay1-dh\", \"jj\"],\n  \"blithely\": [\"b-l-ay1-th l-iy\", \"rb\"],\n  \"blitz\": [\"b-l-ih1-t-s\", \"nn\"],\n  \"blitzkrieg\": [\"b-l-ih1-t s-k-r-iy-g\", \"nn\"],\n  \"blizzard\": [\"b-l-ih1 z-er-d\", \"nn\"],\n  \"bloat\": [\"b-l-ow1-t\", \"nn vb\"],\n  \"bloated\": [\"b-l-ow1 t-ih-d\", \"jj vbn\"],\n  \"blob\": [\"b-l-aa1-b\", \"nn\"],\n  \"blobby\": [\"b-l-aa1 b-iy\", \"jj\"],\n  \"bloc\": [\"b-l-aa1-k\", \"nn\"],\n  \"block\": [\"b-l-aa1-k\", \"nn vbp jj vb\"],\n  \"blockade\": [\"b-l-aa k-ey1-d\", \"nn vb\"],\n  \"blockage\": [\"b-l-aa1 k-ih jh-ih\", \"nn\"],\n  \"blockbuster\": [\"b-l-aa1-k b-ah s-t-er\", \"nn jj\"],\n  \"blocked\": [\"b-l-aa1-k-t\", \"vbn jj vbd\"],\n  \"blocker\": [\"b-l-aa1 k-er\", \"nn\"],\n  \"blocking\": [\"b-l-aa1 k-ih-ng\", \"vbg jj nn\"],\n  \"bloke\": [\"b-l-ow1-k\", \"nn\"],\n  \"blond\": [\"b-l-aa1-n-d\", \"jj nn\"],\n  \"blonde\": [\"b-l-aa1-n-d\", \"jj nn\"],\n  \"blood\": [\"b-l-ah1-d\", \"nn vb\"],\n  \"bloodbath\": [\"b-l-ah1-d b-ae-th\", \"nn\"],\n  \"bloodied\": [\"b-l-ah1 d-iy-d\", \"jj vbn\"],\n  \"bloodiest\": [\"b-l-ah1 d-iy ah-s-t\", \"jjs\"],\n  \"bloodless\": [\"b-l-ah1-d l-ah-s\", \"jj\"],\n  \"bloodshed\": [\"b-l-ah1-d sh-eh-d\", \"nn\"],\n  \"bloodstain\": [\"b-l-ah1-d s-t-ey-n\", \"nn\"],\n  \"bloodstained\": [\"b-l-ah1-d s-t-ey-n-d\", \"jj\"],\n  \"bloodstream\": [\"b-l-ah1-d s-t-r-iy-m\", \"nn\"],\n  \"bloodsucking\": [\"b-l-ah1-d s-ah k-ih-ng\", \"vbg jj\"],\n  \"bloodthirsty\": [\"b-l-ah1-d th-er s-t-iy\", \"jj\"],\n  \"bloody\": [\"b-l-ah1 d-iy\", \"jj\"],\n  \"bloom\": [\"b-l-uw1-m\", \"nn vbp vb\"],\n  \"blooper\": [\"b-l-uw1 p-er\", \"nn\"],\n  \"blossom\": [\"b-l-aa1 s-ah-m\", \"vb jj nn\"],\n  \"blot\": [\"b-l-aa1-t\", \"nn vb\"],\n  \"blouse\": [\"b-l-aw1-s\", \"nn\"],\n  \"blow\": [\"b-l-ow1\", \"nn vb vbp\"],\n  \"blower\": [\"b-l-ow1 er\", \"nn\"],\n  \"blown\": [\"b-l-ow1-n\", \"vbn\"],\n  \"blowout\": [\"b-l-ow1 aw-t\", \"nn\"],\n  \"blowtorch\": [\"b-l-ow1 t-ao-r-ch\", \"nn\"],\n  \"blowup\": [\"b-l-ow1 ah-p\", \"nn\"],\n  \"blubber\": [\"b-l-ah1 b-er\", \"nn\"],\n  \"bludgeon\": [\"b-l-ah1 jh-ah-n\", \"vb nn\"],\n  \"blue\": [\"b-l-uw1\", \"jj nn\"],\n  \"blueberry\": [\"b-l-uw1 b-eh r-iy\", \"nn\"],\n  \"bluebonnet\": [\"b-l-uw1 b-aa n-ah-t\", \"nn\"],\n  \"bluechip\": [\"b-l-uw1 ch-ih-p\", \"jj\"],\n  \"blueprint\": [\"b-l-uw1 p-r-ih-n-t\", \"nn\"],\n  \"bluest\": [\"b-l-uw1 ah-s-t\", \"jjs\"],\n  \"bluff\": [\"b-l-ah1-f\", \"nn vb\"],\n  \"bluing\": [\"b-l-uw1 ih-ng\", \"nn\"],\n  \"bluish\": [\"b-l-uw1 ih-sh\", \"jj\"],\n  \"blunder\": [\"b-l-ah1-n d-er\", \"nn vb\"],\n  \"blunt\": [\"b-l-ah1-n-t\", \"vb jj\"],\n  \"blunted\": [\"b-l-ah1-n t-ah-d\", \"vbd jj vbn\"],\n  \"blunter\": [\"b-l-ah1-n t-er\", \"nn\"],\n  \"bluntest\": [\"b-l-ah1-n t-ah-s-t\", \"rbs\"],\n  \"bluntly\": [\"b-l-ah1-n-t l-iy\", \"rb\"],\n  \"bluntness\": [\"b-l-ah1-n-t n-ah-s\", \"nn\"],\n  \"blur\": [\"b-l-er1\", \"nn vb vbp\"],\n  \"blurred\": [\"b-l-er1-d\", \"vbn jj vbd\"],\n  \"blurry\": [\"b-l-er1 iy\", \"jj\"],\n  \"blurt\": [\"b-l-er1-t\", \"nn vb vbp\"],\n  \"blush\": [\"b-l-ah1-sh\", \"nn vb\"],\n  \"bluster\": [\"b-l-ah1 s-t-er\", \"nn vb\"],\n  \"blustery\": [\"b-l-ah1 s-t-er iy\", \"jj\"],\n  \"boa\": [\"b-ow1 ah\", \"nn\"],\n  \"boar\": [\"b-ao1-r\", \"nn\"],\n  \"board\": [\"b-ao1-r-d\", \"nn rb vb\"],\n  \"boarded\": [\"b-ao1-r d-ah-d\", \"vbd vbn jj\"],\n  \"boardinghouse\": [\"b-ao1-r d-ih-ng hh-aw-s\", \"nn\"],\n  \"boardroom\": [\"b-ao1-r-d r-uw-m\", \"nn\"],\n  \"boast\": [\"b-ow1-s-t\", \"vbp nn vb\"],\n  \"boastful\": [\"b-ow1-s-t f-ah-l\", \"jj\"],\n  \"boat\": [\"b-ow1-t\", \"nn vb\"],\n  \"boater\": [\"b-ow1 t-er\", \"nn\"],\n  \"boatload\": [\"b-ow1-t l-ow-d\", \"nn\"],\n  \"boatman\": [\"b-ow1-t m-ah-n\", \"nn\"],\n  \"bobby\": [\"b-aa1 b-iy\", \"nn jj\"],\n  \"bode\": [\"b-ow1-d\", \"vb vbp\"],\n  \"bodega\": [\"b-ow d-ey1 g-ah\", \"nn\"],\n  \"bodied\": [\"b-aa1 d-iy-d\", \"jj\"],\n  \"bodily\": [\"b-aa1 d-ah l-iy\", \"jj rb\"],\n  \"body\": [\"b-aa1 d-iy\", \"nn\"],\n  \"bodyguard\": [\"b-aa1 d-iy g-aa-r-d\", \"nn\"],\n  \"bog\": [\"b-aa1-g\", \"vb nn\"],\n  \"bogey\": [\"b-ow1 g-iy\", \"nn vb\"],\n  \"boggle\": [\"b-aa1-g-ah-l\", \"vb\"],\n  \"bogus\": [\"b-ow1 g-ah-s\", \"jj\"],\n  \"bohemian\": [\"b-ow hh-iy1 m-iy ah-n\", \"jj\"],\n  \"boil\": [\"b-oy1-l\", \"vb nn\"],\n  \"boiled\": [\"b-oy1-l-d\", \"vbn vbd jj\"],\n  \"boiler\": [\"b-oy1 l-er\", \"nn\"],\n  \"boilerplate\": [\"b-oy1 l-er p-l-ey-t\", \"nn\"],\n  \"boisterous\": [\"b-oy1 s-t-er ah-s\", \"jj\"],\n  \"bold\": [\"b-ow1-l-d\", \"jj\"],\n  \"bolder\": [\"b-ow1-l d-er\", \"jjr\"],\n  \"boldest\": [\"b-ow1-l d-ih-s-t\", \"jjs\"],\n  \"boldly\": [\"b-ow1-l-d l-iy\", \"rb\"],\n  \"boldness\": [\"b-ow1-l-d n-ah-s\", \"nn\"],\n  \"boll\": [\"b-ow1-l\", \"nn\"],\n  \"bolster\": [\"b-ow1-l s-t-er\", \"vb vbp nn\"],\n  \"bolt\": [\"b-ow1-l-t\", \"nn vb\"],\n  \"bomb\": [\"b-aa1-m\", \"nn vb\"],\n  \"bombard\": [\"b-aa-m b-aa1-r-d\", \"vb\"],\n  \"bombardment\": [\"b-aa-m b-aa1-r-d m-ah-n-t\", \"nn\"],\n  \"bombast\": [\"b-aa1-m b-ae-s-t\", \"nn\"],\n  \"bombastic\": [\"b-aa-m b-ae1 s-t-ih-k\", \"jj\"],\n  \"bomber\": [\"b-aa1 m-er\", \"nn\"],\n  \"bombing\": [\"b-aa1 m-ih-ng\", \"nn vbg\"],\n  \"bombshell\": [\"b-aa1-m sh-eh-l\", \"nn\"],\n  \"bonanza\": [\"b-ah n-ae1-n z-ah\", \"nn\"],\n  \"bond\": [\"b-aa1-n-d\", \"nn vb\"],\n  \"bondage\": [\"b-aa1-n d-ih-jh\", \"nn\"],\n  \"bonded\": [\"b-aa1-n d-ah-d\", \"vbn jj\"],\n  \"bondholder\": [\"b-aa1-n-d hh-ow-l d-er\", \"nn\"],\n  \"bone\": [\"b-ow1-n\", \"nn vb\"],\n  \"bonfire\": [\"b-aa1-n f-ay er\", \"nn\"],\n  \"bonkers\": [\"b-aa1-ng k-er-z\", \"jj\"],\n  \"bonnet\": [\"b-aa1 n-ah-t\", \"nn\"],\n  \"bonus\": [\"b-ow1 n-ah-s\", \"nn\"],\n  \"bony\": [\"b-ow1 n-iy\", \"jj\"],\n  \"boo\": [\"b-uw1\", \"vb\"],\n  \"booby\": [\"b-uw1 b-iy\", \"jj nn\"],\n  \"boogie\": [\"b-uw1 g-iy\", \"nn\"],\n  \"book\": [\"b-uh1-k\", \"nn vb\"],\n  \"bookcase\": [\"b-uh1-k k-ey-s\", \"nn\"],\n  \"booker\": [\"b-uh1-k er\", \"nn\"],\n  \"bookie\": [\"b-uh1-k iy\", \"nn\"],\n  \"booking\": [\"b-uh1 k-ih-ng\", \"nn vbg\"],\n  \"bookish\": [\"b-uh1-k ih-sh\", \"jj\"],\n  \"bookkeeper\": [\"b-uh1-k k-iy p-er\", \"nn\"],\n  \"booklet\": [\"b-uh1-k l-ih-t\", \"nn\"],\n  \"bookseller\": [\"b-uh1-k s-eh l-er\", \"nn\"],\n  \"bookshelf\": [\"b-uh1-k sh-eh-l-f\", \"nn\"],\n  \"bookstore\": [\"b-uh1-k s-t-ao-r\", \"nn\"],\n  \"boom\": [\"b-uw1-m\", \"nn vb\"],\n  \"boomer\": [\"b-uw1 m-er\", \"nn\"],\n  \"boomerang\": [\"b-uw1 m-er ae-ng\", \"nn vb\"],\n  \"booming\": [\"b-uw1 m-ih-ng\", \"jj vbg\"],\n  \"boomtown\": [\"b-uw1-m t-aw-n\", \"nn\"],\n  \"boon\": [\"b-uw1-n\", \"nn jj\"],\n  \"boondoggle\": [\"b-uw-n d-aa1 g-ah-l\", \"nn\"],\n  \"boor\": [\"b-uh1-r\", \"nn\"],\n  \"boorish\": [\"b-uh1 r-ih-sh\", \"jj\"],\n  \"boost\": [\"b-uw1-s-t\", \"vb nn vbp\"],\n  \"booster\": [\"b-uw1 s-t-er\", \"nn\"],\n  \"boot\": [\"b-uw1-t\", \"nn vb\"],\n  \"booted\": [\"b-uw1 t-ih-d\", \"vbn vbd jj\"],\n  \"booth\": [\"b-uw1-th\", \"nn\"],\n  \"bootleg\": [\"b-uw1-t l-eh-g\", \"jj nn\"],\n  \"bootlegger\": [\"b-uw1-t l-eh g-er\", \"nn\"],\n  \"bootlegging\": [\"b-uw1-t l-eh g-ih-ng\", \"nn\"],\n  \"booty\": [\"b-uw1 t-iy\", \"nn\"],\n  \"booze\": [\"b-uw1-z\", \"nn\"],\n  \"bop\": [\"b-aa1-p\", \"nn\"],\n  \"borax\": [\"b-ao1 r-ae-k-s\", \"nn\"],\n  \"border\": [\"b-ao1-r d-er\", \"nn vb\"],\n  \"borderline\": [\"b-ao1-r d-er l-ay-n\", \"jj nn rb\"],\n  \"bore\": [\"b-ao1-r\", \"vbp jj nn vb vbd\"],\n  \"bored\": [\"b-ao1-r-d\", \"vbn jj vbd\"],\n  \"boredom\": [\"b-ao1-r d-ah-m\", \"nn\"],\n  \"borer\": [\"b-ao1 r-er\", \"nn\"],\n  \"boring\": [\"b-ao1 r-ih-ng\", \"jj vbg\"],\n  \"born\": [\"b-ao1-r-n\", \"vbn\"],\n  \"borough\": [\"b-er1 ow\", \"nn\"],\n  \"borrow\": [\"b-aa1 r-ow\", \"vb vbp\"],\n  \"borrowed\": [\"b-aa1 r-ow-d\", \"vbn vbd jj\"],\n  \"borrower\": [\"b-aa1 r-ow er\", \"nn\"],\n  \"borrowing\": [\"b-aa1 r-ow ih-ng\", \"nn jj vbg\"],\n  \"bosom\": [\"b-uh1 z-ah-m\", \"nn\"],\n  \"boss\": [\"b-aa1-s\", \"nn\"],\n  \"bossman\": [\"b-ao1-s m-ah-n\", \"nn\"],\n  \"botanical\": [\"b-ah t-ae1 n-ih k-ah-l\", \"jj\"],\n  \"botanist\": [\"b-aa1 t-ah n-ah-s-t\", \"nn\"],\n  \"botany\": [\"b-aa1 t-ah n-iy\", \"nn\"],\n  \"botch\": [\"b-aa1-ch\", \"vb\"],\n  \"botched\": [\"b-aa1-ch-t\", \"vbn jj\"],\n  \"both\": [\"b-aa1-th\", \"jj rb prp\"],\n  \"bother\": [\"b-aa1 dh-er\", \"vb vbp\"],\n  \"bothersome\": [\"b-aa1 dh-er s-ah-m\", \"jj\"],\n  \"bottle\": [\"b-aa1 t-ah-l\", \"nn vb\"],\n  \"bottled\": [\"b-aa1 t-ah-l-d\", \"jj vbd vbn\"],\n  \"bottleneck\": [\"b-aa1 t-ah-l n-eh-k\", \"nn\"],\n  \"bottler\": [\"b-aa1-t l-er\", \"nn\"],\n  \"bottling\": [\"b-aa1 t-ah-l ih-ng\", \"nn vbg\"],\n  \"bottom\": [\"b-aa1 t-ah-m\", \"nn jj vb\"],\n  \"bottomless\": [\"b-aa1 t-ah-m l-ah-s\", \"jj\"],\n  \"bough\": [\"b-aw1\", \"nn\"],\n  \"bought\": [\"b-aa1-t\", \"vbd vbn\"],\n  \"boulder\": [\"b-ow1-l d-er\", \"nn\"],\n  \"boulevard\": [\"b-uh1 l-ah v-aa-r-d\", \"nn\"],\n  \"bounce\": [\"b-aw1-n-s\", \"vb vbp nn\"],\n  \"bouncy\": [\"b-aw1-n s-iy\", \"jj\"],\n  \"bound\": [\"b-aw1-n-d\", \"vbn jj nn vbd\"],\n  \"boundary\": [\"b-aw1-n d-er iy\", \"nn\"],\n  \"bounded\": [\"b-aw1-n d-ah-d\", \"vbn vbd jj\"],\n  \"boundless\": [\"b-aw1-n-d l-ah-s\", \"jj\"],\n  \"bounty\": [\"b-aw1-n t-iy\", \"nn\"],\n  \"bouquet\": [\"b-uw k-ey1\", \"nn\"],\n  \"bourbon\": [\"b-er1 b-ah-n\", \"nn\"],\n  \"bourgeois\": [\"b-uh-r zh-w-aa1\", \"jj\"],\n  \"bourgeoisie\": [\"b-uh-r zh-w-aa z-iy1\", \"nn\"],\n  \"bout\": [\"b-aw1-t\", \"nn\"],\n  \"boutique\": [\"b-uw t-iy1-k\", \"nn\"],\n  \"bovine\": [\"b-ow1 v-ay-n\", \"jj nn\"],\n  \"bow\": [\"b-aw1\", \"nn vb vbp\"],\n  \"bowed\": [\"b-aw1-d\", \"vbd vbn jj\"],\n  \"bowel\": [\"b-aw1 ah-l\", \"nn\"],\n  \"bower\": [\"b-aw1 er\", \"nn\"],\n  \"bowl\": [\"b-ow1-l\", \"nn vb vbp\"],\n  \"box\": [\"b-aa1-k-s\", \"nn vb\"],\n  \"boxcar\": [\"b-aa1-k-s k-aa-r\", \"nn\"],\n  \"boxer\": [\"b-aa1-k s-er\", \"nn\"],\n  \"boxing\": [\"b-aa1-k s-ih-ng\", \"nn\"],\n  \"boxy\": [\"b-aa1-k s-iy\", \"jj\"],\n  \"boy\": [\"b-oy1\", \"nn uh\"],\n  \"boycott\": [\"b-oy1 k-aa-t\", \"nn vb vbp\"],\n  \"boyfriend\": [\"b-oy1 f-r-eh-n-d\", \"nn\"],\n  \"boyhood\": [\"b-oy1 hh-uh-d\", \"nn\"],\n  \"boyish\": [\"b-oy1 ih-sh\", \"jj\"],\n  \"bra\": [\"b-r-aa1\", \"nn\"],\n  \"brace\": [\"b-r-ey1-s\", \"nn vb vbp\"],\n  \"bracelet\": [\"b-r-ey1-s l-ah-t\", \"nn\"],\n  \"bracket\": [\"b-r-ae1 k-ih-t\", \"nn\"],\n  \"brackish\": [\"b-r-ae1 k-ih-sh\", \"jj\"],\n  \"brad\": [\"b-r-ae1-d\", \"nn\"],\n  \"bradykinin\": [\"b-r-ah d-ih1 k-ih n-ih-n\", \"nn\"],\n  \"brag\": [\"b-r-ae1-g\", \"vb vbp nn\"],\n  \"braggadocio\": [\"b-r-ae g-ah d-ow1 sh-iy ow\", \"nn\"],\n  \"braid\": [\"b-r-ey1-d\", \"vb\"],\n  \"braided\": [\"b-r-ey1 d-ih-d\", \"jj vbn\"],\n  \"brain\": [\"b-r-ey1-n\", \"nn\"],\n  \"brainchild\": [\"b-r-ey1-n ch-ay-l-d\", \"nn\"],\n  \"brainpower\": [\"b-r-ey1-n p-aw er\", \"nn\"],\n  \"brainstorm\": [\"b-r-ey1-n s-t-ao-r-m\", \"nn\"],\n  \"brainwash\": [\"b-r-ey1-n-w-aa-sh\", \"vb\"],\n  \"brainwashing\": [\"b-r-ey1-n w-aa sh-ih-ng\", \"nn\"],\n  \"brainy\": [\"b-r-ey1 n-iy\", \"jj\"],\n  \"brake\": [\"b-r-ey1-k\", \"nn vb\"],\n  \"bramble\": [\"b-r-ae1-m b-ah-l\", \"nn\"],\n  \"bran\": [\"b-r-ae1-n\", \"nn\"],\n  \"branch\": [\"b-r-ae1-n-ch\", \"nn vb\"],\n  \"branched\": [\"b-r-ae1-n-ch-t\", \"vbn jj vbd\"],\n  \"brand\": [\"b-r-ae1-n-d\", \"nn vb vbp jj rb\"],\n  \"branded\": [\"b-r-ae1-n d-ih-d\", \"vbn jj\"],\n  \"brandish\": [\"b-r-ae1-n-d-ih-sh\", \"vb\"],\n  \"brandy\": [\"b-r-ae1-n d-iy\", \"nn vb\"],\n  \"brash\": [\"b-r-ae1-sh\", \"jj\"],\n  \"brashness\": [\"b-r-ae1-sh n-ah-s\", \"nn\"],\n  \"brass\": [\"b-r-ae1-s\", \"nn jj\"],\n  \"brassy\": [\"b-r-ae1 s-iy\", \"jj\"],\n  \"brat\": [\"b-r-ae1-t\", \"nn\"],\n  \"bratwurst\": [\"b-r-ae1-t w-er-s-t\", \"nn\"],\n  \"bravado\": [\"b-r-ah v-aa1 d-ow\", \"nn\"],\n  \"brave\": [\"b-r-ey1-v\", \"jj vb\"],\n  \"bravely\": [\"b-r-ey1-v l-iy\", \"rb\"],\n  \"braver\": [\"b-r-ey1 v-er\", \"jjr\"],\n  \"bravery\": [\"b-r-ey1 v-er iy\", \"nn\"],\n  \"bravest\": [\"b-r-ey1 v-ah-s-t\", \"jjs\"],\n  \"bravura\": [\"b-r-ah v-y-uh1 r-ah\", \"nn jj\"],\n  \"brawl\": [\"b-r-ao1-l\", \"nn\"],\n  \"brawling\": [\"b-r-ao1 l-ih-ng\", \"nn\"],\n  \"brawny\": [\"b-r-ao1 n-iy\", \"jj\"],\n  \"brazen\": [\"b-r-ey1 z-ah-n\", \"jj vb\"],\n  \"brazenly\": [\"b-r-ey1 z-ah-n l-iy\", \"rb\"],\n  \"brazier\": [\"b-r-ey1 z-iy er\", \"nn\"],\n  \"brazil\": [\"b-r-ah z-ih1-l\", \"nn\"],\n  \"breach\": [\"b-r-iy1-ch\", \"nn vb\"],\n  \"bread\": [\"b-r-eh1-d\", \"nn\"],\n  \"breadbasket\": [\"b-r-eh1-d b-ae s-k-ah-t\", \"nn\"],\n  \"breadbox\": [\"b-r-eh1-d b-aa-k-s\", \"nn\"],\n  \"breaded\": [\"b-r-eh1 d-ih-d\", \"jj\"],\n  \"breadth\": [\"b-r-eh1-d-th\", \"nn\"],\n  \"break\": [\"b-r-ey1-k\", \"vb nn vbp\"],\n  \"breakage\": [\"b-r-ey1 k-ih-jh\", \"nn\"],\n  \"breakaway\": [\"b-r-ey1-k ah w-ey\", \"nn\"],\n  \"breakdown\": [\"b-r-ey1-k d-aw-n\", \"nn\"],\n  \"breaker\": [\"b-r-ey1 k-er\", \"nn\"],\n  \"breakeven\": [\"b-r-ey1 k-iy v-ah-n\", \"jj nn\"],\n  \"breakfast\": [\"b-r-eh1-k f-ah-s-t\", \"nn\"],\n  \"breaking\": [\"b-r-ey1 k-ih-ng\", \"vbg jj nn\"],\n  \"breakneck\": [\"b-r-ey1-k n-eh-k\", \"jj\"],\n  \"breakthrough\": [\"b-r-ey1-k th-r-uw\", \"nn\"],\n  \"breakup\": [\"b-r-ey1-k ah-p\", \"nn\"],\n  \"breakwater\": [\"b-r-ey1-k w-ao t-er\", \"nn\"],\n  \"breast\": [\"b-r-eh1-s-t\", \"nn\"],\n  \"breath\": [\"b-r-eh1-th\", \"nn vb\"],\n  \"breathe\": [\"b-r-iy1-dh\", \"vb vbp\"],\n  \"breather\": [\"b-r-iy1 dh-er\", \"nn\"],\n  \"breathless\": [\"b-r-eh1-th l-ah-s\", \"jj\"],\n  \"breathlessly\": [\"b-r-eh1-th l-ah-s l-iy\", \"rb\"],\n  \"breathtaking\": [\"b-r-eh1-th t-ey k-ih-ng\", \"jj\"],\n  \"breathy\": [\"b-r-eh1 th-iy\", \"jj\"],\n  \"bred\": [\"b-r-eh1-d\", \"vbn vbd\"],\n  \"breed\": [\"b-r-iy1-d\", \"nn vb vbp\"],\n  \"breeder\": [\"b-r-iy1 d-er\", \"nn\"],\n  \"breeze\": [\"b-r-iy1-z\", \"nn vb\"],\n  \"breezy\": [\"b-r-iy1 z-iy\", \"jj\"],\n  \"brevity\": [\"b-r-eh1 v-ah t-iy\", \"nn\"],\n  \"brew\": [\"b-r-uw1\", \"nn vb\"],\n  \"brewer\": [\"b-r-uw1 er\", \"nn\"],\n  \"brewery\": [\"b-r-uw1 er iy\", \"nn\"],\n  \"bribe\": [\"b-r-ay1-b\", \"nn vb\"],\n  \"bribery\": [\"b-r-ay1 b-er iy\", \"nn\"],\n  \"brick\": [\"b-r-ih1-k\", \"nn\"],\n  \"bricklayer\": [\"b-r-ih1-k l-ey er\", \"nn\"],\n  \"bridal\": [\"b-r-ay1 d-ah-l\", \"jj\"],\n  \"bride\": [\"b-r-ay1-d\", \"nn\"],\n  \"bridegroom\": [\"b-r-ay1-d g-r-uw-m\", \"nn\"],\n  \"bridesmaid\": [\"b-r-ay1-d-z m-ey-d\", \"nn\"],\n  \"bridge\": [\"b-r-ih1-jh\", \"nn jj vb\"],\n  \"bridgehead\": [\"b-r-ih1-jh hh-eh-d\", \"nn\"],\n  \"bridging\": [\"b-r-ih1 jh-ih-ng\", \"vbg jj\"],\n  \"bridle\": [\"b-r-ay1 d-ah-l\", \"nn vb\"],\n  \"brie\": [\"b-r-iy1\", \"nn\"],\n  \"brief\": [\"b-r-iy1-f\", \"jj nn vb\"],\n  \"briefcase\": [\"b-r-iy1-f k-ey-s\", \"nn\"],\n  \"briefer\": [\"b-r-iy1 f-er\", \"jjr\"],\n  \"briefing\": [\"b-r-iy1 f-ih-ng\", \"nn vbg\"],\n  \"briefly\": [\"b-r-iy1-f l-iy\", \"nn rb\"],\n  \"brig\": [\"b-r-ih1-g\", \"nn\"],\n  \"brigade\": [\"b-r-ah g-ey1-d\", \"nn\"],\n  \"brigadier\": [\"b-r-ih g-ah d-ih1-r\", \"nn\"],\n  \"bright\": [\"b-r-ay1-t\", \"jj rb\"],\n  \"brighten\": [\"b-r-ay1 t-ah-n\", \"vb\"],\n  \"brighter\": [\"b-r-ay1 t-er\", \"jjr\"],\n  \"brightest\": [\"b-r-ay1 t-ah-s-t\", \"jjs\"],\n  \"brightly\": [\"b-r-ay1-t l-iy\", \"rb\"],\n  \"brightness\": [\"b-r-ay1-t n-ah-s\", \"nn\"],\n  \"brilliance\": [\"b-r-ih1-l y-ah-n-s\", \"nn\"],\n  \"brilliant\": [\"b-r-ih1-l y-ah-n-t\", \"jj\"],\n  \"brilliantly\": [\"b-r-ih1-l y-ah-n-t l-iy\", \"rb\"],\n  \"brim\": [\"b-r-ih1-m\", \"nn\"],\n  \"brimmed\": [\"b-r-ih1-m-d\", \"vbd vbn\"],\n  \"brindle\": [\"b-r-ih1-n d-ah-l\", \"nn\"],\n  \"brine\": [\"b-r-ay1-n\", \"nn\"],\n  \"bring\": [\"b-r-ih1-ng\", \"vb vbp\"],\n  \"brink\": [\"b-r-ih1-ng-k\", \"nn\"],\n  \"brinkmanship\": [\"b-r-ih1-ng-k m-ah-n sh-ih-p\", \"nn\"],\n  \"brinksmanship\": [\"b-r-ih1-ng-k-s m-ah-n sh-ih-p\", \"nn\"],\n  \"brisk\": [\"b-r-ih1-s-k\", \"jj\"],\n  \"brisker\": [\"b-r-ih1 s-k-er\", \"jjr\"],\n  \"briskly\": [\"b-r-ih1-s-k l-iy\", \"rb\"],\n  \"bristle\": [\"b-r-ih1 s-ah-l\", \"vbp vb nn\"],\n  \"bristling\": [\"b-r-ih1 s-ah-l ih-ng\", \"vbg jj\"],\n  \"brittle\": [\"b-r-ih1 t-ah-l\", \"jj\"],\n  \"broach\": [\"b-r-ow1-ch\", \"vb\"],\n  \"broad\": [\"b-r-ao1-d\", \"jj\"],\n  \"broadcast\": [\"b-r-ao1-d k-ae-s-t\", \"nn jj vb vbd vbn\"],\n  \"broadcaster\": [\"b-r-ao1-d k-ae s-t-er\", \"nn\"],\n  \"broaden\": [\"b-r-ao1 d-ah-n\", \"vb vbp\"],\n  \"broader\": [\"b-r-ao1 d-er\", \"jjr\"],\n  \"broadest\": [\"b-r-ao1 d-ih-s-t\", \"jjs\"],\n  \"broadly\": [\"b-r-ao1-d l-iy\", \"rb\"],\n  \"broadside\": [\"b-r-ao1-d s-ay-d\", \"jj nn rb\"],\n  \"brocade\": [\"b-r-ow k-ey1-d\", \"nn\"],\n  \"broccoli\": [\"b-r-aa1 k-ah l-iy\", \"nn\"],\n  \"brochure\": [\"b-r-ow sh-uh1-r\", \"nn\"],\n  \"broil\": [\"b-r-oy1-l\", \"nn vb\"],\n  \"broiler\": [\"b-r-oy1 l-er\", \"nn\"],\n  \"brok\": [\"b-r-aa1-k\", \"vbd\"],\n  \"broke\": [\"b-r-ow1-k\", \"vbd jj rb\"],\n  \"broken\": [\"b-r-ow1 k-ah-n\", \"vbn jj\"],\n  \"broker\": [\"b-r-ow1 k-er\", \"nn vb\"],\n  \"brokerage\": [\"b-r-ow1 k-er ih-jh\", \"nn\"],\n  \"bromide\": [\"b-r-ow1 m-ay-d\", \"nn\"],\n  \"bronc\": [\"b-r-aa1-ng-k\", \"nn\"],\n  \"bronchial\": [\"b-r-aa1-n ch-iy ah-l\", \"jj\"],\n  \"bronchitis\": [\"b-r-aa-ng k-ay1 t-ah-s\", \"nn\"],\n  \"bronze\": [\"b-r-aa1-n-z\", \"nn jj\"],\n  \"bronzed\": [\"b-r-aa1-n-z-d\", \"jj\"],\n  \"brooch\": [\"b-r-uw1-ch\", \"nn\"],\n  \"brood\": [\"b-r-uw1-d\", \"nn jj vb\"],\n  \"brooding\": [\"b-r-uw1 d-ih-ng\", \"vbg jj nn\"],\n  \"broody\": [\"b-r-uw1 d-iy\", \"jj\"],\n  \"brook\": [\"b-r-uh1-k\", \"nn\"],\n  \"broom\": [\"b-r-uw1-m\", \"nn\"],\n  \"broth\": [\"b-r-ao1-th\", \"nn\"],\n  \"brothel\": [\"b-r-aa1 th-ah-l\", \"nn\"],\n  \"brother\": [\"b-r-ah1 dh-er\", \"nn\"],\n  \"brotherhood\": [\"b-r-ah1 dh-er hh-uh-d\", \"nn\"],\n  \"brotherly\": [\"b-r-ah1 dh-er l-iy\", \"jj\"],\n  \"brought\": [\"b-r-ao1-t\", \"vbn vbd\"],\n  \"brouhaha\": [\"b-r-uw1 hh-aa hh-aa\", \"nn\"],\n  \"brow\": [\"b-r-aw1\", \"nn\"],\n  \"browbeat\": [\"b-r-aw1 b-iy-t\", \"vb\"],\n  \"brown\": [\"b-r-aw1-n\", \"jj nn vb\"],\n  \"brownie\": [\"b-r-aw1 n-iy\", \"nn\"],\n  \"brownish\": [\"b-r-aw1 n-ih-sh\", \"jj\"],\n  \"brownout\": [\"b-r-aw1-n aw-t\", \"nn\"],\n  \"browse\": [\"b-r-aw1-z\", \"vb\"],\n  \"bruise\": [\"b-r-uw1-z\", \"nn vb\"],\n  \"bruised\": [\"b-r-uw1-z-d\", \"vbn jj\"],\n  \"bruising\": [\"b-r-uw1 z-ih-ng\", \"jj vbg\"],\n  \"brunch\": [\"b-r-ah1-n-ch\", \"nn\"],\n  \"brunette\": [\"b-r-uw n-eh1-t\", \"jj nn\"],\n  \"brunt\": [\"b-r-ah1-n-t\", \"nn\"],\n  \"brush\": [\"b-r-ah1-sh\", \"nn jj vb vbp\"],\n  \"brushed\": [\"b-r-ah1-sh-t\", \"vbd vbn jj\"],\n  \"brushwork\": [\"b-r-ah1-sh w-er-k\", \"nn\"],\n  \"brushy\": [\"b-r-ah1 sh-iy\", \"jj\"],\n  \"brusquely\": [\"b-r-ah1-s-k l-iy\", \"rb\"],\n  \"brutal\": [\"b-r-uw1 t-ah-l\", \"jj\"],\n  \"brutality\": [\"b-r-uw t-ae1 l-ah t-iy\", \"nn\"],\n  \"brutalize\": [\"b-r-uw1-t-ah-l-ay-z\", \"vb\"],\n  \"brutalized\": [\"b-r-uw1 t-ah l-ay-z-d\", \"vbn jj\"],\n  \"brutally\": [\"b-r-uw1 t-ah l-iy\", \"rb\"],\n  \"brute\": [\"b-r-uw1-t\", \"nn jj\"],\n  \"brutish\": [\"b-r-uw1 t-ih-sh\", \"jj\"],\n  \"bubble\": [\"b-ah1 b-ah-l\", \"nn vbp vb\"],\n  \"bubbly\": [\"b-ah1 b-l-iy\", \"jj nn\"],\n  \"buccaneer\": [\"b-ah k-ah n-iy1-r\", \"nn\"],\n  \"buck\": [\"b-ah1-k\", \"nn vbp vb\"],\n  \"bucket\": [\"b-ah1 k-ah-t\", \"nn\"],\n  \"buckle\": [\"b-ah1 k-ah-l\", \"vb nn\"],\n  \"buckled\": [\"b-ah1 k-ah-l-d\", \"vbd vbn jj\"],\n  \"buckshot\": [\"b-ah1-k sh-aa-t\", \"nn\"],\n  \"buckskin\": [\"b-ah1-k s-k-ih-n\", \"nn\"],\n  \"buckwheat\": [\"b-ah1-k w-iy-t\", \"nn\"],\n  \"bucolic\": [\"b-y-uw k-aa1 l-ih-k\", \"jj\"],\n  \"bud\": [\"b-ah1-d\", \"nn vb\"],\n  \"budding\": [\"b-ah1 d-ih-ng\", \"vbg jj\"],\n  \"buddy\": [\"b-ah1 d-iy\", \"nn\"],\n  \"budge\": [\"b-ah1-jh\", \"vb\"],\n  \"budget\": [\"b-ah1 jh-ih-t\", \"nn vb\"],\n  \"budgetary\": [\"b-ah1 jh-ih t-eh r-iy\", \"jj\"],\n  \"budgeteer\": [\"b-ah jh-ih t-ih1-r\", \"nn\"],\n  \"buff\": [\"b-ah1-f\", \"nn jj\"],\n  \"buffalo\": [\"b-ah1 f-ah l-ow\", \"nn\"],\n  \"buffer\": [\"b-ah1 f-er\", \"nn vb\"],\n  \"buffet\": [\"b-ah1 f-ah-t\", \"nn vb vbp\"],\n  \"buffoon\": [\"b-ah f-uw1-n\", \"nn\"],\n  \"bug\": [\"b-ah1-g\", \"nn vb vbp\"],\n  \"bugaboo\": [\"b-ah1 g-ah b-uw\", \"nn\"],\n  \"bugeyed\": [\"b-ah1 g-ay-d\", \"jj\"],\n  \"bugger\": [\"b-ah1 g-er\", \"nn\"],\n  \"bugging\": [\"b-ah1 g-ih-ng\", \"nn\"],\n  \"buggy\": [\"b-ah1 g-iy\", \"nn\"],\n  \"bugle\": [\"b-y-uw1 g-ah-l\", \"nn\"],\n  \"build\": [\"b-ih1-l-d\", \"vb vbp nn\"],\n  \"builder\": [\"b-ih1-l d-er\", \"nn\"],\n  \"building\": [\"b-ih1-l d-ih-ng\", \"nn vbg\"],\n  \"buildup\": [\"b-ih1-l-d ah-p\", \"nn\"],\n  \"built\": [\"b-ih1-l-t\", \"vbn jj vbd\"],\n  \"bulb\": [\"b-ah1-l-b\", \"nn\"],\n  \"bulge\": [\"b-ah1-l-jh\", \"nn vb\"],\n  \"bulging\": [\"b-ah1-l jh-ih-ng\", \"vbg jj\"],\n  \"bulk\": [\"b-ah1-l-k\", \"nn jj\"],\n  \"bulkhead\": [\"b-ah1-l-k hh-eh-d\", \"nn\"],\n  \"bulky\": [\"b-ah1-l k-iy\", \"jj\"],\n  \"bull\": [\"b-uh1-l\", \"nn vb\"],\n  \"bulldog\": [\"b-uh1-l d-ao-g\", \"jj\"],\n  \"bulldoze\": [\"b-uh1-l d-ow-z\", \"vb\"],\n  \"bulldozer\": [\"b-uh1-l d-ow z-er\", \"nn\"],\n  \"bullet\": [\"b-uh1 l-ah-t\", \"nn\"],\n  \"bulletin\": [\"b-uh1 l-ih t-ah-n\", \"nn vb\"],\n  \"bulletproof\": [\"b-uh1 l-ah-t p-r-uw-f\", \"jj\"],\n  \"bullfighter\": [\"b-uh1-l f-ay t-er\", \"nn\"],\n  \"bullhorn\": [\"b-uh1-l hh-ao-r-n\", \"nn\"],\n  \"bullied\": [\"b-uh1 l-iy-d\", \"vbd vbn\"],\n  \"bullion\": [\"b-uh1 l-y-ah-n\", \"nn\"],\n  \"bullish\": [\"b-uh1 l-ih-sh\", \"jj\"],\n  \"bullishly\": [\"b-uh1 l-ih-sh l-iy\", \"rb\"],\n  \"bullishness\": [\"b-uh1 l-ih-sh n-ah-s\", \"nn\"],\n  \"bullock\": [\"b-uh1 l-ah-k\", \"nn\"],\n  \"bully\": [\"b-uh1 l-iy\", \"nn vbp vb\"],\n  \"bulwark\": [\"b-uh1-l w-er-k\", \"nn\"],\n  \"bum\": [\"b-ah1-m\", \"nn vb jj vbp\"],\n  \"bumble\": [\"b-ah1-m b-ah-l\", \"vb vbp\"],\n  \"bumbling\": [\"b-ah1-m b-ah-l ih-ng\", \"jj vbg\"],\n  \"bump\": [\"b-ah1-m-p\", \"vb nn vbp\"],\n  \"bumper\": [\"b-ah1-m p-er\", \"nn jj\"],\n  \"bumpy\": [\"b-ah1-m p-iy\", \"jj\"],\n  \"bun\": [\"b-ah1-n\", \"nn\"],\n  \"bunch\": [\"b-ah1-n-ch\", \"nn vb\"],\n  \"bundle\": [\"b-ah1-n d-ah-l\", \"nn vb\"],\n  \"bungalow\": [\"b-ah1-ng g-ah l-ow\", \"nn\"],\n  \"bungle\": [\"b-ah1-ng g-ah-l\", \"vb\"],\n  \"bunk\": [\"b-ah1-ng-k\", \"nn\"],\n  \"bunker\": [\"b-ah1-ng k-er\", \"nn\"],\n  \"bunny\": [\"b-ah1 n-iy\", \"nn\"],\n  \"bunt\": [\"b-ah1-n-t\", \"nn vb\"],\n  \"buoy\": [\"b-uw1 iy\", \"vb\"],\n  \"buoyancy\": [\"b-oy1 ah-n s-iy\", \"nn\"],\n  \"buoyant\": [\"b-oy1 ah-n-t\", \"jj\"],\n  \"burden\": [\"b-er1 d-ah-n\", \"nn vb vbp\"],\n  \"burdensome\": [\"b-er1 d-ah-n s-ah-m\", \"jj\"],\n  \"bureau\": [\"b-y-uh1 r-ow\", \"nn\"],\n  \"bureaucracy\": [\"b-y-uh r-aa1 k-r-ah s-iy\", \"nn\"],\n  \"bureaucrat\": [\"b-y-uh1 r-ah k-r-ae-t\", \"nn\"],\n  \"bureaucratic\": [\"b-y-uh r-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"burgeon\": [\"b-er1-jh-ah-n\", \"vb\"],\n  \"burgeoning\": [\"b-er1 jh-ah n-ih-ng\", \"vbg jj\"],\n  \"burger\": [\"b-er1 g-er\", \"nn\"],\n  \"burglar\": [\"b-er1 g-l-er\", \"nn\"],\n  \"burglary\": [\"b-er1 g-l-er iy\", \"nn\"],\n  \"burgundy\": [\"b-er1 g-ah-n d-iy\", \"nn\"],\n  \"burial\": [\"b-eh1 r-iy ah-l\", \"nn\"],\n  \"buried\": [\"b-eh1 r-iy-d\", \"vbn jj vbd\"],\n  \"burl\": [\"b-er1-l\", \"nn\"],\n  \"burlap\": [\"b-er1 l-ae-p\", \"nn\"],\n  \"burlesque\": [\"b-er l-eh1-s-k\", \"jj\"],\n  \"burley\": [\"b-er1 l-iy\", \"nn\"],\n  \"burly\": [\"b-er1 l-iy\", \"jj\"],\n  \"burn\": [\"b-er1-n\", \"vb vbp nn\"],\n  \"burne\": [\"b-er1-n\", \"vb\"],\n  \"burned\": [\"b-er1-n-d\", \"vbn jj vbd\"],\n  \"burner\": [\"b-er1 n-er\", \"nn\"],\n  \"burning\": [\"b-er1 n-ih-ng\", \"vbg jj nn\"],\n  \"burnish\": [\"b-er1-n-ih-sh\", \"vb\"],\n  \"burnout\": [\"b-er1-n aw-t\", \"nn\"],\n  \"burnt\": [\"b-er1-n-t\", \"vbn jj\"],\n  \"burp\": [\"b-er1-p\", \"vb\"],\n  \"burr\": [\"b-er1\", \"nn\"],\n  \"burrow\": [\"b-er1 ow\", \"nn vb\"],\n  \"burst\": [\"b-er1-s-t\", \"nn vbd vbn vbp vb\"],\n  \"bury\": [\"b-eh1 r-iy\", \"vb vbp\"],\n  \"bus\": [\"b-ah1-s\", \"nn vb vbp\"],\n  \"busboy\": [\"b-ah1-s b-oy\", \"nn\"],\n  \"bush\": [\"b-uh1-sh\", \"nn\"],\n  \"bushel\": [\"b-uh1 sh-ah-l\", \"nn\"],\n  \"bushy\": [\"b-uh1 sh-iy\", \"jj\"],\n  \"busied\": [\"b-ih1 z-iy-d\", \"vbd\"],\n  \"busier\": [\"b-ih1 z-iy er\", \"jjr\"],\n  \"busiest\": [\"b-ih1 z-iy ah-s-t\", \"jjs\"],\n  \"busily\": [\"b-ih1 z-ah l-iy\", \"rb\"],\n  \"business\": [\"b-ih1-z n-ah-s\", \"nn\"],\n  \"busload\": [\"b-ah-s l-ow1-d\", \"nn\"],\n  \"bust\": [\"b-ah1-s-t\", \"nn jj rb vb\"],\n  \"busted\": [\"b-ah1 s-t-ih-d\", \"jj vbd vbn\"],\n  \"buster\": [\"b-ah1 s-t-er\", \"nn\"],\n  \"bustle\": [\"b-ah1 s-ah-l\", \"nn vb\"],\n  \"bustling\": [\"b-ah1 s-ah l-ih-ng\", \"jj vbg\"],\n  \"busy\": [\"b-ih1 z-iy\", \"jj\"],\n  \"but\": [\"b-ah1-t\", \"cc\"],\n  \"butane\": [\"b-y-uw t-ey1-n\", \"nn\"],\n  \"butcher\": [\"b-uh1 ch-er\", \"nn vb\"],\n  \"butchering\": [\"b-uh1 ch-er ih-ng\", \"nn\"],\n  \"butchery\": [\"b-uh1 ch-er iy\", \"nn\"],\n  \"butler\": [\"b-ah1-t l-er\", \"nn\"],\n  \"butt\": [\"b-ah1-t\", \"nn\"],\n  \"butter\": [\"b-ah1 t-er\", \"nn\"],\n  \"butterfly\": [\"b-ah1 t-er f-l-ay\", \"nn\"],\n  \"buttery\": [\"b-ah1 t-er iy\", \"jj\"],\n  \"buttock\": [\"b-ah1 t-ah-k\", \"nn\"],\n  \"button\": [\"b-ah1 t-ah-n\", \"nn vb\"],\n  \"buttonhole\": [\"b-ah1 t-ah-n hh-ow-l\", \"nn\"],\n  \"buttress\": [\"b-ah1 t-r-ah-s\", \"vb\"],\n  \"buxom\": [\"b-ah1-k s-ah-m\", \"jj\"],\n  \"buy\": [\"b-ay1\", \"vb vbp nn jj\"],\n  \"buyback\": [\"b-ay1 b-ae-k\", \"jj nn\"],\n  \"buyer\": [\"b-ay1 er\", \"nn\"],\n  \"buying\": [\"b-ay1 ih-ng\", \"vbg jj\"],\n  \"buyout\": [\"b-ay1 aw-t\", \"nn\"],\n  \"buzz\": [\"b-ah1-z\", \"nn jj vb\"],\n  \"buzzer\": [\"b-ah1 z-er\", \"nn\"],\n  \"buzzing\": [\"b-ah1 z-ih-ng\", \"vbg jj\"],\n  \"buzzword\": [\"b-ah1-z w-er-d\", \"nn\"],\n  \"by\": [\"b-ay1\", \"in rb rp\"],\n  \"bygone\": [\"b-ay1 g-ao-n\", \"jj\"],\n  \"bylaw\": [\"b-ay1 l-ao\", \"nn\"],\n  \"byline\": [\"b-ay1 l-ay-n\", \"nn\"],\n  \"bypass\": [\"b-ay1 p-ae-s\", \"vb nn\"],\n  \"byproduct\": [\"b-ay1 p-r-aa d-ah-k-t\", \"nn\"],\n  \"bystander\": [\"b-ay1 s-t-ae-n d-er\", \"nn\"],\n  \"byte\": [\"b-ay1-t\", \"nn\"],\n  \"byway\": [\"b-ay1 w-ey\", \"nn\"],\n  \"byword\": [\"b-ay1 w-er-d\", \"nn\"],\n  \"byzantine\": [\"b-ih1 z-ah-n t-ay-n\", \"jj\"],\n  \"cab\": [\"k-ae1-b\", \"nn\"],\n  \"cabal\": [\"k-ah b-aa1-l\", \"nn\"],\n  \"cabana\": [\"k-ah b-ae1 n-ah\", \"nn\"],\n  \"cabaret\": [\"k-ae b-er ey1\", \"nn\"],\n  \"cabbage\": [\"k-ae1 b-ih-jh\", \"nn\"],\n  \"cabdriver\": [\"k-ae1-b d-r-ay v-er\", \"nn\"],\n  \"cabin\": [\"k-ae1 b-ah-n\", \"nn\"],\n  \"cabinet\": [\"k-ae1 b-ah n-ah-t\", \"nn\"],\n  \"cable\": [\"k-ey1 b-ah-l\", \"nn vb vbp\"],\n  \"cacao\": [\"k-ah k-ey1 ow\", \"nn\"],\n  \"cache\": [\"k-ae1-sh\", \"nn\"],\n  \"cachet\": [\"k-ae1 sh-ey\", \"nn\"],\n  \"cacophony\": [\"k-ae k-aa1 f-ah n-iy\", \"nn\"],\n  \"cactus\": [\"k-ae1-k t-ah-s\", \"nn\"],\n  \"cadaver\": [\"k-ah d-ae1 v-er\", \"nn\"],\n  \"cadence\": [\"k-ey1 d-ah-n-s\", \"nn\"],\n  \"cadet\": [\"k-ah d-eh1-t\", \"nn\"],\n  \"cadmium\": [\"k-ae1-d m-iy ah-m\", \"nn\"],\n  \"cadre\": [\"k-ae1 d-r-iy\", \"nn\"],\n  \"cafe\": [\"k-ah f-ey1\", \"nn\"],\n  \"cafeteria\": [\"k-ae f-ah t-ih1 r-iy ah\", \"nn\"],\n  \"caffeine\": [\"k-ae f-iy1-n\", \"nn\"],\n  \"cage\": [\"k-ey1-jh\", \"nn vb\"],\n  \"cagey\": [\"k-ey1 jh-iy\", \"jj\"],\n  \"cahoot\": [\"k-ah hh-uw1-t\", \"nn\"],\n  \"cajole\": [\"k-ah jh-ow1-l\", \"vb\"],\n  \"cajun\": [\"k-ey1 jh-ah-n\", \"jj\"],\n  \"cake\": [\"k-ey1-k\", \"nn\"],\n  \"calamitous\": [\"k-ah l-ae1 m-ah t-ah-s\", \"jj\"],\n  \"calamity\": [\"k-ah l-ae1 m-ah t-iy\", \"nn\"],\n  \"calcified\": [\"k-ae1-l s-ah f-ay-d\", \"vbd\"],\n  \"calcify\": [\"k-ae1-l-s-ah-f-ay\", \"vb\"],\n  \"calcium\": [\"k-ae1-l s-iy ah-m\", \"nn\"],\n  \"calculate\": [\"k-ae1-l k-y-ah l-ey-t\", \"vb vbp\"],\n  \"calculated\": [\"k-ae1-l k-y-ah l-ey t-ah-d\", \"vbn vbd jj\"],\n  \"calculating\": [\"k-ae1-l k-y-ah l-ey t-ih-ng\", \"vbg jj nn\"],\n  \"calculation\": [\"k-ae-l k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"calculator\": [\"k-ae1-l k-y-ah l-ey t-er\", \"nn\"],\n  \"calculus\": [\"k-ae1-l k-y-ah l-ah-s\", \"nn\"],\n  \"calendar\": [\"k-ae1 l-ah-n d-er\", \"nn\"],\n  \"calf\": [\"k-ae1-f\", \"nn\"],\n  \"caliber\": [\"k-ae1 l-ah b-er\", \"nn\"],\n  \"calibrate\": [\"k-ae1-l-ah-b-r-ey-t\", \"vb\"],\n  \"calibration\": [\"k-ae l-ah b-r-ey1 sh-ah-n\", \"nn\"],\n  \"calico\": [\"k-ae1 l-ah k-ow\", \"jj\"],\n  \"caliper\": [\"k-ae1 l-ah p-er\", \"nn\"],\n  \"calisthenics\": [\"k-ae l-ah-s th-eh1 n-ih-k\", \"nn\"],\n  \"call\": [\"k-ao1-l\", \"vb nn vbp\"],\n  \"called\": [\"k-ao1-l-d\", \"vbd vbn\"],\n  \"caller\": [\"k-ao1 l-er\", \"nn\"],\n  \"calligraphy\": [\"k-ah l-ih1 g-r-ah f-iy\", \"nn\"],\n  \"callous\": [\"k-ae1 l-ah-s\", \"jj\"],\n  \"calloused\": [\"k-ae1 l-ah-s-t\", \"jj\"],\n  \"callously\": [\"k-ae1 l-ah-s l-iy\", \"rb\"],\n  \"callousness\": [\"k-ae1 l-ah-s n-ah-s\", \"nn\"],\n  \"calm\": [\"k-aa1-m\", \"jj nn vb\"],\n  \"calmer\": [\"k-aa1 m-er\", \"jjr\"],\n  \"calming\": [\"k-aa1 m-ih-ng\", \"vbg jj\"],\n  \"calmly\": [\"k-aa1-m l-iy\", \"rb\"],\n  \"calmness\": [\"k-aa1-m n-ah-s\", \"nn\"],\n  \"caloric\": [\"k-ah l-ao1 r-ih-k\", \"jj\"],\n  \"calorie\": [\"k-ae1 l-er iy\", \"nn\"],\n  \"calve\": [\"k-ae1-v\", \"vb\"],\n  \"calypso\": [\"k-ah l-ih1-p s-ow\", \"nn jj\"],\n  \"camaraderie\": [\"k-aa m-er aa1 d-er iy\", \"nn\"],\n  \"camcorder\": [\"k-ae1-m k-ao-r d-er\", \"nn\"],\n  \"came\": [\"k-ey1-m\", \"vbd\"],\n  \"camel\": [\"k-ae1 m-ah-l\", \"nn\"],\n  \"cameo\": [\"k-ae1 m-iy ow\", \"nn jj\"],\n  \"camera\": [\"k-ae1 m-er ah\", \"nn\"],\n  \"cameraman\": [\"k-ae1 m-er ah m-ah-n\", \"nn\"],\n  \"camouflage\": [\"k-ae1 m-ah f-l-aa-zh\", \"nn vb\"],\n  \"camouflaged\": [\"k-ae1 m-ah f-l-aa-zh-d\", \"vbn jj\"],\n  \"camp\": [\"k-ae1-m-p\", \"nn vb\"],\n  \"campaign\": [\"k-ae-m p-ey1-n\", \"nn vb\"],\n  \"campaigner\": [\"k-ae-m p-ey1 n-er\", \"nn\"],\n  \"camper\": [\"k-ae1-m p-er\", \"nn\"],\n  \"campfire\": [\"k-ae1-m-p f-ay er\", \"nn\"],\n  \"campground\": [\"k-ae1-m-p g-r-aw-n-d\", \"nn\"],\n  \"campsite\": [\"k-ae1-m-p s-ay-t\", \"nn\"],\n  \"campus\": [\"k-ae1-m p-ah-s\", \"nn\"],\n  \"can\": [\"k-ae1-n\", \"md nn vb\"],\n  \"canal\": [\"k-ah n-ae1-l\", \"nn\"],\n  \"canard\": [\"k-ah n-aa1-r-d\", \"nn\"],\n  \"cancel\": [\"k-ae1-n s-ah-l\", \"vb nn\"],\n  \"canceled\": [\"k-ae1-n s-ah-l-d\", \"vbn vbd jj\"],\n  \"cancellation\": [\"k-ae-n s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"cancelled\": [\"k-ae1-n s-ah-l-d\", \"vbn\"],\n  \"cancer\": [\"k-ae1-n s-er\", \"nn\"],\n  \"cancerous\": [\"k-ae1-n s-er ah-s\", \"jj\"],\n  \"candid\": [\"k-ae1-n d-ah-d\", \"jj\"],\n  \"candidacy\": [\"k-ae1-n d-ih d-ah s-iy\", \"nn\"],\n  \"candidate\": [\"k-ae1-n d-ah d-ey-t\", \"nn\"],\n  \"candidly\": [\"k-ae1-n d-ih-d l-iy\", \"rb\"],\n  \"candle\": [\"k-ae1-n d-ah-l\", \"nn\"],\n  \"candlelight\": [\"k-ae1-n d-ah-l l-ay-t\", \"nn\"],\n  \"candor\": [\"k-ae1-n d-er\", \"nn\"],\n  \"candy\": [\"k-ae1-n d-iy\", \"nn\"],\n  \"cane\": [\"k-ey1-n\", \"nn\"],\n  \"canine\": [\"k-ey1 n-ay-n\", \"jj nn\"],\n  \"caning\": [\"k-ey1 n-ih-ng\", \"nn\"],\n  \"canister\": [\"k-ae1 n-ah s-t-er\", \"nn\"],\n  \"canker\": [\"k-ae1-ng k-er\", \"nn\"],\n  \"canned\": [\"k-ae1-n-d\", \"jj vbn\"],\n  \"cannery\": [\"k-ae1 n-er iy\", \"nn\"],\n  \"cannibalism\": [\"k-ae1 n-ah b-ah l-ih z-ah-m\", \"nn\"],\n  \"cannibalize\": [\"k-ae1 n-ah b-ah l-ay-z\", \"vb\"],\n  \"cannister\": [\"k-ae1 n-ih s-t-er\", \"nn\"],\n  \"cannon\": [\"k-ae1 n-ah-n\", \"nn\"],\n  \"cannot\": [\"k-ae1 n-aa-t\", \"md\"],\n  \"canny\": [\"k-ae1 n-iy\", \"jj\"],\n  \"canoe\": [\"k-ah n-uw1\", \"nn vb\"],\n  \"canon\": [\"k-ae1 n-ah-n\", \"nn\"],\n  \"canopy\": [\"k-ae1 n-ah p-iy\", \"nn\"],\n  \"cantaloupe\": [\"k-ae1-n t-ah l-ow-p\", \"nn\"],\n  \"canteen\": [\"k-ae-n t-iy1-n\", \"nn\"],\n  \"canter\": [\"k-ae1-n t-er\", \"nn vb\"],\n  \"canvas\": [\"k-ae1-n v-ah-s\", \"nn\"],\n  \"canvassed\": [\"k-ae1-n v-ah-s-t\", \"vbn\"],\n  \"canvasser\": [\"k-ae1-n v-ah s-er\", \"nn\"],\n  \"canyon\": [\"k-ae1 n-y-ah-n\", \"nn\"],\n  \"can't\": [\"k-ae1-n-t\", \"md\"],\n  \"cap\": [\"k-ae1-p\", \"nn vbp vb\"],\n  \"capability\": [\"k-ey p-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"capable\": [\"k-ey1 p-ah b-ah-l\", \"jj\"],\n  \"capacious\": [\"k-ah p-ey1 sh-ah-s\", \"jj\"],\n  \"capacitance\": [\"k-ah p-ae1 s-ah t-ah-n-s\", \"nn\"],\n  \"capacitor\": [\"k-ah p-ae1 s-ah t-er\", \"nn\"],\n  \"capacity\": [\"k-ah p-ae1 s-ah t-iy\", \"nn\"],\n  \"cape\": [\"k-ey1-p\", \"nn\"],\n  \"caper\": [\"k-ey1 p-er\", \"nn\"],\n  \"capillary\": [\"k-ae1 p-ah l-eh r-iy\", \"nn\"],\n  \"capital\": [\"k-ae1 p-ah t-ah-l\", \"nn jj\"],\n  \"capitalism\": [\"k-ae1 p-ih t-ah l-ih z-ah-m\", \"nn\"],\n  \"capitalist\": [\"k-ae1 p-ah t-ah l-ah-s-t\", \"jj nn\"],\n  \"capitalistic\": [\"k-ae p-ih t-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"capitalization\": [\"k-ae p-ih t-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"capitalize\": [\"k-ae1 p-ah t-ah l-ay-z\", \"vb\"],\n  \"capitalized\": [\"k-ae1 p-ih t-ah l-ay-z-d\", \"vbn jj vbd\"],\n  \"capitulate\": [\"k-ah p-ih1 ch-uw l-ey-t\", \"vb\"],\n  \"capitulation\": [\"k-ah p-ih ch-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"capo\": [\"k-aa1 p-ow\", \"nn\"],\n  \"cappuccino\": [\"k-ae p-uw ch-iy1 n-ow\", \"nn\"],\n  \"capricious\": [\"k-ah p-r-ih1 sh-ah-s\", \"jj\"],\n  \"capriciously\": [\"k-ah p-r-ih1 sh-ih-s l-iy\", \"rb\"],\n  \"capstan\": [\"k-ae1-p s-t-ah-n\", \"nn\"],\n  \"capsule\": [\"k-ae1-p s-ah-l\", \"nn\"],\n  \"captain\": [\"k-ae1-p t-ah-n\", \"nn vb vbp\"],\n  \"caption\": [\"k-ae1-p sh-ah-n\", \"nn\"],\n  \"captivate\": [\"k-ae1-p-t-ih-v-ey-t\", \"vb\"],\n  \"captivated\": [\"k-ae1-p t-ih v-ey t-ih-d\", \"vbn vbd jj\"],\n  \"captivating\": [\"k-ae1-p t-ih v-ey t-ih-ng\", \"jj vbg\"],\n  \"captive\": [\"k-ae1-p t-ih-v\", \"jj nn\"],\n  \"captivity\": [\"k-ae-p t-ih1 v-ah t-iy\", \"nn\"],\n  \"captor\": [\"k-ae1-p t-er\", \"nn\"],\n  \"capture\": [\"k-ae1-p ch-er\", \"vb vbp nn\"],\n  \"captured\": [\"k-ae1-p ch-er-d\", \"vbn jj vbd\"],\n  \"car\": [\"k-aa1-r\", \"nn\"],\n  \"caramel\": [\"k-eh1 r-ah m-ah-l\", \"nn\"],\n  \"carat\": [\"k-eh1 r-ah-t\", \"nn\"],\n  \"caravan\": [\"k-ae1 r-ah v-ae-n\", \"nn\"],\n  \"caraway\": [\"k-ae1 r-ah w-ey\", \"jj\"],\n  \"carbide\": [\"k-aa1-r b-ay-d\", \"nn\"],\n  \"carbine\": [\"k-aa1-r b-ay-n\", \"nn\"],\n  \"carbohydrate\": [\"k-aa-r b-ow hh-ay1 d-r-ey-t\", \"nn\"],\n  \"carbon\": [\"k-aa1-r b-ah-n\", \"nn\"],\n  \"carbonate\": [\"k-aa1-r b-ah n-ey-t\", \"nn\"],\n  \"carcass\": [\"k-aa1-r k-ah-s\", \"nn\"],\n  \"carcinogen\": [\"k-aa-r s-ih1 n-ah jh-ah-n\", \"nn\"],\n  \"carcinogenic\": [\"k-aa-r s-ah n-ow jh-eh1 n-ih-k\", \"jj\"],\n  \"carcinoma\": [\"k-aa-r s-ah n-ow1 m-ah\", \"nn\"],\n  \"card\": [\"k-aa1-r-d\", \"nn\"],\n  \"cardboard\": [\"k-aa1-r-d b-ao-r-d\", \"nn jj\"],\n  \"cardholder\": [\"k-aa1-r-d hh-ow-l d-er\", \"nn\"],\n  \"cardiac\": [\"k-aa1-r d-iy ae-k\", \"jj\"],\n  \"cardigan\": [\"k-aa1-r d-ih g-ah-n\", \"nn\"],\n  \"cardinal\": [\"k-aa1-r d-ah n-ah-l\", \"jj nn\"],\n  \"cardiologist\": [\"k-aa-r d-iy aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"cardiovascular\": [\"k-aa-r d-iy ow v-ae1 s-k-y-ah l-er\", \"jj\"],\n  \"care\": [\"k-eh1-r\", \"nn vb vbp\"],\n  \"careen\": [\"k-er iy1-n\", \"vb\"],\n  \"career\": [\"k-er ih1-r\", \"nn\"],\n  \"careerist\": [\"k-er ih1 r-ih-s-t\", \"nn\"],\n  \"carefree\": [\"k-eh1-r f-r-iy\", \"jj\"],\n  \"careful\": [\"k-eh1-r f-ah-l\", \"jj\"],\n  \"carefully\": [\"k-eh1-r f-ah l-iy\", \"rb\"],\n  \"caregiver\": [\"k-eh1-r g-ih v-er\", \"nn\"],\n  \"careless\": [\"k-eh1-r l-ah-s\", \"jj\"],\n  \"carelessly\": [\"k-eh1-r l-ah-s l-iy\", \"rb\"],\n  \"carelessness\": [\"k-eh1-r l-ah-s n-ah-s\", \"nn\"],\n  \"caress\": [\"k-er eh1-s\", \"vb\"],\n  \"caretaker\": [\"k-eh1-r t-ey k-er\", \"nn\"],\n  \"cargo\": [\"k-aa1-r g-ow\", \"nn\"],\n  \"caribou\": [\"k-eh1 r-ih b-uw\", \"nn\"],\n  \"caricature\": [\"k-eh1 r-ah k-ah ch-er\", \"nn vb\"],\n  \"caricaturist\": [\"k-eh1 r-ah k-ah ch-er ah-s-t\", \"nn\"],\n  \"caring\": [\"k-eh1 r-ih-ng\", \"vbg jj nn\"],\n  \"carload\": [\"k-aa1-r l-ow-d\", \"nn\"],\n  \"carnage\": [\"k-aa1-r n-ih-jh\", \"nn\"],\n  \"carnal\": [\"k-aa1-r n-ah-l\", \"jj\"],\n  \"carnival\": [\"k-aa1-r n-ah v-ah-l\", \"nn\"],\n  \"carnivore\": [\"k-aa1-r n-ah v-ao-r\", \"nn\"],\n  \"carnivorous\": [\"k-aa-r n-ih1 v-er ah-s\", \"jj\"],\n  \"carob\": [\"k-eh1 r-ah-b\", \"nn\"],\n  \"carousel\": [\"k-eh1 r-ah s-eh-l\", \"nn\"],\n  \"carousing\": [\"k-er aw1 z-ih-ng\", \"nn\"],\n  \"carp\": [\"k-aa1-r-p\", \"vbp vb nn\"],\n  \"carpenter\": [\"k-aa1-r p-ah-n t-er\", \"nn\"],\n  \"carpentry\": [\"k-aa1-r p-ah-n t-r-iy\", \"nn\"],\n  \"carpet\": [\"k-aa1-r p-ah-t\", \"nn vb\"],\n  \"carpetbagger\": [\"k-aa1-r p-ah-t b-ae g-er\", \"nn\"],\n  \"carpeting\": [\"k-aa1-r p-ah t-ih-ng\", \"nn\"],\n  \"carping\": [\"k-aa1-r p-ih-ng\", \"vbg jj\"],\n  \"carport\": [\"k-aa1-r p-ao-r-t\", \"nn\"],\n  \"carriage\": [\"k-ae1 r-ih-jh\", \"nn\"],\n  \"carried\": [\"k-ae1 r-iy-d\", \"vbd vbn\"],\n  \"carrier\": [\"k-ae1 r-iy er\", \"nn\"],\n  \"carrion\": [\"k-eh1 r-iy ah-n\", \"jj nn\"],\n  \"carrot\": [\"k-ae1 r-ah-t\", \"nn\"],\n  \"carry\": [\"k-ae1 r-iy\", \"vb nn vbp\"],\n  \"carrying\": [\"k-ae1 r-iy ih-ng\", \"vbg jj nn\"],\n  \"carryover\": [\"k-eh1 r-y-ow v-er\", \"nn\"],\n  \"cart\": [\"k-aa1-r-t\", \"nn vbp vb\"],\n  \"cartel\": [\"k-aa-r t-eh1-l\", \"nn\"],\n  \"cartilage\": [\"k-aa1-r t-ah l-ah-jh\", \"nn\"],\n  \"carton\": [\"k-aa1-r t-ah-n\", \"nn\"],\n  \"cartoon\": [\"k-aa-r t-uw1-n\", \"nn\"],\n  \"cartoonist\": [\"k-aa-r t-uw1 n-ah-s-t\", \"nn\"],\n  \"cartridge\": [\"k-aa1-r t-r-ah-jh\", \"nn\"],\n  \"cartwheel\": [\"k-aa1-r-t w-iy-l\", \"nn\"],\n  \"carve\": [\"k-aa1-r-v\", \"vb vbp\"],\n  \"carved\": [\"k-aa1-r-v-d\", \"vbn jj vbd\"],\n  \"cascade\": [\"k-ae s-k-ey1-d\", \"nn vb\"],\n  \"cascading\": [\"k-ae s-k-ey1 d-ih-ng\", \"vbg jj\"],\n  \"case\": [\"k-ey1-s\", \"nn vb\"],\n  \"caseload\": [\"k-ey1-s l-ow-d\", \"nn\"],\n  \"caseworker\": [\"k-ey1-s w-er k-er\", \"nn\"],\n  \"cash\": [\"k-ae1-sh\", \"nn vb\"],\n  \"cashew\": [\"k-ae1 sh-uw\", \"nn\"],\n  \"cashflow\": [\"k-ae1-sh f-l-ow\", \"nn\"],\n  \"cashier\": [\"k-ae sh-ih1-r\", \"nn\"],\n  \"cashmere\": [\"k-ae1-zh m-ih-r\", \"nn\"],\n  \"casing\": [\"k-ey1 s-ih-ng\", \"nn\"],\n  \"casino\": [\"k-ah s-iy1 n-ow\", \"nn\"],\n  \"cask\": [\"k-ae1-s-k\", \"nn\"],\n  \"casket\": [\"k-ae1 s-k-ah-t\", \"nn\"],\n  \"cassette\": [\"k-ah s-eh1-t\", \"nn\"],\n  \"cast\": [\"k-ae1-s-t\", \"nn vb vbd vbn vbp\"],\n  \"caste\": [\"k-ae1-s-t\", \"nn\"],\n  \"caster\": [\"k-ae1 s-t-er\", \"nn\"],\n  \"castigate\": [\"k-ae1 s-t-ah g-ey-t\", \"vb\"],\n  \"castle\": [\"k-ae1 s-ah-l\", \"nn\"],\n  \"castor\": [\"k-ae1 s-t-er\", \"nn\"],\n  \"casual\": [\"k-ae1 zh-ah w-ah-l\", \"jj rb\"],\n  \"casually\": [\"k-ae1 zh-ah-w ah l-iy\", \"rb\"],\n  \"casualty\": [\"k-ae1 zh-ah w-ah-l t-iy\", \"nn\"],\n  \"cat\": [\"k-ae1-t\", \"nn\"],\n  \"cataclysmic\": [\"k-ae t-ah k-l-ih1-z m-ih-k\", \"jj\"],\n  \"catalog\": [\"k-ae1 t-ah l-ao-g\", \"nn vb\"],\n  \"catalogue\": [\"k-ae1 t-ah l-ao-g\", \"nn vb\"],\n  \"catalyst\": [\"k-ae1 t-ah l-ah-s-t\", \"nn\"],\n  \"catalytic\": [\"k-ae t-ah l-ih1 t-ih-k\", \"jj\"],\n  \"catalyze\": [\"k-ae1-t-ah-l-ay-z\", \"vb\"],\n  \"catamaran\": [\"k-ae t-ah m-er ae1-n\", \"nn\"],\n  \"catapult\": [\"k-ae1 t-ah p-ah-l-t\", \"vb vbp\"],\n  \"cataract\": [\"k-ae1 t-er ae-k-t-s\", \"nn\"],\n  \"catastrophe\": [\"k-ah t-ae1-s t-r-ah f-iy\", \"nn\"],\n  \"catastrophic\": [\"k-ae t-ah s-t-r-aa1 f-ih-k\", \"jj\"],\n  \"catbird\": [\"k-ae1-t b-er-d\", \"jj\"],\n  \"catcall\": [\"k-ae1-t k-ao-l\", \"nn\"],\n  \"catch\": [\"k-ae1-ch\", \"vb vbp nn\"],\n  \"catchall\": [\"k-ae1 ch-ao-l\", \"nn\"],\n  \"catcher\": [\"k-ae1 ch-er\", \"nn\"],\n  \"catchup\": [\"k-ae1 ch-ah-p\", \"jj nn\"],\n  \"catchword\": [\"k-ae1-ch w-er-d\", \"nn\"],\n  \"catchy\": [\"k-ae1 ch-iy\", \"jj\"],\n  \"catechism\": [\"k-ae1 t-ah k-ih z-ah-m\", \"nn\"],\n  \"categorical\": [\"k-ae t-ah g-aa1 r-ih k-ah-l\", \"jj\"],\n  \"categorically\": [\"k-ae t-ah g-aa1 r-ih-k l-iy\", \"rb\"],\n  \"categorize\": [\"k-ae1 t-ah g-er ay-z\", \"vb\"],\n  \"category\": [\"k-ae1 t-ah g-ao r-iy\", \"nn\"],\n  \"cater\": [\"k-ey1 t-er\", \"vbp vb\"],\n  \"catered\": [\"k-ey1 t-er-d\", \"vbd jj\"],\n  \"caterer\": [\"k-ey1 t-er er\", \"nn\"],\n  \"caterpillar\": [\"k-ae1 t-ah p-ih l-er\", \"nn\"],\n  \"catfish\": [\"k-ae1-t f-ih-sh\", \"nn\"],\n  \"catharsis\": [\"k-ah th-aa1-r s-ah-s\", \"nn\"],\n  \"cathartic\": [\"k-ah th-aa1-r t-ih-k\", \"jj\"],\n  \"cathedral\": [\"k-ah th-iy1 d-r-ah-l\", \"nn\"],\n  \"catheter\": [\"k-ae1 th-ah t-er\", \"nn\"],\n  \"cathode\": [\"k-ae1 th-ow-d\", \"nn\"],\n  \"catlike\": [\"k-ae1-t l-ay-k\", \"jj\"],\n  \"catsup\": [\"k-eh1 ch-ah-p\", \"nn\"],\n  \"cattle\": [\"k-ae1 t-ah-l\", \"nn\"],\n  \"catty\": [\"k-ae1 t-iy\", \"jj\"],\n  \"caucus\": [\"k-ao1 k-ah-s\", \"nn vb\"],\n  \"caught\": [\"k-aa1-t\", \"vbn vbd\"],\n  \"cauliflower\": [\"k-aa1 l-ah f-l-aw er\", \"nn\"],\n  \"causal\": [\"k-ao1 z-ah-l\", \"jj\"],\n  \"causative\": [\"k-aa1 z-ah t-ih-v\", \"jj\"],\n  \"cause\": [\"k-aa1-z\", \"nn vb vbg vbp\"],\n  \"causeway\": [\"k-aa1-z w-ey\", \"nn\"],\n  \"caustic\": [\"k-aa1 s-t-ih-k\", \"jj\"],\n  \"caution\": [\"k-aa1 sh-ah-n\", \"nn vbp vb\"],\n  \"cautionary\": [\"k-ao1 sh-ah-n eh r-iy\", \"jj\"],\n  \"cautious\": [\"k-ao1 sh-ah-s\", \"jj\"],\n  \"cautiously\": [\"k-ao1 sh-ah-s l-iy\", \"rb\"],\n  \"cautiousness\": [\"k-ao1 sh-ah-s n-ah-s\", \"nn\"],\n  \"cavalier\": [\"k-ae v-ah l-ih1-r\", \"jj\"],\n  \"cavalry\": [\"k-ae1 v-ah-l r-iy\", \"nn\"],\n  \"cave\": [\"k-ey1-v\", \"nn vb\"],\n  \"caveat\": [\"k-ey1 v-iy ae-t\", \"nn\"],\n  \"cavern\": [\"k-ae1 v-er-n\", \"nn\"],\n  \"cavernous\": [\"k-ae1 v-er n-ah-s\", \"jj\"],\n  \"caviar\": [\"k-ae1 v-iy aa-r\", \"nn\"],\n  \"cavity\": [\"k-ae1 v-ah t-iy\", \"nn\"],\n  \"cavort\": [\"k-ah v-ao1-r-t\", \"vbp vb\"],\n  \"cayenne\": [\"k-ay eh1-n\", \"nn\"],\n  \"cease\": [\"s-iy1-s\", \"vb vbp\"],\n  \"ceasefire\": [\"s-iy1-s f-ay1 er\", \"nn\"],\n  \"ceaseless\": [\"s-iy1-s l-ih-s\", \"jj\"],\n  \"ceaselessly\": [\"s-iy1-z l-ah-s l-iy\", \"rb\"],\n  \"cedar\": [\"s-iy1 d-er\", \"nn\"],\n  \"cede\": [\"s-iy1-d\", \"vb\"],\n  \"ceiling\": [\"s-iy1 l-ih-ng\", \"nn\"],\n  \"celebrant\": [\"s-eh1 l-ah b-r-ah-n-t\", \"nn\"],\n  \"celebrate\": [\"s-eh1 l-ah b-r-ey-t\", \"vb vbp\"],\n  \"celebrated\": [\"s-eh1 l-ah b-r-ey t-ah-d\", \"vbd jj vbn\"],\n  \"celebration\": [\"s-eh l-ah b-r-ey1 sh-ah-n\", \"nn\"],\n  \"celebrity\": [\"s-ah l-eh1 b-r-ih t-iy\", \"nn\"],\n  \"celery\": [\"s-eh1 l-er iy\", \"nn\"],\n  \"celestial\": [\"s-ah l-eh1 s-ch-ah-l\", \"jj\"],\n  \"cell\": [\"s-eh1-l\", \"nn\"],\n  \"cellar\": [\"s-eh1 l-er\", \"nn\"],\n  \"cellist\": [\"ch-eh1 l-ah-s-t\", \"nn\"],\n  \"cellophane\": [\"s-eh1 l-ah f-ey-n\", \"nn\"],\n  \"cellular\": [\"s-eh1-l y-ah l-er\", \"jj\"],\n  \"cellulose\": [\"s-eh1-l y-ah l-ow-s\", \"nn\"],\n  \"cement\": [\"s-ah m-eh1-n-t\", \"nn vb\"],\n  \"cemetery\": [\"s-eh1 m-ah t-eh r-iy\", \"nn\"],\n  \"censor\": [\"s-eh1-n s-er\", \"vbp vb\"],\n  \"censorship\": [\"s-eh1-n s-er sh-ih-p\", \"nn\"],\n  \"censure\": [\"s-eh1-n sh-er\", \"nn vb\"],\n  \"census\": [\"s-eh1-n s-ah-s\", \"nn\"],\n  \"cent\": [\"s-eh1-n-t\", \"nn\"],\n  \"centaur\": [\"s-eh1-n t-ao-r\", \"nn\"],\n  \"centenarian\": [\"s-eh-n t-ah n-eh1 r-iy ah-n\", \"nn\"],\n  \"centenary\": [\"s-eh1-n t-ah n-eh r-iy\", \"jj\"],\n  \"centennial\": [\"s-eh-n t-eh1 n-iy ah-l\", \"nn jj\"],\n  \"center\": [\"s-eh1-n t-er\", \"nn jj rb vb vbp\"],\n  \"centerfielder\": [\"s-eh1-n t-er f-iy-l d-er\", \"nn\"],\n  \"centerfold\": [\"s-eh1-n t-er f-ow-l-d\", \"nn\"],\n  \"centerpiece\": [\"s-eh1-n t-er p-iy-s\", \"nn\"],\n  \"centigrade\": [\"s-eh1-n t-ah g-r-ey-d\", \"jj\"],\n  \"centimeter\": [\"s-eh1-n t-ah m-iy t-er\", \"nn\"],\n  \"central\": [\"s-eh1-n t-r-ah-l\", \"jj nn\"],\n  \"centralization\": [\"s-eh-n t-r-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"centralize\": [\"s-eh1-n t-r-ah l-ay-z\", \"vb\"],\n  \"centralized\": [\"s-eh1-n t-r-ah l-ay-z-d\", \"jj vbd vbn\"],\n  \"centralizing\": [\"s-eh1-n t-r-ah l-ay z-ih-ng\", \"vbg jj\"],\n  \"centrally\": [\"s-eh1-n t-r-ah l-iy\", \"rb\"],\n  \"centre\": [\"s-eh1-n t-er\", \"nn\"],\n  \"centrex\": [\"s-eh1-n t-r-ah-k-s\", \"nn\"],\n  \"centrifugal\": [\"s-eh-n t-r-ih1 f-y-ih g-ah-l\", \"jj\"],\n  \"centrifuge\": [\"s-eh1-n t-r-ah f-y-uw-jh\", \"nn\"],\n  \"centrist\": [\"s-eh1-n t-r-ih-s-t\", \"jj\"],\n  \"centum\": [\"k-eh1-n t-ah-m\", \"nn\"],\n  \"century\": [\"s-eh1-n ch-er iy\", \"nn\"],\n  \"ceramic\": [\"s-er ae1 m-ih-k\", \"jj\"],\n  \"cereal\": [\"s-ih1 r-iy ah-l\", \"nn\"],\n  \"cerebral\": [\"s-eh1 r-ah b-r-ah-l\", \"jj\"],\n  \"ceremonial\": [\"s-eh r-ah m-ow1 n-iy ah-l\", \"jj\"],\n  \"ceremony\": [\"s-eh1 r-ah m-ow n-iy\", \"nn\"],\n  \"certain\": [\"s-er1 t-ah-n\", \"jj rb\"],\n  \"certainly\": [\"s-er1 t-ah-n l-iy\", \"rb\"],\n  \"certainty\": [\"s-er1 t-ah-n t-iy\", \"nn\"],\n  \"certificate\": [\"s-er t-ih1 f-ih k-ah-t\", \"nn\"],\n  \"certification\": [\"s-er t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"certified\": [\"s-er1 t-ah f-ay-d\", \"vbn jj\"],\n  \"certify\": [\"s-er1 t-ah f-ay\", \"vb\"],\n  \"cervical\": [\"s-er1 v-ah k-ah-l\", \"jj\"],\n  \"cervix\": [\"s-er1 v-ih-k-s\", \"nn\"],\n  \"cessation\": [\"s-eh s-ey1 sh-ah-n\", \"nn\"],\n  \"chafe\": [\"ch-ey1-f\", \"vbp vb\"],\n  \"chaff\": [\"ch-ae1-f\", \"nn\"],\n  \"chafing\": [\"ch-ey1 f-ih-ng\", \"vbg jj\"],\n  \"chagrin\": [\"sh-ah g-r-ih1-n\", \"nn\"],\n  \"chain\": [\"ch-ey1-n\", \"nn vb vbp\"],\n  \"chained\": [\"ch-ey1-n-d\", \"vbd vbn jj\"],\n  \"chair\": [\"ch-eh1-r\", \"nn vb\"],\n  \"chaired\": [\"ch-eh1-r-d\", \"vbn jj vbd\"],\n  \"chairing\": [\"ch-eh1 r-ih-ng\", \"nn\"],\n  \"chairman\": [\"ch-eh1-r m-ah-n\", \"nn\"],\n  \"chairmanship\": [\"ch-eh1-r m-ah-n sh-ih-p\", \"nn\"],\n  \"chairwoman\": [\"ch-eh1-r w-uh m-ah-n\", \"nn\"],\n  \"chaise\": [\"sh-ey1-z\", \"nn\"],\n  \"chalk\": [\"ch-aa1-k\", \"nn vbp vb\"],\n  \"challenge\": [\"ch-ae1 l-ah-n-jh\", \"nn vb vbp\"],\n  \"challenger\": [\"ch-ae1 l-ah-n jh-er\", \"nn\"],\n  \"challenging\": [\"ch-ae1 l-ah-n jh-ih-ng\", \"vbg jj\"],\n  \"chamber\": [\"ch-ey1-m b-er\", \"nn vb\"],\n  \"chameleon\": [\"ch-ah m-eh1 l-iy ah-n\", \"nn\"],\n  \"champ\": [\"ch-ae1-m-p\", \"nn\"],\n  \"champagne\": [\"sh-ae-m p-ey1-n\", \"nn\"],\n  \"champion\": [\"ch-ae1-m p-iy ah-n\", \"nn jj vb vbp\"],\n  \"championship\": [\"ch-ae1-m p-iy ah-n sh-ih-p\", \"nn\"],\n  \"chance\": [\"ch-ae1-n-s\", \"nn jj vb vbp\"],\n  \"chancellor\": [\"ch-ae1-n s-ah l-er\", \"nn\"],\n  \"chancery\": [\"ch-ae1-n s-er iy\", \"nn\"],\n  \"chancy\": [\"ch-ae1-n s-iy\", \"jj\"],\n  \"chandelier\": [\"sh-ae-n d-ah l-ih1-r\", \"nn\"],\n  \"change\": [\"ch-ey1-n-jh\", \"nn vbp vb\"],\n  \"changeable\": [\"ch-ey1-n jh-ah b-ah-l\", \"jj\"],\n  \"changed\": [\"ch-ey1-n-jh-d\", \"vbn vbd jj\"],\n  \"changeover\": [\"ch-ey1-n-jh ow v-er\", \"nn\"],\n  \"changing\": [\"ch-ey1-n jh-ih-ng\", \"vbg jj nn\"],\n  \"channel\": [\"ch-ae1 n-ah-l\", \"nn vb vbp\"],\n  \"chant\": [\"ch-ae1-n-t\", \"nn vb\"],\n  \"chaos\": [\"k-ey1 aa-s\", \"nn\"],\n  \"chaotic\": [\"k-ey aa1 t-ih-k\", \"jj\"],\n  \"chap\": [\"ch-ae1-p\", \"nn\"],\n  \"chapel\": [\"ch-ae1 p-ah-l\", \"nn\"],\n  \"chaperone\": [\"sh-ae1 p-er ow-n\", \"nn\"],\n  \"chaplain\": [\"ch-ae1-p l-ah-n\", \"nn\"],\n  \"chapter\": [\"ch-ae1-p t-er\", \"nn\"],\n  \"char\": [\"ch-aa1-r\", \"vb\"],\n  \"character\": [\"k-eh1 r-ih-k t-er\", \"nn\"],\n  \"characteristic\": [\"k-eh r-ah-k t-er ih1 s-t-ih-k\", \"jj nn\"],\n  \"characteristically\": [\"k-eh r-ah-k t-er ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"characterization\": [\"k-eh r-ah-k t-er ih z-ey1 sh-ah-n\", \"nn\"],\n  \"characterize\": [\"k-eh1 r-ah-k t-er ay-z\", \"vb vbp\"],\n  \"characterized\": [\"k-eh1 r-ah-k t-er ay-z-d\", \"vbn vbd jj\"],\n  \"charcoal\": [\"ch-aa1-r k-ow-l\", \"nn\"],\n  \"charge\": [\"ch-aa1-r-jh\", \"nn vbp vb\"],\n  \"chargeable\": [\"ch-aa1-r jh-ah b-ah-l\", \"jj\"],\n  \"charged\": [\"ch-aa1-r-jh-d\", \"vbn vbd jj\"],\n  \"chariot\": [\"ch-eh1 r-iy ah-t\", \"nn\"],\n  \"charisma\": [\"k-er ih1-z m-ah\", \"nn\"],\n  \"charismatic\": [\"k-eh r-ih-z m-ae1 t-ih-k\", \"jj\"],\n  \"charitable\": [\"ch-ae1 r-ah t-ah b-ah-l\", \"jj\"],\n  \"charitably\": [\"ch-eh1 r-ih t-ah b-l-iy\", \"rb\"],\n  \"charity\": [\"ch-eh1 r-ih t-iy\", \"nn\"],\n  \"charlatan\": [\"sh-aa1-r l-ah t-ah-n\", \"nn\"],\n  \"charlotte\": [\"sh-aa1-r l-ah-t\", \"nn\"],\n  \"charm\": [\"ch-aa1-r-m\", \"nn vb\"],\n  \"charmer\": [\"ch-aa1-r m-er\", \"nn\"],\n  \"charming\": [\"ch-aa1-r m-ih-ng\", \"jj\"],\n  \"charmingly\": [\"ch-aa1-r m-ih-ng l-iy\", \"rb\"],\n  \"charred\": [\"ch-aa1-r-d\", \"jj vbn\"],\n  \"chart\": [\"ch-aa1-r-t\", \"nn vb vbp\"],\n  \"charter\": [\"ch-aa1-r t-er\", \"nn jj vb\"],\n  \"chartered\": [\"ch-aa1-r t-er-d\", \"jj vbn vbd\"],\n  \"chartist\": [\"ch-aa1-r t-ih-s-t\", \"nn\"],\n  \"chary\": [\"ch-aa1 r-iy\", \"jj\"],\n  \"chase\": [\"ch-ey1-s\", \"nn jj vb vbp\"],\n  \"chaser\": [\"ch-ey1 s-er\", \"nn\"],\n  \"chasm\": [\"k-ae1 z-ah-m\", \"nn\"],\n  \"chassis\": [\"ch-ae1 s-iy\", \"nn\"],\n  \"chaste\": [\"ch-ey1-s-t\", \"jj\"],\n  \"chasten\": [\"ch-ey1-s-ah-n\", \"vb\"],\n  \"chastise\": [\"ch-ae-s-t-ay1-z\", \"vb\"],\n  \"chastity\": [\"ch-ae1 s-t-ah t-iy\", \"nn\"],\n  \"chat\": [\"ch-ae1-t\", \"nn vbp vb\"],\n  \"chateau\": [\"sh-ae t-ow1\", \"nn\"],\n  \"chateaux\": [\"sh-ah t-ow1\", \"nn\"],\n  \"chatter\": [\"ch-ae1 t-er\", \"nn vb vbp\"],\n  \"chatty\": [\"ch-ae1 t-iy\", \"jj\"],\n  \"chauffeur\": [\"sh-ow f-er1\", \"nn vb\"],\n  \"chauvinism\": [\"sh-ow1 v-ah n-ih z-ah-m\", \"nn\"],\n  \"chauvinistic\": [\"ch-ow v-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"chaw\": [\"ch-ao1\", \"nn\"],\n  \"cheap\": [\"ch-iy1-p\", \"jj nn rb\"],\n  \"cheapen\": [\"ch-iy1-p-ah-n\", \"vb\"],\n  \"cheaper\": [\"ch-iy1 p-er\", \"jjr rbr\"],\n  \"cheapest\": [\"ch-iy1 p-ah-s-t\", \"jjs\"],\n  \"cheaply\": [\"ch-iy1-p l-iy\", \"rb\"],\n  \"cheat\": [\"ch-iy1-t\", \"vb vbp\"],\n  \"cheated\": [\"ch-iy1 t-ah-d\", \"vbn jj vbd\"],\n  \"cheater\": [\"ch-iy1 t-er\", \"nn\"],\n  \"check\": [\"ch-eh1-k\", \"nn vbp vb\"],\n  \"checkbook\": [\"ch-eh1-k b-uh-k\", \"nn\"],\n  \"checked\": [\"ch-eh1-k-t\", \"vbn vbd jj\"],\n  \"checker\": [\"ch-eh1 k-er\", \"nn\"],\n  \"checklist\": [\"ch-eh1-k l-ih-s-t\", \"nn\"],\n  \"checkout\": [\"ch-eh1-k aw-t\", \"nn\"],\n  \"checkpoint\": [\"ch-eh1-k p-oy-n-t\", \"nn\"],\n  \"checkup\": [\"ch-eh1-k ah-p\", \"nn\"],\n  \"cheek\": [\"ch-iy1-k\", \"nn\"],\n  \"cheekbone\": [\"ch-iy1-k b-ow-n\", \"nn\"],\n  \"cheeky\": [\"ch-iy1 k-iy\", \"jj\"],\n  \"cheer\": [\"ch-ih1-r\", \"nn vb vbp\"],\n  \"cheerful\": [\"ch-ih1-r f-ah-l\", \"jj\"],\n  \"cheerfully\": [\"ch-ih1-r f-ah l-iy\", \"rb\"],\n  \"cheerleader\": [\"ch-ih1-r l-iy d-er\", \"nn\"],\n  \"cheerleading\": [\"ch-ih1-r l-iy d-ih-ng\", \"nn\"],\n  \"cheery\": [\"ch-ih1 r-iy\", \"jj\"],\n  \"cheese\": [\"ch-iy1-z\", \"nn\"],\n  \"cheeseburger\": [\"ch-iy1-z b-er g-er\", \"nn\"],\n  \"cheesecake\": [\"ch-iy1-z k-ey-k\", \"nn\"],\n  \"cheesy\": [\"ch-iy1 z-iy\", \"jj\"],\n  \"cheetah\": [\"ch-iy1 t-ah\", \"nn\"],\n  \"cheetal\": [\"ch-iy1 t-ah-l\", \"jj\"],\n  \"chef\": [\"sh-eh1-f\", \"nn\"],\n  \"chemical\": [\"k-eh1 m-ah k-ah-l\", \"nn jj\"],\n  \"chemically\": [\"k-eh1 m-ah k-l-iy\", \"rb\"],\n  \"chemise\": [\"sh-ah m-iy1-z\", \"nn\"],\n  \"chemist\": [\"k-eh1 m-ih-s-t\", \"nn\"],\n  \"chemistry\": [\"k-eh1 m-ah s-t-r-iy\", \"nn\"],\n  \"chemotherapy\": [\"k-iy m-ow th-eh1 r-ah p-iy\", \"nn\"],\n  \"cherish\": [\"ch-eh1 r-ih-sh\", \"vb vbp\"],\n  \"cherished\": [\"ch-eh1 r-ih-sh-t\", \"vbn jj vbd\"],\n  \"cherry\": [\"ch-eh1 r-iy\", \"jj nn\"],\n  \"cherub\": [\"ch-eh1 r-ah-b\", \"nn\"],\n  \"chess\": [\"ch-eh1-s\", \"nn\"],\n  \"chest\": [\"ch-eh1-s-t\", \"nn\"],\n  \"chestnut\": [\"ch-eh1-s n-ah-t\", \"nn\"],\n  \"chevrolet\": [\"sh-eh-v r-ow l-ey1\", \"nnp\"],\n  \"chew\": [\"ch-uw1\", \"vb vbp\"],\n  \"chewing\": [\"ch-uw1 ih-ng\", \"vbg jj\"],\n  \"chic\": [\"sh-iy1-k\", \"jj nn\"],\n  \"chicanery\": [\"sh-ih k-ey1 n-er iy\", \"nn\"],\n  \"chick\": [\"ch-ih1-k\", \"nn\"],\n  \"chicken\": [\"ch-ih1 k-ah-n\", \"nn\"],\n  \"chide\": [\"ch-ay1-d\", \"vb vbp\"],\n  \"chief\": [\"ch-iy1-f\", \"jj nn\"],\n  \"chiefdom\": [\"ch-iy1-f d-ah-m\", \"nn\"],\n  \"chiefly\": [\"ch-iy1-f l-iy\", \"rb\"],\n  \"chieftain\": [\"ch-iy1-f t-ah-n\", \"nn\"],\n  \"child\": [\"ch-ay1-l-d\", \"nn\"],\n  \"childbirth\": [\"ch-ay1-l-d b-er-th\", \"nn\"],\n  \"childcare\": [\"ch-ay1-l-d k-eh-r\", \"nn\"],\n  \"childhood\": [\"ch-ay1-l-d hh-uh-d\", \"nn\"],\n  \"childish\": [\"ch-ay1-l d-ih-sh\", \"jj\"],\n  \"childless\": [\"ch-ay1-l-d l-ah-s\", \"jj\"],\n  \"childlike\": [\"ch-ay1-l-d l-ay-k\", \"jj\"],\n  \"chili\": [\"ch-ih1 l-iy\", \"nn\"],\n  \"chill\": [\"ch-ih1-l\", \"nn jj vb\"],\n  \"chilled\": [\"ch-ih1-l-d\", \"vbn jj vbd\"],\n  \"chillier\": [\"ch-ih1 l-iy er\", \"nn\"],\n  \"chilling\": [\"ch-ih1 l-ih-ng\", \"vbg jj\"],\n  \"chillingly\": [\"ch-ih1 l-ih-ng l-iy\", \"rb\"],\n  \"chilly\": [\"ch-ih1 l-iy\", \"jj\"],\n  \"chime\": [\"ch-ay1-m\", \"vb\"],\n  \"chimney\": [\"ch-ih1-m n-iy\", \"nn\"],\n  \"chimp\": [\"ch-ih1-m-p\", \"nn\"],\n  \"chimpanzee\": [\"ch-ih-m p-ae1-n z-iy\", \"nn\"],\n  \"chin\": [\"ch-ih1-n\", \"nn vb\"],\n  \"china\": [\"ch-ay1 n-ah\", \"nn\"],\n  \"chip\": [\"ch-ih1-p\", \"nn\"],\n  \"chipped\": [\"ch-ih1-p-t\", \"vbn vbd jj\"],\n  \"chipper\": [\"ch-ih1 p-er\", \"jj\"],\n  \"chiropractor\": [\"k-ay1 r-ah p-r-ae-k t-er\", \"nn\"],\n  \"chirp\": [\"ch-er1-p\", \"vb\"],\n  \"chirpy\": [\"ch-er1 p-iy\", \"jj\"],\n  \"chisel\": [\"ch-ih1 z-ah-l\", \"nn vb\"],\n  \"chiseled\": [\"ch-ih1 z-ah-l-d\", \"vbn jj\"],\n  \"chit\": [\"ch-ih1-t\", \"nn\"],\n  \"chitchat\": [\"ch-ih1-t ch-ae-t\", \"nn\"],\n  \"chivalry\": [\"sh-ih1 v-ah-l r-iy\", \"nn\"],\n  \"chive\": [\"ch-ay1-v\", \"nn\"],\n  \"chloride\": [\"k-l-ao1 r-ay-d\", \"nn\"],\n  \"chlorine\": [\"k-l-ao1 r-iy-n\", \"nn\"],\n  \"chocolate\": [\"ch-ao1-k l-ah-t\", \"nn jj\"],\n  \"choice\": [\"ch-oy1-s\", \"nn jj\"],\n  \"choicest\": [\"ch-oy1 s-ah-s-t\", \"jjs\"],\n  \"choir\": [\"k-w-ay1 er\", \"nn\"],\n  \"choke\": [\"ch-ow1-k\", \"vb vbp nn\"],\n  \"choking\": [\"ch-ow1 k-ih-ng\", \"vbg jj nn\"],\n  \"cholera\": [\"k-aa1 l-er ah\", \"nn\"],\n  \"cholesterol\": [\"k-ah l-eh1-s t-er ao-l\", \"nn\"],\n  \"cholla\": [\"ch-aa1 l-ah\", \"nn\"],\n  \"chomp\": [\"ch-aa1-m-p\", \"nn vb vbp\"],\n  \"choose\": [\"ch-uw1-z\", \"vb vbp\"],\n  \"choosy\": [\"ch-uw1 z-iy\", \"jj\"],\n  \"chop\": [\"ch-aa1-p\", \"vb nn\"],\n  \"chopped\": [\"ch-aa1-p-t\", \"jj vbd vbn\"],\n  \"chopper\": [\"ch-aa1 p-er\", \"nn\"],\n  \"choppy\": [\"ch-aa1 p-iy\", \"jj\"],\n  \"chopstick\": [\"ch-aa1-p s-t-ih-k\", \"nn\"],\n  \"choral\": [\"k-ao1 r-ah-l\", \"jj\"],\n  \"chord\": [\"k-ao1-r-d\", \"nn\"],\n  \"chore\": [\"ch-ao1-r\", \"nn\"],\n  \"choreograph\": [\"k-ao1-r-iy-ah-g-r-ae-f\", \"vb\"],\n  \"choreographed\": [\"k-ao1 r-iy ah g-r-ae-f-t\", \"vbn jj\"],\n  \"choreographer\": [\"k-ao r-iy aa1 g-r-ah f-er\", \"nn\"],\n  \"choreography\": [\"k-ao r-iy aa1 g-r-ah f-iy\", \"nn\"],\n  \"chortle\": [\"ch-ao1-r-t-ah-l\", \"vb\"],\n  \"chorus\": [\"k-ao1 r-ah-s\", \"nn\"],\n  \"chose\": [\"ch-ow1-z\", \"vbd\"],\n  \"chosen\": [\"ch-ow1 z-ah-n\", \"vbn jj\"],\n  \"chow\": [\"ch-aw1\", \"nn\"],\n  \"chowder\": [\"ch-aw1 d-er\", \"nn\"],\n  \"christen\": [\"k-r-ih1 s-ah-n\", \"vb\"],\n  \"christening\": [\"k-r-ih1 s-ah-n ih-ng\", \"nn\"],\n  \"chrome\": [\"k-r-ow1-m\", \"nn\"],\n  \"chromium\": [\"k-r-ow1 m-iy ah-m\", \"nn\"],\n  \"chromosome\": [\"k-r-ow1 m-ah s-ow-m\", \"nn\"],\n  \"chronic\": [\"k-r-aa1 n-ih-k\", \"jj nn\"],\n  \"chronically\": [\"k-r-aa1 n-ih k-ah l-iy\", \"rb\"],\n  \"chronicle\": [\"k-r-aa1 n-ih k-ah-l\", \"nn vb\"],\n  \"chronicler\": [\"k-r-aa1 n-ih k-l-er\", \"nn\"],\n  \"chronological\": [\"k-r-aa n-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"chronologically\": [\"k-r-aa n-ah l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"chronology\": [\"k-r-ah n-aa1 l-ah jh-iy\", \"nn\"],\n  \"chrysanthemum\": [\"k-r-ih s-ae1-n th-ah m-ah-m\", \"nn\"],\n  \"chubby\": [\"ch-ah1 b-iy\", \"jj\"],\n  \"chuck\": [\"ch-ah1-k\", \"nn vb\"],\n  \"chuckle\": [\"ch-ah1 k-ah-l\", \"nn vb vbp\"],\n  \"chug\": [\"ch-ah1-g\", \"vb vbp\"],\n  \"chum\": [\"ch-ah1-m\", \"nn\"],\n  \"chump\": [\"ch-ah1-m-p\", \"nn\"],\n  \"chunk\": [\"ch-ah1-ng-k\", \"nn\"],\n  \"chunky\": [\"ch-ah1-ng k-iy\", \"jj\"],\n  \"church\": [\"ch-er1-ch\", \"nn\"],\n  \"churchgoer\": [\"ch-er1-ch g-ow er\", \"nn\"],\n  \"churchyard\": [\"ch-er1-ch y-aa-r-d\", \"nn\"],\n  \"churn\": [\"ch-er1-n\", \"vb vbp\"],\n  \"chute\": [\"sh-uw1-t\", \"nn\"],\n  \"chutney\": [\"ch-ah1-t n-iy\", \"nn\"],\n  \"chutzpah\": [\"ch-ah1-t s-p-aa\", \"nn\"],\n  \"cicada\": [\"s-ih k-ey1 d-ah\", \"nn\"],\n  \"cider\": [\"s-ay1 d-er\", \"nn\"],\n  \"cigar\": [\"s-ih g-aa1-r\", \"nn\"],\n  \"cigarette\": [\"s-ih g-er eh1-t\", \"nn\"],\n  \"ciliate\": [\"s-ih1 l-iy ah-t\", \"nn\"],\n  \"cinch\": [\"s-ih1-n-ch\", \"nn vb\"],\n  \"cinder\": [\"s-ih1-n d-er\", \"nn\"],\n  \"cinema\": [\"s-ih1 n-ah m-ah\", \"nn\"],\n  \"cinematic\": [\"s-ih n-ah m-ae1 t-ih-k\", \"jj\"],\n  \"cinematographer\": [\"s-ih n-ih m-ah t-aa1 g-r-ah f-er\", \"nn\"],\n  \"cinematography\": [\"s-ih n-ih m-ah t-aa1 g-r-ah f-iy\", \"nn\"],\n  \"cipher\": [\"s-ay1 f-er\", \"vb\"],\n  \"circle\": [\"s-er1 k-ah-l\", \"nn vb\"],\n  \"circuit\": [\"s-er1 k-ah-t\", \"nn\"],\n  \"circuitous\": [\"s-er k-y-uw1 ih t-ah-s\", \"jj\"],\n  \"circuitry\": [\"s-er1 k-ah t-r-iy\", \"nn\"],\n  \"circular\": [\"s-er1 k-y-ah l-er\", \"jj nn\"],\n  \"circulate\": [\"s-er1 k-y-ah l-ey-t\", \"vb vbp\"],\n  \"circulation\": [\"s-er1 k-y-ah l-ey sh-ah-n\", \"nn\"],\n  \"circulatory\": [\"s-er1 k-y-ah l-ah t-ao r-iy\", \"jj\"],\n  \"circumcision\": [\"s-er k-ah-m s-ih1 zh-ah-n\", \"nn\"],\n  \"circumference\": [\"s-er k-ah1-m f-r-ah-n-s\", \"nn\"],\n  \"circumscribed\": [\"s-er k-ah-m s-k-r-ay1-b-d\", \"jj\"],\n  \"circumspect\": [\"s-er1 k-ah-m s-p-eh-k-t\", \"jj\"],\n  \"circumspection\": [\"s-er k-ah-m s-p-eh1-k sh-ah-n\", \"nn\"],\n  \"circumstance\": [\"s-er1 k-ah-m s-t-ae-n-s\", \"nn\"],\n  \"circumstantial\": [\"s-er k-ah-m s-t-ae1-n ch-ah-l\", \"jj\"],\n  \"circumvent\": [\"s-er k-ah-m v-eh1-n-t\", \"vb\"],\n  \"circumvention\": [\"s-er k-ah-m v-eh1-n ch-ah-n\", \"nn\"],\n  \"circus\": [\"s-er1 k-ah-s\", \"nn\"],\n  \"cirrhosis\": [\"s-er ow1 s-ah-s\", \"nn\"],\n  \"citation\": [\"s-ay t-ey1 sh-ah-n\", \"nn\"],\n  \"cite\": [\"s-ay1-t\", \"vbp vb\"],\n  \"citizen\": [\"s-ih1 t-ah z-ah-n\", \"nn\"],\n  \"citizenry\": [\"s-ih1 t-ih z-ah-n r-iy\", \"nn\"],\n  \"citizenship\": [\"s-ih1 t-ih z-ah-n sh-ih-p\", \"nn\"],\n  \"citric\": [\"s-ih1 t-r-ih-k\", \"jj\"],\n  \"citron\": [\"s-ih1 t-r-ah-n\", \"jj\"],\n  \"citrus\": [\"s-ih1 t-r-ah-s\", \"jj nn\"],\n  \"city\": [\"s-ih1 t-iy\", \"nn\"],\n  \"citywide\": [\"s-ih1 t-iy w-ay-d\", \"jj\"],\n  \"civic\": [\"s-ih1 v-ih-k\", \"jj\"],\n  \"civil\": [\"s-ih1 v-ah-l\", \"jj\"],\n  \"civilian\": [\"s-ah v-ih1-l y-ah-n\", \"jj nn\"],\n  \"civility\": [\"s-ah v-ih1 l-ah t-iy\", \"nn\"],\n  \"civilization\": [\"s-ih v-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"civilize\": [\"s-ih1 v-ah l-ay-z\", \"vb\"],\n  \"civilized\": [\"s-ih1 v-ah l-ay-z-d\", \"jj vbn\"],\n  \"clad\": [\"k-l-ae1-d\", \"vbd vbn jj\"],\n  \"claim\": [\"k-l-ey1-m\", \"nn vbp vb\"],\n  \"claimant\": [\"k-l-ey1 m-ah-n-t\", \"nn\"],\n  \"clairvoyance\": [\"k-l-eh-r v-oy1 ah-n-s\", \"nn\"],\n  \"clam\": [\"k-l-ae1-m\", \"nn\"],\n  \"clamber\": [\"k-l-ae1-m-b-er\", \"vb\"],\n  \"clammy\": [\"k-l-ae1 m-iy\", \"jj\"],\n  \"clamor\": [\"k-l-ae1 m-er\", \"vb vbp nn\"],\n  \"clamp\": [\"k-l-ae1-m-p\", \"vb nn\"],\n  \"clampdown\": [\"k-l-ae1-m-p d-aw-n\", \"nn\"],\n  \"clamshell\": [\"k-l-ae1-m sh-eh-l\", \"nn\"],\n  \"clan\": [\"k-l-ae1-n\", \"nn\"],\n  \"clandestine\": [\"k-l-ae-n d-eh1 s-t-ih-n\", \"jj\"],\n  \"clang\": [\"k-l-ae1-ng\", \"nn vb\"],\n  \"clanging\": [\"k-l-ae1 ng-ih-ng\", \"nn vbg\"],\n  \"clank\": [\"k-l-ae1-ng-k\", \"vb\"],\n  \"clannish\": [\"k-l-ae1 n-ih-sh\", \"jj\"],\n  \"clap\": [\"k-l-ae1-p\", \"nn\"],\n  \"clapboard\": [\"k-l-ae1-p b-ao-r-d\", \"nn\"],\n  \"clapped\": [\"k-l-ae1-p-t\", \"vbd\"],\n  \"clarification\": [\"k-l-eh r-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"clarified\": [\"k-l-eh1 r-ah f-ay-d\", \"vbn jj vbd\"],\n  \"clarify\": [\"k-l-eh1 r-ah f-ay\", \"vb vbp\"],\n  \"clarinet\": [\"k-l-eh r-ah n-eh1-t\", \"nn\"],\n  \"clarinetist\": [\"k-l-eh r-ah n-eh1 t-ih-s-t\", \"nn\"],\n  \"clarity\": [\"k-l-eh1 r-ah t-iy\", \"nn\"],\n  \"clash\": [\"k-l-ae1-sh\", \"nn vbp vb\"],\n  \"clasp\": [\"k-l-ae1-s-p\", \"vb\"],\n  \"class\": [\"k-l-ae1-s\", \"nn vb\"],\n  \"classic\": [\"k-l-ae1 s-ih-k\", \"jj nn\"],\n  \"classical\": [\"k-l-ae1 s-ih k-ah-l\", \"jj\"],\n  \"classically\": [\"k-l-ae1 s-ih-k l-iy\", \"rb\"],\n  \"classification\": [\"k-l-ae s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"classified\": [\"k-l-ae1 s-ah f-ay-d\", \"vbn vbd jj\"],\n  \"classify\": [\"k-l-ae1 s-ah f-ay\", \"vb vbp\"],\n  \"classless\": [\"k-l-ae1-s l-ah-s\", \"jj\"],\n  \"classmate\": [\"k-l-ae1-s m-ey-t\", \"nn\"],\n  \"classroom\": [\"k-l-ae1-s r-uw-m\", \"nn\"],\n  \"classy\": [\"k-l-ae1 s-iy\", \"jj\"],\n  \"clatter\": [\"k-l-ae1 t-er\", \"nn vb\"],\n  \"clause\": [\"k-l-ao1-z\", \"nn\"],\n  \"claustrophobia\": [\"k-l-ao s-t-r-ah f-ow1 b-iy ah\", \"nn\"],\n  \"claustrophobic\": [\"k-l-ao s-t-r-ah f-ow1 b-ih-k\", \"jj\"],\n  \"claw\": [\"k-l-ao1\", \"nn vb\"],\n  \"clay\": [\"k-l-ey1\", \"nn\"],\n  \"clean\": [\"k-l-iy1-n\", \"jj vbp rb vb\"],\n  \"cleaner\": [\"k-l-iy1 n-er\", \"jjr nn\"],\n  \"cleanest\": [\"k-l-iy1 n-ah-s-t\", \"jjs\"],\n  \"cleaning\": [\"k-l-iy1 n-ih-ng\", \"nn vbg\"],\n  \"cleanliness\": [\"k-l-eh1-n l-iy n-ih-s\", \"nn\"],\n  \"cleanly\": [\"k-l-iy1-n l-iy\", \"rb\"],\n  \"cleanse\": [\"k-l-eh1-n-z\", \"vb\"],\n  \"cleanser\": [\"k-l-eh1-n z-er\", \"nn\"],\n  \"cleansing\": [\"k-l-eh1-n z-ih-ng\", \"nn vbg\"],\n  \"cleanup\": [\"k-l-iy1-n ah-p\", \"nn\"],\n  \"clear\": [\"k-l-ih1-r\", \"jj rb vb vbp\"],\n  \"clearance\": [\"k-l-ih1 r-ah-n-s\", \"nn\"],\n  \"clearer\": [\"k-l-ih1 r-er\", \"jjr rbr\"],\n  \"clearest\": [\"k-l-ih1 r-ih-s-t\", \"jjs\"],\n  \"clearing\": [\"k-l-ih1 r-ih-ng\", \"vbg jj nn\"],\n  \"clearinghouse\": [\"k-l-ih1 r-ih-ng hh-aw-s\", \"nn\"],\n  \"clearly\": [\"k-l-ih1-r l-iy\", \"rb\"],\n  \"cleat\": [\"k-l-iy1-t\", \"nn\"],\n  \"cleavage\": [\"k-l-iy1 v-ah-jh\", \"nn\"],\n  \"cleaver\": [\"k-l-iy1 v-er\", \"nn\"],\n  \"clemency\": [\"k-l-eh1 m-ah-n s-iy\", \"nn\"],\n  \"clench\": [\"k-l-eh1-n-ch\", \"vb\"],\n  \"clenched\": [\"k-l-eh1-n-ch-t\", \"jj vbd vbn\"],\n  \"clergy\": [\"k-l-er1 jh-iy\", \"nn\"],\n  \"clergyman\": [\"k-l-er1 jh-iy m-ah-n\", \"nn\"],\n  \"cleric\": [\"k-l-eh1 r-ih-k\", \"nn\"],\n  \"clerical\": [\"k-l-eh1 r-ah k-ah-l\", \"jj nn\"],\n  \"clerk\": [\"k-l-er1-k\", \"nn\"],\n  \"clever\": [\"k-l-eh1 v-er\", \"jj\"],\n  \"cleverly\": [\"k-l-eh1 v-er l-iy\", \"rb\"],\n  \"cleverness\": [\"k-l-eh1 v-er n-ah-s\", \"nn\"],\n  \"cliche\": [\"k-l-iy sh-ey1\", \"nn\"],\n  \"cliched\": [\"k-l-iy sh-ey1-d\", \"jj\"],\n  \"click\": [\"k-l-ih1-k\", \"nn vb\"],\n  \"client\": [\"k-l-ay1 ah-n-t\", \"nn\"],\n  \"clientele\": [\"k-l-ay ah-n t-eh1-l\", \"nn\"],\n  \"cliff\": [\"k-l-ih1-f\", \"nn\"],\n  \"climactic\": [\"k-l-ay m-ae1-k t-ih-k\", \"jj\"],\n  \"climate\": [\"k-l-ay1 m-ah-t\", \"nn\"],\n  \"climatic\": [\"k-l-ay m-ae1 t-ih-k\", \"jj\"],\n  \"climax\": [\"k-l-ay1 m-ae-k-s\", \"nn vb\"],\n  \"climb\": [\"k-l-ay1-m\", \"vb vbp nn\"],\n  \"climber\": [\"k-l-ay1 m-er\", \"nn\"],\n  \"clime\": [\"k-l-ay1-m\", \"nn\"],\n  \"clinch\": [\"k-l-ih1-n-ch\", \"vb\"],\n  \"clincher\": [\"k-l-ih1-n ch-er\", \"nn\"],\n  \"cling\": [\"k-l-ih1-ng\", \"vbp vb\"],\n  \"clinic\": [\"k-l-ih1 n-ih-k\", \"nn\"],\n  \"clinical\": [\"k-l-ih1 n-ah k-ah-l\", \"jj\"],\n  \"clinically\": [\"k-l-ih1 n-ih k-ah l-iy\", \"rb\"],\n  \"clinician\": [\"k-l-ih n-ih1 sh-ah-n\", \"nn\"],\n  \"clip\": [\"k-l-ih1-p\", \"nn vb\"],\n  \"clipboard\": [\"k-l-ih1-p b-ao-r-d\", \"nn\"],\n  \"clipping\": [\"k-l-ih1 p-ih-ng\", \"nn\"],\n  \"clique\": [\"k-l-iy1-k\", \"nn\"],\n  \"cloak\": [\"k-l-ow1-k\", \"nn vb vbp\"],\n  \"clobber\": [\"k-l-aa1 b-er\", \"vb\"],\n  \"clock\": [\"k-l-aa1-k\", \"nn vb vbp\"],\n  \"clockwork\": [\"k-l-aa1-k w-er-k\", \"nn\"],\n  \"clog\": [\"k-l-aa1-g\", \"vb\"],\n  \"clogged\": [\"k-l-ao1-g-d\", \"jj vbn vbd\"],\n  \"cloister\": [\"k-l-oy1 s-t-er\", \"nn\"],\n  \"cloistered\": [\"k-l-oy1 s-t-er-d\", \"jj\"],\n  \"clone\": [\"k-l-ow1-n\", \"nn vb\"],\n  \"clones\": [\"k-l-ow1-n\", \"nn\"],\n  \"close\": [\"k-l-ow1-s\", \"vb vbp jj\"],\n  \"closed\": [\"k-l-ow1-z-d\", \"vbd vbn jj\"],\n  \"closeness\": [\"k-l-ow1-s n-ih-s\", \"nn\"],\n  \"closest\": [\"k-l-ow1 s-ah-s-t\", \"jjs\"],\n  \"closet\": [\"k-l-aa1 z-ah-t\", \"nn jj vb\"],\n  \"closeted\": [\"k-l-aa1 z-ah t-ih-d\", \"jj vbd vbn\"],\n  \"closeup\": [\"k-l-ow1 s-ah1-p\", \"jj\"],\n  \"closing\": [\"k-l-ow1 z-ih-ng\", \"vbg jj nn\"],\n  \"closure\": [\"k-l-ow1 zh-er\", \"nn\"],\n  \"clot\": [\"k-l-aa1-t\", \"nn\"],\n  \"cloth\": [\"k-l-ao1-th\", \"nn\"],\n  \"clothe\": [\"k-l-ow1-dh\", \"vb\"],\n  \"clothed\": [\"k-l-ow1-dh-d\", \"vbn jj\"],\n  \"clothes\": [\"k-l-ow1-dh-z\", \"nns\"],\n  \"clothier\": [\"k-l-ow1 dh-y-er\", \"nn\"],\n  \"clothing\": [\"k-l-ow1 dh-ih-ng\", \"nn\"],\n  \"clotted\": [\"k-l-aa1 t-ah-d\", \"jj\"],\n  \"cloud\": [\"k-l-aw1-d\", \"nn vb vbp\"],\n  \"cloudburst\": [\"k-l-aw1-d b-er-s-t\", \"nn\"],\n  \"clouded\": [\"k-l-aw1 d-ih-d\", \"vbn jj vbd\"],\n  \"clouding\": [\"k-l-aw1 d-ih-ng\", \"nn\"],\n  \"cloudless\": [\"k-l-aw1-d l-ah-s\", \"jj\"],\n  \"cloudy\": [\"k-l-aw1 d-iy\", \"jj\"],\n  \"clout\": [\"k-l-aw1-t\", \"nn\"],\n  \"clove\": [\"k-l-ow1-v-z\", \"nn\"],\n  \"clover\": [\"k-l-ow1 v-er\", \"nn\"],\n  \"clown\": [\"k-l-aw1-n\", \"nn\"],\n  \"clowning\": [\"k-l-aw1 n-ih-ng\", \"nn\"],\n  \"cloy\": [\"k-l-oy1\", \"vb\"],\n  \"cloying\": [\"k-l-oy1 ih-ng\", \"jj vbg\"],\n  \"club\": [\"k-l-ah1-b\", \"nn\"],\n  \"clubbed\": [\"k-l-ah1-b-d\", \"jj vbd\"],\n  \"clubby\": [\"k-l-ah1 b-iy\", \"jj\"],\n  \"clubhouse\": [\"k-l-ah1-b hh-aw-s\", \"nn\"],\n  \"cluck\": [\"k-l-ah1-k\", \"nn vb\"],\n  \"clue\": [\"k-l-uw1\", \"nn\"],\n  \"clump\": [\"k-l-ah1-m-p\", \"nn\"],\n  \"clumsily\": [\"k-l-ah1-m s-ah l-iy\", \"rb\"],\n  \"clumsy\": [\"k-l-ah1-m z-iy\", \"jj\"],\n  \"clung\": [\"k-l-ah1-ng\", \"vbd vbn\"],\n  \"clunky\": [\"k-l-ah1-ng k-iy\", \"jj\"],\n  \"cluster\": [\"k-l-ah1 s-t-er\", \"nn vb\"],\n  \"clutch\": [\"k-l-ah1-ch\", \"nn vbp vb\"],\n  \"clutter\": [\"k-l-ah1 t-er\", \"nn vb\"],\n  \"cluttered\": [\"k-l-ah1 t-er-d\", \"vbn jj\"],\n  \"coach\": [\"k-ow1-ch\", \"nn vb\"],\n  \"coachman\": [\"k-ow1-ch m-ah-n\", \"nn\"],\n  \"coagulate\": [\"k-ow-ae1-g-y-ah-l-ey-t\", \"vb\"],\n  \"coal\": [\"k-ow1-l\", \"nn\"],\n  \"coalesce\": [\"k-ow ah l-eh1-s\", \"vb vbp\"],\n  \"coalition\": [\"k-ow ah l-ih1 sh-ah-n\", \"nn\"],\n  \"coarse\": [\"k-ao1-r-s\", \"jj\"],\n  \"coast\": [\"k-ow1-s-t\", \"nn vb\"],\n  \"coastal\": [\"k-ow1 s-t-ah-l\", \"jj\"],\n  \"coaster\": [\"k-ow1 s-t-er\", \"nn\"],\n  \"coastline\": [\"k-ow1-s-t l-ay-n\", \"nn\"],\n  \"coat\": [\"k-ow1-t\", \"nn vb\"],\n  \"coated\": [\"k-ow1 t-ah-d\", \"vbn jj\"],\n  \"coating\": [\"k-ow1 t-ih-ng\", \"nn vbg\"],\n  \"coattail\": [\"k-ow1-t t-ey-l\", \"nn\"],\n  \"coax\": [\"k-ow1-k-s\", \"vb\"],\n  \"coaxial\": [\"k-ow1 ae1-k s-iy ah-l\", \"jj\"],\n  \"coaxing\": [\"k-ow1-k s-ih-ng\", \"jj vbg\"],\n  \"cobalt\": [\"k-ow1 b-ao-l-t\", \"nn\"],\n  \"cobble\": [\"k-aa1-b-ah-l\", \"vb\"],\n  \"cobbler\": [\"k-aa1-b l-er\", \"nn\"],\n  \"cobblestone\": [\"k-aa1 b-ah-l s-t-ow-n\", \"nn\"],\n  \"cobra\": [\"k-ow1 b-r-ah\", \"nn\"],\n  \"cobweb\": [\"k-aa1-b w-eh-b\", \"nn\"],\n  \"coca\": [\"k-ow1 k-ah\", \"nn\"],\n  \"cocaine\": [\"k-ow k-ey1-n\", \"nn\"],\n  \"cock\": [\"k-aa1-k\", \"nn vb\"],\n  \"cockatoo\": [\"k-aa1 k-ah t-uw\", \"nn\"],\n  \"cockeyed\": [\"k-aa1-k ay-d\", \"jj\"],\n  \"cockiness\": [\"k-aa1 k-iy n-ah-s\", \"nn\"],\n  \"cockpit\": [\"k-aa1-k p-ih-t\", \"nn\"],\n  \"cockroach\": [\"k-aa1-k r-ow-ch\", \"nn\"],\n  \"cocktail\": [\"k-aa1-k t-ey-l\", \"nn\"],\n  \"cocky\": [\"k-aa1 k-iy\", \"jj\"],\n  \"coco\": [\"k-ow1 k-ow\", \"nn\"],\n  \"cocoa\": [\"k-ow1 k-ow\", \"nn\"],\n  \"coconut\": [\"k-ow1 k-ah n-ah-t\", \"nn\"],\n  \"cocoon\": [\"k-ah k-uw1-n\", \"nn\"],\n  \"cod\": [\"k-aa1-d\", \"nn\"],\n  \"coddle\": [\"k-aa1 d-ah-l\", \"vb vbp\"],\n  \"coddling\": [\"k-aa1 d-ah-l ih-ng\", \"nn\"],\n  \"code\": [\"k-ow1-d\", \"nn vb\"],\n  \"coded\": [\"k-ow1 d-ih-d\", \"vbn jj\"],\n  \"codification\": [\"k-aa d-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"codify\": [\"k-ow1-d-ah-f-ay\", \"vb\"],\n  \"coding\": [\"k-ow1 d-ih-ng\", \"nn\"],\n  \"coed\": [\"k-ow1 eh-d\", \"nn\"],\n  \"coefficient\": [\"k-ow ah f-ih1 sh-ah-n-t\", \"nn\"],\n  \"coerce\": [\"k-ow er1-s\", \"vb\"],\n  \"coerced\": [\"k-ow er1-s-t\", \"vbn vbd jj\"],\n  \"coercion\": [\"k-ow er1 sh-ah-n\", \"nn\"],\n  \"coercive\": [\"k-ow er1 s-ih-v\", \"jj\"],\n  \"coexist\": [\"k-ow ah-g z-ih1-s-t\", \"vb vbp\"],\n  \"coexistence\": [\"k-ow ih-g z-ih1 s-t-ah-n-s\", \"nn\"],\n  \"coffee\": [\"k-aa1 f-iy\", \"nn\"],\n  \"coffer\": [\"k-aa1 f-er\", \"nn\"],\n  \"coffin\": [\"k-ao1 f-ih-n\", \"nn\"],\n  \"cofounder\": [\"k-ow1 f-aw1-n d-er\", \"nn\"],\n  \"cog\": [\"k-ao1-g\", \"nn\"],\n  \"cogeneration\": [\"k-ow1 jh-eh1 n-er ey1 sh-ah-n\", \"nn\"],\n  \"cognac\": [\"k-ow1-n y-ae-k\", \"nn\"],\n  \"cognitive\": [\"k-aa1-g n-ih t-ih-v\", \"jj\"],\n  \"cognizance\": [\"k-aa1-g n-ah z-ah-n-s\", \"nn\"],\n  \"cognizant\": [\"k-aa1-g n-ah z-ah-n-t\", \"jj\"],\n  \"cognoscenti\": [\"k-aa-g n-ao sh-eh1-n t-iy\", \"nn\"],\n  \"coherence\": [\"k-ow hh-ih1 r-ah-n-s\", \"nn\"],\n  \"coherent\": [\"k-ow hh-ih1 r-ah-n-t\", \"jj\"],\n  \"coherently\": [\"k-ow hh-iy1 r-ah-n-t l-iy\", \"rb\"],\n  \"cohesion\": [\"k-ow hh-iy1 zh-ah-n\", \"nn\"],\n  \"cohesive\": [\"k-ow hh-iy1 s-ih-v\", \"jj\"],\n  \"cohesively\": [\"k-ow hh-iy1 s-ih-v l-iy\", \"rb\"],\n  \"cohesiveness\": [\"k-ow hh-iy1 s-ih-v n-ah-s\", \"nn\"],\n  \"cohort\": [\"k-ow1 hh-ao-r-t\", \"nn\"],\n  \"coiffed\": [\"k-oy1-f-t\", \"jj\"],\n  \"coil\": [\"k-oy1-l\", \"nn vb\"],\n  \"coin\": [\"k-oy1-n\", \"nn vb\"],\n  \"coincide\": [\"k-ow ih-n s-ay1-d\", \"vb vbp\"],\n  \"coincidence\": [\"k-ow ih1-n s-ih d-ah-n-s\", \"nn\"],\n  \"coincident\": [\"k-ow ih1-n s-ah d-ah-n-t\", \"jj\"],\n  \"coincidental\": [\"k-ow ih-n s-ah d-eh1-n t-ah-l\", \"jj\"],\n  \"coincidentally\": [\"k-ow ih-n s-ih d-eh1-n t-ah l-iy\", \"rb\"],\n  \"coinciding\": [\"k-ow ah-n s-ay1 d-ih-ng\", \"vbg jj\"],\n  \"coke\": [\"k-ow1-k\", \"nn\"],\n  \"cola\": [\"k-ow1 l-ah\", \"nn\"],\n  \"cold\": [\"k-ow1-l-d\", \"jj nn\"],\n  \"colder\": [\"k-ow1-l d-er\", \"jjr rbr\"],\n  \"coldest\": [\"k-ow1-l d-ah-s-t\", \"jjs\"],\n  \"coldly\": [\"k-ow1-l-d l-iy\", \"rb\"],\n  \"coldness\": [\"k-ow1-l-d n-ah-s\", \"nn\"],\n  \"coliseum\": [\"k-aa l-ah s-iy1 ah-m\", \"nn\"],\n  \"collaborate\": [\"k-ah l-ae1 b-er ey-t\", \"vb vbp\"],\n  \"collaboration\": [\"k-ah l-ae b-er ey1 sh-ah-n\", \"nn\"],\n  \"collaborative\": [\"k-ah l-ae1 b-er ey t-ih-v\", \"jj\"],\n  \"collaborator\": [\"k-ah l-ae1 b-er ey t-er\", \"nn\"],\n  \"collage\": [\"k-ah l-aa1-zh\", \"nn\"],\n  \"collagen\": [\"k-aa1 l-ah g-ah-n\", \"nn\"],\n  \"collapse\": [\"k-ah l-ae1-p-s\", \"nn vb\"],\n  \"collapsed\": [\"k-ah l-ae1-p-s-t\", \"vbd jj vbn\"],\n  \"collapsible\": [\"k-ah l-ae1-p s-ah b-ah-l\", \"jj\"],\n  \"collar\": [\"k-aa1 l-er\", \"nn vb\"],\n  \"collarbone\": [\"k-aa1 l-er b-ow-n\", \"nn\"],\n  \"collateral\": [\"k-ah l-ae1 t-er ah-l\", \"nn jj\"],\n  \"collateralize\": [\"k-ah-l-ae1-t-er-ah-l-ay-z\", \"vb\"],\n  \"collateralized\": [\"k-ah l-ae1 t-er ah l-ay-z-d\", \"jj vbn\"],\n  \"colleague\": [\"k-aa1 l-iy-g\", \"nn\"],\n  \"collect\": [\"k-ah l-eh1-k-t\", \"vb jj vbp\"],\n  \"collectible\": [\"k-ah l-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"collection\": [\"k-ah l-eh1-k sh-ah-n\", \"nn\"],\n  \"collective\": [\"k-ah l-eh1-k t-ih-v\", \"jj nn\"],\n  \"collectively\": [\"k-ah l-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"collectivization\": [\"k-ah l-eh-k t-ih v-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"collector\": [\"k-ah l-eh1-k t-er\", \"nn\"],\n  \"college\": [\"k-aa1 l-ih-jh\", \"nn\"],\n  \"collegial\": [\"k-ah l-iy1 jh-iy ah-l\", \"jj\"],\n  \"collegian\": [\"k-ah l-iy1 jh-ah-n\", \"nn\"],\n  \"collegiate\": [\"k-ah l-iy1 jh-ih-t\", \"jj\"],\n  \"collide\": [\"k-ah-l-ay1-d\", \"vb\"],\n  \"collie\": [\"k-aa1 l-iy\", \"nn\"],\n  \"collision\": [\"k-ah l-ih1 zh-ah-n\", \"nn\"],\n  \"colloidal\": [\"k-ah l-oy1 d-ah-l\", \"jj\"],\n  \"colloquial\": [\"k-ah l-ow1-k w-iy ah-l\", \"jj\"],\n  \"colloquium\": [\"k-ah l-ow1 k-w-iy ah-m\", \"nn\"],\n  \"colloquy\": [\"k-aa1 l-ah k-w-iy\", \"nn\"],\n  \"collude\": [\"k-ah l-uw1-d\", \"vb\"],\n  \"collusion\": [\"k-ah l-uw1 zh-ah-n\", \"nn\"],\n  \"cologne\": [\"k-ah l-ow1-n\", \"nn\"],\n  \"colon\": [\"k-ow1 l-ah-n\", \"nn\"],\n  \"colonel\": [\"k-er1 n-ah-l\", \"nn\"],\n  \"colonial\": [\"k-ah l-ow1 n-iy ah-l\", \"jj nn\"],\n  \"colonialism\": [\"k-ah l-ow1 n-iy ah l-ih z-ah-m\", \"nn\"],\n  \"colonialist\": [\"k-ah l-ow1 n-iy ah l-ih-s-t\", \"nn\"],\n  \"colonist\": [\"k-aa1 l-ah n-ih-s-t\", \"nn\"],\n  \"colonization\": [\"k-aa l-ah n-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"colonize\": [\"k-aa1-l-ah-n-ay-z\", \"vb\"],\n  \"colonnade\": [\"k-aa l-ah n-ey1-d\", \"nn\"],\n  \"colony\": [\"k-aa1 l-ah n-iy\", \"nn\"],\n  \"color\": [\"k-ah1 l-er\", \"nn jj vb vbp\"],\n  \"coloration\": [\"k-ah l-er ey1 sh-ah-n\", \"nn\"],\n  \"coloratura\": [\"k-ah l-er ah t-uh1 r-ah\", \"nn\"],\n  \"colorblind\": [\"k-ah1 l-er b-l-ay-n-d\", \"jj\"],\n  \"colored\": [\"k-ah1 l-er-d\", \"jj vbn\"],\n  \"colorful\": [\"k-ah1 l-er f-ah-l\", \"jj\"],\n  \"coloring\": [\"k-ah1 l-er ih-ng\", \"nn\"],\n  \"colorization\": [\"k-ah l-er ah z-ey1 sh-ah-n\", \"nn\"],\n  \"colorless\": [\"k-ah1 l-er l-ah-s\", \"jj\"],\n  \"colossal\": [\"k-ah l-aa1 s-ah-l\", \"jj\"],\n  \"colossus\": [\"k-ah l-aa1 s-ah-s\", \"nn\"],\n  \"coloured\": [\"k-ah1 l-er-d\", \"jj\"],\n  \"colt\": [\"k-ow1-l-t\", \"nn\"],\n  \"columbine\": [\"k-aa1 l-ah-m b-ay-n\", \"nn\"],\n  \"column\": [\"k-aa1 l-ah-m\", \"nn\"],\n  \"columnist\": [\"k-aa1 l-ah-m n-ah-s-t\", \"nn\"],\n  \"coma\": [\"k-ow1 m-ah\", \"nn\"],\n  \"comb\": [\"k-ow1-m\", \"nn vb\"],\n  \"combat\": [\"k-aa1-m b-ae-t\", \"nn vb\"],\n  \"combatant\": [\"k-ah-m b-ae1 t-ah-n-t\", \"jj nn\"],\n  \"combative\": [\"k-ah-m b-ae1 t-ih-v\", \"jj\"],\n  \"combinable\": [\"k-ah-m b-ay1 n-ah b-ah-l\", \"jj\"],\n  \"combination\": [\"k-aa-m b-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"combine\": [\"k-aa1-m b-ay-n\", \"vb nn vbp\"],\n  \"combined\": [\"k-ah-m b-ay1-n-d\", \"vbn jj vbd\"],\n  \"combing\": [\"k-ow1 m-ih-ng\", \"vbg jj\"],\n  \"combo\": [\"k-aa1-m b-ow\", \"nn\"],\n  \"combustion\": [\"k-ah-m b-ah1-s ch-ah-n\", \"nn\"],\n  \"come\": [\"k-ah1-m\", \"vb vbn vbp jj\"],\n  \"comeback\": [\"k-ah1-m b-ae-k\", \"nn\"],\n  \"comedian\": [\"k-ah m-iy1 d-iy ah-n\", \"nn\"],\n  \"comedic\": [\"k-ah m-iy1 d-ih-k\", \"jj\"],\n  \"comedy\": [\"k-aa1 m-ah d-iy\", \"nn\"],\n  \"comely\": [\"k-ah1-m l-iy\", \"jj\"],\n  \"comer\": [\"k-ah1 m-er\", \"nn\"],\n  \"comet\": [\"k-aa1 m-ah-t\", \"nn\"],\n  \"cometary\": [\"k-aa1 m-ah t-eh r-iy\", \"jj\"],\n  \"comeuppance\": [\"k-ah m-ah1 p-ah-n-s\", \"nn\"],\n  \"comfort\": [\"k-ah1-m f-er-t\", \"nn vb\"],\n  \"comfortable\": [\"k-ah1-m f-er t-ah b-ah-l\", \"jj nn\"],\n  \"comfortably\": [\"k-ah1-m f-er t-ah b-l-iy\", \"rb\"],\n  \"comforting\": [\"k-ah1-m f-er t-ih-ng\", \"vbg jj\"],\n  \"comfy\": [\"k-ah1-m f-iy\", \"jj\"],\n  \"comic\": [\"k-aa1 m-ih-k\", \"jj nn\"],\n  \"comical\": [\"k-aa1 m-ih k-ah-l\", \"jj\"],\n  \"comically\": [\"k-aa1 m-ih k-ah l-iy\", \"rb\"],\n  \"coming\": [\"k-ah1 m-ih-ng\", \"vbg jj nn\"],\n  \"comma\": [\"k-aa1 m-ah\", \"nn\"],\n  \"command\": [\"k-ah m-ae1-n-d\", \"nn vbp vb\"],\n  \"commandant\": [\"k-aa m-ah-n d-aa1-n-t\", \"nn\"],\n  \"commandeer\": [\"k-aa-m-ah-n-d-ih1-r\", \"vb\"],\n  \"commander\": [\"k-ah m-ae1-n d-er\", \"nn\"],\n  \"commanding\": [\"k-ah m-ae1-n d-ih-ng\", \"vbg jj nn\"],\n  \"commandment\": [\"k-ah m-ae1-n-d m-ah-n-t\", \"nn\"],\n  \"commando\": [\"k-ah m-ae1-n d-ow\", \"nn\"],\n  \"commemorate\": [\"k-ah m-eh1 m-er ey-t\", \"vb vbp\"],\n  \"commemorative\": [\"k-ah m-eh1-m r-ah t-ih-v\", \"jj nn\"],\n  \"commence\": [\"k-ah m-eh1-n-s\", \"vb vbp\"],\n  \"commencement\": [\"k-ah m-eh1-n s-m-ah-n-t\", \"nn\"],\n  \"commend\": [\"k-ah m-eh1-n-d\", \"vb vbp\"],\n  \"commendable\": [\"k-ah m-eh1-n d-ah b-ah-l\", \"jj\"],\n  \"commendation\": [\"k-aa m-ah-n d-ey1 sh-ah-n\", \"nn\"],\n  \"commensurate\": [\"k-ah m-eh1-n s-er ah-t\", \"jj\"],\n  \"comment\": [\"k-aa1 m-eh-n-t\", \"vb vbp nn\"],\n  \"commentary\": [\"k-aa1 m-ah-n t-eh r-iy\", \"nn\"],\n  \"commentator\": [\"k-aa1 m-ah-n t-ey t-er\", \"nn\"],\n  \"commerce\": [\"k-aa1 m-er-s\", \"nn\"],\n  \"commercial\": [\"k-ah m-er1 sh-ah-l\", \"jj nn\"],\n  \"commercialism\": [\"k-ah m-er1 sh-ah l-ih z-ah-m\", \"nn\"],\n  \"commercialization\": [\"k-ah m-er sh-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"commercialize\": [\"k-ah m-er1 sh-ah l-ay-z\", \"vb\"],\n  \"commercially\": [\"k-ah m-er1 sh-ah l-iy\", \"rb\"],\n  \"commerical\": [\"k-ah m-er1 sh-ah-l\", \"jj\"],\n  \"commie\": [\"k-aa1 m-iy\", \"jj\"],\n  \"commingle\": [\"k-ah-m-ih1-ng-g-ah-l\", \"vb\"],\n  \"commiserate\": [\"k-ah m-ih1 s-er ey-t\", \"vb\"],\n  \"commissar\": [\"k-aa1 m-ah s-aa-r\", \"nn\"],\n  \"commissary\": [\"k-aa1 m-ah s-eh r-iy\", \"nn\"],\n  \"commission\": [\"k-ah m-ih1 sh-ah-n\", \"nn vb\"],\n  \"commissioner\": [\"k-ah m-ih1 sh-ah-n er\", \"nn\"],\n  \"commit\": [\"k-ah m-ih1-t\", \"vb jj vbp\"],\n  \"commitment\": [\"k-ah m-ih1-t m-ah-n-t\", \"nn\"],\n  \"committed\": [\"k-ah m-ih1 t-ah-d\", \"vbn jj vbd\"],\n  \"committee\": [\"k-ah m-ih1 t-iy\", \"nn\"],\n  \"commodity\": [\"k-ah m-aa1 d-ah t-iy\", \"nn\"],\n  \"common\": [\"k-aa1 m-ah-n\", \"jj nn\"],\n  \"commonality\": [\"k-aa m-ah n-ae1 l-ah t-iy\", \"nn\"],\n  \"commoner\": [\"k-aa1 m-ah n-er\", \"nn\"],\n  \"commonly\": [\"k-aa1 m-ah-n l-iy\", \"rb\"],\n  \"commonplace\": [\"k-aa1 m-ah-n p-l-ey-s\", \"jj nn\"],\n  \"commons\": [\"k-aa1 m-ah-n-z\", \"nn\"],\n  \"commonwealth\": [\"k-aa1 m-ah-n w-eh-l-th\", \"nn\"],\n  \"commotion\": [\"k-ah m-ow1 sh-ah-n\", \"nn\"],\n  \"communal\": [\"k-ah m-y-uw1 n-ah-l\", \"jj\"],\n  \"commune\": [\"k-aa1 m-y-uw-n\", \"nn vb\"],\n  \"communicable\": [\"k-ah m-y-uw1 n-ah k-ah b-ah-l\", \"jj\"],\n  \"communicate\": [\"k-ah m-y-uw1 n-ah k-ey-t\", \"vb vbp\"],\n  \"communication\": [\"k-ah m-y-uw n-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"communicative\": [\"k-ah m-y-uw1 n-ah k-ah t-ih-v\", \"jj\"],\n  \"communicator\": [\"k-ah m-y-uw1 n-ah k-ey t-er\", \"nn\"],\n  \"communion\": [\"k-ah m-y-uw1 n-y-ah-n\", \"nn\"],\n  \"communique\": [\"k-ah m-y-uw1 n-ah k-ey\", \"nn\"],\n  \"communism\": [\"k-aa1 m-y-ah n-ih z-ah-m\", \"nn\"],\n  \"communist\": [\"k-aa1 m-y-ah n-ah-s-t\", \"jj nn\"],\n  \"community\": [\"k-ah m-y-uw1 n-ah t-iy\", \"nn\"],\n  \"communize\": [\"k-aa1 m-y-ah n-ay-z\", \"vb\"],\n  \"commute\": [\"k-ah m-y-uw1-t\", \"vb nn vbp\"],\n  \"commuter\": [\"k-ah m-y-uw1 t-er\", \"nn\"],\n  \"compact\": [\"k-aa1-m p-ae-k-t\", \"jj nn vb\"],\n  \"compacted\": [\"k-ah-m p-ae1-k t-ih-d\", \"jj vbn\"],\n  \"companion\": [\"k-ah-m p-ae1 n-y-ah-n\", \"nn jj\"],\n  \"companionship\": [\"k-ah-m p-ae1 n-y-ah-n sh-ih-p\", \"nn\"],\n  \"companionway\": [\"k-ah-m p-ae1 n-y-ah-n w-ey\", \"nn\"],\n  \"company\": [\"k-ah1-m p-ah n-iy\", \"nn\"],\n  \"companywide\": [\"k-ah1-m p-ah n-iy w-ay-d\", \"jj rb\"],\n  \"comparability\": [\"k-aa-m p-er ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"comparable\": [\"k-aa1-m p-er ah b-ah-l\", \"jj\"],\n  \"comparably\": [\"k-aa1-m p-er ah b-l-iy\", \"rb\"],\n  \"comparative\": [\"k-ah-m p-eh1 r-ah t-ih-v\", \"jj nn\"],\n  \"comparatively\": [\"k-ah-m p-eh1 r-ah t-ih-v l-iy\", \"rb\"],\n  \"compare\": [\"k-ah-m p-eh1-r\", \"vb vbp nn\"],\n  \"comparison\": [\"k-ah-m p-eh1 r-ah s-ah-n\", \"nn\"],\n  \"compartment\": [\"k-ah-m p-aa1-r-t m-ah-n-t\", \"nn\"],\n  \"compass\": [\"k-ah1-m p-ah-s\", \"nn vb\"],\n  \"compassion\": [\"k-ah-m p-ae1 sh-ah-n\", \"nn\"],\n  \"compassionate\": [\"k-ah-m p-ae1 sh-ah n-ah-t\", \"jj\"],\n  \"compatibility\": [\"k-ah-m p-ae t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"compatible\": [\"k-ah-m p-ae1 t-ah b-ah-l\", \"jj\"],\n  \"compatriot\": [\"k-ah-m p-ey1 t-r-iy ah-t\", \"nn\"],\n  \"compel\": [\"k-ah-m p-eh1-l\", \"vb\"],\n  \"compelled\": [\"k-ah-m p-eh1-l-d\", \"vbn vbd jj\"],\n  \"compelling\": [\"k-ah-m p-eh1 l-ih-ng\", \"jj vbg\"],\n  \"compellingly\": [\"k-ah-m p-eh1 l-ih-ng l-iy\", \"rb\"],\n  \"compendium\": [\"k-ah-m p-eh1-n d-iy ah-m\", \"nn\"],\n  \"compensate\": [\"k-aa1-m p-ah-n s-ey-t\", \"vb vbp\"],\n  \"compensation\": [\"k-aa-m p-ah-n s-ey1 sh-ah-n\", \"nn\"],\n  \"compensatory\": [\"k-ah-m p-eh1-n s-ah t-ao r-iy\", \"jj\"],\n  \"compete\": [\"k-ah-m p-iy1-t\", \"vb vbp\"],\n  \"competence\": [\"k-aa1-m p-ah t-ih-n-s\", \"nn\"],\n  \"competency\": [\"k-aa1-m p-ah t-ih-n s-iy\", \"nn\"],\n  \"competent\": [\"k-aa1-m p-ah t-ih-n-t\", \"jj\"],\n  \"competently\": [\"k-aa1-m p-ah t-ih-n-t l-iy\", \"rb\"],\n  \"competing\": [\"k-ah-m p-iy1 t-ih-ng\", \"vbg jj\"],\n  \"competition\": [\"k-aa-m p-ah t-ih1 sh-ah-n\", \"nn\"],\n  \"competitive\": [\"k-ah-m p-eh1 t-ah t-ih-v\", \"jj\"],\n  \"competitively\": [\"k-ah-m p-eh1 t-ih t-ih-v l-iy\", \"rb\"],\n  \"competitiveness\": [\"k-ah-m p-eh1 t-ih t-ih-v n-ih-s\", \"nn\"],\n  \"competitor\": [\"k-ah-m p-eh1 t-ah t-er\", \"nn\"],\n  \"compilation\": [\"k-aa-m p-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"compile\": [\"k-ah-m p-ay1-l\", \"vb\"],\n  \"complacency\": [\"k-ah-m p-l-ey1 s-ah-n s-iy\", \"nn\"],\n  \"complacent\": [\"k-ah-m p-l-ey1 s-ah-n-t\", \"jj\"],\n  \"complacently\": [\"k-ah-m p-l-ey1 s-ah-n-t l-iy\", \"rb\"],\n  \"complain\": [\"k-ah-m p-l-ey1-n\", \"vbp vb\"],\n  \"complaint\": [\"k-ah-m p-l-ey1-n-t\", \"nn\"],\n  \"complaisant\": [\"k-ah-m p-l-ey1 s-ah-n-t\", \"jj\"],\n  \"complement\": [\"k-aa1-m p-l-ah m-ah-n-t\", \"nn vbp vb\"],\n  \"complementary\": [\"k-aa-m p-l-ah m-eh1-n t-r-iy\", \"jj\"],\n  \"complete\": [\"k-ah-m p-l-iy1-t\", \"jj vb vbp\"],\n  \"completed\": [\"k-ah-m p-l-iy1 t-ah-d\", \"vbn jj vbd\"],\n  \"completely\": [\"k-ah-m p-l-iy1-t l-iy\", \"rb\"],\n  \"completeness\": [\"k-ah-m p-l-iy1-t n-ah-s\", \"nn\"],\n  \"completion\": [\"k-ah-m p-l-iy1 sh-ah-n\", \"nn\"],\n  \"complex\": [\"k-aa1-m p-l-eh-k-s\", \"jj nn\"],\n  \"complexion\": [\"k-ah-m p-eh1-k sh-ah-n\", \"nn\"],\n  \"complexity\": [\"k-ah-m p-l-eh1-k s-ah t-iy\", \"nn\"],\n  \"compliance\": [\"k-ah-m p-l-ay1 ah-n-s\", \"nn\"],\n  \"compliant\": [\"k-ah-m p-l-ay1 ah-n-t\", \"jj\"],\n  \"complicate\": [\"k-aa1-m p-l-ah k-ey-t\", \"vb vbp\"],\n  \"complicated\": [\"k-aa1-m p-l-ah k-ey t-ah-d\", \"vbn jj vbd\"],\n  \"complication\": [\"k-aa-m p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"complicity\": [\"k-ah-m p-l-ih1 s-ah t-iy\", \"nn\"],\n  \"compliment\": [\"k-aa1-m p-l-ah m-eh-n-t\", \"nn vbp vb\"],\n  \"complimentary\": [\"k-aa-m p-l-ah m-eh1-n t-er iy\", \"jj\"],\n  \"comply\": [\"k-ah-m p-l-ay1\", \"vb vbp\"],\n  \"component\": [\"k-ah-m p-ow1 n-ah-n-t\", \"nn\"],\n  \"comportment\": [\"k-ah-m p-ao1-r-t m-ah-n-t\", \"nn\"],\n  \"compose\": [\"k-ah-m p-ow1-z\", \"vb vbp\"],\n  \"composed\": [\"k-ah-m p-ow1-z-d\", \"vbn vbd jj\"],\n  \"composer\": [\"k-ah-m p-ow1 z-er\", \"nn\"],\n  \"composite\": [\"k-ah-m p-aa1 z-ah-t\", \"jj nn\"],\n  \"composition\": [\"k-aa-m p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"compositional\": [\"k-aa-m p-ah z-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"compost\": [\"k-aa1-m p-ow-s-t\", \"nn\"],\n  \"composting\": [\"k-aa1-m p-ow s-t-ih-ng\", \"nn\"],\n  \"composure\": [\"k-ah-m p-ow1 zh-er\", \"nn\"],\n  \"compote\": [\"k-aa1-m p-ow-t\", \"nn\"],\n  \"compound\": [\"k-aa1-m p-aw-n-d\", \"nn jj vb vbp\"],\n  \"compounded\": [\"k-ah-m p-aw1-n d-ah-d\", \"vbn jj vbd\"],\n  \"comprehend\": [\"k-aa-m p-r-iy hh-eh1-n-d\", \"vb\"],\n  \"comprehension\": [\"k-aa-m p-r-iy hh-eh1-n sh-ah-n\", \"nn\"],\n  \"comprehensive\": [\"k-aa-m p-r-iy hh-eh1-n s-ih-v\", \"jj\"],\n  \"comprehensively\": [\"k-aa-m p-r-ih hh-eh1-n s-ih-v l-iy\", \"rb\"],\n  \"compress\": [\"k-aa1-m p-r-eh-s\", \"vb\"],\n  \"compression\": [\"k-ah-m p-r-eh1 sh-ah-n\", \"nn\"],\n  \"compressor\": [\"k-ah-m p-r-eh1 s-er\", \"nn\"],\n  \"comprise\": [\"k-ah-m p-r-ay1-z\", \"vbp vb\"],\n  \"compromise\": [\"k-aa1-m p-r-ah m-ay-z\", \"nn jj vb\"],\n  \"compromising\": [\"k-aa1-m p-r-ah m-ay z-ih-ng\", \"vbg jj\"],\n  \"comptroller\": [\"k-ah-n t-r-ow1 l-er\", \"nn\"],\n  \"compulsion\": [\"k-ah-m p-ah1-l sh-ah-n\", \"nn\"],\n  \"compulsive\": [\"k-ah-m p-ah1-l s-ih-v\", \"jj\"],\n  \"compulsively\": [\"k-ah-m p-ah1-l s-ih-v l-iy\", \"rb\"],\n  \"compulsory\": [\"k-ah-m p-ah1-l s-er iy\", \"jj\"],\n  \"computation\": [\"k-aa-m p-y-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"computational\": [\"k-aa-m p-y-uw t-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"compute\": [\"k-ah-m p-y-uw1-t\", \"vb\"],\n  \"computed\": [\"k-ah-m p-y-uw1 t-ah-d\", \"vbn jj\"],\n  \"computer\": [\"k-ah-m p-y-uw1 t-er\", \"nn\"],\n  \"computerize\": [\"k-ah-m p-y-uw1 t-er ay-z\", \"vb\"],\n  \"computerized\": [\"k-ah-m p-y-uw1 t-er ay-z-d\", \"jj vbd vbn\"],\n  \"comrade\": [\"k-aa1-m r-ae-d\", \"nn\"],\n  \"con\": [\"k-aa1-n\", \"nn\"],\n  \"concave\": [\"k-aa-n k-ey1-v\", \"jj\"],\n  \"conceal\": [\"k-ah-n s-iy1-l\", \"vb\"],\n  \"concealed\": [\"k-ah-n s-iy1-l-d\", \"vbn jj vbd\"],\n  \"concealment\": [\"k-ah-n s-iy1-l m-ah-n-t\", \"nn\"],\n  \"concede\": [\"k-ah-n s-iy1-d\", \"vbp vb\"],\n  \"conceit\": [\"k-ah-n s-iy1-t\", \"nn\"],\n  \"conceivable\": [\"k-ah-n s-iy1 v-ah b-ah-l\", \"jj\"],\n  \"conceivably\": [\"k-ah-n s-iy1 v-ah b-l-iy\", \"rb\"],\n  \"conceive\": [\"k-ah-n s-iy1-v\", \"vb vbp\"],\n  \"conceived\": [\"k-ah-n s-iy1-v-d\", \"vbn vbd jj\"],\n  \"concentrate\": [\"k-aa1-n s-ah-n t-r-ey-t\", \"vb vbp nn\"],\n  \"concentrated\": [\"k-aa1-n s-ah-n t-r-ey t-ah-d\", \"vbn jj vbd\"],\n  \"concentration\": [\"k-aa-n s-ah-n t-r-ey1 sh-ah-n\", \"nn\"],\n  \"concentric\": [\"k-ah-n s-eh1-n t-r-ih-k\", \"jj\"],\n  \"concept\": [\"k-aa1-n s-eh-p-t\", \"nn\"],\n  \"conception\": [\"k-ah-n s-eh1-p sh-ah-n\", \"nn\"],\n  \"conceptual\": [\"k-ah-n s-eh1-p ch-uw ah-l\", \"jj\"],\n  \"conceptually\": [\"k-ah-n s-eh1-p ch-uw ah l-iy\", \"rb\"],\n  \"concern\": [\"k-ah-n s-er1-n\", \"vbp vb nn\"],\n  \"concerned\": [\"k-ah-n s-er1-n-d\", \"vbd jj vbn\"],\n  \"concert\": [\"k-aa1-n s-er-t\", \"nn vb\"],\n  \"concerted\": [\"k-ah-n s-er1 t-ah-d\", \"jj vbn\"],\n  \"concertmaster\": [\"k-aa1-n s-er-t m-ae s-t-er\", \"nn\"],\n  \"concerto\": [\"k-ah-n ch-eh1-r t-ow\", \"nn\"],\n  \"concession\": [\"k-ah-n s-eh1 sh-ah-n\", \"nn\"],\n  \"concierge\": [\"k-aa-n s-iy eh1-r-zh\", \"nn\"],\n  \"conciliator\": [\"k-ah-n s-ih1 l-iy ey t-er\", \"nn\"],\n  \"conciliatory\": [\"k-ah-n s-ih1 l-iy ah t-ao r-iy\", \"jj\"],\n  \"concise\": [\"k-ah-n s-ay1-s\", \"jj\"],\n  \"concisely\": [\"k-ah-n s-ay1-s l-iy\", \"rb\"],\n  \"conclave\": [\"k-aa1-n k-l-ey-v\", \"nn\"],\n  \"conclude\": [\"k-ah-n k-l-uw1-d\", \"vb vbp\"],\n  \"concluding\": [\"k-ah-n k-l-uw1 d-ih-ng\", \"vbg jj\"],\n  \"conclusion\": [\"k-ah-n k-l-uw1 zh-ah-n\", \"nn\"],\n  \"conclusive\": [\"k-ah-n k-l-uw1 s-ih-v\", \"jj\"],\n  \"conclusively\": [\"k-ah-n k-l-uw1 s-ih-v l-iy\", \"rb\"],\n  \"concoct\": [\"k-ah-n k-aa1-k-t\", \"vb\"],\n  \"concoction\": [\"k-ah-n k-aa1-k sh-ah-n\", \"nn\"],\n  \"concomitant\": [\"k-aa-n k-aa1 m-ah t-ah-n-t\", \"jj nn\"],\n  \"concomitantly\": [\"k-aa-n k-aa1 m-ah t-ah-n-t l-iy\", \"rb\"],\n  \"concord\": [\"k-aa1-n k-ao-r-d\", \"nn\"],\n  \"concrete\": [\"k-ah-n k-r-iy1-t\", \"jj nn\"],\n  \"concretely\": [\"k-aa1-n k-r-iy-t l-iy\", \"rb\"],\n  \"concur\": [\"k-ah-n k-er1\", \"vbp vb\"],\n  \"concurrence\": [\"k-ah-n k-er1 ah-n-s\", \"nn\"],\n  \"concurrent\": [\"k-ah-n k-er1 ah-n-t\", \"jj\"],\n  \"concurrently\": [\"k-ah-n k-er1 ah-n-t l-iy\", \"rb\"],\n  \"concussion\": [\"k-ah-n k-ah1 sh-ah-n\", \"nn\"],\n  \"condemn\": [\"k-ah-n d-eh1-m\", \"vb vbp\"],\n  \"condemnation\": [\"k-aa-n d-ah-m n-ey1 sh-ah-n\", \"nn\"],\n  \"condemned\": [\"k-ah-n d-eh1-m-d\", \"vbn jj vbd\"],\n  \"condensate\": [\"k-aa1-n d-ah-n s-ey-t\", \"nn\"],\n  \"condensation\": [\"k-aa-n d-ah-n s-ey1 sh-ah-n\", \"nn\"],\n  \"condense\": [\"k-ah-n d-eh1-n-s\", \"vb\"],\n  \"condensed\": [\"k-ah-n d-eh1-n-s-t\", \"jj vbn\"],\n  \"condenser\": [\"k-ah-n d-eh1-n s-er\", \"nn\"],\n  \"condescend\": [\"k-aa-n-d-ih-s-eh1-n-d\", \"vb\"],\n  \"condescending\": [\"k-aa-n d-ih s-eh1-n d-ih-ng\", \"jj vbg\"],\n  \"condescension\": [\"k-aa-n d-ah s-eh1-n sh-ah-n\", \"nn\"],\n  \"condiment\": [\"k-aa1-n d-ah m-ah-n-t\", \"nn\"],\n  \"condition\": [\"k-ah-n d-ih1 sh-ah-n\", \"nn vbp vb\"],\n  \"conditional\": [\"k-ah-n d-ih1 sh-ah n-ah-l\", \"jj nn\"],\n  \"conditionally\": [\"k-ah-n d-ih1 sh-ah-n ah l-iy\", \"rb\"],\n  \"conditioned\": [\"k-ah-n d-ih1 sh-ah-n-d\", \"vbn vbd jj\"],\n  \"conditioner\": [\"k-ah-n d-ih1 sh-ah-n er\", \"nn\"],\n  \"conditioning\": [\"k-ah-n d-ih1 sh-ah-n ih-ng\", \"nn vbg\"],\n  \"condo\": [\"k-aa1-n d-ow\", \"nn\"],\n  \"condolence\": [\"k-ah-n d-ow1 l-ah-n s-ah\", \"nn\"],\n  \"condom\": [\"k-aa1-n d-ah-m\", \"nn\"],\n  \"condominium\": [\"k-aa-n d-ah m-ih1 n-iy ah-m\", \"nn\"],\n  \"condone\": [\"k-ah-n d-ow1-n\", \"vb\"],\n  \"conducive\": [\"k-ah-n d-uw1 s-ih-v\", \"jj\"],\n  \"conduct\": [\"k-ah-n d-ah1-k-t\", \"nn vbp vb\"],\n  \"conduction\": [\"k-ah-n d-ah1-k sh-ah-n\", \"nn\"],\n  \"conductivity\": [\"k-aa-n d-ah-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"conductor\": [\"k-ah-n d-ah1-k t-er\", \"nn\"],\n  \"conduit\": [\"k-aa1-n d-uw ih-t\", \"nn\"],\n  \"cone\": [\"k-ow1-n\", \"nn vb\"],\n  \"confabulation\": [\"k-ah-n f-ae b-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"confectionary\": [\"k-ah-n f-eh1-k sh-ah-n eh r-iy\", \"jj\"],\n  \"confectioner\": [\"k-ah-n f-eh1-k sh-ah-n er\", \"nn\"],\n  \"confectionery\": [\"k-ah-n f-eh1-k sh-ah-n eh r-iy\", \"nn\"],\n  \"confederacy\": [\"k-ah-n f-eh1 d-er ah s-iy\", \"nn\"],\n  \"confederation\": [\"k-ah-n f-eh d-er ey1 sh-ah-n\", \"nn\"],\n  \"confer\": [\"k-ah-n f-er1\", \"vb vbp\"],\n  \"conferee\": [\"k-aa-n f-er iy1\", \"nn\"],\n  \"conference\": [\"k-aa1-n f-er ah-n-s\", \"nn\"],\n  \"confess\": [\"k-ah-n f-eh1-s\", \"vb vbp\"],\n  \"confession\": [\"k-ah-n f-eh1 sh-ah-n\", \"nn\"],\n  \"confessional\": [\"k-ah-n f-eh1 sh-ah n-ah-l\", \"nn jj\"],\n  \"confidant\": [\"k-aa1-n f-ah d-aa-n-t\", \"nn\"],\n  \"confidante\": [\"k-aa1-n f-ah d-ae-n-t\", \"nn\"],\n  \"confide\": [\"k-ah-n f-ay1-d\", \"vb vbp\"],\n  \"confidence\": [\"k-aa1-n f-ah d-ah-n-s\", \"nn\"],\n  \"confident\": [\"k-aa1-n f-ah d-ah-n-t\", \"jj\"],\n  \"confidential\": [\"k-aa-n f-ah d-eh1-n sh-ah-l\", \"jj\"],\n  \"confidentiality\": [\"k-aa-n f-ah d-eh-n sh-iy ae1 l-ah t-iy\", \"nn\"],\n  \"confidentially\": [\"k-aa-n f-ah d-eh1-n sh-ah l-iy\", \"rb\"],\n  \"confidently\": [\"k-aa1-n f-ah d-ah-n-t l-iy\", \"rb\"],\n  \"confiding\": [\"k-ah-n f-ay1 d-ih-ng\", \"vbg jj\"],\n  \"configuration\": [\"k-ah-n f-ih g-y-er ey1 sh-ah-n\", \"nn\"],\n  \"confine\": [\"k-ah-n f-ay1-n\", \"vb vbp\"],\n  \"confined\": [\"k-ah-n f-ay1-n-d\", \"vbn jj vbd\"],\n  \"confinement\": [\"k-ah-n f-ay1-n m-ah-n-t\", \"nn\"],\n  \"confirm\": [\"k-ah-n f-er1-m\", \"vb vbp\"],\n  \"confirmation\": [\"k-aa-n f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"confirmed\": [\"k-ah-n f-er1-m-d\", \"vbd vbn jj\"],\n  \"confiscate\": [\"k-aa1-n f-ah s-k-ey-t\", \"vb\"],\n  \"confiscation\": [\"k-aa-n f-ah s-k-ey1 sh-ah-n\", \"nn\"],\n  \"confiscatory\": [\"k-ah-n f-ih1-s k-ah t-ao r-iy\", \"jj\"],\n  \"conflagration\": [\"k-aa-n f-l-ah g-r-ey1 sh-ah-n\", \"nn\"],\n  \"conflict\": [\"k-aa1-n f-l-ih-k-t\", \"nn vb vbp\"],\n  \"conflicting\": [\"k-ah-n f-l-ih1-k t-ih-ng\", \"vbg jj\"],\n  \"confluence\": [\"k-aa1-n f-l-uw ah-n-s\", \"nn\"],\n  \"conform\": [\"k-ah-n f-ao1-r-m\", \"vb vbp\"],\n  \"conformance\": [\"k-ah-n f-ao1-r m-ah-n-s\", \"nn\"],\n  \"conformational\": [\"k-aa-n f-er m-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"conformist\": [\"k-ah-n f-ao1-r m-ih-s-t\", \"jj nn\"],\n  \"conformity\": [\"k-ah-n f-ao1-r m-ah t-iy\", \"nn\"],\n  \"confound\": [\"k-aa-n f-aw1-n-d\", \"vb\"],\n  \"confront\": [\"k-ah-n f-r-ah1-n-t\", \"vb vbp\"],\n  \"confrontation\": [\"k-aa-n f-r-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"confrontational\": [\"k-aa-n f-r-ah-n t-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"confuse\": [\"k-ah-n f-y-uw1-z\", \"vb vbp\"],\n  \"confused\": [\"k-ah-n f-y-uw1-z-d\", \"vbn jj vbd\"],\n  \"confusing\": [\"k-ah-n f-y-uw1 z-ih-ng\", \"jj vbg\"],\n  \"confusion\": [\"k-ah-n f-y-uw1 zh-ah-n\", \"nn\"],\n  \"congeal\": [\"k-ah-n jh-iy1-l\", \"vb\"],\n  \"congenial\": [\"k-ah-n jh-iy1 n-y-ah-l\", \"jj\"],\n  \"congeniality\": [\"k-ah-n jh-iy n-iy ae1 l-ah t-iy\", \"nn\"],\n  \"congenital\": [\"k-ah-n jh-eh1 n-ah t-ah-l\", \"jj\"],\n  \"congest\": [\"k-ah-n-jh-eh1-s-t\", \"vb\"],\n  \"congested\": [\"k-ah-n jh-eh1 s-t-ah-d\", \"jj vbn\"],\n  \"congestion\": [\"k-ah-n jh-eh1-s ch-ah-n\", \"nn\"],\n  \"congestive\": [\"k-ah-n jh-eh1 s-t-ih-v\", \"jj\"],\n  \"conglomerate\": [\"k-ah-n g-l-aa1 m-er ah-t\", \"nn jj\"],\n  \"congratulate\": [\"k-ah-n g-r-ae1 ch-ah l-ey-t\", \"vbp vb\"],\n  \"congratulating\": [\"k-ah-n g-r-ae1 ch-ah l-ey t-ih-ng\", \"nn\"],\n  \"congratulation\": [\"k-ah-n g-r-ae ch-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"congratulatory\": [\"k-ah-n g-r-ae1 ch-ah l-ah t-ao r-iy\", \"jj\"],\n  \"congregate\": [\"k-aa1-ng g-r-ah g-ey-t\", \"vb\"],\n  \"congregation\": [\"k-aa-ng g-r-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"congregational\": [\"k-aa-ng g-r-ah g-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"congress\": [\"k-aa1-ng g-r-ah-s\", \"nn\"],\n  \"congressman\": [\"k-aa1-ng g-r-ah-s m-ah-n\", \"nn\"],\n  \"congruence\": [\"k-ao1-n g-r-uw ah-n-s\", \"nn\"],\n  \"conjecture\": [\"k-ah-n jh-eh1-k ch-er\", \"nn\"],\n  \"conjunction\": [\"k-ah-n jh-ah1-ng-k sh-ah-n\", \"nn\"],\n  \"conjure\": [\"k-aa1-n jh-er\", \"vb vbp\"],\n  \"connect\": [\"k-ah n-eh1-k-t\", \"vb vbp\"],\n  \"connected\": [\"k-ah n-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"connecting\": [\"k-ah n-eh1-k t-ih-ng\", \"vbg jj\"],\n  \"connection\": [\"k-ah n-eh1-k sh-ah-n\", \"nn\"],\n  \"connective\": [\"k-ah n-eh1-k t-ih-v\", \"jj\"],\n  \"connector\": [\"k-ah n-eh1-k t-er\", \"nn\"],\n  \"conned\": [\"k-aa1-n-d\", \"vbn\"],\n  \"connivance\": [\"k-ah n-ay1 v-ah-n-s\", \"nn\"],\n  \"connoisseur\": [\"k-aa n-ah s-er1\", \"nn\"],\n  \"connotation\": [\"k-aa n-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"connote\": [\"k-ah n-ow1-t\", \"vb vbp\"],\n  \"conquer\": [\"k-aa1-ng k-er\", \"vb vbp\"],\n  \"conqueror\": [\"k-aa1-ng k-er er\", \"nn\"],\n  \"conquest\": [\"k-aa1-ng k-w-eh-s-t\", \"nn\"],\n  \"conscience\": [\"k-aa1-n sh-ah-n-s\", \"nn\"],\n  \"conscientious\": [\"k-aa-n sh-iy eh1-n sh-ah-s\", \"jj\"],\n  \"conscious\": [\"k-aa1-n sh-ah-s\", \"jj nn\"],\n  \"consciously\": [\"k-aa1-n sh-ah-s l-iy\", \"rb\"],\n  \"consciousness\": [\"k-aa1-n sh-ah-s n-ah-s\", \"nn\"],\n  \"conscript\": [\"k-aa1-n s-k-r-ih-p-t\", \"nn jj vb\"],\n  \"conscription\": [\"k-ah-n s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"consecutive\": [\"k-ah-n s-eh1 k-y-ah t-ih-v\", \"jj\"],\n  \"consensual\": [\"k-ah-n s-eh1-n s-uw ah-l\", \"jj\"],\n  \"consensus\": [\"k-ah-n s-eh1-n s-ah-s\", \"nn\"],\n  \"consent\": [\"k-ah-n s-eh1-n-t\", \"nn vb\"],\n  \"consenting\": [\"k-ah-n s-eh1-n t-ih-ng\", \"vbg jj\"],\n  \"consequence\": [\"k-aa1-n s-ah k-w-ah-n-s\", \"nn\"],\n  \"consequent\": [\"k-aa1-n s-ah k-w-ah-n-t\", \"jj\"],\n  \"consequential\": [\"k-aa-n s-ah k-w-eh1-n ch-ah-l\", \"jj\"],\n  \"consequently\": [\"k-aa1-n s-ah k-w-ah-n-t l-iy\", \"rb\"],\n  \"conservancy\": [\"k-ah-n s-er1 v-ah-n s-iy\", \"nn\"],\n  \"conservation\": [\"k-aa-n s-er v-ey1 sh-ah-n\", \"nn\"],\n  \"conservationist\": [\"k-aa-n s-er v-ey1 sh-ah-n ah-s-t\", \"nn\"],\n  \"conservatism\": [\"k-ah-n s-er1 v-ah t-ih z-ah-m\", \"nn\"],\n  \"conservative\": [\"k-ah-n s-er1 v-ah t-ih-v\", \"jj nn\"],\n  \"conservatively\": [\"k-ah-n s-er1 v-ah t-ih-v l-iy\", \"rb\"],\n  \"conservator\": [\"k-ah-n s-er1 v-ah t-er\", \"nn\"],\n  \"conservatorship\": [\"k-ah-n s-er1 v-ah t-er sh-ih-p\", \"nn\"],\n  \"conservatory\": [\"k-ah-n s-er1 v-ah t-ao r-iy\", \"nn\"],\n  \"conserve\": [\"k-ah-n s-er1-v\", \"vb\"],\n  \"consider\": [\"k-ah-n s-ih1 d-er\", \"vb vbp\"],\n  \"considerable\": [\"k-ah-n s-ih1 d-er ah b-ah-l\", \"jj\"],\n  \"considerably\": [\"k-ah-n s-ih1 d-er ah b-l-iy\", \"rb\"],\n  \"considerate\": [\"k-ah-n s-ih1 d-er ah-t\", \"jj\"],\n  \"consideration\": [\"k-ah-n s-ih d-er ey1 sh-ah-n\", \"nn\"],\n  \"considered\": [\"k-ah-n s-ih1 d-er-d\", \"vbn vbd jj\"],\n  \"consign\": [\"k-ah-n s-ay1-n\", \"vb\"],\n  \"consist\": [\"k-ah-n s-ih1-s-t\", \"vb vbp\"],\n  \"consistence\": [\"k-ah-n s-ih1 s-t-ah-n-s\", \"nn\"],\n  \"consistency\": [\"k-ah-n s-ih1 s-t-ah-n s-iy\", \"nn\"],\n  \"consistent\": [\"k-ah-n s-ih1 s-t-ah-n-t\", \"jj\"],\n  \"consistently\": [\"k-ah-n s-ih1 s-t-ah-n-t l-iy\", \"rb\"],\n  \"consolation\": [\"k-aa-n s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"console\": [\"k-aa1-n s-ow-l\", \"vb vbp\"],\n  \"consolidate\": [\"k-ah-n s-aa1 l-ih d-ey-t\", \"vb vbp\"],\n  \"consolidated\": [\"k-ah-n s-aa1 l-ah d-ey t-ah-d\", \"jj vbd vbn\"],\n  \"consolidating\": [\"k-ah-n s-aa1 l-ah d-ey t-ih-ng\", \"vbg jj\"],\n  \"consolidation\": [\"k-ah-n s-aa l-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"consonant\": [\"k-aa1-n s-ah n-ah-n-t\", \"jj nn\"],\n  \"consonantal\": [\"k-aa-n s-ah n-aa1-n t-ah-l\", \"jj\"],\n  \"consort\": [\"k-ah-n-s-ao1-r-t\", \"vb\"],\n  \"consortium\": [\"k-ah-n s-ao1-r sh-iy ah-m\", \"nn\"],\n  \"conspicuous\": [\"k-ah-n s-p-ih1 k-y-uw ah-s\", \"jj\"],\n  \"conspicuously\": [\"k-ah-n s-p-ih1 k-y-uw ah-s l-iy\", \"rb\"],\n  \"conspiracy\": [\"k-ah-n s-p-ih1 r-ah s-iy\", \"nn\"],\n  \"conspirator\": [\"k-ah-n s-p-ih1 r-ah t-er\", \"nn\"],\n  \"conspiratorial\": [\"k-ah-n s-p-ih r-ah t-ao1 r-iy ah-l\", \"jj\"],\n  \"conspire\": [\"k-ah-n s-p-ay1 er\", \"vbp vb\"],\n  \"constable\": [\"k-aa1-n s-t-ah b-ah-l\", \"nn\"],\n  \"constancy\": [\"k-aa1-n s-t-ah-n s-iy\", \"nn\"],\n  \"constant\": [\"k-aa1-n s-t-ah-n-t\", \"jj nn rb\"],\n  \"constantly\": [\"k-aa1-n s-t-ah-n-t l-iy\", \"rb\"],\n  \"constellation\": [\"k-aa-n s-t-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"consternation\": [\"k-aa-n s-t-er n-ey1 sh-ah-n\", \"nn\"],\n  \"constipation\": [\"k-aa-n s-t-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"constituency\": [\"k-ah-n s-t-ih1 ch-uw ah-n s-iy\", \"nn\"],\n  \"constituent\": [\"k-ah-n s-t-ih1 ch-uw ah-n-t\", \"nn jj\"],\n  \"constitute\": [\"k-aa1-n s-t-ah t-uw-t\", \"vbp vb\"],\n  \"constitution\": [\"k-aa-n s-t-ah t-uw1 sh-ah-n\", \"nn\"],\n  \"constitutional\": [\"k-aa-n s-t-ah t-uw1 sh-ah n-ah-l\", \"jj\"],\n  \"constitutionality\": [\"k-aa-n s-t-ih t-uw sh-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"constitutionally\": [\"k-aa-n s-t-ah t-uw1 sh-ah-n ah-l iy\", \"rb\"],\n  \"constrain\": [\"k-ah-n s-t-r-ey1-n\", \"vb\"],\n  \"constrained\": [\"k-ah-n s-t-r-ey1-n-d\", \"vbn jj\"],\n  \"constraint\": [\"k-ah-n s-t-r-ey1-n-t\", \"nn\"],\n  \"constrict\": [\"k-ah-n-s-t-r-ih1-k-t\", \"vb\"],\n  \"constricted\": [\"k-ah-n s-t-r-ih1-k t-ah-d\", \"jj vbd vbn\"],\n  \"constriction\": [\"k-ah-n s-t-r-ih1-k sh-ah-n\", \"nn\"],\n  \"constrictor\": [\"k-ah-n s-t-r-ih1-k t-er\", \"nn\"],\n  \"construct\": [\"k-ah-n s-t-r-ah1-k-t\", \"vb vbp\"],\n  \"construction\": [\"k-ah-n s-t-r-ah1-k sh-ah-n\", \"nn\"],\n  \"constructive\": [\"k-ah-n s-t-r-ah1-k t-ih-v\", \"jj\"],\n  \"constructively\": [\"k-ah-n s-t-r-ah1-k t-ih-v l-iy\", \"rb\"],\n  \"construe\": [\"k-ah-n s-t-r-uw1\", \"vb vbp\"],\n  \"consul\": [\"k-aa1-n s-ah-l\", \"nn\"],\n  \"consular\": [\"k-aa1-n s-ah l-er\", \"jj\"],\n  \"consulate\": [\"k-aa1-n s-ah l-ah-t\", \"nn\"],\n  \"consult\": [\"k-ah-n s-ah1-l-t\", \"vb\"],\n  \"consultancy\": [\"k-ah-n s-ah1-l t-ah-n s-iy\", \"nn\"],\n  \"consultant\": [\"k-ah-n s-ah1-l t-ah-n-t\", \"nn\"],\n  \"consultation\": [\"k-aa-n s-ah-l t-ey1 sh-ah-n\", \"nn\"],\n  \"consultative\": [\"k-ah-n s-ah1-l t-ah t-ih-v\", \"jj\"],\n  \"consulting\": [\"k-ah-n s-ah1-l t-ih-ng\", \"jj vbg\"],\n  \"consume\": [\"k-ah-n s-uw1-m\", \"vbp vb\"],\n  \"consumer\": [\"k-ah-n s-uw1 m-er\", \"nn\"],\n  \"consumerism\": [\"k-ah-n s-uw1 m-er ih z-ah-m\", \"nn\"],\n  \"consummate\": [\"k-aa1-n s-ah m-ah-t\", \"jj vb\"],\n  \"consummation\": [\"k-aa-n s-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"consumption\": [\"k-ah-n s-ah1-m-p sh-ah-n\", \"nn\"],\n  \"contact\": [\"k-aa1-n t-ae-k-t\", \"nn jj vb\"],\n  \"contagion\": [\"k-ah-n t-ey1 jh-ah-n\", \"nn\"],\n  \"contagious\": [\"k-ah-n t-ey1 jh-ah-s\", \"jj\"],\n  \"contain\": [\"k-ah-n t-ey1-n\", \"vb vbp\"],\n  \"contained\": [\"k-ah-n t-ey1-n-d\", \"vbd vbn jj\"],\n  \"container\": [\"k-ah-n t-ey1 n-er\", \"nn\"],\n  \"containerboard\": [\"k-ah-n t-ey1 n-er b-ao-r-d\", \"nn\"],\n  \"containment\": [\"k-ah-n t-ey1-n m-ah-n-t\", \"nn\"],\n  \"contaminant\": [\"k-ah-n t-ae1 m-ah n-ah-n-t\", \"nn\"],\n  \"contaminate\": [\"k-ah-n t-ae1 m-ah n-ey-t\", \"vb\"],\n  \"contaminated\": [\"k-ah-n t-ae1 m-ah n-ey t-ah-d\", \"vbn vbd jj\"],\n  \"contamination\": [\"k-ah-n t-ae m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"contemplate\": [\"k-aa1-n t-ah-m p-l-ey-t\", \"vb vbp\"],\n  \"contemplated\": [\"k-aa1-n t-ah-m p-l-ey t-ih-d\", \"vbn jj vbd\"],\n  \"contemplation\": [\"k-aa-n t-ah-m p-l-ey1 sh-ah-n\", \"nn\"],\n  \"contemplative\": [\"k-ah-n t-eh1-m p-l-ah t-ih-v\", \"jj\"],\n  \"contemporary\": [\"k-ah-n t-eh1-m p-er eh r-iy\", \"jj nn\"],\n  \"contempt\": [\"k-ah-n t-eh1-m-p-t\", \"nn\"],\n  \"contemptible\": [\"k-ah-n t-eh1-m-p t-ah b-ah-l\", \"jj\"],\n  \"contemptuous\": [\"k-ah-n t-eh1-m-p ch-uw ah-s\", \"jj\"],\n  \"contemptuously\": [\"k-ah-n t-eh1-m-p ch-w-ah-s l-iy\", \"rb\"],\n  \"contend\": [\"k-ah-n t-eh1-n-d\", \"vbp vb\"],\n  \"contender\": [\"k-ah-n t-eh1-n d-er\", \"nn\"],\n  \"content\": [\"k-aa1-n t-eh-n-t\", \"nn jj vb\"],\n  \"contented\": [\"k-ah-n t-eh1-n t-ah-d\", \"vbn jj\"],\n  \"contentedly\": [\"k-ah-n t-eh1-n t-ah-d l-iy\", \"rb\"],\n  \"contention\": [\"k-ah-n t-eh1-n sh-ah-n\", \"nn\"],\n  \"contentious\": [\"k-ah-n t-eh1-n sh-ah-s\", \"jj\"],\n  \"contentment\": [\"k-ah-n t-eh1-n-t m-ah-n-t\", \"nn\"],\n  \"contest\": [\"k-aa1-n t-eh-s-t\", \"nn vb\"],\n  \"contestant\": [\"k-ah-n t-eh1 s-t-ah-n-t\", \"nn\"],\n  \"contested\": [\"k-ah-n t-eh1 s-t-ah-d\", \"vbn jj vbd\"],\n  \"context\": [\"k-aa1-n t-eh-k-s-t\", \"nn\"],\n  \"contiguous\": [\"k-ah-n t-ih1 g-y-uw ah-s\", \"jj\"],\n  \"continent\": [\"k-aa1-n t-ah n-ah-n-t\", \"nn\"],\n  \"continental\": [\"k-aa-n t-ah n-eh1-n t-ah-l\", \"jj\"],\n  \"continentally\": [\"k-aa-n t-ah n-eh1-n t-ah l-iy\", \"rb\"],\n  \"contingency\": [\"k-ah-n t-ih1-n jh-ah-n s-iy\", \"nn\"],\n  \"contingent\": [\"k-ah-n t-ih1-n jh-ah-n-t\", \"jj nn\"],\n  \"continual\": [\"k-ah-n t-ih1 n-y-uw ah-l\", \"jj\"],\n  \"continually\": [\"k-ah-n t-ih1 n-y-uw ah l-iy\", \"rb\"],\n  \"continuance\": [\"k-ah-n t-ih1 n-y-uw ah-n-s\", \"nn\"],\n  \"continuation\": [\"k-ah-n t-ih n-y-uw ey1 sh-ah-n\", \"nn\"],\n  \"continue\": [\"k-ah-n t-ih1 n-y-uw\", \"vb vbp\"],\n  \"continued\": [\"k-ah-n t-ih1 n-y-uw-d\", \"vbd jj vbn\"],\n  \"continuing\": [\"k-ah-n t-ih1 n-y-uw ih-ng\", \"vbg jj\"],\n  \"continuity\": [\"k-aa-n t-ah n-uw1 ah t-iy\", \"nn\"],\n  \"continuous\": [\"k-ah-n t-ih1 n-y-uw ah-s\", \"jj\"],\n  \"continuously\": [\"k-ah-n t-ih1 n-y-uw ah-s l-iy\", \"rb\"],\n  \"continuum\": [\"k-ah-n t-ih1 n-y-uw ah-m\", \"nn\"],\n  \"contorted\": [\"k-ah-n t-ao1-r t-ah-d\", \"jj\"],\n  \"contortion\": [\"k-ah-n t-ao1-r sh-ah-n\", \"nn\"],\n  \"contour\": [\"k-aa1-n t-uh-r\", \"nn\"],\n  \"contraband\": [\"k-aa1-n t-r-ah b-ae-n-d\", \"jj nn\"],\n  \"contraception\": [\"k-aa-n t-r-ah s-eh1-p sh-ah-n\", \"nn\"],\n  \"contraceptive\": [\"k-aa-n t-r-ah s-eh1-p t-ih-v\", \"jj nn\"],\n  \"contract\": [\"k-aa1-n t-r-ae-k-t\", \"nn vb vbp\"],\n  \"contraction\": [\"k-ah-n t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"contractor\": [\"k-aa1-n t-r-ae-k t-er\", \"nn\"],\n  \"contractual\": [\"k-ah-n t-r-ae1-k ch-uw ah-l\", \"jj\"],\n  \"contractually\": [\"k-ah-n t-r-ae1-k ch-uw ah l-iy\", \"rb\"],\n  \"contradict\": [\"k-aa-n t-r-ah d-ih1-k-t\", \"vb vbp\"],\n  \"contradiction\": [\"k-aa-n t-r-ah d-ih1-k sh-ah-n\", \"nn\"],\n  \"contradictorily\": [\"k-aa-n t-r-ah d-ih1-k t-er ah l-iy\", \"rb\"],\n  \"contradictory\": [\"k-aa-n t-r-ah d-ih1-k t-er iy\", \"jj nn\"],\n  \"contraption\": [\"k-ah-n t-r-ae1-p sh-ah-n\", \"nn\"],\n  \"contrarian\": [\"k-aa-n t-r-eh1 r-iy ah-n\", \"jj nn\"],\n  \"contrary\": [\"k-aa1-n t-r-eh r-iy\", \"jj nn\"],\n  \"contrast\": [\"k-aa1-n t-r-ae-s-t\", \"nn vb vbp\"],\n  \"contrasting\": [\"k-ah-n t-r-ae1 s-t-ih-ng\", \"vbg jj\"],\n  \"contretemps\": [\"k-aa1-n t-r-ah t-eh-m-p-s\", \"nn\"],\n  \"contribute\": [\"k-ah-n t-r-ih1 b-y-uw-t\", \"vb vbp\"],\n  \"contributing\": [\"k-ah-n t-r-ih1 b-y-uw t-ih-ng\", \"vbg jj\"],\n  \"contribution\": [\"k-aa-n t-r-ah b-y-uw1 sh-ah-n\", \"nn\"],\n  \"contributor\": [\"k-ah-n t-r-ih1 b-y-ah t-er\", \"nn\"],\n  \"contributory\": [\"k-ah-n t-r-ih1 b-y-ah t-ao r-iy\", \"jj\"],\n  \"contrite\": [\"k-ah-n t-r-ay1-t\", \"jj\"],\n  \"contrition\": [\"k-ah-n t-r-ih1 sh-ah-n\", \"nn\"],\n  \"contrivance\": [\"k-ah-n t-r-ay1 v-ah-n-s\", \"nn\"],\n  \"contrive\": [\"k-ah-n t-r-ay1-v\", \"vb\"],\n  \"contrived\": [\"k-ah-n t-r-ay1-v-d\", \"vbn jj\"],\n  \"control\": [\"k-ah-n t-r-ow1-l\", \"nn jj vb vbp\"],\n  \"controllable\": [\"k-ah-n t-r-ow1 l-ah b-ah-l\", \"jj\"],\n  \"controlled\": [\"k-ah-n t-r-ow1-l-d\", \"vbn jj vbd\"],\n  \"controller\": [\"k-ah-n t-r-ow1 l-er\", \"nn\"],\n  \"controlling\": [\"k-ah-n t-r-ow1 l-ih-ng\", \"vbg jj nn\"],\n  \"controversial\": [\"k-aa-n t-r-ah v-er1 sh-ah-l\", \"jj\"],\n  \"controversy\": [\"k-aa1-n t-r-ah v-er s-iy\", \"nn\"],\n  \"conundrum\": [\"k-ah n-ah1-n d-r-ah-m\", \"nn\"],\n  \"convalescence\": [\"k-aa-n v-ah l-eh1 s-ah-n-s\", \"nn\"],\n  \"convene\": [\"k-ah-n v-iy1-n\", \"vb vbp\"],\n  \"convenience\": [\"k-ah-n v-iy1 n-y-ah-n-s\", \"nn\"],\n  \"convenient\": [\"k-ah-n v-iy1 n-y-ah-n-t\", \"jj\"],\n  \"conveniently\": [\"k-ah-n v-iy1 n-y-ah-n-t l-iy\", \"rb\"],\n  \"convent\": [\"k-aa1-n v-ah-n-t\", \"nn\"],\n  \"convention\": [\"k-ah-n v-eh1-n sh-ah-n\", \"nn\"],\n  \"conventional\": [\"k-ah-n v-eh1-n sh-ah n-ah-l\", \"jj\"],\n  \"conventionally\": [\"k-ah-n v-eh1-n sh-ah-n ah l-iy\", \"rb\"],\n  \"conventioneer\": [\"k-ah-n v-eh-n sh-ah n-ih1-r\", \"nn\"],\n  \"converge\": [\"k-ah-n v-er1-jh\", \"vb vbp\"],\n  \"conversant\": [\"k-ah-n v-er1 s-ah-n-t\", \"nn\"],\n  \"conversation\": [\"k-aa-n v-er s-ey1 sh-ah-n\", \"nn\"],\n  \"conversational\": [\"k-aa-n v-er s-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"converse\": [\"k-aa1-n v-er-s\", \"vb nn\"],\n  \"conversely\": [\"k-aa1-n v-er-s l-iy\", \"rb\"],\n  \"conversion\": [\"k-ah-n v-er1 zh-ah-n\", \"nn\"],\n  \"convert\": [\"k-aa1-n v-er-t\", \"vb vbp nn\"],\n  \"converted\": [\"k-ah-n v-er1 t-ih-d\", \"vbn jj vbd\"],\n  \"converter\": [\"k-ah-n v-er1 t-er\", \"nn\"],\n  \"convertibility\": [\"k-aa-n v-er t-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"convertible\": [\"k-ah-n v-er1 t-ah b-ah-l\", \"jj nn\"],\n  \"convex\": [\"k-ah-n v-eh1-k-s\", \"jj\"],\n  \"convey\": [\"k-ah-n v-ey1\", \"vb vbp\"],\n  \"conveyance\": [\"k-ah-n v-ey1 ah-n-s\", \"nn\"],\n  \"conveyor\": [\"k-ah-n v-ey1 er\", \"nn\"],\n  \"convict\": [\"k-aa1-n v-ih-k-t\", \"nn vb\"],\n  \"conviction\": [\"k-ah-n v-ih1-k sh-ah-n\", \"nn\"],\n  \"convince\": [\"k-ah-n v-ih1-n-s\", \"vb vbp\"],\n  \"convinced\": [\"k-ah-n v-ih1-n-s-t\", \"vbn jj vbd\"],\n  \"convincing\": [\"k-ah-n v-ih1-n s-ih-ng\", \"jj vbg\"],\n  \"convincingly\": [\"k-ah-n v-ih1-n s-ih-ng l-iy\", \"rb\"],\n  \"convivial\": [\"k-ah-n v-ih1 v-iy ah-l\", \"jj\"],\n  \"convocation\": [\"k-aa-n v-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"convolute\": [\"k-aa1-n-v-ah-l-uw-t\", \"vb\"],\n  \"convoluted\": [\"k-aa1-n v-ah l-uw t-ah-d\", \"jj vbn\"],\n  \"convoy\": [\"k-aa1-n v-oy\", \"nn\"],\n  \"convulsion\": [\"k-ah-n v-ah1-l sh-ah-n\", \"nn\"],\n  \"convulsive\": [\"k-ah-n v-ah1-l s-ih-v\", \"jj\"],\n  \"cook\": [\"k-uh1-k\", \"nn vb vbp\"],\n  \"cookbook\": [\"k-uh1-k b-uh-k\", \"nn\"],\n  \"cooker\": [\"k-uh1 k-er\", \"nn\"],\n  \"cookie\": [\"k-uh1 k-iy\", \"nn\"],\n  \"cooking\": [\"k-uh1 k-ih-ng\", \"nn vbg\"],\n  \"cookware\": [\"k-uh1-k w-eh-r\", \"nn\"],\n  \"cool\": [\"k-uw1-l\", \"jj vb vbp\"],\n  \"coolant\": [\"k-uw1 l-ah-n-t\", \"nn\"],\n  \"cooled\": [\"k-uw1-l-d\", \"vbn jj vbd\"],\n  \"cooler\": [\"k-uw1 l-er\", \"jjr nn\"],\n  \"coolest\": [\"k-uw1 l-ah-s-t\", \"jjs\"],\n  \"coolly\": [\"k-uw1 l-iy\", \"rb\"],\n  \"coolness\": [\"k-uw1-l n-ah-s\", \"nn\"],\n  \"coop\": [\"k-uw1-p\", \"nn\"],\n  \"cooperate\": [\"k-ow aa1 p-er ey-t\", \"vb vbp\"],\n  \"cooperation\": [\"k-ow aa p-er ey1 sh-ah-n\", \"nn\"],\n  \"cooperative\": [\"k-ow aa1 p-er ey t-ih-v\", \"jj nn\"],\n  \"cooperatively\": [\"k-ow aa1 p-r-ah t-ih-v l-iy\", \"rb\"],\n  \"coordinate\": [\"k-ow ao1-r d-ah-n ah-t\", \"vb nn vbp\"],\n  \"coordinated\": [\"k-ow ao1-r d-ah n-ey t-ih-d\", \"vbn vbd jj\"],\n  \"coordination\": [\"k-ow ao-r d-ah-n ey1 sh-ah-n\", \"nn\"],\n  \"coordinator\": [\"k-ow ao1-r d-ah-n ey t-er\", \"nn\"],\n  \"cop\": [\"k-aa1-p\", \"nn\"],\n  \"cope\": [\"k-ow1-p\", \"vb nn\"],\n  \"copied\": [\"k-aa1 p-iy-d\", \"vbn vbd\"],\n  \"copier\": [\"k-aa1 p-iy er\", \"nn\"],\n  \"copious\": [\"k-ow1 p-iy ah-s\", \"jj\"],\n  \"copper\": [\"k-aa1 p-er\", \"nn\"],\n  \"coppery\": [\"k-aa1 p-er iy\", \"jj nn\"],\n  \"copy\": [\"k-aa1 p-iy\", \"nn vbp vb\"],\n  \"copycat\": [\"k-aa1 p-iy k-ae-t\", \"nn\"],\n  \"copyright\": [\"k-aa1 p-iy r-ay-t\", \"nn vb\"],\n  \"copywriter\": [\"k-aa1 p-iy r-ay t-er\", \"nn\"],\n  \"coral\": [\"k-ao1 r-ah-l\", \"jj\"],\n  \"cord\": [\"k-ao1-r-d\", \"nn\"],\n  \"corded\": [\"k-ao1-r d-ah-d\", \"vbn jj\"],\n  \"cordial\": [\"k-ao1-r jh-ah-l\", \"jj nn\"],\n  \"cordless\": [\"k-ao1-r-d l-ah-s\", \"jj\"],\n  \"cordon\": [\"k-ao1-r d-ah-n\", \"nn vb\"],\n  \"corduroy\": [\"k-ao1-r d-er oy\", \"nn\"],\n  \"core\": [\"k-ao1-r\", \"nn\"],\n  \"coriander\": [\"k-ao r-iy ae1-n d-er\", \"nn\"],\n  \"corinthian\": [\"k-er ih1-n th-iy ah-n\", \"jj\"],\n  \"cork\": [\"k-ao1-r-k\", \"nn\"],\n  \"corkscrew\": [\"k-ao1-r-k s-k-r-uw\", \"nn\"],\n  \"corn\": [\"k-ao1-r-n\", \"nn\"],\n  \"cornea\": [\"k-ao1-r n-iy ah\", \"nn\"],\n  \"corneal\": [\"k-ao-r n-iy1-l\", \"jj\"],\n  \"corner\": [\"k-ao1-r n-er\", \"nn vb\"],\n  \"cornered\": [\"k-ao1-r n-er-d\", \"vbn vbd jj\"],\n  \"cornerstone\": [\"k-ao1-r n-er s-t-ow-n\", \"nn\"],\n  \"cornfield\": [\"k-ao1-r-n f-iy-l-d\", \"nn\"],\n  \"cornmeal\": [\"k-ao1-r-n m-iy-l\", \"nn\"],\n  \"cornstarch\": [\"k-ao1-r-n s-t-aa-r-ch\", \"nn\"],\n  \"cornucopia\": [\"k-ao-r n-ah k-ow1 p-iy ah\", \"nn\"],\n  \"corny\": [\"k-ao1-r n-iy\", \"jj\"],\n  \"corollary\": [\"k-ao1 r-ah l-eh r-iy\", \"nn\"],\n  \"corona\": [\"k-er ow1 n-ah\", \"nn\"],\n  \"coronary\": [\"k-ao1 r-ah n-eh r-iy\", \"jj\"],\n  \"coroner\": [\"k-ao1 r-ah n-er\", \"nn\"],\n  \"corporal\": [\"k-ao1-r p-er ah-l\", \"nn\"],\n  \"corporate\": [\"k-ao1-r p-er ah-t\", \"jj\"],\n  \"corporatewide\": [\"k-ao1-r p-er ih-t w-ay-d\", \"jj\"],\n  \"corporation\": [\"k-ao-r p-er ey1 sh-ah-n\", \"nn\"],\n  \"corporatist\": [\"k-ao1-r p-er ah t-ih-s-t\", \"nn\"],\n  \"corpse\": [\"k-ao1-r-p-s\", \"nn\"],\n  \"corpus\": [\"k-ao1-r p-ah-s\", \"nn\"],\n  \"corral\": [\"k-er ae1-l\", \"nn vb\"],\n  \"correct\": [\"k-er eh1-k-t\", \"jj vbp vb\"],\n  \"corrected\": [\"k-er eh1-k t-ah-d\", \"vbn vbd jj\"],\n  \"correction\": [\"k-er eh1-k sh-ah-n\", \"nn\"],\n  \"correctional\": [\"k-er eh1-k sh-ah n-ah-l\", \"jj\"],\n  \"corrective\": [\"k-er eh1-k t-ih-v\", \"jj\"],\n  \"correctly\": [\"k-er eh1-k-t l-iy\", \"rb\"],\n  \"correctness\": [\"k-er eh1-k-t n-ah-s\", \"nn\"],\n  \"correlate\": [\"k-ao1 r-ah l-ey-t\", \"vb vbp\"],\n  \"correlated\": [\"k-ao1 r-ah l-ey t-ah-d\", \"jj vbd vbn\"],\n  \"correlation\": [\"k-ao r-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"correspond\": [\"k-ao r-ah s-p-aa1-n-d\", \"vb vbp\"],\n  \"correspondence\": [\"k-ao r-ah s-p-aa1-n d-ah-n-s\", \"nn\"],\n  \"correspondent\": [\"k-ao r-ah s-p-aa1-n d-ah-n-t\", \"nn\"],\n  \"corresponding\": [\"k-ao r-ah s-p-aa1-n d-ih-ng\", \"jj vbg\"],\n  \"correspondingly\": [\"k-ao r-ah s-p-aa1-n d-ih-ng l-iy\", \"rb\"],\n  \"corridor\": [\"k-ao1 r-ah d-er\", \"nn\"],\n  \"corroborate\": [\"k-er aa1 b-er ey-t\", \"vb vbp\"],\n  \"corrode\": [\"k-er ow1-d\", \"vbp vb\"],\n  \"corrosion\": [\"k-er ow1 zh-ah-n\", \"nn\"],\n  \"corrosive\": [\"k-er ow1 s-ih-v\", \"jj\"],\n  \"corrugate\": [\"k-ao1-r-ah-g-ey-t\", \"vb\"],\n  \"corrugated\": [\"k-ao1 r-ah g-ey t-ah-d\", \"jj vbn\"],\n  \"corrupt\": [\"k-er ah1-p-t\", \"jj vb\"],\n  \"corrupting\": [\"k-er ah1-p t-ih-ng\", \"vbg jj nn\"],\n  \"corruption\": [\"k-er ah1-p sh-ah-n\", \"nn\"],\n  \"corsage\": [\"k-ao-r s-aa1-zh\", \"nn\"],\n  \"corset\": [\"k-ao1-r s-ah-t\", \"nn\"],\n  \"cortex\": [\"k-ao1-r t-eh-k-s\", \"nn\"],\n  \"cortisone\": [\"k-ao1-r t-ah z-ow-n\", \"nn\"],\n  \"corvette\": [\"k-ao-r v-eh1-t\", \"nn\"],\n  \"cosmetic\": [\"k-aa-z m-eh1 t-ih-k\", \"jj nn\"],\n  \"cosmetology\": [\"k-aa-z m-ah t-aa1 l-ah jh-iy\", \"nn\"],\n  \"cosmic\": [\"k-aa1-z m-ih-k\", \"jj\"],\n  \"cosmopolitan\": [\"k-aa-z m-ah p-aa1 l-ah t-ah-n\", \"jj\"],\n  \"cosmos\": [\"k-aa1-z m-ow-s\", \"nn\"],\n  \"cost\": [\"k-aa1-s-t\", \"nn vbp vb vbd vbn\"],\n  \"costlier\": [\"k-ao1-s-t l-iy er\", \"jjr\"],\n  \"costliest\": [\"k-ao1-s-t l-iy ih-s-t\", \"jjs\"],\n  \"costly\": [\"k-aa1-s-t l-iy\", \"jj rb\"],\n  \"costume\": [\"k-aa s-t-uw1-m\", \"nn vb\"],\n  \"cot\": [\"k-aa1-t\", \"nn\"],\n  \"coterie\": [\"k-ow1 t-er iy\", \"nn\"],\n  \"cottage\": [\"k-aa1 t-ah-jh\", \"nn\"],\n  \"cotton\": [\"k-aa1 t-ah-n\", \"nn\"],\n  \"cottonmouth\": [\"k-aa1 t-ah-n m-aw-th\", \"nn\"],\n  \"cottonseed\": [\"k-aa1 t-ah-n s-iy-d\", \"nn\"],\n  \"couch\": [\"k-aw1-ch\", \"nn\"],\n  \"cough\": [\"k-aa1-f\", \"nn vb\"],\n  \"could\": [\"k-uh1-d\", \"md vbd\"],\n  \"couldn't\": [\"k-uh1-d-ah-n-t\", \"md\"],\n  \"council\": [\"k-aw1-n s-ah-l\", \"nn\"],\n  \"councilman\": [\"k-aw1-n s-ah-l m-ah-n\", \"nn\"],\n  \"councilor\": [\"k-aw1-n s-ah-l er\", \"nn\"],\n  \"counsel\": [\"k-aw1-n s-ah-l\", \"nn vb vbp\"],\n  \"counselor\": [\"k-aw1-n s-ah-l er\", \"nn\"],\n  \"count\": [\"k-aw1-n-t\", \"nn vb vbp\"],\n  \"countdown\": [\"k-aw1-n-t d-aw-n\", \"nn\"],\n  \"countenance\": [\"k-aw1-n t-ah n-ah-n-s\", \"nn vb\"],\n  \"counter\": [\"k-aw1-n t-er\", \"nn vb vbp\"],\n  \"counteract\": [\"k-aw1-n t-er ae-k-t\", \"vb\"],\n  \"counterattack\": [\"k-aw1-n t-er ah t-ae-k\", \"nn vb\"],\n  \"counterbalance\": [\"k-aw1-n t-er b-ae l-ah-n-s\", \"vb nn\"],\n  \"countercultural\": [\"k-aw-n t-er k-ah1-l ch-er ah-l\", \"jj\"],\n  \"counterculture\": [\"k-aw1-n t-er k-ah-l ch-er\", \"jj\"],\n  \"counterfeit\": [\"k-aw1-n t-er f-ih-t\", \"jj\"],\n  \"counterforce\": [\"k-aw1-n t-er f-ao-r-s\", \"nn\"],\n  \"countermeasure\": [\"k-aw1-n t-er m-eh zh-er\", \"nn\"],\n  \"counteroffer\": [\"k-aw1-n t-er ao f-er\", \"nn\"],\n  \"counterpart\": [\"k-aw1-n t-er p-aa-r-t\", \"nn jj\"],\n  \"counterpoint\": [\"k-aw1-n t-er p-oy-n-t\", \"nn\"],\n  \"countersue\": [\"k-aw1-n-t-er-s-uw\", \"vb\"],\n  \"countersuit\": [\"k-aw1-n t-er s-uw-t\", \"nn\"],\n  \"countertenor\": [\"k-aw1-n t-er t-eh n-er\", \"nn\"],\n  \"counterterrorism\": [\"k-aw1-n t-er t-eh r-er ih z-ah-m\", \"nn\"],\n  \"countertop\": [\"k-aw1-n t-er t-aa-p\", \"nn\"],\n  \"counterweight\": [\"k-aw1-n t-er w-ey-t\", \"nn\"],\n  \"countess\": [\"k-aw1-n t-ah-s\", \"nn\"],\n  \"countless\": [\"k-aw1-n-t l-ah-s\", \"jj\"],\n  \"country\": [\"k-ah1-n t-r-iy\", \"nn\"],\n  \"countryman\": [\"k-ah1-n t-r-iy m-ah-n\", \"nn\"],\n  \"countryside\": [\"k-ah1-n t-r-iy s-ay-d\", \"nn\"],\n  \"county\": [\"k-aw1-n t-iy\", \"nn\"],\n  \"coup\": [\"k-uw1\", \"nn\"],\n  \"coupe\": [\"k-uw1-p\", \"nn\"],\n  \"couple\": [\"k-ah1 p-ah-l\", \"nn jj vb\"],\n  \"coupler\": [\"k-ah1-p l-er\", \"nn\"],\n  \"coupon\": [\"k-uw1 p-ao-n\", \"nn\"],\n  \"couponing\": [\"k-uw1 p-aa n-ih-ng\", \"nn\"],\n  \"courage\": [\"k-er1 ah-jh\", \"nn\"],\n  \"courageous\": [\"k-er ey1 jh-ah-s\", \"jj\"],\n  \"courageously\": [\"k-er ey1 jh-ah-s l-iy\", \"rb\"],\n  \"courier\": [\"k-er1 iy er\", \"nn\"],\n  \"course\": [\"k-ao1-r-s\", \"nn rb vb\"],\n  \"court\": [\"k-ao1-r-t\", \"nn vbp vb\"],\n  \"courteous\": [\"k-er1 t-iy ah-s\", \"jj\"],\n  \"courtesy\": [\"k-er1 t-ah s-iy\", \"nn\"],\n  \"courthouse\": [\"k-ao1-r-t hh-aw-s\", \"nn\"],\n  \"courtier\": [\"k-ao1-r t-iy er\", \"nn\"],\n  \"courtly\": [\"k-ao1-r-t l-iy\", \"jj\"],\n  \"courtroom\": [\"k-ao1-r-t r-uw-m\", \"nn\"],\n  \"courtship\": [\"k-ao1-r ch-ih-p\", \"nn\"],\n  \"courtyard\": [\"k-ao1-r-t y-aa-r-d\", \"nn\"],\n  \"cousin\": [\"k-ah1 z-ah-n\", \"nn\"],\n  \"couture\": [\"k-uw t-uh1-r\", \"nn\"],\n  \"cove\": [\"k-ow1-v\", \"nn\"],\n  \"covenant\": [\"k-ah1 v-ah n-ah-n-t\", \"nn vb\"],\n  \"cover\": [\"k-ah1 v-er\", \"vb nn vbp\"],\n  \"coverage\": [\"k-ah1 v-er ah-jh\", \"nn\"],\n  \"covered\": [\"k-ah1 v-er-d\", \"vbn jj vbd\"],\n  \"covert\": [\"k-ow1 v-er-t\", \"jj\"],\n  \"covertly\": [\"k-ah1 v-er-t l-iy\", \"rb\"],\n  \"coverup\": [\"k-ah1 v-er ah-p\", \"nn\"],\n  \"covet\": [\"k-ah1 v-ah-t\", \"vb vbp\"],\n  \"coveted\": [\"k-ah1 v-ah t-ih-d\", \"vbn jj\"],\n  \"cow\": [\"k-aw1\", \"nn vb\"],\n  \"coward\": [\"k-aw1 er-d\", \"nn\"],\n  \"cowardice\": [\"k-aw1 er d-ah-s\", \"nn\"],\n  \"cowardly\": [\"k-aw1 er-d l-iy\", \"jj\"],\n  \"cowboy\": [\"k-aw1 b-oy\", \"nn\"],\n  \"cower\": [\"k-aw1 er\", \"vbp vb\"],\n  \"coworker\": [\"k-ow1 w-er1 k-er\", \"nn\"],\n  \"coy\": [\"k-oy1\", \"jj\"],\n  \"coyly\": [\"k-oy1 l-iy\", \"rb\"],\n  \"coyote\": [\"k-ay ow1 t-iy\", \"nn\"],\n  \"coziness\": [\"k-ow1 z-iy n-ah-s\", \"nn\"],\n  \"cozy\": [\"k-ow1 z-iy\", \"jj rb\"],\n  \"crab\": [\"k-r-ae1-b\", \"nn\"],\n  \"crabbed\": [\"k-r-ae1-b-d\", \"jj\"],\n  \"crabby\": [\"k-r-ae1 b-iy\", \"jj\"],\n  \"crabmeat\": [\"k-r-ae1-b m-iy-t\", \"nn\"],\n  \"crack\": [\"k-r-ae1-k\", \"nn jj vb vbp\"],\n  \"crackdown\": [\"k-r-ae1-k d-aw-n\", \"nn\"],\n  \"cracked\": [\"k-r-ae1-k-t\", \"vbd vbn jj\"],\n  \"cracker\": [\"k-r-ae1 k-er\", \"nn\"],\n  \"cracking\": [\"k-r-ae1 k-ih-ng\", \"vbg jj nn\"],\n  \"crackle\": [\"k-r-ae1 k-ah-l\", \"nn vb vbp\"],\n  \"crackling\": [\"k-r-ae1 k-l-ih-ng\", \"nn\"],\n  \"crackpot\": [\"k-r-ae1-k p-aa-t\", \"nn\"],\n  \"cradle\": [\"k-r-ey1 d-ah-l\", \"nn vb\"],\n  \"craft\": [\"k-r-ae1-f-t\", \"nn vb\"],\n  \"craftsman\": [\"k-r-ae1-f-t-s m-ah-n\", \"nn\"],\n  \"craftsmanship\": [\"k-r-ae1-f-t-s m-ah-n sh-ih-p\", \"nn\"],\n  \"crafty\": [\"k-r-ae1-f t-iy\", \"jj\"],\n  \"craggy\": [\"k-r-ae1 g-iy\", \"jj\"],\n  \"cram\": [\"k-r-ae1-m\", \"vb\"],\n  \"cramp\": [\"k-r-ae1-m-p\", \"nn\"],\n  \"cramped\": [\"k-r-ae1-m-p-t\", \"jj\"],\n  \"cranberry\": [\"k-r-ae1-n b-eh r-iy\", \"nn\"],\n  \"crane\": [\"k-r-ey1-n\", \"nn vb\"],\n  \"crank\": [\"k-r-ae1-ng-k\", \"vb nn\"],\n  \"crankshaft\": [\"k-r-ae1-ng-k sh-ae-f-t\", \"nn\"],\n  \"cranky\": [\"k-r-ae1-ng k-iy\", \"jj\"],\n  \"cranny\": [\"k-r-ae1 n-iy\", \"nn\"],\n  \"crap\": [\"k-r-ae1-p\", \"nn uh\"],\n  \"crapshoot\": [\"k-r-ae1-p sh-uw-t\", \"nn vb\"],\n  \"crash\": [\"k-r-ae1-sh\", \"nn vbp jj vb\"],\n  \"crashed\": [\"k-r-ae1-sh-t\", \"vbd jj vbn\"],\n  \"crass\": [\"k-r-ae1-s\", \"jj\"],\n  \"crate\": [\"k-r-ey1-t\", \"nn\"],\n  \"crater\": [\"k-r-ey1 t-er\", \"nn vb\"],\n  \"crave\": [\"k-r-ey1-v\", \"vbp vb\"],\n  \"craven\": [\"k-r-ey1 v-ah-n\", \"jj\"],\n  \"craving\": [\"k-r-ey1 v-ih-ng\", \"nn vbg\"],\n  \"crawl\": [\"k-r-ao1-l\", \"vb nn\"],\n  \"crayon\": [\"k-r-ey1 aa-n\", \"nn\"],\n  \"craze\": [\"k-r-ey1-z\", \"nn vb\"],\n  \"crazed\": [\"k-r-ey1-z-d\", \"jj vbd\"],\n  \"crazily\": [\"k-r-ey1 z-ah l-iy\", \"rb\"],\n  \"craziness\": [\"k-r-ey1 z-iy n-ah-s\", \"nn\"],\n  \"crazy\": [\"k-r-ey1 z-iy\", \"jj\"],\n  \"creak\": [\"k-r-iy1-k\", \"vb\"],\n  \"cream\": [\"k-r-iy1-m\", \"nn jj vb\"],\n  \"creamer\": [\"k-r-iy1 m-er\", \"nn\"],\n  \"creamier\": [\"k-r-iy1 m-iy er\", \"jjr\"],\n  \"creamy\": [\"k-r-iy1 m-iy\", \"jj\"],\n  \"crease\": [\"k-r-iy1-s\", \"nn\"],\n  \"create\": [\"k-r-iy ey1-t\", \"vb vbp\"],\n  \"created\": [\"k-r-iy ey1 t-ah-d\", \"vbn vbd jj\"],\n  \"creation\": [\"k-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"creationism\": [\"k-r-iy ey1 sh-ah-n ih z-ah-m\", \"nn\"],\n  \"creative\": [\"k-r-iy ey1 t-ih-v\", \"jj\"],\n  \"creatively\": [\"k-r-iy ey1 t-ih-v l-iy\", \"rb\"],\n  \"creativeness\": [\"k-r-iy ey1 t-ih-v n-ah-s\", \"nn\"],\n  \"creativity\": [\"k-r-iy ey t-ih1 v-ah t-iy\", \"nn\"],\n  \"creator\": [\"k-r-iy ey1 t-er\", \"nn\"],\n  \"creature\": [\"k-r-iy1 ch-er\", \"nn\"],\n  \"credence\": [\"k-r-iy1 d-ah-n-s\", \"nn\"],\n  \"credential\": [\"k-r-ih d-eh1-n ch-ah-l\", \"nn\"],\n  \"credibility\": [\"k-r-eh d-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"credible\": [\"k-r-eh1 d-ah b-ah-l\", \"jj\"],\n  \"credibly\": [\"k-r-eh1 d-ah b-l-iy\", \"rb\"],\n  \"credit\": [\"k-r-eh1 d-ah-t\", \"nn vb vbp\"],\n  \"creditable\": [\"k-r-eh1 d-ah t-ah b-ah-l\", \"jj\"],\n  \"creditably\": [\"k-r-eh1 d-ah t-ah b-l-iy\", \"rb\"],\n  \"creditor\": [\"k-r-eh1 d-ah t-er\", \"nn\"],\n  \"creditworthy\": [\"k-r-eh1 d-ih-t w-er dh-iy\", \"nn\"],\n  \"credo\": [\"k-r-ey1 d-ow\", \"nn\"],\n  \"credulity\": [\"k-r-ih d-uw1 l-ah t-iy\", \"nn\"],\n  \"creed\": [\"k-r-iy1-d\", \"nn\"],\n  \"creek\": [\"k-r-iy1-k\", \"nn\"],\n  \"creep\": [\"k-r-iy1-p\", \"vb vbp jj nn\"],\n  \"creeping\": [\"k-r-iy1 p-ih-ng\", \"vbg jj\"],\n  \"creepy\": [\"k-r-iy1 p-iy\", \"jj\"],\n  \"cremate\": [\"k-r-iy1 m-ey-t\", \"vb\"],\n  \"cremation\": [\"k-r-iy m-ey1 sh-ah-n\", \"nn\"],\n  \"creole\": [\"k-r-iy1 ow-l\", \"nn\"],\n  \"crepe\": [\"k-r-ey1-p\", \"jj\"],\n  \"crept\": [\"k-r-eh1-p-t\", \"vbd vbn\"],\n  \"crescendo\": [\"k-r-ih sh-eh1-n d-ow\", \"nn\"],\n  \"crescent\": [\"k-r-eh1 s-ah-n-t\", \"nn\"],\n  \"crest\": [\"k-r-eh1-s-t\", \"nn vb\"],\n  \"crested\": [\"k-r-eh1 s-t-ah-d\", \"jj\"],\n  \"crestfallen\": [\"k-r-eh1-s-t f-ao l-ah-n\", \"jj\"],\n  \"crevice\": [\"k-r-eh1 v-ah-s\", \"nn\"],\n  \"crew\": [\"k-r-uw1\", \"nn\"],\n  \"crewel\": [\"k-r-uw1 ah-l\", \"nn\"],\n  \"crib\": [\"k-r-ih1-b\", \"nn jj\"],\n  \"cricket\": [\"k-r-ih1 k-ah-t\", \"nn\"],\n  \"cried\": [\"k-r-ay1-d\", \"vbd vbn\"],\n  \"crime\": [\"k-r-ay1-m\", \"nn\"],\n  \"criminal\": [\"k-r-ih1 m-ah n-ah-l\", \"jj nn\"],\n  \"criminality\": [\"k-r-ih m-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"criminalize\": [\"k-r-ih1 m-ah n-ah l-ay-z\", \"vb\"],\n  \"criminally\": [\"k-r-ih1 m-ah n-ah l-iy\", \"rb\"],\n  \"criminologist\": [\"k-r-ih m-ih n-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"criminology\": [\"k-r-ih m-ih n-aa1 l-ah jh-iy\", \"nn\"],\n  \"crimp\": [\"k-r-ih1-m-p\", \"vb nn\"],\n  \"crimped\": [\"k-r-ih1-m-p-t\", \"jj vbn\"],\n  \"crimson\": [\"k-r-ih1-m z-ah-n\", \"jj nn\"],\n  \"cringe\": [\"k-r-ih1-n-jh\", \"vbp vb\"],\n  \"cripple\": [\"k-r-ih1 p-ah-l\", \"vb nn vbp\"],\n  \"crippled\": [\"k-r-ih1 p-ah-l-d\", \"vbn jj vbd\"],\n  \"crippling\": [\"k-r-ih1 p-ah-l ih-ng\", \"jj vbg\"],\n  \"crisis\": [\"k-r-ay1 s-ah-s\", \"nn\"],\n  \"crisp\": [\"k-r-ih1-s-p\", \"jj nn\"],\n  \"crisper\": [\"k-r-ih1 s-p-er\", \"nn\"],\n  \"crisply\": [\"k-r-ih1-s-p l-iy\", \"rb\"],\n  \"crispness\": [\"k-r-ih1-s-p n-ah-s\", \"nn\"],\n  \"crispy\": [\"k-r-ih1 s-p-iy\", \"jj\"],\n  \"crisscross\": [\"k-r-ih1-s k-r-ao-s\", \"vb vbp\"],\n  \"criterion\": [\"k-r-ay t-ih1 r-iy ah-n\", \"nn\"],\n  \"critic\": [\"k-r-ih1 t-ih-k\", \"nn\"],\n  \"critical\": [\"k-r-ih1 t-ih k-ah-l\", \"jj\"],\n  \"criticality\": [\"k-r-ih t-ah k-ae1 l-ah t-iy\", \"nn\"],\n  \"critically\": [\"k-r-ih1 t-ih k-ah l-iy\", \"rb\"],\n  \"criticism\": [\"k-r-ih1 t-ih s-ih z-ah-m\", \"nn\"],\n  \"criticize\": [\"k-r-ih1 t-ih s-ay-z\", \"vb vbp\"],\n  \"critique\": [\"k-r-ah t-iy1-k\", \"nn\"],\n  \"critter\": [\"k-r-ih1 t-er\", \"nn\"],\n  \"croak\": [\"k-r-ow1-k\", \"nn vb vbp\"],\n  \"croaking\": [\"k-r-ow1 k-ih-ng\", \"nn\"],\n  \"crochet\": [\"k-r-ow sh-ey1\", \"vb\"],\n  \"crocodile\": [\"k-r-aa1 k-ah d-ay-l\", \"nn\"],\n  \"croissant\": [\"k-w-aa s-aa1-n-t\", \"nn\"],\n  \"crone\": [\"k-r-ow1-n\", \"nn\"],\n  \"crony\": [\"k-r-ow1 n-iy\", \"nn\"],\n  \"cronyism\": [\"k-r-ow1 n-iy ih z-ah-m\", \"nn\"],\n  \"crook\": [\"k-r-uh1-k\", \"nn\"],\n  \"crooked\": [\"k-r-uh1 k-ah-d\", \"jj\"],\n  \"croon\": [\"k-r-uw1-n\", \"vb\"],\n  \"crooner\": [\"k-r-uw1 n-er\", \"nn\"],\n  \"crop\": [\"k-r-aa1-p\", \"nn rp vb vbp\"],\n  \"cross\": [\"k-r-ao1-s\", \"vb jj nn rb vbp\"],\n  \"crossborder\": [\"k-r-ao1-s b-ao-r d-er\", \"jj\"],\n  \"crosscurrent\": [\"k-r-ao1-s k-er ah-n-t\", \"nn\"],\n  \"crossfire\": [\"k-r-ao1-s f-ay-r\", \"nn\"],\n  \"crossover\": [\"k-r-ao1-s ow v-er\", \"nn\"],\n  \"crossroads\": [\"k-r-ao1-s r-ow-d-z\", \"nn\"],\n  \"crosswise\": [\"k-r-ao1-s w-ay-z\", \"rb\"],\n  \"crotch\": [\"k-r-aa1-ch\", \"nn\"],\n  \"crotchety\": [\"k-r-aa1 ch-ah t-iy\", \"jj\"],\n  \"crouch\": [\"k-r-aw1-ch\", \"nn vb\"],\n  \"crow\": [\"k-r-ow1\", \"nn vb\"],\n  \"crowd\": [\"k-r-aw1-d\", \"nn vbp vb\"],\n  \"crowded\": [\"k-r-aw1 d-ah-d\", \"vbn vbd jj\"],\n  \"crown\": [\"k-r-aw1-n\", \"nn vb\"],\n  \"crowning\": [\"k-r-aw1 n-ih-ng\", \"jj vbg\"],\n  \"crucial\": [\"k-r-uw1 sh-ah-l\", \"jj\"],\n  \"crucially\": [\"k-r-uw1 sh-ah l-l-iy\", \"rb\"],\n  \"crucible\": [\"k-r-uw1 s-ah b-ah-l\", \"nn\"],\n  \"crucified\": [\"k-r-uw1 s-ah f-ay-d\", \"vbd vbn\"],\n  \"crucifix\": [\"k-r-uw1 s-ah f-ih-k-s\", \"nn\"],\n  \"crucifixion\": [\"k-r-uw s-ih f-ih1-k sh-ah-n\", \"nn\"],\n  \"crucify\": [\"k-r-uw1-s-ah-f-ay\", \"vb\"],\n  \"crude\": [\"k-r-uw1-d\", \"nn jj\"],\n  \"crudely\": [\"k-r-uw1-d l-iy\", \"rb\"],\n  \"cruel\": [\"k-r-uw1 ah-l\", \"jj\"],\n  \"cruelest\": [\"k-r-uw1 l-ah-s-t\", \"jjs\"],\n  \"cruelly\": [\"k-r-uw1 l-iy\", \"rb\"],\n  \"cruelty\": [\"k-r-uw1-l t-iy\", \"nn\"],\n  \"cruise\": [\"k-r-uw1-z\", \"nn vb vbp\"],\n  \"cruiser\": [\"k-r-uw1 z-er\", \"nn\"],\n  \"crumble\": [\"k-r-ah1-m b-ah-l\", \"vb\"],\n  \"crumbled\": [\"k-r-ah1-m b-ah-l-d\", \"vbd vbn jj\"],\n  \"crumbling\": [\"k-r-ah1-m b-ah-l ih-ng\", \"vbg jj\"],\n  \"crummy\": [\"k-r-ah1 m-iy\", \"jj\"],\n  \"crumple\": [\"k-r-ah1-m-p-ah-l\", \"vb\"],\n  \"crumpled\": [\"k-r-ah1-m p-ah-l-d\", \"jj vbd vbn\"],\n  \"crunch\": [\"k-r-ah1-n-ch\", \"nn vb\"],\n  \"crusade\": [\"k-r-uw s-ey1-d\", \"nn vb\"],\n  \"crusader\": [\"k-r-uw s-ey1 d-er\", \"nn\"],\n  \"crush\": [\"k-r-ah1-sh\", \"nn vb\"],\n  \"crushed\": [\"k-r-ah1-sh-t\", \"vbn jj vbd\"],\n  \"crusher\": [\"k-r-ah1 sh-er\", \"nn\"],\n  \"crushing\": [\"k-r-ah1 sh-ih-ng\", \"vbg jj nn\"],\n  \"crust\": [\"k-r-ah1-s-t\", \"nn\"],\n  \"crusty\": [\"k-r-ah1 s-t-iy\", \"jj\"],\n  \"crutch\": [\"k-r-ah1-ch\", \"nn\"],\n  \"crux\": [\"k-r-ah1-k-s\", \"nn\"],\n  \"cry\": [\"k-r-ay1\", \"nn vb vbp\"],\n  \"crypt\": [\"k-r-ih1-p-t\", \"nn\"],\n  \"cryptic\": [\"k-r-ih1-p t-ih-k\", \"jj\"],\n  \"crystal\": [\"k-r-ih1 s-t-ah-l\", \"nn jj\"],\n  \"crystalline\": [\"k-r-ih1 s-t-ah l-ay-n\", \"jj\"],\n  \"crystallize\": [\"k-r-ih1 s-t-ah l-ay-z\", \"vb\"],\n  \"crystallography\": [\"k-r-ih s-t-ah l-aa1 g-r-ah f-iy\", \"nn\"],\n  \"cub\": [\"k-ah1-b\", \"nn\"],\n  \"cubbyhole\": [\"k-ah1 b-iy hh-ow-l\", \"nn\"],\n  \"cube\": [\"k-y-uw1-b\", \"nn\"],\n  \"cubic\": [\"k-y-uw1 b-ih-k\", \"jj\"],\n  \"cubism\": [\"k-y-uw1 b-ih z-ah-m\", \"nn\"],\n  \"cubist\": [\"k-y-uw1 b-ih-s-t\", \"jj\"],\n  \"cuckoo\": [\"k-ah1 k-uw\", \"nn\"],\n  \"cucumber\": [\"k-y-uw1 k-ah-m b-er\", \"nn\"],\n  \"cuddle\": [\"k-ah1-d-ah-l\", \"vb\"],\n  \"cuddly\": [\"k-ah1-d l-iy\", \"jj\"],\n  \"cudgel\": [\"k-ah1 jh-ah-l\", \"nn\"],\n  \"cue\": [\"k-y-uw1\", \"nn vb\"],\n  \"cuff\": [\"k-ah1-f\", \"nn vb\"],\n  \"cuisine\": [\"k-w-ih z-iy1-n\", \"nn\"],\n  \"cul\": [\"k-ah1-l\", \"nn\"],\n  \"culinary\": [\"k-y-uw1 l-ih n-eh r-iy\", \"jj\"],\n  \"cull\": [\"k-ah1-l\", \"vb vbp\"],\n  \"culminate\": [\"k-ah1-l m-ih n-ey-t\", \"vb vbp\"],\n  \"culmination\": [\"k-ah-l m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"culpable\": [\"k-ah1-l p-ah b-ah-l\", \"jj\"],\n  \"culprit\": [\"k-ah1-l p-r-ih-t\", \"nn\"],\n  \"cult\": [\"k-ah1-l-t\", \"nn\"],\n  \"cultist\": [\"k-ah1-l t-ah-s-t\", \"nn\"],\n  \"cultivate\": [\"k-ah1-l t-ah v-ey-t\", \"vb\"],\n  \"cultivated\": [\"k-ah1-l t-ah v-ey t-ah-d\", \"vbn jj vbd\"],\n  \"cultivation\": [\"k-ah-l t-ih v-ey1 sh-ah-n\", \"nn\"],\n  \"cultural\": [\"k-ah1-l ch-er ah-l\", \"jj\"],\n  \"culturally\": [\"k-ah1-l ch-er ah l-iy\", \"rb\"],\n  \"culture\": [\"k-ah1-l ch-er\", \"nn vb\"],\n  \"cultured\": [\"k-ah1-l ch-er-d\", \"jj vbn\"],\n  \"cumbersome\": [\"k-ah1-m b-er s-ah-m\", \"jj\"],\n  \"cumulative\": [\"k-y-uw1 m-y-ah l-ah t-ih-v\", \"jj\"],\n  \"cumulatively\": [\"k-y-uw1 m-y-ah l-ah t-ih-v l-iy\", \"rb\"],\n  \"cunning\": [\"k-ah1 n-ih-ng\", \"jj nn\"],\n  \"cup\": [\"k-ah1-p\", \"nn vb\"],\n  \"cupboard\": [\"k-ah1 b-er-d\", \"nn\"],\n  \"cupid\": [\"k-y-uw1 p-ih-d\", \"nn\"],\n  \"curative\": [\"k-y-uh1 r-ah t-ih-v\", \"jj\"],\n  \"curator\": [\"k-y-uh r-ey1 t-er\", \"nn\"],\n  \"curb\": [\"k-er1-b\", \"vb nn\"],\n  \"curbside\": [\"k-er1-b s-ay-d\", \"nn jj\"],\n  \"curd\": [\"k-er1-d\", \"nn\"],\n  \"cure\": [\"k-y-uh1-r\", \"nn vbp vb\"],\n  \"curfew\": [\"k-er1 f-y-uw\", \"nn\"],\n  \"curiosity\": [\"k-y-uh r-iy aa1 s-ah t-iy\", \"nn\"],\n  \"curious\": [\"k-y-uh1 r-iy ah-s\", \"jj\"],\n  \"curiously\": [\"k-y-uh1 r-iy ah-s l-iy\", \"rb\"],\n  \"curl\": [\"k-er1-l\", \"vb vbp\"],\n  \"curly\": [\"k-er1 l-iy\", \"jj\"],\n  \"currency\": [\"k-er1 ah-n s-iy\", \"nn\"],\n  \"current\": [\"k-er1 ah-n-t\", \"jj nn\"],\n  \"currently\": [\"k-er1 ah-n-t l-iy\", \"rb jj\"],\n  \"curricular\": [\"k-er ih1 k-y-ah l-er\", \"jj\"],\n  \"curriculum\": [\"k-er ih1 k-y-ah l-ah-m\", \"nn\"],\n  \"curry\": [\"k-ah1 r-iy\", \"vb nn\"],\n  \"curse\": [\"k-er1-s\", \"nn vb\"],\n  \"cursory\": [\"k-er1 s-er iy\", \"jj\"],\n  \"curt\": [\"k-er1-t\", \"jj\"],\n  \"curtail\": [\"k-er t-ey1-l\", \"vb vbp\"],\n  \"curtailment\": [\"k-er t-ey1-l m-ah-n-t\", \"nn\"],\n  \"curtain\": [\"k-er1 t-ah-n\", \"nn\"],\n  \"curtly\": [\"k-er1-t l-iy\", \"rb\"],\n  \"curve\": [\"k-er1-v\", \"nn vb\"],\n  \"curved\": [\"k-er1-v-d\", \"jj vbn\"],\n  \"curvy\": [\"k-er1 v-iy\", \"jj\"],\n  \"cushion\": [\"k-uh1 sh-ah-n\", \"nn vb\"],\n  \"cusp\": [\"k-ah1-s-p\", \"nn\"],\n  \"custodial\": [\"k-ah s-t-ow1 d-iy ah-l\", \"jj\"],\n  \"custodian\": [\"k-ah s-t-ow1 d-iy ah-n\", \"nn\"],\n  \"custody\": [\"k-ah1 s-t-ah d-iy\", \"nn\"],\n  \"custom\": [\"k-ah1 s-t-ah-m\", \"nn jj rb\"],\n  \"customarily\": [\"k-ah s-t-ah m-eh1 r-ah l-iy\", \"rb\"],\n  \"customary\": [\"k-ah1 s-t-ah m-eh r-iy\", \"jj\"],\n  \"customer\": [\"k-ah1 s-t-ah m-er\", \"nn\"],\n  \"customize\": [\"k-ah1-s-t-ah-m-ay-z\", \"vb\"],\n  \"customized\": [\"k-ah1 s-t-ah m-ay-z-d\", \"vbn jj\"],\n  \"cut\": [\"k-ah1-t\", \"vb vbd vbn vbp jj nn\"],\n  \"cutback\": [\"k-ah1-t b-ae-k\", \"nn\"],\n  \"cute\": [\"k-y-uw1-t\", \"jj\"],\n  \"cuteness\": [\"k-y-uw1-t n-ah-s\", \"nn\"],\n  \"cutlass\": [\"k-ah1-t l-ah-s\", \"nn\"],\n  \"cutlery\": [\"k-ah1-t l-er iy\", \"nn\"],\n  \"cutoff\": [\"k-ah1 t-ao-f\", \"nn jj\"],\n  \"cutout\": [\"k-ah1-t aw-t\", \"nn\"],\n  \"cutter\": [\"k-ah1 t-er\", \"nn\"],\n  \"cutthroat\": [\"k-ah1-t th-r-ow-t\", \"jj\"],\n  \"cutting\": [\"k-ah1 t-ih-ng\", \"vbg jj\"],\n  \"cyanide\": [\"s-ay1 ah n-ay-d\", \"nn\"],\n  \"cycle\": [\"s-ay1 k-ah-l\", \"nn vb\"],\n  \"cyclical\": [\"s-ay1 k-l-ih k-ah-l\", \"jj\"],\n  \"cyclicality\": [\"s-ih k-l-ih k-ae1 l-ih t-iy\", \"nn\"],\n  \"cyclist\": [\"s-ay1 k-ah l-ih-s-t\", \"nn\"],\n  \"cylinder\": [\"s-ih1 l-ah-n d-er\", \"nn\"],\n  \"cylindrical\": [\"s-ah l-ih1-n d-r-ih k-ah-l\", \"jj\"],\n  \"cynic\": [\"s-ih1 n-ih-k\", \"nn jj\"],\n  \"cynical\": [\"s-ih1 n-ih k-ah-l\", \"jj\"],\n  \"cynically\": [\"s-ih1 n-ih k-ah l-iy\", \"rb\"],\n  \"cynicism\": [\"s-ih1 n-ih s-ih z-ah-m\", \"nn\"],\n  \"cypress\": [\"s-ay1 p-r-ah-s\", \"nn\"],\n  \"cyst\": [\"s-ih1-s-t\", \"nn\"],\n  \"cystic\": [\"s-ih1 s-t-ih-k\", \"jj\"],\n  \"cytoplasm\": [\"s-ay1 t-ah p-l-ae z-ah-m\", \"nn\"],\n  \"czar\": [\"z-aa1-r\", \"nn\"],\n  \"dabble\": [\"d-ae1 b-ah-l\", \"vb\"],\n  \"dad\": [\"d-ae1-d\", \"nn\"],\n  \"dada\": [\"d-aa1 d-aa\", \"nn\"],\n  \"daddy\": [\"d-ae1 d-iy\", \"nn\"],\n  \"daffodil\": [\"d-ae1 f-ah d-ih-l\", \"nn\"],\n  \"daft\": [\"d-ae1-f-t\", \"jj\"],\n  \"daily\": [\"d-ey1 l-iy\", \"jj nn rb\"],\n  \"dainty\": [\"d-ey1-n t-iy\", \"jj\"],\n  \"dairy\": [\"d-eh1 r-iy\", \"nn jj\"],\n  \"dais\": [\"d-ey1-z\", \"nn\"],\n  \"daisy\": [\"d-ey1 z-iy\", \"nn\"],\n  \"dale\": [\"d-ey1-l\", \"nn\"],\n  \"dally\": [\"d-ae1 l-iy\", \"vb\"],\n  \"dam\": [\"d-ae1-m\", \"nn jj uh\"],\n  \"damage\": [\"d-ae1 m-ah-jh\", \"nn vbp vb\"],\n  \"damaged\": [\"d-ae1 m-ah-jh-d\", \"vbn jj vbd\"],\n  \"damaging\": [\"d-ae1 m-ih jh-ih-ng\", \"jj vbg\"],\n  \"dame\": [\"d-ey1-m\", \"nn\"],\n  \"daminozide\": [\"d-ae m-ih1 n-ah z-ay-d\", \"nn\"],\n  \"dammed\": [\"d-ae1-m-d\", \"vbd\"],\n  \"damn\": [\"d-ae1-m\", \"jj nn rb vb uh\"],\n  \"damnation\": [\"d-ae-m n-ey1 sh-ah-n\", \"nn\"],\n  \"damned\": [\"d-ae1-m-d\", \"jj vbn rb\"],\n  \"damp\": [\"d-ae1-m-p\", \"vb vbp jj nn\"],\n  \"dampen\": [\"d-ae1-m p-ah-n\", \"vb\"],\n  \"dampening\": [\"d-ae1-m p-ah n-ih-ng\", \"jj\"],\n  \"damper\": [\"d-ae1-m p-er\", \"nn\"],\n  \"damping\": [\"d-ae1-m p-ih-ng\", \"vbg jj\"],\n  \"damsel\": [\"d-ae1-m z-ah-l\", \"nn\"],\n  \"dance\": [\"d-ae1-n-s\", \"nn vb vbp\"],\n  \"dancer\": [\"d-ae1-n s-er\", \"nn\"],\n  \"dandelion\": [\"d-ae1-n d-ah l-ay ah-n\", \"nn\"],\n  \"dandy\": [\"d-ae1-n d-iy\", \"jj\"],\n  \"dang\": [\"d-ae1-ng\", \"jj\"],\n  \"danger\": [\"d-ey1-n jh-er\", \"nn\"],\n  \"dangerous\": [\"d-ey1-n jh-er ah-s\", \"jj\"],\n  \"dangerously\": [\"d-ey1-n jh-er ah-s l-iy\", \"rb\"],\n  \"dangle\": [\"d-ae1-ng g-ah-l\", \"vb\"],\n  \"dangling\": [\"d-ae1-ng g-ah l-ih-ng\", \"vbg jj\"],\n  \"dank\": [\"d-ae1-ng-k\", \"jj\"],\n  \"dapper\": [\"d-ae1 p-er\", \"jj\"],\n  \"dare\": [\"d-eh1-r\", \"vb vbp nn\"],\n  \"darin\": [\"d-ae1 r-ih-n\", \"jj\"],\n  \"daring\": [\"d-eh1 r-ih-ng\", \"jj vbg\"],\n  \"dark\": [\"d-aa1-r-k\", \"jj nn rb\"],\n  \"darken\": [\"d-aa1-r k-ah-n\", \"vb vbp\"],\n  \"darkened\": [\"d-aa1-r k-ah-n-d\", \"vbd vbn jj\"],\n  \"darker\": [\"d-aa1-r k-er\", \"jjr\"],\n  \"darkest\": [\"d-aa1-r k-ah-s-t\", \"jjs\"],\n  \"darkly\": [\"d-aa1-r-k l-iy\", \"rb\"],\n  \"darkness\": [\"d-aa1-r-k n-ah-s\", \"nn\"],\n  \"darkroom\": [\"d-aa1-r-k r-uw-m\", \"nn\"],\n  \"darling\": [\"d-aa1-r l-ih-ng\", \"nn jj\"],\n  \"darn\": [\"d-aa1-r-n\", \"jj vb\"],\n  \"darned\": [\"d-aa1-r-n-d\", \"rb\"],\n  \"dart\": [\"d-aa1-r-t\", \"nn vb vbp\"],\n  \"dartboard\": [\"d-aa1-r-t b-ao-r-d\", \"nn\"],\n  \"dash\": [\"d-ae1-sh\", \"nn vb\"],\n  \"dashboard\": [\"d-ae1-sh b-ao-r-d\", \"nn\"],\n  \"dashed\": [\"d-ae1-sh-t\", \"vbn jj vbd\"],\n  \"dashing\": [\"d-ae1 sh-ih-ng\", \"vbg jj\"],\n  \"dastardly\": [\"d-ae1 s-t-er-d l-iy\", \"jj\"],\n  \"database\": [\"d-ey1 t-ah b-ey-s\", \"nn\"],\n  \"date\": [\"d-ey1-t\", \"nn vbp vb\"],\n  \"dated\": [\"d-ey1 t-ih-d\", \"vbn jj vbd\"],\n  \"datum\": [\"d-ae1 t-ah-m\", \"nn\"],\n  \"daub\": [\"d-ao1-b\", \"vb\"],\n  \"daughter\": [\"d-ao1 t-er\", \"nn\"],\n  \"daunt\": [\"d-ao1-n-t\", \"vb\"],\n  \"daunted\": [\"d-ao1-n t-ih-d\", \"vbd vbn jj\"],\n  \"daunting\": [\"d-ao1-n t-ih-ng\", \"jj vbg\"],\n  \"davenport\": [\"d-ae1 v-ah-n p-ao-r-t\", \"nn\"],\n  \"dawdle\": [\"d-ao1-d-ah-l\", \"vb\"],\n  \"dawn\": [\"d-ao1-n\", \"nn vb\"],\n  \"day\": [\"d-ey1\", \"nn\"],\n  \"daybreak\": [\"d-ey1 b-r-ey-k\", \"nn\"],\n  \"daydream\": [\"d-ey1 d-r-iy-m\", \"nn vb\"],\n  \"daylight\": [\"d-ey1 l-ay-t\", \"nn\"],\n  \"daylong\": [\"d-ey1 l-ao-ng\", \"jj\"],\n  \"daytime\": [\"d-ey1 t-ay-m\", \"jj nn\"],\n  \"daze\": [\"d-ey1-z\", \"nn vb\"],\n  \"dazed\": [\"d-ey1-z-d\", \"jj vbd vbn\"],\n  \"dazzle\": [\"d-ae1 z-ah-l\", \"vb\"],\n  \"dazzled\": [\"d-ae1 z-ah-l-d\", \"vbn jj\"],\n  \"dazzling\": [\"d-ae1 z-ah-l ih-ng\", \"jj vbg\"],\n  \"deacon\": [\"d-iy1 k-ah-n\", \"nn\"],\n  \"deactivate\": [\"d-iy-ae1-k-t-ih-v-ey-t\", \"vb\"],\n  \"dead\": [\"d-eh1-d\", \"jj nn rb vbn\"],\n  \"deadbeat\": [\"d-eh1-d b-iy-t\", \"nn\"],\n  \"deader\": [\"d-eh1 d-er\", \"jjr\"],\n  \"deadliest\": [\"d-eh1-d l-iy ah-s-t\", \"jjs\"],\n  \"deadline\": [\"d-eh1-d l-ay-n\", \"nn\"],\n  \"deadliness\": [\"d-eh1-d l-iy n-ah-s\", \"nn\"],\n  \"deadlock\": [\"d-eh1-d l-aa-k\", \"nn vb\"],\n  \"deadlocked\": [\"d-eh1-d l-aa-k-t\", \"vbn jj\"],\n  \"deadly\": [\"d-eh1-d l-iy\", \"jj rb\"],\n  \"deadpan\": [\"d-eh1-d p-ae-n\", \"jj\"],\n  \"deadweight\": [\"d-eh1-d w-ey-t\", \"nn\"],\n  \"deadwood\": [\"d-eh1-d w-uh-d\", \"nn\"],\n  \"deaf\": [\"d-eh1-f\", \"jj\"],\n  \"deafen\": [\"d-eh1-f-ah-n\", \"vb\"],\n  \"deafening\": [\"d-eh1 f-ah-n ih-ng\", \"vbg jj\"],\n  \"deafness\": [\"d-eh1-f n-ah-s\", \"nn\"],\n  \"deal\": [\"d-iy1-l\", \"nn vb vbp\"],\n  \"dealer\": [\"d-iy1 l-er\", \"nn\"],\n  \"dealership\": [\"d-iy1 l-er sh-ih-p\", \"nn\"],\n  \"dealt\": [\"d-eh1-l-t\", \"vbn vbd\"],\n  \"dean\": [\"d-iy1-n\", \"nn\"],\n  \"dear\": [\"d-ih1-r\", \"jj nn rb uh\"],\n  \"dearest\": [\"d-ih1 r-ah-s-t\", \"jjs\"],\n  \"dearly\": [\"d-ih1-r l-iy\", \"rb\"],\n  \"dearth\": [\"d-er1-th\", \"nn\"],\n  \"death\": [\"d-eh1-th\", \"nn\"],\n  \"deathbed\": [\"d-eh1-th b-eh-d\", \"nn\"],\n  \"deathly\": [\"d-eh1-th l-iy\", \"jj\"],\n  \"deathwatch\": [\"d-eh1-th w-aa-ch\", \"nn\"],\n  \"debacle\": [\"d-ah b-aa1 k-ah-l\", \"nn\"],\n  \"debase\": [\"d-ah-b-ey1-s\", \"vb\"],\n  \"debasement\": [\"d-ah b-ey1-s m-ah-n-t\", \"nn\"],\n  \"debatable\": [\"d-ah b-ey1 t-ah b-ah-l\", \"jj\"],\n  \"debate\": [\"d-ah b-ey1-t\", \"nn vb vbp\"],\n  \"debating\": [\"d-ah b-ey1 t-ih-ng\", \"vbg jj\"],\n  \"debauchery\": [\"d-ah b-ao1 ch-er iy\", \"nn\"],\n  \"debilitate\": [\"d-ah-b-ih1-l-ah-t-ey-t\", \"vb\"],\n  \"debilitated\": [\"d-ah b-ih1 l-ah t-ey t-ih-d\", \"vbn jj\"],\n  \"debilitating\": [\"d-ah b-ih1 l-ah t-ey t-ih-ng\", \"jj\"],\n  \"debility\": [\"d-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"debit\": [\"d-eh1 b-ih-t\", \"nn\"],\n  \"debonair\": [\"d-eh b-ah n-eh1-r\", \"jj\"],\n  \"debris\": [\"d-ah b-r-iy1\", \"nn\"],\n  \"debt\": [\"d-eh1-t\", \"nn\"],\n  \"debtholder\": [\"d-eh1-t hh-ow-l d-er\", \"nn\"],\n  \"debtor\": [\"d-eh1 t-er\", \"nn jj\"],\n  \"debunk\": [\"d-ih b-ah1-ng-k\", \"vb\"],\n  \"debunking\": [\"d-ih b-ah1-ng k-ih-ng\", \"nn\"],\n  \"debut\": [\"d-ey b-y-uw1\", \"nn vb vbp\"],\n  \"debutante\": [\"d-eh1 b-y-ah t-aa1-n-t\", \"nn\"],\n  \"decade\": [\"d-eh k-ey1-d\", \"nn\"],\n  \"decadence\": [\"d-eh1 k-ah d-ah-n-s\", \"nn\"],\n  \"decadent\": [\"d-eh1 k-ah d-ah-n-t\", \"jj\"],\n  \"decaffeinate\": [\"d-iy-k-ae1-f-ah-n-ey-t\", \"vb\"],\n  \"decamp\": [\"d-ah-k-ae1-m-p\", \"vb\"],\n  \"decant\": [\"d-ah-k-ae1-n-t\", \"vb\"],\n  \"decay\": [\"d-ah k-ey1\", \"nn vb\"],\n  \"decayed\": [\"d-ah k-ey1-d\", \"jj vbd vbn\"],\n  \"decaying\": [\"d-ah k-ey1 ih-ng\", \"vbg jj\"],\n  \"decease\": [\"d-ih-s-iy1-s\", \"vb\"],\n  \"deceased\": [\"d-ih s-iy1-s-t\", \"jj nn vbn\"],\n  \"decedent\": [\"d-eh s-iy1 d-ah-n-t\", \"nn\"],\n  \"deceit\": [\"d-ah s-iy1-t\", \"nn\"],\n  \"deceitful\": [\"d-ah s-iy1-t f-ah-l\", \"jj\"],\n  \"deceive\": [\"d-ih s-iy1-v\", \"vb\"],\n  \"decelerate\": [\"d-ih s-eh1 l-er ey-t\", \"vb\"],\n  \"deceleration\": [\"d-ih s-eh l-er ey1 sh-ah-n\", \"nn\"],\n  \"decency\": [\"d-iy1 s-ah-n s-iy\", \"nn\"],\n  \"decent\": [\"d-iy1 s-ah-n-t\", \"jj\"],\n  \"decently\": [\"d-iy1 s-ah-n-t l-iy\", \"rb\"],\n  \"decentralization\": [\"d-ih s-eh-n t-r-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"decentralize\": [\"d-ih s-eh1-n t-r-ah l-ay-z\", \"vb\"],\n  \"decentralized\": [\"d-ih s-eh1-n t-r-ah l-ay-z-d\", \"jj vbd vbn\"],\n  \"deception\": [\"d-ih s-eh1-p sh-ah-n\", \"nn\"],\n  \"deceptive\": [\"d-ih s-eh1-p t-ih-v\", \"jj\"],\n  \"deceptively\": [\"d-ih s-eh1-p t-ih-v l-iy\", \"rb\"],\n  \"decertified\": [\"d-iy s-er1 t-ah f-ay-d\", \"vbn\"],\n  \"decertify\": [\"d-iy-s-er1-t-ah-f-ay\", \"vb\"],\n  \"decide\": [\"d-ih s-ay1-d\", \"vb vbp\"],\n  \"decided\": [\"d-ih s-ay1 d-ih-d\", \"vbd vbn jj\"],\n  \"decidedly\": [\"d-ih s-ay1 d-ah-d l-iy\", \"rb\"],\n  \"deciding\": [\"d-ah s-ay1 d-ih-ng\", \"vbg jj\"],\n  \"decimal\": [\"d-eh1 s-ah m-ah-l\", \"nn jj\"],\n  \"decimate\": [\"d-eh1-s-ah-m-ey-t\", \"vb\"],\n  \"decipher\": [\"d-ih s-ay1 f-er\", \"vb\"],\n  \"decision\": [\"d-ih s-ih1 zh-ah-n\", \"nn\"],\n  \"decisionmaking\": [\"d-ih s-ih1 zh-ah-n m-ey k-ih-ng\", \"nn\"],\n  \"decisive\": [\"d-ih s-ay1 s-ih-v\", \"jj\"],\n  \"decisively\": [\"d-ih s-ay1 s-ih-v l-iy\", \"rb\"],\n  \"decisiveness\": [\"d-ih s-ay1 s-ih-v n-ah-s\", \"nn\"],\n  \"deck\": [\"d-eh1-k\", \"nn vb\"],\n  \"declaim\": [\"d-ih-k-l-ey1-m\", \"vb\"],\n  \"declaration\": [\"d-eh k-l-er ey1 sh-ah-n\", \"nn\"],\n  \"declaratory\": [\"d-ih k-l-eh1 r-ah t-ao r-iy\", \"jj\"],\n  \"declare\": [\"d-ih k-l-eh1-r\", \"vb vbp\"],\n  \"declared\": [\"d-ih k-l-eh1-r-d\", \"vbd vbn jj\"],\n  \"decline\": [\"d-ih k-l-ay1-n\", \"nn vb vbp\"],\n  \"decliner\": [\"d-ih k-l-ay1 n-er\", \"nn\"],\n  \"declining\": [\"d-ih k-l-ay1 n-ih-ng\", \"vbg jj nn\"],\n  \"decode\": [\"d-ih k-ow1-d\", \"vb\"],\n  \"decommission\": [\"d-iy-k-ah-m-ih1-sh-ah-n\", \"vb\"],\n  \"decompose\": [\"d-iy k-ah-m p-ow1-z\", \"vb\"],\n  \"decomposed\": [\"d-iy k-ah-m p-ow1-z-d\", \"jj\"],\n  \"decompression\": [\"d-iy k-ah-m p-r-eh1 sh-ah-n\", \"nn\"],\n  \"decontamination\": [\"d-iy k-ah-n t-ae m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"decor\": [\"d-ih k-ao1-r\", \"nn\"],\n  \"decorate\": [\"d-eh1 k-er ey-t\", \"vbp vb\"],\n  \"decorated\": [\"d-eh1 k-er ey t-ah-d\", \"vbn vbd jj\"],\n  \"decoration\": [\"d-eh k-er ey1 sh-ah-n\", \"nn\"],\n  \"decorative\": [\"d-eh1 k-r-ah t-ih-v\", \"jj\"],\n  \"decorator\": [\"d-eh1 k-er ey t-er\", \"nn\"],\n  \"decorous\": [\"d-eh1 k-er ah-s\", \"jj\"],\n  \"decorum\": [\"d-ih k-ao1 r-ah-m\", \"nn\"],\n  \"decoy\": [\"d-ah k-oy1\", \"nn\"],\n  \"decrease\": [\"d-ih k-r-iy1-s\", \"nn vb vbp\"],\n  \"decree\": [\"d-ih k-r-iy1\", \"nn vb\"],\n  \"decrepit\": [\"d-ah k-r-eh1 p-ih-t\", \"jj\"],\n  \"decry\": [\"d-ih k-r-ay1\", \"vb vbp\"],\n  \"dedicate\": [\"d-eh1 d-ah k-ey-t\", \"vb\"],\n  \"dedicated\": [\"d-eh1 d-ah k-ey t-ah-d\", \"vbn jj vbd\"],\n  \"dedication\": [\"d-eh d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"deduce\": [\"d-ih d-uw1-s\", \"vb\"],\n  \"deduct\": [\"d-ih d-ah1-k-t\", \"vb vbp\"],\n  \"deductibility\": [\"d-ih d-ah-k t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"deductible\": [\"d-ih d-ah1-k t-ah b-ah-l\", \"jj\"],\n  \"deduction\": [\"d-ih d-ah1-k sh-ah-n\", \"nn\"],\n  \"deed\": [\"d-iy1-d\", \"nn\"],\n  \"deem\": [\"d-iy1-m\", \"vbp vb\"],\n  \"deep\": [\"d-iy1-p\", \"jj rb\"],\n  \"deepen\": [\"d-iy1 p-ah-n\", \"vb\"],\n  \"deeper\": [\"d-iy1 p-er\", \"jjr rbr rb\"],\n  \"deepest\": [\"d-iy1 p-ah-s-t\", \"jjs\"],\n  \"deeply\": [\"d-iy1-p l-iy\", \"rb\"],\n  \"deer\": [\"d-ih1-r\", \"nn\"],\n  \"defamation\": [\"d-eh f-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"defamatory\": [\"d-ih f-ae1 m-ah t-ao r-iy\", \"jj\"],\n  \"defame\": [\"d-ih-f-ey1-m\", \"vb\"],\n  \"default\": [\"d-ih f-ao1-l-t\", \"nn vb\"],\n  \"defaulted\": [\"d-ih f-ao1-l t-ih-d\", \"vbd vbn jj\"],\n  \"defaulter\": [\"d-ih f-ao1-l t-er\", \"nn\"],\n  \"defeat\": [\"d-ih f-iy1-t\", \"nn vb vbp\"],\n  \"defeatism\": [\"d-ih f-iy1 t-ih z-ah-m\", \"nn\"],\n  \"defect\": [\"d-iy1 f-eh-k-t\", \"nn vb\"],\n  \"defection\": [\"d-ih f-eh1-k sh-ah-n\", \"nn\"],\n  \"defective\": [\"d-ih f-eh1-k t-ih-v\", \"jj\"],\n  \"defector\": [\"d-ih f-eh1-k t-er\", \"nn\"],\n  \"defend\": [\"d-ih f-eh1-n-d\", \"vb vbp\"],\n  \"defendant\": [\"d-ih f-eh1-n d-ah-n-t\", \"nn\"],\n  \"defender\": [\"d-ih f-eh1-n d-er\", \"nn\"],\n  \"defending\": [\"d-ih f-eh1-n d-ih-ng\", \"vbg jj\"],\n  \"defense\": [\"d-ih f-eh1-n-s\", \"nn\"],\n  \"defenseless\": [\"d-ih f-eh1-n-s l-ah-s\", \"jj\"],\n  \"defensible\": [\"d-ih f-eh1-n s-ah b-ah-l\", \"jj\"],\n  \"defensive\": [\"d-ih f-eh1-n s-ih-v\", \"jj nn\"],\n  \"defensively\": [\"d-ih f-eh1-n s-ih-v l-iy\", \"rb\"],\n  \"defensiveness\": [\"d-ih f-eh1-n s-ih-v n-ah-s\", \"nn\"],\n  \"defer\": [\"d-ih f-er1\", \"vb\"],\n  \"deference\": [\"d-eh1 f-er ah-n-s\", \"nn\"],\n  \"deferment\": [\"d-ih f-er1 m-ah-n-t\", \"nn\"],\n  \"deferred\": [\"d-ih f-er1-d\", \"vbn vbd jj\"],\n  \"defiance\": [\"d-ih f-ay1 ah-n-s\", \"nn\"],\n  \"defiant\": [\"d-ih f-ay1 ah-n-t\", \"jj\"],\n  \"defiantly\": [\"d-ih f-ay1 ah-n-t l-iy\", \"rb\"],\n  \"deficiency\": [\"d-ih f-ih1 sh-ah-n s-iy\", \"nn\"],\n  \"deficient\": [\"d-ih f-ih1 sh-ah-n-t\", \"jj\"],\n  \"deficit\": [\"d-eh1 f-ah s-ah-t\", \"nn\"],\n  \"definable\": [\"d-ih f-ay1 n-ah b-ah-l\", \"jj\"],\n  \"define\": [\"d-ih f-ay1-n\", \"vb vbp\"],\n  \"defined\": [\"d-ih f-ay1-n-d\", \"vbn jj vbd\"],\n  \"definite\": [\"d-eh1 f-ah n-ah-t\", \"jj\"],\n  \"definitely\": [\"d-eh1 f-ah n-ah-t l-iy\", \"rb\"],\n  \"definition\": [\"d-eh f-ah n-ih1 sh-ah-n\", \"nn\"],\n  \"definitive\": [\"d-ih f-ih1 n-ih t-ih-v\", \"jj\"],\n  \"definitively\": [\"d-ih f-ih1 n-ih t-ih-v l-iy\", \"rb\"],\n  \"deflate\": [\"d-ih f-l-ey1-t\", \"vb\"],\n  \"deflated\": [\"d-ih f-l-ey1 t-ih-d\", \"vbd jj vbn\"],\n  \"deflationary\": [\"d-ih f-l-ey1 sh-ah-n eh r-iy\", \"jj\"],\n  \"deflator\": [\"d-ih f-l-ey1 t-er\", \"nn\"],\n  \"deflect\": [\"d-ih f-l-eh1-k-t\", \"vb\"],\n  \"deforestation\": [\"d-ih f-ao r-ih s-t-ey1 sh-ah-n\", \"nn\"],\n  \"deform\": [\"d-iy-f-ao1-r-m\", \"vb\"],\n  \"deformation\": [\"d-iy f-ao-r m-ey1 sh-ah-n\", \"nn\"],\n  \"deformed\": [\"d-ih f-ao1-r-m-d\", \"jj vbn\"],\n  \"deformity\": [\"d-ih f-ao1-r m-ah t-iy\", \"nn\"],\n  \"defraud\": [\"d-ih f-r-ao1-d\", \"vb\"],\n  \"defray\": [\"d-ih f-r-ey1\", \"vb\"],\n  \"deft\": [\"d-eh1-f-t\", \"jj\"],\n  \"deftly\": [\"d-eh1-f-t l-iy\", \"rb\"],\n  \"defunct\": [\"d-ih f-ah1-ng-k-t\", \"jj vb\"],\n  \"defuse\": [\"d-ih f-y-uw1-z\", \"vb\"],\n  \"defy\": [\"d-ih f-ay1\", \"vb vbp\"],\n  \"degeneracy\": [\"d-ih jh-eh1 n-er ah s-iy\", \"nn\"],\n  \"degenerate\": [\"d-ih jh-eh1 n-er ah-t\", \"jj vb\"],\n  \"degeneration\": [\"d-ih jh-eh n-er ey1 sh-ah-n\", \"nn\"],\n  \"degenerative\": [\"d-ih jh-eh1 n-er ah t-ih-v\", \"jj\"],\n  \"degradation\": [\"d-eh g-r-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"degrade\": [\"d-ih g-r-ey1-d\", \"vb\"],\n  \"degraded\": [\"d-ih g-r-ey1 d-ah-d\", \"jj\"],\n  \"degrading\": [\"d-ih g-r-ey1 d-ih-ng\", \"jj vbg\"],\n  \"degree\": [\"d-ih g-r-iy1\", \"nn\"],\n  \"dehumanize\": [\"d-ih-hh-y-uw1-m-ah-n-ay-z\", \"vb\"],\n  \"dehydrate\": [\"d-ih-hh-ay1-d-r-ey-t\", \"vb\"],\n  \"dehydrated\": [\"d-ih hh-ay1 d-r-ey t-ah-d\", \"jj vbn\"],\n  \"dehydration\": [\"d-iy hh-ay d-r-ey1 sh-ah-n\", \"nn\"],\n  \"deification\": [\"d-iy ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"deinstitutionalization\": [\"d-iy ih-n s-t-ih t-uw sh-ah n-ah-l ah z-ey1 sh-ah-n\", \"nn\"],\n  \"deity\": [\"d-iy1 ah t-iy\", \"nn\"],\n  \"delay\": [\"d-ih l-ey1\", \"nn vb vbp\"],\n  \"delayed\": [\"d-ih l-ey1-d\", \"vbn jj vbd\"],\n  \"delaying\": [\"d-ih l-ey1 ih-ng\", \"vbg jj nn\"],\n  \"delectable\": [\"d-ih l-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"delegate\": [\"d-eh1 l-ah g-ey-t\", \"nn vb\"],\n  \"delegation\": [\"d-eh l-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"delete\": [\"d-ih l-iy1-t\", \"vb\"],\n  \"deleterious\": [\"d-eh l-ah t-ih1 r-iy ah-s\", \"jj\"],\n  \"deletion\": [\"d-ih l-iy1 sh-ah-n\", \"nn\"],\n  \"deliberate\": [\"d-ih l-ih1 b-er ah-t\", \"jj vb\"],\n  \"deliberately\": [\"d-ih l-ih1 b-er ah-t l-iy\", \"rb\"],\n  \"deliberation\": [\"d-ih l-ih b-er ey1 sh-ah-n\", \"nn\"],\n  \"deliberative\": [\"d-ih l-ih1 b-er ey t-ih-v\", \"jj\"],\n  \"delicacy\": [\"d-eh1 l-ah k-ah s-iy\", \"nn\"],\n  \"delicate\": [\"d-eh1 l-ah k-ah-t\", \"jj\"],\n  \"delicately\": [\"d-eh1 l-ah k-ah-t l-iy\", \"rb\"],\n  \"delicatessen\": [\"d-eh l-ih k-ah t-eh1 s-ah-n\", \"nn\"],\n  \"delicious\": [\"d-ih l-ih1 sh-ah-s\", \"jj\"],\n  \"deliciously\": [\"d-ih l-ih1 sh-ah-sh l-iy\", \"rb\"],\n  \"delight\": [\"d-ih l-ay1-t\", \"nn vb vbp\"],\n  \"delighted\": [\"d-ih l-ay1 t-ah-d\", \"vbn jj vbd\"],\n  \"delightful\": [\"d-ih l-ay1-t f-ah-l\", \"jj\"],\n  \"delightfully\": [\"d-ih l-ay1-t f-ah l-iy\", \"rb\"],\n  \"delineate\": [\"d-ih l-ih1 n-iy ey-t\", \"vb\"],\n  \"delineation\": [\"d-ih l-ih n-iy ey1 sh-ah-n\", \"nn\"],\n  \"delinquency\": [\"d-ih l-ih1-ng k-w-ah-n s-iy\", \"nn\"],\n  \"delinquent\": [\"d-ih l-ih1-ng k-w-ah-n-t\", \"jj nn\"],\n  \"delirium\": [\"d-ih l-ih1 r-iy ah-m\", \"nn\"],\n  \"deliver\": [\"d-ih l-ih1 v-er\", \"vb vbp\"],\n  \"deliverable\": [\"d-ih l-ih1 v-er ah b-ah-l\", \"jj\"],\n  \"deliverance\": [\"d-ih l-ih1 v-er ah-n-s\", \"nn\"],\n  \"deliverer\": [\"d-ih l-ih1 v-er er\", \"nn\"],\n  \"deliveries\": [\"d-ih l-ih1 v-er iy-z\", \"nn\"],\n  \"delivery\": [\"d-ih l-ih1 v-er iy\", \"nn\"],\n  \"dell\": [\"d-eh1-l\", \"nn\"],\n  \"delphic\": [\"d-eh1-l f-ih-k\", \"jj\"],\n  \"delta\": [\"d-eh1-l t-ah\", \"nn jj\"],\n  \"delude\": [\"d-ih l-uw1-d\", \"vb vbp\"],\n  \"deluded\": [\"d-ih l-uw1 d-ih-d\", \"jj vbd\"],\n  \"deluge\": [\"d-eh1 l-y-uw-jh\", \"nn vb\"],\n  \"delusion\": [\"d-ih l-uw1 zh-ah-n\", \"nn\"],\n  \"deluxe\": [\"d-ah l-ah1-k-s\", \"jj\"],\n  \"delve\": [\"d-eh1-l-v\", \"vb\"],\n  \"demagogic\": [\"d-eh m-ah g-aa1 jh-ih-k\", \"jj\"],\n  \"demagogue\": [\"d-eh1 m-ah g-aa-g\", \"nn\"],\n  \"demagoguery\": [\"d-eh1 m-ah g-aa g-er iy\", \"nn\"],\n  \"demand\": [\"d-ih m-ae1-n-d\", \"nn vb vbp\"],\n  \"demanding\": [\"d-ih m-ae1-n d-ih-ng\", \"vbg jj\"],\n  \"demandingly\": [\"d-ih m-ae1-n d-ih-ng l-iy\", \"rb\"],\n  \"demarcation\": [\"d-iy m-aa-r k-ey1 sh-ah-n\", \"nn\"],\n  \"demean\": [\"d-ih-m-iy1-n\", \"vb\"],\n  \"demeaning\": [\"d-ih m-iy1 n-ih-ng\", \"jj\"],\n  \"demeanor\": [\"d-ih m-iy1 n-er\", \"nn\"],\n  \"dement\": [\"d-ah-m-eh1-n-t\", \"vb\"],\n  \"demented\": [\"d-ih m-eh1-n t-ih-d\", \"jj vbn\"],\n  \"dementia\": [\"d-ih m-eh1-n sh-iy ah\", \"nn\"],\n  \"demilitarize\": [\"d-iy m-ih1 l-ah t-er ay-z\", \"vb\"],\n  \"demise\": [\"d-ih m-ay1-z\", \"nn\"],\n  \"demo\": [\"d-eh1 m-ow\", \"nn\"],\n  \"demobilize\": [\"d-ih m-ow1 b-ah l-ay-z\", \"vb\"],\n  \"democracy\": [\"d-ih m-aa1 k-r-ah s-iy\", \"nn\"],\n  \"democrat\": [\"d-eh1 m-ah k-r-ae-t\", \"nn\"],\n  \"democratic\": [\"d-eh m-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"democratically\": [\"d-eh m-ah k-r-ae1 t-ih-k l-iy\", \"rb\"],\n  \"democratization\": [\"d-ih m-aa k-r-ah t-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"democratize\": [\"d-ih m-aa1 k-r-ah t-ay-z\", \"vb\"],\n  \"demographic\": [\"d-eh m-ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"demographically\": [\"d-eh m-ah g-r-ae1 f-ih-k l-iy\", \"rb\"],\n  \"demography\": [\"d-ih m-aa1 g-r-ah f-iy\", \"nn\"],\n  \"demolish\": [\"d-ih m-aa1 l-ih-sh\", \"vb\"],\n  \"demolition\": [\"d-eh m-ah l-ih1 sh-ah-n\", \"nn jj\"],\n  \"demon\": [\"d-iy1 m-ah-n\", \"nn\"],\n  \"demonic\": [\"d-ih m-aa1 n-ih-k\", \"jj\"],\n  \"demonize\": [\"d-iy1 m-ah n-ay-z\", \"vb\"],\n  \"demonizing\": [\"d-iy1 m-ah n-ay z-ih-ng\", \"nn\"],\n  \"demonstrable\": [\"d-eh1 m-ah-n s-t-r-ah b-ah-l\", \"jj\"],\n  \"demonstrably\": [\"d-ih m-aa1-n s-t-r-ah b-l-iy\", \"rb\"],\n  \"demonstrate\": [\"d-eh1 m-ah-n s-t-r-ey-t\", \"vb vbp\"],\n  \"demonstrated\": [\"d-eh1 m-ah-n s-t-r-ey t-ah-d\", \"vbn vbd jj\"],\n  \"demonstration\": [\"d-eh m-ah-n s-t-r-ey1 sh-ah-n\", \"nn\"],\n  \"demonstrator\": [\"d-eh1 m-ah-n s-t-r-ey t-er\", \"nn\"],\n  \"demoralization\": [\"d-ih m-ao r-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"demoralize\": [\"d-ih m-ao1 r-ah l-ay-z\", \"vb vbp\"],\n  \"demoralized\": [\"d-ih m-ao1 r-ah l-ay-z-d\", \"vbn jj\"],\n  \"demote\": [\"d-ih-m-ow1-t\", \"vb\"],\n  \"demotion\": [\"d-ih m-ow1 sh-ah-n\", \"nn\"],\n  \"demur\": [\"d-ih m-er1\", \"vb vbp\"],\n  \"demure\": [\"d-ih m-y-uh1-r\", \"jj\"],\n  \"den\": [\"d-eh1-n\", \"nn\"],\n  \"denationalization\": [\"d-iy n-ae sh-ah-n ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"denationalize\": [\"d-ih-n-ae1-sh-ah-n-ah-l-ay-z\", \"vb\"],\n  \"denial\": [\"d-ih n-ay1 ah-l\", \"nn\"],\n  \"denigrate\": [\"d-eh1 n-ah g-r-ey-t\", \"vb\"],\n  \"denizen\": [\"d-eh1 n-ah z-ah-n\", \"nn\"],\n  \"denominate\": [\"d-ih-n-aa1-m-ah-n-ey-t\", \"vb\"],\n  \"denomination\": [\"d-ih n-ao m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"denominator\": [\"d-ih n-aa1 m-ah n-ey t-er\", \"nn\"],\n  \"denote\": [\"d-ih n-ow1-t\", \"vb vbp\"],\n  \"denouement\": [\"d-ey n-uw m-aa1-n\", \"nn\"],\n  \"denounce\": [\"d-ih n-aw1-n-s\", \"vbp vb\"],\n  \"dense\": [\"d-eh1-n-s\", \"jj\"],\n  \"densely\": [\"d-eh1-n-s l-iy\", \"rb\"],\n  \"densest\": [\"d-eh1-n s-ah-s-t\", \"jjs\"],\n  \"density\": [\"d-eh1-n s-ah t-iy\", \"nn\"],\n  \"dent\": [\"d-eh1-n-t\", \"nn vb\"],\n  \"dental\": [\"d-eh1-n t-ah-l\", \"jj nn\"],\n  \"dentist\": [\"d-eh1-n t-ah-s-t\", \"nn\"],\n  \"dentistry\": [\"d-eh1-n t-ah-s t-r-iy\", \"nn\"],\n  \"denture\": [\"d-eh1-n ch-er\", \"nn\"],\n  \"denuclearize\": [\"d-ih n-uw1 k-l-iy er ay-z\", \"vb\"],\n  \"denude\": [\"d-ih-n-uw1-d\", \"vb\"],\n  \"denunciation\": [\"d-ih n-ah-n s-iy ey1 sh-ah-n\", \"nn\"],\n  \"deny\": [\"d-ih n-ay1\", \"vb vbp\"],\n  \"deodorant\": [\"d-iy ow1 d-er ah-n-t\", \"nn jj\"],\n  \"depart\": [\"d-ih p-aa1-r-t\", \"vb vbp\"],\n  \"departed\": [\"d-ih p-aa1-r t-ah-d\", \"vbd jj vbn\"],\n  \"department\": [\"d-ih p-aa1-r-t m-ah-n-t\", \"nn\"],\n  \"departmental\": [\"d-ih p-aa-r-t m-eh1 n-ah-l\", \"jj\"],\n  \"departure\": [\"d-ih p-aa1-r ch-er\", \"nn\"],\n  \"depend\": [\"d-ih p-eh1-n-d\", \"vb vbp\"],\n  \"dependable\": [\"d-ih p-eh1-n d-ah b-ah-l\", \"jj\"],\n  \"dependence\": [\"d-ih p-eh1-n d-ah-n-s\", \"nn\"],\n  \"dependency\": [\"d-ih p-eh1-n d-ah-n s-iy\", \"nn\"],\n  \"dependent\": [\"d-ih p-eh1-n d-ah-n-t\", \"jj nn\"],\n  \"depict\": [\"d-ih p-ih1-k-t\", \"vb vbp\"],\n  \"depiction\": [\"d-ih p-ih1-k sh-ah-n\", \"nn\"],\n  \"deplete\": [\"d-ih p-l-iy1-t\", \"vb\"],\n  \"depletion\": [\"d-ih p-l-iy1 sh-ah-n\", \"nn\"],\n  \"deplorable\": [\"d-ih p-l-ao1 r-ah b-ah-l\", \"jj\"],\n  \"deplore\": [\"d-ih p-l-ao1-r\", \"vb\"],\n  \"deploy\": [\"d-ih p-l-oy1\", \"vb vbp\"],\n  \"deployable\": [\"d-ih p-l-oy1 ah b-ah-l\", \"jj\"],\n  \"deployment\": [\"d-ih p-l-oy1 m-ah-n-t\", \"nn\"],\n  \"deport\": [\"d-ih p-ao1-r-t\", \"vb\"],\n  \"deportation\": [\"d-iy p-ao-r t-ey1 sh-ah-n\", \"nn\"],\n  \"deportee\": [\"d-iy p-ao-r t-iy1\", \"nn\"],\n  \"depose\": [\"d-ih p-ow1-z\", \"vb\"],\n  \"deposit\": [\"d-ah p-aa1 z-ih-t\", \"nn vb vbp\"],\n  \"depositary\": [\"d-ah p-aa1 z-ih t-eh r-iy\", \"nn jj\"],\n  \"deposition\": [\"d-eh p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"depositor\": [\"d-ah p-aa1 z-ih t-er\", \"nn\"],\n  \"depository\": [\"d-ih p-aa1 z-ah t-ao r-iy\", \"nn jj\"],\n  \"depot\": [\"d-iy1 p-ow\", \"nn\"],\n  \"depravity\": [\"d-ih p-r-ae1 v-ah t-iy\", \"nn\"],\n  \"depreciable\": [\"d-ih p-r-ih1 sh-ah b-ah-l\", \"jj\"],\n  \"depreciate\": [\"d-ih-p-r-iy1-sh-iy-ey-t\", \"vb\"],\n  \"depreciation\": [\"d-ih p-r-iy sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"depredation\": [\"d-eh p-r-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"depress\": [\"d-ih p-r-eh1-s\", \"vb vbp\"],\n  \"depressant\": [\"d-ih p-r-eh1 s-ah-n-t\", \"nn\"],\n  \"depressed\": [\"d-ih p-r-eh1-s-t\", \"jj vbd vbn\"],\n  \"depressing\": [\"d-ih p-r-eh1 s-ih-ng\", \"jj vbg\"],\n  \"depressingly\": [\"d-ih p-r-eh1 s-ih-ng l-iy\", \"rb\"],\n  \"depression\": [\"d-ih p-r-eh1 sh-ah-n\", \"nn\"],\n  \"deprivation\": [\"d-eh p-r-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"deprive\": [\"d-ih p-r-ay1-v\", \"vb\"],\n  \"deprived\": [\"d-ih p-r-ay1-v-d\", \"vbn jj vbd\"],\n  \"depth\": [\"d-eh1-p-th\", \"nn\"],\n  \"deputy\": [\"d-eh1 p-y-ah t-iy\", \"nn jj\"],\n  \"derail\": [\"d-ih r-ey1-l\", \"vb vbp\"],\n  \"derailment\": [\"d-ih r-ey1-l m-ah-n-t\", \"nn\"],\n  \"derange\": [\"d-ih-r-ey1-n-jh\", \"vb\"],\n  \"deranged\": [\"d-ih r-ey1-n-jh-d\", \"jj vbn\"],\n  \"derby\": [\"d-er1 b-iy\", \"nn\"],\n  \"deregulate\": [\"d-iy r-eh1 g-y-ah l-ey-t\", \"vb nn\"],\n  \"deregulated\": [\"d-iy r-eh1 g-y-ah l-ey t-ih-d\", \"vbn jj vbd\"],\n  \"deregulation\": [\"d-iy r-eh g-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"derelict\": [\"d-eh1 r-ah l-ih-k-t\", \"nn jj\"],\n  \"dereliction\": [\"d-eh r-ah l-ih1-k sh-ah-n\", \"nn\"],\n  \"deride\": [\"d-ih r-ay1-d\", \"vb vbp\"],\n  \"derision\": [\"d-er ih1 zh-ah-n\", \"nn\"],\n  \"derisively\": [\"d-er ih1 s-ih-v l-iy\", \"rb\"],\n  \"derivation\": [\"d-eh r-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"derivative\": [\"d-er ih1 v-ah t-ih-v\", \"jj nn\"],\n  \"derive\": [\"d-er ay1-v\", \"vbp vb\"],\n  \"dermal\": [\"d-er1 m-ah-l\", \"jj\"],\n  \"dermatological\": [\"d-er m-ah t-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"derogatory\": [\"d-er aa1 g-ah t-ao r-iy\", \"jj\"],\n  \"derrick\": [\"d-eh1 r-ih-k\", \"nn\"],\n  \"derring\": [\"d-eh1 r-ih-ng\", \"nn\"],\n  \"dervish\": [\"d-er1 v-ih-sh\", \"nn\"],\n  \"descend\": [\"d-ih s-eh1-n-d\", \"vb vbp\"],\n  \"descendant\": [\"d-ih s-eh1-n d-ah-n-t\", \"nn\"],\n  \"descendent\": [\"d-ih s-eh1-n d-ah-n-t\", \"nn\"],\n  \"descent\": [\"d-ih s-eh1-n-t\", \"nn\"],\n  \"describe\": [\"d-ih s-k-r-ay1-b\", \"vb vbp\"],\n  \"description\": [\"d-ih s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"descriptive\": [\"d-ih s-k-r-ih1-p t-ih-v\", \"jj\"],\n  \"desecrate\": [\"d-eh-z-ah-k-r-ey1-t\", \"vb\"],\n  \"desecration\": [\"d-eh s-ah k-r-ey1 sh-ah-n\", \"nn\"],\n  \"desegregate\": [\"d-ih s-eh1 g-r-ah g-ey-t\", \"vb\"],\n  \"desegregation\": [\"d-ih s-eh g-r-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"desert\": [\"d-eh1 z-er-t\", \"nn jj vb vbp\"],\n  \"deserted\": [\"d-ih z-er1 t-ih-d\", \"vbn vbd jj\"],\n  \"desertion\": [\"d-ih z-er1 sh-ah-n\", \"nn\"],\n  \"deserve\": [\"d-ih z-er1-v\", \"vbp vb\"],\n  \"deserving\": [\"d-ih z-er1 v-ih-ng\", \"jj nn\"],\n  \"design\": [\"d-ih z-ay1-n\", \"nn vb vbp\"],\n  \"designate\": [\"d-eh1 z-ah-g n-ey-t\", \"vb jj nn\"],\n  \"designated\": [\"d-eh1 z-ih-g n-ey t-ih-d\", \"vbn vbd jj\"],\n  \"designation\": [\"d-eh z-ah-g n-ey1 sh-ah-n\", \"nn\"],\n  \"designee\": [\"d-eh z-ih-g n-iy1\", \"nn\"],\n  \"designer\": [\"d-ih z-ay1 n-er\", \"nn\"],\n  \"desirability\": [\"d-ih z-ay r-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"desirable\": [\"d-ih z-ay1 r-ah b-ah-l\", \"jj\"],\n  \"desire\": [\"d-ih z-ay1 er\", \"nn vbp vb\"],\n  \"desired\": [\"d-ih z-ay1 er-d\", \"vbn vbd jj\"],\n  \"desist\": [\"d-ih s-ih1-s-t\", \"vb vbp\"],\n  \"desk\": [\"d-eh1-s-k\", \"nn\"],\n  \"desktop\": [\"d-eh1-s-k t-aa-p\", \"nn jj\"],\n  \"desolate\": [\"d-eh1 s-ah l-ah-t\", \"jj\"],\n  \"desolation\": [\"d-eh s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"despair\": [\"d-ih s-p-eh1-r\", \"nn vb\"],\n  \"despairing\": [\"d-ih s-p-eh1 r-ih-ng\", \"jj vbg\"],\n  \"desperado\": [\"d-eh s-p-er aa1 d-ow-z\", \"nn\"],\n  \"desperate\": [\"d-eh1 s-p-r-ih-t\", \"jj\"],\n  \"desperately\": [\"d-eh1 s-p-er ah-t l-iy\", \"rb\"],\n  \"desperation\": [\"d-eh s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"despicable\": [\"d-ih s-p-ih1 k-ah b-ah-l\", \"jj\"],\n  \"despise\": [\"d-ih s-p-ay1-z\", \"vbp vb\"],\n  \"despite\": [\"d-ih s-p-ay1-t\", \"in\"],\n  \"despondency\": [\"d-ih s-p-aa1-n d-ah-n s-iy\", \"nn\"],\n  \"despondent\": [\"d-ih s-p-aa1-n d-ah-n-t\", \"jj\"],\n  \"despot\": [\"d-eh1 s-p-ah-t\", \"nn\"],\n  \"despotism\": [\"d-eh1 s-p-ah t-ih z-ah-m\", \"nn\"],\n  \"dessert\": [\"d-ih z-er1-t\", \"nn\"],\n  \"destabilize\": [\"d-ih s-t-ey1 b-ah l-ay-z\", \"vb\"],\n  \"destabilizing\": [\"d-ih s-t-ey1 b-ah l-ay z-ih-ng\", \"vbg jj\"],\n  \"destination\": [\"d-eh s-t-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"destine\": [\"d-eh1 s-t-ih-n\", \"vb\"],\n  \"destiny\": [\"d-eh1 s-t-ah n-iy\", \"nn\"],\n  \"destitute\": [\"d-eh1 s-t-ah t-uw-t\", \"jj\"],\n  \"destroy\": [\"d-ih s-t-r-oy1\", \"vb vbp\"],\n  \"destroyed\": [\"d-ih s-t-r-oy1-d\", \"vbn vbd jj\"],\n  \"destroyer\": [\"d-ih s-t-r-oy1 er\", \"nn\"],\n  \"destruction\": [\"d-ih-s t-r-ah1-k sh-ah-n\", \"nn\"],\n  \"destructive\": [\"d-ih s-t-r-ah1-k t-ih-v\", \"jj\"],\n  \"desultory\": [\"d-eh1 s-ah-l t-ao r-iy\", \"jj\"],\n  \"detach\": [\"d-ih t-ae1-ch\", \"vb\"],\n  \"detachable\": [\"d-ih t-ae1 ch-ah b-ah-l\", \"jj\"],\n  \"detached\": [\"d-ih t-ae1-ch-t\", \"vbn jj vbd\"],\n  \"detachment\": [\"d-ih t-ae1-ch m-ah-n-t\", \"nn\"],\n  \"detail\": [\"d-ih t-ey1-l\", \"nn vb\"],\n  \"detailed\": [\"d-ih t-ey1-l-d\", \"vbn jj vbd\"],\n  \"detain\": [\"d-ih t-ey1-n\", \"vb\"],\n  \"detect\": [\"d-ih t-eh1-k-t\", \"vb vbp\"],\n  \"detectable\": [\"d-ih t-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"detection\": [\"d-ih t-eh1-k sh-ah-n\", \"nn\"],\n  \"detective\": [\"d-ih t-eh1-k t-ih-v\", \"nn\"],\n  \"detector\": [\"d-ih t-eh1-k t-er\", \"nn\"],\n  \"detente\": [\"d-ey t-aa1-n-t\", \"nn\"],\n  \"detention\": [\"d-ih t-eh1-n sh-ah-n\", \"nn\"],\n  \"deter\": [\"d-ih t-er1\", \"vb vbp\"],\n  \"detergent\": [\"d-ih t-er1 jh-ah-n-t\", \"nn\"],\n  \"deteriorate\": [\"d-ih t-ih1 r-iy er ey-t\", \"vb vbp\"],\n  \"deteriorated\": [\"d-ih t-ih1 r-iy er ey t-ih-d\", \"vbn jj vbd\"],\n  \"deteriorating\": [\"d-ih t-ih1 r-iy er ey t-ih-ng\", \"vbg jj\"],\n  \"deterioration\": [\"d-ih t-ih1 r-iy er ey sh-ah-n\", \"nn\"],\n  \"determinable\": [\"d-ih t-er1 m-ah n-ah b-ah-l\", \"jj\"],\n  \"determinant\": [\"d-ih t-er1 m-ah n-ah-n-t\", \"nn\"],\n  \"determinate\": [\"d-ih t-er1 m-ah n-ey-t\", \"jj\"],\n  \"determination\": [\"d-ih t-er m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"determine\": [\"d-ah t-er1 m-ah-n\", \"vb vbp\"],\n  \"determined\": [\"d-ih t-er1 m-ah-n-d\", \"vbn vbd jj\"],\n  \"determinedly\": [\"d-ah t-er1 m-ah n-ah-d l-iy\", \"rb\"],\n  \"determining\": [\"d-ih t-er1 m-ah n-ih-ng\", \"vbg jj nn\"],\n  \"determinism\": [\"d-ih t-er1 m-ah n-ih z-ah-m\", \"nn\"],\n  \"deterministic\": [\"d-ih t-er m-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"deterrence\": [\"d-ih t-er1 ah-n-s\", \"nn\"],\n  \"deterrent\": [\"d-ih t-er1 r-ah-n-t\", \"nn\"],\n  \"detest\": [\"d-ih t-eh1-s-t\", \"vbp vb\"],\n  \"dethrone\": [\"d-ih-th-r-ow1-n\", \"vb\"],\n  \"detonate\": [\"d-eh1 t-ah n-ey-t\", \"vb vbp\"],\n  \"detonation\": [\"d-eh t-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"detour\": [\"d-ih t-uh1-r\", \"nn\"],\n  \"detoxification\": [\"d-ih t-aa-k s-ih f-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"detoxify\": [\"d-ih t-aa1-k s-ah f-ay\", \"vb\"],\n  \"detract\": [\"d-ih t-r-ae1-k-t\", \"vb vbp\"],\n  \"detractor\": [\"d-ih t-r-ae1-k t-er\", \"nn\"],\n  \"detriment\": [\"d-eh1 t-r-ah m-ah-n-t\", \"nn\"],\n  \"detrimental\": [\"d-eh t-r-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"deuterium\": [\"d-uw t-iy1 r-iy ah-m\", \"nn\"],\n  \"devaluation\": [\"d-ih v-ae-l y-uw ey1 sh-ah-n\", \"nn\"],\n  \"devalue\": [\"d-ih v-ae1-l y-uw\", \"vb\"],\n  \"devastate\": [\"d-eh1 v-ah s-t-ey-t\", \"vb\"],\n  \"devastated\": [\"d-eh1 v-ah s-t-ey t-ah-d\", \"vbn vbd jj\"],\n  \"devastating\": [\"d-eh1 v-ah s-t-ey t-ih-ng\", \"jj vbg\"],\n  \"devastatingly\": [\"d-eh1 v-ah s-t-ey t-ih-ng l-iy\", \"rb\"],\n  \"devastation\": [\"d-eh v-ah s-t-ey1 sh-ah-n\", \"nn\"],\n  \"develop\": [\"d-ih v-eh1 l-ah-p\", \"vb vbp\"],\n  \"developed\": [\"d-ih v-eh1 l-ah-p-t\", \"vbn jj vbd\"],\n  \"developer\": [\"d-ih v-eh1 l-ah p-er\", \"nn\"],\n  \"developing\": [\"d-ih v-eh1 l-ah p-ih-ng\", \"vbg jj\"],\n  \"development\": [\"d-ih v-eh1 l-ah-p m-ah-n-t\", \"nn\"],\n  \"developmental\": [\"d-ih v-eh l-ah-p m-eh1-n t-ah-l\", \"jj\"],\n  \"deviance\": [\"d-iy1 v-iy ah-n-s\", \"nn\"],\n  \"deviant\": [\"d-iy1 v-iy ah-n-t\", \"jj\"],\n  \"deviate\": [\"d-iy1 v-iy ey-t\", \"vb\"],\n  \"deviation\": [\"d-iy v-iy ey1 sh-ah-n\", \"nn\"],\n  \"device\": [\"d-ih v-ay1-s\", \"nn\"],\n  \"devil\": [\"d-eh1 v-ah-l\", \"nn\"],\n  \"devilish\": [\"d-eh1-v l-ih-sh\", \"jj\"],\n  \"devious\": [\"d-iy1 v-iy ah-s\", \"jj\"],\n  \"devise\": [\"d-ih v-ay1-z\", \"vb vbp\"],\n  \"devoid\": [\"d-ih v-oy1-d\", \"jj\"],\n  \"devote\": [\"d-ih v-ow1-t\", \"vb vbp\"],\n  \"devoted\": [\"d-ih v-ow1 t-ah-d\", \"vbn vbd jj\"],\n  \"devotee\": [\"d-eh v-ah t-iy1\", \"nn\"],\n  \"devotion\": [\"d-ih v-ow1 sh-ah-n\", \"nn\"],\n  \"devotional\": [\"d-ih v-ow1 sh-ah n-ah-l\", \"jj\"],\n  \"devour\": [\"d-ih v-aw1 er\", \"vb vbp\"],\n  \"devout\": [\"d-ih v-aw1-t\", \"jj\"],\n  \"devoutly\": [\"d-ih v-aw1-t l-iy\", \"rb\"],\n  \"dew\": [\"d-uw1\", \"nn\"],\n  \"dexterity\": [\"d-eh-k s-t-eh1 r-ah t-iy\", \"nn\"],\n  \"dextrous\": [\"d-eh1-k s-t-r-ah-s\", \"jj\"],\n  \"diabetes\": [\"d-ay ah b-iy1 t-iy-z\", \"nn\"],\n  \"diabetic\": [\"d-ay ah b-eh1 t-ih-k\", \"jj nn\"],\n  \"diabolical\": [\"d-ay ah b-aa1 l-ih k-ah-l\", \"jj\"],\n  \"diagnose\": [\"d-ay ah-g n-ow1-s\", \"vb vbp\"],\n  \"diagnosis\": [\"d-ay ah-g n-ow1 s-ah-s\", \"nn\"],\n  \"diagnostic\": [\"d-ay ah-g n-aa1 s-t-ih-k\", \"jj nn\"],\n  \"diagonal\": [\"d-ay ae1 g-ah n-ah-l\", \"jj\"],\n  \"diagonally\": [\"d-ay ae1 g-ah n-ah l-iy\", \"rb\"],\n  \"diagram\": [\"d-ay1 ah g-r-ae-m\", \"nn\"],\n  \"dial\": [\"d-ay1 ah-l\", \"nn vb\"],\n  \"dialect\": [\"d-ay1 ah l-eh-k-t\", \"nn\"],\n  \"dialectic\": [\"d-ay ah l-eh1-k t-ih-k\", \"nn\"],\n  \"dialectical\": [\"d-ay ah l-eh1-k t-ih k-ah-l\", \"jj\"],\n  \"dialogue\": [\"d-ay1 ah l-ao-g\", \"nn\"],\n  \"dialysis\": [\"d-ay ae1 l-ah s-ah-s\", \"nn\"],\n  \"diameter\": [\"d-ay ae1 m-ah t-er\", \"nn\"],\n  \"diametrically\": [\"d-ay ah m-eh1 t-r-ih k-ah l-iy\", \"rb\"],\n  \"diamond\": [\"d-ay1 m-ah-n-d\", \"nn\"],\n  \"diaper\": [\"d-ay1 p-er\", \"nn\"],\n  \"diaphragm\": [\"d-ay1 ah f-r-ae-m\", \"nn\"],\n  \"diarrhea\": [\"d-ay er iy1 ah\", \"nn\"],\n  \"diary\": [\"d-ay1 er iy\", \"nn\"],\n  \"diatomic\": [\"d-ay ah t-aa1 m-ih-k\", \"jj\"],\n  \"diatribe\": [\"d-ay1 ah t-r-ay-b\", \"nn\"],\n  \"dibs\": [\"d-ih1-b-z\", \"nn\"],\n  \"dice\": [\"d-ay1-s\", \"nn nns\"],\n  \"dichotomy\": [\"d-ay k-aa1 t-ah m-iy\", \"nn\"],\n  \"dick\": [\"d-ih1-k\", \"nn\"],\n  \"dicker\": [\"d-ih1 k-er\", \"vb\"],\n  \"dickering\": [\"d-ih1 k-er ih-ng\", \"nn\"],\n  \"dictate\": [\"d-ih-k t-ey1-t\", \"vb vbp\"],\n  \"dictation\": [\"d-ih-k t-ey1 sh-ah-n\", \"nn\"],\n  \"dictator\": [\"d-ih-k t-ey1 t-er\", \"nn\"],\n  \"dictatorial\": [\"d-ih-k t-ah t-ao1 r-iy ah-l\", \"jj\"],\n  \"dictatorship\": [\"d-ih-k t-ey1 t-er sh-ih-p\", \"nn\"],\n  \"diction\": [\"d-ih1-k sh-ah-n\", \"nn\"],\n  \"dictionary\": [\"d-ih1-k sh-ah n-eh r-iy\", \"nn\"],\n  \"dictum\": [\"d-ih1-k t-ah-m\", \"nn\"],\n  \"did\": [\"d-ih1-d\", \"vbd\"],\n  \"didn't\": [\"d-ih1-d-ah-n-t\", \"vbd\"],\n  \"didactic\": [\"d-ay d-ae1-k t-ih-k\", \"jj\"],\n  \"die\": [\"d-ay1\", \"vb vbp nn\"],\n  \"diehard\": [\"d-ay1 hh-aa-r-d\", \"jj\"],\n  \"diesel\": [\"d-iy1 s-ah-l\", \"nn jj\"],\n  \"diet\": [\"d-ay1 ah-t\", \"nn vb\"],\n  \"dietary\": [\"d-ay1 ah t-eh r-iy\", \"jj\"],\n  \"dieter\": [\"d-ay1 ah t-er\", \"nn\"],\n  \"differ\": [\"d-ih1 f-er\", \"vbp vb\"],\n  \"difference\": [\"d-ih1 f-er ah-n-s\", \"nn\"],\n  \"different\": [\"d-ih1 f-er ah-n-t\", \"jj\"],\n  \"differential\": [\"d-ih f-er eh1-n ch-ah-l\", \"jj nn\"],\n  \"differentiate\": [\"d-ih f-er eh1-n sh-iy ey-t\", \"vb vbp\"],\n  \"differentiated\": [\"d-ih f-er eh1-n ch-iy ey t-ih-d\", \"vbn jj vbd\"],\n  \"differentiation\": [\"d-ih f-er eh-n sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"differently\": [\"d-ih1 f-r-ah-n-t l-iy\", \"rb\"],\n  \"differing\": [\"d-ih1 f-er ih-ng\", \"vbg jj\"],\n  \"difficult\": [\"d-ih1 f-ah k-ah-l-t\", \"jj\"],\n  \"difficulty\": [\"d-ih1 f-ah k-ah-l t-iy\", \"nn\"],\n  \"diffraction\": [\"d-ih f-r-ae1-k sh-ah-n\", \"nn\"],\n  \"diffuse\": [\"d-ih f-y-uw1-s\", \"jj vb\"],\n  \"diffusion\": [\"d-ih f-y-uw1 zh-ah-n\", \"nn\"],\n  \"dig\": [\"d-ih1-g\", \"vb nn vbp\"],\n  \"digest\": [\"d-ay jh-eh1-s-t\", \"vb nn\"],\n  \"digestible\": [\"d-ay jh-eh1 s-t-ah b-ah-l\", \"jj\"],\n  \"digestion\": [\"d-ay jh-eh1-s ch-ah-n\", \"nn\"],\n  \"digestive\": [\"d-ay jh-eh1 s-t-ih-v\", \"jj\"],\n  \"digger\": [\"d-ih1 g-er\", \"nn\"],\n  \"digit\": [\"d-ih1 jh-ah-t\", \"nn\"],\n  \"digital\": [\"d-ih1 jh-ah t-ah-l\", \"jj\"],\n  \"digitalis\": [\"d-ih jh-ah t-ae1 l-ah-s\", \"nn\"],\n  \"dignified\": [\"d-ih1-g n-ah f-ay-d\", \"vbn jj\"],\n  \"dignify\": [\"d-ih1-g n-ah f-ay\", \"vb\"],\n  \"dignitary\": [\"d-ih1-g n-ah t-eh r-iy\", \"nn\"],\n  \"dignity\": [\"d-ih1-g n-ah t-iy\", \"nn\"],\n  \"digress\": [\"d-ay g-r-eh1-s\", \"vb\"],\n  \"digression\": [\"d-ay g-r-eh1 sh-ah-n\", \"nn\"],\n  \"dike\": [\"d-ay1-k\", \"nn\"],\n  \"dilapidate\": [\"d-ih-l-ae1-p-ah-d-ey-t\", \"vb\"],\n  \"dilapidated\": [\"d-ah l-ae1 p-ah d-ey t-ih-d\", \"jj vbn\"],\n  \"dilatation\": [\"d-ih l-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"dilate\": [\"d-ay l-ey1-t\", \"vb\"],\n  \"dilation\": [\"d-ay l-ey1 sh-ah-n\", \"nn\"],\n  \"dilemma\": [\"d-ih l-eh1 m-ah\", \"nn\"],\n  \"diligence\": [\"d-ih1 l-ah jh-ah-n-s\", \"nn\"],\n  \"diligent\": [\"d-ih1 l-ih jh-ah-n-t\", \"jj\"],\n  \"diligently\": [\"d-ih1 l-ah jh-ah-n-t l-iy\", \"rb\"],\n  \"dill\": [\"d-ih1-l\", \"nn\"],\n  \"dilute\": [\"d-ay l-uw1-t\", \"vb jj\"],\n  \"diluted\": [\"d-ay l-uw1 t-ah-d\", \"vbn jj vbd\"],\n  \"dilution\": [\"d-ay l-uw1 sh-ah-n\", \"nn\"],\n  \"dilutive\": [\"d-ah l-uw1 t-ih-v\", \"jj\"],\n  \"dim\": [\"d-ih1-m\", \"jj vb\"],\n  \"dime\": [\"d-ay1-m\", \"nn\"],\n  \"dimension\": [\"d-ih m-eh1-n sh-ah-n\", \"nn vb\"],\n  \"dimensional\": [\"d-ih m-eh1-n sh-ah n-ah-l\", \"jj\"],\n  \"diminish\": [\"d-ih m-ih1 n-ih-sh\", \"vb vbp\"],\n  \"diminished\": [\"d-ih m-ih1 n-ih-sh-t\", \"vbn jj vbd\"],\n  \"diminution\": [\"d-ih m-ah n-uw1 sh-ah-n\", \"nn\"],\n  \"diminutive\": [\"d-ih m-ih1 n-y-ah t-ih-v\", \"jj\"],\n  \"dimly\": [\"d-ih1-m l-iy\", \"rb\"],\n  \"dimmer\": [\"d-ih1 m-er\", \"nn jjr\"],\n  \"din\": [\"d-ih1-n\", \"nn\"],\n  \"dine\": [\"d-ay1-n\", \"vb\"],\n  \"diner\": [\"d-ay1 n-er\", \"nn\"],\n  \"dinghy\": [\"d-ih1-ng iy\", \"nn\"],\n  \"dingo\": [\"d-ih1-ng g-ow\", \"nn\"],\n  \"dingy\": [\"d-ih1-n jh-iy\", \"jj\"],\n  \"dining\": [\"d-ay1 n-ih-ng\", \"nn jj vbg\"],\n  \"dinner\": [\"d-ih1 n-er\", \"nn\"],\n  \"dinnertime\": [\"d-ih1 n-er t-ay-m\", \"nn\"],\n  \"dinnerware\": [\"d-ih1 n-er w-eh-r\", \"nn\"],\n  \"dinosaur\": [\"d-ay1 n-ah s-ao-r\", \"nn\"],\n  \"dioxide\": [\"d-ay aa1-k s-ay-d\", \"nn\"],\n  \"dioxin\": [\"d-ay aa1-k s-ih-n\", \"nn\"],\n  \"dip\": [\"d-ih1-p\", \"nn vbp vb\"],\n  \"diphtheria\": [\"d-ih-f th-ih1 r-iy ah\", \"nn\"],\n  \"diploma\": [\"d-ih p-l-ow1 m-ah\", \"nn\"],\n  \"diplomacy\": [\"d-ih p-l-ow1 m-ah s-iy\", \"nn\"],\n  \"diplomat\": [\"d-ih1 p-l-ah m-ae-t\", \"nn\"],\n  \"diplomatic\": [\"d-ih p-l-ah m-ae1 t-ih-k\", \"jj\"],\n  \"diplomatically\": [\"d-ih p-l-ah m-ae1 t-ih-k l-iy\", \"rb\"],\n  \"dipole\": [\"d-ay1 p-ow-l\", \"jj nn\"],\n  \"dipper\": [\"d-ih1 p-er\", \"nn\"],\n  \"dire\": [\"d-ay1-r\", \"jj\"],\n  \"direct\": [\"d-er eh1-k-t\", \"jj vbp rb vb\"],\n  \"directed\": [\"d-er eh1-k t-ah-d\", \"vbn vbd jj\"],\n  \"direction\": [\"d-er eh1-k sh-ah-n\", \"nn\"],\n  \"directional\": [\"d-er eh1-k sh-ah n-ah-l\", \"jj\"],\n  \"directionless\": [\"d-er eh1-k sh-ah-n l-ah-s\", \"jj\"],\n  \"directive\": [\"d-er eh1-k t-ih-v\", \"nn\"],\n  \"directly\": [\"d-er eh1-k-t l-iy\", \"rb\"],\n  \"directness\": [\"d-er eh1-k-t n-ah-s\", \"nn\"],\n  \"director\": [\"d-er eh1-k t-er\", \"nn\"],\n  \"directorate\": [\"d-er eh1-k t-er ah-t\", \"nn\"],\n  \"directorial\": [\"d-er eh-k t-ao1 r-iy ah-l\", \"jj\"],\n  \"directorship\": [\"d-er eh1-k t-er sh-ih-p\", \"nn\"],\n  \"directory\": [\"d-er eh1-k t-er iy\", \"nn jj\"],\n  \"dirge\": [\"d-er1-jh\", \"nn\"],\n  \"dirt\": [\"d-er1-t\", \"nn jj\"],\n  \"dirtier\": [\"d-er1 t-iy er\", \"jjr\"],\n  \"dirtiest\": [\"d-er1 t-iy ah-s-t\", \"jjs\"],\n  \"dirty\": [\"d-er1 t-iy\", \"jj vb\"],\n  \"disability\": [\"d-ih-s ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"disable\": [\"d-ih-s ey1 b-ah-l\", \"vb\"],\n  \"disabled\": [\"d-ih-s ey1 b-ah-l-d\", \"jj nn vbn\"],\n  \"disadvantage\": [\"d-ih-s ah-d v-ae1-n t-ih-jh\", \"nn\"],\n  \"disadvantaged\": [\"d-ih-s ah-d v-ae1-n t-ih-jh-d\", \"jj\"],\n  \"disadvantageous\": [\"d-ih-s ae-d v-ae-n t-ey1 jh-ah-s\", \"jj\"],\n  \"disaffected\": [\"d-ih-s ah f-eh1-k t-ih-d\", \"jj\"],\n  \"disaffection\": [\"d-ih-s ah f-eh1-k sh-ah-n\", \"nn\"],\n  \"disagree\": [\"d-ih-s ah g-r-iy1\", \"vbp vb\"],\n  \"disagreeable\": [\"d-ih-s ah g-r-iy1 ah b-ah-l\", \"jj\"],\n  \"disagreement\": [\"d-ih-s ah g-r-iy1 m-ah-n-t\", \"nn\"],\n  \"disallow\": [\"d-ih-s ah l-aw1\", \"vb\"],\n  \"disallowance\": [\"d-ih-s ah l-aw1 ah-n-s\", \"nn\"],\n  \"disappear\": [\"d-ih-s ah p-ih1-r\", \"vb vbp\"],\n  \"disappearance\": [\"d-ih-s ah p-ih1 r-ah-n-s\", \"nn\"],\n  \"disappoint\": [\"d-ih-s ah p-oy1-n-t\", \"vb\"],\n  \"disappointed\": [\"d-ih-s ah p-oy1-n t-ih-d\", \"vbn jj vbd\"],\n  \"disappointing\": [\"d-ih-s ah p-oy1-n t-ih-ng\", \"jj\"],\n  \"disappointingly\": [\"d-ih-s ah p-oy1-n t-ih-ng l-iy\", \"rb\"],\n  \"disappointment\": [\"d-ih-s ah p-oy1-n-t m-ah-n-t\", \"nn\"],\n  \"disapproval\": [\"d-ih-s ah p-r-uw1 v-ah-l\", \"nn\"],\n  \"disapprove\": [\"d-ih-s ah p-r-uw1-v\", \"vbp vb\"],\n  \"disapproving\": [\"d-ih-s ah p-r-uw1 v-ih-ng\", \"jj\"],\n  \"disarm\": [\"d-ih-s aa1-r-m\", \"vb\"],\n  \"disarmament\": [\"d-ih-s aa1-r m-ah m-ah-n-t\", \"nn\"],\n  \"disarmed\": [\"d-ih-s aa1-r-m-d\", \"jj vbn\"],\n  \"disarming\": [\"d-ih-s aa1-r m-ih-ng\", \"vbg jj\"],\n  \"disarmingly\": [\"d-ih-s aa1-r m-ih-ng l-iy\", \"rb\"],\n  \"disarray\": [\"d-ih-s er ey1\", \"nn\"],\n  \"disassemble\": [\"d-ih-s-ah-s-eh1-m-b-ah-l\", \"vb\"],\n  \"disassociate\": [\"d-ih-s ah s-ow1 sh-iy ey-t\", \"vb\"],\n  \"disaster\": [\"d-ih z-ae1 s-t-er\", \"nn\"],\n  \"disastrous\": [\"d-ih z-ae1 s-t-r-ah-s\", \"jj\"],\n  \"disastrously\": [\"d-ih z-ae1 s-t-r-ah-s l-iy\", \"rb\"],\n  \"disavow\": [\"d-ih-s-ah-v-aw1\", \"vb\"],\n  \"disband\": [\"d-ih-s b-ae1-n-d\", \"vb\"],\n  \"disbanded\": [\"d-ih-s b-ae1-n d-ih-d\", \"vbn vbd jj\"],\n  \"disbelief\": [\"d-ih-s b-ih l-iy1-f\", \"nn\"],\n  \"disbelieve\": [\"d-ih-s b-ah l-iy1-v\", \"vb\"],\n  \"disburse\": [\"d-ih-s-b-er1-s\", \"vb\"],\n  \"disbursement\": [\"d-ih-s b-er1-s m-ah-n-t\", \"nn\"],\n  \"disc\": [\"d-ih1-s-k\", \"nn\"],\n  \"discard\": [\"d-ih-s k-aa1-r-d\", \"vb vbp\"],\n  \"discern\": [\"d-ih s-er1-n\", \"vb vbp\"],\n  \"discernible\": [\"d-ih s-er1 n-ah b-ah-l\", \"jj\"],\n  \"discerning\": [\"d-ih s-er1 n-ih-ng\", \"jj\"],\n  \"discernment\": [\"d-ih s-er1-n m-ah-n-t\", \"nn\"],\n  \"discharge\": [\"d-ih-s ch-aa1-r-jh\", \"nn vb\"],\n  \"disciple\": [\"d-ih s-ay1 p-ah-l\", \"nn\"],\n  \"disciplinary\": [\"d-ih1 s-ah p-l-ah n-eh r-iy\", \"jj\"],\n  \"discipline\": [\"d-ih1 s-ah p-l-ah-n\", \"nn vb vbp\"],\n  \"disciplined\": [\"d-ih1 s-ah p-l-ah-n-d\", \"vbn vbd jj\"],\n  \"disclaim\": [\"d-ih-s-k-l-ey1-m\", \"vb\"],\n  \"disclaimer\": [\"d-ih-s k-l-ey1 m-er\", \"nn\"],\n  \"disclose\": [\"d-ih-s k-l-ow1-z\", \"vb vbp\"],\n  \"disclosed\": [\"d-ih-s k-l-ow1-z-d\", \"vbn jj vbd\"],\n  \"disclosure\": [\"d-ih-s k-l-ow1 zh-er\", \"nn\"],\n  \"disco\": [\"d-ih1 s-k-ow\", \"nn\"],\n  \"discolor\": [\"d-ih-s-k-ah1-l-er\", \"vb\"],\n  \"discomfort\": [\"d-ih-s k-ah1-m f-er-t\", \"nn\"],\n  \"disconcert\": [\"d-ih-s-k-ah-n-s-er1-t\", \"vb\"],\n  \"disconcerting\": [\"d-ih-s k-ah-n s-er1 t-ih-ng\", \"jj vbg\"],\n  \"disconnect\": [\"d-ih-s k-ah n-eh1-k-t\", \"vb\"],\n  \"disconnected\": [\"d-ih-s k-ah n-eh1-k t-ih-d\", \"vbn jj\"],\n  \"discontent\": [\"d-ih-s k-ah-n t-eh1-n-t\", \"nn\"],\n  \"discontented\": [\"d-ih-s k-ah-n t-eh1-n t-ih-d\", \"jj\"],\n  \"discontinuance\": [\"d-ih-s k-ah-n t-ih1 n-y-uw ah-n-s\", \"nn\"],\n  \"discontinuation\": [\"d-ih-s k-ah-n t-ih n-y-uw ey1 sh-ah-n\", \"nn\"],\n  \"discontinue\": [\"d-ih-s k-ah-n t-ih1 n-y-uw\", \"vb\"],\n  \"discontinued\": [\"d-ih-s k-ah-n t-ih1 n-y-uw-d\", \"vbn jj vbd\"],\n  \"discord\": [\"d-ih1 s-k-ao-r-d\", \"nn\"],\n  \"discordant\": [\"d-ih s-k-ao1-r d-ah-n-t\", \"jj\"],\n  \"discotheque\": [\"d-ih1 s-k-ow t-eh-k\", \"nn\"],\n  \"discount\": [\"d-ih-s k-aw1-n-t\", \"nn vbp jj vb\"],\n  \"discounted\": [\"d-ih1-s k-aw-n t-ih-d\", \"vbn jj vbd\"],\n  \"discounter\": [\"d-ih1-s k-aw-n t-er\", \"nn\"],\n  \"discourage\": [\"d-ih s-k-er1 ih-jh\", \"vb vbp\"],\n  \"discouraged\": [\"d-ih s-k-er1 ah-jh-d\", \"vbn vbd jj\"],\n  \"discouragement\": [\"d-ih s-k-er1 ih-jh m-ah-n-t\", \"nn\"],\n  \"discouraging\": [\"d-ih s-k-er1 ah jh-ih-ng\", \"vbg jj\"],\n  \"discourse\": [\"d-ih1-s k-ao-r-s\", \"nn vb\"],\n  \"discover\": [\"d-ih s-k-ah1 v-er\", \"vb vbp\"],\n  \"discovered\": [\"d-ih s-k-ah1 v-er-d\", \"vbn jj vbd\"],\n  \"discovery\": [\"d-ih s-k-ah1 v-er iy\", \"nn\"],\n  \"discredit\": [\"d-ih-s k-r-eh1 d-ah-t\", \"vb nn\"],\n  \"discredited\": [\"d-ih-s k-r-eh1 d-ih t-ih-d\", \"vbn jj\"],\n  \"discreet\": [\"d-ih s-k-r-iy1-t\", \"jj\"],\n  \"discreetly\": [\"d-ih s-k-r-iy1-t l-iy\", \"rb\"],\n  \"discrepancy\": [\"d-ih s-k-r-eh1 p-ah-n s-iy\", \"nn\"],\n  \"discrete\": [\"d-ih s-k-r-iy1-t\", \"jj\"],\n  \"discretion\": [\"d-ih s-k-r-eh1 sh-ah-n\", \"nn\"],\n  \"discretionary\": [\"d-ih s-k-r-eh1 sh-ah-n eh r-iy\", \"jj\"],\n  \"discriminate\": [\"d-ih s-k-r-ih1 m-ah n-ey-t\", \"vb vbp jj\"],\n  \"discriminated\": [\"d-ih s-k-r-ih1 m-ah n-ey t-ah-d\", \"vbd vbn jj\"],\n  \"discriminating\": [\"d-ih s-k-r-ih1 m-ah n-ey t-ih-ng\", \"vbg jj\"],\n  \"discrimination\": [\"d-ih s-k-r-ih m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"discriminatory\": [\"d-ih s-k-r-ih1 m-ah n-ah t-ao r-iy\", \"jj\"],\n  \"discursive\": [\"d-ih s-k-er1 s-ih-v\", \"jj\"],\n  \"discus\": [\"d-ih1 s-k-ah-s\", \"nn\"],\n  \"discuss\": [\"d-ih s-k-ah1-s\", \"vb vbp\"],\n  \"discussion\": [\"d-ih s-k-ah1 sh-ah-n\", \"nn\"],\n  \"disdain\": [\"d-ih-s d-ey1-n\", \"nn vbp vb\"],\n  \"disdainful\": [\"d-ih-s d-ey1-n f-ah-l\", \"jj\"],\n  \"disease\": [\"d-ih z-iy1-z\", \"nn\"],\n  \"diseased\": [\"d-ih z-iy1-z-d\", \"jj\"],\n  \"disembodied\": [\"d-ih-s ih b-aa1 d-iy-d\", \"jj\"],\n  \"disenchant\": [\"d-ih-s ih-n ch-ae1-n t-ih-d\", \"vb\"],\n  \"disenchanted\": [\"d-ih-s ih-n ch-ae1-n t-ih-d\", \"vbn jj\"],\n  \"disenfranchise\": [\"d-ih-s-ih-n-f-r-ae1-n-ch-ay-z\", \"vb\"],\n  \"disenfranchisement\": [\"d-ih-s ih-n f-r-ae1-n ch-ay-z m-ah-n-t\", \"nn\"],\n  \"disengage\": [\"d-ih-s ih-n g-ey1-jh\", \"vb\"],\n  \"disengagement\": [\"d-ih-s ih-n g-ey1-jh m-ah-n-t\", \"nn\"],\n  \"disentangle\": [\"d-ih-s ah-n t-ae1-ng g-ah-l\", \"vb\"],\n  \"disfavor\": [\"d-ih-s f-ey1 v-er\", \"nn\"],\n  \"disfigure\": [\"d-ih-s-f-ih1-g-y-er\", \"vb\"],\n  \"disfigured\": [\"d-ih-s f-ih1 g-y-er-d\", \"vbd vbn jj\"],\n  \"disgorge\": [\"d-ih-s g-ao1-r-jh\", \"vb\"],\n  \"disgorgement\": [\"d-ih-s g-ao1-r-jh m-ah-n-t\", \"nn\"],\n  \"disgrace\": [\"d-ih-s g-r-ey1-s\", \"nn vb\"],\n  \"disgraceful\": [\"d-ih-s g-r-ey1-s f-ah-l\", \"jj\"],\n  \"disgruntle\": [\"d-ih-s g-r-ah1-n t-ah-l\", \"vb\"],\n  \"disgruntled\": [\"d-ih-s g-r-ah1-n t-ah-l-d\", \"jj vbn\"],\n  \"disguise\": [\"d-ih-s g-ay1-z\", \"vb vbp nn\"],\n  \"disguised\": [\"d-ih-s g-ay1-z-d\", \"vbn vbd jj\"],\n  \"disgust\": [\"d-ih-s g-ah1-s-t\", \"nn vb\"],\n  \"disgusted\": [\"d-ih-s g-ah1 s-t-ah-d\", \"vbn jj\"],\n  \"disgusting\": [\"d-ih-s g-ah1 s-t-ih-ng\", \"jj\"],\n  \"dish\": [\"d-ih1-sh\", \"nn vb\"],\n  \"disharmony\": [\"d-ih-s hh-aa1-r m-ah n-iy\", \"nn\"],\n  \"dishearten\": [\"d-ih-s hh-aa1-r t-ah-n\", \"vb\"],\n  \"disheartening\": [\"d-ih-s hh-aa1-r t-ah-n ih-ng\", \"jj\"],\n  \"disheveled\": [\"d-ih sh-eh1 v-ah-l-d\", \"jj\"],\n  \"dishonest\": [\"d-ih-s aa1 n-ah-s-t\", \"jj\"],\n  \"dishonestly\": [\"d-ih-s ao1 n-ah-s-t l-iy\", \"rb\"],\n  \"dishonesty\": [\"d-ih-s aa1 n-ah s-t-iy\", \"nn\"],\n  \"dishonor\": [\"d-ih-s aa1 n-er\", \"nn vb\"],\n  \"dishonorable\": [\"d-ih-s aa1 n-er ah b-ah-l\", \"jj\"],\n  \"dishwasher\": [\"d-ih1-sh w-aa sh-er\", \"nn\"],\n  \"disillusion\": [\"d-ih-s-ih-l-uw1-zh-ah-n\", \"vb\"],\n  \"disillusioned\": [\"d-ih-s ih l-uw1 zh-ah-n-d\", \"vbn jj\"],\n  \"disillusioning\": [\"d-ih-s ih l-uw1 zh-ah-n ih-ng\", \"jj\"],\n  \"disillusionment\": [\"d-ih-s ih l-uw1 zh-ah-n m-ah-n-t\", \"nn\"],\n  \"disincentive\": [\"d-ih-s ih-n s-eh1-n t-ih-v\", \"nn\"],\n  \"disinclination\": [\"d-ih-s ih-n k-l-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"disincline\": [\"d-ih-s-ih-n-k-l-ay1-n\", \"vb\"],\n  \"disinclined\": [\"d-ih-s ih-n k-l-ay1-n-d\", \"vbn jj\"],\n  \"disinfectant\": [\"d-ih-s ih-n f-eh1-k t-ah-n-t\", \"nn\"],\n  \"disinflation\": [\"d-ih-s ih-n f-l-ey1 sh-ah-n\", \"nn\"],\n  \"disinflationary\": [\"d-ih-s ih-n f-l-ey1 sh-ah-n eh r-iy\", \"jj\"],\n  \"disingenuous\": [\"d-ih-s ih-n jh-eh1 n-y-uw ah-s\", \"jj\"],\n  \"disintegrate\": [\"d-ih-s ih1-n t-ah g-r-ey-t\", \"vb\"],\n  \"disintegration\": [\"d-ih-s ih-n t-ah g-r-ey1 sh-ah-n\", \"nn\"],\n  \"disinterest\": [\"d-ih-s ih1-n t-er ah-s-t\", \"nn\"],\n  \"disinterested\": [\"d-ih-s ih1-n t-r-ih s-t-ih-d\", \"jj\"],\n  \"disjoint\": [\"d-ih-s-jh-oy1-n-t\", \"vb\"],\n  \"disjointed\": [\"d-ih-s jh-oy1-n t-ih-d\", \"vbn jj\"],\n  \"disk\": [\"d-ih1-s-k\", \"nn\"],\n  \"diskette\": [\"d-ih s-k-eh1-t\", \"nn\"],\n  \"dislike\": [\"d-ih-s l-ay1-k\", \"nn vb vbp\"],\n  \"disliked\": [\"d-ih-s l-ay1-k-t\", \"vbd jj vbn\"],\n  \"dislocated\": [\"d-ih1-s l-ow k-ey t-ih-d\", \"jj\"],\n  \"dislocation\": [\"d-ih-s l-ow1 k-ey1 sh-ah-n\", \"nn\"],\n  \"dislodge\": [\"d-ih-s l-aa1-jh\", \"vb\"],\n  \"disloyal\": [\"d-ih-s l-oy1 ah-l\", \"jj\"],\n  \"disloyalty\": [\"d-ih-s l-oy1 ah-l t-iy\", \"nn\"],\n  \"dismal\": [\"d-ih1-z m-ah-l\", \"jj\"],\n  \"dismally\": [\"d-ih1-z m-ah l-iy\", \"rb\"],\n  \"dismantle\": [\"d-ih-s m-ae1-n t-ah-l\", \"vb\"],\n  \"dismay\": [\"d-ih-s m-ey1\", \"nn vb\"],\n  \"dismayed\": [\"d-ih-s m-ey1-d\", \"vbn jj\"],\n  \"dismember\": [\"d-ih-s m-eh1-m b-er\", \"vb\"],\n  \"dismemberment\": [\"d-ih-s m-eh1-m b-er m-ah-n-t\", \"nn\"],\n  \"dismiss\": [\"d-ih-s m-ih1-s\", \"vb vbp\"],\n  \"dismissal\": [\"d-ih-s m-ih1 s-ah-l\", \"nn\"],\n  \"disobedience\": [\"d-ih-s ah b-iy1 d-iy ah-n-s\", \"nn\"],\n  \"disobey\": [\"d-ih-s ah b-ey1\", \"vb\"],\n  \"disorder\": [\"d-ih-s ao1-r d-er\", \"nn vb\"],\n  \"disorderly\": [\"d-ih-s ao1-r d-er l-iy\", \"jj\"],\n  \"disorganization\": [\"d-ih-s ao-r g-ah n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"disorganize\": [\"d-ih-s-ao1-r-g-ah-n-ay-z\", \"vb\"],\n  \"disorganized\": [\"d-ih-s ao1-r g-ah n-ay-z-d\", \"jj vbn\"],\n  \"disorient\": [\"d-ih-s-ao1-r-iy-eh-n-t\", \"vb\"],\n  \"disoriented\": [\"d-ih-s ao1 r-iy eh-n t-ih-d\", \"vbn jj\"],\n  \"disown\": [\"d-ih-s-ow1-n\", \"vb\"],\n  \"disparage\": [\"d-ih s-p-eh1 r-ih-jh\", \"vb\"],\n  \"disparate\": [\"d-ih1 s-p-er ih-t\", \"jj\"],\n  \"disparity\": [\"d-ih s-p-eh1 r-ah t-iy\", \"nn\"],\n  \"dispassionate\": [\"d-ih s-p-ae1 sh-ah-n ah-t\", \"jj\"],\n  \"dispassionately\": [\"d-ih s-p-ae1 sh-ah-n ah-t l-iy\", \"rb\"],\n  \"dispatch\": [\"d-ih s-p-ae1-ch\", \"nn vb\"],\n  \"dispatcher\": [\"d-ih s-p-ae1 ch-er\", \"nn\"],\n  \"dispel\": [\"d-ih s-p-eh1-l\", \"vb\"],\n  \"dispensable\": [\"d-ih s-p-eh1-n s-ah b-ah-l\", \"jj\"],\n  \"dispense\": [\"d-ih s-p-eh1-n-s\", \"vb vbp\"],\n  \"dispenser\": [\"d-ih s-p-eh1-n s-er\", \"nn\"],\n  \"dispersal\": [\"d-ih s-p-er1 s-ah-l\", \"nn\"],\n  \"dispersant\": [\"d-ih s-p-er1 s-ah-n-t\", \"nn\"],\n  \"disperse\": [\"d-ih s-p-er1-s\", \"vb\"],\n  \"dispersed\": [\"d-ih s-p-er1-s-t\", \"vbn jj vbd\"],\n  \"dispersion\": [\"d-ih s-p-er1 zh-ah-n\", \"nn\"],\n  \"displace\": [\"d-ih-s p-l-ey1-s\", \"vb\"],\n  \"displacement\": [\"d-ih-s p-l-ey1-s m-ah-n-t\", \"nn\"],\n  \"display\": [\"d-ih s-p-l-ey1\", \"nn vbp vb\"],\n  \"displease\": [\"d-ih-s-p-l-iy1-z\", \"vb\"],\n  \"displeased\": [\"d-ih-s p-l-iy1-z-d\", \"vbn jj\"],\n  \"displeasure\": [\"d-ih-s p-l-eh1 zh-er\", \"nn\"],\n  \"disposable\": [\"d-ih s-p-ow1 z-ah b-ah-l\", \"jj nn\"],\n  \"disposal\": [\"d-ih s-p-ow1 z-ah-l\", \"nn\"],\n  \"dispose\": [\"d-ih s-p-ow1-z\", \"vb\"],\n  \"disposed\": [\"d-ih s-p-ow1-z-d\", \"vbn jj vbd\"],\n  \"disposition\": [\"d-ih s-p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"dispossess\": [\"d-ih-s-p-ah-z-eh1-s\", \"vb\"],\n  \"dispossessed\": [\"d-ih-s p-ah z-eh1-s-t\", \"vbn jj\"],\n  \"disprove\": [\"d-ih-s p-r-uw1-v\", \"vb\"],\n  \"dispute\": [\"d-ih s-p-y-uw1-t\", \"nn vbp vb\"],\n  \"disputed\": [\"d-ih s-p-y-uw1 t-ah-d\", \"vbn vbd jj\"],\n  \"disqualification\": [\"d-ih-s k-w-aa l-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"disqualified\": [\"d-ih-s k-w-aa1 l-ah f-ay-d\", \"vbn vbd\"],\n  \"disqualify\": [\"d-ih-s k-w-aa1 l-ah f-ay\", \"vb\"],\n  \"disquiet\": [\"d-ih-s k-w-ay1 ah-t\", \"nn\"],\n  \"disquieting\": [\"d-ih-s k-w-ay1 ah t-ih-ng\", \"jj\"],\n  \"disregard\": [\"d-ih-s r-ih g-aa1-r-d\", \"nn vb\"],\n  \"disrepair\": [\"d-ih-s r-ih p-eh1-r\", \"nn\"],\n  \"disreputable\": [\"d-ih-s r-eh1 p-y-ah t-ah b-ah-l\", \"jj\"],\n  \"disrepute\": [\"d-ih-s r-ih p-y-uw1-t\", \"nn\"],\n  \"disrespect\": [\"d-ih-s r-ih s-p-eh1-k-t\", \"nn\"],\n  \"disrupt\": [\"d-ih-s r-ah1-p-t\", \"vb vbp\"],\n  \"disrupted\": [\"d-ih-s r-ah1-p t-ih-d\", \"vbn jj vbd\"],\n  \"disruption\": [\"d-ih-s r-ah1-p sh-ah-n\", \"nn\"],\n  \"disruptive\": [\"d-ih-s r-ah1-p t-ih-v\", \"jj\"],\n  \"dissatisfaction\": [\"d-ih-s ae t-ih-s f-ae1-k sh-ah-n\", \"nn\"],\n  \"dissatisfied\": [\"d-ih-s ae1 t-ah-s f-ay-d\", \"jj vbn\"],\n  \"dissatisfy\": [\"d-ih-s-ae1-t-ah-s-f-ay\", \"vb\"],\n  \"dissect\": [\"d-ay-s-eh1-k-t\", \"vb\"],\n  \"dissection\": [\"d-ay s-eh1-k sh-ah-n\", \"nn\"],\n  \"disseminate\": [\"d-ih s-eh1 m-ah n-ey-t\", \"vb\"],\n  \"dissemination\": [\"d-ih s-eh m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"dissension\": [\"d-ih s-eh1-n sh-ah-n\", \"nn\"],\n  \"dissent\": [\"d-ih s-eh1-n-t\", \"nn vbp vb\"],\n  \"dissenter\": [\"d-ih s-eh1-n t-er\", \"nn\"],\n  \"dissenting\": [\"d-ih s-eh1-n t-ih-ng\", \"jj vbg\"],\n  \"disservice\": [\"d-ih-s s-er1 v-ah-s\", \"nn\"],\n  \"dissident\": [\"d-ih1 s-ah d-ih-n-t\", \"jj nn\"],\n  \"dissimilar\": [\"d-ih s-s-ih1 m-ah l-er\", \"jj\"],\n  \"dissipate\": [\"d-ih1 s-ah p-ey-t\", \"vb\"],\n  \"dissociate\": [\"d-ih s-ow1 s-iy ey-t\", \"vb\"],\n  \"dissociation\": [\"d-ih s-ow s-iy ey1 sh-ah-n\", \"nn\"],\n  \"dissolution\": [\"d-ih s-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"dissolve\": [\"d-ih z-aa1-l-v\", \"vb vbp nn\"],\n  \"dissolving\": [\"d-ih z-ao1-l v-ih-ng\", \"vbg jj\"],\n  \"dissonance\": [\"d-ih1 s-ah n-ah-n-s\", \"nn\"],\n  \"dissuade\": [\"d-ih s-w-ey1-d\", \"vb\"],\n  \"distal\": [\"d-ih1 s-t-ah-l\", \"jj\"],\n  \"distance\": [\"d-ih1 s-t-ah-n-s\", \"nn vb\"],\n  \"distant\": [\"d-ih1 s-t-ah-n-t\", \"jj\"],\n  \"distaste\": [\"d-ih-s t-ey1-s-t\", \"nn\"],\n  \"distasteful\": [\"d-ih-s t-ey1-s-t f-ah-l\", \"jj\"],\n  \"distill\": [\"d-ih-s-t-ih1-l\", \"vb\"],\n  \"distillate\": [\"d-ih1 s-t-ah l-ey-t\", \"nn\"],\n  \"distillation\": [\"d-ih s-t-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"distilled\": [\"d-ih s-t-ih1-l-d\", \"vbn jj\"],\n  \"distiller\": [\"d-ih s-t-ih1 l-er\", \"nn\"],\n  \"distillery\": [\"d-ih s-t-ih1 l-er iy\", \"nn\"],\n  \"distinct\": [\"d-ih s-t-ih1-ng-k-t\", \"jj\"],\n  \"distinction\": [\"d-ih s-t-ih1-ng-k sh-ah-n\", \"nn\"],\n  \"distinctive\": [\"d-ih s-t-ih1-ng-k t-ih-v\", \"jj\"],\n  \"distinctively\": [\"d-ih s-t-ih1-ng-k t-ih-v l-iy\", \"rb\"],\n  \"distinctiveness\": [\"d-ih s-t-ih1-ng-k t-ih-v n-ah-s\", \"nn\"],\n  \"distinctly\": [\"d-ih s-t-ih1-ng-k-t l-iy\", \"rb\"],\n  \"distinguish\": [\"d-ih s-t-ih1-ng g-w-ih-sh\", \"vb vbp\"],\n  \"distinguishable\": [\"d-ih s-t-ih1-ng g-w-ih sh-ah b-ah-l\", \"jj\"],\n  \"distinguished\": [\"d-ih s-t-ih1-ng g-w-ih-sh-t\", \"vbn jj vbd\"],\n  \"distinguishing\": [\"d-ih s-t-ih1-ng g-w-ih sh-ih-ng\", \"vbg jj\"],\n  \"distort\": [\"d-ih s-t-ao1-r-t\", \"vb vbp\"],\n  \"distorted\": [\"d-ih s-t-ao1-r t-ah-d\", \"vbn vbd jj\"],\n  \"distortion\": [\"d-ih s-t-ao1-r sh-ah-n\", \"nn\"],\n  \"distract\": [\"d-ih s-t-r-ae1-k-t\", \"vb\"],\n  \"distracting\": [\"d-ih s-t-r-ae1-k t-ih-ng\", \"vbg jj\"],\n  \"distraction\": [\"d-ih-s t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"distraught\": [\"d-ih s-t-r-ao1-t\", \"jj\"],\n  \"distress\": [\"d-ih s-t-r-eh1-s\", \"nn vb\"],\n  \"distressed\": [\"d-ih s-t-r-eh1-s-t\", \"jj vbn\"],\n  \"distressing\": [\"d-ih s-t-r-eh1 s-ih-ng\", \"jj\"],\n  \"distressingly\": [\"d-ih s-t-r-eh1 s-ih-ng l-iy\", \"rb\"],\n  \"distribute\": [\"d-ih s-t-r-ih1 b-y-uw-t\", \"vb vbp\"],\n  \"distributed\": [\"d-ih-s t-r-ih1 b-y-ah t-ah-d\", \"vbn vbd jj\"],\n  \"distribution\": [\"d-ih-s t-r-ah b-y-uw1 sh-ah-n\", \"nn\"],\n  \"distributive\": [\"d-ih s-t-r-ih1 b-y-uw t-ih-v\", \"jj\"],\n  \"distributor\": [\"d-ih-s t-r-ih1 b-y-ah t-er\", \"nn\"],\n  \"distributorship\": [\"d-ih s-t-r-ih1 b-y-uw t-er sh-ih-p\", \"nn\"],\n  \"district\": [\"d-ih1 s-t-r-ih-k-t\", \"nn jj\"],\n  \"distrust\": [\"d-ih-s t-r-ah1-s-t\", \"nn vbp vb\"],\n  \"disturb\": [\"d-ih s-t-er1-b\", \"vb vbp\"],\n  \"disturbance\": [\"d-ih s-t-er1 b-ah-n-s\", \"nn\"],\n  \"disturbed\": [\"d-ih s-t-er1-b-d\", \"vbn vbd jj\"],\n  \"disturbing\": [\"d-ih s-t-er1 b-ih-ng\", \"jj vbg\"],\n  \"disturbingly\": [\"d-ih s-t-er1 b-ih-ng l-iy\", \"rb\"],\n  \"disunion\": [\"d-ih-s y-uw1 n-y-ah-n\", \"nn\"],\n  \"disunity\": [\"d-ih-s y-uw1 n-ah t-iy\", \"nn\"],\n  \"ditch\": [\"d-ih1-ch\", \"nn vb\"],\n  \"dither\": [\"d-ih1-dh-er\", \"vb\"],\n  \"ditto\": [\"d-ih1 t-ow\", \"nn\"],\n  \"ditty\": [\"d-ih1 t-iy\", \"nn\"],\n  \"diuretic\": [\"d-ay uw r-eh1 t-ih-k\", \"nn jj\"],\n  \"diurnal\": [\"d-ay er1 n-ah-l\", \"jj\"],\n  \"diva\": [\"d-iy1 v-ah\", \"nn\"],\n  \"divan\": [\"d-ih v-ae1-n\", \"nn\"],\n  \"dive\": [\"d-ay1-v\", \"nn vbp vb\"],\n  \"diver\": [\"d-ay1 v-er\", \"nn\"],\n  \"diverge\": [\"d-ih v-er1-jh\", \"vb vbp\"],\n  \"divergence\": [\"d-ay v-er1 jh-ah-n-s\", \"nn\"],\n  \"divergent\": [\"d-ay v-er1 jh-ah-n-t\", \"jj\"],\n  \"diverse\": [\"d-ay v-er1-s\", \"jj\"],\n  \"diversification\": [\"d-ay v-er s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"diversified\": [\"d-ay v-er1 s-ah f-ay-d\", \"jj vbd vbn\"],\n  \"diversify\": [\"d-ay v-er1 s-ah f-ay\", \"vb\"],\n  \"diversion\": [\"d-ay v-er1 zh-ah-n\", \"nn\"],\n  \"diversionary\": [\"d-ay v-er1 zh-ah-n eh r-iy\", \"jj\"],\n  \"diversity\": [\"d-ih v-er1 s-ah t-iy\", \"nn\"],\n  \"divert\": [\"d-ay v-er1-t\", \"vb vbp\"],\n  \"divertimento\": [\"d-ih v-er t-ah m-eh1-n t-ow\", \"jj\"],\n  \"divest\": [\"d-ay v-eh1-s-t\", \"vb vbp\"],\n  \"divested\": [\"d-ay v-eh1 s-t-ih-d\", \"vbn jj vbd\"],\n  \"divestiture\": [\"d-ih v-eh1 s-t-ih ch-er\", \"nn\"],\n  \"divestment\": [\"d-ay v-eh1-s-t m-ah-n-t\", \"nn\"],\n  \"divide\": [\"d-ih v-ay1-d\", \"vb nn vbp\"],\n  \"divided\": [\"d-ih v-ay1 d-ah-d\", \"vbn vbd jj\"],\n  \"dividend\": [\"d-ih1 v-ih d-eh-n-d\", \"nn\"],\n  \"divider\": [\"d-ih v-ay1 d-er\", \"nn\"],\n  \"dividing\": [\"d-ih v-ay1 d-ih-ng\", \"vbg jj\"],\n  \"divination\": [\"d-ih v-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"divine\": [\"d-ih v-ay1-n\", \"jj nn vb\"],\n  \"divinely\": [\"d-ih v-ay1-n l-iy\", \"rb\"],\n  \"diving\": [\"d-ay1 v-ih-ng\", \"vbg jj nn\"],\n  \"divinity\": [\"d-ih v-ih1 n-ah t-iy\", \"nn\"],\n  \"divisible\": [\"d-ih v-ih1 z-ah b-ah-l\", \"jj\"],\n  \"division\": [\"d-ih v-ih1 zh-ah-n\", \"nn\"],\n  \"divisional\": [\"d-ih v-ih1 zh-ah n-ah-l\", \"jj\"],\n  \"divisive\": [\"d-ih v-ay1 s-ih-v\", \"jj\"],\n  \"divisiveness\": [\"d-ih v-ay1 s-ih-v n-ah-s\", \"nn\"],\n  \"divorce\": [\"d-ih v-ao1-r-s\", \"nn vb vbp\"],\n  \"divorced\": [\"d-ih v-ao1-r-s-t\", \"vbn jj vbd\"],\n  \"divorcee\": [\"d-ah v-ao1-r s-iy\", \"nn\"],\n  \"divulge\": [\"d-ih v-ah1-l-jh\", \"vb\"],\n  \"divvied\": [\"d-ih1 v-iy-d\", \"vbn\"],\n  \"divvy\": [\"d-ih1-v-iy\", \"vb\"],\n  \"dizziness\": [\"d-ih1 z-iy n-ah-s\", \"nn\"],\n  \"dizzy\": [\"d-ih1 z-iy\", \"jj vb\"],\n  \"dizzying\": [\"d-ih1 z-iy ih-ng\", \"jj vbg\"],\n  \"do\": [\"d-uw1\", \"vb\"],\n  \"doable\": [\"d-uw1 ah b-ah-l\", \"jj\"],\n  \"docile\": [\"d-aa1 s-ah-l\", \"jj\"],\n  \"dock\": [\"d-aa1-k\", \"nn vb\"],\n  \"docket\": [\"d-aa1 k-ah-t\", \"nn\"],\n  \"dockside\": [\"d-aa1-k s-ay-d\", \"nn\"],\n  \"dockworker\": [\"d-aa1-k w-er k-er\", \"nn\"],\n  \"doctor\": [\"d-aa1-k t-er\", \"nn vb\"],\n  \"doctoral\": [\"d-aa1-k t-er ah-l\", \"jj\"],\n  \"doctorate\": [\"d-aa1-k t-er ah-t\", \"nn\"],\n  \"doctoring\": [\"d-aa1-k t-er ih-ng\", \"nn\"],\n  \"doctrinal\": [\"d-aa1-k t-r-ah n-ah-l\", \"jj\"],\n  \"doctrine\": [\"d-aa1-k t-r-ah-n\", \"nn\"],\n  \"document\": [\"d-aa1 k-y-ah m-eh-n-t\", \"nn vb vbp\"],\n  \"documentary\": [\"d-aa k-y-ah m-eh1-n t-er iy\", \"nn jj\"],\n  \"documentation\": [\"d-aa k-y-ah m-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"doddering\": [\"d-aa1 d-er ih-ng\", \"jj\"],\n  \"dodge\": [\"d-aa1-jh\", \"vbp nn vb\"],\n  \"doe\": [\"d-ow1\", \"nn\"],\n  \"doer\": [\"d-uw1-r\", \"nn\"],\n  \"doesn't\": [\"d-ah1-z-ah-n-t\", \"vbz\"],\n  \"doff\": [\"d-ao1-f\", \"vb\"],\n  \"dog\": [\"d-ao1-g\", \"nn\"],\n  \"dogfight\": [\"d-aa1-g f-ay-t\", \"nn\"],\n  \"dogged\": [\"d-ao1-g-d\", \"vbn jj vbd\"],\n  \"doggedly\": [\"d-ao1 g-ah-d l-iy\", \"rb\"],\n  \"doggerel\": [\"d-aa1 g-er ah-l\", \"nn\"],\n  \"doghouse\": [\"d-ao1-g hh-aw-s\", \"nn\"],\n  \"dogma\": [\"d-aa1-g m-ah\", \"nn\"],\n  \"dogmatic\": [\"d-aa-g m-ae1 t-ih-k\", \"jj\"],\n  \"dogmatically\": [\"d-aa-g m-ae1 t-ih-k l-iy\", \"rb\"],\n  \"dogmatism\": [\"d-aa1-g m-ah t-ih z-ah-m\", \"nn\"],\n  \"dogwood\": [\"d-ao1-g w-uh-d\", \"nn\"],\n  \"doldrums\": [\"d-ow1-l d-r-ah-m-z\", \"nn\"],\n  \"dole\": [\"d-ow1-l\", \"vb nn vbp\"],\n  \"doleful\": [\"d-ow1-l f-ah-l\", \"jj\"],\n  \"doll\": [\"d-aa1-l\", \"nn\"],\n  \"dollar\": [\"d-aa1 l-er\", \"nn\"],\n  \"dollop\": [\"d-aa1 l-ah-p\", \"nn\"],\n  \"dolphin\": [\"d-aa1-l f-ah-n\", \"nn\"],\n  \"domain\": [\"d-ow m-ey1-n\", \"nn\"],\n  \"dome\": [\"d-ow1-m\", \"nn\"],\n  \"domed\": [\"d-ow1-m-d\", \"jj\"],\n  \"domestic\": [\"d-ah m-eh1 s-t-ih-k\", \"jj nn\"],\n  \"domestically\": [\"d-ah m-eh1 s-t-ih-k l-iy\", \"rb\"],\n  \"domesticity\": [\"d-ow m-eh s-t-ih1 s-ah t-iy\", \"nn\"],\n  \"dominance\": [\"d-aa1 m-ah n-ah-n-s\", \"nn\"],\n  \"dominant\": [\"d-aa1 m-ah n-ah-n-t\", \"jj\"],\n  \"dominate\": [\"d-aa1 m-ah n-ey-t\", \"vb vbp\"],\n  \"dominating\": [\"d-aa1 m-ah n-ey t-ih-ng\", \"vbg jj\"],\n  \"domination\": [\"d-aa m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"domineer\": [\"d-aa-m-ah-n-ih1-r\", \"vb\"],\n  \"domineering\": [\"d-aa m-ah n-ih1 r-ih-ng\", \"vbg jj\"],\n  \"dominion\": [\"d-ah m-ih1 n-y-ah-n\", \"nn\"],\n  \"domino\": [\"d-aa1 m-ah n-ow\", \"nn\"],\n  \"dominoes\": [\"d-aa1 m-ah n-ow-z\", \"nn\"],\n  \"don\": [\"d-aa1-n\", \"vb nn vbp\"],\n  \"donate\": [\"d-ow1 n-ey-t\", \"vb vbp\"],\n  \"donation\": [\"d-ow n-ey1 sh-ah-n\", \"nn\"],\n  \"done\": [\"d-ah1-n\", \"vbn jj rb vbd\"],\n  \"donkey\": [\"d-aa1-ng k-iy\", \"nn\"],\n  \"donna\": [\"d-aa1 n-ah\", \"nn\"],\n  \"donnybrook\": [\"d-aa1 n-iy b-r-uh-k\", \"nn\"],\n  \"donor\": [\"d-ow1 n-er\", \"nn\"],\n  \"donut\": [\"d-ow1 n-ah-t\", \"nn\"],\n  \"don't\": [\"d-ow1-n-t\", \"vbp\"],\n  \"doo\": [\"d-uw1\", \"nn vb\"],\n  \"doodad\": [\"d-uw1 d-ae-d\", \"nn\"],\n  \"doom\": [\"d-uw1-m\", \"nn vb\"],\n  \"doomed\": [\"d-uw1-m-d\", \"vbn vbd jj\"],\n  \"doomsayer\": [\"d-uw-m s-ey1 er\", \"nn\"],\n  \"doomsday\": [\"d-uw1-m-z d-ey\", \"nn\"],\n  \"door\": [\"d-ao1-r\", \"nn rb\"],\n  \"doorkeeper\": [\"d-ao1-r k-iy p-er\", \"nn\"],\n  \"doorknob\": [\"d-uw1-r n-aa-b\", \"nn\"],\n  \"doorman\": [\"d-ao1-r m-ae-n\", \"nn\"],\n  \"doorstep\": [\"d-ao1-r s-t-eh-p\", \"nn\"],\n  \"doorway\": [\"d-ao1-r w-ey\", \"nn\"],\n  \"dope\": [\"d-ow1-p\", \"nn\"],\n  \"doped\": [\"d-ow1-p-t\", \"jj\"],\n  \"dorm\": [\"d-ao1-r-m\", \"nn\"],\n  \"dormant\": [\"d-ao1-r m-ah-n-t\", \"jj\"],\n  \"dormitory\": [\"d-ao1-r m-ah t-ao r-iy\", \"nn\"],\n  \"dosage\": [\"d-ow1 s-ah-jh\", \"nn\"],\n  \"dose\": [\"d-ow1-s\", \"nn\"],\n  \"dossier\": [\"d-ao s-y-ey1\", \"nn\"],\n  \"dot\": [\"d-aa1-t\", \"nn vbp vb\"],\n  \"doting\": [\"d-ow1 t-ih-ng\", \"vbg jj\"],\n  \"dotted\": [\"d-aa1 t-ah-d\", \"vbn vbd jj\"],\n  \"double\": [\"d-ah1 b-ah-l\", \"jj vbp nn rb vb\"],\n  \"doubly\": [\"d-ah1 b-l-iy\", \"rb\"],\n  \"doubt\": [\"d-aw1-t\", \"nn vbp rb vb\"],\n  \"doubter\": [\"d-aw1 t-er\", \"nn\"],\n  \"doubtful\": [\"d-aw1-t f-ah-l\", \"jj\"],\n  \"doubting\": [\"d-aw1 t-ih-ng\", \"vbg jj\"],\n  \"doubtless\": [\"d-aw1-t l-ah-s\", \"rb\"],\n  \"dough\": [\"d-ow1\", \"nn\"],\n  \"doughnut\": [\"d-ow1 n-ah-t\", \"nn\"],\n  \"dour\": [\"d-aw1 er\", \"jj\"],\n  \"douse\": [\"d-aw1-s\", \"vb\"],\n  \"dove\": [\"d-ah1-v\", \"nn vbd vbn\"],\n  \"dovetail\": [\"d-ah1-v t-ey-l\", \"vbp vb\"],\n  \"dovish\": [\"d-ow1 v-ih-sh\", \"jj\"],\n  \"dowdy\": [\"d-aw1 d-iy\", \"jj\"],\n  \"dowel\": [\"d-aw1 ah-l\", \"nn\"],\n  \"dower\": [\"d-aw1-r\", \"nn\"],\n  \"down\": [\"d-aw1-n\", \"rb in rbr vbp jj nn rp vb\"],\n  \"downbeat\": [\"d-aw-n b-iy1-t\", \"jj nn\"],\n  \"downcast\": [\"d-aw1-n k-ae-s-t\", \"jj\"],\n  \"downdraft\": [\"d-aw1-n d-r-ae-f-t\", \"nn\"],\n  \"downer\": [\"d-aw1 n-er\", \"nn\"],\n  \"downfall\": [\"d-aw1-n f-ao-l\", \"nn\"],\n  \"downgrade\": [\"d-aw1-n g-r-ey1-d\", \"nn vb\"],\n  \"downhill\": [\"d-aw1-n hh-ih1-l\", \"rb jj\"],\n  \"downpayment\": [\"d-aw-n p-ey1 m-ah-n-t\", \"nn\"],\n  \"downplay\": [\"d-aw1-n p-l-ey\", \"vb\"],\n  \"downpour\": [\"d-aw1-n p-ao-r\", \"nn\"],\n  \"downright\": [\"d-aw1-n r-ay-t\", \"rb jj\"],\n  \"downside\": [\"d-aw1-n s-ay-d\", \"nn jj\"],\n  \"downsize\": [\"d-aw1-n s-ay-z\", \"vb\"],\n  \"downstairs\": [\"d-aw1-n s-t-eh1-r-z\", \"nn rb\"],\n  \"downstream\": [\"d-aw1-n s-t-r-iy1-m\", \"rb jj\"],\n  \"downtime\": [\"d-aw1-n t-ay-m\", \"nn\"],\n  \"downtown\": [\"d-aw1-n t-aw1-n\", \"nn jj rb\"],\n  \"downtrend\": [\"d-aw1-n t-r-eh-n-d\", \"nn\"],\n  \"downtrodden\": [\"d-aw-n t-r-aa1 d-ah-n\", \"jj\"],\n  \"downturn\": [\"d-aw1-n t-er-n\", \"nn\"],\n  \"downward\": [\"d-aw1-n w-er-d\", \"jj rb\"],\n  \"dowry\": [\"d-aw1 r-iy\", \"nn\"],\n  \"doze\": [\"d-ow1-z\", \"vb\"],\n  \"dozen\": [\"d-ah1 z-ah-n\", \"nn\"],\n  \"drab\": [\"d-r-ae1-b\", \"jj\"],\n  \"drachma\": [\"d-r-ae1-k m-ah\", \"nn\"],\n  \"draconian\": [\"d-r-ey k-ow1 n-iy ah-n\", \"jj\"],\n  \"draft\": [\"d-r-ae1-f-t\", \"nn jj vb vbp\"],\n  \"draftee\": [\"d-r-ae1-f t-iy1\", \"nn\"],\n  \"drafter\": [\"d-r-ae1-f t-er\", \"nn\"],\n  \"drafty\": [\"d-r-ae1-f t-iy\", \"jj\"],\n  \"drag\": [\"d-r-ae1-g\", \"nn vbp vb\"],\n  \"dragnet\": [\"d-r-ae1-g n-eh-t\", \"nn\"],\n  \"dragon\": [\"d-r-ae1 g-ah-n\", \"nn\"],\n  \"drain\": [\"d-r-ey1-n\", \"nn vbp vb\"],\n  \"drainage\": [\"d-r-ey1 n-ah-jh\", \"nn\"],\n  \"dram\": [\"d-r-ae1-m\", \"nn\"],\n  \"drama\": [\"d-r-aa1 m-ah\", \"nn\"],\n  \"dramas\": [\"d-r-aa1 m-ah-z\", \"nn\"],\n  \"dramatic\": [\"d-r-ah m-ae1 t-ih-k\", \"jj\"],\n  \"dramatically\": [\"d-r-ah m-ae1 t-ih-k l-iy\", \"rb\"],\n  \"dramatist\": [\"d-r-aa1 m-ah t-ih-s-t\", \"nn\"],\n  \"dramatization\": [\"d-r-ae m-ah t-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"dramatize\": [\"d-r-aa1 m-ah t-ay-z\", \"vb vbp\"],\n  \"drank\": [\"d-r-ae1-ng-k\", \"vbd\"],\n  \"drape\": [\"d-r-ey1-p\", \"nn vb\"],\n  \"draped\": [\"d-r-ey1-p-t\", \"vbd jj vbn\"],\n  \"draper\": [\"d-r-ey1 p-er\", \"nn\"],\n  \"drapery\": [\"d-r-ey1 p-er iy\", \"nn\"],\n  \"drastic\": [\"d-r-ae1 s-t-ih-k\", \"jj rb\"],\n  \"drastically\": [\"d-r-ae1 s-t-ih-k l-iy\", \"rb\"],\n  \"draught\": [\"d-r-ae1-f-t\", \"nn\"],\n  \"draughts\": [\"d-r-ae1-f-t-s\", \"nn\"],\n  \"draw\": [\"d-r-ao1\", \"vb vbp nn\"],\n  \"drawback\": [\"d-r-ao1 b-ae-k\", \"nn\"],\n  \"drawbridge\": [\"d-r-ao1 b-r-ih-jh\", \"nn\"],\n  \"drawdown\": [\"d-r-ao1 d-aw-n\", \"nn\"],\n  \"drawer\": [\"d-r-ao1-r\", \"nn\"],\n  \"drawing\": [\"d-r-ao1 ih-ng\", \"vbg jj nn\"],\n  \"drawl\": [\"d-r-ao1-l\", \"nn vb\"],\n  \"drawn\": [\"d-r-ao1-n\", \"vbn jj\"],\n  \"dread\": [\"d-r-eh1-d\", \"nn jj vb\"],\n  \"dreaded\": [\"d-r-eh1 d-ih-d\", \"vbn vbd jj\"],\n  \"dreadful\": [\"d-r-eh1-d f-ah-l\", \"jj nn\"],\n  \"dreadfully\": [\"d-r-eh1-d f-ah l-iy\", \"rb\"],\n  \"dream\": [\"d-r-iy1-m\", \"nn vb vbp\"],\n  \"dreamer\": [\"d-r-iy1 m-er\", \"nn\"],\n  \"dreamlike\": [\"d-r-iy1-m l-ay-k\", \"jj\"],\n  \"dreamt\": [\"d-r-eh1-m-t\", \"vbd vbn\"],\n  \"dreamy\": [\"d-r-iy1 m-iy\", \"jj\"],\n  \"dreariness\": [\"d-r-iy1 r-iy n-ah-s\", \"nn\"],\n  \"dreary\": [\"d-r-ih1 r-iy\", \"jj\"],\n  \"dredge\": [\"d-r-eh1-jh\", \"vb\"],\n  \"dreg\": [\"d-r-eh1-g\", \"nn\"],\n  \"drenching\": [\"d-r-eh1-n ch-ih-ng\", \"nn\"],\n  \"dress\": [\"d-r-eh1-s\", \"nn vbp vb\"],\n  \"dressed\": [\"d-r-eh1-s-t\", \"vbn jj vbd\"],\n  \"dresser\": [\"d-r-eh1 s-er\", \"nn\"],\n  \"dressing\": [\"d-r-eh1 s-ih-ng\", \"nn vbg jj\"],\n  \"dressmaking\": [\"d-r-eh1-s m-ey k-ih-ng\", \"nn\"],\n  \"dressy\": [\"d-r-eh1 s-iy\", \"jj\"],\n  \"drew\": [\"d-r-uw1\", \"vbd\"],\n  \"dribble\": [\"d-r-ih1 b-ah-l\", \"nn vb\"],\n  \"dried\": [\"d-r-ay1-d\", \"vbn vbd jj\"],\n  \"drier\": [\"d-r-ay1 er\", \"nn jjr rbr\"],\n  \"drift\": [\"d-r-ih1-f-t\", \"nn vbp vb\"],\n  \"drifter\": [\"d-r-ih1-f t-er\", \"nn\"],\n  \"drifting\": [\"d-r-ih1-f t-ih-ng\", \"vbg jj nn\"],\n  \"driftnet\": [\"d-r-ih1-f-t n-eh-t\", \"nn\"],\n  \"driftwood\": [\"d-r-ih1-f-t w-uh-d\", \"nn\"],\n  \"drill\": [\"d-r-ih1-l\", \"nn vb\"],\n  \"driller\": [\"d-r-ih1 l-er\", \"nn\"],\n  \"drilling\": [\"d-r-ih1 l-ih-ng\", \"nn jj vbg\"],\n  \"drink\": [\"d-r-ih1-ng-k\", \"nn vbp vb\"],\n  \"drinker\": [\"d-r-ih1-ng k-er\", \"nn\"],\n  \"drinking\": [\"d-r-ih1-ng k-ih-ng\", \"nn jj vbg\"],\n  \"drip\": [\"d-r-ih1-p\", \"nn vb\"],\n  \"drive\": [\"d-r-ay1-v\", \"nn vbp vb\"],\n  \"driven\": [\"d-r-ih1 v-ah-n\", \"vbn jj\"],\n  \"driver\": [\"d-r-ay1 v-er\", \"nn\"],\n  \"driveway\": [\"d-r-ay1-v w-ey\", \"nn\"],\n  \"driving\": [\"d-r-ay1 v-ih-ng\", \"vbg jj nn\"],\n  \"drizzle\": [\"d-r-ih1 z-ah-l\", \"nn vb\"],\n  \"drizzly\": [\"d-r-ih1-z l-iy\", \"jj\"],\n  \"drone\": [\"d-r-ow1-n\", \"nn jj\"],\n  \"drool\": [\"d-r-uw1-l\", \"vb\"],\n  \"droop\": [\"d-r-uw1-p\", \"vb vbp nn\"],\n  \"drop\": [\"d-r-aa1-p\", \"nn jj vb vbp\"],\n  \"droplet\": [\"d-r-aa1 p-l-ah-t\", \"nn\"],\n  \"dropoff\": [\"d-r-aa1 p-ao-f\", \"nn\"],\n  \"dropout\": [\"d-r-aa1-p aw-t\", \"nn\"],\n  \"dropper\": [\"d-r-aa1 p-er\", \"nn\"],\n  \"dross\": [\"d-r-ao1-s\", \"nn\"],\n  \"drought\": [\"d-r-aw1-t\", \"nn\"],\n  \"drove\": [\"d-r-ow1-v\", \"vbd nn\"],\n  \"drover\": [\"d-r-ow1 v-er\", \"nn\"],\n  \"drown\": [\"d-r-aw1-n\", \"vb vbp\"],\n  \"drowned\": [\"d-r-aw1-n-d\", \"vbn jj vbd\"],\n  \"drowsy\": [\"d-r-aw1 z-iy\", \"jj\"],\n  \"drub\": [\"d-r-ah1-b\", \"vb\"],\n  \"drubbing\": [\"d-r-ah1 b-ih-ng\", \"nn\"],\n  \"drudgery\": [\"d-r-ah1 jh-er iy\", \"nn\"],\n  \"drug\": [\"d-r-ah1-g\", \"nn\"],\n  \"drugged\": [\"d-r-ah1-g-d\", \"vbn jj\"],\n  \"druggist\": [\"d-r-ah1 g-ih-s-t\", \"nn\"],\n  \"drugstore\": [\"d-r-ah1-g s-t-ao-r\", \"nn\"],\n  \"drum\": [\"d-r-ah1-m\", \"vb nn\"],\n  \"drumbeat\": [\"d-r-ah1-m b-iy-t\", \"nn\"],\n  \"drummer\": [\"d-r-ah1 m-er\", \"nn\"],\n  \"drunk\": [\"d-r-ah1-ng-k\", \"jj nn vbn\"],\n  \"drunkard\": [\"d-r-ah1-ng k-er-d\", \"nn\"],\n  \"drunken\": [\"d-r-ah1-ng k-ah-n\", \"jj\"],\n  \"drunkenness\": [\"d-r-ah1-ng k-ah-n n-ah-s\", \"nn\"],\n  \"dry\": [\"d-r-ay1\", \"jj vb vbp\"],\n  \"dryer\": [\"d-r-ay1 er\", \"nn\"],\n  \"dryly\": [\"d-r-ay1 l-iy\", \"rb\"],\n  \"dryness\": [\"d-r-ay1 n-ah-s\", \"nn\"],\n  \"dual\": [\"d-uw1 ah-l\", \"jj\"],\n  \"dualism\": [\"d-uw1 ah l-ih z-ah-m\", \"nn\"],\n  \"dub\": [\"d-ah1-b\", \"vb\"],\n  \"dubious\": [\"d-uw1 b-iy ah-s\", \"jj\"],\n  \"duck\": [\"d-ah1-k\", \"nn vb\"],\n  \"duckling\": [\"d-ah1 k-l-ih-ng\", \"nn\"],\n  \"duct\": [\"d-ah1-k-t\", \"nn\"],\n  \"dud\": [\"d-ah1-d\", \"nn\"],\n  \"dudgeon\": [\"d-ah1 jh-ah-n\", \"nn\"],\n  \"due\": [\"d-uw1\", \"jj nn \"],\n  \"duel\": [\"d-uw1 ah-l\", \"nn vb\"],\n  \"duet\": [\"d-uw eh1-t\", \"nn\"],\n  \"duffel\": [\"d-ah1 f-ah-l\", \"nn\"],\n  \"duffer\": [\"d-ah1 f-er\", \"nn\"],\n  \"dug\": [\"d-ah1-g\", \"vbd vbn\"],\n  \"dugout\": [\"d-ah1-g aw-t\", \"nn\"],\n  \"duke\": [\"d-uw1-k\", \"nn\"],\n  \"dull\": [\"d-ah1-l\", \"jj vb\"],\n  \"duller\": [\"d-ah1 l-er\", \"jjr rbr\"],\n  \"dullest\": [\"d-ah1 l-ah-s-t\", \"jjs\"],\n  \"dullness\": [\"d-ah1-l n-ah-s\", \"nn\"],\n  \"duly\": [\"d-uw1 l-iy\", \"rb\"],\n  \"dumb\": [\"d-ah1-m\", \"jj\"],\n  \"dumbbell\": [\"d-ah1-m b-eh-l\", \"nn\"],\n  \"dumber\": [\"d-ah1 m-er\", \"jjr\"],\n  \"dumbest\": [\"d-ah1 m-ah-s-t\", \"jjs\"],\n  \"dumbfounded\": [\"d-ah1-m f-aw-n d-ih-d\", \"jj vbn\"],\n  \"dummy\": [\"d-ah1 m-iy\", \"jj nn\"],\n  \"dump\": [\"d-ah1-m-p\", \"vb vbp nn\"],\n  \"dumpster\": [\"d-ah1-m-p s-t-er\", \"nn\"],\n  \"dumpy\": [\"d-ah1-m p-iy\", \"jj\"],\n  \"dun\": [\"d-ah1-n\", \"nn\"],\n  \"dune\": [\"d-uw1-n\", \"nn\"],\n  \"dung\": [\"d-ah1-ng\", \"nn\"],\n  \"dungeon\": [\"d-ah1-n jh-ah-n\", \"nn\"],\n  \"dunk\": [\"d-ah1-ng-k\", \"nn vb\"],\n  \"duo\": [\"d-uw1 ow\", \"nn\"],\n  \"duodenal\": [\"d-uw1 ah d-iy1 n-ah-l\", \"jj\"],\n  \"duopoly\": [\"d-uw1 ow p-aa l-iy\", \"rb\"],\n  \"dupe\": [\"d-uw1-p\", \"vb\"],\n  \"duplex\": [\"d-uw1 p-l-eh-k-s\", \"nn jj\"],\n  \"duplicate\": [\"d-uw1 p-l-ah k-ah-t\", \"vb jj\"],\n  \"duplication\": [\"d-y-uw p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"duplicative\": [\"d-uw p-l-ih1 k-ah t-ih-v\", \"jj\"],\n  \"duplicity\": [\"d-uw p-l-ih1 s-ih t-iy\", \"nn\"],\n  \"durability\": [\"d-er ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"durable\": [\"d-uh1 r-ah b-ah-l\", \"jj\"],\n  \"duration\": [\"d-uh1 r-ey1 sh-ah-n\", \"nn\"],\n  \"duress\": [\"d-uh1 r-eh-s\", \"nn\"],\n  \"during\": [\"d-uh1 r-ih-ng\", \"in\"],\n  \"durn\": [\"d-er1-n\", \"jj\"],\n  \"dusk\": [\"d-ah1-s-k\", \"nn\"],\n  \"dust\": [\"d-ah1-s-t\", \"nn vb vbp\"],\n  \"dusty\": [\"d-ah1 s-t-iy\", \"jj\"],\n  \"dutiful\": [\"d-uw1 t-iy f-ah-l\", \"jj\"],\n  \"dutifully\": [\"d-uw1 t-iy f-ah l-iy\", \"rb\"],\n  \"duty\": [\"d-uw1 t-iy\", \"nn\"],\n  \"dwarf\": [\"d-w-ao1-r-f\", \"nn vbp vb\"],\n  \"dwell\": [\"d-w-eh1-l\", \"vbp vb\"],\n  \"dweller\": [\"d-w-eh1 l-er\", \"nn\"],\n  \"dwelling\": [\"d-w-eh1 l-ih-ng\", \"nn vbg\"],\n  \"dwelt\": [\"d-w-eh1-l-t\", \"vbd\"],\n  \"dwindle\": [\"d-w-ih1-n d-ah-l\", \"vb\"],\n  \"dye\": [\"d-ay1\", \"nn vb\"],\n  \"dyeing\": [\"d-ay1 ih-ng\", \"nn\"],\n  \"dying\": [\"d-ay1 ih-ng\", \"vbg jj nn\"],\n  \"dyke\": [\"d-ay1-k\", \"nn\"],\n  \"dynamic\": [\"d-ay n-ae1 m-ih-k\", \"jj nn\"],\n  \"dynamism\": [\"d-ay1 n-ah m-ih z-ah-m\", \"nn\"],\n  \"dynamite\": [\"d-ay1 n-ah m-ay-t\", \"nn jj\"],\n  \"dynamo\": [\"d-ay1 n-ah m-ow\", \"nn\"],\n  \"dynastic\": [\"d-ay n-ae1 s-t-ih-k\", \"jj\"],\n  \"dynasty\": [\"d-ay1 n-ah s-t-iy\", \"nn\"],\n  \"dysentery\": [\"d-ih1-s ah-n t-eh r-iy\", \"nn\"],\n  \"dysfunction\": [\"d-ih-s f-ah1-ng-k sh-ah-n\", \"nn\"],\n  \"dyslexia\": [\"d-ih-s l-eh1-k s-iy ah\", \"nn\"],\n  \"dysplasia\": [\"d-ih s-p-l-ey1 zh-ah\", \"nn\"],\n  \"dystrophy\": [\"d-ih1-s t-r-ah f-iy\", \"nn\"],\n  \"each\": [\"iy1-ch\", \"dt\"],\n  \"eager\": [\"iy1 g-er\", \"jj\"],\n  \"eagerly\": [\"iy1 g-er l-iy\", \"rb\"],\n  \"eagerness\": [\"iy1 g-er n-ah-s\", \"nn\"],\n  \"eagle\": [\"iy1 g-ah-l\", \"nn\"],\n  \"ear\": [\"ih1-r\", \"nn\"],\n  \"eared\": [\"ih1-r-d\", \"jj\"],\n  \"earful\": [\"iy1-r f-ah-l\", \"nn\"],\n  \"earl\": [\"er1-l\", \"nn\"],\n  \"earlier\": [\"er1 l-iy er\", \"rbr jjr jj nn rb\"],\n  \"earliest\": [\"er1 l-iy ah-s-t\", \"jjs rbs\"],\n  \"early\": [\"er1 l-iy\", \"jj rb\"],\n  \"earmark\": [\"ih1-r m-aa-r-k\", \"vb\"],\n  \"earmarked\": [\"ih1-r m-aa-r-k-t\", \"vbn vbd jj\"],\n  \"earn\": [\"er1-n\", \"vb vbp\"],\n  \"earned\": [\"er1-n-d\", \"vbd jj vbn\"],\n  \"earner\": [\"er1 n-er\", \"nn\"],\n  \"earnest\": [\"er1 n-ih-s-t\", \"nn jj\"],\n  \"earnestly\": [\"er1 n-ah-s-t l-iy\", \"rb\"],\n  \"earnestness\": [\"er1 n-ah-s-t n-ah-s\", \"nn\"],\n  \"earphone\": [\"ih1-r f-ow-n\", \"nn\"],\n  \"earring\": [\"ih1 r-ih-ng\", \"nn\"],\n  \"earth\": [\"er1-th\", \"nn\"],\n  \"earthbound\": [\"er1-th b-aw-n-d\", \"jj\"],\n  \"earthenware\": [\"er1 th-ah-n w-eh-r\", \"nn\"],\n  \"earthling\": [\"er1-th l-ih-ng\", \"nn\"],\n  \"earthly\": [\"er1-th l-iy\", \"jj\"],\n  \"earthmoving\": [\"er1-th m-uw v-ih-ng\", \"jj nn\"],\n  \"earthquake\": [\"er1-th k-w-ey-k\", \"nn\"],\n  \"earthshaking\": [\"er1-th sh-ey k-ih-ng\", \"jj\"],\n  \"earthworm\": [\"er1-th w-er-m\", \"nn\"],\n  \"earthy\": [\"er1 th-iy\", \"jj\"],\n  \"ease\": [\"iy1-z\", \"vb nn vbp\"],\n  \"easel\": [\"iy1 z-ah-l\", \"nn\"],\n  \"easement\": [\"iy1-z m-ah-n-t\", \"nn\"],\n  \"easier\": [\"iy1 z-iy er\", \"jjr rbr rb\"],\n  \"easiest\": [\"iy1 z-iy ah-s-t\", \"jjs\"],\n  \"easily\": [\"iy1 z-ah l-iy\", \"rb\"],\n  \"easing\": [\"iy1 z-ih-ng\", \"vbg jj nn\"],\n  \"east\": [\"iy1-s-t\", \"jj nn rb\"],\n  \"eastern\": [\"iy1 s-t-er-n\", \"jj\"],\n  \"eastward\": [\"iy1-s-t w-er-d\", \"rb\"],\n  \"easy\": [\"iy1 z-iy\", \"jj rb\"],\n  \"easygoing\": [\"iy1 z-iy g-ow1 ih-ng\", \"jj\"],\n  \"eat\": [\"iy1-t\", \"vb vbp\"],\n  \"eaten\": [\"iy1 t-ah-n\", \"vbn\"],\n  \"eater\": [\"iy1 t-er\", \"nn\"],\n  \"eatery\": [\"iy1 t-er iy\", \"nn\"],\n  \"eating\": [\"iy1 t-ih-ng\", \"vbg jj nn\"],\n  \"eave\": [\"iy1-v\", \"nn\"],\n  \"eavesdrop\": [\"iy1-v-z d-r-aa-p\", \"vb\"],\n  \"ebb\": [\"eh1-b\", \"nn vb\"],\n  \"ebony\": [\"eh1 b-ah n-iy\", \"nn jj\"],\n  \"ebullient\": [\"ih b-ah1-l y-ah-n-t\", \"jj\"],\n  \"eccentric\": [\"ih-k s-eh1-n t-r-ih-k\", \"jj nn\"],\n  \"eccentricity\": [\"eh-k s-ah-n t-r-ih1 s-ah t-iy\", \"nn\"],\n  \"ecclesiastical\": [\"ih k-l-iy z-iy ae1 s-t-ih k-ah-l\", \"jj\"],\n  \"echelon\": [\"eh1 sh-ah l-aa-n\", \"nn\"],\n  \"echo\": [\"eh1 k-ow\", \"nn vbp vb\"],\n  \"eclectic\": [\"ih k-l-eh1-k t-ih-k\", \"jj nn\"],\n  \"eclipse\": [\"ih k-l-ih1-p-s\", \"vb nn vbp\"],\n  \"ecliptic\": [\"ih k-l-ih1-p t-ih-k\", \"nn jj\"],\n  \"ecological\": [\"iy k-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"ecologically\": [\"iy k-ah l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"ecologist\": [\"ih k-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"ecology\": [\"ih k-aa1 l-ah jh-iy\", \"nn\"],\n  \"economic\": [\"eh k-ah n-aa1 m-ih-k\", \"jj\"],\n  \"economical\": [\"eh k-ah n-aa1 m-ih k-ah-l\", \"jj\"],\n  \"economically\": [\"eh k-ah n-aa1 m-ih-k l-iy\", \"rb\"],\n  \"economics\": [\"eh k-ah n-aa1 m-ih-k-s\", \"nn\"],\n  \"economist\": [\"ih k-aa1 n-ah m-ih-s-t\", \"nn\"],\n  \"economize\": [\"ih k-aa1 n-ah m-ay-z\", \"vb\"],\n  \"economy\": [\"ih k-aa1 n-ah m-iy\", \"nn\"],\n  \"ecstasy\": [\"eh1-k s-t-ah s-iy\", \"nn\"],\n  \"ecstatic\": [\"eh-k s-t-ae1 t-ih-k\", \"jj nn\"],\n  \"ecstatically\": [\"eh-k s-t-ae1 t-ih-k l-iy\", \"rb\"],\n  \"ecumenical\": [\"eh k-y-uw m-eh1 n-ih k-ah-l\", \"jj\"],\n  \"edema\": [\"ih d-iy1 m-ah\", \"nn\"],\n  \"edge\": [\"eh1-jh\", \"nn vb\"],\n  \"edged\": [\"eh1-jh-d\", \"vbd jj vbn\"],\n  \"edginess\": [\"eh1 jh-iy n-ah-s\", \"nn\"],\n  \"edgy\": [\"eh1 jh-iy\", \"jj\"],\n  \"edible\": [\"eh1 d-ah b-ah-l\", \"jj\"],\n  \"edict\": [\"iy1 d-ih-k-t\", \"nn\"],\n  \"edifice\": [\"eh1 d-ah f-ah-s\", \"nn\"],\n  \"edifying\": [\"eh1 d-ah f-ay ih-ng\", \"jj\"],\n  \"edit\": [\"eh1 d-ah-t\", \"vb\"],\n  \"edition\": [\"ah d-ih1 sh-ah-n\", \"nn\"],\n  \"editor\": [\"eh1 d-ah t-er\", \"nn\"],\n  \"editorial\": [\"eh d-ah t-ao1 r-iy ah-l\", \"nn jj\"],\n  \"editorialist\": [\"eh d-ah t-ao1 r-iy ah l-ih-s-t\", \"nn\"],\n  \"editorialize\": [\"eh d-ah t-ao1 r-iy ah l-ay-z\", \"vb\"],\n  \"editorially\": [\"eh d-ah t-ao1 r-iy ah l-iy\", \"rb\"],\n  \"editorship\": [\"eh1 d-ah t-er sh-ih-p\", \"nn\"],\n  \"educate\": [\"eh1 jh-ah k-ey-t\", \"vb\"],\n  \"educated\": [\"eh1 jh-ah k-ey t-ah-d\", \"vbn jj\"],\n  \"education\": [\"eh jh-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"educational\": [\"eh jh-ah k-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"educator\": [\"eh1 jh-ah k-ey t-er\", \"nn\"],\n  \"eel\": [\"iy1-l\", \"nn\"],\n  \"eerie\": [\"ih1 r-iy\", \"jj\"],\n  \"eerily\": [\"ih1 r-ah l-iy\", \"rb\"],\n  \"effect\": [\"ih f-eh1-k-t\", \"nn jj vb vbp\"],\n  \"effective\": [\"ih f-eh1-k t-ih-v\", \"jj vbn nn\"],\n  \"effectively\": [\"ih f-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"effectiveness\": [\"ih f-eh1-k t-ih-v n-ah-s\", \"nn\"],\n  \"effete\": [\"eh f-iy1-t\", \"jj\"],\n  \"efficacious\": [\"eh f-ah k-ey1 sh-ah-s\", \"jj\"],\n  \"efficacy\": [\"eh1 f-ih k-ae s-iy\", \"nn\"],\n  \"efficiency\": [\"ih f-ih1 sh-ah-n s-iy\", \"nn\"],\n  \"efficient\": [\"ih f-ih1 sh-ah-n-t\", \"jj\"],\n  \"efficiently\": [\"ih f-ih1 sh-ah-n-t l-iy\", \"rb\"],\n  \"effigy\": [\"eh1 f-ih jh-iy\", \"nn\"],\n  \"effluent\": [\"eh1 f-l-uw ah-n-t\", \"nn jj\"],\n  \"effort\": [\"eh1 f-er-t\", \"nn\"],\n  \"effortless\": [\"eh1 f-er-t l-ah-s\", \"jj\"],\n  \"effortlessly\": [\"eh1 f-er-t l-ah-s l-iy\", \"rb\"],\n  \"effrontery\": [\"ih f-r-ah1-n t-er iy\", \"nn\"],\n  \"effusive\": [\"eh1 f-y-uw s-ih-v\", \"jj\"],\n  \"egalitarian\": [\"ih g-ae l-ah t-eh1 r-iy ah-n\", \"jj\"],\n  \"egalitarianism\": [\"iy g-ae l-ah t-eh1 r-iy ah n-ih z-ah-m\", \"nn\"],\n  \"egg\": [\"eh1-g\", \"nn vb\"],\n  \"egghead\": [\"eh1-g hh-eh-d\", \"nn\"],\n  \"eggplant\": [\"eh1-g p-l-ae-n-t\", \"nn\"],\n  \"eggshell\": [\"eh1-g sh-eh-l\", \"jj\"],\n  \"ego\": [\"iy1 g-ow\", \"nn\"],\n  \"egocentric\": [\"iy g-ow s-eh1-n t-r-ih-k\", \"jj\"],\n  \"egotism\": [\"iy1 g-ah t-ih z-ah-m\", \"nn\"],\n  \"egotist\": [\"iy1 g-ah t-ih-s-t\", \"nn\"],\n  \"egotistical\": [\"iy g-ah t-ih1 s-t-ih k-ah-l\", \"jj\"],\n  \"egregious\": [\"ih g-r-iy1 jh-ah-s\", \"jj\"],\n  \"egregiously\": [\"ih g-r-iy1 jh-ah-s l-iy\", \"rb\"],\n  \"eight\": [\"ey1-t\", \"cd\"],\n  \"eighth\": [\"ey1-t-th\", \"jj nn\"],\n  \"eighty\": [\"ey1 t-iy\", \"nn\"],\n  \"either\": [\"iy1 dh-er\", \"dt cc in rb rbr\"],\n  \"eject\": [\"ih jh-eh1-k-t\", \"vb\"],\n  \"ejection\": [\"ih jh-eh1-k sh-ah-n\", \"nn\"],\n  \"eke\": [\"iy1-k\", \"vb\"],\n  \"elaborate\": [\"ih l-ae1 b-r-ah-t\", \"vb jj\"],\n  \"elaborately\": [\"ih l-ae1 b-r-ah-t l-iy\", \"rb\"],\n  \"elaboration\": [\"ih l-ae b-er ey1 sh-ah-n\", \"nn\"],\n  \"elapse\": [\"ih l-ae1-p-s\", \"vb\"],\n  \"elastic\": [\"ih l-ae1 s-t-ih-k\", \"jj nn\"],\n  \"elasticity\": [\"iy l-ae s-t-ih1 s-ah t-iy\", \"nn\"],\n  \"elate\": [\"ih-l-ey1-t\", \"vb\"],\n  \"elated\": [\"ih l-ey1 t-ah-d\", \"jj vbn\"],\n  \"elation\": [\"ih l-ey1 sh-ah-n\", \"nn\"],\n  \"elbow\": [\"eh1-l b-ow\", \"nn vb\"],\n  \"elder\": [\"eh1-l d-er\", \"jjr jj nn\"],\n  \"elderly\": [\"eh1-l d-er l-iy\", \"jj nn\"],\n  \"eldest\": [\"eh1-l d-ah-s-t\", \"jjs\"],\n  \"elect\": [\"ih l-eh1-k-t\", \"vb vbp\"],\n  \"elected\": [\"ih l-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"election\": [\"ih l-eh1-k sh-ah-n\", \"nn\"],\n  \"elective\": [\"ih l-eh1-k t-ih-v\", \"jj\"],\n  \"elector\": [\"ih l-eh1-k t-er\", \"nn\"],\n  \"electoral\": [\"ih l-eh1-k t-er ah-l\", \"jj\"],\n  \"electorate\": [\"ih l-eh1-k t-er ah-t\", \"nn\"],\n  \"electric\": [\"ih l-eh1-k t-r-ih-k\", \"jj nn\"],\n  \"electrical\": [\"ih l-eh1-k t-r-ih k-ah-l\", \"jj\"],\n  \"electrically\": [\"ih l-eh1-k t-r-ih k-ah l-iy\", \"rb\"],\n  \"electrician\": [\"ih l-eh-k t-r-ih1 sh-ah-n\", \"nn\"],\n  \"electricity\": [\"ih l-eh-k t-r-ih1 s-ah t-iy\", \"nn\"],\n  \"electrified\": [\"ih l-eh1-k t-r-ah f-ay-d\", \"vbn\"],\n  \"electrify\": [\"ih-l-eh1-k-t-r-ah-f-ay\", \"vb\"],\n  \"electrifying\": [\"ih l-eh1-k t-r-ah f-ay ih-ng\", \"jj\"],\n  \"electrocardiogram\": [\"ih l-eh-k t-r-ow k-aa1-r d-iy ah g-r-ae-m\", \"nn\"],\n  \"electrode\": [\"ih l-eh1-k t-r-ow-d\", \"nn\"],\n  \"electrodynamics\": [\"ih l-eh-k t-r-ow d-ay n-ae1 m-ih-k-s\", \"nn\"],\n  \"electrolysis\": [\"ih l-eh-k t-r-aa1 l-ah s-ah-s\", \"nn\"],\n  \"electrolytic\": [\"ih l-eh-k t-r-ah l-ih1 t-ih-k\", \"jj\"],\n  \"electromagnet\": [\"ih l-eh-k t-r-ow m-ae1-g n-ah-t\", \"nn\"],\n  \"electromagnetism\": [\"ih l-eh-k t-r-ow m-ae1-g n-ah t-ih z-ah-m\", \"nn\"],\n  \"electromechanical\": [\"ih l-eh-k t-r-ow m-ah k-ae1 n-ih k-ah-l\", \"jj\"],\n  \"electron\": [\"ih l-eh1-k t-r-aa-n\", \"nn\"],\n  \"electronic\": [\"ih l-eh-k t-r-aa1 n-ih-k\", \"jj\"],\n  \"electronically\": [\"ih l-eh-k t-r-aa1 n-ih k-ah l-iy\", \"rb\"],\n  \"electronics\": [\"ih l-eh-k t-r-aa1 n-ih-k-s\", \"nn\"],\n  \"electroplating\": [\"ih l-eh1-k t-r-ah p-l-ey t-ih-ng\", \"nn\"],\n  \"electroshock\": [\"ih l-eh1-k t-r-ow sh-aa-k\", \"nn\"],\n  \"electrostatic\": [\"ih l-eh-k t-r-ow s-t-ae1 t-ih-k\", \"jj\"],\n  \"elegance\": [\"eh1 l-ah g-ah-n-s\", \"nn\"],\n  \"elegant\": [\"eh1 l-ah g-ah-n-t\", \"jj\"],\n  \"elegantly\": [\"eh1 l-ih g-ah-n-t l-iy\", \"rb\"],\n  \"element\": [\"eh1 l-ah m-ah-n-t\", \"nn\"],\n  \"elemental\": [\"eh l-ah m-eh1-n t-ah-l\", \"jj nn\"],\n  \"elementary\": [\"eh l-ah m-eh1-n t-r-iy\", \"jj\"],\n  \"elephant\": [\"eh1 l-ah f-ah-n-t\", \"nn\"],\n  \"elephantine\": [\"eh l-ah f-ae1-n t-iy-n\", \"jj\"],\n  \"elevate\": [\"eh1 l-ah v-ey-t\", \"vb vbp\"],\n  \"elevated\": [\"eh1 l-ah v-ey t-ih-d\", \"vbn vbd jj\"],\n  \"elevation\": [\"eh l-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"elevator\": [\"eh1 l-ah v-ey t-er\", \"nn\"],\n  \"eleven\": [\"ih l-eh1 v-ah-n\", \"cd\"],\n  \"eleventh\": [\"ih l-eh1 v-ah-n-th\", \"jj\"],\n  \"elfin\": [\"eh1-l f-ih-n\", \"jj\"],\n  \"elicit\": [\"ih l-ih1 s-ih-t\", \"vb\"],\n  \"eligibility\": [\"eh l-ih jh-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"eligible\": [\"eh1 l-ah jh-ah b-ah-l\", \"jj nn\"],\n  \"eliminate\": [\"ih l-ih1 m-ah n-ey-t\", \"vb vbp\"],\n  \"elimination\": [\"ih l-ih m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"elite\": [\"ih l-iy1-t\", \"nn jj\"],\n  \"elitist\": [\"ey l-iy1 t-ih-s-t\", \"jj\"],\n  \"elixir\": [\"ih l-ih1-k s-er\", \"nn\"],\n  \"elk\": [\"eh1-l-k\", \"nn\"],\n  \"ellipsoid\": [\"ih l-ih1-p s-oy-d\", \"nn\"],\n  \"elliptical\": [\"ih l-ih1-p t-ih k-ah-l\", \"jj\"],\n  \"elm\": [\"eh1-l-m\", \"nn\"],\n  \"elongate\": [\"ih l-ao1-ng g-ey-t\", \"vb\"],\n  \"elongated\": [\"ih l-ao1-ng g-ey t-ah-d\", \"vbn jj\"],\n  \"elongation\": [\"iy l-ao-ng g-ey1 sh-ah-n\", \"nn\"],\n  \"eloquence\": [\"eh1 l-ah k-w-ah-n-s\", \"nn\"],\n  \"eloquent\": [\"eh1 l-ah k-w-ah-n-t\", \"jj\"],\n  \"eloquently\": [\"eh1 l-ah k-w-ah-n-t l-iy\", \"rb\"],\n  \"else\": [\"eh1-l-s\", \"rb jj nn\"],\n  \"elsewhere\": [\"eh1-l s-w-eh-r\", \"rb nn\"],\n  \"elucidate\": [\"ih-l-uw1-s-ah-d-ey-t\", \"vb\"],\n  \"elude\": [\"ih-l-uw1-d\", \"vb\"],\n  \"elusive\": [\"ih l-uw1 s-ih-v\", \"jj\"],\n  \"elusiveness\": [\"ih l-uw1 s-ih-v n-ah-s\", \"nn\"],\n  \"emaciate\": [\"ih-m-ey1-sh-iy-ey-t\", \"vb\"],\n  \"emaciated\": [\"ih m-ey1 sh-iy ey t-ih-d\", \"vbn jj\"],\n  \"emanate\": [\"eh1-m-ah-n-ey-t\", \"vb\"],\n  \"emanation\": [\"eh m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"emancipate\": [\"ih m-ae1-n s-ah p-ey-t\", \"vb\"],\n  \"emancipated\": [\"ih m-ae1-n s-ah p-ey t-ih-d\", \"vbn jj\"],\n  \"emancipation\": [\"ih m-ae-n s-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"emasculate\": [\"ah m-ae1-s k-y-uw l-ih-t\", \"vb\"],\n  \"embankment\": [\"eh-m b-ae1-ng-k m-ah-n-t\", \"nn\"],\n  \"embargo\": [\"eh-m b-aa1-r g-ow\", \"nn vb\"],\n  \"embargoed\": [\"ih-m b-aa1-r g-ow-d\", \"jj vbd vbn\"],\n  \"embark\": [\"eh-m b-aa1-r-k\", \"vb vbp\"],\n  \"embarrass\": [\"ih-m b-eh1 r-ah-s\", \"vb\"],\n  \"embarrassed\": [\"ih-m b-eh1 r-ah-s-t\", \"vbn vbd jj\"],\n  \"embarrassing\": [\"ih-m b-eh1 r-ah s-ih-ng\", \"jj vbg\"],\n  \"embarrassingly\": [\"ih-m b-eh1 r-ah s-ih-ng l-iy\", \"rb\"],\n  \"embarrassment\": [\"ih-m b-eh1 r-ah-s m-ah-n-t\", \"nn\"],\n  \"embassy\": [\"eh1-m b-ah s-iy\", \"nn\"],\n  \"embattle\": [\"eh-m-b-ae1-t-ah-l\", \"vb\"],\n  \"embattled\": [\"eh-m b-ae1 t-ah-l-d\", \"jj vbn\"],\n  \"embed\": [\"ih-m-b-eh1-d\", \"vb\"],\n  \"embedded\": [\"eh-m b-eh1 d-ih-d\", \"vbn jj\"],\n  \"embellish\": [\"ih-m b-eh1 l-ih-sh\", \"vb\"],\n  \"embezzle\": [\"ih-m b-eh1 z-ah-l\", \"vb\"],\n  \"embezzlement\": [\"eh-m b-eh1 z-ah-l m-ah-n-t\", \"nn\"],\n  \"embezzler\": [\"ih-m b-eh1 z-ah-l er\", \"nn\"],\n  \"embitter\": [\"eh-m-b-ih1-t-er\", \"vb\"],\n  \"embittered\": [\"eh-m b-ih1 t-er-d\", \"vbn jj\"],\n  \"emblazon\": [\"eh-m-b-l-ey1-z-ah-n\", \"vb\"],\n  \"emblem\": [\"eh1-m b-l-ah-m\", \"nn\"],\n  \"emblematic\": [\"eh-m b-l-ah m-ae1 t-ih-k\", \"jj\"],\n  \"embodied\": [\"ih-m b-aa1 d-iy-d\", \"vbn jj vbd\"],\n  \"embodiment\": [\"eh-m b-aa1 d-iy m-ah-n-t\", \"nn\"],\n  \"embody\": [\"ih-m b-aa1 d-iy\", \"vb vbp\"],\n  \"embolden\": [\"eh-m-b-ow1-l-d-ah-n\", \"vb\"],\n  \"embolism\": [\"eh1-m b-ow l-ih z-ah-m\", \"nn\"],\n  \"emboss\": [\"ih-m-b-ao1-s\", \"vb\"],\n  \"embrace\": [\"eh-m b-r-ey1-s\", \"vb vbp nn\"],\n  \"embroider\": [\"ih-m b-r-oy1 d-er\", \"vbp vb\"],\n  \"embroidery\": [\"eh-m b-r-oy1 d-er iy\", \"nn\"],\n  \"embroil\": [\"eh-m-b-r-oy1-l\", \"vb\"],\n  \"embryo\": [\"eh1-m b-r-iy ow\", \"nn\"],\n  \"embryonic\": [\"eh-m b-r-iy aa1 n-ih-k\", \"jj\"],\n  \"emcee\": [\"eh1-m s-iy1\", \"nn\"],\n  \"emerald\": [\"eh1-m r-ah-l-d\", \"jj nn\"],\n  \"emerge\": [\"ih m-er1-jh\", \"vb vbp\"],\n  \"emergence\": [\"ih m-er1 jh-ah-n-s\", \"nn\"],\n  \"emergency\": [\"ih m-er1 jh-ah-n s-iy\", \"nn jj\"],\n  \"emergent\": [\"ih m-er1 jh-ah-n-t\", \"jj\"],\n  \"emeritus\": [\"ih m-eh1 r-ah t-ah-s\", \"nn jj\"],\n  \"emigrant\": [\"eh1 m-ah g-r-ah-n-t\", \"nn\"],\n  \"emigrate\": [\"eh1 m-ah g-r-ey-t\", \"vb vbp\"],\n  \"emigration\": [\"eh m-ah g-r-ey1 sh-ah-n\", \"nn\"],\n  \"emigre\": [\"eh1 m-ah g-r-ey\", \"nn\"],\n  \"eminence\": [\"eh1 m-ah n-ah-n-s\", \"nn\"],\n  \"eminent\": [\"eh1 m-ah n-ah-n-t\", \"jj\"],\n  \"eminently\": [\"eh1 m-ah n-ah-n-t l-iy\", \"rb\"],\n  \"emissary\": [\"eh1 m-ah s-eh r-iy\", \"nn\"],\n  \"emission\": [\"ih m-ih1 sh-ah-n\", \"nn\"],\n  \"emit\": [\"ih m-ih1-t\", \"vb vbp\"],\n  \"emotion\": [\"ih m-ow1 sh-ah-n\", \"nn\"],\n  \"emotional\": [\"ih m-ow1 sh-ah n-ah-l\", \"jj\"],\n  \"emotionally\": [\"ih m-ow1-sh n-ah l-iy\", \"rb\"],\n  \"empathetic\": [\"eh-m p-ah th-eh1 t-ih-k\", \"jj\"],\n  \"empathize\": [\"eh1-m p-ah th-ay-z\", \"vb\"],\n  \"empathy\": [\"eh1-m p-ah th-iy\", \"nn\"],\n  \"emperor\": [\"eh1-m p-er er\", \"nn\"],\n  \"emphasis\": [\"eh1-m f-ah s-ah-s\", \"nn\"],\n  \"emphasize\": [\"eh1-m f-ah s-ay-z\", \"vb vbp\"],\n  \"emphatic\": [\"eh-m f-ae1 t-ih-k\", \"jj\"],\n  \"emphatically\": [\"eh-m f-ae1 t-ih-k l-iy\", \"rb\"],\n  \"emphysema\": [\"eh-m f-ah z-iy1 m-ah\", \"nn\"],\n  \"empire\": [\"eh1-m p-ay er\", \"nn\"],\n  \"empirical\": [\"eh-m p-ih1 r-ih k-ah-l\", \"jj\"],\n  \"empirically\": [\"eh-m p-ih1 r-ih k-ah l-iy\", \"rb\"],\n  \"empiricism\": [\"eh-m p-ih1 r-ah s-ih z-ah-m\", \"nn\"],\n  \"employ\": [\"eh-m p-l-oy1\", \"vb nn vbp\"],\n  \"employee\": [\"eh-m p-l-oy1 iy\", \"nn\"],\n  \"employer\": [\"eh-m p-l-oy1 er\", \"nn\"],\n  \"employment\": [\"eh-m p-l-oy1 m-ah-n-t\", \"nn\"],\n  \"empower\": [\"ih-m p-aw1 er\", \"vb vbp\"],\n  \"empowerment\": [\"ih-m p-aw1 er m-ah-n-t\", \"nn\"],\n  \"emptied\": [\"eh1-m-p t-iy-d\", \"vbn jj vbd\"],\n  \"emptier\": [\"eh1-m-p t-iy er\", \"jjr rbr\"],\n  \"emptiness\": [\"eh1-m-p t-iy n-ah-s\", \"nn\"],\n  \"empty\": [\"eh1-m-p t-iy\", \"jj nn rb vb vbp\"],\n  \"emulate\": [\"eh1 m-y-ah l-ey-t\", \"vb\"],\n  \"emulsion\": [\"ih m-ah1-l sh-ah-n\", \"nn\"],\n  \"enable\": [\"eh n-ey1 b-ah-l\", \"vb vbp\"],\n  \"enact\": [\"ih n-ae1-k-t\", \"vb\"],\n  \"enactment\": [\"eh n-ae1-k-t m-ah-n-t\", \"nn\"],\n  \"enamel\": [\"ih n-ae1 m-ah-l\", \"nn\"],\n  \"enamored\": [\"eh n-ae1 m-er-d\", \"jj\"],\n  \"encamp\": [\"ih-n-k-ae1-m-p\", \"vb\"],\n  \"encase\": [\"eh-n-k-ey1-s\", \"vb\"],\n  \"encephalitis\": [\"eh-n s-eh f-ah l-ay1 t-ah-s\", \"nn\"],\n  \"enchant\": [\"eh-n-ch-ae1-n-t\", \"vb\"],\n  \"enchanted\": [\"eh-n ch-ae1-n t-ih-d\", \"vbn jj\"],\n  \"enchanting\": [\"eh-n ch-ae1-n t-ih-ng\", \"jj\"],\n  \"enchantment\": [\"eh-n ch-ae1-n-t m-ah-n-t\", \"nn\"],\n  \"encircle\": [\"eh-n s-er1 k-ah-l\", \"vb\"],\n  \"encircled\": [\"ih-n s-er1 k-ah-l-d\", \"vbd jj\"],\n  \"enclave\": [\"aa1-n k-l-ey-v\", \"nn\"],\n  \"enclose\": [\"ih-n-k-l-ow1-z\", \"vb\"],\n  \"enclosure\": [\"eh-n k-l-ow1 zh-er\", \"nn\"],\n  \"encode\": [\"eh-n-k-ow1-d\", \"vb\"],\n  \"encompass\": [\"eh-n k-ah1-m p-ah-s\", \"vb\"],\n  \"encore\": [\"aa1-n k-ao-r\", \"nn\"],\n  \"encounter\": [\"ih-n k-aw1-n t-er\", \"nn vb vbp\"],\n  \"encourage\": [\"eh-n k-er1 ih-jh\", \"vb vbp\"],\n  \"encouraged\": [\"eh-n k-er1 ih-jh-d\", \"vbn vbd jj\"],\n  \"encouragement\": [\"eh-n k-er1 ih-jh m-ah-n-t\", \"nn\"],\n  \"encouraging\": [\"eh-n k-er1 ih jh-ih-ng\", \"vbg jj\"],\n  \"encroach\": [\"ih-n k-r-ow1-ch\", \"vb\"],\n  \"encroachment\": [\"eh-n k-r-ow1-ch m-ah-n-t\", \"nn\"],\n  \"encrust\": [\"eh-n-k-r-ah1-s-t\", \"vb\"],\n  \"encumber\": [\"eh-n k-ah1-m b-er\", \"vb\"],\n  \"encyclopedia\": [\"ih-n s-ay k-l-ah p-iy1 d-iy ah\", \"nn\"],\n  \"encyclopedic\": [\"ih-n s-ay k-l-ah p-iy1 d-ih-k\", \"jj\"],\n  \"end\": [\"eh1-n-d\", \"nn vbp jj rb vb\"],\n  \"endanger\": [\"eh-n d-ey1-n jh-er\", \"vb vbp\"],\n  \"endangered\": [\"eh-n d-ey1-n jh-er-d\", \"vbn vbd jj\"],\n  \"endangerment\": [\"eh-n d-ey1-n jh-er m-ah-n-t\", \"nn\"],\n  \"endear\": [\"eh-n-d-iy1-r\", \"vb\"],\n  \"endearing\": [\"eh-n d-iy1 r-ih-ng\", \"jj\"],\n  \"endearment\": [\"ih-n d-ih1-r m-ah-n-t\", \"nn\"],\n  \"endeavor\": [\"ih-n d-eh1 v-er\", \"nn\"],\n  \"endeavored\": [\"ih-n d-eh1 v-er-d\", \"vbd vbn\"],\n  \"ended\": [\"eh1-n d-ah-d\", \"vbd jj vbn\"],\n  \"endemic\": [\"eh-n d-eh1 m-ih-k\", \"jj\"],\n  \"ending\": [\"eh1-n d-ih-ng\", \"vbg jj nn vbn\"],\n  \"endless\": [\"eh1-n-d l-ah-s\", \"jj\"],\n  \"endlessly\": [\"eh1-n-d l-ah-s l-iy\", \"rb\"],\n  \"endocrine\": [\"eh1-n d-ow k-r-ay-n\", \"jj\"],\n  \"endocrinologist\": [\"eh-n d-ow k-r-ah n-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"endorse\": [\"eh-n d-ao1-r-s\", \"vb vbp\"],\n  \"endorsement\": [\"eh-n d-ao1-r-s m-ah-n-t\", \"nn\"],\n  \"endorser\": [\"ih-n d-ao1-r s-er\", \"nn\"],\n  \"endosperm\": [\"eh1-n d-ah s-p-er-m\", \"nn\"],\n  \"endothermic\": [\"eh-n d-ow th-er1 m-ih-k\", \"jj\"],\n  \"endow\": [\"eh-n d-aw1\", \"vb vbp\"],\n  \"endowed\": [\"eh-n d-aw1-d\", \"vbn vbd jj\"],\n  \"endowment\": [\"eh-n d-aw1 m-ah-n-t\", \"nn\"],\n  \"endurance\": [\"eh1-n d-er ah-n-s\", \"nn\"],\n  \"endure\": [\"eh-n d-y-uh1-r\", \"vb vbp\"],\n  \"enduring\": [\"eh-n d-y-uh1 r-ih-ng\", \"vbg jj\"],\n  \"enemy\": [\"eh1 n-ah m-iy\", \"nn\"],\n  \"energetic\": [\"eh n-er jh-eh1 t-ih-k\", \"jj\"],\n  \"energetically\": [\"eh n-er jh-eh1 t-ih-k l-iy\", \"rb\"],\n  \"energize\": [\"eh1 n-er jh-ay-z\", \"vb\"],\n  \"energy\": [\"eh1 n-er jh-iy\", \"nn\"],\n  \"enforce\": [\"eh-n f-ao1-r-s\", \"vb vbp\"],\n  \"enforceable\": [\"eh-n f-ao1-r s-ah b-ah-l\", \"jj\"],\n  \"enforced\": [\"eh-n f-ao1-r-s-t\", \"vbn vbd jj\"],\n  \"enforcement\": [\"eh-n f-ao1-r-s m-ah-n-t\", \"nn\"],\n  \"enforcer\": [\"eh-n f-ao1-r s-er\", \"nn\"],\n  \"engage\": [\"eh-n g-ey1-jh\", \"vb vbp\"],\n  \"engaged\": [\"eh-n g-ey1-jh-d\", \"vbn jj vbd\"],\n  \"engagement\": [\"eh-n g-ey1-jh m-ah-n-t\", \"nn\"],\n  \"engaging\": [\"eh-n g-ey1 jh-ih-ng\", \"vbg jj\"],\n  \"engender\": [\"eh-n jh-eh1-n d-er\", \"vb\"],\n  \"engine\": [\"eh1-n jh-ah-n\", \"nn\"],\n  \"engineer\": [\"eh1-n jh-ah n-ih1-r\", \"nn vb\"],\n  \"engineered\": [\"eh-n jh-ah n-iy1-r-d\", \"vbn vbd jj\"],\n  \"engrave\": [\"ih-n g-r-ey1-v\", \"vb\"],\n  \"engraved\": [\"ih-n g-r-ey1-v-d\", \"vbn jj\"],\n  \"engraver\": [\"ih-n g-r-ey1 v-er\", \"nn\"],\n  \"engraving\": [\"ih-n g-r-ey1 v-ih-ng\", \"nn\"],\n  \"engross\": [\"ih-n-g-r-ow1-s\", \"vb\"],\n  \"engrossed\": [\"ih-n g-r-ow1-s-t\", \"jj vbn\"],\n  \"engrossing\": [\"ih-n g-r-ow1 s-ih-ng\", \"jj\"],\n  \"engulf\": [\"ih-n g-ah1-l-f\", \"vb\"],\n  \"engulfing\": [\"ih-n g-ah1-l f-ih-ng\", \"vbg jj\"],\n  \"enhance\": [\"eh-n hh-ae1-n-s\", \"vb vbp\"],\n  \"enhanced\": [\"eh-n hh-ae1-n-s-t\", \"vbn vbd jj\"],\n  \"enhancement\": [\"eh-n hh-ae1-n-s m-ah-n-t\", \"nn\"],\n  \"enigma\": [\"ih n-ih1-g m-ah\", \"nn\"],\n  \"enigmatic\": [\"eh n-ih-g m-ae1 t-ih-k\", \"jj\"],\n  \"enjoin\": [\"eh-n jh-oy1-n\", \"vb\"],\n  \"enjoy\": [\"eh-n jh-oy1\", \"vb vbp\"],\n  \"enjoyable\": [\"eh-n jh-oy1 ah b-ah-l\", \"jj\"],\n  \"enjoyment\": [\"eh-n jh-oy1 m-ah-n-t\", \"nn\"],\n  \"enlarge\": [\"eh-n l-aa1-r-jh\", \"vb\"],\n  \"enlarged\": [\"eh-n l-aa1-r-jh-d\", \"vbn jj vbd\"],\n  \"enlargement\": [\"ih-n l-aa1-r-jh m-ah-n-t\", \"nn\"],\n  \"enlighten\": [\"eh-n l-ay1 t-ah-n\", \"vb\"],\n  \"enlightened\": [\"eh-n l-ay1 t-ah-n-d\", \"jj vbn\"],\n  \"enlightening\": [\"eh-n l-ay1 t-ah-n ih-ng\", \"vbg jj\"],\n  \"enlightenment\": [\"eh-n l-ay1 t-ah-n m-ah-n-t\", \"nn\"],\n  \"enlist\": [\"eh-n l-ih1-s-t\", \"vb\"],\n  \"enlisted\": [\"eh-n l-ih1 s-t-ih-d\", \"vbd jj vbn\"],\n  \"enlistment\": [\"eh-n l-ih1-s-t m-ah-n-t\", \"nn\"],\n  \"enliven\": [\"eh-n l-ay1 v-ah-n\", \"vb vbp\"],\n  \"enmesh\": [\"eh-n-m-eh1-sh\", \"vb\"],\n  \"enmity\": [\"eh1-n m-ah t-iy\", \"nn\"],\n  \"ennui\": [\"eh n-uw1 iy\", \"nn\"],\n  \"enormity\": [\"ih n-ao1-r m-ah t-iy\", \"nn\"],\n  \"enormous\": [\"ih n-ao1-r m-ah-s\", \"jj\"],\n  \"enormously\": [\"ih n-ao1-r m-ah-s l-iy\", \"rb\"],\n  \"enough\": [\"ih-n ah1-f\", \"rb jj nn\"],\n  \"enrage\": [\"eh-n r-ey1-jh\", \"nn vb\"],\n  \"enraged\": [\"eh-n r-ey1-jh-d\", \"jj vbd vbn\"],\n  \"enrapture\": [\"eh-n-r-ae1-p-ch-er\", \"vb\"],\n  \"enrich\": [\"eh-n r-ih1-ch\", \"vb vbp\"],\n  \"enrichment\": [\"eh-n r-ih1-ch m-ah-n-t\", \"nn\"],\n  \"enroll\": [\"eh-n r-ow1-l\", \"vb vbp\"],\n  \"enrolled\": [\"eh-n r-ow1-l-d\", \"vbn vbd jj\"],\n  \"enrollee\": [\"eh-n r-ow1 l-iy1\", \"nn\"],\n  \"enrolling\": [\"eh-n r-ow1 l-ih-ng\", \"nn\"],\n  \"enrollment\": [\"eh-n r-ow1-l m-ah-n-t\", \"nn\"],\n  \"enroute\": [\"eh-n r-uw1-t\", \"rb\"],\n  \"ensconce\": [\"ih-n-s-k-aa1-n-s\", \"vb\"],\n  \"ensemble\": [\"aa-n s-aa1-m b-ah-l\", \"nn\"],\n  \"enshrine\": [\"eh-n-sh-r-ay1-n\", \"vb\"],\n  \"enslave\": [\"eh-n-s-l-ey1-v\", \"vb\"],\n  \"enslavement\": [\"eh-n s-l-ey1-v m-ah-n-t\", \"nn\"],\n  \"ensnare\": [\"ih-n s-n-eh1-r\", \"vb\"],\n  \"ensnarl\": [\"ih-n-s-n-aa1-r-l\", \"vb\"],\n  \"ensue\": [\"ih-n s-uw1\", \"vb vbp\"],\n  \"ensure\": [\"eh-n sh-uh1-r\", \"vb vbp\"],\n  \"entail\": [\"eh-n t-ey1-l\", \"vb vbp\"],\n  \"entangle\": [\"eh-n-t-ae1-ng-g-ah-l\", \"vb\"],\n  \"entangled\": [\"eh-n t-ae1-ng g-ah-l-d\", \"jj vbd vbn\"],\n  \"entanglement\": [\"eh-n t-ae1-ng g-ah-l m-ah-n-t\", \"nn\"],\n  \"enter\": [\"eh1-n t-er\", \"vb vbp\"],\n  \"enterprise\": [\"eh1-n t-er p-r-ay-z\", \"nn\"],\n  \"enterprising\": [\"eh1-n t-er p-r-ay z-ih-ng\", \"jj\"],\n  \"entertain\": [\"eh-n t-er t-ey1-n\", \"vb\"],\n  \"entertainer\": [\"eh-n t-er t-ey1 n-er\", \"nn\"],\n  \"entertaining\": [\"eh-n t-er t-ey1 n-ih-ng\", \"vbg jj nn\"],\n  \"entertainment\": [\"eh-n t-er t-ey1-n m-ah-n-t\", \"nn\"],\n  \"enthral\": [\"eh-n th-r-ao1-l\", \"vb\"],\n  \"enthralled\": [\"eh-n th-r-ao1-l-d\", \"jj vbn\"],\n  \"enthusiasm\": [\"ih-n th-uw1 z-iy ae z-ah-m\", \"nn\"],\n  \"enthusiast\": [\"eh-n th-uw1 z-iy ae-s-t\", \"nn\"],\n  \"enthusiastic\": [\"ih-n th-uw z-iy ae1 s-t-ih-k\", \"jj\"],\n  \"enthusiastically\": [\"ih-n th-uw z-iy ae1 s-t-ih-k l-iy\", \"rb\"],\n  \"entice\": [\"ih-n t-ay1-s\", \"vb vbp\"],\n  \"enticement\": [\"ih-n t-ay1-s m-ah-n-t\", \"nn\"],\n  \"enticing\": [\"eh-n t-ay1 s-ih-ng\", \"vbg jj\"],\n  \"entire\": [\"ih-n t-ay1 er\", \"jj nn\"],\n  \"entirely\": [\"ih-n t-ay1 er l-iy\", \"rb\"],\n  \"entirety\": [\"ih-n t-ay1 er t-iy\", \"nn\"],\n  \"entitle\": [\"eh-n t-ay1 t-ah-l\", \"vb vbp\"],\n  \"entitlement\": [\"eh-n t-ay1 t-ah-l m-ah-n-t\", \"nn jj\"],\n  \"entity\": [\"eh1-n t-ah t-iy\", \"nn\"],\n  \"entomb\": [\"eh-n-t-uw1-m\", \"vb\"],\n  \"entomologist\": [\"eh-n t-ah m-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"entourage\": [\"aa-n t-uh r-aa1-zh\", \"nn\"],\n  \"entrance\": [\"eh1-n t-r-ah-n-s\", \"nn vb\"],\n  \"entrant\": [\"eh1-n t-r-ah-n-t\", \"nn\"],\n  \"entrapment\": [\"ih-n t-r-ae1-p m-ah-n-t\", \"nn\"],\n  \"entre\": [\"aa1-n t-r-ey\", \"nn\"],\n  \"entreaty\": [\"eh-n t-r-iy1 t-iy\", \"nn\"],\n  \"entrench\": [\"eh-n t-r-eh1-n-ch\", \"vb\"],\n  \"entrenched\": [\"eh-n t-r-eh1-n-ch-t\", \"vbn vbd jj\"],\n  \"entrenchment\": [\"eh-n t-r-eh1-n-ch m-ah-n-t\", \"nn\"],\n  \"entrepreneur\": [\"aa-n t-r-ah p-r-ah n-er1\", \"nn\"],\n  \"entrepreneurial\": [\"aa-n t-r-ah p-r-ah n-er1 iy ah-l\", \"jj\"],\n  \"entrepreneurship\": [\"aa-n t-r-ah p-r-ah n-er1 sh-ih-p\", \"nn\"],\n  \"entropy\": [\"eh1-n t-r-ah p-iy\", \"nn\"],\n  \"entrust\": [\"eh-n t-r-ah1-s-t\", \"vb vbp\"],\n  \"entry\": [\"eh1-n t-r-iy\", \"nn\"],\n  \"entwine\": [\"eh-n-t-w-ay1-n\", \"vb\"],\n  \"entwined\": [\"eh-n t-w-ay1-n-d\", \"vbn jj\"],\n  \"enumerate\": [\"ih-n-uw1-m-er-ey-t\", \"vb\"],\n  \"enumerated\": [\"ih n-uw1 m-er ey t-ih-d\", \"vbn jj\"],\n  \"enumeration\": [\"ih n-uw m-er ey1 sh-ah-n\", \"nn\"],\n  \"enunciate\": [\"ih-n-ah1-n-s-iy-ey-t\", \"vb\"],\n  \"envelop\": [\"eh-n v-eh1 l-ah-p\", \"vb\"],\n  \"envelope\": [\"eh1-n v-ah l-ow-p\", \"nn\"],\n  \"enviable\": [\"eh1-n v-iy ah b-ah-l\", \"jj\"],\n  \"envied\": [\"eh1-n v-iy-d\", \"vbd\"],\n  \"envious\": [\"eh1-n v-iy ah-s\", \"jj\"],\n  \"enviously\": [\"eh1-n v-iy ah-s l-iy\", \"rb\"],\n  \"environ\": [\"ih-n v-ay1 r-ah-n\", \"nn\"],\n  \"environment\": [\"ih-n v-ay1 r-ah-n m-ah-n-t\", \"nn\"],\n  \"environmental\": [\"ih-n v-ay r-ah-n m-eh1-n t-ah-l\", \"jj\"],\n  \"environmentalism\": [\"eh-n v-ay1 r-ah-n m-eh-n t-ah l-ih z-ah-m\", \"nn\"],\n  \"environmentalist\": [\"ih-n v-ay r-ah-n m-eh1-n t-ah l-ih-s-t\", \"nn jj\"],\n  \"environmentally\": [\"ih-n v-ay r-ah-n m-eh1-n t-ah l-iy\", \"rb\"],\n  \"envisage\": [\"eh-n v-ih1 z-ih-jh\", \"vb\"],\n  \"envision\": [\"eh-n v-ih1 zh-ah-n\", \"vbp vb\"],\n  \"envoy\": [\"eh1-n v-oy\", \"nn\"],\n  \"envy\": [\"eh1-n v-iy\", \"nn vbp vb\"],\n  \"enzymatic\": [\"eh-n z-ay m-ae1 t-ih-k\", \"jj\"],\n  \"enzyme\": [\"eh1-n z-ay-m\", \"nn\"],\n  \"eon\": [\"iy1 ah-n\", \"nn\"],\n  \"ephemeral\": [\"ih f-eh1 m-er ah-l\", \"jj\"],\n  \"epic\": [\"eh1 p-ih-k\", \"nn jj\"],\n  \"epicenter\": [\"eh1 p-ah s-eh-n t-er\", \"nn\"],\n  \"epicure\": [\"eh1 p-ih k-y-uh-r\", \"nn\"],\n  \"epicurean\": [\"eh p-ah k-y-uh r-iy1 ah-n\", \"nn\"],\n  \"epidemic\": [\"eh p-ah d-eh1 m-ih-k\", \"nn jj\"],\n  \"epidemiological\": [\"eh p-ah d-iy m-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"epidemiologist\": [\"eh p-ah d-iy m-iy aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"epidermis\": [\"eh p-ah d-er1 m-ah-s\", \"nn\"],\n  \"epigenetic\": [\"eh p-ah jh-ah n-eh1 t-ih-k\", \"jj\"],\n  \"epilepsy\": [\"eh1 p-ah l-eh-p s-iy\", \"nn\"],\n  \"epileptic\": [\"eh p-ah l-eh1-p t-ih-k\", \"jj\"],\n  \"epilogue\": [\"eh1 p-ah l-ao-g\", \"nn\"],\n  \"epiphany\": [\"ih p-ih1 f-ah n-iy\", \"nn\"],\n  \"episode\": [\"eh1 p-ah s-ow-d\", \"nn\"],\n  \"episodic\": [\"eh p-ah s-aa1 d-ih-k\", \"jj\"],\n  \"epistemology\": [\"ih p-ih s-t-ah m-aa1 l-ah jh-iy\", \"nn\"],\n  \"epitaph\": [\"eh1 p-ah t-ae-f\", \"nn\"],\n  \"epithet\": [\"eh1 p-ah th-eh-t\", \"nn\"],\n  \"epitome\": [\"ih p-ih1 t-ah m-iy\", \"nn\"],\n  \"epitomize\": [\"ih p-ih1 t-ah m-ay-z\", \"vb vbp\"],\n  \"epoch\": [\"eh1 p-ah-k\", \"nn\"],\n  \"epochal\": [\"eh1 p-ah k-ah-l\", \"jj\"],\n  \"epoxy\": [\"ih p-aa1-k s-iy\", \"jj\"],\n  \"epsom\": [\"eh1-p s-ah-m\", \"nn\"],\n  \"equal\": [\"iy1 k-w-ah-l\", \"jj nn vb vbp\"],\n  \"equality\": [\"ih k-w-aa1 l-ah t-iy\", \"nn\"],\n  \"equalization\": [\"iy k-w-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"equalize\": [\"iy1 k-w-ah l-ay-z\", \"vb\"],\n  \"equalizer\": [\"iy1 k-w-ah l-ay z-er\", \"nn\"],\n  \"equalizing\": [\"iy1 k-w-ah l-ay z-ih-ng\", \"nn\"],\n  \"equally\": [\"iy1 k-w-ah l-iy\", \"rb\"],\n  \"equanimity\": [\"iy k-w-ah n-ih1 m-ih t-iy\", \"nn\"],\n  \"equate\": [\"ih k-w-ey1-t\", \"vb vbp\"],\n  \"equation\": [\"ih k-w-ey1 zh-ah-n\", \"nn\"],\n  \"equator\": [\"ih k-w-ey1 t-er\", \"nn\"],\n  \"equatorial\": [\"iy k-w-ah t-ao1 r-iy ah-l\", \"jj\"],\n  \"equestrian\": [\"ih k-w-eh1-s t-r-iy ah-n\", \"jj\"],\n  \"equilibrium\": [\"iy k-w-ah l-ih1 b-r-iy ah-m\", \"nn\"],\n  \"equine\": [\"iy1 k-w-ay-n\", \"nn\"],\n  \"equip\": [\"ih k-w-ih1-p\", \"vb vbp\"],\n  \"equipment\": [\"ih k-w-ih1-p m-ah-n-t\", \"nn\"],\n  \"equitable\": [\"eh1 k-w-ah t-ah b-ah-l\", \"jj\"],\n  \"equitably\": [\"eh1 k-w-ih t-ah b-l-iy\", \"rb\"],\n  \"equity\": [\"eh1 k-w-ah t-iy\", \"nn\"],\n  \"equivalence\": [\"ih k-w-ih1 v-ah l-ah-n-s\", \"nn\"],\n  \"equivalent\": [\"ih k-w-ih1 v-ah l-ah-n-t\", \"nn jj\"],\n  \"equivocal\": [\"ih k-w-ih1 v-ah k-ah-l\", \"jj\"],\n  \"era\": [\"eh1 r-ah\", \"nn\"],\n  \"eradicate\": [\"ih r-ae1 d-ah k-ey-t\", \"vb\"],\n  \"eradication\": [\"ih r-ae d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"erasable\": [\"ih r-ey1 s-ah b-ah-l\", \"jj\"],\n  \"erase\": [\"ih r-ey1-s\", \"vb\"],\n  \"eraser\": [\"ih r-ey1 s-er\", \"nn\"],\n  \"erect\": [\"ih r-eh1-k-t\", \"vb vbp jj\"],\n  \"erection\": [\"ih r-eh1-k sh-ah-n\", \"nn\"],\n  \"erode\": [\"ih r-ow1-d\", \"vb vbp\"],\n  \"eroded\": [\"ih r-ow1 d-ah-d\", \"vbn jj vbd\"],\n  \"erosion\": [\"ih r-ow1 zh-ah-n\", \"nn\"],\n  \"erotic\": [\"ih r-aa1 t-ih-k\", \"jj\"],\n  \"errand\": [\"eh1 r-ah-n-d\", \"nn\"],\n  \"errant\": [\"eh1 r-ah-n-t\", \"jj\"],\n  \"erratic\": [\"ih r-ae1 t-ih-k\", \"jj\"],\n  \"erratically\": [\"eh r-ae1 t-ih-k l-iy\", \"rb\"],\n  \"erroneous\": [\"eh r-ow1 n-iy ah-s\", \"jj\"],\n  \"erroneously\": [\"eh r-ow1 n-iy ah-s l-iy\", \"rb\"],\n  \"error\": [\"eh1 r-er\", \"nn\"],\n  \"ersatz\": [\"eh1-r s-aa-t-s\", \"jj\"],\n  \"erstwhile\": [\"er1-s-t w-ay-l\", \"jj\"],\n  \"erudite\": [\"eh1 r-ah d-ay-t\", \"jj\"],\n  \"erudition\": [\"eh r-ah d-ih1 sh-ah-n\", \"nn\"],\n  \"erupt\": [\"ih r-ah1-p-t\", \"vb vbp\"],\n  \"eruption\": [\"ih r-ah1-p sh-ah-n\", \"nn\"],\n  \"escalate\": [\"eh1 s-k-ah l-ey-t\", \"vb vbp\"],\n  \"escalation\": [\"eh s-k-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"escalator\": [\"eh1 s-k-ah l-ey t-er\", \"nn\"],\n  \"escapade\": [\"eh1 s-k-ah p-ey-d\", \"nn\"],\n  \"escape\": [\"ih s-k-ey1-p\", \"vb nn vbp\"],\n  \"escapee\": [\"ih s-k-ey p-iy1\", \"nn\"],\n  \"eschew\": [\"eh-s ch-uw1\", \"vb\"],\n  \"escort\": [\"eh s-k-ao1-r-t\", \"nn vb\"],\n  \"escrow\": [\"eh s-k-r-ow1\", \"nn jj vb\"],\n  \"escudo\": [\"eh s-k-uw1 d-ow\", \"nn\"],\n  \"esophagus\": [\"ih s-aa1 f-ah g-ah-s\", \"nn\"],\n  \"esoteric\": [\"eh s-ah t-eh1 r-ih-k\", \"jj\"],\n  \"especially\": [\"ah s-p-eh1-sh l-iy\", \"rb\"],\n  \"espionage\": [\"eh1 s-p-iy ah n-aa-jh\", \"nn\"],\n  \"esplanade\": [\"eh-s p-l-ah n-aa1-d\", \"nn\"],\n  \"espouse\": [\"ih s-p-aw1-z\", \"vb vbp\"],\n  \"espresso\": [\"eh s-p-r-eh1 s-ow\", \"nn\"],\n  \"essay\": [\"eh s-ey1\", \"nn\"],\n  \"essayist\": [\"eh1 s-ey ih-s-t\", \"nn\"],\n  \"essence\": [\"eh1 s-ah-n-s\", \"nn\"],\n  \"essential\": [\"ih s-eh1-n sh-ah-l\", \"jj nn\"],\n  \"essentially\": [\"ih s-eh1-n sh-ah l-iy\", \"rb\"],\n  \"establish\": [\"ih s-t-ae1 b-l-ih-sh\", \"vb vbp\"],\n  \"established\": [\"ih s-t-ae1 b-l-ih-sh-t\", \"vbn jj vbd\"],\n  \"establishment\": [\"ih s-t-ae1 b-l-ih-sh m-ah-n-t\", \"nn\"],\n  \"estate\": [\"ih s-t-ey1-t\", \"nn\"],\n  \"esteem\": [\"ah s-t-iy1-m\", \"nn vb\"],\n  \"estimable\": [\"eh1 s-t-ah m-ah b-ah-l\", \"jj\"],\n  \"estimate\": [\"eh1 s-t-ah m-ah-t\", \"nn vb vbp\"],\n  \"estimated\": [\"eh1 s-t-ah m-ey t-ah-d\", \"vbn jj vbd\"],\n  \"estimation\": [\"eh s-t-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"estimator\": [\"eh s-t-ih1 m-ah t-er\", \"nn\"],\n  \"estrange\": [\"eh-s-t-r-ey1-n-jh\", \"vb\"],\n  \"estranged\": [\"eh s-t-r-ey1-n-jh-d\", \"vbn vbd jj\"],\n  \"estrangement\": [\"ih s-t-r-ey1-n-jh m-ah-n-t\", \"nn\"],\n  \"estrogen\": [\"eh1 s-t-r-ah jh-ah-n\", \"nn\"],\n  \"estuary\": [\"eh1-s ch-uw eh r-iy\", \"nn\"],\n  \"etcetera\": [\"eh1-t s-eh1 t-er ah\", \"nn\"],\n  \"etch\": [\"eh1-ch\", \"vb\"],\n  \"etching\": [\"eh1 ch-ih-ng\", \"nn\"],\n  \"eternal\": [\"ih t-er1 n-ah-l\", \"jj\"],\n  \"eternally\": [\"ih t-er1 n-ah l-iy\", \"rb\"],\n  \"eternity\": [\"ih t-er1 n-ah t-iy\", \"nn\"],\n  \"ethane\": [\"eh1 th-ey-n\", \"nn\"],\n  \"ethanol\": [\"eh1 th-ah n-ao-l\", \"nn\"],\n  \"ether\": [\"iy1 th-er\", \"nn cc\"],\n  \"ethereal\": [\"ih th-ih1 r-iy ah-l\", \"jj\"],\n  \"ethic\": [\"eh1 th-ih-k\", \"nn\"],\n  \"ethical\": [\"eh1 th-ah k-ah-l\", \"jj\"],\n  \"ethically\": [\"eh1 th-ih k-ah l-iy\", \"rb\"],\n  \"ethicist\": [\"eh1 th-ih s-ih-s-t\", \"nn\"],\n  \"ethics\": [\"eh1 th-ih-k-s\", \"nn\"],\n  \"ethnic\": [\"eh1-th n-ih-k\", \"jj\"],\n  \"ethnically\": [\"eh1-th n-ih-k l-iy\", \"rb\"],\n  \"ethnicity\": [\"eh-th n-ih1 s-ih t-iy\", \"nn\"],\n  \"ethos\": [\"iy1 th-aa-s\", \"nn\"],\n  \"ethyl\": [\"eh1 th-ah-l\", \"nn\"],\n  \"ethylene\": [\"eh1 th-ah l-iy-n\", \"nn\"],\n  \"etiquette\": [\"eh1 t-ah k-ah-t\", \"nn\"],\n  \"etymology\": [\"eh t-ah m-aa1 l-ah jh-iy\", \"nn\"],\n  \"eucalyptus\": [\"y-uw k-ah l-ih1-p t-ah-s\", \"nn\"],\n  \"eulogy\": [\"y-uw1 l-ah jh-iy\", \"nn\"],\n  \"euphemism\": [\"y-uw1 f-ah m-ih z-ah-m\", \"nn\"],\n  \"euphoria\": [\"y-uw f-ao1 r-iy ah\", \"nn\"],\n  \"euphoric\": [\"y-uw f-aa1 r-ih-k\", \"jj\"],\n  \"evacuate\": [\"ih v-ae1 k-y-ah ey-t\", \"vb\"],\n  \"evacuation\": [\"ih v-ae k-y-ah-w ey1 sh-ah-n\", \"nn\"],\n  \"evade\": [\"ih v-ey1-d\", \"vb\"],\n  \"evader\": [\"ih v-ey1 d-er\", \"nn\"],\n  \"evaluate\": [\"ih v-ae1-l y-uw ey-t\", \"vb vbp\"],\n  \"evaluation\": [\"ih v-ae-l y-uw ey1 sh-ah-n\", \"nn\"],\n  \"evangelical\": [\"iy v-ae-n jh-eh1 l-ih k-ah-l\", \"jj\"],\n  \"evangelism\": [\"ih v-ae1-n jh-ah l-ih z-ah-m\", \"nn\"],\n  \"evangelist\": [\"ih v-ae1-n jh-ah l-ah-s-t\", \"nn\"],\n  \"evaporate\": [\"ih v-ae1 p-er ey-t\", \"vb vbp\"],\n  \"evaporation\": [\"ih v-ae p-er ey1 sh-ah-n\", \"nn\"],\n  \"evasion\": [\"ih v-ey1 zh-ah-n\", \"nn\"],\n  \"evasive\": [\"ih v-ey1 s-ih-v\", \"jj\"],\n  \"eve\": [\"iy1-v\", \"nn\"],\n  \"even\": [\"iy1 v-ih-n\", \"rb vb\"],\n  \"evenhanded\": [\"iy1 v-ah-n hh-ae1-n d-ih-d\", \"jj\"],\n  \"evening\": [\"iy1-v n-ih-ng\", \"nn vbg\"],\n  \"evenly\": [\"iy1 v-ah-n l-iy\", \"rb\"],\n  \"event\": [\"ih v-eh1-n-t\", \"nn\"],\n  \"eventful\": [\"ih v-eh1-n-t f-ah-l\", \"jj\"],\n  \"eventual\": [\"ah v-eh1-n ch-uw ah-l\", \"jj\"],\n  \"eventuality\": [\"ah v-eh-n ch-uw ae1 l-ih t-iy\", \"nn\"],\n  \"eventually\": [\"ih v-eh1-n ch-ah-w ah l-iy\", \"rb\"],\n  \"ever\": [\"eh1 v-er\", \"rb rbr rp\"],\n  \"evergreen\": [\"eh1 v-er g-r-iy-n\", \"nn\"],\n  \"everlasting\": [\"eh v-er l-ae1 s-t-ih-ng\", \"jj nn\"],\n  \"every\": [\"eh1 v-er iy\", \"dt\"],\n  \"everybody\": [\"eh1 v-r-iy b-aa d-iy\", \"nn\"],\n  \"everyday\": [\"eh1 v-r-iy d-ey1\", \"jj\"],\n  \"everyone\": [\"eh1 v-r-iy w-ah-n\", \"nn\"],\n  \"everything\": [\"eh1 v-r-iy th-ih-ng\", \"nn\"],\n  \"everywhere\": [\"eh1 v-r-iy w-eh-r\", \"rb\"],\n  \"evict\": [\"ih v-ih1-k-t\", \"vb\"],\n  \"evidence\": [\"eh1 v-ah d-ah-n-s\", \"nn vb\"],\n  \"evident\": [\"eh1 v-ah d-ah-n-t\", \"jj\"],\n  \"evidently\": [\"eh1 v-ah d-ah-n-t l-iy\", \"rb\"],\n  \"evil\": [\"iy1 v-ah-l\", \"jj nn\"],\n  \"evildoer\": [\"iy1 v-ah-l d-uw er\", \"nn\"],\n  \"evince\": [\"ih-v-ih1-n-s\", \"vb\"],\n  \"eviscerate\": [\"ah v-ih1 s-er ey-t\", \"vb\"],\n  \"evocation\": [\"iy v-ow k-ey1 sh-ah-n\", \"nn\"],\n  \"evocative\": [\"ih v-aa1 k-ah t-ih-v\", \"jj\"],\n  \"evoke\": [\"ih v-ow1-k\", \"vb vbp\"],\n  \"evolution\": [\"eh v-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"evolutionary\": [\"eh v-ah l-uw1 sh-ah-n eh r-iy\", \"jj\"],\n  \"evolve\": [\"ih v-aa1-l-v\", \"vb vbp\"],\n  \"evolved\": [\"ih v-aa1-l-v-d\", \"vbn jj vbd\"],\n  \"exacerbate\": [\"ih-g z-ae1 s-er b-ey-t\", \"vb vbp\"],\n  \"exacerbation\": [\"ih-g z-ae s-er b-ey1 sh-ah-n\", \"nn\"],\n  \"exact\": [\"ih-g z-ae1-k-t\", \"jj vb\"],\n  \"exacting\": [\"ih-g z-ae1-k t-ih-ng\", \"jj\"],\n  \"exactly\": [\"ih-g z-ae1-k-t l-iy\", \"rb\"],\n  \"exaggerate\": [\"ih-g z-ae1 jh-er ey-t\", \"vb vbp\"],\n  \"exaggerated\": [\"ih-g z-ae1 jh-er ey t-ah-d\", \"vbn jj vbd\"],\n  \"exaggeration\": [\"ih-g z-ae jh-er ey1 sh-ah-n\", \"nn\"],\n  \"exalt\": [\"ih-g z-ao1-l-t\", \"vbp vb\"],\n  \"exalted\": [\"ih-g z-ao1-l t-ih-d\", \"jj vbd\"],\n  \"exam\": [\"ih-g z-ae1-m\", \"nn\"],\n  \"examination\": [\"ih-g z-ae m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"examine\": [\"ih-g z-ae1 m-ih-n\", \"vb vbp\"],\n  \"examiner\": [\"ih-g z-ae1 m-ah n-er\", \"nn\"],\n  \"example\": [\"ih-g z-ae1-m p-ah-l\", \"nn\"],\n  \"exasperate\": [\"ih-g-z-ae1-s-p-er-ey-t\", \"vb\"],\n  \"exasperated\": [\"ih-g z-ae1 s-p-er ey t-ih-d\", \"jj\"],\n  \"exasperating\": [\"ih-g z-ae1 s-p-er ey t-ih-ng\", \"vbg jj\"],\n  \"exasperation\": [\"eh-k s-ae s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"excavate\": [\"eh1-k s-k-ah v-ey-t\", \"vb\"],\n  \"excavation\": [\"eh-k s-k-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"excavator\": [\"eh1-k s-k-ah v-ey t-er\", \"nn\"],\n  \"exceed\": [\"ih-k s-iy1-d\", \"vb vbp\"],\n  \"exceeding\": [\"ih-k s-iy1 d-ih-ng\", \"vbg jj\"],\n  \"exceedingly\": [\"ih-k s-iy1 d-ih-ng l-iy\", \"rb\"],\n  \"excel\": [\"ih-k s-eh1-l\", \"vbp vb\"],\n  \"excellence\": [\"eh1-k s-ah l-ah-n-s\", \"nn\"],\n  \"excellent\": [\"eh1-k s-ah l-ah-n-t\", \"jj\"],\n  \"excellently\": [\"eh1-k s-ah l-ah-n-t l-iy\", \"rb\"],\n  \"excelsior\": [\"ih-k s-eh1-l s-iy er\", \"nn\"],\n  \"except\": [\"ih-k s-eh1-p-t\", \"in vb\"],\n  \"exception\": [\"ih-k s-eh1-p sh-ah-n\", \"nn\"],\n  \"exceptional\": [\"ih-k s-eh1-p sh-ah n-ah-l\", \"jj\"],\n  \"exceptionally\": [\"ih-k s-eh1-p sh-ah-n ah l-iy\", \"rb\"],\n  \"excerpt\": [\"eh1-k s-er-p-t\", \"nn\"],\n  \"excess\": [\"eh1-k s-eh-s\", \"jj nn\"],\n  \"excessive\": [\"ih-k s-eh1 s-ih-v\", \"jj\"],\n  \"excessively\": [\"ih-k s-eh1 s-ih-v l-iy\", \"rb\"],\n  \"exchange\": [\"ih-k-s ch-ey1-n-jh\", \"nn vb vbp\"],\n  \"exchangeable\": [\"ih-k-s ch-ey1-n jh-ah b-ah-l\", \"jj\"],\n  \"exchanger\": [\"ih-k-s ch-ey1-n jh-er\", \"nn\"],\n  \"exchequer\": [\"eh1-k-s ch-eh k-er\", \"nn\"],\n  \"excise\": [\"eh-k s-ay1-s\", \"nn jj vb\"],\n  \"excision\": [\"ih-k s-ih1 zh-ah-n\", \"nn\"],\n  \"excite\": [\"ih-k s-ay1-t\", \"vb\"],\n  \"excited\": [\"ih-k s-ay1 t-ah-d\", \"vbn jj vbd\"],\n  \"excitedly\": [\"ih-k s-ay1 t-ah-d l-iy\", \"rb\"],\n  \"excitement\": [\"ih-k s-ay1-t m-ah-n-t\", \"nn\"],\n  \"exciting\": [\"ih-k s-ay1 t-ih-ng\", \"jj vbg\"],\n  \"exclaim\": [\"ih-k s-k-l-ey1-m\", \"vb\"],\n  \"exclamation\": [\"eh-k s-k-l-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"exclude\": [\"ih-k s-k-l-uw1-d\", \"vb vbp\"],\n  \"exclusion\": [\"ih-k s-k-l-uw1 zh-ah-n\", \"nn\"],\n  \"exclusionary\": [\"ih-k s-k-l-uw1 zh-ah-n eh r-iy\", \"jj\"],\n  \"exclusive\": [\"ih-k s-k-l-uw1 s-ih-v\", \"jj nn\"],\n  \"exclusively\": [\"ih-k s-k-l-uw1 s-ih-v l-iy\", \"rb\"],\n  \"exclusivity\": [\"eh-k s-k-l-uw s-ih1 v-ah t-iy\", \"nn\"],\n  \"excommunicate\": [\"eh-k-s-k-ah-m-y-uw1-n-ah-k-ey-t\", \"vb\"],\n  \"excoriate\": [\"eh-k-s-k-ao1-r-iy-ey-t\", \"vb\"],\n  \"excrement\": [\"eh1-k s-k-r-ah m-ah-n-t\", \"nn\"],\n  \"excrete\": [\"ih-k s-k-r-iy1-t\", \"vb\"],\n  \"excretion\": [\"ih-k s-k-r-iy1 sh-ah-n\", \"nn\"],\n  \"excretory\": [\"eh1-k s-k-r-ah t-ao r-iy\", \"jj\"],\n  \"excruciating\": [\"ih-k s-k-r-uw1 sh-iy ey t-ih-ng\", \"jj\"],\n  \"excursion\": [\"ih-k s-k-er1 zh-ah-n\", \"nn\"],\n  \"excuse\": [\"ih-k s-k-y-uw1-s\", \"nn vbp vb\"],\n  \"exec\": [\"eh-g z-eh1-k\", \"nn\"],\n  \"execute\": [\"eh1-k s-ah k-y-uw-t\", \"vb vbp\"],\n  \"executed\": [\"eh1-k s-ah k-y-uw t-ah-d\", \"vbn jj vbd\"],\n  \"execution\": [\"eh-k s-ah k-y-uw1 sh-ah-n\", \"nn\"],\n  \"executioner\": [\"eh-k s-ah k-y-uw1 sh-ah-n er\", \"nn\"],\n  \"executive\": [\"ih-g z-eh1 k-y-ah t-ih-v\", \"nn jj\"],\n  \"executor\": [\"ih-g z-eh1 k-y-ah t-er\", \"nn\"],\n  \"exemplary\": [\"ih-g z-eh1-m p-l-er iy\", \"jj\"],\n  \"exemplify\": [\"ih-g z-eh1-m p-l-ah f-ay\", \"vbp vb\"],\n  \"exempt\": [\"ih-g z-eh1-m-p-t\", \"jj vb\"],\n  \"exemption\": [\"ih-g z-eh1-m-p sh-ah-n\", \"nn\"],\n  \"exercisable\": [\"eh1-k s-er s-ay z-ah b-ah-l\", \"jj\"],\n  \"exercise\": [\"eh1-k s-er s-ay-z\", \"nn vbp vb\"],\n  \"exercised\": [\"eh1-k s-er s-ay-z-d\", \"vbn vbd jj\"],\n  \"exert\": [\"ih-g z-er1-t\", \"vb vbp\"],\n  \"exertion\": [\"ih-g z-er1 sh-ah-n\", \"nn\"],\n  \"exhale\": [\"eh-k-s-hh-ey1-l\", \"vb\"],\n  \"exhaust\": [\"ih-g z-ao1-s-t\", \"nn vb vbp\"],\n  \"exhausting\": [\"ih-g z-ao1 s-t-ih-ng\", \"vbg jj\"],\n  \"exhaustion\": [\"ih-g z-ao1-s ch-ah-n\", \"nn\"],\n  \"exhaustive\": [\"ih-g z-ao1 s-t-ih-v\", \"jj\"],\n  \"exhaustively\": [\"ih-g z-aa1 s-t-ih-v l-iy\", \"rb\"],\n  \"exhibit\": [\"ih-g z-ih1 b-ih-t\", \"nn vbp vb\"],\n  \"exhibition\": [\"eh-k s-ah b-ih1 sh-ah-n\", \"nn\"],\n  \"exhibitor\": [\"ih-g z-ih1 b-ah t-er\", \"nn\"],\n  \"exhilarate\": [\"ih-g-z-ih1-l-er-ey-t\", \"vb\"],\n  \"exhilarating\": [\"ih-g z-ih1 l-er ey t-ih-ng\", \"jj\"],\n  \"exhilaration\": [\"ih-g z-ih l-er ey1 sh-ah-n\", \"nn\"],\n  \"exhort\": [\"ih-g z-ao1-r-t\", \"vb\"],\n  \"exhortation\": [\"eh-g z-ao-r t-ey1 sh-ah-n\", \"nn\"],\n  \"exigency\": [\"eh-k s-ih1 jh-ah-n s-iy\", \"nn\"],\n  \"exile\": [\"eh1-g z-ay-l\", \"nn vb\"],\n  \"exiled\": [\"eh1-g z-ay-l-d\", \"vbn vbd jj\"],\n  \"exist\": [\"ih-g z-ih1-s-t\", \"vb vbp\"],\n  \"existence\": [\"eh-g z-ih1 s-t-ah-n-s\", \"nn\"],\n  \"existent\": [\"eh-g z-ih1 s-t-ah-n-t\", \"jj nn\"],\n  \"existential\": [\"eh-k s-ih s-t-eh1-n ch-ah-l\", \"jj\"],\n  \"existing\": [\"ih-g z-ih1 s-t-ih-ng\", \"vbg jj\"],\n  \"exit\": [\"eh1-g z-ih-t\", \"nn vb\"],\n  \"exodus\": [\"eh1-k s-ah d-ah-s\", \"nn\"],\n  \"exonerate\": [\"ih-g z-aa1 n-er ey-t\", \"vb\"],\n  \"exorbitant\": [\"ih-g z-ao1-r b-ih t-ah-n-t\", \"jj\"],\n  \"exorcism\": [\"eh1-k s-er s-ih1-z ah-m\", \"nn\"],\n  \"exorcist\": [\"eh1-k s-er s-ah-s-t\", \"nn\"],\n  \"exothermic\": [\"eh-k s-ow th-er1 m-ih-k\", \"jj\"],\n  \"exotic\": [\"ih-g z-aa1 t-ih-k\", \"jj\"],\n  \"expand\": [\"ih-k s-p-ae1-n-d\", \"vb vbp\"],\n  \"expandable\": [\"ih-k s-p-ae1-n d-ah b-ah-l\", \"jj\"],\n  \"expanded\": [\"ih-k s-p-ae1-n d-ah-d\", \"vbn vbd jj\"],\n  \"expanding\": [\"ih-k s-p-ae1-n d-ih-ng\", \"vbg jj\"],\n  \"expanse\": [\"ih-k s-p-ae1-n-s\", \"nn jj\"],\n  \"expansion\": [\"ih-k s-p-ae1-n sh-ah-n\", \"nn jj\"],\n  \"expansionism\": [\"ih-k s-p-ae1-n sh-ah n-ih z-ah-m\", \"nn\"],\n  \"expansive\": [\"ih-k s-p-ae1-n s-ih-v\", \"jj\"],\n  \"expatriate\": [\"eh-k-s p-ey1 t-r-iy ey-t\", \"nn\"],\n  \"expect\": [\"ih-k s-p-eh1-k-t\", \"vbp vb in\"],\n  \"expectancy\": [\"ih-k s-p-eh1-k t-ah-n s-iy\", \"nn\"],\n  \"expectant\": [\"ih-k s-p-eh1-k t-ah-n-t\", \"jj\"],\n  \"expectation\": [\"eh-k s-p-eh-k t-ey1 sh-ah-n\", \"nn\"],\n  \"expected\": [\"ih-k s-p-eh1-k t-ah-d\", \"vbn vbd jj\"],\n  \"expediency\": [\"ih-k s-p-iy1 d-iy ah-n s-iy\", \"nn\"],\n  \"expedient\": [\"ih-k s-p-iy1 d-iy ah-n-t\", \"jj nn\"],\n  \"expedite\": [\"eh1-k s-p-ih d-ay-t\", \"vb\"],\n  \"expedited\": [\"eh1-k s-p-ih d-ay t-ih-d\", \"vbn vbd jj\"],\n  \"expedition\": [\"eh-k s-p-ah d-ih1 sh-ah-n\", \"nn\"],\n  \"expeditious\": [\"eh-k s-p-ah d-ih1 sh-ah-s\", \"jj\"],\n  \"expeditiously\": [\"eh-k s-p-ah d-ih1 sh-ah-s l-iy\", \"rb\"],\n  \"expel\": [\"ih-k s-p-eh1-l\", \"vb\"],\n  \"expend\": [\"ih-k s-p-eh1-n-d\", \"vb vbp\"],\n  \"expendable\": [\"ih-k s-p-eh1-n d-ah b-ah-l\", \"jj\"],\n  \"expenditure\": [\"ih-k s-p-eh1-n d-ah ch-er\", \"nn\"],\n  \"expense\": [\"ih-k s-p-eh1-n-s\", \"nn\"],\n  \"expensive\": [\"ih-k s-p-eh1-n s-ih-v\", \"jj rb\"],\n  \"experience\": [\"ih-k s-p-ih1 r-iy ah-n-s\", \"nn vbp vb\"],\n  \"experienced\": [\"ih-k s-p-ih1 r-iy ah-n-s-t\", \"vbn jj vbd\"],\n  \"experiment\": [\"ih-k s-p-eh1 r-ah m-ah-n-t\", \"nn vbp vb\"],\n  \"experimental\": [\"ih-k s-p-eh r-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"experimentally\": [\"ih-k s-p-eh r-ah m-eh1-n t-ah l-iy\", \"rb\"],\n  \"experimentation\": [\"ih-k s-p-eh r-ah m-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"experimenter\": [\"ih-k s-p-eh1 r-ah m-eh-n t-er\", \"nn\"],\n  \"expert\": [\"eh1-k s-p-er-t\", \"nn jj\"],\n  \"expertise\": [\"eh-k s-p-er t-iy1-z\", \"nn\"],\n  \"expertly\": [\"eh1-k s-p-er-t l-iy\", \"rb\"],\n  \"expiration\": [\"eh-k s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"expire\": [\"ih-k s-p-ay1-r\", \"vb vbp\"],\n  \"expired\": [\"ih-k s-p-ay1-r-d\", \"vbd vbn jj\"],\n  \"explain\": [\"ih-k s-p-l-ey1-n\", \"vb vbp\"],\n  \"explanation\": [\"eh-k s-p-l-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"explanatory\": [\"ih-k s-p-l-ae1 n-ah t-ao r-iy\", \"jj\"],\n  \"expletive\": [\"eh1-k s-p-l-ah t-ih-v\", \"nn\"],\n  \"explicit\": [\"ih-k s-p-l-ih1 s-ah-t\", \"jj\"],\n  \"explicitly\": [\"ih-k s-p-l-ih1 s-ah-t l-iy\", \"rb\"],\n  \"explode\": [\"ih-k s-p-l-ow1-d\", \"vb vbp\"],\n  \"exploit\": [\"eh1-k s-p-l-oy-t\", \"vb nn vbp\"],\n  \"exploitation\": [\"eh-k s-p-l-oy t-ey1 sh-ah-n\", \"nn\"],\n  \"exploitative\": [\"eh-k s-p-l-oy1 t-ah t-ih-v\", \"jj\"],\n  \"exploration\": [\"eh-k s-p-l-er ey1 sh-ah-n\", \"nn\"],\n  \"exploratory\": [\"ih-k s-p-l-ao1 r-ah t-ao r-iy\", \"jj\"],\n  \"explore\": [\"ih-k s-p-l-ao1-r\", \"vb vbp\"],\n  \"explorer\": [\"ih-k s-p-l-ao1 r-er\", \"nn\"],\n  \"explosion\": [\"ih-k s-p-l-ow1 zh-ah-n\", \"nn\"],\n  \"explosive\": [\"ih-k s-p-l-ow1 s-ih-v\", \"jj nn\"],\n  \"explosively\": [\"eh-k s-p-l-ow1 s-ih-v l-iy\", \"rb\"],\n  \"expo\": [\"eh1-k s-p-ow\", \"nn\"],\n  \"exponent\": [\"ih-k s-p-ow1 n-ah-n-t\", \"nn\"],\n  \"exponential\": [\"eh-k s-p-ow n-eh1-n ch-ah-l\", \"jj\"],\n  \"exponentially\": [\"eh-k s-p-ow n-eh1-n sh-ah l-iy\", \"rb\"],\n  \"export\": [\"eh1-k s-p-ao-r-t\", \"nn vbp jj vb\"],\n  \"exporter\": [\"ih-k s-p-ao1-r t-er\", \"nn\"],\n  \"expose\": [\"ih-k s-p-ow1-z\", \"vb nn vbp\"],\n  \"exposed\": [\"ih-k s-p-ow1-z-d\", \"vbn jj vbd\"],\n  \"exposing\": [\"ih-k s-p-ow1 z-ih-ng\", \"vbg jj\"],\n  \"exposition\": [\"eh-k s-p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"exposure\": [\"ih-k s-p-ow1 zh-er\", \"nn\"],\n  \"expound\": [\"ih-k-s-p-aw1-n-d\", \"vb\"],\n  \"express\": [\"ih-k s-p-r-eh1-s\", \"vb vbp jj nn\"],\n  \"expressed\": [\"ih-k s-p-r-eh1-s-t\", \"vbn vbd jj\"],\n  \"expression\": [\"ih-k s-p-r-eh1 sh-ah-n\", \"nn\"],\n  \"expressionism\": [\"ih-k s-p-r-eh1 sh-ah-n ih z-ah-m\", \"nn\"],\n  \"expressionist\": [\"ih-k s-p-r-eh1 sh-ah-n ah-s-t\", \"nn\"],\n  \"expressionistic\": [\"ih-k s-p-r-eh sh-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"expressive\": [\"ih-k s-p-r-eh1 s-ih-v\", \"jj\"],\n  \"expressly\": [\"eh-k s-p-r-eh1-s l-iy\", \"rb\"],\n  \"expressway\": [\"ih-k s-p-r-eh1-s w-ey\", \"nn\"],\n  \"expropriated\": [\"eh-k-s p-r-ow1 p-r-iy ey t-ih-d\", \"jj\"],\n  \"expulsion\": [\"ih-k s-p-ah1-l sh-ah-n\", \"nn\"],\n  \"expunge\": [\"ih-k-s-p-ah1-n-jh\", \"vb\"],\n  \"exquisite\": [\"eh1-k s-k-w-ah z-ah-t\", \"jj\"],\n  \"exquisitely\": [\"eh-k s-k-w-ih1 z-ih-t l-iy\", \"rb\"],\n  \"extant\": [\"eh1-k s-t-ah-n-t\", \"jj\"],\n  \"extend\": [\"ih-k s-t-eh1-n-d\", \"vb vbp\"],\n  \"extended\": [\"ih-k s-t-eh1-n d-ah-d\", \"vbn vbd jj\"],\n  \"extendible\": [\"eh-k s-t-eh1-n d-ih b-ah-l\", \"jj\"],\n  \"extension\": [\"ih-k s-t-eh1-n sh-ah-n\", \"nn\"],\n  \"extensive\": [\"ih-k s-t-eh1-n s-ih-v\", \"jj\"],\n  \"extensively\": [\"ih-k s-t-eh1-n s-ih-v l-iy\", \"rb\"],\n  \"extent\": [\"ih-k s-t-eh1-n-t\", \"nn\"],\n  \"extenuate\": [\"ih-k-s-t-eh1-n-y-uw-ey-t\", \"vb\"],\n  \"exterior\": [\"ih-k s-t-ih1 r-iy er\", \"jj nn\"],\n  \"exterminate\": [\"ih-k-s-t-er1-m-ah-n-ey-t\", \"vb\"],\n  \"extermination\": [\"ih-k s-t-er m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"exterminator\": [\"ih-k s-t-er1 m-ah n-ey t-er\", \"nn\"],\n  \"external\": [\"ih-k s-t-er1 n-ah-l\", \"jj\"],\n  \"externally\": [\"ih-k s-t-er1 n-ah l-iy\", \"rb\"],\n  \"extinct\": [\"ih-k s-t-ih1-ng-k-t\", \"jj\"],\n  \"extinction\": [\"ih-k s-t-ih1-ng-k sh-ah-n\", \"nn\"],\n  \"extinguish\": [\"ih-k s-t-ih1-ng g-w-ih-sh\", \"vb\"],\n  \"extinguisher\": [\"ih-k s-t-ih1-ng g-w-ih sh-er\", \"nn\"],\n  \"extinguishment\": [\"ih-k s-t-ih1-ng g-w-ih-sh m-ah-n-t\", \"nn\"],\n  \"extol\": [\"ih-k s-t-ow1-l\", \"vb\"],\n  \"extort\": [\"ih-k s-t-ao1-r-t\", \"vb\"],\n  \"extortion\": [\"ih-k s-t-ao1-r sh-ah-n\", \"nn\"],\n  \"extortionate\": [\"ih-k s-t-ao1-r sh-ah-n ah-t\", \"jj\"],\n  \"extra\": [\"eh1-k s-t-r-ah\", \"jj nn\"],\n  \"extract\": [\"ih-k s-t-r-ae1-k-t\", \"vb nn vbp\"],\n  \"extraction\": [\"ih-k s-t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"extracurricular\": [\"eh-k s-t-r-ah k-er ih1 k-y-ah l-er\", \"jj\"],\n  \"extradite\": [\"eh1-k s-t-r-ah d-ay-t\", \"vb\"],\n  \"extradition\": [\"eh-k s-t-r-ah d-ih1 sh-ah-n\", \"nn\"],\n  \"extralegal\": [\"eh-k s-t-r-ah l-iy1 g-ah-l\", \"jj\"],\n  \"extramarital\": [\"eh-k s-t-r-ah m-eh1 r-ah t-ah-l\", \"jj\"],\n  \"extraneous\": [\"eh-k s-t-r-ey1 n-iy ah-s\", \"jj\"],\n  \"extraordinarily\": [\"ih-k s-t-r-ao-r d-ah n-eh1 r-ah l-iy\", \"rb\"],\n  \"extraordinary\": [\"ih-k s-t-r-ao1-r d-ah-n eh r-iy\", \"jj nn\"],\n  \"extrapolate\": [\"ih-k s-t-r-ae1 p-ah l-ey-t\", \"vb\"],\n  \"extrapolation\": [\"ih-k s-t-r-ae p-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"extraterrestrial\": [\"eh-k s-t-r-ah t-er eh1-s t-r-iy ah-l\", \"jj\"],\n  \"extraterritorial\": [\"eh-k s-t-r-ah t-eh r-ih t-ao1 r-iy ah-l\", \"jj\"],\n  \"extravagance\": [\"ih-k s-t-r-ae1 v-ah g-ah-n-s\", \"nn\"],\n  \"extravagant\": [\"ih-k s-t-r-ae1 v-ah g-ah-n-t\", \"jj\"],\n  \"extravagantly\": [\"eh-k s-t-r-ae1 v-ah g-ah-n-t l-iy\", \"rb\"],\n  \"extravaganza\": [\"ih-k s-t-r-ae v-ah g-ae1-n z-ah\", \"nn\"],\n  \"extreme\": [\"ih-k s-t-r-iy1-m\", \"jj nn\"],\n  \"extremely\": [\"ih-k s-t-r-iy1-m l-iy\", \"rb\"],\n  \"extremist\": [\"ih-k s-t-r-iy1 m-ih-s-t\", \"jj nn\"],\n  \"extremity\": [\"ih-k-s t-r-eh1 m-ah t-iy\", \"nn\"],\n  \"extricate\": [\"eh1-k s-t-r-ah k-ey-t\", \"vb\"],\n  \"extrude\": [\"ih-k-s-t-r-uw1-d\", \"vb\"],\n  \"extruded\": [\"ih-k s-t-r-uw1 d-ah-d\", \"vbn jj\"],\n  \"extrusion\": [\"ih-k-s t-r-uw1 zh-ah-n\", \"nn\"],\n  \"exuberance\": [\"ih-g z-uw1 b-er ah-n-s\", \"nn\"],\n  \"exuberant\": [\"ih-g z-uw1 b-er ah-n-t\", \"jj\"],\n  \"exude\": [\"ih-g z-uw1-d\", \"vb vbp\"],\n  \"exult\": [\"ih-g-z-ah1-l-t\", \"vb\"],\n  \"exultantly\": [\"ih-g z-ah1-l t-ah-n-t l-iy\", \"rb\"],\n  \"eye\": [\"ay1\", \"nn vb\"],\n  \"eyeball\": [\"ay1 b-ao-l\", \"nn\"],\n  \"eyebrow\": [\"ay1 b-r-aw\", \"nn\"],\n  \"eyeglasses\": [\"ay1 g-l-ae s-ah-z\", \"nn\"],\n  \"eyelash\": [\"ay1 l-ae-sh\", \"nn\"],\n  \"eyelet\": [\"ay1 l-ah-t\", \"nn\"],\n  \"eyelid\": [\"ay1 l-ih-d\", \"nn\"],\n  \"eyepiece\": [\"ay1 p-iy-s\", \"nn\"],\n  \"eyesight\": [\"ay1 s-ay-t\", \"nn\"],\n  \"eyesore\": [\"ay1 s-ao-r\", \"nn\"],\n  \"eyewear\": [\"ay1 w-eh-r\", \"jj nn\"],\n  \"eyewitness\": [\"ay1 w-ih1-t n-ah-s\", \"nn jj\"],\n  \"fable\": [\"f-ey1 b-ah-l\", \"nn\"],\n  \"fabled\": [\"f-ey1 b-ah-l-d\", \"jj\"],\n  \"fabric\": [\"f-ae1 b-r-ih-k\", \"nn\"],\n  \"fabricate\": [\"f-ae1 b-r-ah k-ey-t\", \"vb vbp\"],\n  \"fabricated\": [\"f-ae1 b-r-ih k-ey t-ah-d\", \"vbn vbd jj\"],\n  \"fabrication\": [\"f-ae b-r-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"fabricator\": [\"f-ae1 b-r-ih k-ey t-er\", \"nn\"],\n  \"fabulous\": [\"f-ae1 b-y-ah l-ah-s\", \"jj\"],\n  \"fabulously\": [\"f-ae1 b-y-uw l-ah-s l-iy\", \"rb\"],\n  \"facade\": [\"f-ah s-aa1-d\", \"nn\"],\n  \"face\": [\"f-ey1-s\", \"nn vbp jj rb vb\"],\n  \"faceless\": [\"f-ey1-s l-ah-s\", \"jj\"],\n  \"facelift\": [\"f-ey1-s l-ih-f-t\", \"nn\"],\n  \"facet\": [\"f-ae1 s-ah-t\", \"nn\"],\n  \"facetious\": [\"f-ah s-iy1 sh-ah-s\", \"jj\"],\n  \"facetiously\": [\"f-ah s-iy1 sh-ah-s l-iy\", \"rb\"],\n  \"facial\": [\"f-ey1 sh-ah-l\", \"jj\"],\n  \"facile\": [\"f-ae1 s-ih-l\", \"jj\"],\n  \"facilitate\": [\"f-ah s-ih1 l-ah t-ey-t\", \"vb vbp\"],\n  \"facilitator\": [\"f-ah s-ih1 l-ah t-ey t-er\", \"nn\"],\n  \"facility\": [\"f-ah s-ih1 l-ih t-iy\", \"nn\"],\n  \"facing\": [\"f-ey1 s-ih-ng\", \"vbg jj\"],\n  \"facsimile\": [\"f-ae-k s-ih1 m-ah l-iy\", \"nn jj\"],\n  \"fact\": [\"f-ae1-k-t\", \"nn\"],\n  \"faction\": [\"f-ae1-k sh-ah-n\", \"nn\"],\n  \"factor\": [\"f-ae1-k t-er\", \"nn vb vbp\"],\n  \"factored\": [\"f-ae1-k t-er-d\", \"vbn jj\"],\n  \"factory\": [\"f-ae1-k t-er iy\", \"nn jj\"],\n  \"factual\": [\"f-ae1-k ch-uw ah-l\", \"jj\"],\n  \"factually\": [\"f-ae1-k ch-uw ah l-iy\", \"rb\"],\n  \"faculty\": [\"f-ae1 k-ah-l t-iy\", \"nn\"],\n  \"fad\": [\"f-ae1-d\", \"nn\"],\n  \"faddish\": [\"f-ae1 d-ih-sh\", \"jj\"],\n  \"fade\": [\"f-ey1-d\", \"vb vbp nn\"],\n  \"faded\": [\"f-ey1 d-ah-d\", \"vbn vbd jj\"],\n  \"fading\": [\"f-ey1 d-ih-ng\", \"vbg jj nn\"],\n  \"fail\": [\"f-ey1-l\", \"vb vbp nn\"],\n  \"failed\": [\"f-ey1-l-d\", \"vbd vbn jj\"],\n  \"failure\": [\"f-ey1 l-y-er\", \"nn\"],\n  \"faint\": [\"f-ey1-n-t\", \"jj nn vb\"],\n  \"fainter\": [\"f-ey1-n t-er\", \"jjr\"],\n  \"faintest\": [\"f-ey1-n t-ah-s-t\", \"jjs\"],\n  \"faintly\": [\"f-ey1-n-t l-iy\", \"rb\"],\n  \"fair\": [\"f-eh1-r\", \"jj nn rb\"],\n  \"fairer\": [\"f-eh1 r-er\", \"jjr\"],\n  \"fairest\": [\"f-eh1 r-ih-s-t\", \"jjs\"],\n  \"fairly\": [\"f-eh1-r l-iy\", \"rb\"],\n  \"fairness\": [\"f-eh1-r n-ah-s\", \"nn\"],\n  \"fairway\": [\"f-eh1-r w-ey\", \"nn\"],\n  \"fairy\": [\"f-eh1 r-iy\", \"jj nn\"],\n  \"faith\": [\"f-ey1-th\", \"nn\"],\n  \"faithful\": [\"f-ey1-th f-ah-l\", \"jj nn\"],\n  \"faithfully\": [\"f-ey1-th f-ah l-iy\", \"rb\"],\n  \"fajita\": [\"f-ah jh-iy1 t-ah\", \"nn\"],\n  \"fake\": [\"f-ey1-k\", \"jj nn vb vbp\"],\n  \"falcon\": [\"f-ae1-l k-ah-n\", \"nn\"],\n  \"falconer\": [\"f-ae1-l k-ah n-er\", \"nn\"],\n  \"falconry\": [\"f-ae1-l k-ah-n r-iy\", \"nn\"],\n  \"fall\": [\"f-ao1-l\", \"nn vbp vb\"],\n  \"fallacious\": [\"f-ah l-ey1 sh-ah-s\", \"jj\"],\n  \"fallacy\": [\"f-ae1 l-ah s-iy\", \"nn\"],\n  \"fallback\": [\"f-ao1-l b-ae-k\", \"nn jj\"],\n  \"fallen\": [\"f-aa1 l-ah-n\", \"vbn jj\"],\n  \"fallible\": [\"f-ae1 l-ah b-ah-l\", \"jj\"],\n  \"falling\": [\"f-aa1 l-ih-ng\", \"vbg jj nn\"],\n  \"falloff\": [\"f-ao1-l ao-f\", \"nn\"],\n  \"fallout\": [\"f-ao1-l aw-t\", \"nn\"],\n  \"fallow\": [\"f-ae1 l-ow\", \"jj\"],\n  \"false\": [\"f-ao1-l-s\", \"jj rb\"],\n  \"falsehood\": [\"f-ae1-l-s hh-uh-d\", \"nn\"],\n  \"falsely\": [\"f-ao1-l-s l-iy\", \"rb\"],\n  \"falsification\": [\"f-ae-l s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"falsified\": [\"f-ao1-l s-ah f-ay-d\", \"vbn\"],\n  \"falsify\": [\"f-ao1-l s-ah f-ay\", \"vb\"],\n  \"falsity\": [\"f-ao1-l s-ah t-iy\", \"nn\"],\n  \"falter\": [\"f-ao1-l t-er\", \"vb vbp\"],\n  \"fame\": [\"f-ey1-m\", \"nn vb\"],\n  \"famed\": [\"f-ey1-m-d\", \"jj vbn\"],\n  \"familial\": [\"f-ah m-ih1 l-y-ah-l\", \"jj\"],\n  \"familiar\": [\"f-ah m-ih1 l-y-er\", \"jj nn\"],\n  \"familiarity\": [\"f-ah m-ih l-y-eh1 r-ah t-iy\", \"nn\"],\n  \"familiarize\": [\"f-ah m-ih1 l-y-er ay-z\", \"vb\"],\n  \"family\": [\"f-ae1 m-ah l-iy\", \"nn\"],\n  \"famine\": [\"f-ae1 m-ah-n\", \"nn\"],\n  \"famous\": [\"f-ey1 m-ah-s\", \"jj\"],\n  \"famously\": [\"f-ey1 m-ah-s l-iy\", \"rb\"],\n  \"fan\": [\"f-ae1-n\", \"nn vbp vb\"],\n  \"fanatic\": [\"f-ah n-ae1 t-ih-k\", \"nn jj\"],\n  \"fanatical\": [\"f-ah n-ae1 t-ih k-ah-l\", \"jj\"],\n  \"fanatically\": [\"f-ah n-ae1 t-ih k-ah l-iy\", \"rb\"],\n  \"fanaticism\": [\"f-ah n-ae1 t-ah s-ih z-ah-m\", \"nn\"],\n  \"fancier\": [\"f-ae1-n s-iy er\", \"jjr\"],\n  \"fanciest\": [\"f-ae1-n s-iy ah-s-t\", \"jjs\"],\n  \"fanciful\": [\"f-ae1-n s-ih f-ah-l\", \"jj\"],\n  \"fancy\": [\"f-ae1-n s-iy\", \"jj nn vb\"],\n  \"fanfare\": [\"f-ae1-n f-eh-r\", \"nn\"],\n  \"fang\": [\"f-ae1-ng\", \"nn\"],\n  \"fanny\": [\"f-ae1 n-iy\", \"nn\"],\n  \"fantasia\": [\"f-ae-n t-ey1 zh-ah\", \"nn\"],\n  \"fantasize\": [\"f-ae1-n t-ah s-ay-z\", \"vbp vb\"],\n  \"fantastic\": [\"f-ae-n t-ae1 s-t-ih-k\", \"jj\"],\n  \"fantastically\": [\"f-ae-n t-ae1 s-t-ih-k l-iy\", \"rb\"],\n  \"fantasy\": [\"f-ae1-n t-ah s-iy\", \"nn\"],\n  \"far\": [\"f-aa1-r\", \"rb in jj\"],\n  \"faraway\": [\"f-aa1 r-ah w-ey1\", \"jj\"],\n  \"farce\": [\"f-aa1-r-s\", \"nn\"],\n  \"fare\": [\"f-eh1-r\", \"nn vbp vb\"],\n  \"farewell\": [\"f-eh-r w-eh1-l\", \"nn uh\"],\n  \"farfetched\": [\"f-aa1-r f-eh1-ch-t\", \"jj\"],\n  \"farm\": [\"f-aa1-r-m\", \"nn vb\"],\n  \"farmed\": [\"f-aa1-r-m-d\", \"vbd jj\"],\n  \"farmer\": [\"f-aa1-r m-er\", \"nn\"],\n  \"farmhand\": [\"f-aa1-r-m hh-ae-n-d\", \"nn\"],\n  \"farmhouse\": [\"f-aa1-r-m hh-aw-s\", \"nn\"],\n  \"farmland\": [\"f-aa1-r-m l-ae-n-d\", \"nn\"],\n  \"faro\": [\"f-eh1 r-ow\", \"nn\"],\n  \"farther\": [\"f-aa1-r dh-er\", \"rb rbr\"],\n  \"farthest\": [\"f-aa1-r dh-ah-s-t\", \"jjs rbs\"],\n  \"fascinate\": [\"f-ae1 s-ah n-ey-t\", \"vb vbp\"],\n  \"fascinated\": [\"f-ae1 s-ah n-ey t-ah-d\", \"vbn jj vbd\"],\n  \"fascinating\": [\"f-ae1 s-ah n-ey t-ih-ng\", \"jj\"],\n  \"fascination\": [\"f-ae s-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"fascism\": [\"f-ae1 sh-ih z-ah-m\", \"nn\"],\n  \"fascist\": [\"f-ae1 sh-ah-s-t\", \"jj\"],\n  \"fashion\": [\"f-ae1 sh-ah-n\", \"nn vb\"],\n  \"fashionable\": [\"f-ae1 sh-ah-n ah b-ah-l\", \"jj nn\"],\n  \"fast\": [\"f-ae1-s-t\", \"rb jj nn rp\"],\n  \"fastball\": [\"f-ae1-s-t b-ao-l\", \"nn\"],\n  \"fasten\": [\"f-ae1 s-ah-n\", \"vb vbp\"],\n  \"fastener\": [\"f-ae1 s-ah n-er\", \"nn\"],\n  \"fastening\": [\"f-ae1 s-ah n-ih-ng\", \"nn\"],\n  \"faster\": [\"f-ae1 s-t-er\", \"rbr jjr rb\"],\n  \"fastest\": [\"f-ae1 s-t-ah-s-t\", \"jjs rbs\"],\n  \"fastidious\": [\"f-ae s-t-ih1 d-iy ah-s\", \"jj\"],\n  \"fastness\": [\"f-ae1-s-t n-ah-s\", \"nn\"],\n  \"fat\": [\"f-ae1-t\", \"jj nn\"],\n  \"fatal\": [\"f-ey1 t-ah-l\", \"jj\"],\n  \"fatality\": [\"f-ah t-ae1 l-ah t-iy\", \"nn\"],\n  \"fatally\": [\"f-ey1 t-ah l-iy\", \"rb\"],\n  \"fate\": [\"f-ey1-t\", \"nn\"],\n  \"fateful\": [\"f-ey1-t f-ah-l\", \"jj\"],\n  \"father\": [\"f-aa1 dh-er\", \"nn vb\"],\n  \"fatherly\": [\"f-aa1 dh-er l-iy\", \"jj\"],\n  \"fathom\": [\"f-ae1 dh-ah-m\", \"vb\"],\n  \"fatigue\": [\"f-ah t-iy1-g\", \"nn vb vbp\"],\n  \"fatigued\": [\"f-ah t-iy1-g-d\", \"vbn jj\"],\n  \"fatten\": [\"f-ae1 t-ah-n\", \"vb vbp\"],\n  \"fatter\": [\"f-ae1 t-er\", \"jjr\"],\n  \"fatty\": [\"f-ae1 t-iy\", \"jj\"],\n  \"fatuous\": [\"f-ae1 ch-ah-w ah-s\", \"jj\"],\n  \"faucet\": [\"f-ao1 s-ah-t\", \"nn\"],\n  \"fault\": [\"f-ao1-l-t\", \"nn vb vbp\"],\n  \"faulty\": [\"f-ao1-l t-iy\", \"jj\"],\n  \"fauna\": [\"f-ao1 n-ah\", \"nn\"],\n  \"faux\": [\"f-ao1-k-s\", \"jj\"],\n  \"favor\": [\"f-ey1 v-er\", \"nn vbp vb\"],\n  \"favorable\": [\"f-ey1 v-er ah b-ah-l\", \"jj\"],\n  \"favorably\": [\"f-ey1 v-er ah b-l-iy\", \"rb\"],\n  \"favored\": [\"f-ey1 v-er-d\", \"vbn vbd jj\"],\n  \"favorite\": [\"f-ey1 v-er ih-t\", \"jj nn\"],\n  \"favoritism\": [\"f-ey1 v-er ih t-ih z-ah-m\", \"nn\"],\n  \"fawn\": [\"f-ao1-n\", \"nn jj vb\"],\n  \"fax\": [\"f-ae1-k-s\", \"nn vb\"],\n  \"faze\": [\"f-ey1-z\", \"vb\"],\n  \"fealty\": [\"f-iy1 ah-l t-iy\", \"nn\"],\n  \"fear\": [\"f-ih1-r\", \"nn vb vbp\"],\n  \"feared\": [\"f-ih1-r-d\", \"vbd vbn jj\"],\n  \"fearful\": [\"f-ih1-r f-ah-l\", \"jj\"],\n  \"fearless\": [\"f-ih1-r l-ah-s\", \"jj\"],\n  \"fearsome\": [\"f-ih1-r s-ah-m\", \"jj\"],\n  \"feasibility\": [\"f-iy z-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"feasible\": [\"f-iy1 z-ah b-ah-l\", \"jj\"],\n  \"feast\": [\"f-iy1-s-t\", \"nn vb\"],\n  \"feat\": [\"f-iy1-t\", \"nn\"],\n  \"feather\": [\"f-eh1 dh-er\", \"nn vb\"],\n  \"featherbedding\": [\"f-eh1 dh-er b-eh d-ih-ng\", \"nn\"],\n  \"feathered\": [\"f-eh1 dh-er-d\", \"jj vbn\"],\n  \"featherless\": [\"f-eh1 dh-er l-ah-s\", \"jj\"],\n  \"feathery\": [\"f-eh1 dh-er iy\", \"jj\"],\n  \"feature\": [\"f-iy1 ch-er\", \"nn vbp jj vb\"],\n  \"featured\": [\"f-iy1 ch-er-d\", \"vbn vbd jj\"],\n  \"featureless\": [\"f-iy1 ch-er l-ah-s\", \"jj\"],\n  \"fecal\": [\"f-iy1 k-ah-l\", \"jj\"],\n  \"feckless\": [\"f-eh1-k l-ih-s\", \"jj\"],\n  \"fed\": [\"f-eh1-d\", 'vbd vbn'],\n  \"federal\": [\"f-eh1 d-er ah-l\", \"jj\"],\n  \"federalist\": [\"f-eh1 d-er ah l-ih-s-t\", \"nn\"],\n  \"federalized\": [\"f-eh1 d-er ah l-ay-z-d\", \"jj\"],\n  \"federally\": [\"f-eh1 d-er ah l-iy\", \"rb\"],\n  \"federation\": [\"f-eh d-er ey1 sh-ah-n\", \"nn\"],\n  \"fedora\": [\"f-ih d-ao1 r-ah\", \"nn\"],\n  \"fee\": [\"f-iy1\", \"nn\"],\n  \"feeble\": [\"f-iy1 b-ah-l\", \"jj\"],\n  \"feebly\": [\"f-iy1 b-l-iy\", \"rb\"],\n  \"feed\": [\"f-iy1-d\", \"nn vb\"],\n  \"feedback\": [\"f-iy1-d b-ae-k\", \"nn\"],\n  \"feeder\": [\"f-iy1 d-er\", \"nn\"],\n  \"feedlot\": [\"f-iy1-d l-aa-t\", \"nn\"],\n  \"feedstock\": [\"f-iy1-d s-t-aa-k\", \"nn\"],\n  \"feel\": [\"f-iy1-l\", \"vb vbp nn\"],\n  \"feeler\": [\"f-iy1 l-er\", \"nn\"],\n  \"feeling\": [\"f-iy1 l-ih-ng\", \"nn vbg\"],\n  \"feign\": [\"f-ey1-n\", \"vb\"],\n  \"feigned\": [\"f-ey1-n-d\", \"jj vbn\"],\n  \"feint\": [\"f-ey1-n-t\", \"nn vb\"],\n  \"feisty\": [\"f-ay1 s-t-iy\", \"jj\"],\n  \"felicitous\": [\"f-ih l-ih1 s-ah t-ah-s\", \"jj\"],\n  \"felicity\": [\"f-ih l-ih1 s-ah t-iy\", \"nn\"],\n  \"feline\": [\"f-iy1 l-ay-n\", \"jj\"],\n  \"fell\": [\"f-eh1-l\", \"vbd jj nn vbn\"],\n  \"felled\": [\"f-eh1-l-d\", \"vbn vbd\"],\n  \"feller\": [\"f-eh1 l-er\", \"nn\"],\n  \"fellow\": [\"f-eh1 l-ow\", \"nn jj\"],\n  \"fellowship\": [\"f-eh1 l-ow sh-ih-p\", \"nn\"],\n  \"felon\": [\"f-eh1 l-ah-n\", \"nn\"],\n  \"felony\": [\"f-eh1 l-ah n-iy\", \"nn\"],\n  \"felt\": [\"f-eh1-l-t\", \"vbd vbn\"],\n  \"female\": [\"f-iy1 m-ey-l\", \"jj nn\"],\n  \"feminine\": [\"f-eh1 m-ah n-ah-n\", \"jj nn\"],\n  \"femininity\": [\"f-eh m-ah n-ih1 n-ah t-iy\", \"nn\"],\n  \"feminism\": [\"f-eh1 m-ih n-ih z-ah-m\", \"nn\"],\n  \"feminist\": [\"f-eh1 m-ah n-ah-s-t\", \"jj nn\"],\n  \"fence\": [\"f-eh1-n-s\", \"nn vb\"],\n  \"fenced\": [\"f-eh1-n-s-t\", \"jj vbn\"],\n  \"fencing\": [\"f-eh1-n s-ih-ng\", \"nn\"],\n  \"fend\": [\"f-eh1-n-d\", \"vb\"],\n  \"fender\": [\"f-eh1-n d-er\", \"nn\"],\n  \"fennel\": [\"f-eh1 n-ah-l\", \"nn\"],\n  \"fenugreek\": [\"f-eh1 n-uw g-r-iy-k\", \"nn\"],\n  \"ferment\": [\"f-er m-eh1-n-t\", \"nn vb\"],\n  \"fermentation\": [\"f-er m-ah-n t-ey1 sh-ah-n\", \"jj nn\"],\n  \"fern\": [\"f-er1-n\", \"nn\"],\n  \"fernery\": [\"f-er1 n-er iy\", \"nn\"],\n  \"ferocious\": [\"f-er ow1 sh-ah-s\", \"jj\"],\n  \"ferociously\": [\"f-er ow1 sh-ih-s l-iy\", \"rb\"],\n  \"ferocity\": [\"f-er aa1 s-ah t-iy\", \"nn\"],\n  \"ferret\": [\"f-eh1 r-ah-t\", \"vb nn\"],\n  \"ferried\": [\"f-eh1 r-iy-d\", \"vbd vbn\"],\n  \"ferris\": [\"f-eh1 r-ih-s\", \"jj\"],\n  \"ferromagnetic\": [\"f-eh r-ow m-ae-g n-eh1 t-ih-k\", \"jj\"],\n  \"ferry\": [\"f-eh1 r-iy\", \"nn vb\"],\n  \"fertile\": [\"f-er1 t-ah-l\", \"jj\"],\n  \"fertility\": [\"f-er t-ih1 l-ah t-iy\", \"nn\"],\n  \"fertilization\": [\"f-er t-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"fertilize\": [\"f-er1-t-ah-l-ay-z\", \"vb\"],\n  \"fertilized\": [\"f-er1 t-ah l-ay-z-d\", \"vbn jj\"],\n  \"fertilizer\": [\"f-er1 t-ah l-ay z-er\", \"nn\"],\n  \"fervent\": [\"f-er1 v-ah-n-t\", \"jj\"],\n  \"fervently\": [\"f-er1 v-ah-n-t l-iy\", \"rb\"],\n  \"fervid\": [\"f-er1 v-ah-d\", \"nn\"],\n  \"fervor\": [\"f-er1 v-er\", \"nn\"],\n  \"fest\": [\"f-eh1-s-t\", \"nn jjs\"],\n  \"fester\": [\"f-eh1 s-t-er\", \"vb\"],\n  \"festival\": [\"f-eh1 s-t-ah v-ah-l\", \"nn\"],\n  \"festive\": [\"f-eh1 s-t-ih-v\", \"jj\"],\n  \"festivity\": [\"f-eh s-t-ih1 v-ah t-iy\", \"nn\"],\n  \"festoon\": [\"f-eh-s-t-uw1-n\", \"vb\"],\n  \"fetal\": [\"f-iy1 t-ah-l\", \"jj\"],\n  \"fetch\": [\"f-eh1-ch\", \"vb vbp\"],\n  \"fete\": [\"f-ey1-t\", \"vb\"],\n  \"fetid\": [\"f-eh1 t-ah-d\", \"jj\"],\n  \"fetish\": [\"f-eh1 t-ih-sh\", \"nn\"],\n  \"fetter\": [\"f-eh1-t-er\", \"vb\"],\n  \"fetus\": [\"f-iy1 t-ah-s\", \"nn\"],\n  \"feud\": [\"f-y-uw1-d\", \"nn vb\"],\n  \"feudal\": [\"f-y-uw1 d-ah-l\", \"jj\"],\n  \"feudalism\": [\"f-y-uw1 d-ah l-ih z-ah-m\", \"nn\"],\n  \"feudalistic\": [\"f-y-uw d-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"fever\": [\"f-iy1 v-er\", \"nn\"],\n  \"fevered\": [\"f-iy1 v-er-d\", \"jj\"],\n  \"feverish\": [\"f-iy1 v-er ih-sh\", \"jj\"],\n  \"feverishly\": [\"f-eh1 v-er ih-sh l-iy\", \"rb\"],\n  \"few\": [\"f-y-uw1\", \"jj\"],\n  \"fewer\": [\"f-y-uw1 er\", \"jjr rb rbr\"],\n  \"fewest\": [\"f-y-uw1 ah-s-t\", \"jjs\"],\n  \"fiance\": [\"f-iy aa1-n s-ey\", \"nn\"],\n  \"fiancee\": [\"f-iy ae1-n s-iy\", \"nn\"],\n  \"fiasco\": [\"f-iy ae1-s k-ow\", \"nn\"],\n  \"fiat\": [\"f-ay1 ae-t\", \"nn\"],\n  \"fiber\": [\"f-ay1 b-er\", \"nn\"],\n  \"fiberglass\": [\"f-ay1 b-er g-l-ae-s\", \"nn\"],\n  \"fiberoptic\": [\"f-ay1 b-er aa-p t-ih-k\", \"jj\"],\n  \"fibrillation\": [\"f-ih b-r-ih l-ey1 sh-ah-n\", \"nn\"],\n  \"fibrin\": [\"f-ay1 b-r-ah-n\", \"nn\"],\n  \"fibrosis\": [\"f-ay b-r-ow1 s-ah-s\", \"nn\"],\n  \"fibrous\": [\"f-ay1 b-r-ah-s\", \"jj\"],\n  \"fickle\": [\"f-ih1 k-ah-l\", \"jj\"],\n  \"fickleness\": [\"f-ih1 k-ah-l n-ah-s\", \"nn\"],\n  \"fiction\": [\"f-ih1-k sh-ah-n\", \"nn\"],\n  \"fictional\": [\"f-ih1-k sh-ah n-ah-l\", \"jj\"],\n  \"fictionalize\": [\"f-ih1-k-sh-ah-n-ah-l-ay-z\", \"vb\"],\n  \"fictitious\": [\"f-ih-k t-ih1 sh-ah-s\", \"jj\"],\n  \"fiddle\": [\"f-ih1 d-ah-l\", \"nn vb\"],\n  \"fiddling\": [\"f-ih1-d l-ih-ng\", \"nn jj vbg\"],\n  \"fidelity\": [\"f-ah d-eh1 l-ah t-iy\", \"nn\"],\n  \"fidget\": [\"f-ih1-jh-ih-t\", \"vb\"],\n  \"fiduciary\": [\"f-ah d-uw1 sh-iy eh r-iy\", \"jj\"],\n  \"fiefdom\": [\"f-iy1-f d-ah-m\", \"nn\"],\n  \"field\": [\"f-iy1-l-d\", \"nn jj vb vbp\"],\n  \"fielder\": [\"f-iy1-l d-er\", \"nn\"],\n  \"fieldwork\": [\"f-iy1-l-d w-er-k\", \"nn\"],\n  \"fiend\": [\"f-iy1-n-d\", \"nn\"],\n  \"fiendish\": [\"f-iy1-n d-ih-sh\", \"jj\"],\n  \"fierce\": [\"f-ih1-r-s\", \"jj\"],\n  \"fiercely\": [\"f-ih1-r-s l-iy\", \"rb\"],\n  \"fiercer\": [\"f-ih1-r s-er\", \"jjr\"],\n  \"fiercest\": [\"f-ih1-r s-ah-s-t\", \"jjs\"],\n  \"fiery\": [\"f-ay1 er iy\", \"jj\"],\n  \"fiesta\": [\"f-iy eh1 s-t-ah\", \"nn\"],\n  \"fifth\": [\"f-ih1-f-th\", \"jj nn rb\"],\n  \"fig\": [\"f-ih1-g\", \"nn\"],\n  \"fight\": [\"f-ay1-t\", \"nn vb vbp\"],\n  \"fighter\": [\"f-ay1 t-er\", \"nn\"],\n  \"fighting\": [\"f-ay1 t-ih-ng\", \"vbg jj\"],\n  \"figurative\": [\"f-ih1 g-y-er ah t-ih-v\", \"jj\"],\n  \"figuratively\": [\"f-ih g-y-uh1 r-ah t-ih-v l-iy\", \"rb\"],\n  \"figure\": [\"f-ih1 g-y-er\", \"nn vb vbp vbz\"],\n  \"figured\": [\"f-ih1 g-y-er-d\", \"vbd jj vbn\"],\n  \"figurehead\": [\"f-ih1 g-y-er hh-eh-d\", \"nn\"],\n  \"filament\": [\"f-ih1 l-ah m-ah-n-t\", \"nn\"],\n  \"filbert\": [\"f-ih1-l b-er-t\", \"jj\"],\n  \"filch\": [\"f-ih1-l-ch\", \"vb\"],\n  \"file\": [\"f-ay1-l\", \"vb nn vbp\"],\n  \"filer\": [\"f-ay1 l-er\", \"nn\"],\n  \"filet\": [\"f-ih l-ey1\", \"nn\"],\n  \"filial\": [\"f-ih1 l-iy ah-l\", \"jj\"],\n  \"filibuster\": [\"f-ih1 l-ah b-ah s-t-er\", \"nn vb\"],\n  \"filigree\": [\"f-ih1 l-ah g-r-iy\", \"jj nn\"],\n  \"filing\": [\"f-ay1 l-ih-ng\", \"nn vbg\"],\n  \"fill\": [\"f-ih1-l\", \"vb vbp nn\"],\n  \"filled\": [\"f-ih1-l-d\", \"vbn jj vbd\"],\n  \"filler\": [\"f-ih1 l-er\", \"nn\"],\n  \"fillet\": [\"f-ah-l-ey1\", \"vb\"],\n  \"fillip\": [\"f-ih1 l-ah-p\", \"nn\"],\n  \"filly\": [\"f-ih1 l-iy\", \"nn\"],\n  \"film\": [\"f-ih1-l-m\", \"nn vb\"],\n  \"filmed\": [\"f-ih1-l-m-d\", \"vbn vbd jj\"],\n  \"filmmaker\": [\"f-ih1-l m-ey k-er\", \"nn\"],\n  \"filmmaking\": [\"f-ih1-l m-ey k-ih-ng\", \"nn\"],\n  \"filter\": [\"f-ih1-l t-er\", \"nn vb\"],\n  \"filtered\": [\"f-ih1-l t-er-d\", \"vbn jj\"],\n  \"filth\": [\"f-ih1-l-th\", \"nn\"],\n  \"filthy\": [\"f-ih1-l th-iy\", \"jj\"],\n  \"filtration\": [\"f-ih-l t-r-ey1 sh-ah-n\", \"nn\"],\n  \"fin\": [\"f-ih1-n\", \"nn\"],\n  \"final\": [\"f-ay1 n-ah-l\", \"jj\"],\n  \"finale\": [\"f-ah n-ae1 l-iy\", \"nn\"],\n  \"finalist\": [\"f-ay1 n-ah l-ih-s-t\", \"nn\"],\n  \"finality\": [\"f-ay n-ae1 l-ah t-iy\", \"nn\"],\n  \"finalize\": [\"f-ay1-n-ah-l-ay-z\", \"vb\"],\n  \"finally\": [\"f-ay1 n-ah l-iy\", \"rb\"],\n  \"finance\": [\"f-ah n-ae1-n-s\", \"nn vbp vb\"],\n  \"financed\": [\"f-ih n-ae1-n-s-t\", \"vbn jj vbd\"],\n  \"financial\": [\"f-ah n-ae1-n sh-ah-l\", \"jj\"],\n  \"financially\": [\"f-ah n-ae1-n sh-ah l-iy\", \"rb\"],\n  \"financier\": [\"f-ih n-ah-n s-ih1-r\", \"nn\"],\n  \"financing\": [\"f-ah n-ae1-n s-ih-ng\", \"nn jj vbg\"],\n  \"find\": [\"f-ay1-n-d\", \"vb vbp nn\"],\n  \"finder\": [\"f-ay1-n d-er\", \"nn\"],\n  \"fine\": [\"f-ay1-n\", \"jj nn rb vb\"],\n  \"finely\": [\"f-ay1-n l-iy\", \"rb\"],\n  \"finer\": [\"f-ay1 n-er\", \"jjr\"],\n  \"finery\": [\"f-ay1 n-er iy\", \"nn\"],\n  \"finesse\": [\"f-ih n-eh1-s\", \"nn vb\"],\n  \"finest\": [\"f-ay1 n-ah-s-t\", \"jjs\"],\n  \"finger\": [\"f-ih1-ng g-er\", \"nn vb\"],\n  \"fingernail\": [\"f-ih1-ng g-er n-ey-l\", \"nn\"],\n  \"fingerprint\": [\"f-ih1-ng g-er p-r-ih-n-t\", \"nn vb\"],\n  \"fingertip\": [\"f-ih1-ng g-er t-ih-p\", \"nn\"],\n  \"finicky\": [\"f-ih1 n-ah k-iy\", \"jj\"],\n  \"fining\": [\"f-ay1 n-ih-ng\", \"nn\"],\n  \"finish\": [\"f-ih1 n-ih-sh\", \"vb nn vbp\"],\n  \"finished\": [\"f-ih1 n-ih-sh-t\", \"vbd jj vbn\"],\n  \"finisher\": [\"f-ih1 n-ih sh-er\", \"nn\"],\n  \"finishing\": [\"f-ih1 n-ih sh-ih-ng\", \"vbg jj nn\"],\n  \"finite\": [\"f-ay1 n-ay-t\", \"jj nn\"],\n  \"fir\": [\"f-er1\", \"nn\"],\n  \"fire\": [\"f-ay1 er\", \"nn vb\"],\n  \"firearm\": [\"f-ay1 er aa-r-m\", \"nn\"],\n  \"fireball\": [\"f-ay1 er b-ao-l\", \"nn\"],\n  \"firebomb\": [\"f-ay1-er-b-aa-m\", \"vb\"],\n  \"firebombing\": [\"f-ay1 er b-aa m-ih-ng\", \"nn\"],\n  \"firebrand\": [\"f-ay1 er b-r-ae-n-d\", \"nn\"],\n  \"firebug\": [\"f-ay1 er b-ah-g\", \"nn\"],\n  \"firecracker\": [\"f-ay1 er k-r-ae k-er\", \"nn\"],\n  \"firefighter\": [\"f-ay1-r f-ay t-er\", \"nn\"],\n  \"firefighting\": [\"f-ay1-r f-ay t-ih-ng\", \"nn\"],\n  \"firehouse\": [\"f-ay1 er hh-aw-s\", \"nn\"],\n  \"fireman\": [\"f-ay1-r m-ah-n\", \"nn\"],\n  \"fireplace\": [\"f-ay1 er p-l-ey-s\", \"nn\"],\n  \"firepower\": [\"f-ay1-r p-aw er\", \"nn\"],\n  \"fireproof\": [\"f-ay1-er-p-r-uw-f\", \"vb\"],\n  \"firestorm\": [\"f-ay1-r s-t-ao-r-m\", \"nn\"],\n  \"fireweed\": [\"f-ay1 er w-iy-d\", \"nn\"],\n  \"firewood\": [\"f-ay1 er w-uh-d\", \"nn\"],\n  \"firework\": [\"f-ay1-r w-er-k\", \"nn\"],\n  \"firing\": [\"f-ay1 r-ih-ng\", \"vbg jj nn\"],\n  \"firm\": [\"f-er1-m\", \"nn jj vb\"],\n  \"firmer\": [\"f-er1 m-er\", \"jjr rb rbr\"],\n  \"firmly\": [\"f-er1-m l-iy\", \"rb\"],\n  \"firmness\": [\"f-er1-m n-ah-s\", \"nn\"],\n  \"first\": [\"f-er1-s-t\", \"jj rb nn\"],\n  \"firsthand\": [\"f-er-s-t hh-ae1-n-d\", \"rb jj nn\"],\n  \"fiscal\": [\"f-ih1-s k-ah-l\", \"jj in nn\"],\n  \"fiscally\": [\"f-ih1-s k-ah l-iy\", \"rb\"],\n  \"fish\": [\"f-ih1-sh\", \"nn vb\"],\n  \"fishbowl\": [\"f-ih1-sh b-ow-l\", \"nn\"],\n  \"fisher\": [\"f-ih1 sh-er\", \"nn\"],\n  \"fisherman\": [\"f-ih1 sh-er m-ae-n\", \"nn\"],\n  \"fishery\": [\"f-ih1 sh-er iy\", \"nn\"],\n  \"fishing\": [\"f-ih1 sh-ih-ng\", \"nn vbg jj\"],\n  \"fishy\": [\"f-ih1 sh-iy\", \"jj\"],\n  \"fission\": [\"f-ih1 sh-ah-n\", \"nn\"],\n  \"fissure\": [\"f-ih1-sh-er\", \"vb\"],\n  \"fist\": [\"f-ih1-s-t\", \"nn\"],\n  \"fit\": [\"f-ih1-t\", \"vb vbn vbp jj nn rb vbd\"],\n  \"fitful\": [\"f-ih1-t f-ah-l\", \"jj\"],\n  \"fitfully\": [\"f-ih1-t f-ah l-iy\", \"rb\"],\n  \"fitness\": [\"f-ih1-t n-ah-s\", \"nn\"],\n  \"fitted\": [\"f-ih1 t-ah-d\", \"vbn vbd jj\"],\n  \"fittest\": [\"f-ih1 t-ah-s-t\", \"jjs\"],\n  \"fitting\": [\"f-ih1 t-ih-ng\", \"jj nn vbg\"],\n  \"five\": [\"f-ay1-v\", \"cd\"],\n  \"fivefold\": [\"f-ay1-v f-ow-l-d\", \"jj rb\"],\n  \"fix\": [\"f-ih1-k-s\", \"vb vbp nn\"],\n  \"fixable\": [\"f-ih1-k s-ah b-ah-l\", \"jj\"],\n  \"fixate\": [\"f-ih1-k-s-ey-t\", \"vb\"],\n  \"fixation\": [\"f-ih-k s-ey1 sh-ah-n\", \"nn\"],\n  \"fixed\": [\"f-ih1-k-s-t\", \"vbn jj vbd\"],\n  \"fixture\": [\"f-ih1-k-s ch-er\", \"nn\"],\n  \"fizzle\": [\"f-ih1-z-ah-l\", \"vb\"],\n  \"fjord\": [\"f-y-ao1-r-d\", \"nn\"],\n  \"flabbergast\": [\"f-l-ae1-b-er-g-ae-s-t\", \"vb\"],\n  \"flabbergasted\": [\"f-l-ae1 b-er g-ae s-t-ih-d\", \"jj vbn\"],\n  \"flaccid\": [\"f-l-ae1-k s-ih-d\", \"jj\"],\n  \"flag\": [\"f-l-ae1-g\", \"nn vb\"],\n  \"flagellate\": [\"f-l-ae1-jh-ah-l-ey-t\", \"vb\"],\n  \"flageolet\": [\"f-l-ae jh-ah l-eh1-t\", \"nn\"],\n  \"flagging\": [\"f-l-ae1 g-ih-ng\", \"jj vbg\"],\n  \"flagpole\": [\"f-l-ae1-g p-ow-l\", \"nn\"],\n  \"flagrant\": [\"f-l-ey1 g-r-ah-n-t\", \"jj\"],\n  \"flagrantly\": [\"f-l-ey1 g-r-ah-n-t l-iy\", \"rb\"],\n  \"flagship\": [\"f-l-ae1-g sh-ih-p\", \"nn jj\"],\n  \"flail\": [\"f-l-ey1-l\", \"nn vb\"],\n  \"flair\": [\"f-l-eh1-r\", \"nn\"],\n  \"flak\": [\"f-l-ae1-k\", \"nn\"],\n  \"flake\": [\"f-l-ey1-k\", \"nn\"],\n  \"flaky\": [\"f-l-ey1 k-iy\", \"jj\"],\n  \"flamboyant\": [\"f-l-ae-m b-oy1 ah-n-t\", \"jj\"],\n  \"flamboyantly\": [\"f-l-ae-m b-oy1 ah-n-t l-iy\", \"rb\"],\n  \"flame\": [\"f-l-ey1-m\", \"nn vbp vb\"],\n  \"flaming\": [\"f-l-ey1 m-ih-ng\", \"jj vbg\"],\n  \"flammable\": [\"f-l-ae1 m-ah b-ah-l\", \"jj\"],\n  \"flange\": [\"f-l-ae1-n-jh\", \"nn\"],\n  \"flank\": [\"f-l-ae1-ng-k\", \"nn vb\"],\n  \"flannel\": [\"f-l-ae1 n-ah-l\", \"nn\"],\n  \"flap\": [\"f-l-ae1-p\", \"nn\"],\n  \"flapper\": [\"f-l-ae1 p-er\", \"nn\"],\n  \"flapping\": [\"f-l-ae1 p-ih-ng\", \"vbg jj\"],\n  \"flare\": [\"f-l-eh1-r\", \"nn vb vbp\"],\n  \"flared\": [\"f-l-eh1-r-d\", \"vbd vbn jj\"],\n  \"flaring\": [\"f-l-eh1 r-ih-ng\", \"vbg jj\"],\n  \"flash\": [\"f-l-ae1-sh\", \"nn vbp jj vb\"],\n  \"flashback\": [\"f-l-ae1-sh b-ae-k\", \"nn\"],\n  \"flasher\": [\"f-l-ae1 sh-er\", \"nn\"],\n  \"flashier\": [\"f-l-ae1 sh-iy er\", \"jjr\"],\n  \"flashlight\": [\"f-l-ae1-sh l-ay-t\", \"nn\"],\n  \"flashpoint\": [\"f-l-ae1-sh p-oy-n-t\", \"nn\"],\n  \"flashy\": [\"f-l-ae1 sh-iy\", \"jj\"],\n  \"flask\": [\"f-l-ae1-s-k\", \"nn\"],\n  \"flat\": [\"f-l-ae1-t\", \"jj nn rb\"],\n  \"flathead\": [\"f-l-ae1-t hh-eh-d\", \"jj\"],\n  \"flatland\": [\"f-l-ae1-t l-ae-n-d\", \"nn\"],\n  \"flatly\": [\"f-l-ae1-t l-iy\", \"rb\"],\n  \"flatness\": [\"f-l-ae1-t n-ah-s\", \"nn\"],\n  \"flatten\": [\"f-l-ae1 t-ah-n\", \"vb\"],\n  \"flattened\": [\"f-l-ae1 t-ah-n-d\", \"vbn vbd jj\"],\n  \"flatter\": [\"f-l-ae1 t-er\", \"vb\"],\n  \"flattered\": [\"f-l-ae1 t-er-d\", \"vbn jj vbd\"],\n  \"flattering\": [\"f-l-ae1 t-er ih-ng\", \"jj\"],\n  \"flattery\": [\"f-l-ae1 t-er iy\", \"nn\"],\n  \"flattish\": [\"f-l-ae1 t-ih-sh\", \"jj\"],\n  \"flatulent\": [\"f-l-ae1 ch-ah l-ah-n-t\", \"jj\"],\n  \"flatware\": [\"f-l-ae1-t w-eh-r\", \"nn\"],\n  \"flaunt\": [\"f-l-ao1-n-t\", \"vb vbp\"],\n  \"flavor\": [\"f-l-ey1 v-er\", \"nn vb\"],\n  \"flavored\": [\"f-l-ey1 v-er-d\", \"jj vbn\"],\n  \"flavorful\": [\"f-l-ey1 v-er f-ah-l\", \"jj\"],\n  \"flaw\": [\"f-l-ao1\", \"nn vb\"],\n  \"flawed\": [\"f-l-ao1-d\", \"jj vbn\"],\n  \"flawless\": [\"f-l-ao1 l-ah-s\", \"jj\"],\n  \"flax\": [\"f-l-ae1-k-s\", \"nn\"],\n  \"flaxseed\": [\"f-l-ae1-k s-iy-d\", \"nn\"],\n  \"flea\": [\"f-l-iy1\", \"nn\"],\n  \"fleck\": [\"f-l-eh1-k\", \"nn\"],\n  \"fled\": [\"f-l-eh1-d\", \"vbd vbn\"],\n  \"fledge\": [\"f-l-eh1-jh\", \"vb\"],\n  \"fledgling\": [\"f-l-eh1-jh l-ih-ng\", \"nn jj\"],\n  \"flee\": [\"f-l-iy1\", \"vb\"],\n  \"fleece\": [\"f-l-iy1-s\", \"nn vb\"],\n  \"fleet\": [\"f-l-iy1-t\", \"nn jj\"],\n  \"fleeting\": [\"f-l-iy1 t-ih-ng\", \"jj\"],\n  \"flesh\": [\"f-l-eh1-sh\", \"nn vb\"],\n  \"fleshy\": [\"f-l-eh1 sh-iy\", \"jj\"],\n  \"flew\": [\"f-l-uw1\", \"vbd\"],\n  \"flex\": [\"f-l-eh1-k-s\", \"nn jj vb\"],\n  \"flexibility\": [\"f-l-eh-k s-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"flexible\": [\"f-l-eh1-k s-ah b-ah-l\", \"jj\"],\n  \"flextime\": [\"f-l-eh1-k s-t-ay-m\", \"nn\"],\n  \"flick\": [\"f-l-ih1-k\", \"nn vb\"],\n  \"flicker\": [\"f-l-ih1 k-er\", \"nn vb\"],\n  \"flied\": [\"f-l-ay1-d\", \"vbd\"],\n  \"flier\": [\"f-l-ay1 er\", \"nn\"],\n  \"flight\": [\"f-l-ay1-t\", \"nn\"],\n  \"flighty\": [\"f-l-ay1 t-iy\", \"jj\"],\n  \"flimsy\": [\"f-l-ih1-m z-iy\", \"jj\"],\n  \"flinch\": [\"f-l-ih1-n-ch\", \"vb\"],\n  \"fling\": [\"f-l-ih1-ng\", \"nn vb\"],\n  \"flint\": [\"f-l-ih1-n-t\", \"nn\"],\n  \"flinty\": [\"f-l-ih1-n t-iy\", \"jj\"],\n  \"flip\": [\"f-l-ih1-p\", \"jj vb\"],\n  \"flippant\": [\"f-l-ih1 p-ah-n-t\", \"jj\"],\n  \"flipper\": [\"f-l-ih1 p-er\", \"nn\"],\n  \"flipping\": [\"f-l-ih1 p-ih-ng\", \"vbg jj rb\"],\n  \"flirt\": [\"f-l-er1-t\", \"vb vbp\"],\n  \"flirtation\": [\"f-l-er t-ey1 sh-ah-n\", \"nn\"],\n  \"flirtatious\": [\"f-l-er t-ey1 sh-ah-s\", \"jj\"],\n  \"flit\": [\"f-l-ih1-t\", \"vb vbp\"],\n  \"float\": [\"f-l-ow1-t\", \"vb nn vbp\"],\n  \"floater\": [\"f-l-ow1 t-er\", \"nn\"],\n  \"floating\": [\"f-l-ow1 t-ih-ng\", \"vbg jj\"],\n  \"flock\": [\"f-l-aa1-k\", \"nn vb vbp\"],\n  \"flood\": [\"f-l-ah1-d\", \"nn vb vbp\"],\n  \"floor\": [\"f-l-ao1-r\", \"nn\"],\n  \"floorboard\": [\"f-l-ao1-r b-ao-r-d\", \"nn\"],\n  \"flooring\": [\"f-l-ao1 r-ih-ng\", \"nn\"],\n  \"flop\": [\"f-l-aa1-p\", \"nn vbp vb\"],\n  \"floppy\": [\"f-l-aa1 p-iy\", \"jj\"],\n  \"flora\": [\"f-l-ao1 r-ah\", \"nn\"],\n  \"floral\": [\"f-l-ao1 r-ah-l\", \"jj\"],\n  \"florid\": [\"f-l-ao1 r-ah-d\", \"jj\"],\n  \"florist\": [\"f-l-aa1 r-ah-s-t\", \"nn\"],\n  \"flotation\": [\"f-l-ow t-ey1 sh-ah-n\", \"nn\"],\n  \"flotilla\": [\"f-l-ow t-ih1 l-ah\", \"nn\"],\n  \"flounder\": [\"f-l-aw1-n d-er\", \"vb\"],\n  \"floundering\": [\"f-l-aw1-n d-er ih-ng\", \"vbg jj\"],\n  \"flour\": [\"f-l-aw1 er\", \"nn\"],\n  \"flourish\": [\"f-l-er1 ih-sh\", \"vb nn vbp\"],\n  \"flourishing\": [\"f-l-er1 ih sh-ih-ng\", \"vbg jj\"],\n  \"flout\": [\"f-l-aw1-t\", \"vb\"],\n  \"flow\": [\"f-l-ow1\", \"nn vbp vb\"],\n  \"flower\": [\"f-l-aw1 er\", \"nn vb\"],\n  \"flowered\": [\"f-l-aw1 er-d\", \"jj vbd vbn\"],\n  \"flowerpot\": [\"f-l-aw1 er p-aa-t\", \"nn\"],\n  \"flowing\": [\"f-l-ow1 ih-ng\", \"vbg jj\"],\n  \"flown\": [\"f-l-ow1-n\", \"vbn\"],\n  \"flu\": [\"f-l-uw1\", \"nn\"],\n  \"fluctuate\": [\"f-l-ah1-k ch-ah-w ey-t\", \"vbp vb\"],\n  \"fluctuation\": [\"f-l-ah-k ch-uw ey1 sh-ah-n\", \"nn\"],\n  \"flue\": [\"f-l-uw1\", \"nn\"],\n  \"fluency\": [\"f-l-uw1 ah-n s-iy\", \"nn\"],\n  \"fluent\": [\"f-l-uw1 ah-n-t\", \"jj\"],\n  \"fluff\": [\"f-l-ah1-f\", \"nn\"],\n  \"fluffy\": [\"f-l-ah1 f-iy\", \"jj\"],\n  \"fluid\": [\"f-l-uw1 ah-d\", \"nn jj\"],\n  \"fluidity\": [\"f-l-uw ih1 d-ah t-iy\", \"nn\"],\n  \"fluke\": [\"f-l-uw1-k\", \"nn\"],\n  \"flung\": [\"f-l-ah1-ng\", \"vbd vbn\"],\n  \"flunk\": [\"f-l-ah1-ng-k\", \"vb\"],\n  \"fluorescent\": [\"f-l-uh r-eh1 s-ah-n-t\", \"jj\"],\n  \"fluoride\": [\"f-l-uh1 r-ay-d\", \"nn\"],\n  \"flurried\": [\"f-l-er1 iy-d\", \"vbd\"],\n  \"flurry\": [\"f-l-er1 iy\", \"nn\"],\n  \"flush\": [\"f-l-ah1-sh\", \"jj nn rb vb vbp\"],\n  \"fluster\": [\"f-l-ah1-s-t-er\", \"vb\"],\n  \"flute\": [\"f-l-uw1-t\", \"nn\"],\n  \"flutist\": [\"f-l-uw1 t-ih-s-t\", \"nn\"],\n  \"flutter\": [\"f-l-ah1 t-er\", \"nn vb\"],\n  \"flux\": [\"f-l-ah1-k-s\", \"nn\"],\n  \"fly\": [\"f-l-ay1\", \"vb nn vbp\"],\n  \"flyer\": [\"f-l-ay1 er\", \"nn\"],\n  \"flying\": [\"f-l-ay1 ih-ng\", \"vbg jj\"],\n  \"foal\": [\"f-ow1-l\", \"nn\"],\n  \"foam\": [\"f-ow1-m\", \"nn vb vbp\"],\n  \"foamy\": [\"f-ow1 m-iy\", \"jj\"],\n  \"focal\": [\"f-ow1 k-ah-l\", \"jj\"],\n  \"focus\": [\"f-ow1 k-ah-s\", \"nn vbp vb\"],\n  \"focused\": [\"f-ow1 k-ah-s-t\", \"vbn jj vbd\"],\n  \"focussed\": [\"f-ow1 k-ah-s-t\", \"vbn vbd\"],\n  \"fodder\": [\"f-aa1 d-er\", \"nn\"],\n  \"foe\": [\"f-ow1\", \"nn\"],\n  \"fog\": [\"f-aa1-g\", \"nn vb\"],\n  \"foggy\": [\"f-aa1 g-iy\", \"jj\"],\n  \"fogy\": [\"f-ow1 g-iy\", \"nn\"],\n  \"foible\": [\"f-oy1 b-ah-l\", \"nn\"],\n  \"foil\": [\"f-oy1-l\", \"nn vb\"],\n  \"foiled\": [\"f-oy1-l-d\", \"vbn jj vbd\"],\n  \"foist\": [\"f-oy1-s-t\", \"vb\"],\n  \"fold\": [\"f-ow1-l-d\", \"vb nn vbp\"],\n  \"folded\": [\"f-ow1-l d-ah-d\", \"vbn vbd jj\"],\n  \"folder\": [\"f-ow1-l d-er\", \"nn\"],\n  \"folding\": [\"f-ow1-l d-ih-ng\", \"vbg jj nn\"],\n  \"foliage\": [\"f-ow1 l-ih-jh\", \"nn\"],\n  \"folk\": [\"f-ow1-k\", \"nn\"],\n  \"folkish\": [\"f-ow1 k-ih-sh\", \"jj\"],\n  \"folklore\": [\"f-ow1-k l-ao-r\", \"nn\"],\n  \"folksy\": [\"f-ow1-k s-iy\", \"jj\"],\n  \"follow\": [\"f-aa1 l-ow\", \"vb vbp\"],\n  \"followed\": [\"f-aa1 l-ow-d\", \"vbd vbn jj\"],\n  \"follower\": [\"f-aa1 l-ow er\", \"nn\"],\n  \"following\": [\"f-aa1 l-ow ih-ng\", \"vbg jj nn\"],\n  \"followup\": [\"f-aa1 l-ow ah-p\", \"jj\"],\n  \"folly\": [\"f-aa1 l-iy\", \"nn\"],\n  \"foment\": [\"f-ow1 m-eh-n-t\", \"vb\"],\n  \"fond\": [\"f-aa1-n-d\", \"jj nn vb\"],\n  \"fonder\": [\"f-aa1-n d-er\", \"jjr\"],\n  \"fondest\": [\"f-aa1-n d-ah-s-t\", \"jjs\"],\n  \"fondly\": [\"f-aa1-n-d l-iy\", \"rb\"],\n  \"fondness\": [\"f-aa1-n-d n-ah-s\", \"nn\"],\n  \"font\": [\"f-aa1-n-t\", \"nn\"],\n  \"food\": [\"f-uw1-d\", \"nn\"],\n  \"foodservice\": [\"f-uw1-d s-er1 v-ih-s\", \"nn\"],\n  \"foodstuff\": [\"f-uw1-d s-t-ah-f\", \"nn\"],\n  \"fool\": [\"f-uw1-l\", \"nn jj vb\"],\n  \"foolhardy\": [\"f-uw1-l hh-aa-r d-iy\", \"jj\"],\n  \"foolish\": [\"f-uw1 l-ih-sh\", \"jj\"],\n  \"foolishly\": [\"f-uw1 l-ih-sh l-iy\", \"rb\"],\n  \"foolishness\": [\"f-uw1 l-ih-sh n-ah-s\", \"nn\"],\n  \"foolproof\": [\"f-uw1-l p-r-uw-f\", \"jj\"],\n  \"foot\": [\"f-uh1-t\", \"nn\"],\n  \"footage\": [\"f-uh1 t-ih-jh\", \"nn\"],\n  \"football\": [\"f-uh1-t b-ao-l\", \"nn\"],\n  \"footfall\": [\"f-uh1-t f-ao-l\", \"nn\"],\n  \"foothill\": [\"f-uh1-t hh-ih-l\", \"nn\"],\n  \"foothold\": [\"f-uh1-t hh-ow-l-d\", \"nn\"],\n  \"footing\": [\"f-uh1 t-ih-ng\", \"nn\"],\n  \"footlight\": [\"f-uh1-t l-ay-t\", \"nn\"],\n  \"footloose\": [\"f-uh1-t l-uw-s\", \"jj\"],\n  \"footman\": [\"f-uh1-t m-ah-n\", \"nn\"],\n  \"footnote\": [\"f-uh1-t n-ow-t\", \"nn vb\"],\n  \"footpath\": [\"f-uh1-t p-ae-th\", \"nn\"],\n  \"footprint\": [\"f-uh1-t p-r-ih-n-t\", \"nn\"],\n  \"footstep\": [\"f-uh1-t s-t-eh-p\", \"nn\"],\n  \"footwear\": [\"f-uh1-t w-eh-r\", \"nn\"],\n  \"footwork\": [\"f-uh1-t w-er-k\", \"nn\"],\n  \"for\": [\"f-ao1-r\", \"in cc jj rb rp\"],\n  \"forage\": [\"f-ao1 r-ih-jh\", \"nn vb\"],\n  \"foray\": [\"f-ao1 r-ey\", \"nn\"],\n  \"forbade\": [\"f-er b-ey1-d\", \"vbd\"],\n  \"forbearance\": [\"f-ao-r b-eh1 r-ah-n-s\", \"nn\"],\n  \"forbid\": [\"f-er b-ih1-d\", \"vb vbp uh\"],\n  \"forbidden\": [\"f-ao1-r b-ih d-ah-n\", \"vbn jj\"],\n  \"forbidding\": [\"f-er b-ih1 d-ih-ng\", \"vbg jj\"],\n  \"force\": [\"f-ao1-r-s\", \"nn vb vbp\"],\n  \"forced\": [\"f-ao1-r-s-t\", \"vbn jj vbd\"],\n  \"forceful\": [\"f-ao1-r-s f-ah-l\", \"jj\"],\n  \"forcefully\": [\"f-ao1-r-s f-ah l-iy\", \"rb\"],\n  \"forcefulness\": [\"f-ao1-r-s f-ah-l n-ah-s\", \"nn\"],\n  \"forcibly\": [\"f-ao1-r s-ah b-l-iy\", \"rb\"],\n  \"ford\": [\"f-ao1-r-d\", \"nn\"],\n  \"fore\": [\"f-ao1-r\", \"nn rb\"],\n  \"forearm\": [\"f-ao r-aa1-r-m\", \"nn\"],\n  \"forebear\": [\"f-ao1-r b-eh-r\", \"nn\"],\n  \"foreboding\": [\"f-ao-r b-ow1 d-ih-ng\", \"nn jj\"],\n  \"forecast\": [\"f-ao1-r k-ae-s-t\", \"nn vbd vbn vbp vb\"],\n  \"forecaster\": [\"f-ao1-r k-ae s-t-er\", \"nn\"],\n  \"forecasting\": [\"f-ao1-r k-ae s-t-ih-ng\", \"nn jj vbg\"],\n  \"foreclose\": [\"f-ao-r k-l-ow1-z\", \"vb\"],\n  \"foreclosed\": [\"f-ao-r k-l-ow1-z-d\", \"vbn jj vbd\"],\n  \"foreclosure\": [\"f-ao-r k-l-ow1 zh-er\", \"nn\"],\n  \"forefather\": [\"f-ao1-r f-aa dh-er\", \"nn\"],\n  \"forefinger\": [\"f-ao1-r f-ih-ng g-er\", \"nn\"],\n  \"forefront\": [\"f-ao1-r f-r-ah-n-t\", \"nn\"],\n  \"forego\": [\"f-ao-r g-ow1\", \"vb vbp\"],\n  \"foregoing\": [\"f-ao-r g-ow1 ih-ng\", \"nn jj vbg\"],\n  \"foregone\": [\"f-ao1-r g-ao1-n\", \"jj vbn\"],\n  \"foreground\": [\"f-ao1-r g-r-aw-n-d\", \"nn\"],\n  \"forehead\": [\"f-ao1 r-hh-eh-d\", \"nn\"],\n  \"foreign\": [\"f-ao1 r-ah-n\", \"jj\"],\n  \"foreigner\": [\"f-ao1 r-ah n-er\", \"nn\"],\n  \"foreman\": [\"f-ao1-r m-ah-n\", \"nn\"],\n  \"foremost\": [\"f-ao1-r m-ow-s-t\", \"jj rb\"],\n  \"forensic\": [\"f-er eh1-n s-ih-k\", \"jj\"],\n  \"forerunner\": [\"f-ao1 r-ah n-er\", \"nn\"],\n  \"foresaw\": [\"f-ao-r s-ao1\", \"vbd\"],\n  \"foresee\": [\"f-ao-r s-iy1\", \"vbp vb\"],\n  \"foreseeable\": [\"f-ao-r s-iy1 ah b-ah-l\", \"jj\"],\n  \"foreseen\": [\"f-ao-r s-iy1-n\", \"vbn\"],\n  \"foreshadow\": [\"f-ao-r sh-ae1 d-ow\", \"vb vbp\"],\n  \"foresight\": [\"f-ao1-r s-ay-t\", \"nn\"],\n  \"forest\": [\"f-ao1 r-ah-s-t\", \"nn\"],\n  \"forestall\": [\"f-ao-r s-t-ao1-l\", \"vb\"],\n  \"forestry\": [\"f-ao1 r-ah s-t-r-iy\", \"nn\"],\n  \"foretell\": [\"f-ao-r t-eh1-l\", \"vb\"],\n  \"forethought\": [\"f-ao1-r th-ao-t\", \"nn\"],\n  \"forever\": [\"f-er eh1 v-er\", \"rb\"],\n  \"foreword\": [\"f-ao1-r w-er-d\", \"nn\"],\n  \"forfeit\": [\"f-ao1-r f-ih-t\", \"vb nn\"],\n  \"forfeitable\": [\"f-ao1-r f-ah t-ah b-ah-l\", \"jj\"],\n  \"forfeiture\": [\"f-ao1-r f-ah ch-er\", \"nn\"],\n  \"forgave\": [\"f-er g-ey1-v\", \"vbd\"],\n  \"forge\": [\"f-ao1-r-jh\", \"vb vbp nn\"],\n  \"forged\": [\"f-ao1-r-jh-d\", \"vbn jj vbd\"],\n  \"forger\": [\"f-ao1-r jh-er\", \"nn\"],\n  \"forgery\": [\"f-ao1-r jh-er iy\", \"nn\"],\n  \"forget\": [\"f-er g-eh1-t\", \"vb vbp\"],\n  \"forgetful\": [\"f-ao-r g-eh1-t f-ah-l\", \"jj\"],\n  \"forgettable\": [\"f-ao-r g-eh1 t-ah b-ah-l\", \"jj\"],\n  \"forgive\": [\"f-er g-ih1-v\", \"vb vbp\"],\n  \"forgiven\": [\"f-er g-ih1 v-ah-n\", \"vbn\"],\n  \"forgiveness\": [\"f-er g-ih1-v n-ah-s\", \"nn\"],\n  \"forgiving\": [\"f-er g-ih1 v-ih-ng\", \"vbg jj\"],\n  \"forgo\": [\"f-ao-r g-ow1\", \"vb vbp\"],\n  \"forgone\": [\"f-ao-r g-aa1-n\", \"jj\"],\n  \"forgot\": [\"f-er g-aa1-t\", \"vbd vbn\"],\n  \"forgotten\": [\"f-er g-aa1 t-ah-n\", \"vbn jj\"],\n  \"forint\": [\"f-ao1 r-ih-n-t\", \"nn\"],\n  \"fork\": [\"f-ao1-r-k\", \"nn vb\"],\n  \"forked\": [\"f-ao1-r-k-t\", \"jj vbd vbn\"],\n  \"forklift\": [\"f-ao1-r-k l-ih-f-t\", \"nn\"],\n  \"forlorn\": [\"f-er l-ao1-r-n\", \"jj\"],\n  \"form\": [\"f-ao1-r-m\", \"nn vbp jj vb\"],\n  \"formal\": [\"f-ao1-r m-ah-l\", \"jj\"],\n  \"formaldehyde\": [\"f-ao-r m-ae1-l d-ah hh-ay-d\", \"nn\"],\n  \"formalism\": [\"f-ao1-r m-ah l-ih z-ah-m\", \"nn\"],\n  \"formality\": [\"f-ao-r m-ae1 l-ah t-iy\", \"nn\"],\n  \"formalize\": [\"f-ao1-r m-ah l-ay-z\", \"vb\"],\n  \"formalized\": [\"f-ao1-r m-ah l-ay-z-d\", \"jj vbn\"],\n  \"formally\": [\"f-ao1-r m-ah l-iy\", \"rb\"],\n  \"format\": [\"f-ao1-r m-ae-t\", \"nn\"],\n  \"formation\": [\"f-ao-r m-ey1 sh-ah-n\", \"nn\"],\n  \"formative\": [\"f-ao1-r m-ah t-ih-v\", \"jj nn\"],\n  \"formed\": [\"f-ao1-r-m-d\", \"vbn vbd jj\"],\n  \"former\": [\"f-ao1-r m-er\", \"jj nn\"],\n  \"formerly\": [\"f-ao1-r m-er l-iy\", \"rb\"],\n  \"formidable\": [\"f-ao1-r m-ah d-ah b-ah-l\", \"jj\"],\n  \"formidably\": [\"f-ao1-r m-ah d-ah b-l-iy\", \"rb\"],\n  \"formula\": [\"f-ao1-r m-y-ah l-ah\", \"nn\"],\n  \"formulaic\": [\"f-ao-r m-y-ah l-ey1 ih-k\", \"jj\"],\n  \"formulate\": [\"f-ao1-r m-y-ah l-ey-t\", \"vb\"],\n  \"formulation\": [\"f-ao-r m-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"forsake\": [\"f-ao-r s-ey1-k\", \"vb\"],\n  \"forsaken\": [\"f-ao-r s-ey1 k-ah-n\", \"vbn\"],\n  \"forseeable\": [\"f-ao-r s-iy1 ah b-ah-l\", \"jj\"],\n  \"fort\": [\"f-ao1-r-t\", \"nn\"],\n  \"forth\": [\"f-ao1-r-th\", \"rb rp\"],\n  \"forthcoming\": [\"f-ao1-r-th k-ah1 m-ih-ng\", \"jj vbg\"],\n  \"forthright\": [\"f-ao1-r-th r-ay1-t\", \"jj\"],\n  \"forthrightly\": [\"f-ao1-r-th r-ay1-t l-iy\", \"rb\"],\n  \"forthrightness\": [\"f-ao1-r-th r-ay1-t n-ah-s\", \"nn\"],\n  \"forthwith\": [\"f-ao1-r-th w-ih1-th\", \"rb\"],\n  \"fortification\": [\"f-ao-r t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"fortified\": [\"f-ao1-r t-ah f-ay-d\", \"vbn vbd jj\"],\n  \"fortify\": [\"f-ao1-r t-ih f-ay\", \"vb\"],\n  \"fortitude\": [\"f-ao1-r t-ih t-uw-d\", \"nn\"],\n  \"fortnight\": [\"f-ao1-r-t n-ay-t\", \"nn\"],\n  \"fortress\": [\"f-ao1-r t-r-ah-s\", \"nn\"],\n  \"fortuitous\": [\"f-ao-r t-uw1 ih t-ah-s\", \"jj\"],\n  \"fortunate\": [\"f-ao1-r ch-ah n-ah-t\", \"jj\"],\n  \"fortunately\": [\"f-ao1-r ch-ah n-ah-t l-iy\", \"rb\"],\n  \"fortune\": [\"f-ao1-r ch-ah-n\", \"nn\"],\n  \"forum\": [\"f-ao1 r-ah-m\", \"nn\"],\n  \"forward\": [\"f-ao1-r w-er-d\", \"rb jj nn vb\"],\n  \"forwarder\": [\"f-ao1-r w-er d-er\", \"nn\"],\n  \"forwards\": [\"f-ao1-r w-er-d-z\", \"rb\"],\n  \"fossil\": [\"f-aa1 s-ah-l\", \"jj nn\"],\n  \"fossilized\": [\"f-aa1 s-ah l-ay-z-d\", \"jj\"],\n  \"foster\": [\"f-aa1 s-t-er\", \"vb jj\"],\n  \"fought\": [\"f-ao1-t\", \"vbd vbn\"],\n  \"foul\": [\"f-aw1-l\", \"jj rb vb uh\"],\n  \"fouled\": [\"f-aw1-l-d\", \"vbd jj vbn\"],\n  \"found\": [\"f-aw1-n-d\", \"vbd vbn\"],\n  \"foundation\": [\"f-aw-n d-ey1 sh-ah-n\", \"nn\"],\n  \"founded\": [\"f-aw1-n d-ah-d\", \"vbn vbd\"],\n  \"founder\": [\"f-aw1-n d-er\", \"nn vb\"],\n  \"foundering\": [\"f-aw1-n d-er ih-ng\", \"vbg jj\"],\n  \"foundling\": [\"f-aw1-n-d l-ih-ng\", \"nn\"],\n  \"foundry\": [\"f-aw1-n d-r-iy\", \"nn\"],\n  \"fountain\": [\"f-aw1-n t-ah-n\", \"nn\"],\n  \"four\": [\"f-ao1-r\", \"cd\"],\n  \"fourfold\": [\"f-ao1-r f-ow1-l-d\", \"rb jj\"],\n  \"foursome\": [\"f-ao1-r s-ah-m\", \"nn\"],\n  \"fourth\": [\"f-ao1-r-th\", \"jj rb\"],\n  \"fowl\": [\"f-aw1-l\", \"nn\"],\n  \"fox\": [\"f-aa1-k-s\", \"nn\"],\n  \"foxhole\": [\"f-aa1-k-s hh-ow-l\", \"nn\"],\n  \"foxtail\": [\"f-aa1-k-s t-ey-l\", \"nn\"],\n  \"foyer\": [\"f-oy1 er\", \"nn\"],\n  \"fracas\": [\"f-r-ey1 k-ah-s\", \"nn\"],\n  \"fraction\": [\"f-r-ae1-k sh-ah-n\", \"nn\"],\n  \"fractional\": [\"f-r-ae1-k sh-ah n-ah-l\", \"jj\"],\n  \"fractionally\": [\"f-r-ae1-k sh-ah-n ah-l iy\", \"rb\"],\n  \"fractious\": [\"f-r-ae1-k sh-ah-s\", \"jj\"],\n  \"fracture\": [\"f-r-ae1-k ch-er\", \"nn vb\"],\n  \"fractured\": [\"f-r-ae1-k ch-er-d\", \"vbn jj vbd\"],\n  \"fragile\": [\"f-r-ae1 jh-ah-l\", \"jj\"],\n  \"fragility\": [\"f-r-ah jh-ih1 l-ah t-iy\", \"nn\"],\n  \"fragment\": [\"f-r-ae1-g m-ah-n-t\", \"nn vb\"],\n  \"fragmentary\": [\"f-r-ae1-g m-ah-n t-eh r-iy\", \"jj rb\"],\n  \"fragmentation\": [\"f-r-ae-g m-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"fragmented\": [\"f-r-ae1-g m-ah-n t-ih-d\", \"jj vbn\"],\n  \"fragrance\": [\"f-r-ey1 g-r-ah-n-s\", \"nn\"],\n  \"fragrant\": [\"f-r-ey1 g-r-ah-n-t\", \"jj\"],\n  \"frail\": [\"f-r-ey1-l\", \"jj\"],\n  \"frailty\": [\"f-r-ey1-l t-iy\", \"nn\"],\n  \"frame\": [\"f-r-ey1-m\", \"nn vbp vb\"],\n  \"framed\": [\"f-r-ey1-m-d\", \"vbn vbd jj\"],\n  \"framer\": [\"f-r-ey1 m-er\", \"nn\"],\n  \"framework\": [\"f-r-ey1-m w-er-k\", \"nn\"],\n  \"franc\": [\"f-r-ae1-ng-k\", \"nn\"],\n  \"franchise\": [\"f-r-ae1-n ch-ay-z\", \"nn vb\"],\n  \"franchised\": [\"f-r-ae1-n ch-ay-z-d\", \"vbn jj\"],\n  \"franchisee\": [\"f-r-ae1-n ch-ay z-iy1\", \"nn\"],\n  \"franchiser\": [\"f-r-ae1-n ch-ay z-er\", \"nn\"],\n  \"frank\": [\"f-r-ae1-ng-k\", \"jj nn vb\"],\n  \"franked\": [\"f-r-ae1-ng-k-t\", \"jj vbn\"],\n  \"frankfurter\": [\"f-r-ae1-ng-k f-er t-er\", \"nn\"],\n  \"frankly\": [\"f-r-ae1-ng k-l-iy\", \"rb\"],\n  \"frankness\": [\"f-r-ae1-ng-k n-ah-s\", \"nn\"],\n  \"frantic\": [\"f-r-ae1-n t-ih-k\", \"jj\"],\n  \"frantically\": [\"f-r-ae1-n t-ah k-ah l-iy\", \"rb\"],\n  \"fraternity\": [\"f-r-ah t-er1 n-ah t-iy\", \"nn\"],\n  \"frau\": [\"f-r-aw1\", \"nn\"],\n  \"fraud\": [\"f-r-ao1-d\", \"nn\"],\n  \"fraudulent\": [\"f-r-ao1 jh-ah l-ah-n-t\", \"jj\"],\n  \"fraudulently\": [\"f-r-ao1 d-uw l-ah-n-t l-iy\", \"rb\"],\n  \"fraught\": [\"f-r-ao1-t\", \"jj\"],\n  \"fray\": [\"f-r-ey1\", \"nn vb\"],\n  \"frayed\": [\"f-r-ey1-d\", \"jj vbn\"],\n  \"frazzle\": [\"f-r-ae1-z-ah-l\", \"vb\"],\n  \"freak\": [\"f-r-iy1-k\", \"nn vb vbp\"],\n  \"freckled\": [\"f-r-eh1 k-ah-l-d\", \"jj\"],\n  \"free\": [\"f-r-iy1\", \"jj rb vb vbp\"],\n  \"freebie\": [\"f-r-iy1 b-iy\", \"nn\"],\n  \"freed\": [\"f-r-iy1-d\", \"jj\"],\n  \"freedom\": [\"f-r-iy1 d-ah-m\", \"nn\"],\n  \"freefall\": [\"f-r-iy1 f-ao-l\", \"nn\"],\n  \"freehand\": [\"f-r-iy1 hh-ae-n-d\", \"jj rb\"],\n  \"freeholder\": [\"f-r-iy1 hh-ow-l d-er\", \"nn\"],\n  \"freelance\": [\"f-r-iy1 l-ae-n-s\", \"jj\"],\n  \"freely\": [\"f-r-iy1 l-iy\", \"rb\"],\n  \"freeman\": [\"f-r-iy1 m-ah-n\", \"nn\"],\n  \"freer\": [\"f-r-iy1 er\", \"jjr\"],\n  \"freest\": [\"f-r-iy1 ih-s-t\", \"jjs\"],\n  \"freethinker\": [\"f-r-iy1 th-ih1-ng k-er\", \"nn\"],\n  \"freeway\": [\"f-r-iy1 w-ey\", \"nn\"],\n  \"freewheeling\": [\"f-r-iy1 w-iy l-ih-ng\", \"jj\"],\n  \"freeze\": [\"f-r-iy1-z\", \"nn vb vbp\"],\n  \"freezer\": [\"f-r-iy1 z-er\", \"nn\"],\n  \"freezing\": [\"f-r-iy1 z-ih-ng\", \"vbg jj nn\"],\n  \"freight\": [\"f-r-ey1-t\", \"nn vb\"],\n  \"freighter\": [\"f-r-ey1 t-er\", \"nn\"],\n  \"french\": [\"f-r-eh1-n-ch\", \"jj\"],\n  \"frenetic\": [\"f-r-ah n-eh1 t-ih-k\", \"jj\"],\n  \"frenzied\": [\"f-r-eh1-n z-iy-d\", \"jj\"],\n  \"frenzy\": [\"f-r-eh1-n z-iy\", \"nn\"],\n  \"frequency\": [\"f-r-iy1 k-w-ah-n s-iy\", \"nn\"],\n  \"frequent\": [\"f-r-iy1 k-w-ah-n-t\", \"jj vbp vb\"],\n  \"frequently\": [\"f-r-iy1 k-w-ah-n-t l-iy\", \"rb\"],\n  \"fresco\": [\"f-r-eh1-s k-ow\", \"nn\"],\n  \"frescoed\": [\"f-r-eh1-s k-ow-d\", \"jj\"],\n  \"fresh\": [\"f-r-eh1-sh\", \"jj rb\"],\n  \"fresher\": [\"f-r-eh1 sh-er\", \"jjr\"],\n  \"freshly\": [\"f-r-eh1-sh l-iy\", \"rb\"],\n  \"freshman\": [\"f-r-eh1-sh m-ah-n\", \"nn\"],\n  \"freshness\": [\"f-r-eh1-sh n-ah-s\", \"nn\"],\n  \"fret\": [\"f-r-eh1-t\", \"vbp nn vb\"],\n  \"friar\": [\"f-r-ay1 er\", \"nn\"],\n  \"friction\": [\"f-r-ih1-k sh-ah-n\", \"nn\"],\n  \"frictionless\": [\"f-r-ih1-k sh-ah-n l-ah-s\", \"jj\"],\n  \"fridge\": [\"f-r-ih1-jh\", \"nn\"],\n  \"fried\": [\"f-r-ay1-d\", \"jj vbn\"],\n  \"friend\": [\"f-r-eh1-n-d\", \"nn\"],\n  \"friendlier\": [\"f-r-eh1-n-d l-iy er\", \"jjr rbr\"],\n  \"friendliness\": [\"f-r-eh1-n-d l-iy n-ih-s\", \"nn\"],\n  \"friendly\": [\"f-r-eh1-n-d l-iy\", \"jj\"],\n  \"friendship\": [\"f-r-eh1-n-d sh-ih-p\", \"nn\"],\n  \"frieze\": [\"f-r-iy1-z\", \"nn\"],\n  \"frigate\": [\"f-r-ih1 g-ah-t\", \"nn\"],\n  \"fright\": [\"f-r-ay1-t\", \"nn\"],\n  \"frighten\": [\"f-r-ay1 t-ah-n\", \"vb vbp\"],\n  \"frightened\": [\"f-r-ay1 t-ah-n-d\", \"vbn jj vbd\"],\n  \"frightening\": [\"f-r-ay1 t-ah-n ih-ng\", \"jj vbg\"],\n  \"frighteningly\": [\"f-r-ay1 t-ah-n ih-ng l-iy\", \"rb\"],\n  \"frightful\": [\"f-r-ay1-t f-ah-l\", \"jj\"],\n  \"frightfully\": [\"f-r-ay1-t f-ah l-iy\", \"rb\"],\n  \"frigid\": [\"f-r-ih1 jh-ah-d\", \"jj\"],\n  \"frill\": [\"f-r-ih1-l\", \"nn\"],\n  \"frilly\": [\"f-r-ih1 l-iy\", \"jj\"],\n  \"fringe\": [\"f-r-ih1-n-jh\", \"nn jj\"],\n  \"frisky\": [\"f-r-ih1-s k-iy\", \"jj\"],\n  \"fritter\": [\"f-r-ih1-t-er\", \"vb\"],\n  \"frivolity\": [\"f-r-ah v-aa1 l-ah t-iy\", \"nn\"],\n  \"frivolous\": [\"f-r-ih1 v-ah l-ah-s\", \"jj\"],\n  \"frock\": [\"f-r-aa1-k\", \"nn\"],\n  \"frog\": [\"f-r-aa1-g\", \"nn\"],\n  \"frolic\": [\"f-r-aa1 l-ih-k\", \"nn vb\"],\n  \"from\": [\"f-r-ah1-m\", \"in rb rp\"],\n  \"frond\": [\"f-r-aa1-n-d\", \"nn\"],\n  \"front\": [\"f-r-ah1-n-t\", \"nn jj vb\"],\n  \"frontage\": [\"f-r-ah1-n t-ih-jh\", \"nn\"],\n  \"frontal\": [\"f-r-ah1-n t-ah-l\", \"jj\"],\n  \"frontier\": [\"f-r-ah-n t-ih1-r\", \"nn\"],\n  \"frontrunner\": [\"f-r-ah1-n t-r-ah n-er\", \"nn\"],\n  \"frost\": [\"f-r-ao1-s-t\", \"nn vb\"],\n  \"frostbite\": [\"f-r-ao1-s-t b-ay-t\", \"nn\"],\n  \"frosting\": [\"f-r-ao1 s-t-ih-ng\", \"nn\"],\n  \"frosty\": [\"f-r-ao1 s-t-iy\", \"jj\"],\n  \"froth\": [\"f-r-ao1-th\", \"nn vb\"],\n  \"frothy\": [\"f-r-ao1 th-iy\", \"jj\"],\n  \"frown\": [\"f-r-aw1-n\", \"vb vbp\"],\n  \"frowningly\": [\"f-r-aw1 n-ih-ng l-iy\", \"rb\"],\n  \"froze\": [\"f-r-ow1-z\", \"vbd vbn\"],\n  \"frozen\": [\"f-r-ow1 z-ah-n\", \"vbn jj\"],\n  \"fructose\": [\"f-r-ah1-k t-ow-s\", \"nn\"],\n  \"frugal\": [\"f-r-uw1 g-ah-l\", \"jj\"],\n  \"frugality\": [\"f-r-uw g-ae1 l-ah t-iy\", \"nn\"],\n  \"frugally\": [\"f-r-uw1 g-ah l-iy\", \"rb\"],\n  \"fruit\": [\"f-r-uw1-t\", \"nn\"],\n  \"fruitful\": [\"f-r-uw1-t f-ah-l\", \"jj\"],\n  \"fruition\": [\"f-r-uw ih1 sh-ah-n\", \"nn\"],\n  \"fruitless\": [\"f-r-uw1-t l-ah-s\", \"jj\"],\n  \"fruitlessly\": [\"f-r-uw1-t l-ah-s l-iy\", \"rb\"],\n  \"fruity\": [\"f-r-uw1 t-iy\", \"jj\"],\n  \"frumpy\": [\"f-r-ah1-m p-iy\", \"jj\"],\n  \"frustrate\": [\"f-r-ah1 s-t-r-ey-t\", \"vb\"],\n  \"frustrated\": [\"f-r-ah1 s-t-r-ey t-ah-d\", \"vbn jj vbd\"],\n  \"frustrating\": [\"f-r-ah1 s-t-r-ey t-ih-ng\", \"jj vbg\"],\n  \"frustration\": [\"f-r-ah-s t-r-ey1 sh-ah-n\", \"nn\"],\n  \"fry\": [\"f-r-ay1\", \"nn vbp vb\"],\n  \"fryer\": [\"f-r-ay1 er\", \"nn\"],\n  \"fudge\": [\"f-ah1-jh\", \"vb vbp nn\"],\n  \"fudging\": [\"f-ah1 jh-ih-ng\", \"nn\"],\n  \"fuel\": [\"f-y-uw1 ah-l\", \"nn vbp vb\"],\n  \"fugitive\": [\"f-y-uw1 jh-ah t-ih-v\", \"jj nn\"],\n  \"fulcrum\": [\"f-uh1-l k-r-ah-m\", \"nn\"],\n  \"fulfill\": [\"f-uh-l f-ih1-l\", \"vb vbp\"],\n  \"fulfillment\": [\"f-uh-l f-ih1-l m-ah-n-t\", \"nn\"],\n  \"full\": [\"f-uh1-l\", \"jj rb\"],\n  \"fullback\": [\"f-uh1-l b-ae-k\", \"nn\"],\n  \"fuller\": [\"f-uh1 l-er\", \"jjr\"],\n  \"fullest\": [\"f-uh1 l-ah-s-t\", \"jjs\"],\n  \"fullness\": [\"f-uh1-l n-ah-s\", \"nn\"],\n  \"fully\": [\"f-uh1 l-iy\", \"rb\"],\n  \"fulminate\": [\"f-uh1-l m-ah n-ey-t\", \"vb\"],\n  \"fumble\": [\"f-ah1-m b-ah-l\", \"nn vb\"],\n  \"fumbling\": [\"f-ah1-m b-ah-l ih-ng\", \"vbg jj\"],\n  \"fume\": [\"f-y-uw1-m\", \"vb\"],\n  \"fun\": [\"f-ah1-n\", \"nn jj\"],\n  \"function\": [\"f-ah1-ng-k sh-ah-n\", \"nn vb vbp\"],\n  \"functional\": [\"f-ah1-ng-k sh-ah n-ah-l\", \"jj nn\"],\n  \"functionally\": [\"f-ah1-ng-k sh-ah-n ah-l iy\", \"rb\"],\n  \"functionary\": [\"f-ah1-ng-k sh-ah-n eh r-iy\", \"nn\"],\n  \"fund\": [\"f-ah1-n-d\", \"nn vbp vb\"],\n  \"fundamental\": [\"f-ah-n d-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"fundamentalism\": [\"f-ah-n d-ah m-eh1-n t-ah l-ih z-ah-m\", \"nn\"],\n  \"fundamentalist\": [\"f-ah-n d-ah m-eh1-n t-ah l-ih-s-t\", \"jj nn\"],\n  \"fundamentally\": [\"f-ah-n d-ah m-eh1-n t-ah l-iy\", \"rb\"],\n  \"funded\": [\"f-ah1-n d-ah-d\", \"vbn vbd jj\"],\n  \"funding\": [\"f-ah1-n d-ih-ng\", \"vbg jj\"],\n  \"fundraiser\": [\"f-ah1-n d-r-ey z-er\", \"nn\"],\n  \"funeral\": [\"f-y-uw1 n-er ah-l\", \"nn jj\"],\n  \"fungal\": [\"f-ah1-ng g-ah-l\", \"jj\"],\n  \"fungible\": [\"f-ah1-n jh-ih b-ah-l\", \"jj\"],\n  \"fungicide\": [\"f-ah1-n jh-ah s-ay-d\", \"nn\"],\n  \"fungus\": [\"f-ah1-ng g-ah-s\", \"nn\"],\n  \"funk\": [\"f-ah1-ng-k\", \"nn\"],\n  \"funky\": [\"f-ah1-ng k-iy\", \"jj\"],\n  \"funnel\": [\"f-ah1 n-ah-l\", \"vb nn\"],\n  \"funnier\": [\"f-ah1 n-iy er\", \"jjr\"],\n  \"funniest\": [\"f-ah1 n-iy ah-s-t\", \"jjs\"],\n  \"funny\": [\"f-ah1 n-iy\", \"jj\"],\n  \"fur\": [\"f-er1\", \"nn\"],\n  \"furbishing\": [\"f-er1 b-ih sh-ih-ng\", \"nn\"],\n  \"furious\": [\"f-y-uh1 r-iy ah-s\", \"jj\"],\n  \"furiouser\": [\"f-y-uh1 r-iy ah s-er\", \"rbr\"],\n  \"furiously\": [\"f-y-uh1 r-iy ah-s l-iy\", \"rb\"],\n  \"furlough\": [\"f-er1 l-ow\", \"nn vb\"],\n  \"furnace\": [\"f-er1 n-ah-s\", \"nn\"],\n  \"furnish\": [\"f-er1 n-ih-sh\", \"vb vbp\"],\n  \"furnished\": [\"f-er1 n-ih-sh-t\", \"vbn vbd jj\"],\n  \"furnishing\": [\"f-er1 n-ih sh-ih-ng\", \"nn vbg\"],\n  \"furniture\": [\"f-er1 n-ih ch-er\", \"nn\"],\n  \"furor\": [\"f-y-uh1 r-ao-r\", \"nn\"],\n  \"furrier\": [\"f-er1 iy er\", \"nn\"],\n  \"furrow\": [\"f-er1 ow\", \"nn\"],\n  \"furry\": [\"f-er1 iy\", \"jj\"],\n  \"further\": [\"f-er1 dh-er\", \"jj vb\"],\n  \"furthermore\": [\"f-er1 dh-er m-ao-r\", \"rb\"],\n  \"furthest\": [\"f-er1 th-ah-s-t\", \"jjs rbs\"],\n  \"furtive\": [\"f-er1 t-ih-v\", \"jj\"],\n  \"furtively\": [\"f-er1 t-ih-v l-iy\", \"rb\"],\n  \"fury\": [\"f-y-uh1 r-iy\", \"nn\"],\n  \"fuse\": [\"f-y-uw1-z\", \"nn vb\"],\n  \"fuselage\": [\"f-y-uw1 s-ah l-aa-jh\", \"nn\"],\n  \"fusillade\": [\"f-y-uw1 s-ih l-ey-d\", \"nn\"],\n  \"fusion\": [\"f-y-uw1 zh-ah-n\", \"nn\"],\n  \"fuss\": [\"f-ah1-s\", \"nn vb\"],\n  \"fussy\": [\"f-ah1 s-iy\", \"jj\"],\n  \"futile\": [\"f-y-uw1 t-ah-l\", \"jj\"],\n  \"futility\": [\"f-y-uw t-ih1 l-ah t-iy\", \"nn\"],\n  \"future\": [\"f-y-uw1 ch-er\", \"nn jj\"],\n  \"futurist\": [\"f-y-uw1 ch-er ih-s-t\", \"nn\"],\n  \"futuristic\": [\"f-y-uw ch-er ih1 s-t-ih-k\", \"jj\"],\n  \"fuzz\": [\"f-ah1-z\", \"nn\"],\n  \"fuzzier\": [\"f-ah1 z-iy er\", \"jjr\"],\n  \"fuzzy\": [\"f-ah1 z-iy\", \"jj\"],\n  \"gabardine\": [\"g-ae1 b-er d-iy-n\", \"nn\"],\n  \"gable\": [\"g-ey1 b-ah-l\", \"nn\"],\n  \"gadfly\": [\"g-ae1-d f-l-ay\", \"nn\"],\n  \"gadget\": [\"g-ae1 jh-ah-t\", \"nn\"],\n  \"gadgetry\": [\"g-ae1 jh-ah t-r-iy\", \"nn\"],\n  \"gaffe\": [\"g-ae1-f\", \"nn\"],\n  \"gag\": [\"g-ae1-g\", \"nn\"],\n  \"gage\": [\"g-ey1-jh\", \"nn vb\"],\n  \"gagged\": [\"g-ae1-g-d\", \"vbn vbd\"],\n  \"gaggle\": [\"g-ae1 g-ah-l\", \"nn\"],\n  \"gaily\": [\"g-ey1 l-iy\", \"rb\"],\n  \"gain\": [\"g-ey1-n\", \"nn vbp vb\"],\n  \"gained\": [\"g-ey1-n-d\", \"vbd vbn\"],\n  \"gainer\": [\"g-ey1 n-er\", \"nn\"],\n  \"gainful\": [\"g-ey1-n f-ah-l\", \"jj\"],\n  \"gait\": [\"g-ey1-t\", \"nn\"],\n  \"gal\": [\"g-ae1-l\", \"nn\"],\n  \"gala\": [\"g-ae1 l-ah\", \"jj nn\"],\n  \"galactic\": [\"g-ah l-ae1-k t-ih-k\", \"jj\"],\n  \"galaxy\": [\"g-ae1 l-ah-k s-iy\", \"nn\"],\n  \"gale\": [\"g-ey1-l\", \"nn\"],\n  \"gall\": [\"g-ao1-l\", \"nn vb\"],\n  \"gallant\": [\"g-ae1 l-ah-n-t\", \"jj\"],\n  \"gallantry\": [\"g-ae1 l-ah-n t-r-iy\", \"nn\"],\n  \"gallbladder\": [\"g-ao1-l b-l-ae d-er\", \"nn\"],\n  \"gallery\": [\"g-ae1 l-er iy\", \"nn\"],\n  \"galley\": [\"g-ae1 l-iy\", \"nn\"],\n  \"galling\": [\"g-ao1 l-ih-ng\", \"jj\"],\n  \"gallium\": [\"g-ae1 l-iy ah-m\", \"nn\"],\n  \"gallon\": [\"g-ae1 l-ah-n\", \"nn\"],\n  \"gallop\": [\"g-ae1 l-ah-p\", \"nn vb\"],\n  \"galloping\": [\"g-ae1 l-ah p-ih-ng\", \"vbg jj\"],\n  \"gallows\": [\"g-ae1 l-ow-z\", \"nn\"],\n  \"gallstone\": [\"g-ao1-l s-t-ow-n\", \"nn\"],\n  \"galvanic\": [\"g-ae-l v-ae1 n-ih-k\", \"jj\"],\n  \"galvanize\": [\"g-ae1-l v-ah n-ay-z\", \"vb\"],\n  \"galvanized\": [\"g-ae1-l v-ah n-ay-z-d\", \"jj vbd vbn\"],\n  \"gambit\": [\"g-ae1-m b-ih-t\", \"nn\"],\n  \"gamble\": [\"g-ae1-m b-ah-l\", \"nn vb\"],\n  \"gambler\": [\"g-ae1-m b-l-er\", \"nn\"],\n  \"game\": [\"g-ey1-m\", \"nn\"],\n  \"gaming\": [\"g-ey1 m-ih-ng\", \"nn\"],\n  \"gamma\": [\"g-ae1 m-ah\", \"nn jj\"],\n  \"gamut\": [\"g-ae1 m-ah-t\", \"nn\"],\n  \"gander\": [\"g-ae1-n d-er\", \"nn\"],\n  \"gang\": [\"g-ae1-ng\", \"nn vb\"],\n  \"gangbuster\": [\"g-ae1-ng b-ah s-t-er\", \"nn\"],\n  \"gangplank\": [\"g-ae1-ng p-l-ae-ng-k\", \"nn\"],\n  \"gangster\": [\"g-ae1-ng s-t-er\", \"nn\"],\n  \"gantlet\": [\"g-ao1-n-t l-ah-t\", \"nn\"],\n  \"gap\": [\"g-ae1-p\", \"nn vb\"],\n  \"gaping\": [\"g-ey1 p-ih-ng\", \"vbg jj\"],\n  \"garage\": [\"g-er aa1-zh\", \"nn\"],\n  \"garb\": [\"g-aa1-r-b\", \"nn vb\"],\n  \"garbage\": [\"g-aa1-r b-ih-jh\", \"nn\"],\n  \"garble\": [\"g-aa1-r-b-ah-l\", \"vb\"],\n  \"garden\": [\"g-aa1-r d-ah-n\", \"nn vb\"],\n  \"gardener\": [\"g-aa1-r d-ah-n er\", \"nn\"],\n  \"gardenia\": [\"g-aa-r d-iy1 n-y-ah\", \"nn\"],\n  \"gargantuan\": [\"g-aa-r g-ae1-n ch-uw ah-n\", \"jj\"],\n  \"garish\": [\"g-eh1 r-ih-sh\", \"jj\"],\n  \"garland\": [\"g-aa1-r l-ah-n-d\", \"nn\"],\n  \"garlic\": [\"g-aa1-r l-ih-k\", \"nn\"],\n  \"garment\": [\"g-aa1-r m-ah-n-t\", \"nn\"],\n  \"garner\": [\"g-aa1-r n-er\", \"vb vbp\"],\n  \"garnet\": [\"g-aa1-r n-ah-t\", \"nn\"],\n  \"garnish\": [\"g-aa1-r n-ih-sh\", \"nn\"],\n  \"garrison\": [\"g-ae1 r-ih s-ah-n\", \"nn vb\"],\n  \"garrulous\": [\"g-eh1 r-ah l-ah-s\", \"jj\"],\n  \"garter\": [\"g-aa1-r t-er\", \"nn\"],\n  \"gas\": [\"g-ae1-s\", \"nn vb\"],\n  \"gaseous\": [\"g-ae1 s-iy ah-s\", \"jj\"],\n  \"gash\": [\"g-ae1-sh\", \"nn\"],\n  \"gasket\": [\"g-ae1-s k-ah-t\", \"nn\"],\n  \"gasoline\": [\"g-ae1 s-ah l-iy-n\", \"nn\"],\n  \"gasp\": [\"g-ae1-s-p\", \"nn vb\"],\n  \"gass\": [\"g-ae1-s\", \"nn\"],\n  \"gasser\": [\"g-ae1 s-er\", \"nn\"],\n  \"gassing\": [\"g-ae1 s-ih-ng\", \"nn\"],\n  \"gastric\": [\"g-ae1 s-t-r-ih-k\", \"jj\"],\n  \"gastrointestinal\": [\"g-ae s-t-r-ow ih-n t-eh1 s-t-ah n-ah-l\", \"jj\"],\n  \"gastronomy\": [\"g-ae-s t-r-aa1 n-ah m-iy\", \"nn\"],\n  \"gate\": [\"g-ey1-t\", \"nn\"],\n  \"gateway\": [\"g-ey1-t w-ey\", \"nn\"],\n  \"gather\": [\"g-ae1 dh-er\", \"vb vbp\"],\n  \"gathering\": [\"g-ae1 dh-er ih-ng\", \"nn vbg\"],\n  \"gauche\": [\"g-ow1-sh\", \"jj\"],\n  \"gaudy\": [\"g-ao1 d-iy\", \"jj\"],\n  \"gauge\": [\"g-ey1-jh\", \"nn vb\"],\n  \"gaunt\": [\"g-ao1-n-t\", \"jj\"],\n  \"gauntlet\": [\"g-ao1-n-t l-ah-t\", \"nn\"],\n  \"gauss\": [\"g-aw1-s\", \"nn\"],\n  \"gauze\": [\"g-ao1-z\", \"nn\"],\n  \"gave\": [\"g-ey1-v\", \"vbd\"],\n  \"gawky\": [\"g-ao1 k-iy\", \"jj\"],\n  \"gay\": [\"g-ey1\", \"jj\"],\n  \"gaze\": [\"g-ey1-z\", \"nn vb vbp\"],\n  \"gazelle\": [\"g-ah z-eh1-l\", \"nn\"],\n  \"gear\": [\"g-ih1-r\", \"nn vb vbp\"],\n  \"gearbox\": [\"g-ih1-r b-aa-k-s\", \"nn\"],\n  \"geek\": [\"g-iy1-k\", \"nn\"],\n  \"gel\": [\"jh-eh1-l\", \"nn vb\"],\n  \"gelatin\": [\"jh-eh1 l-ah t-ah-n\", \"nn\"],\n  \"gem\": [\"jh-eh1-m\", \"nn\"],\n  \"gemstone\": [\"jh-eh1-m s-t-ow-n\", \"nn\"],\n  \"gen\": [\"jh-eh1 n-er ah-l\", \"nn\"],\n  \"gendarme\": [\"zh-aa1-n d-aa-r-m\", \"nn\"],\n  \"gender\": [\"jh-eh1-n d-er\", \"nn vb\"],\n  \"gene\": [\"jh-iy1-n\", \"nn\"],\n  \"genera\": [\"jh-eh1 n-er ah\", \"nn\"],\n  \"general\": [\"jh-eh1 n-er ah-l\", \"jj nn\"],\n  \"generalist\": [\"jh-eh1 n-er ah l-ih-s-t\", \"nn\"],\n  \"generality\": [\"jh-eh n-er ae1 l-ah t-iy\", \"nn\"],\n  \"generalization\": [\"jh-eh n-er ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"generalize\": [\"jh-eh1 n-er ah l-ay-z\", \"vb vbp\"],\n  \"generalized\": [\"jh-eh1 n-er ah l-ay-z-d\", \"jj vbn\"],\n  \"generally\": [\"jh-eh1 n-er ah l-iy\", \"rb\"],\n  \"generalship\": [\"jh-eh1 n-er ah-l sh-ih-p\", \"nn\"],\n  \"generate\": [\"jh-eh1 n-er ey-t\", \"vb vbp\"],\n  \"generation\": [\"jh-eh n-er ey1 sh-ah-n\", \"nn\"],\n  \"generational\": [\"jh-eh n-er ey1 sh-ah n-ah-l\", \"jj\"],\n  \"generator\": [\"jh-eh1 n-er ey t-er\", \"nn\"],\n  \"generic\": [\"jh-ah n-eh1 r-ih-k\", \"jj\"],\n  \"generically\": [\"jh-ah n-eh1 r-ih-k l-iy\", \"rb\"],\n  \"generosity\": [\"jh-eh n-er aa1 s-ah t-iy\", \"nn\"],\n  \"generous\": [\"jh-eh1 n-er ah-s\", \"jj\"],\n  \"generously\": [\"jh-eh1 n-er ah-s l-iy\", \"rb\"],\n  \"genesis\": [\"jh-eh1 n-ah s-ah-s\", \"nn\"],\n  \"genetic\": [\"jh-ah n-eh1 t-ih-k\", \"jj\"],\n  \"genetically\": [\"jh-ah n-eh1 t-ih-k l-iy\", \"rb\"],\n  \"geneticist\": [\"jh-ah n-eh1 t-ah s-ah-s-t\", \"nn\"],\n  \"genial\": [\"jh-iy1 n-y-ah-l\", \"jj\"],\n  \"genie\": [\"jh-iy1 n-iy\", \"nn\"],\n  \"genital\": [\"jh-eh1 n-ah t-ah-l\", \"jj\"],\n  \"genius\": [\"jh-iy1 n-y-ah-s\", \"nn\"],\n  \"genocide\": [\"jh-eh1 n-ah s-ay-d\", \"nn\"],\n  \"genome\": [\"jh-iy1 n-ow-m\", \"nn\"],\n  \"genre\": [\"zh-aa1-n r-ah\", \"nn\"],\n  \"genteel\": [\"jh-eh-n t-iy1-l\", \"jj\"],\n  \"gentian\": [\"jh-eh1-n sh-ah-n\", \"nn\"],\n  \"gentile\": [\"jh-eh1-n t-ay-l\", \"nn jj\"],\n  \"gentility\": [\"jh-eh-n t-ih1 l-ih t-iy\", \"nn\"],\n  \"gentle\": [\"jh-eh1-n t-ah-l\", \"jj vb\"],\n  \"gentleman\": [\"jh-eh1-n t-ah-l m-ah-n\", \"nn\"],\n  \"gentlemanly\": [\"jh-eh1-n t-ah-l m-ah-n l-iy\", \"jj\"],\n  \"gentleness\": [\"jh-eh1-n t-ah-l n-ah-s\", \"nn\"],\n  \"gentler\": [\"jh-eh1-n-t l-er\", \"jjr\"],\n  \"gently\": [\"jh-eh1-n-t l-iy\", \"rb\"],\n  \"gentrified\": [\"jh-eh1-n t-r-ih f-ay-d\", \"vbn\"],\n  \"gentrify\": [\"jh-eh1-n-t-r-ih-f-ay\", \"vb\"],\n  \"gentry\": [\"jh-eh1-n t-r-iy\", \"nn\"],\n  \"genuine\": [\"jh-eh1-n y-uw w-ah-n\", \"jj\"],\n  \"genuinely\": [\"jh-eh1-n y-uw w-ah-n l-iy\", \"rb\"],\n  \"genus\": [\"jh-iy1 n-ah-s\", \"nn\"],\n  \"geocentric\": [\"jh-iy ow s-eh1-n t-r-ih-k\", \"jj\"],\n  \"geochemistry\": [\"jh-iy ow k-eh1 m-ah s-t-r-iy\", \"nn\"],\n  \"geographer\": [\"jh-iy aa1 g-r-ah f-er\", \"nn\"],\n  \"geographic\": [\"jh-iy ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"geographical\": [\"jh-iy ah g-r-ae1 f-ih k-ah-l\", \"jj\"],\n  \"geographically\": [\"jh-iy ah g-r-ae1 f-ih k-ah l-iy\", \"rb\"],\n  \"geography\": [\"jh-iy aa1 g-r-ah f-iy\", \"nn\"],\n  \"geologic\": [\"jh-iy ah l-aa1 jh-ih-k\", \"jj\"],\n  \"geological\": [\"jh-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"geologist\": [\"jh-iy aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"geology\": [\"jh-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"geometric\": [\"jh-iy ah m-eh1 t-r-ih-k\", \"jj\"],\n  \"geometrical\": [\"jh-iy ah m-eh1 t-r-ih k-ah-l\", \"jj\"],\n  \"geometrically\": [\"jh-iy ah m-eh1 t-r-ih-k l-iy\", \"rb\"],\n  \"geometry\": [\"jh-iy aa1 m-ah t-r-iy\", \"nn\"],\n  \"geopolitical\": [\"jh-iy ow p-ah l-ih1 t-ih k-ah-l\", \"jj\"],\n  \"geothermal\": [\"jh-iy ow th-er1 m-ah-l\", \"jj\"],\n  \"geranium\": [\"jh-er ey1 n-iy ah-m\", \"nn\"],\n  \"geriatric\": [\"jh-eh r-iy ae1 t-r-ih-k\", \"jj\"],\n  \"germ\": [\"jh-er1-m\", \"nn\"],\n  \"germane\": [\"jh-er m-ey1-n\", \"jj\"],\n  \"germinate\": [\"jh-er1 m-ah n-ey-t\", \"vb vbp\"],\n  \"germinated\": [\"jh-er1 m-ah n-ey t-ih-d\", \"jj\"],\n  \"gerrymandering\": [\"jh-eh r-iy m-ae1-n d-er ih-ng\", \"nn\"],\n  \"gesture\": [\"jh-eh1-s ch-er\", \"nn vb\"],\n  \"get\": [\"g-eh1-t\", \"vb vbp\"],\n  \"getaway\": [\"g-eh1-t ah w-ey\", \"nn\"],\n  \"geyser\": [\"g-ay1 z-er\", \"nn\"],\n  \"ghastly\": [\"g-ae1-s-t l-iy\", \"jj\"],\n  \"ghetto\": [\"g-eh1 t-ow\", \"nn\"],\n  \"ghost\": [\"g-ow1-s-t\", \"nn\"],\n  \"ghostbuster\": [\"g-ow1-s-t b-ah s-t-er\", \"nn\"],\n  \"ghostlike\": [\"g-ow1-s-t l-ay-k\", \"jj\"],\n  \"ghostly\": [\"g-ow1-s-t l-iy\", \"jj\"],\n  \"ghoulish\": [\"g-uw1 l-ih-sh\", \"jj\"],\n  \"giant\": [\"jh-ay1 ah-n-t\", \"nn jj\"],\n  \"gibberish\": [\"g-ih1 b-er ih-sh\", \"nn\"],\n  \"giblet\": [\"jh-ih1 b-l-ah-t\", \"nn\"],\n  \"giddy\": [\"g-ih1 d-iy\", \"jj\"],\n  \"gift\": [\"g-ih1-f-t\", \"nn vb\"],\n  \"gifted\": [\"g-ih1-f t-ah-d\", \"jj vbn\"],\n  \"gig\": [\"g-ih1-g\", \"nn\"],\n  \"gigantic\": [\"jh-ay g-ae1-n t-ih-k\", \"jj\"],\n  \"giggle\": [\"g-ih1 g-ah-l\", \"nn vb\"],\n  \"gigolo\": [\"jh-ih1-g ah l-ow\", \"nn\"],\n  \"gilded\": [\"g-ih1-l d-ih-d\", \"jj\"],\n  \"gilding\": [\"g-ih1-l d-ih-ng\", \"nn\"],\n  \"gilt\": [\"g-ih1-l-t\", \"jj nn\"],\n  \"gimmick\": [\"g-ih1 m-ih-k\", \"nn\"],\n  \"gimmickry\": [\"g-ih1 m-ih k-r-iy\", \"nn\"],\n  \"gimmicky\": [\"g-ih m-ih1 k-iy\", \"jj\"],\n  \"gin\": [\"jh-ih1-n\", \"nn\"],\n  \"ginger\": [\"jh-ih1-n jh-er\", \"nn\"],\n  \"gingerly\": [\"jh-ih1-n jh-er l-iy\", \"rb jj\"],\n  \"ginning\": [\"jh-ih1 n-ih-ng\", \"nn\"],\n  \"ginseng\": [\"jh-ih1-n s-eh-ng\", \"nn\"],\n  \"gird\": [\"g-er1-d\", \"vb\"],\n  \"girder\": [\"g-er1 d-er\", \"nn\"],\n  \"girdle\": [\"g-er1 d-ah-l\", \"nn\"],\n  \"girl\": [\"g-er1-l\", \"nn\"],\n  \"girlfriend\": [\"g-er1-l f-r-eh-n-d\", \"nn\"],\n  \"girlie\": [\"g-er1 l-iy\", \"nn\"],\n  \"girlish\": [\"g-er1 l-ih-sh\", \"jj\"],\n  \"girlishly\": [\"g-er1 l-ih-sh l-iy\", \"rb\"],\n  \"girth\": [\"g-er1-th\", \"nn\"],\n  \"gist\": [\"jh-ih1-s-t\", \"nn\"],\n  \"give\": [\"g-ih1-v\", \"vb vbp\"],\n  \"giveaway\": [\"g-ih1 v-ah w-ey\", \"nn jj\"],\n  \"giveback\": [\"g-ih1-v b-ae-k\", \"nn\"],\n  \"given\": [\"g-ih1 v-ah-n\", \"vbn jj\"],\n  \"givenness\": [\"g-ih1 v-ah n-ah-s\", \"nn\"],\n  \"giver\": [\"g-ih1 v-er\", \"nn\"],\n  \"gizmo\": [\"g-ih1-z m-ow\", \"nn\"],\n  \"glacial\": [\"g-l-ey1 sh-ah-l\", \"jj\"],\n  \"glacier\": [\"g-l-ey1 sh-er\", \"nn\"],\n  \"glad\": [\"g-l-ae1-d\", \"jj\"],\n  \"glade\": [\"g-l-ey1-d\", \"nn\"],\n  \"gladiator\": [\"g-l-ae1 d-iy ey t-er\", \"nn\"],\n  \"gladly\": [\"g-l-ae1-d l-iy\", \"rb\"],\n  \"glamor\": [\"g-l-ae1 m-er\", \"nn\"],\n  \"glamorous\": [\"g-l-ae1 m-er ah-s\", \"jj\"],\n  \"glamour\": [\"g-l-ae1 m-er\", \"nn\"],\n  \"glance\": [\"g-l-ae1-n-s\", \"nn vb\"],\n  \"glancing\": [\"g-l-ae1-n s-ih-ng\", \"vbg jj\"],\n  \"gland\": [\"g-l-ae1-n-d\", \"nn\"],\n  \"glandular\": [\"g-l-ae1-n jh-ah l-er\", \"jj\"],\n  \"glare\": [\"g-l-eh1-r\", \"nn vb\"],\n  \"glasnost\": [\"g-l-ae1-s n-aa-s-t\", \"nn\"],\n  \"glass\": [\"g-l-ae1-s\", \"nn\"],\n  \"glassware\": [\"g-l-ae1-s w-eh-r\", \"nn\"],\n  \"glassy\": [\"g-l-ae1 s-iy\", \"jj\"],\n  \"glaucoma\": [\"g-l-ao k-ow1 m-ah\", \"nn\"],\n  \"glaze\": [\"g-l-ey1-z\", \"nn vb vbp\"],\n  \"gleam\": [\"g-l-iy1-m\", \"nn vb vbp\"],\n  \"glean\": [\"g-l-iy1-n\", \"vb\"],\n  \"glee\": [\"g-l-iy1\", \"nn\"],\n  \"gleeful\": [\"g-l-iy1 f-ah-l\", \"jj\"],\n  \"gleefully\": [\"g-l-iy1 f-ah l-iy\", \"rb\"],\n  \"glen\": [\"g-l-eh1-n\", \"nn\"],\n  \"glib\": [\"g-l-ih1-b\", \"jj\"],\n  \"glibly\": [\"g-l-ih1 b-l-iy\", \"rb\"],\n  \"glide\": [\"g-l-ay1-d\", \"vb vbp\"],\n  \"glider\": [\"g-l-ay1 d-er\", \"nn\"],\n  \"glimmer\": [\"g-l-ih1 m-er\", \"nn vb\"],\n  \"glimpse\": [\"g-l-ih1-m-p-s\", \"nn vb\"],\n  \"glint\": [\"g-l-ih1-n-t\", \"nn\"],\n  \"glisten\": [\"g-l-ih1-s-ah-n\", \"vb\"],\n  \"glitch\": [\"g-l-ih1-ch\", \"nn\"],\n  \"glitter\": [\"g-l-ih1 t-er\", \"nn vb\"],\n  \"glittery\": [\"g-l-ih1 t-er iy\", \"nn\"],\n  \"glitz\": [\"g-l-ih1-t-s\", \"nn\"],\n  \"glitzy\": [\"g-l-ih1-t s-iy\", \"jj nn\"],\n  \"gloat\": [\"g-l-ow1-t\", \"vb nn\"],\n  \"global\": [\"g-l-ow1 b-ah-l\", \"jj\"],\n  \"globalization\": [\"g-l-ow b-ah-l ih z-ey1 sh-ah-n\", \"nn\"],\n  \"globalized\": [\"g-l-ow1 b-ah-l ay-z-d\", \"jj\"],\n  \"globally\": [\"g-l-ow1 b-ah-l iy\", \"rb\"],\n  \"globe\": [\"g-l-ow1-b\", \"nn\"],\n  \"globulin\": [\"g-l-aa1 b-y-ah l-ih-n\", \"nn\"],\n  \"gloom\": [\"g-l-uw1-m\", \"nn\"],\n  \"gloomier\": [\"g-l-uw1 m-iy er\", \"jjr rbr\"],\n  \"gloomily\": [\"g-l-uw1 m-ah l-iy\", \"rb\"],\n  \"gloomy\": [\"g-l-uw1 m-iy\", \"jj\"],\n  \"glop\": [\"g-l-aa1-p\", \"nn\"],\n  \"glorified\": [\"g-l-ao1 r-ah f-ay-d\", \"vbn jj\"],\n  \"glorify\": [\"g-l-ao1 r-ah f-ay\", \"vb vbp\"],\n  \"glorious\": [\"g-l-ao1 r-iy ah-s\", \"jj\"],\n  \"gloriously\": [\"g-l-ao1 r-iy ah-s l-iy\", \"rb\"],\n  \"glory\": [\"g-l-ao1 r-iy\", \"nn\"],\n  \"gloss\": [\"g-l-ao1-s\", \"vb nn vbp\"],\n  \"glossary\": [\"g-l-ao1 s-er iy\", \"nn\"],\n  \"glossy\": [\"g-l-ao1 s-iy\", \"jj\"],\n  \"glottal\": [\"g-l-aa1 t-ah-l\", \"jj\"],\n  \"glove\": [\"g-l-ah1-v\", \"nn vb\"],\n  \"gloved\": [\"g-l-ah1-v-d\", \"vbn jj\"],\n  \"glover\": [\"g-l-ah1 v-er\", \"nn\"],\n  \"glow\": [\"g-l-ow1\", \"nn vb\"],\n  \"glower\": [\"g-l-aw1-er\", \"vb\"],\n  \"glowing\": [\"g-l-ow1 ih-ng\", \"vbg jj\"],\n  \"glucose\": [\"g-l-uw1 k-ow-s\", \"nn\"],\n  \"glue\": [\"g-l-uw1\", \"nn vb\"],\n  \"glum\": [\"g-l-ah1-m\", \"jj nn\"],\n  \"glumly\": [\"g-l-ah1-m l-iy\", \"rb\"],\n  \"glut\": [\"g-l-ah1-t\", \"nn vb\"],\n  \"glutamate\": [\"g-l-uw1 t-ah m-ey-t\", \"nn\"],\n  \"glutamic\": [\"g-l-uw t-ae1 m-ih-k\", \"jj\"],\n  \"glutaric\": [\"g-l-uw t-ae1 r-ih-k\", \"jj\"],\n  \"gluten\": [\"g-l-uw1 t-ah-n\", \"nn\"],\n  \"glutted\": [\"g-l-ah1 t-ih-d\", \"vbn jj\"],\n  \"glutton\": [\"g-l-ah1 t-ah-n\", \"nn\"],\n  \"gluttony\": [\"g-l-ah1 t-ah-n iy\", \"nn\"],\n  \"glycerol\": [\"g-l-ih1 s-er ow-l\", \"nn\"],\n  \"glycol\": [\"g-l-ay1 k-ao-l\", \"nn\"],\n  \"gnarled\": [\"n-aa1-r-l-d\", \"jj\"],\n  \"gnash\": [\"n-ae1-sh\", \"vb\"],\n  \"gnaw\": [\"n-ao1\", \"vb\"],\n  \"gnawing\": [\"n-ao1 ih-ng\", \"nn\"],\n  \"gnome\": [\"n-ow1-m\", \"nn\"],\n  \"go\": [\"g-ow1\", \"vb jj nn rp vbp\"],\n  \"goad\": [\"g-ow1-d\", \"nn vb\"],\n  \"goal\": [\"g-ow1-l\", \"nn\"],\n  \"goat\": [\"g-ow1-t\", \"nn\"],\n  \"goatee\": [\"g-ow1 t-iy1\", \"nn\"],\n  \"gob\": [\"g-aa1-b\", \"nn\"],\n  \"gobble\": [\"g-aa1 b-ah-l\", \"nn vb\"],\n  \"gobbledygook\": [\"g-aa b-ah-l d-iy g-uh1-k\", \"nn\"],\n  \"gobbler\": [\"g-aa1 b-ah-l er\", \"nn\"],\n  \"god\": [\"g-aa1-d\", \"nn\"],\n  \"goddam\": [\"g-aa1 d-d-ae-m\", \"jj\"],\n  \"goddamn\": [\"g-aa1 d-d-ae-m\", \"uh vbn jj\"],\n  \"goddess\": [\"g-aa1 d-ah-s\", \"nn\"],\n  \"godfather\": [\"g-aa1-d f-aa dh-er\", \"nn\"],\n  \"godhead\": [\"g-aa1-d hh-eh-d\", \"nn\"],\n  \"godless\": [\"g-aa1-d l-ah-s\", \"jj\"],\n  \"godmother\": [\"g-aa1-d m-ah dh-er\", \"nn\"],\n  \"godsend\": [\"g-aa1-d s-eh-n-d\", \"nn\"],\n  \"goggle\": [\"g-aa1 g-ah-l\", \"nn vb\"],\n  \"going\": [\"g-ow1 ih-ng\", \"vbg jj nn\"],\n  \"gold\": [\"g-ow1-l-d\", \"nn jj\"],\n  \"golden\": [\"g-ow1-l d-ah-n\", \"jj\"],\n  \"goldfish\": [\"g-ow1-l-d f-ih-sh\", \"nn\"],\n  \"goldsmith\": [\"g-ow1-l-d s-m-ih-th\", \"nn\"],\n  \"goldstock\": [\"g-ow1-l-d s-t-aa-k\", \"nn\"],\n  \"golf\": [\"g-aa1-l-f\", \"nn vb\"],\n  \"golfer\": [\"g-aa1-l f-er\", \"nn\"],\n  \"golfing\": [\"g-aa1-l f-ih-ng\", \"nn jj vbg\"],\n  \"golly\": [\"g-aa1 l-iy\", \"uh\"],\n  \"gone\": [\"g-ao1-n\", \"vbn jj\"],\n  \"goo\": [\"g-uw1\", \"nn\"],\n  \"good\": [\"g-uh1-d\", \"jj nn rb\"],\n  \"goodbye\": [\"g-uh-d b-ay1\", \"nn uh\"],\n  \"goodness\": [\"g-uh1-d n-ah-s\", \"nn\"],\n  \"goodnight\": [\"g-uh1-d n-ay-t\", \"nn\"],\n  \"goodwill\": [\"g-uh1-d w-ih1-l\", \"nn\"],\n  \"goody\": [\"g-uh1 d-iy\", \"uh\"],\n  \"gooey\": [\"g-uw1 iy\", \"jj\"],\n  \"goof\": [\"g-uw1-f\", \"vb\"],\n  \"goofy\": [\"g-uw1 f-iy\", \"jj\"],\n  \"google\": [\"g-uw1 g-ah-l\", \"nn vb\"],\n  \"goon\": [\"g-uw1-n\", \"nn\"],\n  \"goose\": [\"g-uw1-s\", \"nn\"],\n  \"gooseberry\": [\"g-uw1-s b-eh r-iy\", \"nn\"],\n  \"goosey\": [\"g-uw1 s-iy\", \"jj\"],\n  \"gore\": [\"g-ao1-r\", \"vb\"],\n  \"gorge\": [\"g-ao1-r-jh\", \"nn\"],\n  \"gorgeous\": [\"g-ao1-r jh-ah-s\", \"jj\"],\n  \"gorilla\": [\"g-er ih1 l-ah\", \"nn\"],\n  \"gory\": [\"g-ao1 r-iy\", \"jj\"],\n  \"gosh\": [\"g-aa1-sh\", \"uh\"],\n  \"gospel\": [\"g-aa1 s-p-ah-l\", \"nn\"],\n  \"gossamer\": [\"g-aa1 s-ah m-er\", \"nn\"],\n  \"gossip\": [\"g-aa1 s-ah-p\", \"nn vb\"],\n  \"gossipy\": [\"g-aa1 s-ah p-iy\", \"jj\"],\n  \"got\": [\"g-aa1-t\", \"vbd vbn\"],\n  \"gothic\": [\"g-aa1 th-ih-k\", \"jj\"],\n  \"gotten\": [\"g-aa1 t-ah-n\", \"vbn\"],\n  \"gouge\": [\"g-aw1-jh\", \"vb vbp\"],\n  \"gourd\": [\"g-ao1-r-d\", \"nn\"],\n  \"gourmet\": [\"g-uh1-r m-ey\", \"nn jj\"],\n  \"gout\": [\"g-aw1-t\", \"nn\"],\n  \"gouty\": [\"g-aw1 t-iy\", \"jj\"],\n  \"govern\": [\"g-ah1 v-er-n\", \"vb vbp\"],\n  \"governance\": [\"g-ah1 v-er n-ah-n-s\", \"nn\"],\n  \"governed\": [\"g-ah1 v-er-n-d\", \"vbn jj vbd\"],\n  \"governess\": [\"g-ah1 v-er n-ah-s\", \"nn\"],\n  \"governing\": [\"g-ah1 v-er n-ih-ng\", \"vbg jj nn\"],\n  \"government\": [\"g-ah1 v-er m-ah-n-t\", \"nn\"],\n  \"governmental\": [\"g-ah1 v-er m-eh-n t-ah-l\", \"jj\"],\n  \"governor\": [\"g-ah1 v-er n-er\", \"nn\"],\n  \"gown\": [\"g-aw1-n\", \"nn\"],\n  \"grab\": [\"g-r-ae1-b\", \"vb jj nn vbp\"],\n  \"grace\": [\"g-r-ey1-s\", \"nn vb vbp\"],\n  \"graceful\": [\"g-r-ey1-s f-ah-l\", \"jj\"],\n  \"gracefully\": [\"g-r-ey1-s f-ah l-iy\", \"rb\"],\n  \"gracious\": [\"g-r-ey1 sh-ah-s\", \"jj\"],\n  \"graciously\": [\"g-r-ey1 sh-ah-s l-iy\", \"rb\"],\n  \"grad\": [\"g-r-ae1-d\", \"nn\"],\n  \"grade\": [\"g-r-ey1-d\", \"nn vb\"],\n  \"grader\": [\"g-r-ey1 d-er\", \"nn\"],\n  \"gradual\": [\"g-r-ae1 jh-uw ah-l\", \"jj rb\"],\n  \"gradualist\": [\"g-r-ae1 jh-ah-w ah l-ih-s-t\", \"nn\"],\n  \"gradually\": [\"g-r-ae1 jh-uw ah l-iy\", \"rb\"],\n  \"graduate\": [\"g-r-ae1 jh-ah-w ah-t\", \"nn jj vb vbp\"],\n  \"graduated\": [\"g-r-ae1 jh-uw ey t-ih-d\", \"vbn vbd jj\"],\n  \"graduation\": [\"g-r-ae jh-uw ey1 sh-ah-n\", \"nn\"],\n  \"graffiti\": [\"g-r-ah f-iy1 t-iy\", \"nn\"],\n  \"graft\": [\"g-r-ae1-f-t\", \"nn vb\"],\n  \"grafted\": [\"g-r-ae1-f t-ih-d\", \"jj vbn\"],\n  \"graham\": [\"g-r-ey1 ah-m\", \"nn\"],\n  \"grain\": [\"g-r-ey1-n\", \"nn\"],\n  \"grained\": [\"g-r-ey1-n-d\", \"jj\"],\n  \"grainy\": [\"g-r-ey1 n-iy\", \"jj\"],\n  \"gram\": [\"g-r-ae1-m\", \"nn\"],\n  \"grammar\": [\"g-r-ae1 m-er\", \"nn\"],\n  \"grammatical\": [\"g-r-ah m-ae1 t-ah k-ah-l\", \"jj\"],\n  \"grand\": [\"g-r-ae1-n-d\", \"jj\"],\n  \"grandchild\": [\"g-r-ae1-n-d ch-ay-l-d\", \"nn\"],\n  \"granddaughter\": [\"g-r-ae1-n d-ao t-er\", \"nn\"],\n  \"grander\": [\"g-r-ae1-n d-er\", \"jjr rbr\"],\n  \"grandest\": [\"g-r-ae1-n d-ah-s-t\", \"jjs\"],\n  \"grandeur\": [\"g-r-ae-n d-uw1-r\", \"nn\"],\n  \"grandfather\": [\"g-r-ae1-n-d f-aa dh-er\", \"nn vb\"],\n  \"grandiloquent\": [\"g-r-ae-n d-ih1 l-ah k-w-ah-n-t\", \"jj\"],\n  \"grandiose\": [\"g-r-ae-n d-iy ow1-s\", \"jj\"],\n  \"grandkid\": [\"g-r-ae1-n-d k-ih-d\", \"nn\"],\n  \"grandly\": [\"g-r-ae1-n-d l-iy\", \"rb\"],\n  \"grandma\": [\"g-r-ae1 m-aa\", \"nn\"],\n  \"grandmother\": [\"g-r-ae1-n-d m-ah dh-er\", \"nn\"],\n  \"grandmotherly\": [\"g-r-ae1-n-d m-ah dh-er l-iy\", \"jj\"],\n  \"grandparent\": [\"g-r-ae1-n-d p-eh r-ah-n-t\", \"nn\"],\n  \"grandson\": [\"g-r-ae1-n-d s-ah-n\", \"nn\"],\n  \"grandstand\": [\"g-r-ae1-n-d s-t-ae-n-d\", \"nn\"],\n  \"granite\": [\"g-r-ae1 n-ah-t\", \"nn\"],\n  \"grant\": [\"g-r-ae1-n-t\", \"nn vbp vb\"],\n  \"granted\": [\"g-r-ae1-n t-ah-d\", \"vbn jj vbd\"],\n  \"grantor\": [\"g-r-ae1-n t-er\", \"nn\"],\n  \"granular\": [\"g-r-ae1 n-y-ah l-er\", \"jj\"],\n  \"grape\": [\"g-r-ey1-p\", \"nn\"],\n  \"grapefruit\": [\"g-r-ey1-p f-r-uw-t\", \"nn\"],\n  \"grapeshot\": [\"g-r-ey1-p sh-aa-t\", \"nn\"],\n  \"grapevine\": [\"g-r-ey1-p v-ay-n\", \"nn\"],\n  \"graph\": [\"g-r-ae1-f\", \"nn\"],\n  \"graphic\": [\"g-r-ae1 f-ih-k\", \"jj\"],\n  \"graphical\": [\"g-r-ae1 f-ih k-ah-l\", \"jj\"],\n  \"graphically\": [\"g-r-ae1 f-ih-k l-iy\", \"rb\"],\n  \"graphite\": [\"g-r-ae1 f-ay-t\", \"nn\"],\n  \"grapple\": [\"g-r-ae1 p-ah-l\", \"vb\"],\n  \"grasp\": [\"g-r-ae1-s-p\", \"vb vbp nn\"],\n  \"grass\": [\"g-r-ae1-s\", \"nn vb\"],\n  \"grasser\": [\"g-r-ae1 s-er\", \"nn\"],\n  \"grasshopper\": [\"g-r-ae1-s hh-aa p-er\", \"nn\"],\n  \"grassland\": [\"g-r-ae1-s l-ae-n-d\", \"nn\"],\n  \"grassroot\": [\"g-r-ae1-s r-uw1-t\", \"nn\"],\n  \"grassy\": [\"g-r-ae1 s-iy\", \"jj\"],\n  \"grate\": [\"g-r-ey1-t\", \"nn vb\"],\n  \"grated\": [\"g-r-ey1 t-ih-d\", \"vbd jj\"],\n  \"grateful\": [\"g-r-ey1-t f-ah-l\", \"jj\"],\n  \"gratefully\": [\"g-r-ey1-t f-ah l-iy\", \"rb\"],\n  \"gratification\": [\"g-r-ae t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"gratified\": [\"g-r-ae1 t-ah f-ay-d\", \"vbn jj\"],\n  \"gratify\": [\"g-r-ae1 t-ah f-ay\", \"vb\"],\n  \"gratifying\": [\"g-r-ae1 t-ah f-ay ih-ng\", \"jj vbg\"],\n  \"grating\": [\"g-r-ey1 t-ih-ng\", \"nn\"],\n  \"gratis\": [\"g-r-ae1 t-ah-s\", \"jj rb\"],\n  \"gratitude\": [\"g-r-ae1 t-ah t-uw-d\", \"nn\"],\n  \"gratuitous\": [\"g-r-ah t-uw1 ah t-ah-s\", \"jj\"],\n  \"gratuitously\": [\"g-r-ah t-uw1 ah t-ah-s l-iy\", \"rb\"],\n  \"gratuity\": [\"g-r-ah t-uw1 ih t-iy\", \"nn\"],\n  \"grave\": [\"g-r-ey1-v\", \"jj nn\"],\n  \"gravel\": [\"g-r-ae1 v-ah-l\", \"nn\"],\n  \"gravely\": [\"g-r-ey1-v l-iy\", \"rb\"],\n  \"graven\": [\"g-r-ey1 v-ah-n\", \"jj\"],\n  \"graver\": [\"g-r-ey1 v-er\", \"jjr rbr\"],\n  \"gravest\": [\"g-r-ae1 v-ah-s-t\", \"jjs\"],\n  \"graveyard\": [\"g-r-ey1-v y-aa-r-d\", \"nn\"],\n  \"gravitate\": [\"g-r-ae1-v-ih-t-ey-t\", \"vb\"],\n  \"gravitational\": [\"g-r-ae v-ih t-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"gravity\": [\"g-r-ae1 v-ah t-iy\", \"nn\"],\n  \"gravy\": [\"g-r-ey1 v-iy\", \"nn\"],\n  \"gray\": [\"g-r-ey1\", \"jj nn vb\"],\n  \"grayer\": [\"g-r-ey1 er\", \"jjr\"],\n  \"graze\": [\"g-r-ey1-z\", \"vbp vb\"],\n  \"grazer\": [\"g-r-ey1 z-er\", \"nn\"],\n  \"grazing\": [\"g-r-ey1 z-ih-ng\", \"vbg jj nn\"],\n  \"grease\": [\"g-r-iy1-s\", \"nn vb\"],\n  \"greasy\": [\"g-r-iy1 s-iy\", \"jj\"],\n  \"great\": [\"g-r-ey1-t\", \"jj rb\"],\n  \"greater\": [\"g-r-ey1 t-er\", \"jjr rbr\"],\n  \"greatest\": [\"g-r-ey1 t-ah-s-t\", \"jjs\"],\n  \"greatly\": [\"g-r-ey1-t l-iy\", \"rb\"],\n  \"greatness\": [\"g-r-ey1-t n-ah-s\", \"nn\"],\n  \"greed\": [\"g-r-iy1-d\", \"nn\"],\n  \"greedily\": [\"g-r-iy1 d-ah l-iy\", \"rb\"],\n  \"greedy\": [\"g-r-iy1 d-iy\", \"jj\"],\n  \"green\": [\"g-r-iy1-n\", \"jj\"],\n  \"greenback\": [\"g-r-iy1-n b-ae-k\", \"nn\"],\n  \"greener\": [\"g-r-iy1 n-er\", \"jjr\"],\n  \"greenfield\": [\"g-r-iy1-n f-iy-l-d\", \"nn\"],\n  \"greenhouse\": [\"g-r-iy1-n hh-aw-s\", \"nn\"],\n  \"greenish\": [\"g-r-iy1 n-ih-sh\", \"jj\"],\n  \"greenly\": [\"g-r-iy1-n l-iy\", \"rb\"],\n  \"greet\": [\"g-r-iy1-t\", \"vb vbp\"],\n  \"greeting\": [\"g-r-iy1 t-ih-ng\", \"nn vbg jj\"],\n  \"gregarious\": [\"g-r-ah g-eh1 r-iy ah-s\", \"jj\"],\n  \"grenade\": [\"g-r-ah n-ey1-d\", \"nn\"],\n  \"grew\": [\"g-r-uw1\", \"vbd vbn\"],\n  \"grey\": [\"g-r-ey1\", \"jj\"],\n  \"grid\": [\"g-r-ih1-d\", \"nn\"],\n  \"gridiron\": [\"g-r-ih1-d ay er-n\", \"nn\"],\n  \"gridlock\": [\"g-r-ih1-d l-aa-k\", \"nn vb\"],\n  \"gridlocked\": [\"g-r-ih1-d l-aa-k-t\", \"vbn jj\"],\n  \"grief\": [\"g-r-iy1-f\", \"nn\"],\n  \"grievance\": [\"g-r-iy1 v-ah-n-s\", \"nn\"],\n  \"grieve\": [\"g-r-iy1-v\", \"vb\"],\n  \"grievous\": [\"g-r-iy1 v-ah-s\", \"jj\"],\n  \"grill\": [\"g-r-ih1-l\", \"nn vb vbp\"],\n  \"grille\": [\"g-r-ih1-l\", \"nn\"],\n  \"grilled\": [\"g-r-ih1-l-d\", \"jj vbn\"],\n  \"grim\": [\"g-r-ih1-m\", \"jj\"],\n  \"grimace\": [\"g-r-ih1-m-ah-s\", \"vb\"],\n  \"grime\": [\"g-r-ay1-m\", \"nn\"],\n  \"grimly\": [\"g-r-ih1-m l-iy\", \"rb\"],\n  \"grimmer\": [\"g-r-ih1 m-er\", \"rbr\"],\n  \"grimmest\": [\"g-r-ih1 m-ah-s-t\", \"jjs\"],\n  \"grimness\": [\"g-r-ih1-m n-ah-s\", \"nn\"],\n  \"grimy\": [\"g-r-ay1 m-iy\", \"jj nn\"],\n  \"grin\": [\"g-r-ih1-n\", \"nn vb\"],\n  \"grind\": [\"g-r-ay1-n-d\", \"vbp nn vb\"],\n  \"grinder\": [\"g-r-ay1-n d-er\", \"nn\"],\n  \"grindstone\": [\"g-r-ay1-n-d s-t-ow-n\", \"nn\"],\n  \"gringo\": [\"g-r-ih1-ng g-ow\", \"nn\"],\n  \"grinning\": [\"g-r-ih1 n-ih-ng\", \"vbg jj\"],\n  \"grip\": [\"g-r-ih1-p\", \"nn vb vbp\"],\n  \"gripe\": [\"g-r-ay1-p\", \"vbp nn vb\"],\n  \"griping\": [\"g-r-ay1 p-ih-ng\", \"nn\"],\n  \"gripping\": [\"g-r-ih1 p-ih-ng\", \"vbg jj\"],\n  \"grisly\": [\"g-r-ih1-z l-iy\", \"jj\"],\n  \"grist\": [\"g-r-ih1-s-t\", \"nn\"],\n  \"grit\": [\"g-r-ih1-t\", \"nn vb\"],\n  \"gritty\": [\"g-r-ih1 t-iy\", \"jj\"],\n  \"grizzled\": [\"g-r-ih1 z-ah-l-d\", \"jj\"],\n  \"grizzly\": [\"g-r-ih1-z l-iy\", \"nn\"],\n  \"groan\": [\"g-r-ow1-n\", \"nn vb\"],\n  \"grocer\": [\"g-r-ow1 s-er\", \"nn\"],\n  \"grocery\": [\"g-r-ow1 s-er iy\", \"nn\"],\n  \"groggy\": [\"g-r-aa1 g-iy\", \"jj\"],\n  \"groin\": [\"g-r-oy1-n\", \"nn\"],\n  \"groom\": [\"g-r-uw1-m\", \"nn vb\"],\n  \"groove\": [\"g-r-uw1-v\", \"nn\"],\n  \"grope\": [\"g-r-ow1-p\", \"vb vbp\"],\n  \"gross\": [\"g-r-ow1-s\", \"jj nn vb\"],\n  \"grossly\": [\"g-r-ow1-s l-iy\", \"rb\"],\n  \"grotesque\": [\"g-r-ow t-eh1-s-k\", \"jj\"],\n  \"grotesquely\": [\"g-r-ow t-eh1-s-k l-iy\", \"rb\"],\n  \"ground\": [\"g-r-aw1-n-d\", \"nn jj vb vbd vbn\"],\n  \"grounded\": [\"g-r-aw1-n d-ih-d\", \"vbn vbd jj\"],\n  \"groundless\": [\"g-r-aw1-n-d l-ah-s\", \"jj\"],\n  \"groundwater\": [\"g-r-aw1-n-d w-aa t-er\", \"nn\"],\n  \"groundwork\": [\"g-r-aw1-n-d w-er-k\", \"nn\"],\n  \"group\": [\"g-r-uw1-p\", \"nn vb vbp\"],\n  \"grouper\": [\"g-r-uw1 p-er\", \"nn\"],\n  \"grouping\": [\"g-r-uw1 p-ih-ng\", \"nn vbg\"],\n  \"grouse\": [\"g-r-aw1-s\", \"nn vb\"],\n  \"grove\": [\"g-r-ow1-v\", \"nn\"],\n  \"grovel\": [\"g-r-aa1 v-ah-l\", \"vb\"],\n  \"grow\": [\"g-r-ow1\", \"vb vbp\"],\n  \"grower\": [\"g-r-ow1 er\", \"nn\"],\n  \"growing\": [\"g-r-ow1 ih-ng\", \"vbg jj nn\"],\n  \"growl\": [\"g-r-aw1-l\", \"nn vb\"],\n  \"grown\": [\"g-r-ow1-n\", \"vbn vbd jj\"],\n  \"grownup\": [\"g-r-ow1 n-ah-p\", \"nn\"],\n  \"growth\": [\"g-r-ow1-th\", \"nn jj vb\"],\n  \"grub\": [\"g-r-ah1-b\", \"nn\"],\n  \"grubby\": [\"g-r-ah1 b-iy\", \"jj\"],\n  \"grudge\": [\"g-r-ah1-jh\", \"nn\"],\n  \"grudging\": [\"g-r-ah1 jh-ih-ng\", \"jj\"],\n  \"grudgingly\": [\"g-r-ah1 jh-ih-ng l-iy\", \"rb\"],\n  \"grueling\": [\"g-r-uw1 ih l-ih-ng\", \"jj vbg\"],\n  \"gruesome\": [\"g-r-uw1 s-ah-m\", \"jj\"],\n  \"gruff\": [\"g-r-ah1-f\", \"jj\"],\n  \"grumble\": [\"g-r-ah1-m b-ah-l\", \"vbp vb\"],\n  \"grunt\": [\"g-r-ah1-n-t\", \"vb nn\"],\n  \"guarantee\": [\"g-eh r-ah-n t-iy1\", \"nn vb vbp\"],\n  \"guaranteed\": [\"g-eh r-ah-n t-iy1-d\", \"vbn jj vbd\"],\n  \"guarantor\": [\"g-eh r-ah-n t-ao1-r\", \"nn\"],\n  \"guaranty\": [\"g-eh r-ah-n t-iy1\", \"nn\"],\n  \"guard\": [\"g-aa1-r-d\", \"nn jj vb vbp\"],\n  \"guarded\": [\"g-aa1-r d-ah-d\", \"vbn jj vbd\"],\n  \"guardedly\": [\"g-aa1-r d-ih-d l-iy\", \"rb\"],\n  \"guardian\": [\"g-aa1-r d-iy ah-n\", \"nn\"],\n  \"guardianship\": [\"g-aa1-r d-iy ah-n sh-ih-p\", \"nn\"],\n  \"gubernatorial\": [\"g-uw b-er n-ah t-ao1 r-iy ah-l\", \"jj\"],\n  \"guerilla\": [\"g-er ih1 l-ah\", \"nn\"],\n  \"guerrilla\": [\"g-er ih1 l-ah\", \"nn jj\"],\n  \"guess\": [\"g-eh1-s\", \"vbp nn vb\"],\n  \"guesstimate\": [\"g-eh1 s-t-ih m-ih-t\", \"nn\"],\n  \"guesswork\": [\"g-eh1-s w-er-k\", \"nn\"],\n  \"guest\": [\"g-eh1-s-t\", \"nn jj\"],\n  \"guffaw\": [\"g-ah f-ao1\", \"nn\"],\n  \"guidance\": [\"g-ay1 d-ah-n-s\", \"nn\"],\n  \"guide\": [\"g-ay1-d\", \"nn vbp vb\"],\n  \"guidebook\": [\"g-ay1-d b-uh-k\", \"nn\"],\n  \"guided\": [\"g-ay1 d-ah-d\", \"vbn vbd jj\"],\n  \"guideline\": [\"g-ay1-d l-ay-n\", \"nn\"],\n  \"guidepost\": [\"g-ay1-d p-ow-s-t\", \"nn\"],\n  \"guiding\": [\"g-ay1 d-ih-ng\", \"vbg jj\"],\n  \"guild\": [\"g-ih1-l-d\", \"nn\"],\n  \"guilder\": [\"g-ih1-l d-er\", \"nn\"],\n  \"guile\": [\"g-ay1-l\", \"nn\"],\n  \"guileless\": [\"g-ay1-l l-ah-s\", \"jj\"],\n  \"guillotine\": [\"g-ih1 l-ah t-iy-n\", \"nn\"],\n  \"guilt\": [\"g-ih1-l-t\", \"nn\"],\n  \"guilty\": [\"g-ih1-l t-iy\", \"jj rb\"],\n  \"guinea\": [\"g-ih1 n-iy\", \"nn\"],\n  \"guise\": [\"g-ay1-z\", \"nn\"],\n  \"guitar\": [\"g-ih t-aa1-r\", \"nn\"],\n  \"guitarist\": [\"g-ih t-aa1 r-ah-s-t\", \"nn\"],\n  \"gulag\": [\"g-y-uw1 l-ae-g\", \"nn\"],\n  \"gulf\": [\"g-ah1-l-f\", \"nn\"],\n  \"gull\": [\"g-ah1-l\", \"nn\"],\n  \"gullet\": [\"g-ah1 l-ah-t\", \"nn\"],\n  \"gulley\": [\"g-ah1 l-iy\", \"nn\"],\n  \"gullibility\": [\"g-ah l-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"gullible\": [\"g-ah1 l-ah b-ah-l\", \"jj\"],\n  \"gully\": [\"g-ah1 l-iy\", \"nn\"],\n  \"gulp\": [\"g-ah1-l-p\", \"nn vb\"],\n  \"gum\": [\"g-ah1-m\", \"nn vb\"],\n  \"gummy\": [\"g-ah1 m-iy\", \"jj\"],\n  \"gumption\": [\"g-ah1-m-p sh-ah-n\", \"nn\"],\n  \"gun\": [\"g-ah1-n\", \"nn vb\"],\n  \"gunboat\": [\"g-ah1-n b-ow-t\", \"nn\"],\n  \"gunfight\": [\"g-ah1-n f-ay-t\", \"nn\"],\n  \"gunfighter\": [\"g-ah1-n f-ay t-er\", \"nn\"],\n  \"gunfire\": [\"g-ah1-n f-ay er\", \"nn\"],\n  \"gunflint\": [\"g-ah1-n f-l-ih-n-t\", \"nn\"],\n  \"gunman\": [\"g-ah1-n m-ah-n\", \"nn\"],\n  \"gunner\": [\"g-ah1 n-er\", \"nn\"],\n  \"gunny\": [\"g-ah1 n-iy\", \"nn\"],\n  \"gunpoint\": [\"g-ah1-n p-oy-n-t\", \"nn\"],\n  \"gunpowder\": [\"g-ah1-n p-aw d-er\", \"nn\"],\n  \"gunship\": [\"g-ah1-n sh-ih-p\", \"nn\"],\n  \"gunshot\": [\"g-ah1-n sh-aa-t\", \"nn\"],\n  \"gunslinger\": [\"g-ah1-n s-l-ih ng-er\", \"nn\"],\n  \"guppy\": [\"g-ah1 p-iy\", \"nn\"],\n  \"gurgle\": [\"g-er1 g-ah-l\", \"nn vb\"],\n  \"guru\": [\"g-uw1 r-uw\", \"nn\"],\n  \"gush\": [\"g-ah1-sh\", \"vbp vb\"],\n  \"gusher\": [\"g-ah1 sh-er\", \"nn\"],\n  \"gussied\": [\"g-ah1 s-iy-d\", \"vbn\"],\n  \"gussy\": [\"g-ah1-s-iy\", \"vb\"],\n  \"gust\": [\"g-ah1-s-t\", \"nn rb\"],\n  \"gusto\": [\"g-ah1 s-t-ow\", \"nn\"],\n  \"gusty\": [\"g-ah1 s-t-iy\", \"jj\"],\n  \"gut\": [\"g-ah1-t\", \"nn vb\"],\n  \"gutsy\": [\"g-ah1-t s-iy1\", \"jj\"],\n  \"gutter\": [\"g-ah1 t-er\", \"nn vb\"],\n  \"guttural\": [\"g-ah1 t-er ah-l\", \"jj nn\"],\n  \"guy\": [\"g-ay1\", \"nn\"],\n  \"guzzle\": [\"g-ah1 z-ah-l\", \"vb\"],\n  \"guzzler\": [\"g-ah1-z l-er\", \"nn\"],\n  \"guzzling\": [\"g-ah1 z-ah-l ih-ng\", \"nn\"],\n  \"gym\": [\"jh-ih1-m\", \"nn\"],\n  \"gymnast\": [\"jh-ih1-m n-ah-s-t\", \"nn\"],\n  \"gymnastic\": [\"jh-ih-m n-ae1 s-t-ih-k\", \"jj\"],\n  \"gynecologic\": [\"g-ay n-ah k-ah l-aa1 jh-ih-k\", \"jj\"],\n  \"gynecological\": [\"g-ay n-ah k-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"gynecologist\": [\"g-ay n-ah k-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"gynecology\": [\"g-ay n-ah k-aa1 l-ah jh-iy\", \"nn\"],\n  \"gypsum\": [\"jh-ih1-p s-ah-m\", \"nn\"],\n  \"gypsy\": [\"jh-ih1-p s-iy\", \"nn\"],\n  \"gyrate\": [\"jh-ay1 r-ey-t\", \"vb\"],\n  \"gyration\": [\"jh-ay r-ey1 sh-ah-n\", \"nn\"],\n  \"gyro\": [\"jh-ay1 r-ow\", \"nn\"],\n  \"gyroscope\": [\"jh-ay1 r-ah s-k-ow-p\", \"nn\"],\n  \"haberdashery\": [\"hh-ae1 b-er d-ae sh-er iy\", \"nn\"],\n  \"habit\": [\"hh-ae1 b-ah-t\", \"nn\"],\n  \"habitable\": [\"hh-ae1 b-ah t-ah b-ah-l\", \"jj\"],\n  \"habitat\": [\"hh-ae1 b-ah t-ae-t\", \"nn\"],\n  \"habitual\": [\"hh-ah b-ih1 ch-uw ah-l\", \"jj\"],\n  \"habitually\": [\"hh-ah b-ih1 ch-uw ah l-iy\", \"rb\"],\n  \"habitue\": [\"hh-ae1 b-ih ch-uw\", \"nn\"],\n  \"hable\": [\"hh-ey1 b-ah-l\", \"jj\"],\n  \"hack\": [\"hh-ae1-k\", \"nn vb\"],\n  \"hacker\": [\"hh-ae1 k-er\", \"nn\"],\n  \"hacking\": [\"hh-ae1 k-ih-ng\", \"jj nn\"],\n  \"hackle\": [\"hh-ae1 k-ah-l\", \"nn\"],\n  \"hackneyed\": [\"hh-ae1-k n-iy-d\", \"jj\"],\n  \"hacksaw\": [\"hh-ae1-k s-ao\", \"nn\"],\n  \"had\": [\"hh-ae1-d\", \"vbd vbn\"],\n  \"hadn't\": [\"hh-ae1-d-ah-n-d\", \"vbd vbn\"],\n  \"hadd\": [\"hh-ae1-d\", \"vbn\"],\n  \"haddock\": [\"hh-ae1 d-ah-k\", \"nn\"],\n  \"hafta\": [\"hh-ae1-f t-ah\", \"vb vbp\"],\n  \"haggard\": [\"hh-ae1 g-er-d\", \"jj\"],\n  \"haggle\": [\"hh-ae1 g-ah-l\", \"vb nn\"],\n  \"hail\": [\"hh-ey1-l\", \"nn vb vbp\"],\n  \"hailstorm\": [\"hh-ey1-l s-t-ao-r-m\", \"nn\"],\n  \"hair\": [\"hh-eh1-r\", \"nn\"],\n  \"haircut\": [\"hh-eh1-r k-ah-t\", \"nn\"],\n  \"hairdo\": [\"hh-eh1-r d-uw\", \"nn\"],\n  \"hairdresser\": [\"hh-eh1-r d-r-eh s-er\", \"nn\"],\n  \"hairless\": [\"hh-eh1-r l-ah-s\", \"jj\"],\n  \"hairline\": [\"hh-eh1-r l-ay-n\", \"nn\"],\n  \"hairspray\": [\"hh-eh1-r s-p-r-ey\", \"nn\"],\n  \"hairy\": [\"hh-eh1 r-iy\", \"jj\"],\n  \"halcyon\": [\"hh-ae1-l s-iy ah-n\", \"jj\"],\n  \"half\": [\"hh-ae1-f\", \"nn jj prp\"],\n  \"halfback\": [\"hh-ae1-f b-ae-k\", \"nn\"],\n  \"halfhearted\": [\"hh-ae1-f hh-aa-r t-ih-d\", \"jj\"],\n  \"halftime\": [\"hh-ae1-f t-ay-m\", \"nn\"],\n  \"halfway\": [\"hh-ae1-f w-ey1\", \"rb jj\"],\n  \"hall\": [\"hh-ao1-l\", \"nn\"],\n  \"hallmark\": [\"hh-aa1-l m-aa-r-k\", \"nn\"],\n  \"hallowed\": [\"hh-ae1 l-ow-d\", \"jj\"],\n  \"hallucination\": [\"hh-ah l-uw s-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"hallucinatory\": [\"hh-ah l-uw1 s-ah n-ah t-ao r-iy\", \"jj\"],\n  \"hallway\": [\"hh-ao1-l w-ey\", \"nn\"],\n  \"halo\": [\"hh-ey1 l-ow\", \"nn\"],\n  \"halogen\": [\"hh-ae1 l-ah jh-ah-n\", \"nn\"],\n  \"halogenate\": [\"hh-ae1-l-ah-jh-ah-n-ey-t\", \"vb\"],\n  \"halt\": [\"hh-ao1-l-t\", \"nn jj vb vbp\"],\n  \"halted\": [\"hh-ao1-l t-ah-d\", \"vbn nn vbd\"],\n  \"halter\": [\"hh-ao1-l t-er\", \"nn\"],\n  \"halting\": [\"hh-ao1-l t-ih-ng\", \"vbg jj\"],\n  \"haltingly\": [\"hh-ao1-l t-ih-ng l-iy\", \"rb\"],\n  \"halve\": [\"hh-ae1-v\", \"vb\"],\n  \"halved\": [\"hh-ae1-v-d\", \"vbn jj vbd\"],\n  \"ham\": [\"hh-ae1-m\", \"nn\"],\n  \"hamburger\": [\"hh-ae1-m b-er g-er\", \"nn\"],\n  \"hamlet\": [\"hh-ae1-m l-ah-t\", \"nn\"],\n  \"hammer\": [\"hh-ae1 m-er\", \"nn vbp vb\"],\n  \"hammerlock\": [\"hh-ae1 m-er l-aa-k\", \"nn\"],\n  \"hammock\": [\"hh-ae1 m-ah-k\", \"nn\"],\n  \"hamper\": [\"hh-ae1-m p-er\", \"vb nn\"],\n  \"hamstring\": [\"hh-ae1-m s-t-r-ih-ng\", \"vb\"],\n  \"hand\": [\"hh-ae1-n-d\", \"nn rb vb vbp jj\"],\n  \"handbag\": [\"hh-ae1-n-d b-ae-g\", \"nn\"],\n  \"handbill\": [\"hh-ae1-n-d b-ih-l\", \"nn\"],\n  \"handbook\": [\"hh-ae1-n-d b-uh-k\", \"nn\"],\n  \"handclasp\": [\"hh-ae1-n-d k-l-ae-s-p\", \"nn\"],\n  \"handcraft\": [\"hh-ae1-n-d-k-r-ae-f-t\", \"vb\"],\n  \"handcuff\": [\"hh-ae1-n-d k-ah-f\", \"vb vbp\"],\n  \"hander\": [\"hh-ae1-n d-er\", \"nn\"],\n  \"handful\": [\"hh-ae1-n-d f-uh-l\", \"nn\"],\n  \"handgun\": [\"hh-ae1-n-d g-ah-n\", \"nn\"],\n  \"handheld\": [\"hh-ae1-n-d hh-eh1-l-d\", \"jj\"],\n  \"handicap\": [\"hh-ae1-n d-iy k-ae-p\", \"nn vb\"],\n  \"handicapped\": [\"hh-ae1-n d-iy k-ae-p-t\", \"jj vbn\"],\n  \"handicraft\": [\"hh-ae1-n d-iy k-r-ae-f-t\", \"nn\"],\n  \"handier\": [\"hh-ae1-n d-iy er\", \"jjr\"],\n  \"handily\": [\"hh-ae1-n d-ah l-iy\", \"rb\"],\n  \"handiwork\": [\"hh-ae1-n d-iy w-er-k\", \"nn\"],\n  \"handkerchief\": [\"hh-ae1-ng k-er ch-ih-f\", \"nn\"],\n  \"handle\": [\"hh-ae1-n d-ah-l\", \"vb nn vbp\"],\n  \"handlebar\": [\"hh-ae1-n d-ah-l b-aa-r\", \"nn\"],\n  \"handler\": [\"hh-ae1-n-d l-er\", \"nn\"],\n  \"handmade\": [\"hh-ae1-n-d m-ey1-d\", \"jj\"],\n  \"handout\": [\"hh-ae1-n-d aw-t\", \"nn\"],\n  \"handpick\": [\"hh-ae1-n-d-p-ih1-k\", \"vb\"],\n  \"handset\": [\"hh-ae1-n-d s-eh-t\", \"nn\"],\n  \"handshake\": [\"hh-ae1-n-d sh-ey-k\", \"nn\"],\n  \"handsome\": [\"hh-ae1-n s-ah-m\", \"jj\"],\n  \"handsomely\": [\"hh-ae1-n s-ah-m l-iy\", \"rb\"],\n  \"handstand\": [\"hh-ae1-n-d s-t-ae-n-d\", \"nn\"],\n  \"handwriting\": [\"hh-ae1-n-d r-ay t-ih-ng\", \"nn\"],\n  \"handwritten\": [\"hh-ae1-n-d r-ih t-ah-n\", \"jj\"],\n  \"handy\": [\"hh-ae1-n d-iy\", \"jj\"],\n  \"handyman\": [\"hh-ae1-n d-iy m-ae-n\", \"nn\"],\n  \"hang\": [\"hh-ae1-ng\", \"vb jj vbp nn\"],\n  \"hangar\": [\"hh-ae1 ng-er\", \"nn\"],\n  \"hanger\": [\"hh-ae1 ng-er\", \"nn\"],\n  \"hanging\": [\"hh-ae1 ng-ih-ng\", \"vbg jj nn\"],\n  \"hangman\": [\"hh-ae1-ng m-ah-n\", \"nn\"],\n  \"hangout\": [\"hh-ae1-ng aw-t\", \"nn\"],\n  \"hangover\": [\"hh-ae1-ng ow v-er\", \"nn\"],\n  \"hank\": [\"hh-ae1-ng-k\", \"nn\"],\n  \"hanky\": [\"hh-ae1-ng k-iy\", \"nn\"],\n  \"haphazard\": [\"hh-ae-p hh-ae1 z-er-d\", \"jj\"],\n  \"haphazardly\": [\"hh-ae1-f ah z-er-d l-iy\", \"rb\"],\n  \"hapless\": [\"hh-ae1-p l-ah-s\", \"jj\"],\n  \"happen\": [\"hh-ae1 p-ah-n\", \"vb vbp\"],\n  \"happenstance\": [\"hh-ae1 p-ah-n s-t-ae-n-s\", \"nn\"],\n  \"happier\": [\"hh-ae1 p-iy er\", \"jjr\"],\n  \"happiest\": [\"hh-ae1 p-iy ah-s-t\", \"jjs\"],\n  \"happily\": [\"hh-ae1 p-ah l-iy\", \"rb\"],\n  \"happiness\": [\"hh-ae1 p-iy n-ah-s\", \"nn\"],\n  \"happy\": [\"hh-ae1 p-iy\", \"jj\"],\n  \"harangue\": [\"hh-er-ae1-ng\", \"vb\"],\n  \"harass\": [\"hh-er ae1-s\", \"vb vbp\"],\n  \"harassment\": [\"hh-er ae1-s m-ah-n-t\", \"nn\"],\n  \"harbinger\": [\"hh-aa1-r b-ih-n jh-er\", \"nn\"],\n  \"harbor\": [\"hh-aa1-r b-er\", \"nn vb vbp\"],\n  \"harborside\": [\"hh-aa1-r b-er s-ay-d\", \"nn\"],\n  \"hard\": [\"hh-aa1-r-d\", \"jj rb\"],\n  \"hardball\": [\"hh-aa1-r-d b-ao-l\", \"nn\"],\n  \"hardboard\": [\"hh-aa1-r-d b-ao-r-d\", \"nn\"],\n  \"hardcore\": [\"hh-aa1-r-d k-ao1-r\", \"jj nn\"],\n  \"hardcover\": [\"hh-aa1-r-d k-ah v-er\", \"nn\"],\n  \"harden\": [\"hh-aa1-r d-ah-n\", \"vb\"],\n  \"hardened\": [\"hh-aa1-r d-ah-n-d\", \"vbn jj vbd\"],\n  \"hardener\": [\"hh-aa1-r d-ah-n er\", \"nn\"],\n  \"harder\": [\"hh-aa1-r d-er\", \"jjr rbr jj rb\"],\n  \"hardest\": [\"hh-aa1-r d-ah-s-t\", \"jjs rbs rb\"],\n  \"hardier\": [\"hh-aa1-r d-iy er\", \"jjr\"],\n  \"hardline\": [\"hh-aa1-r-d l-ay-n\", \"jj nn\"],\n  \"hardliner\": [\"hh-aa1-r-d l-ay n-er\", \"nn\"],\n  \"hardly\": [\"hh-aa1-r-d l-iy\", \"rb\"],\n  \"hardness\": [\"hh-aa1-r-d n-ah-s\", \"nn\"],\n  \"hardship\": [\"hh-aa1-r-d sh-ih-p\", \"nn\"],\n  \"hardware\": [\"hh-aa1-r-d w-eh-r\", \"nn\"],\n  \"hardwood\": [\"hh-aa1-r-d w-uh-d\", \"nn\"],\n  \"hardworking\": [\"hh-aa1-r-d w-er k-ih-ng\", \"jj\"],\n  \"hardy\": [\"hh-aa1-r d-iy\", \"jj\"],\n  \"hare\": [\"hh-eh1-r\", \"nn\"],\n  \"harem\": [\"hh-eh1 r-ah-m\", \"nn\"],\n  \"harm\": [\"hh-aa1-r-m\", \"nn vb vbp\"],\n  \"harmful\": [\"hh-aa1-r-m f-ah-l\", \"jj\"],\n  \"harmless\": [\"hh-aa1-r-m l-ah-s\", \"jj\"],\n  \"harmlessly\": [\"hh-aa1-r-m l-ah-s l-iy\", \"rb\"],\n  \"harmonic\": [\"hh-aa-r m-aa1 n-ih-k\", \"jj\"],\n  \"harmonious\": [\"hh-aa-r m-ow1 n-iy ah-s\", \"jj\"],\n  \"harmonization\": [\"hh-aa-r m-ah n-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"harmonize\": [\"hh-aa1-r m-ah n-ay-z\", \"vb\"],\n  \"harmony\": [\"hh-aa1-r m-ah n-iy\", \"nn\"],\n  \"harness\": [\"hh-aa1-r n-ah-s\", \"nn vbp vb\"],\n  \"harp\": [\"hh-aa1-r-p\", \"nn vb\"],\n  \"harpsichord\": [\"hh-aa1-r-p s-ah k-ao-r-d\", \"nn\"],\n  \"harried\": [\"hh-eh1 r-iy-d\", \"vbn vbd\"],\n  \"harrow\": [\"hh-ae1-r-ow\", \"vb\"],\n  \"harrowing\": [\"hh-eh1 r-ow ih-ng\", \"jj vbg\"],\n  \"harry\": [\"hh-eh1 r-iy\", \"vb\"],\n  \"harsh\": [\"hh-aa1-r-sh\", \"jj\"],\n  \"harsher\": [\"hh-aa1-r sh-er\", \"jjr rbr\"],\n  \"harshest\": [\"hh-aa1-r sh-ah-s-t\", \"jjs\"],\n  \"harshly\": [\"hh-aa1-r-sh l-iy\", \"rb\"],\n  \"harshness\": [\"hh-aa1-r-sh n-ah-s\", \"nn\"],\n  \"harvest\": [\"hh-aa1-r v-ah-s-t\", \"nn vb vbp\"],\n  \"has\": [\"hh-ae1-z\", \"vbz vbn\"],\n  \"hasn't\": [\"hh-ae1-z-ah-n-t\", \"vbz\"],\n  \"hash\": [\"hh-ae1-sh\", \"nn\"],\n  \"hashish\": [\"hh-ae1 sh-ih-sh\", \"nn\"],\n  \"hassle\": [\"hh-ae1 s-ah-l\", \"nn vb\"],\n  \"haste\": [\"hh-ey1-s-t\", \"nn\"],\n  \"hasten\": [\"hh-ey1 s-ah-n\", \"vb vbp\"],\n  \"hastily\": [\"hh-ey1 s-t-ah l-iy\", \"rb\"],\n  \"hasty\": [\"hh-ey1 s-t-iy\", \"jj\"],\n  \"hat\": [\"hh-ae1-t\", \"nn\"],\n  \"hatch\": [\"hh-ae1-ch\", \"nn vbp vb\"],\n  \"hatchback\": [\"hh-ae1-ch b-ae-k\", \"nn\"],\n  \"hatchery\": [\"hh-ae1 ch-er iy\", \"nn\"],\n  \"hatchet\": [\"hh-ae1 ch-ah-t\", \"nn\"],\n  \"hatching\": [\"hh-ae1 ch-ih-ng\", \"nn vbg\"],\n  \"hate\": [\"hh-ey1-t\", \"vb\"],\n  \"hateful\": [\"hh-ey1-t f-ah-l\", \"jj\"],\n  \"hater\": [\"hh-ey1 t-er\", \"nn\"],\n  \"hatred\": [\"hh-ey1 t-r-ah-d\", \"nn\"],\n  \"haughty\": [\"hh-ao1 t-iy\", \"jj\"],\n  \"haul\": [\"hh-ao1-l\", \"nn vb\"],\n  \"hauler\": [\"hh-ao1 l-er\", \"nn\"],\n  \"haunt\": [\"hh-ao1-n-t\", \"vb vbp nn\"],\n  \"haunted\": [\"hh-ao1-n t-ah-d\", \"vbn vbd jj\"],\n  \"haunting\": [\"hh-ao1-n t-ih-ng\", \"jj vbg\"],\n  \"hauntingly\": [\"hh-ao1-n t-ih-ng l-iy\", \"rb\"],\n  \"have\": [\"hh-ae1-v\", \"vbp jj vb\"],\n  \"haven\": [\"hh-ey1 v-ah-n\", \"nn\"],\n  \"haven't\": [\"hh-ae1-v-ah-n-t\", \"vbp vbn\"],\n  \"havoc\": [\"hh-ae1 v-ah-k\", \"nn\"],\n  \"hawk\": [\"hh-ao1-k\", \"nn vbp vb\"],\n  \"hawker\": [\"hh-ao1 k-er\", \"nn\"],\n  \"hawkish\": [\"hh-ao1 k-ih-sh\", \"jj\"],\n  \"hay\": [\"hh-ey1\", \"nn vb\"],\n  \"hayfield\": [\"hh-ey1 f-iy-l-d\", \"nn\"],\n  \"haystack\": [\"hh-ey1 s-t-ae-k\", \"nn\"],\n  \"hazard\": [\"hh-ae1 z-er-d\", \"nn vb\"],\n  \"hazardous\": [\"hh-ae1 z-er d-ah-s\", \"jj\"],\n  \"haze\": [\"hh-ey1-z\", \"nn\"],\n  \"hazel\": [\"hh-ey1 z-ah-l\", \"jj\"],\n  \"hazelnut\": [\"hh-ey1 z-ah-l n-ah-t\", \"nn\"],\n  \"hazy\": [\"hh-ey1 z-iy\", \"jj\"],\n  \"he\": [\"hh-iy1\", \"prp\"],\n  \"head\": [\"hh-eh1-d\", \"nn jj rb vb vbp\"],\n  \"headache\": [\"hh-eh1-d ey-k\", \"nn\"],\n  \"headboard\": [\"hh-eh1-d b-ao-r-d\", \"nn\"],\n  \"headcount\": [\"hh-eh1-d k-aw-n-t\", \"nn\"],\n  \"headdress\": [\"hh-eh1-d r-eh-s\", \"nn\"],\n  \"header\": [\"hh-eh1 d-er\", \"nn\"],\n  \"headhunter\": [\"hh-eh1-d hh-ah-n t-er\", \"nn\"],\n  \"headless\": [\"hh-eh1-d l-ah-s\", \"jj\"],\n  \"headlight\": [\"hh-eh1-d l-ay-t\", \"nn\"],\n  \"headline\": [\"hh-eh1-d l-ay-n\", \"nn vb\"],\n  \"headlong\": [\"hh-eh1-d l-ao-ng\", \"rb\"],\n  \"headmaster\": [\"hh-eh1-d m-ae1 s-t-er\", \"nn\"],\n  \"headphone\": [\"hh-eh1-d f-ow-n\", \"nn\"],\n  \"headquartered\": [\"hh-eh1-d k-ao-r t-er-d\", \"vbn\"],\n  \"headquarters\": [\"hh-eh1-d k-w-ao-r t-er-z\", \"nn\"],\n  \"headrest\": [\"hh-eh1-d r-eh-s-t\", \"nn\"],\n  \"headroom\": [\"hh-eh1-d r-uw-m\", \"nn\"],\n  \"headset\": [\"hh-eh1-d s-eh-t\", \"nn\"],\n  \"headship\": [\"hh-eh1-d sh-ih-p\", \"nn\"],\n  \"headsman\": [\"hh-eh1-d-z m-ah-n\", \"nn\"],\n  \"headstrong\": [\"hh-eh1-d s-t-r-ao-ng\", \"jj\"],\n  \"headwaters\": [\"hh-eh1-d w-ao t-er-z\", \"nn\"],\n  \"headway\": [\"hh-eh1-d w-ey\", \"nn\"],\n  \"heady\": [\"hh-eh1 d-iy\", \"jj\"],\n  \"heal\": [\"hh-iy1-l\", \"vb\"],\n  \"healer\": [\"hh-iy1 l-er\", \"nn\"],\n  \"healing\": [\"hh-iy1 l-ih-ng\", \"nn jj vbg\"],\n  \"health\": [\"hh-eh1-l-th\", \"nn\"],\n  \"healthcare\": [\"hh-eh1-l-th k-eh-r\", \"nn\"],\n  \"healthful\": [\"hh-eh1-l-th f-ah-l\", \"jj\"],\n  \"healthier\": [\"hh-eh1-l th-iy er\", \"jjr rbr\"],\n  \"healthiest\": [\"hh-eh1-l th-iy ih-s-t\", \"jjs\"],\n  \"healthy\": [\"hh-eh1-l th-iy\", \"jj\"],\n  \"heap\": [\"hh-iy1-p\", \"nn vb\"],\n  \"hear\": [\"hh-ih1-r\", \"vb vbp\"],\n  \"heard\": [\"hh-er1-d\", \"vbd vbn\"],\n  \"hearer\": [\"hh-ih1 r-er\", \"nn\"],\n  \"hearing\": [\"hh-ih1 r-ih-ng\", \"nn vbg\"],\n  \"hearsay\": [\"hh-ih1-r s-ey\", \"nn\"],\n  \"hearse\": [\"hh-er1-s\", \"nn\"],\n  \"heart\": [\"hh-aa1-r-t\", \"nn rb vb\"],\n  \"heartbeat\": [\"hh-aa1-r-t b-iy-t\", \"nn\"],\n  \"heartbreak\": [\"hh-aa1-r-t b-r-ey-k\", \"nn\"],\n  \"heartbreaking\": [\"hh-aa1-r-t b-r-ey k-ih-ng\", \"jj\"],\n  \"heartburn\": [\"hh-aa1-r-t b-er-n\", \"nn\"],\n  \"hearten\": [\"hh-aa1-r-t-ah-n\", \"vb\"],\n  \"heartening\": [\"hh-aa1-r t-ah-n ih-ng\", \"jj\"],\n  \"heartfelt\": [\"hh-aa1-r-t f-eh-l-t\", \"jj\"],\n  \"hearth\": [\"hh-aa1-r-th\", \"nn\"],\n  \"heartily\": [\"hh-aa1-r t-ah l-iy\", \"rb\"],\n  \"heartland\": [\"hh-aa1-r-t l-ae-n-d\", \"nn\"],\n  \"heartless\": [\"hh-aa1-r-t l-ah-s\", \"jj\"],\n  \"heartthrob\": [\"hh-aa1-r-t th-r-aa-b\", \"nn\"],\n  \"hearty\": [\"hh-aa1-r t-iy\", \"jj\"],\n  \"heat\": [\"hh-iy1-t\", \"nn vb vbp\"],\n  \"heated\": [\"hh-iy1 t-ah-d\", \"vbn jj vbd\"],\n  \"heatedly\": [\"hh-iy1 t-ih-d l-iy\", \"rb\"],\n  \"heater\": [\"hh-iy1 t-er\", \"nn\"],\n  \"heath\": [\"hh-iy1-th\", \"nn\"],\n  \"heathen\": [\"hh-iy1 dh-ah-n\", \"jj nn\"],\n  \"heather\": [\"hh-eh1 dh-er\", \"nn\"],\n  \"heave\": [\"hh-iy1-v\", \"nn vb\"],\n  \"heaven\": [\"hh-eh1 v-ah-n\", \"nn\"],\n  \"heavenly\": [\"hh-eh1 v-ah-n l-iy\", \"jj\"],\n  \"heaves\": [\"hh-iy1-v-z\", \"nn vbd\"],\n  \"heavier\": [\"hh-eh1 v-iy er\", \"jjr rbr\"],\n  \"heaviest\": [\"hh-eh1 v-iy ah-s-t\", \"jjs\"],\n  \"heavily\": [\"hh-eh1 v-ah l-iy\", \"rb\"],\n  \"heavy\": [\"hh-eh1 v-iy\", \"jj nn rb\"],\n  \"heavyweight\": [\"hh-eh1 v-iy w-ey-t\", \"nn jj\"],\n  \"heck\": [\"hh-eh1-k\", \"nn uh\"],\n  \"heckle\": [\"hh-eh1-k-ah-l\", \"vb\"],\n  \"hectare\": [\"hh-eh1-k t-aa-r\", \"nn\"],\n  \"hectic\": [\"hh-eh1-k t-ih-k\", \"jj\"],\n  \"hedge\": [\"hh-eh1-jh\", \"vb jj nn vbp\"],\n  \"hedgehog\": [\"hh-eh1-jh hh-aa-g\", \"nn\"],\n  \"hedger\": [\"hh-eh1 jh-er\", \"nn\"],\n  \"hedging\": [\"hh-eh1 jh-ih-ng\", \"vbg jj nn\"],\n  \"hedonism\": [\"hh-iy1 d-ah n-ih z-ah-m\", \"nn\"],\n  \"hedonistic\": [\"hh-iy d-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"heed\": [\"hh-iy1-d\", \"vb vbp nn\"],\n  \"heel\": [\"hh-iy1-l\", \"nn\"],\n  \"heft\": [\"hh-eh1-f-t\", \"nn\"],\n  \"heftier\": [\"hh-eh1-f t-iy er\", \"jjr\"],\n  \"heftiest\": [\"hh-eh1-f t-iy ah-s-t\", \"jjs\"],\n  \"hefty\": [\"hh-eh1-f t-iy\", \"jj\"],\n  \"hegemonic\": [\"hh-eh g-ah m-aa1 n-ih-k\", \"jj\"],\n  \"hegemony\": [\"hh-iy jh-eh1 m-ah n-iy\", \"nn\"],\n  \"heifer\": [\"hh-eh1 f-er\", \"nn\"],\n  \"height\": [\"hh-ay1-t\", \"nn\"],\n  \"heighten\": [\"hh-ay1 t-ah-n\", \"vb\"],\n  \"heightened\": [\"hh-ay1 t-ah-n-d\", \"vbn vbd jj\"],\n  \"heinous\": [\"hh-ey1 n-ah-s\", \"jj\"],\n  \"heir\": [\"eh1-r\", \"nn\"],\n  \"heiress\": [\"eh1 r-ah-s\", \"nn\"],\n  \"heist\": [\"hh-ay1-s-t\", \"nn\"],\n  \"held\": [\"hh-eh1-l-d\", \"vbn vbd jj\"],\n  \"helicopter\": [\"hh-eh1 l-ih k-aa-p t-er\", \"nn\"],\n  \"heliotrope\": [\"hh-iy1 l-iy ah t-r-ow-p\", \"nn\"],\n  \"helium\": [\"hh-iy1 l-iy ah-m\", \"nn\"],\n  \"helix\": [\"hh-iy1 l-ih-k-s\", \"nn\"],\n  \"hell\": [\"hh-eh1-l\", \"nn uh\"],\n  \"hellfire\": [\"hh-eh1-l f-ay-r\", \"nn\"],\n  \"hello\": [\"hh-ah l-ow1\", \"uh nn\"],\n  \"helluva\": [\"hh-eh l-uw1 v-ah\", \"jj\"],\n  \"helm\": [\"hh-eh1-l-m\", \"nn\"],\n  \"helmet\": [\"hh-eh1-l m-ah-t\", \"nn\"],\n  \"helmsman\": [\"hh-eh1-l-m-z m-ae-n\", \"nn\"],\n  \"help\": [\"hh-eh1-l-p\", \"vb nn vbp\"],\n  \"helper\": [\"hh-eh1-l p-er\", \"nn\"],\n  \"helpful\": [\"hh-eh1-l-p f-ah-l\", \"jj\"],\n  \"helpfully\": [\"hh-eh1-l-p f-ah l-iy\", \"rb\"],\n  \"helpless\": [\"hh-eh1-l-p l-ah-s\", \"jj\"],\n  \"helplessly\": [\"hh-eh1-l-p l-ah-s l-iy\", \"rb\"],\n  \"helplessness\": [\"hh-eh1-l-p l-ah-s n-ah-s\", \"nn\"],\n  \"hem\": [\"hh-eh1-m\", \"nn\"],\n  \"hemisphere\": [\"hh-eh1 m-ih s-f-ih-r\", \"nn\"],\n  \"hemispheric\": [\"hh-eh m-ah s-f-ih1 r-ih-k\", \"jj\"],\n  \"hemline\": [\"hh-eh1-m l-ay-n\", \"nn\"],\n  \"hemmed\": [\"hh-eh1-m-d\", \"vbn\"],\n  \"hemoglobin\": [\"hh-iy m-ah g-l-ow1 b-ah-n\", \"nn\"],\n  \"hemolytic\": [\"hh-iy m-ah l-ih1 t-ih-k\", \"jj\"],\n  \"hemophilia\": [\"hh-iy m-ah f-iy1 l-iy ah\", \"nn\"],\n  \"hemophiliac\": [\"hh-iy m-ah f-ih1 l-iy ae-k\", \"nn\"],\n  \"hemorrhage\": [\"hh-eh1 m-er ih-jh\", \"nn vb\"],\n  \"hemorrhaging\": [\"hh-eh1 m-er ih jh-ih-ng\", \"vbg jj nn\"],\n  \"hemorrhoid\": [\"hh-eh1 m-er oy-d\", \"nn\"],\n  \"hen\": [\"hh-eh1-n\", \"nn\"],\n  \"hence\": [\"hh-eh1-n-s\", \"rb\"],\n  \"henceforth\": [\"hh-eh1-n-s f-ao1-r-th\", \"rb\"],\n  \"henchman\": [\"hh-eh1-n-ch m-ah-n\", \"nn\"],\n  \"henpecked\": [\"hh-eh1-n p-eh-k-t\", \"jj\"],\n  \"hepatitis\": [\"hh-eh p-ah t-ay1 t-ah-s\", \"nn\"],\n  \"her\": [\"hh-er\", \"prp$\"],\n  \"herald\": [\"hh-eh1 r-ah-l-d\", \"vb vbp\"],\n  \"heraldic\": [\"hh-eh r-ae1-l d-ih-k\", \"jj\"],\n  \"herb\": [\"er1-b\", \"nn\"],\n  \"herbaceous\": [\"er b-ey1 sh-ah-s\", \"jj\"],\n  \"herbal\": [\"er1 b-ah-l\", \"jj\"],\n  \"herbicide\": [\"hh-er1 b-ih s-ay-d\", \"nn\"],\n  \"herculean\": [\"hh-er k-y-uw1 l-iy ah-n\", \"jj\"],\n  \"herd\": [\"hh-er1-d\", \"nn vb\"],\n  \"here\": [\"hh-ih1-r\", \"rb\"],\n  \"hereabout\": [\"hh-ih1 r-ah b-aw-t\", \"jj\"],\n  \"hereabouts\": [\"hh-ih1 r-ah b-aw-t-s\", \"rb\"],\n  \"hereafter\": [\"hh-ih r-ae1-f t-er\", \"rb\"],\n  \"hereby\": [\"hh-ih-r b-ay1\", \"rb\"],\n  \"hereditary\": [\"hh-er eh1 d-ah t-eh r-iy\", \"jj\"],\n  \"heredity\": [\"hh-er eh1 d-ah t-iy\", \"nn\"],\n  \"herein\": [\"hh-ih r-ih1-n\", \"rb\"],\n  \"heresy\": [\"hh-eh1 r-ah s-iy\", \"nn\"],\n  \"heretical\": [\"hh-er eh1 t-ih k-ah-l\", \"jj\"],\n  \"heretofore\": [\"hh-ih-r t-ah f-ao1-r\", \"rb\"],\n  \"herewith\": [\"hh-ih1-r w-ih1-th\", \"rb\"],\n  \"heritage\": [\"hh-eh1 r-ah t-ah-jh\", \"nn\"],\n  \"hermetically\": [\"hh-er m-eh1 t-ih k-ah l-iy\", \"rb\"],\n  \"hero\": [\"hh-ih1 r-ow\", \"nn\"],\n  \"heroic\": [\"hh-ih r-ow1 ih-k\", \"jj\"],\n  \"heroically\": [\"hh-ih r-ow1 ih-k l-iy\", \"rb\"],\n  \"heroin\": [\"hh-eh1 r-ow ah-n\", \"nn\"],\n  \"heroine\": [\"hh-eh1 r-ow ah-n\", \"nn\"],\n  \"heroism\": [\"hh-eh1 r-ow ih z-ah-m\", \"nn\"],\n  \"heron\": [\"hh-eh1 r-ah-n\", \"nn\"],\n  \"herring\": [\"hh-eh1 r-ih-ng\", \"nn\"],\n  \"hers\": [\"hh-er-z\", \"prp jj\"],\n  \"herself\": [\"hh-er s-eh1-l-f\", \"prp\"],\n  \"hesitancy\": [\"hh-eh1 z-ih t-ah-n s-iy\", \"nn\"],\n  \"hesitant\": [\"hh-eh1 z-ih t-ah-n-t\", \"jj\"],\n  \"hesitantly\": [\"hh-eh1 z-ih t-ah-n-t l-iy\", \"rb\"],\n  \"hesitate\": [\"hh-eh1 z-ah t-ey-t\", \"vb vbp\"],\n  \"hesitation\": [\"hh-eh z-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"heterogeneity\": [\"hh-eh t-er ah jh-ih n-iy1 ah t-iy\", \"nn\"],\n  \"heterogeneous\": [\"hh-eh t-er ah jh-iy1 n-y-ah-s\", \"jj\"],\n  \"heterozygous\": [\"hh-eh t-er ah z-ay1 g-ah-s\", \"jj\"],\n  \"hew\": [\"hh-y-uw1\", \"vb\"],\n  \"hewn\": [\"hh-y-uw1-n\", \"vbn\"],\n  \"hexagon\": [\"hh-eh1-k s-ah g-aa-n\", \"nn\"],\n  \"hexagonal\": [\"hh-eh-k s-ae1 g-ah n-ah-l\", \"jj\"],\n  \"hey\": [\"hh-ey1\", \"uh\"],\n  \"heyday\": [\"hh-ey1 d-ey\", \"nn\"],\n  \"hiatus\": [\"hh-ay ey1 t-ah-s\", \"nn\"],\n  \"hibachi\": [\"hh-ah b-aa1 ch-iy\", \"nn\"],\n  \"hibernate\": [\"hh-ay1 b-er n-ey-t\", \"vbp vb\"],\n  \"hiccup\": [\"hh-ih1 k-ah-p\", \"nn\"],\n  \"hick\": [\"hh-ih1-k\", \"nn\"],\n  \"hickory\": [\"hh-ih1 k-er iy\", \"nn\"],\n  \"hid\": [\"hh-ih1-d\", \"vbd vbn\"],\n  \"hidden\": [\"hh-ih1 d-ah-n\", \"vbn jj\"],\n  \"hide\": [\"hh-ay1-d\", \"vb vbp nn\"],\n  \"hideaway\": [\"hh-ay1 d-ah w-ey\", \"nn\"],\n  \"hidebound\": [\"hh-ay1-d b-aw-n-d\", \"jj\"],\n  \"hideous\": [\"hh-ih1 d-iy ah-s\", \"jj\"],\n  \"hideously\": [\"hh-ih1 d-iy ah-s l-iy\", \"rb\"],\n  \"hideout\": [\"hh-ay1 d-aw-t\", \"nn\"],\n  \"hierarchical\": [\"hh-ay r-aa1-r k-ah k-ah-l\", \"jj\"],\n  \"hierarchy\": [\"hh-ay1 er aa-r k-iy\", \"nn\"],\n  \"high\": [\"hh-ay1\", \"jj nn rb rp\"],\n  \"highboy\": [\"hh-ay1 b-oy\", \"nn\"],\n  \"highbrow\": [\"hh-ay1 b-r-aw\", \"jj\"],\n  \"higher\": [\"hh-ay1 er\", \"jjr rb rbr\"],\n  \"highest\": [\"hh-ay1 ah-s-t\", \"jjs rb rbs\"],\n  \"highfalutin\": [\"hh-ay f-ah l-uw1 t-ih-n\", \"jj\"],\n  \"highflying\": [\"hh-ay1 f-l-ay ih-ng\", \"jj\"],\n  \"highland\": [\"hh-ay1 l-ah-n-d\", \"nn\"],\n  \"highlight\": [\"hh-ay1 l-ay-t\", \"vb vbp nn\"],\n  \"highly\": [\"hh-ay1 l-iy\", \"rb\"],\n  \"highness\": [\"hh-ay1 n-ah-s\", \"nn\"],\n  \"highway\": [\"hh-ay1 w-ey\", \"nn\"],\n  \"highyield\": [\"hh-ay1 y-iy1-l-d\", \"jj\"],\n  \"hijack\": [\"hh-ay1-jh-ae-k\", \"vb\"],\n  \"hijacker\": [\"hh-ay1 jh-ae k-er\", \"nn\"],\n  \"hijacking\": [\"hh-ay1 jh-ae k-ih-ng\", \"nn vbg\"],\n  \"hike\": [\"hh-ay1-k\", \"nn vb\"],\n  \"hiker\": [\"hh-ay1 k-er\", \"nn\"],\n  \"hilarious\": [\"hh-ih l-eh1 r-iy ah-s\", \"jj\"],\n  \"hilariously\": [\"hh-ih l-eh1 r-iy ah-s l-iy\", \"rb\"],\n  \"hilarity\": [\"hh-ih l-eh1 r-ah t-iy\", \"nn\"],\n  \"hill\": [\"hh-ih1-l\", \"nn\"],\n  \"hillbilly\": [\"hh-ih1-l b-ih l-iy\", \"nn\"],\n  \"hillside\": [\"hh-ih1-l s-ay-d\", \"nn\"],\n  \"hilltop\": [\"hh-ih1-l t-aa-p\", \"nn\"],\n  \"hilly\": [\"hh-ih1 l-iy\", \"jj\"],\n  \"hilt\": [\"hh-ih1-l-t\", \"nn\"],\n  \"him\": [\"hh-ih1-m\", \"prp\"],\n  \"himself\": [\"hh-ih-m s-eh1-l-f\", \"prp\"],\n  \"hind\": [\"hh-ay1-n-d\", \"jj\"],\n  \"hinder\": [\"hh-ih1-n d-er\", \"vb\"],\n  \"hindering\": [\"hh-ih1-n d-er ih-ng\", \"vbg jj\"],\n  \"hindquarter\": [\"hh-ay1-n-d k-w-ao-r t-er\", \"nn\"],\n  \"hindrance\": [\"hh-ih1-n d-r-ah-n-s\", \"nn\"],\n  \"hindsight\": [\"hh-ay1-n-d s-ay-t\", \"nn\"],\n  \"hinge\": [\"hh-ih1-n-jh\", \"vb nn\"],\n  \"hint\": [\"hh-ih1-n-t\", \"nn vbp vb\"],\n  \"hinterland\": [\"hh-ih1-n t-er l-ae-n-d\", \"nn\"],\n  \"hip\": [\"hh-ih1-p\", \"nn jj\"],\n  \"hipper\": [\"hh-ih1 p-er\", \"jjr\"],\n  \"hippie\": [\"hh-ih1 p-iy\", \"nn\"],\n  \"hire\": [\"hh-ay1 er\", \"vb vbp nn\"],\n  \"hired\": [\"hh-ay1 er-d\", \"vbn jj vbd\"],\n  \"his\": [\"hh-ih1-z\", \"prp$\"],\n  \"hissed\": [\"hh-ih1-s-t\", \"vbd\"],\n  \"histology\": [\"hh-ih s-t-aa1 l-ah jh-iy\", \"nn\"],\n  \"historian\": [\"hh-ih s-t-ao1 r-iy ah-n\", \"nn\"],\n  \"historic\": [\"hh-ih s-t-ao1 r-ih-k\", \"jj\"],\n  \"historical\": [\"hh-ih s-t-ao1 r-ih k-ah-l\", \"jj\"],\n  \"historically\": [\"hh-ih s-t-ao1 r-ih k-ah l-iy\", \"rb\"],\n  \"historiography\": [\"hh-ih s-t-ao r-iy aa1 g-r-ah f-iy\", \"nn\"],\n  \"history\": [\"hh-ih1 s-t-er iy\", \"nn\"],\n  \"hit\": [\"hh-ih1-t\", \"vbd jj nn vb vbn vbp\"],\n  \"hitch\": [\"hh-ih1-ch\", \"nn vb\"],\n  \"hither\": [\"hh-ih1 dh-er\", \"rb\"],\n  \"hitherto\": [\"hh-ih1 dh-er t-uw1\", \"rb\"],\n  \"hitter\": [\"hh-ih1 t-er\", \"nn\"],\n  \"hive\": [\"hh-ay1-v\", \"nn\"],\n  \"hoard\": [\"hh-ao1-r-d\", \"nn vb vbp\"],\n  \"hoarse\": [\"hh-ao1-r-s\", \"jj\"],\n  \"hoarseness\": [\"hh-ao1-r-s n-ah-s\", \"nn\"],\n  \"hoax\": [\"hh-ow1-k-s\", \"nn\"],\n  \"hob\": [\"hh-aa1-b\", \"nn\"],\n  \"hobble\": [\"hh-aa1 b-ah-l\", \"vb\"],\n  \"hobby\": [\"hh-aa1 b-iy\", \"nn\"],\n  \"hobbyist\": [\"hh-aa1 b-iy ih-s-t\", \"nn\"],\n  \"hobnob\": [\"hh-aa1-b n-aa-b\", \"vb\"],\n  \"hock\": [\"hh-aa1-k\", \"nn vb\"],\n  \"hockey\": [\"hh-aa1 k-iy\", \"nn\"],\n  \"hodgepodge\": [\"hh-aa1-jh p-aa-jh\", \"nn\"],\n  \"hoe\": [\"hh-ow1\", \"nn\"],\n  \"hog\": [\"hh-aa1-g\", \"nn\"],\n  \"hoist\": [\"hh-oy1-s-t\", \"vb\"],\n  \"hoisting\": [\"hh-oy1 s-t-ih-ng\", \"nn\"],\n  \"hokey\": [\"hh-ow1 k-iy\", \"jj\"],\n  \"hold\": [\"hh-ow1-l-d\", \"vb nn rb vbp\"],\n  \"holder\": [\"hh-ow1-l d-er\", \"nn\"],\n  \"holding\": [\"hh-ow1-l d-ih-ng\", \"vbg jj nn\"],\n  \"holdout\": [\"hh-ow1-l-d aw-t\", \"nn\"],\n  \"holdover\": [\"hh-ow1-l-d ow v-er\", \"nn\"],\n  \"holdup\": [\"hh-ow1-l-d ah-p\", \"nn\"],\n  \"hole\": [\"hh-ow1-l\", \"nn vbp vb\"],\n  \"holiday\": [\"hh-aa1 l-ah d-ey\", \"nn\"],\n  \"holiest\": [\"hh-ow1 l-iy ih-s-t\", \"jjs\"],\n  \"holistic\": [\"hh-ow l-ih1 s-t-ih-k\", \"jj\"],\n  \"holler\": [\"hh-aa1 l-er\", \"vb\"],\n  \"hollering\": [\"hh-aa1 l-er ih-ng\", \"vbg jj\"],\n  \"hollow\": [\"hh-aa1 l-ow\", \"jj nn\"],\n  \"hollyhock\": [\"hh-aa1 l-iy hh-aa-k\", \"nn\"],\n  \"holocaust\": [\"hh-aa1 l-ah k-ao-s-t\", \"nn\"],\n  \"holster\": [\"hh-ow1-l s-t-er\", \"nn\"],\n  \"holy\": [\"hh-ow1 l-iy\", \"jj\"],\n  \"homage\": [\"aa1 m-ah-jh\", \"nn\"],\n  \"home\": [\"hh-ow1-m\", \"nn vbp rb vb\"],\n  \"homebuilder\": [\"hh-ow1-m b-ih-l d-er\", \"nn\"],\n  \"homebuilding\": [\"hh-ow1-m b-ih-l d-ih-ng\", \"nn\"],\n  \"homecoming\": [\"hh-ow1-m k-ah m-ih-ng\", \"nn\"],\n  \"homeland\": [\"hh-ow1-m l-ae-n-d\", \"nn\"],\n  \"homeless\": [\"hh-ow1-m l-ah-s\", \"jj nn\"],\n  \"homelessness\": [\"hh-ow1-m l-ah-s n-ah-s\", \"nn\"],\n  \"homely\": [\"hh-ow1-m l-iy\", \"jj\"],\n  \"homemade\": [\"hh-ow1-m m-ey1-d\", \"jj\"],\n  \"homemaker\": [\"hh-ow1-m m-ey k-er\", \"nn\"],\n  \"homeowner\": [\"hh-ow1 m-ow n-er\", \"nn\"],\n  \"homer\": [\"hh-ow1 m-er\", \"nn vb\"],\n  \"homesick\": [\"hh-ow1-m s-ih-k\", \"jj\"],\n  \"homesickness\": [\"hh-ow1-m s-ih-k n-ah-s\", \"nn\"],\n  \"homespun\": [\"hh-ow1-m s-p-ah-n\", \"jj\"],\n  \"homestead\": [\"hh-ow1-m s-t-eh-d\", \"nn\"],\n  \"hometown\": [\"hh-ow1-m t-aw-n\", \"nn jj\"],\n  \"homeward\": [\"hh-ow1-m w-er-d\", \"rb\"],\n  \"homework\": [\"hh-ow1-m w-er-k\", \"nn\"],\n  \"homey\": [\"hh-ow1 m-iy\", \"jj\"],\n  \"homicidal\": [\"hh-aa m-ah s-ay1 d-ah-l\", \"jj\"],\n  \"homicide\": [\"hh-aa1 m-ah s-ay-d\", \"nn\"],\n  \"homily\": [\"hh-ow1 m-ah l-iy\", \"nn\"],\n  \"homogeneity\": [\"hh-aa m-ah jh-ah n-iy1 ah t-iy\", \"nn\"],\n  \"homogeneous\": [\"hh-ow m-ah jh-iy1 n-iy ah-s\", \"jj\"],\n  \"homogenize\": [\"hh-ow-m-aa1-jh-ah-n-ay-z\", \"vb\"],\n  \"homogenous\": [\"hh-ah m-aa1 jh-ah n-ah-s\", \"jj\"],\n  \"homologous\": [\"hh-ah m-aa1 l-ah g-ah-s\", \"rb\"],\n  \"homophobia\": [\"hh-ow m-ah f-ow1 b-iy ah\", \"nn\"],\n  \"homosexual\": [\"hh-ow m-ow s-eh1-k sh-ah w-ah-l\", \"jj nn\"],\n  \"homosexuality\": [\"hh-ow m-ow s-eh-k sh-ah-w ae1 l-ah t-iy\", \"nn\"],\n  \"hone\": [\"hh-ow1-n\", \"vb vbp nn\"],\n  \"honed\": [\"hh-ow1-n-d\", \"vbn jj\"],\n  \"honest\": [\"aa1 n-ah-s-t\", \"jj\"],\n  \"honestly\": [\"aa1 n-ah-s-t l-iy\", \"rb\"],\n  \"honesty\": [\"aa1 n-ah s-t-iy\", \"nn\"],\n  \"honey\": [\"hh-ah1 n-iy\", \"nn vb uh jj\"],\n  \"honeybee\": [\"hh-ah1 n-iy b-iy\", \"nn\"],\n  \"honeymoon\": [\"hh-ah1 n-iy m-uw-n\", \"nn vb\"],\n  \"honeymooner\": [\"hh-ah1 n-iy m-uw n-er\", \"nn\"],\n  \"honk\": [\"hh-aa1-ng-k\", \"vb vbp\"],\n  \"honor\": [\"aa1 n-er\", \"nn vbp vb\"],\n  \"honorable\": [\"aa1 n-er ah b-ah-l\", \"jj nn\"],\n  \"honorably\": [\"aa1 n-er ah b-l-iy\", \"rb\"],\n  \"honorarium\": [\"aa n-er eh1 r-iy ah-m\", \"nn\"],\n  \"honorary\": [\"aa1 n-er eh r-iy\", \"jj\"],\n  \"honored\": [\"aa1 n-er-d\", \"vbn jj vbd\"],\n  \"honorific\": [\"aa n-er ih1 f-ih-k\", \"nn\"],\n  \"hooch\": [\"hh-uw1-ch\", \"nn\"],\n  \"hood\": [\"hh-uh1-d\", \"nn\"],\n  \"hoodlum\": [\"hh-uh1-d l-ah-m\", \"nn\"],\n  \"hoodwink\": [\"hh-uh1-d-w-ih-ng-k\", \"vb\"],\n  \"hoof\": [\"hh-uw1-f\", \"nn\"],\n  \"hook\": [\"hh-uh1-k\", \"nn vb\"],\n  \"hooked\": [\"hh-uh1-k-t\", \"vbn jj vbd\"],\n  \"hooker\": [\"hh-uh1 k-er\", \"nn\"],\n  \"hookup\": [\"hh-uh1-k ah-p\", \"nn\"],\n  \"hookworm\": [\"hh-uh1-k w-er-m\", \"nn\"],\n  \"hooliganism\": [\"hh-uw1 l-ih g-ah n-ih z-ah-m\", \"nn\"],\n  \"hoop\": [\"hh-uw1-p\", \"nn\"],\n  \"hoopla\": [\"hh-uw1 p-l-aa\", \"nn\"],\n  \"hoot\": [\"hh-uw1-t\", \"nn vb vbp\"],\n  \"hop\": [\"hh-aa1-p\", \"nn vb\"],\n  \"hope\": [\"hh-ow1-p\", \"nn vb vbp\"],\n  \"hopeful\": [\"hh-ow1-p f-ah-l\", \"jj nn\"],\n  \"hopefully\": [\"hh-ow1-p f-ah l-iy\", \"rb\"],\n  \"hopeless\": [\"hh-ow1-p l-ah-s\", \"jj\"],\n  \"hopelessly\": [\"hh-ow1-p l-ah-s l-iy\", \"rb\"],\n  \"hopelessness\": [\"hh-ow1-p l-ah-s n-ah-s\", \"nn\"],\n  \"hopper\": [\"hh-aa1 p-er\", \"nn\"],\n  \"hopscotch\": [\"hh-aa1-p s-k-aa-ch\", \"nn\"],\n  \"horde\": [\"hh-ao1-r-d\", \"nn\"],\n  \"horizon\": [\"hh-er ay1 z-ah-n\", \"nn\"],\n  \"horizontal\": [\"hh-ao r-ah z-aa1-n t-ah-l\", \"jj nn\"],\n  \"horizontally\": [\"hh-ao r-ih z-aa1-n t-ah l-iy\", \"rb\"],\n  \"hormonal\": [\"hh-ao1-r m-ow n-ah-l\", \"jj\"],\n  \"hormone\": [\"hh-ao1-r m-ow-n\", \"nn\"],\n  \"horn\": [\"hh-ao1-r-n\", \"nn vb\"],\n  \"horned\": [\"hh-ao1-r-n-d\", \"jj\"],\n  \"hornet\": [\"hh-ao1-r n-ih-t\", \"nn\"],\n  \"horoscope\": [\"hh-ao1 r-ah s-k-ow-p\", \"nn\"],\n  \"horrendous\": [\"hh-ao r-eh1-n d-ah-s\", \"jj\"],\n  \"horrible\": [\"hh-ao1 r-ah b-ah-l\", \"jj nn\"],\n  \"horribly\": [\"hh-ao1 r-ah b-l-iy\", \"rb\"],\n  \"horrid\": [\"hh-ao1 r-ah-d\", \"jj\"],\n  \"horrific\": [\"hh-ao r-ih1 f-ih-k\", \"jj\"],\n  \"horrified\": [\"hh-ao1 r-ah f-ay-d\", \"vbn jj\"],\n  \"horrify\": [\"hh-ao1-r-ah-f-ay\", \"vb\"],\n  \"horrifying\": [\"hh-ao1 r-ah f-ay ih-ng\", \"jj\"],\n  \"horror\": [\"hh-ao1 r-er\", \"nn\"],\n  \"horse\": [\"hh-ao1-r-s\", \"nn\"],\n  \"horseback\": [\"hh-ao1-r-s b-ae-k\", \"nn jj rb\"],\n  \"horseflesh\": [\"hh-ao1-r-s f-l-eh-sh\", \"nn\"],\n  \"horseman\": [\"hh-ao1-r-s m-ah-n\", \"nn\"],\n  \"horsemanship\": [\"hh-ao1-r-s m-ah-n sh-ih-p\", \"nn\"],\n  \"horseplay\": [\"hh-ao1-r-s p-l-ey\", \"nn\"],\n  \"horsepower\": [\"hh-ao1-r-s p-aw er\", \"nn\"],\n  \"horseradish\": [\"hh-ao1-r-s r-ae d-ih-sh\", \"nn\"],\n  \"horticultural\": [\"hh-ao-r t-ah k-ah1-l ch-er ah-l\", \"jj\"],\n  \"horticulture\": [\"hh-ao1-r t-ih k-ah-l ch-er\", \"nn\"],\n  \"horticulturist\": [\"hh-ao-r t-ih k-ah1-l ch-er ih-s-t\", \"nn\"],\n  \"hose\": [\"hh-ow1-z\", \"nn vb\"],\n  \"hospice\": [\"hh-aa1-s p-ah-s\", \"nn\"],\n  \"hospitable\": [\"hh-aa1 s-p-ih1 t-ah b-ah-l\", \"jj\"],\n  \"hospital\": [\"hh-aa1-s p-ih t-ah-l\", \"nn\"],\n  \"hospitality\": [\"hh-aa-s p-ah t-ae1 l-ah t-iy\", \"nn\"],\n  \"hospitalization\": [\"hh-aa-s p-ih t-ah-l ah z-ey1 sh-ah-n\", \"nn\"],\n  \"hospitalize\": [\"hh-ao1-s-p-ih-t-ah-l-ay-z\", \"vb\"],\n  \"hospitalized\": [\"hh-aa1-s p-ih t-ah-l ay-z-d\", \"vbn jj\"],\n  \"hoss\": [\"hh-aa1-s\", \"nn\"],\n  \"host\": [\"hh-ow1-s-t\", \"nn vb\"],\n  \"hostage\": [\"hh-aa1 s-t-ih-jh\", \"nn\"],\n  \"hosted\": [\"hh-ow1 s-t-ih-d\", \"vbn jj vbd\"],\n  \"hostess\": [\"hh-ow1 s-t-ah-s\", \"nn\"],\n  \"hostile\": [\"hh-aa1 s-t-ah-l\", \"jj nn\"],\n  \"hostility\": [\"hh-aa s-t-ih1 l-ah t-iy\", \"nn\"],\n  \"hostler\": [\"hh-aa1-s l-er\", \"nn\"],\n  \"hot\": [\"hh-aa1-t\", \"jj\"],\n  \"hotbed\": [\"hh-aa1-t b-eh-d\", \"nn\"],\n  \"hotdog\": [\"hh-aa1-t d-ao-g\", \"nn\"],\n  \"hotel\": [\"hh-ow t-eh1-l\", \"nn\"],\n  \"hotelier\": [\"hh-ow t-eh1 l-y-er\", \"nn\"],\n  \"hothouse\": [\"hh-aa1-t hh-aw-s\", \"jj\"],\n  \"hotline\": [\"hh-aa1-t l-ay-n\", \"nn\"],\n  \"hotly\": [\"hh-aa1-t l-iy\", \"rb\"],\n  \"hotter\": [\"hh-aa1 t-er\", \"jjr\"],\n  \"hottest\": [\"hh-aa1 t-ah-s-t\", \"jjs\"],\n  \"hound\": [\"hh-aw1-n-d\", \"nn vb\"],\n  \"hour\": [\"aw1 er\", \"nn\"],\n  \"hourlong\": [\"aw1-r l-ao-ng\", \"jj\"],\n  \"hourly\": [\"aw1-r l-iy\", \"jj\"],\n  \"house\": [\"hh-aw1-s\", \"nn vbp vb\"],\n  \"houseboat\": [\"hh-aw1-s b-ow-t\", \"nn\"],\n  \"housebroken\": [\"hh-aw1-s b-r-ow k-ah-n\", \"jj\"],\n  \"housecleaning\": [\"hh-aw1-s-k l-iy n-ih-ng\", \"nn\"],\n  \"houseful\": [\"hh-aw1-s f-ah-l\", \"nn\"],\n  \"household\": [\"hh-aw1-s hh-ow-l-d\", \"nn jj\"],\n  \"householder\": [\"hh-aw1-s hh-ow-l d-er\", \"nn\"],\n  \"housekeeper\": [\"hh-aw1-s k-iy p-er\", \"nn\"],\n  \"housekeeping\": [\"hh-aw1-s k-iy p-ih-ng\", \"nn\"],\n  \"houseman\": [\"hh-aw1-s m-ah-n\", \"nn\"],\n  \"houseware\": [\"hh-aw1-s w-eh-r\", \"nn\"],\n  \"housewife\": [\"hh-aw1-s w-ay-f\", \"nn\"],\n  \"housework\": [\"hh-aw1-s w-er-k\", \"nn\"],\n  \"housing\": [\"hh-aw1 z-ih-ng\", \"nn vbg jj\"],\n  \"hove\": [\"hh-ow1-v\", \"vbd\"],\n  \"hovel\": [\"hh-ah1 v-ah-l\", \"nn\"],\n  \"hover\": [\"hh-ah1 v-er\", \"vb vbp\"],\n  \"how\": [\"hh-aw1\", \"wrb\"],\n  \"howdy\": [\"hh-aw1 d-iy\", \"uh\"],\n  \"howe\": [\"hh-aw1\", \"wrb\"],\n  \"however\": [\"hh-aw eh1 v-er\", \"rb rbr wrb\"],\n  \"howitzer\": [\"hh-aw1 ah-t s-er\", \"nn\"],\n  \"howl\": [\"hh-aw1-l\", \"nn vb\"],\n  \"hub\": [\"hh-ah1-b\", \"nn\"],\n  \"hubbub\": [\"hh-ah1 b-ah-b\", \"nn\"],\n  \"hubby\": [\"hh-ah1 b-iy\", \"nn\"],\n  \"hubris\": [\"hh-y-uw1 b-r-ah-s\", \"nn\"],\n  \"huckster\": [\"hh-ah1-k s-t-er\", \"nn vb\"],\n  \"huddle\": [\"hh-ah1 d-ah-l\", \"nn vb\"],\n  \"huddled\": [\"hh-ah1 d-ah-l-d\", \"vbd vbn jj\"],\n  \"hue\": [\"hh-y-uw1\", \"nn\"],\n  \"huff\": [\"hh-ah1-f\", \"vb\"],\n  \"hug\": [\"hh-ah1-g\", \"nn vb vbp\"],\n  \"huge\": [\"hh-y-uw1-jh\", \"jj\"],\n  \"hugely\": [\"hh-y-uw1-jh l-iy\", \"rb\"],\n  \"huh\": [\"hh-ah1\", \"uh\"],\n  \"hulk\": [\"hh-ah1-l-k\", \"nn vb\"],\n  \"hulking\": [\"hh-ah1-l k-ih-ng\", \"jj vbg\"],\n  \"hull\": [\"hh-ah1-l\", \"nn\"],\n  \"hullabaloo\": [\"hh-ah l-ah b-ah l-uw1\", \"nn\"],\n  \"hum\": [\"hh-ah1-m\", \"nn vb\"],\n  \"human\": [\"hh-y-uw1 m-ah-n\", \"jj nn\"],\n  \"humane\": [\"hh-y-uw m-ey1-n\", \"jj\"],\n  \"humanism\": [\"hh-y-uw1 m-ah n-ih z-ah-m\", \"nn\"],\n  \"humanist\": [\"hh-y-uw1 m-ah n-ih-s-t\", \"jj nn\"],\n  \"humanistic\": [\"hh-y-uw m-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"humanitarian\": [\"hh-y-uw m-ae n-ah t-eh1 r-iy ah-n\", \"jj nn\"],\n  \"humanity\": [\"hh-y-uw m-ae1 n-ih t-iy\", \"nn\"],\n  \"humanize\": [\"hh-y-uw1 m-ah n-ay-z\", \"vb\"],\n  \"humankind\": [\"hh-y-uw1 m-ah-n k-ay-n-d\", \"nn\"],\n  \"humanly\": [\"hh-y-uw1 m-ah-n l-iy\", \"rb\"],\n  \"humanness\": [\"hh-y-uw1 m-ah-n n-ah-s\", \"nn\"],\n  \"humble\": [\"hh-ah1-m b-ah-l\", \"jj vb\"],\n  \"humblest\": [\"hh-ah1-m b-ah l-ah-s-t\", \"jjs\"],\n  \"humbling\": [\"hh-ah1-m b-ah-l ih-ng\", \"jj\"],\n  \"humbly\": [\"hh-ah1-m b-l-iy\", \"rb\"],\n  \"humid\": [\"hh-y-uw1 m-ah-d\", \"jj\"],\n  \"humidity\": [\"hh-y-uw m-ih1 d-ah t-iy\", \"nn\"],\n  \"humiliate\": [\"hh-y-uw-m-ih1-l-iy-ey-t\", \"vb\"],\n  \"humiliated\": [\"hh-y-uw m-ih1 l-iy ey t-ih-d\", \"vbn jj\"],\n  \"humiliating\": [\"hh-y-uw m-ih1 l-iy ey t-ih-ng\", \"jj\"],\n  \"humiliation\": [\"hh-y-uw m-ih l-iy ey1 sh-ah-n\", \"nn\"],\n  \"humility\": [\"hh-y-uw m-ih1 l-ih t-iy\", \"nn\"],\n  \"humongous\": [\"hh-y-uw m-ao1-ng g-ah-s\", \"jj\"],\n  \"humor\": [\"hh-y-uw1 m-er\", \"nn vb\"],\n  \"humorist\": [\"hh-y-uw1 m-er ah-s-t\", \"nn\"],\n  \"humorless\": [\"hh-y-uw1 m-er l-ah-s\", \"jj\"],\n  \"humorous\": [\"hh-y-uw1 m-er ah-s\", \"jj\"],\n  \"hump\": [\"hh-ah1-m-p\", \"nn\"],\n  \"humped\": [\"hh-ah1-m-p-t\", \"nn\"],\n  \"hunch\": [\"hh-ah1-n-ch\", \"nn vb\"],\n  \"hunched\": [\"hh-ah1-n-ch-t\", \"vbn vbd jj\"],\n  \"hundred\": [\"hh-ah1-n d-r-ah-d\", \"nn\"],\n  \"hundredth\": [\"hh-ah1-n d-r-ah-d-th\", \"jj\"],\n  \"hundredweight\": [\"hh-ah1-n d-r-ah-d w-ey-t\", \"nn\"],\n  \"hung\": [\"hh-ah1-ng\", \"vbd jj vbn\"],\n  \"hunger\": [\"hh-ah1-ng g-er\", \"nn\"],\n  \"hungrier\": [\"hh-ah1-ng g-r-iy er\", \"jjr\"],\n  \"hungrily\": [\"hh-ah1-ng g-r-ah l-iy\", \"rb\"],\n  \"hungry\": [\"hh-ah1-ng g-r-iy\", \"jj\"],\n  \"hunk\": [\"hh-ah1-ng-k\", \"nn\"],\n  \"hunker\": [\"hh-ah1-ng k-er\", \"vb\"],\n  \"hunt\": [\"hh-ah1-n-t\", \"nn vb vbp\"],\n  \"hunted\": [\"hh-ah1-n t-ah-d\", \"vbn vbd jj\"],\n  \"hunter\": [\"hh-ah1-n t-er\", \"nn\"],\n  \"hurdle\": [\"hh-er1 d-ah-l\", \"nn vb\"],\n  \"hurl\": [\"hh-er1-l\", \"vb vbp\"],\n  \"hurley\": [\"hh-er1 l-iy\", \"nn\"],\n  \"hurrah\": [\"hh-uh r-aa1\", \"nn\"],\n  \"hurricane\": [\"hh-er1 ah k-ey-n\", \"nn\"],\n  \"hurried\": [\"hh-er1 iy-d\", \"vbd vbn jj\"],\n  \"hurriedly\": [\"hh-er1 iy-d l-iy\", \"rb\"],\n  \"hurry\": [\"hh-er1 iy\", \"nn vbp vb\"],\n  \"hurrying\": [\"hh-er1 iy ih-ng\", \"vbg jj\"],\n  \"hurt\": [\"hh-er1-t\", \"vbn jj nn vb vbd vbp\"],\n  \"hurtle\": [\"hh-er1-t-ah-l\", \"vb\"],\n  \"husband\": [\"hh-ah1-z b-ah-n-d\", \"nn\"],\n  \"husbandry\": [\"hh-ah1-z b-ah-n d-r-iy\", \"nn\"],\n  \"hush\": [\"hh-ah1-sh\", \"jj nn uh\"],\n  \"hushed\": [\"hh-ah1-sh-t\", \"jj\"],\n  \"husk\": [\"hh-ah1-s-k\", \"nn\"],\n  \"husky\": [\"hh-ah1-s k-iy\", \"jj\"],\n  \"hustings\": [\"hh-ah1 s-t-ih-ng-z\", \"nn\"],\n  \"hustle\": [\"hh-ah1 s-ah-l\", \"vb nn\"],\n  \"hustler\": [\"hh-ah1 s-ah l-er\", \"nn\"],\n  \"hut\": [\"hh-ah1-t\", \"nn\"],\n  \"hutch\": [\"hh-ah1-ch\", \"nn\"],\n  \"hyacinth\": [\"hh-ay1 ah s-ih-n-th\", \"nn\"],\n  \"hyaluronic\": [\"hh-ay ah l-er aa1 n-ih-k\", \"jj\"],\n  \"hybrid\": [\"hh-ay1 b-r-ah-d\", \"jj nn\"],\n  \"hydrated\": [\"hh-ay1 d-r-ey t-ah-d\", \"jj\"],\n  \"hydration\": [\"hh-ay d-r-ey1 sh-ah-n\", \"nn\"],\n  \"hydraulic\": [\"hh-ay d-r-ao1 l-ih-k\", \"jj\"],\n  \"hydraulics\": [\"hh-ay d-r-ao1 l-ih-k-s\", \"nn\"],\n  \"hydride\": [\"hh-ay1 d-r-ay-d\", \"nn\"],\n  \"hydrocarbon\": [\"hh-ay d-r-ow k-aa1-r b-ah-n\", \"nn\"],\n  \"hydroelectric\": [\"hh-ay d-r-ow ih l-eh1-k t-r-ih-k\", \"jj\"],\n  \"hydrogen\": [\"hh-ay1 d-r-ah jh-ah-n\", \"nn\"],\n  \"hydrolysis\": [\"hh-ay d-r-aa1 l-ah s-ah-s\", \"nn\"],\n  \"hydrolyze\": [\"hh-ay1-d-r-ah-l-ay-z\", \"vb\"],\n  \"hydrophilic\": [\"hh-ay d-r-ah f-ih1 l-ih-k\", \"jj\"],\n  \"hydrotherapy\": [\"hh-ay d-r-ow th-eh1 r-ah p-iy\", \"nn\"],\n  \"hydrous\": [\"hh-ay1 d-r-ah-s\", \"jj\"],\n  \"hyena\": [\"hh-ay iy1 n-ah\", \"nn\"],\n  \"hygiene\": [\"hh-ay1 jh-iy-n\", \"nn\"],\n  \"hymn\": [\"hh-ih1-m\", \"nn\"],\n  \"hype\": [\"hh-ay1-p\", \"nn vb\"],\n  \"hyper\": [\"hh-ay1 p-er\", \"jj\"],\n  \"hyperactive\": [\"hh-ay p-er ae1-k t-ih-v\", \"jj\"],\n  \"hyperbole\": [\"hh-ay p-er1 b-ah l-iy\", \"nn\"],\n  \"hyperbolic\": [\"hh-ay p-er b-aa1 l-ih-k\", \"jj\"],\n  \"hyperinflation\": [\"hh-ay p-er ih-n f-l-ey1 sh-ah-n\", \"nn\"],\n  \"hypermarket\": [\"hh-ay1 p-er m-aa-r k-ih-t\", \"nn\"],\n  \"hypersonic\": [\"hh-ay p-er s-aa1 n-ih-k\", \"jj\"],\n  \"hypertension\": [\"hh-ay p-er t-eh1-n sh-ah-n\", \"nn\"],\n  \"hyphenate\": [\"hh-ay1-f-ah-n-ey-t\", \"vb\"],\n  \"hyphenated\": [\"hh-ay1 f-ah n-ey t-ih-d\", \"jj vbn\"],\n  \"hypnosis\": [\"hh-ih-p n-ow1 s-ah-s\", \"nn\"],\n  \"hypnotic\": [\"hh-ih-p n-aa1 t-ih-k\", \"jj\"],\n  \"hypnotize\": [\"hh-ih1-p-n-ah-t-ay-z\", \"vb\"],\n  \"hypocrisy\": [\"hh-ih p-aa1 k-r-ah s-iy\", \"nn\"],\n  \"hypocrite\": [\"hh-ih1 p-ah k-r-ih-t\", \"nn\"],\n  \"hypocritical\": [\"hh-ih p-ah k-r-ih1 t-ih k-ah-l\", \"jj\"],\n  \"hypodermic\": [\"hh-ay p-ah d-er1 m-ih-k\", \"jj\"],\n  \"hypoglycemia\": [\"hh-ay p-ow g-l-ay s-iy1 m-iy ah\", \"nn\"],\n  \"hypoglycemic\": [\"hh-ay p-ow g-l-ay s-iy1 m-ih-k\", \"jj\"],\n  \"hypothalamic\": [\"hh-ay p-ow th-ah l-ae1 m-ih-k\", \"jj\"],\n  \"hypothesis\": [\"hh-ay p-aa1 th-ah s-ah-s\", \"nn\"],\n  \"hypothesize\": [\"hh-ay p-aa1 th-ah s-ay-z\", \"vb\"],\n  \"hypothetical\": [\"hh-ay p-ah th-eh1 t-ah k-ah-l\", \"jj\"],\n  \"hypothetically\": [\"hh-ay p-ah th-eh1 t-ih-k l-iy\", \"rb\"],\n  \"hysterectomy\": [\"hh-ih s-t-er eh1-k t-ah m-iy\", \"nn\"],\n  \"hysteria\": [\"hh-ih s-t-eh1 r-iy ah\", \"nn\"],\n  \"hysterical\": [\"hh-ih s-t-eh1 r-ih k-ah-l\", \"jj\"],\n  \"hysterically\": [\"hh-ih s-t-eh1 r-ih-k l-iy\", \"rb\"],\n  \"i\": [\"ay1\", \"prp\"],\n  \"ice\": [\"ay1-s\", \"nn jj\"],\n  \"iceberg\": [\"ay1-s b-er-g\", \"nn\"],\n  \"icebox\": [\"ay1-s b-aa-k-s\", \"nn\"],\n  \"iced\": [\"ay1-s-t\", \"jj\"],\n  \"icing\": [\"ay1 s-ih-ng\", \"nn\"],\n  \"icon\": [\"ay1 k-aa-n\", \"nn\"],\n  \"iconoclasm\": [\"ay k-aa1 n-ah k-l-ae z-ah-m\", \"nn\"],\n  \"iconoclast\": [\"ay k-aa1 n-ah k-l-ae-s-t\", \"nn\"],\n  \"iconoclastic\": [\"ay k-ah n-ah k-l-ae1 s-t-ih-k\", \"jj\"],\n  \"icy\": [\"ay1 s-iy\", \"jj\"],\n  \"idea\": [\"ay d-iy1 ah\", \"nn\"],\n  \"ideal\": [\"ay d-iy1-l\", \"jj nn\"],\n  \"idealism\": [\"ay d-iy1 l-ih z-ah-m\", \"nn\"],\n  \"idealist\": [\"ay d-iy1 l-ih-s-t\", \"nn\"],\n  \"idealistic\": [\"ay d-iy ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"idealize\": [\"ay-d-iy1-ah-l-ay-z\", \"vb\"],\n  \"idealized\": [\"ay d-iy1 ah l-ay-z-d\", \"vbn jj\"],\n  \"ideally\": [\"ay d-iy1 l-iy\", \"rb\"],\n  \"identical\": [\"ay d-eh1-n t-ih k-ah-l\", \"jj\"],\n  \"identifiable\": [\"ay d-eh1-n t-ah f-ay ah b-ah-l\", \"jj\"],\n  \"identification\": [\"ay d-eh-n t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"identify\": [\"ay d-eh1-n t-ah f-ay\", \"vb vbp\"],\n  \"identity\": [\"ay d-eh1-n t-ah t-iy\", \"nn\"],\n  \"ideological\": [\"ay d-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"ideologically\": [\"ay d-iy ah l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"ideologist\": [\"ay d-iy aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"ideologue\": [\"ay1 d-iy ah l-ao-g\", \"nn\"],\n  \"ideology\": [\"ay d-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"idiocy\": [\"ih1 d-iy ah s-iy\", \"nn\"],\n  \"idiom\": [\"ih1 d-iy ah-m\", \"nn\"],\n  \"idiomatic\": [\"ih d-iy ah m-ae1 t-ih-k\", \"jj\"],\n  \"idiosyncratic\": [\"ih d-iy ow s-ih-n k-r-ae1 t-ih-k\", \"jj\"],\n  \"idiot\": [\"ih1 d-iy ah-t\", \"jj nn\"],\n  \"idiotic\": [\"ih d-iy aa1 t-ih-k\", \"jj\"],\n  \"idiotically\": [\"ih d-iy aa1 t-ih-k l-iy\", \"rb\"],\n  \"idle\": [\"ay1 d-ah-l\", \"jj vb\"],\n  \"idleness\": [\"ay1 d-ah-l n-ah-s\", \"nn\"],\n  \"idler\": [\"ay1 d-ah l-er\", \"nn\"],\n  \"idly\": [\"ay1-d l-iy\", \"rb\"],\n  \"idol\": [\"ay1 d-ah-l\", \"nn\"],\n  \"idolize\": [\"ay1 d-ah l-ay-z\", \"vb vbp\"],\n  \"idolized\": [\"ay1 d-ah l-ay-z-d\", \"jj\"],\n  \"idyll\": [\"ay1 d-ah-l\", \"nn\"],\n  \"idyllic\": [\"ay d-ih1 l-ih-k\", \"jj\"],\n  \"if\": [\"ih1-f\", \"in\"],\n  \"iffy\": [\"ih1 f-iy\", \"jj\"],\n  \"igloo\": [\"ih1 g-l-uw\", \"nn\"],\n  \"igneous\": [\"ih1-g n-iy ah-s\", \"jj\"],\n  \"ignite\": [\"ih-g n-ay1-t\", \"vb\"],\n  \"ignition\": [\"ih-g n-ih1 sh-ah-n\", \"nn\"],\n  \"ignoble\": [\"ih-g n-ow1 b-ah-l\", \"jj\"],\n  \"ignominious\": [\"ih-g n-ah m-ih1 n-iy ah-s\", \"jj\"],\n  \"ignoramus\": [\"ih-g n-er ey1 m-ah-s\", \"nn\"],\n  \"ignorance\": [\"ih1-g n-er ah-n-s\", \"nn\"],\n  \"ignorant\": [\"ih1-g n-er ah-n-t\", \"jj\"],\n  \"ignore\": [\"ih-g n-ao1-r\", \"vb vbp\"],\n  \"iguana\": [\"ay g-w-aa1 n-ah\", \"jj\"],\n  \"ilk\": [\"ih1-l-k\", \"nn\"],\n  \"ill\": [\"ih1-l\", \"jj rb\"],\n  \"illegal\": [\"ih l-iy1 g-ah-l\", \"jj\"],\n  \"illegality\": [\"ih l-iy g-ae1 l-ih t-iy\", \"nn\"],\n  \"illegally\": [\"ih l-iy1 g-ah l-iy\", \"rb\"],\n  \"illegitimacy\": [\"ih l-ih jh-ih1 t-ah m-ah s-iy\", \"nn\"],\n  \"illegitimate\": [\"ih l-ih jh-ih1 t-ah m-ih-t\", \"jj\"],\n  \"illicit\": [\"ih l-ih1 s-ah-t\", \"jj\"],\n  \"illicitly\": [\"ih1 l-ih s-ih-t l-iy\", \"rb\"],\n  \"illiquid\": [\"ih l-ih1 k-w-ih-d\", \"jj\"],\n  \"illiquidity\": [\"ih l-ih k-w-ih1 d-ih t-iy\", \"nn\"],\n  \"illiteracy\": [\"ih l-ih1 t-er ah s-iy\", \"nn\"],\n  \"illiterate\": [\"ih l-ih1 t-er ah-t\", \"jj\"],\n  \"illness\": [\"ih1-l n-ah-s\", \"nn\"],\n  \"illogic\": [\"ih l-aa1 jh-ih-k\", \"nn\"],\n  \"illogical\": [\"ih l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"illuminate\": [\"ih l-uw1 m-ih n-ih-t\", \"vb\"],\n  \"illuminated\": [\"ih l-uw1 m-ah n-ey t-ah-d\", \"vbn jj vbd\"],\n  \"illuminating\": [\"ih l-uw1 m-ah n-ey t-ih-ng\", \"jj vbg\"],\n  \"illumination\": [\"ih l-uw m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"illumine\": [\"ih l-uw1 m-ah-n\", \"vb\"],\n  \"illusion\": [\"ih l-uw1 zh-ah-n\", \"nn\"],\n  \"illusionary\": [\"ih l-uw1 zh-ah n-eh r-iy\", \"jj\"],\n  \"illusionist\": [\"ih l-uw1 zh-ah n-ah-s-t\", \"nn\"],\n  \"illusory\": [\"ih l-uw1 s-er iy\", \"jj\"],\n  \"illustrate\": [\"ih1 l-ah-s t-r-ey-t\", \"vb vbp\"],\n  \"illustrated\": [\"ih1 l-ah-s t-r-ey t-ah-d\", \"vbn jj vbd\"],\n  \"illustration\": [\"ih l-ah-s t-r-ey1 sh-ah-n\", \"nn\"],\n  \"illustrative\": [\"ih l-ah1-s t-r-ah t-ih-v\", \"jj\"],\n  \"illustrator\": [\"ih1 l-ah-s t-r-ey t-er\", \"nn\"],\n  \"illustrious\": [\"ih l-ah1-s t-r-iy ah-s\", \"jj\"],\n  \"image\": [\"ih1 m-ah-jh\", \"nn vb\"],\n  \"imagery\": [\"ih1 m-ah jh-r-iy\", \"nn\"],\n  \"imaginable\": [\"ih m-ae1 jh-ah n-ah b-ah-l\", \"jj\"],\n  \"imaginary\": [\"ih m-ae1 jh-ah n-eh r-iy\", \"jj nn\"],\n  \"imagination\": [\"ih m-ae jh-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"imaginative\": [\"ih m-ae1 jh-ah n-ah t-ih-v\", \"jj\"],\n  \"imaginatively\": [\"ih m-ae1 jh-ah n-ah t-ih-v l-iy\", \"rb\"],\n  \"imagine\": [\"ih m-ae1 jh-ah-n\", \"vb vbp\"],\n  \"imagined\": [\"ih m-ae1 jh-ah-n-d\", \"vbn vbd jj\"],\n  \"imaging\": [\"ih1 m-ih jh-ih-ng\", \"nn jj\"],\n  \"imbalance\": [\"ih-m b-ae1 l-ah-n-s\", \"nn\"],\n  \"imbibe\": [\"ih-m b-ay1-b\", \"vb\"],\n  \"imbroglio\": [\"ih-m b-r-ow1 l-y-ow\", \"nn\"],\n  \"imbue\": [\"ih-m-b-y-uw1\", \"vb\"],\n  \"imitate\": [\"ih1 m-ah t-ey-t\", \"vb vbp\"],\n  \"imitation\": [\"ih m-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"imitative\": [\"ih1 m-ah t-ey t-ih-v\", \"jj\"],\n  \"imitator\": [\"ih1 m-ih t-ey t-er\", \"nn\"],\n  \"immaculate\": [\"ih m-ae1 k-y-uw l-ih-t-s\", \"jj\"],\n  \"immanent\": [\"ih1 m-ah n-ah-n-t\", \"jj\"],\n  \"immaterial\": [\"ih m-ah t-ih1 r-iy ah-l\", \"jj\"],\n  \"immature\": [\"ih m-ah t-y-uh1-r\", \"jj\"],\n  \"immaturity\": [\"ih m-ah ch-uh1 r-ih t-iy\", \"nn\"],\n  \"immeasurably\": [\"ih m-eh1 zh-er ae b-l-iy\", \"rb\"],\n  \"immediacy\": [\"ih m-iy1 d-iy ah s-iy\", \"nn\"],\n  \"immediate\": [\"ih m-iy1 d-iy ah-t\", \"jj\"],\n  \"immediately\": [\"ih m-iy1 d-iy ah-t l-iy\", \"rb\"],\n  \"immemorial\": [\"ih m-ah m-ao1 r-iy ah-l\", \"jj\"],\n  \"immense\": [\"ih m-eh1-n-s\", \"jj nn\"],\n  \"immensely\": [\"ih m-eh1-n-s l-iy\", \"rb\"],\n  \"immerse\": [\"ih-m-er1-s\", \"vb\"],\n  \"immersion\": [\"ih m-er1 zh-ah-n\", \"nn\"],\n  \"immigrant\": [\"ih1 m-ah g-r-ah-n-t\", \"nn jj\"],\n  \"immigrate\": [\"ih1-m-ah-g-r-ey-t\", \"vb\"],\n  \"immigration\": [\"ih m-ah g-r-ey1 sh-ah-n\", \"nn\"],\n  \"imminent\": [\"ih1 m-ah n-ah-n-t\", \"jj\"],\n  \"imminently\": [\"ih1 m-ah n-ah-n-t l-iy\", \"rb\"],\n  \"immobility\": [\"ih m-ow b-ih1 l-ih t-iy\", \"nn\"],\n  \"immobilize\": [\"ih-m-ow1-b-ah-l-ay-z\", \"vb\"],\n  \"immoral\": [\"ih m-ao1 r-ah-l\", \"jj\"],\n  \"immorality\": [\"ih m-er ae1 l-ih t-iy\", \"nn\"],\n  \"immortal\": [\"ih m-ao1-r t-ah-l\", \"jj\"],\n  \"immortality\": [\"ih m-ao-r t-ae1 l-ih t-iy\", \"nn\"],\n  \"immortalize\": [\"ih-m-ao1-r-t-ah-l-ay-z\", \"vb\"],\n  \"immovable\": [\"ih m-uw1 v-ah b-ah-l\", \"jj\"],\n  \"immune\": [\"ih m-y-uw1-n\", \"jj nn\"],\n  \"immunity\": [\"ih m-y-uw1 n-ah t-iy\", \"nn\"],\n  \"immunization\": [\"ih m-y-uw n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"immunize\": [\"ih1-m-y-uw-n-ay-z\", \"vb\"],\n  \"immunological\": [\"ih m-y-uw n-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"immunologist\": [\"ih m-y-uw n-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"immunology\": [\"ih m-y-uw n-aa1 l-ah jh-iy\", \"nn\"],\n  \"immutable\": [\"ih m-y-uw1 t-ah b-ah-l\", \"jj\"],\n  \"impact\": [\"ih-m p-ae1-k-t\", \"nn vb\"],\n  \"impacted\": [\"ih1-m p-ae-k t-ih-d\", \"vbn jj\"],\n  \"impair\": [\"ih-m p-eh1-r\", \"vb nn\"],\n  \"impaired\": [\"ih-m p-eh1-r-d\", \"vbn jj\"],\n  \"impairment\": [\"ih-m p-eh1-r m-ah-n-t\", \"nn\"],\n  \"impale\": [\"ih-m-p-ey1-l\", \"vb\"],\n  \"impart\": [\"ih-m p-aa1-r-t\", \"vb\"],\n  \"impartial\": [\"ih-m p-aa1-r sh-ah-l\", \"jj\"],\n  \"impartiality\": [\"ih-m p-aa-r sh-iy ae1 l-ih t-iy\", \"nn\"],\n  \"impassable\": [\"ih-m p-ae1 s-ah b-ah-l\", \"jj\"],\n  \"impasse\": [\"ih-m p-ae1-s\", \"nn\"],\n  \"impassioned\": [\"ih-m p-ae1 sh-ah-n-d\", \"jj\"],\n  \"impassive\": [\"ih-m p-ae1 s-ih-v\", \"jj\"],\n  \"impassively\": [\"ih-m p-ae1 s-ih-v l-iy\", \"rb\"],\n  \"impatience\": [\"ih-m p-ey1 sh-ah-n-s\", \"nn\"],\n  \"impatiens\": [\"ih-m p-ey1 sh-ah-n-z\", \"nn\"],\n  \"impatient\": [\"ih-m p-ey1 sh-ah-n-t\", \"jj nn\"],\n  \"impatiently\": [\"ih-m p-ey1 sh-ah-n-t l-iy\", \"rb\"],\n  \"impeach\": [\"ih-m-p-iy1-ch\", \"vb\"],\n  \"impeachment\": [\"ih-m p-iy1-ch m-ah-n-t\", \"nn\"],\n  \"impeccable\": [\"ih-m p-eh1 k-ah b-ah-l\", \"jj\"],\n  \"impeccably\": [\"ih-m p-eh1 k-ah b-l-iy\", \"rb\"],\n  \"impede\": [\"ih-m p-iy1-d\", \"vb vbp\"],\n  \"impediment\": [\"ih-m p-eh1 d-ah m-ah-n-t\", \"nn\"],\n  \"impel\": [\"ih-m-p-eh1-l\", \"vb\"],\n  \"impend\": [\"ih-m-p-eh1-n-d\", \"vb\"],\n  \"impending\": [\"ih-m p-eh1-n d-ih-ng\", \"jj vbg\"],\n  \"impenetrable\": [\"ih-m p-eh1 n-ah t-r-ah b-ah-l\", \"jj\"],\n  \"imperative\": [\"ih-m p-eh1 r-ah t-ih-v\", \"jj nn\"],\n  \"imperceptible\": [\"ih-m p-er s-eh1-p t-ih b-ah-l\", \"jj\"],\n  \"imperceptibly\": [\"ih-m p-er s-eh1-p t-ih b-l-iy\", \"rb\"],\n  \"imperfect\": [\"ih-m p-er1 f-ih-k-t\", \"jj\"],\n  \"imperfection\": [\"ih-m p-er f-eh1-k sh-ah-n\", \"nn\"],\n  \"imperfectly\": [\"ih-m p-er1 f-ih-k-t l-iy\", \"rb\"],\n  \"imperial\": [\"ih-m p-ih1 r-iy ah-l\", \"jj\"],\n  \"imperialism\": [\"ih-m p-ih1 r-iy ah l-ih z-ah-m\", \"nn\"],\n  \"imperialist\": [\"ih-m p-ih1 r-iy ah l-ih-s-t\", \"nn\"],\n  \"imperil\": [\"ih-m p-eh1 r-ah-l\", \"vb\"],\n  \"imperiled\": [\"ih-m p-eh1 r-ah-l-d\", \"vbn jj\"],\n  \"imperious\": [\"ih-m p-ih1 r-iy ah-s\", \"jj\"],\n  \"impermissible\": [\"ih-m p-er m-ih1 s-ih b-ah-l\", \"jj\"],\n  \"impersonal\": [\"ih-m p-er1 s-ah n-ah-l\", \"jj\"],\n  \"impersonation\": [\"ih-m p-er s-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"impersonator\": [\"ih-m p-er1 s-ah n-ey t-er\", \"nn\"],\n  \"impertinent\": [\"ih-m p-er1 t-ah n-ah-n-t\", \"jj\"],\n  \"impervious\": [\"ih-m p-er1 v-iy ah-s\", \"jj\"],\n  \"impetuous\": [\"ih-m p-eh1 ch-w-ah-s\", \"jj\"],\n  \"impetus\": [\"ih1-m p-ah t-ah-s\", \"nn\"],\n  \"impinge\": [\"ih-m p-ih1-n-jh\", \"vb vbp\"],\n  \"implacable\": [\"ih-m p-l-ae1 k-ah b-ah-l\", \"jj\"],\n  \"implant\": [\"ih-m p-l-ae1-n-t\", \"nn vb\"],\n  \"implantable\": [\"ih1-m p-l-ae-n t-ah b-ah-l\", \"jj\"],\n  \"implantation\": [\"ih-m p-l-ae-n t-ey1 sh-ah-n\", \"nn\"],\n  \"implausible\": [\"ih-m p-l-ao1 z-ah b-ah-l\", \"jj\"],\n  \"implausibly\": [\"ih-m p-l-ao1 z-ah b-l-iy\", \"rb\"],\n  \"implement\": [\"ih1-m p-l-ah m-ah-n-t\", \"vb vbp\"],\n  \"implementation\": [\"ih-m p-l-ah m-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"implicate\": [\"ih1-m p-l-ih k-ey-t\", \"vb\"],\n  \"implication\": [\"ih-m p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"implicit\": [\"ih-m p-l-ih1 s-ah-t\", \"jj\"],\n  \"implicitly\": [\"ih-m p-l-ih1 s-ah-t l-iy\", \"rb\"],\n  \"implied\": [\"ih-m p-l-ay1-d\", \"vbn jj vbd\"],\n  \"implore\": [\"ih-m p-l-ao1-r\", \"vb\"],\n  \"imply\": [\"ih-m p-l-ay1\", \"vb vbp\"],\n  \"impolite\": [\"ih-m p-ah l-ay-t\", \"jj\"],\n  \"impolitic\": [\"ih-m p-ao1 l-ih1 t-ih-k\", \"jj\"],\n  \"imponderable\": [\"ih-m p-aa1-n d-er ah b-ah-l\", \"jj nn\"],\n  \"import\": [\"ih-m p-ao1-r-t\", \"nn vb vbp\"],\n  \"importance\": [\"ih-m p-ao1-r t-ah-n-s\", \"nn\"],\n  \"important\": [\"ih-m p-ao1-r t-ah-n-t\", \"jj\"],\n  \"importantly\": [\"ih-m p-ao1-r t-ah-n-t l-iy\", \"rb\"],\n  \"importation\": [\"ih-m p-ao-r t-ey1 sh-ah-n\", \"nn\"],\n  \"imported\": [\"ih-m p-ao1-r t-ih-d\", \"vbn vbd jj\"],\n  \"importer\": [\"ih-m p-ao1-r t-er\", \"nn\"],\n  \"impose\": [\"ih-m p-ow1-z\", \"vb vbp\"],\n  \"imposed\": [\"ih-m p-ow1-z-d\", \"vbn vbd jj\"],\n  \"imposing\": [\"ih-m p-ow1 z-ih-ng\", \"vbg jj\"],\n  \"imposition\": [\"ih-m p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"impossibility\": [\"ih-m p-ao s-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"impossible\": [\"ih-m p-aa1 s-ah b-ah-l\", \"jj\"],\n  \"impossibly\": [\"ih-m p-aa1 s-ah b-l-iy\", \"rb\"],\n  \"impotence\": [\"ih1-m p-ah t-ah-n-s\", \"nn\"],\n  \"impotent\": [\"ih1-m p-ah t-ah-n-t\", \"jj\"],\n  \"impound\": [\"ih-m p-aw1-n-d\", \"vb\"],\n  \"impoundment\": [\"ih-m p-aw1-n-d m-ah-n-t\", \"nn\"],\n  \"impoverish\": [\"ih-m-p-aa1-v-r-ih-sh\", \"vb\"],\n  \"impoverished\": [\"ih-m p-aa1 v-r-ih-sh-t\", \"jj vbn\"],\n  \"impoverishment\": [\"ih-m p-aa1 v-r-ih-sh m-ah-n-t\", \"nn\"],\n  \"impracticable\": [\"ih-m p-r-ae1-k t-ih k-ah b-ah-l\", \"jj\"],\n  \"impractical\": [\"ih-m p-r-ae1-k t-ah k-ah-l\", \"jj\"],\n  \"imprecise\": [\"ih1-m p-r-ah s-ay-s\", \"jj\"],\n  \"impregnable\": [\"ih-m p-r-eh1-g n-ah b-ah-l\", \"jj\"],\n  \"impresario\": [\"ih-m p-r-ih s-aa1 r-iy ow\", \"nn\"],\n  \"impress\": [\"ih-m p-r-eh1-s\", \"vb nn vbp\"],\n  \"impressed\": [\"ih-m p-r-eh1-s-t\", \"vbn jj vbd\"],\n  \"impression\": [\"ih-m p-r-eh1 sh-ah-n\", \"nn\"],\n  \"impressionism\": [\"ih-m p-r-eh1 sh-ah-n ih z-ah-m\", \"nn\"],\n  \"impressionist\": [\"ih-m p-r-eh1 sh-ah-n ah-s-t\", \"nn jj\"],\n  \"impressionistic\": [\"ih-m p-r-eh sh-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"impressive\": [\"ih-m p-r-eh1 s-ih-v\", \"jj\"],\n  \"impressively\": [\"ih-m p-r-eh1 s-ih-v l-iy\", \"rb\"],\n  \"imprimatur\": [\"ih-m p-r-ih m-aa1 t-er\", \"nn\"],\n  \"imprint\": [\"ih-m p-r-ih1-n-t\", \"vb nn\"],\n  \"imprison\": [\"ih-m p-r-ih1 z-ah-n\", \"vb\"],\n  \"imprisoned\": [\"ih-m p-r-ih1 z-ah-n-d\", \"vbn vbd jj\"],\n  \"imprisonment\": [\"ih-m p-r-ih1 z-ah-n m-ah-n-t\", \"nn\"],\n  \"improbable\": [\"ih-m p-r-aa1 b-ah b-ah-l\", \"jj\"],\n  \"improbably\": [\"ih-m p-r-aa1 b-ah b-l-iy\", \"rb\"],\n  \"impromptu\": [\"ih-m p-r-aa1-m-p t-uw\", \"jj nn\"],\n  \"improper\": [\"ih-m p-r-aa1 p-er\", \"jj\"],\n  \"improperly\": [\"ih-m p-r-aa1 p-er l-iy\", \"rb\"],\n  \"impropriety\": [\"ih-m p-r-ah p-r-ay1 ah t-iy\", \"nn\"],\n  \"improve\": [\"ih-m p-r-uw1-v\", \"vb vbp\"],\n  \"improved\": [\"ih-m p-r-uw1-v-d\", \"vbn jj vbd\"],\n  \"improvement\": [\"ih-m p-r-uw1-v m-ah-n-t\", \"nn\"],\n  \"improvisation\": [\"ih-m p-r-aa v-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"improvisational\": [\"ih-m p-r-aa v-ih z-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"improvise\": [\"ih1-m p-r-ah v-ay-z\", \"vb\"],\n  \"improvising\": [\"ih1-m p-r-ah v-ay z-ih-ng\", \"nn\"],\n  \"imprudence\": [\"ih-m p-r-uw1 d-ah-n-s\", \"nn\"],\n  \"imprudent\": [\"ih-m p-r-uw1 d-ah-n-t\", \"jj\"],\n  \"imprudently\": [\"ih-m p-r-uw1 d-ah-n-t l-iy\", \"rb\"],\n  \"impugn\": [\"ih-m p-y-uw1-n\", \"vb\"],\n  \"impulse\": [\"ih1-m p-ah-l-s\", \"nn jj\"],\n  \"impulsive\": [\"ih-m p-ah1-l s-ih-v\", \"jj\"],\n  \"impulsively\": [\"ih-m p-ah1-l s-ih-v l-iy\", \"rb\"],\n  \"impunity\": [\"ih-m p-y-uw1 n-ih t-iy\", \"nn\"],\n  \"impure\": [\"ih-m p-y-uh1-r\", \"jj\"],\n  \"impurity\": [\"ih-m p-y-uh1 r-ah t-iy\", \"nn\"],\n  \"imputation\": [\"ih-m p-y-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"impute\": [\"ih-m-p-y-uw1-t\", \"vb\"],\n  \"imputed\": [\"ih-m p-y-uw1 t-ih-d\", \"vbn jj\"],\n  \"in\": [\"ih-n\", \"in nn rb rp rbr\"],\n  \"inability\": [\"ih-n ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"inaccessible\": [\"ih-n ah-k s-eh1 s-ah b-ah-l\", \"jj\"],\n  \"inaccuracy\": [\"ih-n ae1 k-y-er ah s-iy\", \"nn\"],\n  \"inaccurate\": [\"ih-n ae1 k-y-er ah-t\", \"jj\"],\n  \"inaccurately\": [\"ih-n ae1 k-y-er ah-t l-iy\", \"rb\"],\n  \"inaction\": [\"ih-n ae1-k sh-ah-n\", \"nn\"],\n  \"inactivate\": [\"ih-n-ae1-k-t-ih-v-ey-t\", \"vb\"],\n  \"inactivation\": [\"ih-n ae-k t-ih v-ey1 sh-ah-n\", \"nn\"],\n  \"inactive\": [\"ih-n ae1-k t-ih-v\", \"jj\"],\n  \"inactivity\": [\"ih-n ae-k t-ih1 v-ih t-iy\", \"nn\"],\n  \"inadequacy\": [\"ih-n ae1 d-ih k-w-ah s-iy\", \"nn\"],\n  \"inadequate\": [\"ih-n ae1 d-ah k-w-ah-t\", \"jj\"],\n  \"inadequately\": [\"ih-n ae1 d-ah k-w-ah-t l-iy\", \"rb\"],\n  \"inadvertent\": [\"ih-n ah-d v-er1 t-ah-n-t\", \"jj\"],\n  \"inadvertently\": [\"ih-n ah-d v-er1 t-ah-n-t l-iy\", \"rb\"],\n  \"inadvisable\": [\"ih-n ah-d v-ay1 z-ah b-ah-l\", \"jj\"],\n  \"inalienable\": [\"ih-n ey1 l-y-ah n-ah b-ah-l\", \"jj\"],\n  \"inane\": [\"ih-n ey1-n\", \"jj\"],\n  \"inanimate\": [\"ih-n ae1 n-ah m-ah-t\", \"jj\"],\n  \"inapplicable\": [\"ih-n ae1 p-l-ih k-ah b-ah-l\", \"jj\"],\n  \"inappropriate\": [\"ih-n ah p-r-ow1 p-r-iy ih-t\", \"jj\"],\n  \"inappropriately\": [\"ih-n ah p-r-aa1 p-r-iy ah-t l-iy\", \"rb\"],\n  \"inarticulate\": [\"ih-n aa-r t-ih1 k-y-ah l-ah-t\", \"jj\"],\n  \"inasmuch\": [\"ih-n ae1-s m-ah-k\", \"rb\"],\n  \"inattention\": [\"ih-n ah t-eh1-n ch-ah-n\", \"nn\"],\n  \"inattentive\": [\"ih-n ah t-eh1-n t-ih-v\", \"jj\"],\n  \"inaudible\": [\"ih-n ao1 d-ah b-ah-l\", \"jj\"],\n  \"inaugural\": [\"ih n-ao1 g-er ah-l\", \"jj nn\"],\n  \"inaugurate\": [\"ih-n-ao1-g-y-ah-r-ey-t\", \"vb\"],\n  \"inauguration\": [\"ih n-ao g-y-er ey1 sh-ah-n\", \"nn\"],\n  \"inauspicious\": [\"ih-n aw s-p-ih1 sh-ih-s\", \"jj\"],\n  \"inboard\": [\"ih1-n b-ao-r-d\", \"jj rb\"],\n  \"inbound\": [\"ih-n b-aw1-n-d\", \"jj\"],\n  \"incalculable\": [\"ih-n k-ae1-l k-y-ah l-ah b-ah-l\", \"jj\"],\n  \"incandescent\": [\"ih-n k-ah-n d-eh1 s-ah-n-t\", \"jj\"],\n  \"incantation\": [\"ih-n k-ae1-n t-ey1 sh-ah-n\", \"nn\"],\n  \"incapable\": [\"ih-n k-ey1 p-ah b-ah-l\", \"jj nn\"],\n  \"incapacitate\": [\"ih-n-k-ah-p-ae1-s-ih-t-ey-t\", \"vb\"],\n  \"incapacity\": [\"ih-n k-ah p-ae1 s-ah t-iy\", \"nn\"],\n  \"incarcerate\": [\"ih-n k-aa1-r s-er ey-t\", \"vb\"],\n  \"incarceration\": [\"ih-n k-aa-r s-er ey1 sh-ah-n\", \"nn\"],\n  \"incarnate\": [\"ih-n k-aa1-r n-ah-t\", \"jj vb\"],\n  \"incarnation\": [\"ih-n k-aa1-r n-ey1 sh-ah-n\", \"nn\"],\n  \"incendiary\": [\"ih-n s-eh1-n d-iy eh r-iy\", \"jj\"],\n  \"incense\": [\"ih-n s-eh1-n-s\", \"nn vb\"],\n  \"incensed\": [\"ih1-n s-eh-n-s-t\", \"vbn jj\"],\n  \"incentive\": [\"ih-n s-eh1-n t-ih-v\", \"nn jj\"],\n  \"inception\": [\"ih-n s-eh1-p sh-ah-n\", \"nn\"],\n  \"incessant\": [\"ih-n s-eh1 s-ah-n-t\", \"jj\"],\n  \"incessantly\": [\"ih-n s-eh1 s-ah-n-t l-iy\", \"rb\"],\n  \"incest\": [\"ih1-n s-eh-s-t\", \"nn\"],\n  \"incestuous\": [\"ih-n s-eh1 s-ch-w-ah-s\", \"jj\"],\n  \"inch\": [\"ih1-n-ch\", \"nn rb vb\"],\n  \"inches\": [\"ih1-n ch-ah-z\", \"nn\"],\n  \"incidence\": [\"ih1-n s-ah d-ah-n-s\", \"nn\"],\n  \"incident\": [\"ih1-n s-ah d-ah-n-t\", \"nn jj\"],\n  \"incidental\": [\"ih-n s-ih d-eh1-n t-ah-l\", \"jj\"],\n  \"incidentally\": [\"ih-n s-ih d-eh1-n t-ah l-iy\", \"rb\"],\n  \"incineration\": [\"ih-n s-ih1 n-er ey sh-ah-n\", \"nn\"],\n  \"incinerator\": [\"ih-n s-ih1 n-er ey t-er\", \"nn\"],\n  \"incipient\": [\"ih-n s-ih1 p-iy ah-n-t\", \"jj\"],\n  \"incisive\": [\"ih-n s-ay1 s-ih-v\", \"jj\"],\n  \"incite\": [\"ih-n s-ay1-t\", \"vb vbp\"],\n  \"inclement\": [\"ih-n k-l-eh1 m-ah-n-t\", \"jj\"],\n  \"inclination\": [\"ih-n k-l-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"incline\": [\"ih-n k-l-ay1-n\", \"nn vb\"],\n  \"inclined\": [\"ih-n k-l-ay1-n-d\", \"vbn jj\"],\n  \"include\": [\"ih-n k-l-uw1-d\", \"vbp vb\"],\n  \"included\": [\"ih-n k-l-uw1 d-ah-d\", \"vbd vbn jj\"],\n  \"inclusion\": [\"ih-n k-l-uw1 zh-ah-n\", \"nn\"],\n  \"inclusive\": [\"ih-n k-l-uw1 s-ih-v\", \"jj\"],\n  \"incoherence\": [\"ih-n k-ow hh-ih1 r-ah-n-s\", \"nn\"],\n  \"incoherent\": [\"ih-n k-ow hh-ih1 r-ah-n-t\", \"jj\"],\n  \"incoherently\": [\"ih-n k-ow hh-ih1 r-ah-n-t l-iy\", \"rb\"],\n  \"income\": [\"ih1-n k-ah-m\", \"nn\"],\n  \"incoming\": [\"ih1-n k-ah m-ih-ng\", \"jj\"],\n  \"incomparable\": [\"ih-n k-aa1-m p-er ah b-ah-l\", \"jj\"],\n  \"incomparably\": [\"ih-n k-aa1-m p-er ah b-l-iy\", \"rb\"],\n  \"incompatibility\": [\"ih-n k-aa-m p-ah t-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"incompatible\": [\"ih-n k-ah-m p-ae1 t-ah b-ah-l\", \"jj\"],\n  \"incompetence\": [\"ih-n k-aa1-m p-ah t-ah-n-s\", \"nn\"],\n  \"incompetent\": [\"ih-n k-aa1-m p-ah t-ah-n-t\", \"jj\"],\n  \"incomplete\": [\"ih-n k-ah-m p-l-iy1-t\", \"jj\"],\n  \"incomprehensible\": [\"ih-ng k-aa-m p-r-ah hh-eh1-n s-ih b-ah-l\", \"jj nn\"],\n  \"inconceivable\": [\"ih-n k-ah-n s-iy1 v-ah b-ah-l\", \"jj\"],\n  \"inconclusive\": [\"ih-n k-ah-n k-l-uw1 s-ih-v\", \"jj\"],\n  \"inconclusively\": [\"ih-ng k-aa1-n k-l-uw s-ih-v l-iy\", \"rb\"],\n  \"incongruity\": [\"ih-ng k-ao-ng r-uw1 ih t-iy\", \"nn\"],\n  \"incongruous\": [\"ih-ng k-ao1-ng r-uw ah-s\", \"jj\"],\n  \"inconsequential\": [\"ih-ng k-aa-n s-ah k-w-eh1-n ch-ah-l\", \"jj\"],\n  \"inconsistency\": [\"ih-n k-ah-n s-ih1 s-t-ah-n s-iy\", \"nn\"],\n  \"inconsistent\": [\"ih-n k-ah-n s-ih1 s-t-ah-n-t\", \"jj\"],\n  \"inconspicuous\": [\"ih-ng k-aa1-n s-p-ih k-w-ah-s\", \"jj\"],\n  \"incontrovertible\": [\"ih-ng k-aa-n t-r-ow v-er1 t-ih b-ah-l\", \"jj\"],\n  \"inconvenience\": [\"ih-n k-ah-n v-iy1 n-y-ah-n-s\", \"nn\"],\n  \"inconvenient\": [\"ih-n k-ah-n v-iy1 n-y-ah-n-t\", \"jj\"],\n  \"incorporate\": [\"ih-n k-ao1-r p-er ey-t\", \"vb vbp jj\"],\n  \"incorporated\": [\"ih-n k-ao1-r p-er ey t-ah-d\", \"vbn jj vbd\"],\n  \"incorporating\": [\"ih-n k-ao1-r p-er ey t-ih-ng\", \"jj vbg\"],\n  \"incorporation\": [\"ih-n k-ao-r p-er ey1 sh-ah-n\", \"nn\"],\n  \"incorrect\": [\"ih-n k-er eh1-k-t\", \"jj\"],\n  \"incorrectly\": [\"ih-n k-er eh1-k-t l-iy\", \"rb\"],\n  \"incorrigible\": [\"ih-n k-aa1 r-ah jh-ah b-ah-l\", \"jj\"],\n  \"increase\": [\"ih-n k-r-iy1-s\", \"nn vb vbp\"],\n  \"increased\": [\"ih-n k-r-iy1-s-t\", \"vbn jj vbd\"],\n  \"increasing\": [\"ih-n k-r-iy1 s-ih-ng\", \"vbg jj nn\"],\n  \"increasingly\": [\"ih-n k-r-iy1 s-ih-ng l-iy\", \"rb\"],\n  \"incredible\": [\"ih-n k-r-eh1 d-ah b-ah-l\", \"jj\"],\n  \"incredibly\": [\"ih-n k-r-eh1 d-ah b-l-iy\", \"rb\"],\n  \"incredulity\": [\"ih-n k-r-ah d-uw1 l-ih t-iy\", \"nn\"],\n  \"increment\": [\"ih1-n k-r-ah m-ah-n-t\", \"nn\"],\n  \"incremental\": [\"ih-n k-r-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"incriminate\": [\"ih-n-k-r-ih1-m-ah-n-ey-t\", \"vb\"],\n  \"incriminating\": [\"ih-n k-r-ih1 m-ah n-ey t-ih-ng\", \"vbg jj\"],\n  \"incubate\": [\"ih1-n-k-y-ah-b-ey-t\", \"vb\"],\n  \"incubation\": [\"ih-ng k-y-uw b-ey1 sh-ah-n\", \"nn\"],\n  \"incumbency\": [\"ih-n k-ah1-m b-ah-n s-iy\", \"nn\"],\n  \"incumbent\": [\"ih-n k-ah1-m b-ah-n-t\", \"jj nn\"],\n  \"incur\": [\"ih-n k-er1\", \"vb vbp\"],\n  \"incurable\": [\"ih-n k-y-uh1 r-ah b-ah-l\", \"jj\"],\n  \"incursion\": [\"ih-n k-er1 zh-ah-n\", \"nn\"],\n  \"indebted\": [\"ih-n d-eh1 t-ah-d\", \"jj\"],\n  \"indebtedness\": [\"ih-n d-eh1 t-ih-d n-ih-s\", \"nn\"],\n  \"indecency\": [\"ih-n d-iy1 s-ah-n s-iy\", \"nn\"],\n  \"indecent\": [\"ih-n d-iy1 s-ah-n-t\", \"jj\"],\n  \"indecision\": [\"ih-n d-ih s-ih1 zh-ah-n\", \"nn\"],\n  \"indecisive\": [\"ih-n d-ih s-ay1 s-ih-v\", \"jj\"],\n  \"indecisiveness\": [\"ih-n d-eh1 s-ih s-ih-v n-ah-s\", \"nn\"],\n  \"indeed\": [\"ih-n d-iy1-d\", \"rb uh\"],\n  \"indefatigable\": [\"ih-n d-ih f-ae1 t-ih g-ah b-ah-l\", \"jj\"],\n  \"indefensible\": [\"ih-n d-ih f-eh1-n s-ah b-ah-l\", \"jj\"],\n  \"indefinable\": [\"ih-n d-ih f-ay1 n-ah b-ah-l\", \"jj\"],\n  \"indefinite\": [\"ih-n d-eh1 f-ah n-ah-t\", \"jj nn\"],\n  \"indefinitely\": [\"ih-n d-eh1 f-ah n-ah-t l-iy\", \"rb\"],\n  \"indelible\": [\"ih-n d-eh1 l-ih b-ah-l\", \"jj\"],\n  \"indelibly\": [\"ih-n d-eh1 l-ah b-l-iy\", \"rb\"],\n  \"indelicate\": [\"ih-n d-eh1 l-ih k-ah-t\", \"jj\"],\n  \"indemnification\": [\"ih-n d-eh-m n-ah f-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"indemnify\": [\"ih-n d-eh1-m n-ah f-ay\", \"vb\"],\n  \"indemnity\": [\"ih-n d-eh1-m n-ah t-iy\", \"nn\"],\n  \"indenture\": [\"ih-n d-eh1-n ch-er\", \"nn vb\"],\n  \"independence\": [\"ih-n d-ih p-eh1-n d-ah-n-s\", \"nn\"],\n  \"independent\": [\"ih-n d-ih p-eh1-n d-ah-n-t\", \"jj nn\"],\n  \"independently\": [\"ih-n d-ih p-eh1-n d-ah-n-t l-iy\", \"rb\"],\n  \"indestructibility\": [\"ih-n d-ah-s-t r-ah-k t-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"indestructible\": [\"ih-n d-ah-s-t r-ah1-k t-ih b-ah-l\", \"jj\"],\n  \"indeterminate\": [\"ih-n d-ih t-er1 m-ih n-ih-t\", \"jj\"],\n  \"index\": [\"ih1-n d-eh-k-s\", \"nn vb\"],\n  \"indexation\": [\"ih1-n d-eh-k s-ey1 sh-ah-n\", \"nn\"],\n  \"indexed\": [\"ih1-n d-eh-k-s-t\", \"vbn jj\"],\n  \"indexer\": [\"ih1-n d-eh-k s-er\", \"nn\"],\n  \"indicate\": [\"ih1-n d-ah k-ey-t\", \"vb vbp\"],\n  \"indicated\": [\"ih1-n d-ah k-ey t-ah-d\", \"vbd jj vbn\"],\n  \"indication\": [\"ih-n d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"indicative\": [\"ih-n d-ih1 k-ah t-ih-v\", \"jj\"],\n  \"indicator\": [\"ih1-n d-ah k-ey t-er\", \"nn\"],\n  \"indict\": [\"ih-n d-ay1-t\", \"vb\"],\n  \"indictment\": [\"ih-n d-ay1-t m-ah-n-t\", \"nn\"],\n  \"indifference\": [\"ih-n d-ih1 f-er ah-n-s\", \"nn\"],\n  \"indifferent\": [\"ih-n d-ih1 f-r-ah-n-t\", \"jj\"],\n  \"indigenous\": [\"ih-n d-ih1 jh-ah n-ah-s\", \"jj\"],\n  \"indigent\": [\"ih1-n d-ih jh-ah-n-t\", \"jj\"],\n  \"indigestion\": [\"ih-n d-ay jh-eh1-s ch-ah-n\", \"nn\"],\n  \"indignant\": [\"ih-n d-ih1-g n-ah-n-t\", \"jj\"],\n  \"indignantly\": [\"ih-n d-ih1-g n-ah-n-t l-iy\", \"rb\"],\n  \"indignation\": [\"ih-n d-ih-g n-ey1 sh-ah-n\", \"nn\"],\n  \"indignity\": [\"ih-n d-ih1-g n-ah t-iy\", \"nn\"],\n  \"indirect\": [\"ih-n d-er eh1-k-t\", \"jj\"],\n  \"indirectly\": [\"ih-n d-er eh1-k-t l-iy\", \"rb\"],\n  \"indiscreet\": [\"ih-n d-ih s-k-r-iy1-t\", \"jj\"],\n  \"indiscretion\": [\"ih-n d-ih s-k-r-eh1 sh-ah-n\", \"nn\"],\n  \"indiscriminate\": [\"ih-n d-ih s-k-r-ih1 m-ah n-ah-t\", \"jj\"],\n  \"indispensable\": [\"ih-n d-ih s-p-eh1-n s-ah b-ah-l\", \"jj nn\"],\n  \"indispensible\": [\"ih-n d-ih s-p-eh1-n s-ih b-ah-l\", \"jj\"],\n  \"indisputable\": [\"ih-n d-ih-s p-y-uw1 t-ah b-ah-l\", \"jj\"],\n  \"indisputably\": [\"ih-n d-ih1 s-p-y-uw t-ae b-l-iy\", \"rb\"],\n  \"indistinct\": [\"ih-n d-ih s-t-ih1-ng-k-t\", \"jj\"],\n  \"indistinguishable\": [\"ih-n d-ih s-t-ih1-ng g-w-ih sh-ah b-ah-l\", \"jj\"],\n  \"indium\": [\"ih1-n d-iy ah-m\", \"nn\"],\n  \"individual\": [\"ih-n d-ah v-ih1 jh-ah w-ah-l\", \"jj nn\"],\n  \"individualism\": [\"ih-n d-ih v-ih d-uw1 ah l-ih z-ah-m\", \"nn\"],\n  \"individualist\": [\"ih-n d-ih v-ih d-uw1 ah l-ih-s-t\", \"nn\"],\n  \"individualistic\": [\"ih-n d-ih v-ih jh-uw ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"individuality\": [\"ih-n d-ih v-ih jh-uw ae1 l-ih t-iy\", \"nn\"],\n  \"individualize\": [\"ih-n-d-ih-v-ih1-jh-uw-ah-l-ay-z\", \"vb\"],\n  \"individualized\": [\"ih-n d-ih v-ih1 jh-uw ah l-ay-z-d\", \"jj vbn\"],\n  \"individually\": [\"ih-n d-ih v-ih1 jh-uw ah l-iy\", \"rb\"],\n  \"indivisible\": [\"ih-n d-ih v-ih1 s-ih b-ah-l\", \"jj\"],\n  \"indoctrinate\": [\"ih-n d-aa1-k t-r-ah n-ey-t\", \"vb\"],\n  \"indoctrination\": [\"ih-n d-aa-k t-r-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"indolent\": [\"ih1-n d-ah l-ah-n-t\", \"jj\"],\n  \"indomitable\": [\"ih-n d-aa1 m-ah t-ah b-ah-l\", \"jj\"],\n  \"indoor\": [\"ih1-n d-ao-r\", \"jj\"],\n  \"indoors\": [\"ih1-n d-ao-r-z\", \"nn rb\"],\n  \"induce\": [\"ih-n d-uw1-s\", \"vb\"],\n  \"inducement\": [\"ih-n d-uw1-s m-ah-n-t\", \"nn\"],\n  \"induct\": [\"ih-n-d-ah1-k-t\", \"vb\"],\n  \"inductee\": [\"ih-n d-ah1-k t-iy1\", \"nn\"],\n  \"induction\": [\"ih-n d-ah1-k sh-ah-n\", \"nn\"],\n  \"indulge\": [\"ih-n d-ah1-l-jh\", \"vb vbp\"],\n  \"indulgence\": [\"ih-n d-ah1-l jh-ah-n-s\", \"nn\"],\n  \"indulgent\": [\"ih-n d-ah1-l jh-ah-n-t\", \"jj\"],\n  \"industrial\": [\"ih-n d-ah1-s t-r-iy ah-l\", \"jj\"],\n  \"industrialist\": [\"ih-n d-ah1-s t-r-iy ah l-ih-s-t\", \"nn\"],\n  \"industrialization\": [\"ih-n d-ah-s t-r-iy ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"industrialize\": [\"ih-n d-ah1-s t-r-iy ah l-ay-z\", \"vb\"],\n  \"industrialized\": [\"ih-n d-ah1-s t-r-iy ah l-ay-z-d\", \"vbn jj\"],\n  \"industrially\": [\"ih-n d-ah1-s t-r-iy ah l-iy\", \"rb\"],\n  \"industrious\": [\"ih-n d-ah1-s t-r-iy ah-s\", \"jj\"],\n  \"industry\": [\"ih1-n d-ah-s t-r-iy\", \"nn\"],\n  \"industrywide\": [\"ih1-n d-ah-s t-r-iy w-ay-d\", \"jj rb\"],\n  \"inedible\": [\"ih-n eh1 d-ah b-ah-l\", \"jj\"],\n  \"ineffable\": [\"ih-n eh1 f-ah b-ah-l\", \"jj\"],\n  \"ineffective\": [\"ih-n ih f-eh1-k t-ih-v\", \"jj\"],\n  \"ineffectiveness\": [\"ih-n ah f-eh1-k t-ih-v n-ah-s\", \"nn\"],\n  \"ineffectual\": [\"ih-n ah f-eh1-k ch-uw ah-l\", \"jj\"],\n  \"inefficiency\": [\"ih-n ih f-ih1 sh-ah-n s-iy\", \"nn\"],\n  \"inefficient\": [\"ih-n ih f-ih1 sh-ah-n-t\", \"jj\"],\n  \"ineligible\": [\"ih-n eh1 l-ih jh-ah b-ah-l\", \"jj\"],\n  \"inept\": [\"ih-n eh1-p-t\", \"jj\"],\n  \"ineptitude\": [\"ih-n eh1-p t-ih t-uw-d\", \"nn\"],\n  \"ineptly\": [\"ih-n eh1-p-t l-iy\", \"rb\"],\n  \"inequality\": [\"ih-n ih k-w-aa1 l-ah t-iy\", \"nn\"],\n  \"inequitable\": [\"ih-n eh1 k-w-ah t-ah b-ah-l\", \"jj\"],\n  \"inequity\": [\"ih-n eh1 k-w-ah t-iy\", \"nn\"],\n  \"inert\": [\"ih n-er1-t\", \"jj\"],\n  \"inertia\": [\"ih n-er1 sh-ah\", \"nn\"],\n  \"inertial\": [\"ih n-er1 sh-ah-l\", \"jj\"],\n  \"inescapable\": [\"ih-n ih-s k-ey1 p-ah b-ah-l\", \"jj\"],\n  \"inevitability\": [\"ih-n eh v-ih t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"inevitable\": [\"ih-n eh1 v-ah t-ah b-ah-l\", \"jj\"],\n  \"inevitably\": [\"ih-n eh1 v-ah t-ah b-l-iy\", \"rb\"],\n  \"inexact\": [\"ih-n ih-g z-ae1-k-t\", \"jj\"],\n  \"inexcusable\": [\"ih-n ih-k s-k-y-uw1 z-ah b-ah-l\", \"jj\"],\n  \"inexhaustible\": [\"ih-n ih-g z-ao1 s-t-ah b-ah-l\", \"jj\"],\n  \"inexorable\": [\"ih-n eh1-k s-er ah b-ah-l\", \"jj\"],\n  \"inexorably\": [\"ih-n eh1-k s-er ah b-l-iy\", \"rb\"],\n  \"inexpensive\": [\"ih-n ih-k s-p-eh1-n s-ih-v\", \"jj\"],\n  \"inexperience\": [\"ih-n ih-k s-p-ih1 r-iy ah-n-s\", \"nn\"],\n  \"inexperienced\": [\"ih-n ih-k s-p-ih1 r-iy ah-n-s-t\", \"jj\"],\n  \"inexplicable\": [\"ih-n ah-k s-p-l-ih1 s-ah b-ah-l\", \"jj\"],\n  \"inexplicably\": [\"ih-n ih-k s-p-l-ih1 k-ah b-l-iy\", \"rb\"],\n  \"inextricably\": [\"ih-n eh1-k s-t-r-ih k-ah b-l-iy\", \"rb\"],\n  \"infallibility\": [\"ih-n f-ae l-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"infallible\": [\"ih-n f-ae1 l-ah b-ah-l\", \"jj nn\"],\n  \"infamous\": [\"ih1-n f-ah m-ah-s\", \"jj\"],\n  \"infamy\": [\"ih1-n f-ah m-iy\", \"nn\"],\n  \"infancy\": [\"ih1-n f-ah-n s-iy\", \"nn\"],\n  \"infant\": [\"ih1-n f-ah-n-t\", \"nn jj\"],\n  \"infantile\": [\"ih1-n f-ah-n t-ih-l\", \"jj\"],\n  \"infantry\": [\"ih1-n f-ah-n t-r-iy\", \"nn\"],\n  \"infantryman\": [\"ih1-n f-ae-n t-r-iy m-ah-n\", \"nn\"],\n  \"infarction\": [\"ih-n f-aa1-r-k sh-ah-n\", \"nn\"],\n  \"infatuation\": [\"ih-n f-ae ch-uw ey1 sh-ah-n\", \"nn\"],\n  \"infect\": [\"ih-n f-eh1-k-t\", \"vb\"],\n  \"infected\": [\"ih-n f-eh1-k t-ah-d\", \"vbn vbd jj\"],\n  \"infection\": [\"ih-n f-eh1-k sh-ah-n\", \"nn\"],\n  \"infectious\": [\"ih-n f-eh1-k sh-ah-s\", \"jj\"],\n  \"infer\": [\"ih-n f-er1\", \"vb\"],\n  \"inference\": [\"ih1-n f-er ah-n-s\", \"nn\"],\n  \"inferior\": [\"ih-n f-ih1 r-iy er\", \"jj\"],\n  \"inferiority\": [\"ih-n f-ih r-iy ao1 r-ih t-iy\", \"nn\"],\n  \"infernal\": [\"ih-n f-er1 n-ah-l\", \"jj\"],\n  \"inferno\": [\"ih-n f-er1 n-ow\", \"nn\"],\n  \"infertile\": [\"ih-n f-er1 t-ah-l\", \"jj\"],\n  \"infertility\": [\"ih-n f-er t-ih1 l-ih t-iy\", \"nn\"],\n  \"infest\": [\"ih-n f-eh1-s-t\", \"vb\"],\n  \"infestation\": [\"ih-n f-eh1 s-t-ey1 sh-ah-n\", \"nn\"],\n  \"infested\": [\"ih-n f-eh1 s-t-ah-d\", \"vbn jj\"],\n  \"infidel\": [\"ih1-n f-ih d-eh-l\", \"jj\"],\n  \"infidelity\": [\"ih-n f-ih d-eh1 l-ih t-iy\", \"nn\"],\n  \"infield\": [\"ih1-n f-iy-l-d\", \"nn\"],\n  \"infielder\": [\"ih1-n f-iy-l d-er\", \"nn\"],\n  \"infighting\": [\"ih1-n f-ay t-ih-ng\", \"nn\"],\n  \"infiltrate\": [\"ih-n f-ih1-l t-r-ey-t\", \"vb\"],\n  \"infiltration\": [\"ih-n f-ih-l t-r-ey1 sh-ah-n\", \"nn\"],\n  \"infinite\": [\"ih1-n f-ah n-ah-t\", \"jj nn\"],\n  \"infinitely\": [\"ih1-n f-ah n-ah-t l-iy\", \"rb\"],\n  \"infinitesimal\": [\"ih-n f-ih n-ih t-eh1 s-ih m-ah-l\", \"jj\"],\n  \"infinity\": [\"ih-n f-ih1 n-ah t-iy\", \"nn\"],\n  \"infirm\": [\"ih-n f-er1-m\", \"jj\"],\n  \"infirmary\": [\"ih-n f-er1 m-er iy\", \"nn\"],\n  \"inflame\": [\"ih-n f-l-ey1-m\", \"vb\"],\n  \"inflamed\": [\"ih-n f-l-ey1-m-d\", \"jj vbd\"],\n  \"inflammation\": [\"ih-n f-l-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"inflammatory\": [\"ih-n f-l-ae1 m-ah t-ao r-iy\", \"jj\"],\n  \"inflate\": [\"ih-n f-l-ey1-t\", \"vb\"],\n  \"inflated\": [\"ih-n f-l-ey1 t-ah-d\", \"jj vbd vbn\"],\n  \"inflation\": [\"ih-n f-l-ey1 sh-ah-n\", \"nn\"],\n  \"inflationary\": [\"ih-n f-l-ey1 sh-ah-n eh r-iy\", \"jj\"],\n  \"inflect\": [\"ih-n f-l-eh1-k-t\", \"vb\"],\n  \"inflected\": [\"ih-n f-l-eh1-k t-ah-d\", \"vbn jj\"],\n  \"inflection\": [\"ih-n f-l-eh1-k sh-ah-n\", \"nn\"],\n  \"inflexible\": [\"ih-n f-l-eh1-k s-ah b-ah-l\", \"jj\"],\n  \"inflict\": [\"ih-n f-l-ih1-k-t\", \"vb\"],\n  \"infliction\": [\"ih-n f-l-ih1-k sh-ah-n\", \"nn\"],\n  \"inflight\": [\"ih1-n f-l-ay-t\", \"jj\"],\n  \"inflow\": [\"ih1-n f-l-ow\", \"nn\"],\n  \"influence\": [\"ih1-n f-l-uw ah-n-s\", \"nn vb vbp\"],\n  \"influential\": [\"ih-n f-l-uw eh1-n ch-ah-l\", \"jj\"],\n  \"influenza\": [\"ih-n f-l-uw eh1-n z-ah\", \"nn\"],\n  \"influx\": [\"ih1-n f-l-ah-k-s\", \"nn\"],\n  \"inform\": [\"ih-n f-ao1-r-m\", \"vb vbp\"],\n  \"informal\": [\"ih-n f-ao1-r m-ah-l\", \"jj\"],\n  \"informality\": [\"ih-n f-er m-ae1 l-ih t-iy\", \"nn\"],\n  \"informally\": [\"ih-n f-ao1-r m-ah l-iy\", \"rb\"],\n  \"informant\": [\"ih-n f-ao1-r m-ah-n-t\", \"nn\"],\n  \"information\": [\"ih-n f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"informational\": [\"ih-n f-er m-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"informative\": [\"ih-n f-ao1-r m-ah t-ih-v\", \"jj\"],\n  \"informed\": [\"ih-n f-ao1-r-m-d\", \"vbn vbd jj\"],\n  \"informer\": [\"ih-n f-ao1-r m-er\", \"jj\"],\n  \"infraction\": [\"ih-n f-r-ae1-k sh-ah-n\", \"nn\"],\n  \"infrared\": [\"ih-n f-r-er eh1-d\", \"jj nn\"],\n  \"infrastructural\": [\"ih-n f-r-ah s-t-r-ah1-k ch-er ah-l\", \"jj\"],\n  \"infrastructure\": [\"ih-n f-r-ah s-t-r-ah1-k ch-er\", \"nn\"],\n  \"infrequent\": [\"ih-n f-r-iy1 k-w-ah-n-t\", \"jj\"],\n  \"infrequently\": [\"ih-n f-r-iy1 k-w-ah-n-t l-iy\", \"rb\"],\n  \"infringe\": [\"ih-n f-r-ih1-n-jh\", \"vb vbp\"],\n  \"infringement\": [\"ih-n f-r-ih1-n-jh m-ah-n-t\", \"nn\"],\n  \"infuriate\": [\"ih-n f-y-uh1 r-iy ey-t\", \"vb\"],\n  \"infuriating\": [\"ih-n f-y-uh1 r-iy ey t-ih-ng\", \"jj vbg\"],\n  \"infuse\": [\"ih-n f-y-uw1-z\", \"vb\"],\n  \"infusion\": [\"ih-n f-y-uw1 zh-ah-n\", \"nn\"],\n  \"ingenious\": [\"ih-n jh-iy1 n-y-ah-s\", \"jj\"],\n  \"ingeniously\": [\"ih-n jh-iy1 n-y-ah-s l-iy\", \"rb\"],\n  \"ingenuity\": [\"ih-n jh-ah n-uw1 ah t-iy\", \"nn\"],\n  \"ingest\": [\"ih-n jh-eh1-s-t\", \"vbp vb\"],\n  \"ingestion\": [\"ih-n jh-eh1-s ch-ah-n\", \"nn\"],\n  \"inglorious\": [\"ih-n g-l-ao1 r-iy ah-s\", \"jj\"],\n  \"ingot\": [\"ih1-ng g-ah-t\", \"nn\"],\n  \"ingrained\": [\"ih-n g-r-ey1-n-d\", \"jj\"],\n  \"ingratiate\": [\"ih-ng g-r-ey1 sh-iy ey-t\", \"vb\"],\n  \"ingratiating\": [\"ih-ng g-r-ey1 sh-iy ey t-ih-ng\", \"jj\"],\n  \"ingredient\": [\"ih-n g-r-iy1 d-iy ah-n-t\", \"nn\"],\n  \"inhabit\": [\"ih-n hh-ae1 b-ah-t\", \"vb vbp\"],\n  \"inhabitant\": [\"ih-n hh-ae1 b-ah t-ah-n-t\", \"nn\"],\n  \"inhabitation\": [\"ih-n hh-ae b-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"inhabited\": [\"ih-n hh-ae1 b-ah t-ah-d\", \"vbn vbd jj\"],\n  \"inhalation\": [\"ih-n ah l-ey1 sh-ah-n\", \"nn\"],\n  \"inhale\": [\"ih-n-hh-ey1-l\", \"vb\"],\n  \"inherent\": [\"ih-n hh-ih1 r-ah-n-t\", \"jj\"],\n  \"inherently\": [\"ih-n hh-ih1 r-ah-n-t l-iy\", \"rb\"],\n  \"inherit\": [\"ih-n hh-eh1 r-ah-t\", \"vb vbp\"],\n  \"inheritable\": [\"ih-n hh-eh1 r-ah t-ah b-ah-l\", \"jj\"],\n  \"inheritance\": [\"ih-n hh-eh1 r-ah t-ah-n-s\", \"nn\"],\n  \"inherited\": [\"ih-n hh-eh1 r-ah t-ih-d\", \"vbn vbd jj\"],\n  \"inhibit\": [\"ih-n hh-ih1 b-ah-t\", \"vb vbp\"],\n  \"inhibiting\": [\"ih-n hh-ih1 b-ah t-ih-ng\", \"vbg jj\"],\n  \"inhibition\": [\"ih-n hh-ah b-ih1 sh-ah-n\", \"nn\"],\n  \"inhibitor\": [\"ih-n hh-ih1 b-ah t-er\", \"nn\"],\n  \"inhibitory\": [\"ih-n hh-ih1 b-ah t-ao r-iy\", \"jj\"],\n  \"inhospitable\": [\"ih-n hh-aa1 s-p-ah t-ah b-ah-l\", \"jj\"],\n  \"inhuman\": [\"ih-n hh-y-uw1 m-ah-n\", \"jj\"],\n  \"inhumane\": [\"ih-n hh-y-uw m-ey1-n\", \"jj\"],\n  \"inimical\": [\"ih n-ih1 m-ih k-ah-l\", \"jj\"],\n  \"inimitable\": [\"ih n-ih1 m-ah t-ah b-ah-l\", \"jj\"],\n  \"initial\": [\"ih n-ih1 sh-ah-l\", \"jj nn vb\"],\n  \"initially\": [\"ih n-ih1 sh-ah l-iy\", \"rb\"],\n  \"initiate\": [\"ih n-ih1 sh-iy ey-t\", \"vb nn vbp\"],\n  \"initiation\": [\"ih n-ih sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"initiative\": [\"ih n-ih1 sh-ah t-ih-v\", \"nn\"],\n  \"initiator\": [\"ih n-ih sh-iy1 ey t-er\", \"nn\"],\n  \"inject\": [\"ih-n jh-eh1-k-t\", \"vb vbp\"],\n  \"injection\": [\"ih-n jh-eh1-k sh-ah-n\", \"nn\"],\n  \"injunction\": [\"ih-n jh-ah1-ng-k sh-ah-n\", \"nn\"],\n  \"injunctive\": [\"ih-n jh-ah1-ng-k t-ih-v\", \"jj\"],\n  \"injure\": [\"ih1-n jh-er\", \"vb vbp\"],\n  \"injured\": [\"ih1-n jh-er-d\", \"vbn vbd jj\"],\n  \"injurious\": [\"ih-n jh-uh1 r-iy ah-s\", \"jj\"],\n  \"injury\": [\"ih1-n jh-er iy\", \"nn\"],\n  \"injustice\": [\"ih-n jh-ah1 s-t-ih-s\", \"nn\"],\n  \"ink\": [\"ih1-ng-k\", \"nn\"],\n  \"inkling\": [\"ih1-ng k-l-ih-ng\", \"nn\"],\n  \"inlaid\": [\"ih1-n l-ey-d\", \"vbn\"],\n  \"inland\": [\"ih1-n l-ae-n-d\", \"rb jj\"],\n  \"inlay\": [\"ih1-n l-ey\", \"nn\"],\n  \"inlet\": [\"ih1-n l-eh-t\", \"nn\"],\n  \"inmate\": [\"ih1-n m-ey-t\", \"nn\"],\n  \"inn\": [\"ih1-n\", \"nn\"],\n  \"innards\": [\"ih1 n-er-d-z\", \"nn\"],\n  \"innate\": [\"ih n-ey1-t\", \"jj\"],\n  \"inner\": [\"ih1 n-er\", \"jj\"],\n  \"innermost\": [\"ih1 n-er m-ow-s-t\", \"jj\"],\n  \"inning\": [\"ih1 n-ih-ng\", \"nn\"],\n  \"innocence\": [\"ih1 n-ah s-ah-n-s\", \"nn\"],\n  \"innocent\": [\"ih1 n-ah s-ah-n-t\", \"jj\"],\n  \"innocently\": [\"ih1 n-ah s-ah-n-t l-iy\", \"rb\"],\n  \"innocuous\": [\"ih-n aa1 k-y-uw ah-s\", \"jj\"],\n  \"innovate\": [\"ih1 n-ah v-ey-t\", \"vb\"],\n  \"innovation\": [\"ih n-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"innovative\": [\"ih1 n-ah v-ey t-ih-v\", \"jj\"],\n  \"innovator\": [\"ih1 n-ah v-ey t-er\", \"nn\"],\n  \"innuendo\": [\"ih n-y-uw eh1-n d-ow\", \"nn\"],\n  \"innumerable\": [\"ih n-uw1 m-er ah b-ah-l\", \"jj\"],\n  \"inoculate\": [\"ih-n aa1 k-y-ah l-ey-t\", \"vb\"],\n  \"inoculation\": [\"ih-n aa k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"inoperable\": [\"ih-n aa1 p-er ah b-ah-l\", \"jj\"],\n  \"inoperative\": [\"ih-n aa1 p-er ah t-ih-v\", \"jj\"],\n  \"inopportune\": [\"ih-n aa p-er t-uw1-n\", \"jj\"],\n  \"inordinate\": [\"ih-n ao1-r d-ah n-ih-t\", \"jj\"],\n  \"inordinately\": [\"ih-n ao1-r d-ah n-ah-t l-iy\", \"rb\"],\n  \"inorganic\": [\"ih-n ao-r g-ae1 n-ih-k\", \"jj\"],\n  \"inpatient\": [\"ih1-n p-ey sh-ah-n-t\", \"nn\"],\n  \"input\": [\"ih1-n p-uh-t\", \"nn\"],\n  \"inquest\": [\"ih1-n k-w-eh-s-t\", \"nn\"],\n  \"inquire\": [\"ih-n k-w-ay1-r\", \"vb\"],\n  \"inquiring\": [\"ih-n k-w-ay1 er ih-ng\", \"jj vbg\"],\n  \"inquiry\": [\"ih-n k-w-ay1 r-iy\", \"nn\"],\n  \"inquisitive\": [\"ih-n k-w-ih1 z-ih t-ih-v\", \"jj\"],\n  \"inroad\": [\"ih1-n r-ow-d\", \"nn\"],\n  \"insane\": [\"ih-n s-ey1-n\", \"jj\"],\n  \"insanity\": [\"ih-n s-ae1 n-ah t-iy\", \"nn\"],\n  \"insatiable\": [\"ih-n s-ey1 sh-ah b-ah-l\", \"jj\"],\n  \"inscribe\": [\"ih-n-s-k-r-ay1-b\", \"vb\"],\n  \"inscribed\": [\"ih-n s-k-r-ay1-b-d\", \"vbn vbd jj\"],\n  \"inscription\": [\"ih-n s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"inscrutable\": [\"ih-n s-k-r-uw1 t-ah b-ah-l\", \"jj\"],\n  \"insect\": [\"ih1-n s-eh-k-t\", \"nn jj\"],\n  \"insecticide\": [\"ih-n s-eh1-k t-ah s-ay-d\", \"nn\"],\n  \"insecure\": [\"ih1-n s-ah k-y-er\", \"jj\"],\n  \"insecurity\": [\"ih-n s-ih k-y-uh1 r-ih t-iy\", \"nn\"],\n  \"insemination\": [\"ih-n s-eh m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"insensitive\": [\"ih-n s-eh1-n s-ah t-ih-v\", \"jj\"],\n  \"insensitivity\": [\"ih-n s-eh-n s-ah t-ih1 v-ah t-iy\", \"nn\"],\n  \"inseparable\": [\"ih-n s-eh1 p-er ah b-ah-l\", \"jj\"],\n  \"insert\": [\"ih-n s-er1-t\", \"vb vbp nn\"],\n  \"insertion\": [\"ih-n s-er1 sh-ah-n\", \"nn\"],\n  \"inset\": [\"ih1-n s-eh-t\", \"nn\"],\n  \"inshore\": [\"ih1-n sh-ao1-r\", \"jj rb\"],\n  \"inside\": [\"ih-n s-ay1-d\", \"in jj nn rb\"],\n  \"insider\": [\"ih-n s-ay1 d-er\", \"nn jj\"],\n  \"insidious\": [\"ih-n s-ih1 d-iy ah-s\", \"jj\"],\n  \"insight\": [\"ih1-n s-ay-t\", \"nn\"],\n  \"insightful\": [\"ih1-n s-ay-t f-ah-l\", \"jj\"],\n  \"insignificance\": [\"ih-n s-ih-g n-y-ih1 f-ih k-ah-n-s\", \"nn\"],\n  \"insignificant\": [\"ih-n s-ih-g n-y-ih1 f-ih k-ah-n-t\", \"jj\"],\n  \"insincere\": [\"ih-n s-ih-n s-ih1-r\", \"jj\"],\n  \"insinuate\": [\"ih-n s-ih1 n-y-uw ey-t\", \"vb\"],\n  \"insinuation\": [\"ih-n s-ih n-y-uw ey1 sh-ah-n\", \"nn\"],\n  \"insist\": [\"ih-n s-ih1-s-t\", \"vbp vb\"],\n  \"insistence\": [\"ih-n s-ih1 s-t-ah-n-s\", \"nn\"],\n  \"insistent\": [\"ih-n s-ih1 s-t-ah-n-t\", \"jj\"],\n  \"insistently\": [\"ih-n s-ih1 s-t-ah-n-t l-iy\", \"rb\"],\n  \"insofar\": [\"ih1-n s-ah f-aa-r\", \"rb in\"],\n  \"insolence\": [\"ih1-n s-ah l-ah-n-s\", \"nn\"],\n  \"insolent\": [\"ih1-n s-ah l-ah-n-t\", \"jj\"],\n  \"insoluble\": [\"ih-n s-aa1 l-y-ah b-ah-l\", \"jj nn\"],\n  \"insolvency\": [\"ih-n s-aa1-l v-ah-n s-iy\", \"nn\"],\n  \"insolvent\": [\"ih-n s-aa1-l v-ah-n-t\", \"jj nn\"],\n  \"insomnia\": [\"ih-n s-aa1-m n-iy ah\", \"nn\"],\n  \"inspect\": [\"ih-n s-p-eh1-k-t\", \"vb vbp\"],\n  \"inspection\": [\"ih-n s-p-eh1-k sh-ah-n\", \"nn\"],\n  \"inspector\": [\"ih-n s-p-eh1-k t-er\", \"nn\"],\n  \"inspiration\": [\"ih-n s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"inspirational\": [\"ih-n s-p-er ey1 sh-ah n-ah-l\", \"jj\"],\n  \"inspire\": [\"ih-n s-p-ay1-r\", \"vb vbp\"],\n  \"inspired\": [\"ih-n s-p-ay1 er-d\", \"vbn jj vbd\"],\n  \"inspiring\": [\"ih-n s-p-ay1 r-ih-ng\", \"jj vbg\"],\n  \"instability\": [\"ih-n s-t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"install\": [\"ih-n s-t-ao1-l\", \"vb vbp\"],\n  \"installation\": [\"ih-n s-t-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"installed\": [\"ih-n s-t-ao1-l-d\", \"vbn jj vbd\"],\n  \"installer\": [\"ih-n s-t-ao1 l-er\", \"nn\"],\n  \"installment\": [\"ih-n s-t-ao1-l m-ah-n-t\", \"nn jj\"],\n  \"instance\": [\"ih1-n s-t-ah-n-s\", \"nn\"],\n  \"instant\": [\"ih1-n s-t-ah-n-t\", \"nn jj\"],\n  \"instantaneous\": [\"ih-n s-t-ah-n t-ae1 n-iy ah-s\", \"jj\"],\n  \"instantaneously\": [\"ih-n s-t-ah-n t-ae1 n-iy ah-s l-iy\", \"rb\"],\n  \"instantly\": [\"ih1-n s-t-ah-n-t l-iy\", \"rb\"],\n  \"instead\": [\"ih-n s-t-eh1-d\", \"rb\"],\n  \"instigate\": [\"ih1-n s-t-ah g-ey-t\", \"vb\"],\n  \"instigation\": [\"ih-n s-t-ih g-ey1 sh-ah-n\", \"nn\"],\n  \"instigator\": [\"ih1-n s-t-ah g-ey t-er\", \"nn\"],\n  \"instill\": [\"ih-n s-t-ih1-l\", \"vb\"],\n  \"instinct\": [\"ih1-n s-t-ih-ng-k-t\", \"nn\"],\n  \"instinctive\": [\"ih-n s-t-ih1-ng-k t-ih-v\", \"jj\"],\n  \"instinctively\": [\"ih-n s-t-ih1-ng-k t-ih-v l-iy\", \"rb\"],\n  \"institute\": [\"ih1-n s-t-ah t-uw-t\", \"nn vb\"],\n  \"institutes\": [\"ih1-n s-t-ah t-uw-t-s\", \"nn\"],\n  \"institution\": [\"ih-n s-t-ih t-uw1 sh-ah-n\", \"nn\"],\n  \"institutional\": [\"ih-n s-t-ih t-uw1 sh-ah n-ah-l\", \"jj\"],\n  \"institutionalize\": [\"ih-n-s-t-ih-t-uw1-sh-ah-n-ah-l-ay-z\", \"vb\"],\n  \"institutionalized\": [\"ih-n s-t-ih t-uw1 sh-ah n-ah-l ay-z-d\", \"vbn jj\"],\n  \"institutionally\": [\"ih-n s-t-ih t-uw1 sh-ah n-ah-l iy\", \"rb\"],\n  \"instruct\": [\"ih-n s-t-r-ah1-k-t\", \"vb vbp\"],\n  \"instruction\": [\"ih-n s-t-r-ah1-k sh-ah-n\", \"nn\"],\n  \"instructional\": [\"ih-n s-t-r-ah1-k sh-ah n-ah-l\", \"jj\"],\n  \"instructive\": [\"ih-n s-t-r-ah1-k t-ih-v\", \"jj\"],\n  \"instructor\": [\"ih-n s-t-r-ah1-k t-er\", \"nn\"],\n  \"instrument\": [\"ih1-n s-t-r-ah m-ah-n-t\", \"nn\"],\n  \"instrumental\": [\"ih-n-s t-r-ah m-eh1-n t-ah-l\", \"jj nn\"],\n  \"instrumentalist\": [\"ih-n-s t-r-ah m-eh1-n t-ah l-ih-s-t\", \"nn\"],\n  \"instrumentation\": [\"ih-n-s t-r-ah m-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"insubordination\": [\"ih-n s-ah b-ao-r d-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"insubstantial\": [\"ih-n s-ah-b s-t-ae1-n ch-ah-l\", \"jj\"],\n  \"insufferable\": [\"ih-n s-ah1 f-er ah b-ah-l\", \"jj\"],\n  \"insufficient\": [\"ih-n s-ah f-ih1 sh-ah-n-t\", \"jj\"],\n  \"insufficiently\": [\"ih-n s-ah f-ih1 sh-ah-n-t l-iy\", \"rb\"],\n  \"insularity\": [\"ih-n s-ah l-eh1 r-ih t-iy\", \"nn\"],\n  \"insulate\": [\"ih1-n s-ah l-ey-t\", \"vb vbp\"],\n  \"insulated\": [\"ih1-n s-ah l-ey t-ah-d\", \"vbn . jj\"],\n  \"insulating\": [\"ih1-n s-ah l-ey t-ih-ng\", \"vbg jj nn\"],\n  \"insulation\": [\"ih-n s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"insulator\": [\"ih1-n s-ah l-ey t-er\", \"nn\"],\n  \"insulin\": [\"ih1-n s-ah l-ah-n\", \"nn\"],\n  \"insult\": [\"ih-n s-ah1-l-t\", \"nn vb\"],\n  \"insulting\": [\"ih-n s-ah1-l t-ih-ng\", \"jj vbg\"],\n  \"insupportable\": [\"ih-n s-ah p-ao1-r t-ah b-ah-l\", \"jj\"],\n  \"insurance\": [\"ih-n sh-uh1 r-ah-n-s\", \"nn\"],\n  \"insure\": [\"ih-n sh-uh1-r\", \"vb vbp\"],\n  \"insured\": [\"ih-n sh-uh1-r-d\", \"vbn vbd jj nn\"],\n  \"insurer\": [\"ih-n sh-uh1 r-er\", \"nn\"],\n  \"insurgency\": [\"ih-n s-er1 jh-ah-n s-iy\", \"nn\"],\n  \"insurgent\": [\"ih-n s-er1 jh-ah-n-t\", \"jj\"],\n  \"insurmountable\": [\"ih-n s-er m-aw1-n t-ah b-ah-l\", \"jj\"],\n  \"insurrection\": [\"ih-n s-er eh1-k sh-ah-n\", \"nn jj\"],\n  \"intact\": [\"ih-n t-ae1-k-t\", \"jj\"],\n  \"intake\": [\"ih1-n t-ey-k\", \"nn\"],\n  \"intangible\": [\"ih-n t-ae1-n jh-ah b-ah-l\", \"jj nn\"],\n  \"integer\": [\"ih1-n t-ah jh-er\", \"nn\"],\n  \"integral\": [\"ih1-n t-ah g-r-ah-l\", \"nn jj\"],\n  \"integrate\": [\"ih1-n t-ah g-r-ey-t\", \"vb vbp\"],\n  \"integrated\": [\"ih1-n t-ah g-r-ey t-ah-d\", \"vbn jj\"],\n  \"integration\": [\"ih-n t-ah g-r-ey1 sh-ah-n\", \"nn\"],\n  \"integrator\": [\"ih1-n t-ah g-r-ey t-er\", \"nn\"],\n  \"integrity\": [\"ih-n t-eh1 g-r-ah t-iy\", \"nn\"],\n  \"intellect\": [\"ih1-n t-ah l-eh-k-t\", \"nn\"],\n  \"intellectual\": [\"ih-n t-ah l-eh1-k ch-uw ah-l\", \"jj nn\"],\n  \"intellectually\": [\"ih-n t-ah l-eh1-k ch-uw ah l-iy\", \"rb\"],\n  \"intelligence\": [\"ih-n t-eh1 l-ah jh-ah-n-s\", \"nn\"],\n  \"intelligent\": [\"ih-n t-eh1 l-ah jh-ah-n-t\", \"jj\"],\n  \"intelligently\": [\"ih-n t-eh1 l-ih jh-ah-n-t l-iy\", \"rb\"],\n  \"intelligentsia\": [\"ih-n t-eh l-ah jh-eh1-n-t s-iy ah\", \"nn\"],\n  \"intelligible\": [\"ih-n t-eh1 l-ah jh-ah b-ah-l\", \"jj nn\"],\n  \"intend\": [\"ih-n t-eh1-n-d\", \"vbp vb\"],\n  \"intended\": [\"ih-n t-eh1-n d-ah-d\", \"vbn vbd jj\"],\n  \"intense\": [\"ih-n t-eh1-n-s\", \"jj\"],\n  \"intensely\": [\"ih-n t-eh1-n-s l-iy\", \"rb\"],\n  \"intensification\": [\"ih-n t-eh-n s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"intensified\": [\"ih-n t-eh1-n s-ah f-ay-d\", \"vbn vbd jj\"],\n  \"intensify\": [\"ih-n t-eh1-n s-ah f-ay\", \"vb vbp\"],\n  \"intensifying\": [\"ih-n t-eh1-n s-ah f-ay ih-ng\", \"vbg jj\"],\n  \"intensity\": [\"ih-n t-eh1-n s-ah t-iy\", \"nn\"],\n  \"intensive\": [\"ih-n t-eh1-n s-ih-v\", \"jj nn\"],\n  \"intensively\": [\"ih-n t-eh1-n s-ih-v l-iy\", \"rb\"],\n  \"intent\": [\"ih-n t-eh1-n-t\", \"nn jj\"],\n  \"intention\": [\"ih-n t-eh1-n ch-ah-n\", \"nn\"],\n  \"intentional\": [\"ih-n t-eh1-n sh-ah n-ah-l\", \"jj\"],\n  \"intentionally\": [\"ih-n t-eh1-n sh-ah-n ah l-iy\", \"rb\"],\n  \"intentioned\": [\"ih-n t-eh1-n ch-ah-n-d\", \"jj\"],\n  \"intently\": [\"ih-n t-eh1-n-t l-iy\", \"rb\"],\n  \"inter\": [\"ih-n-t-er1\", \"vb\"],\n  \"interact\": [\"ih-n t-er ae1-k-t\", \"vbp vb\"],\n  \"interaction\": [\"ih-n t-er ae1-k sh-ah-n\", \"nn\"],\n  \"interactive\": [\"ih-n t-er ae1-k t-ih-v\", \"jj\"],\n  \"interagency\": [\"ih-n t-er ey1 jh-ah-n s-iy\", \"nn jj\"],\n  \"interbank\": [\"ih-n t-er b-ae1-ng-k\", \"nn jj rb\"],\n  \"intercede\": [\"ih-n t-er s-iy1-d\", \"vb\"],\n  \"intercept\": [\"ih-n t-er s-eh1-p-t\", \"nn vbp vb\"],\n  \"interception\": [\"ih-n t-er s-eh1-p sh-ah-n\", \"nn\"],\n  \"interceptor\": [\"ih-n t-er s-eh1-p t-er\", \"nn\"],\n  \"interchange\": [\"ih-n t-er ch-ey1-n-jh\", \"nn\"],\n  \"interchangeable\": [\"ih-n t-er ch-ey1-n jh-ah b-ah-l\", \"jj\"],\n  \"intercity\": [\"ih1-n t-er s-ih t-iy\", \"jj nn\"],\n  \"intercollegiate\": [\"ih-n t-er k-ah l-iy1 jh-ah-t\", \"jj\"],\n  \"intercom\": [\"ih1-n t-er k-aa-m\", \"nn\"],\n  \"intercompany\": [\"ih-n t-er k-ah1-m p-ah n-iy\", \"nn\"],\n  \"interconnect\": [\"ih-n t-er k-ah n-eh1-k-t\", \"nn vb\"],\n  \"interconnection\": [\"ih-n t-er k-ah n-eh1-k sh-ah-n\", \"nn\"],\n  \"intercontinental\": [\"ih-n t-er k-aa-n t-ah n-eh1-n t-ah-l\", \"jj\"],\n  \"intercourse\": [\"ih1-n t-er k-ao-r-s\", \"nn\"],\n  \"interdependence\": [\"ih-n t-er d-ah p-eh1-n d-ah-n-s\", \"nn\"],\n  \"interdependent\": [\"ih-n t-er d-ih p-eh1-n d-ah-n-t\", \"jj\"],\n  \"interdict\": [\"ih1-n-t-er-d-ih-k-t\", \"vb\"],\n  \"interdiction\": [\"ih-n t-er d-ih1-k sh-ah-n\", \"nn\"],\n  \"interest\": [\"ih1-n t-r-ah-s-t\", \"nn vbp vb\"],\n  \"interested\": [\"ih1-n t-r-ah s-t-ah-d\", \"jj vbd vbn\"],\n  \"interesting\": [\"ih1-n t-r-ah s-t-ih-ng\", \"jj\"],\n  \"interestingly\": [\"ih1-n t-er eh s-t-ih-ng l-iy\", \"rb\"],\n  \"interestrate\": [\"ih1-n t-er ah s-t-r-ey-t\", \"nn\"],\n  \"interface\": [\"ih1-n t-er f-ey-s\", \"nn vb\"],\n  \"interfaith\": [\"ih-n t-er f-ey1-th\", \"jj\"],\n  \"interfere\": [\"ih-n t-er f-ih1-r\", \"vb vbp\"],\n  \"interference\": [\"ih-n t-er f-ih1 r-ah-n-s\", \"nn\"],\n  \"interferometer\": [\"ih-n t-er f-er aa1 m-ah t-er\", \"nn\"],\n  \"interferon\": [\"ih-n t-er f-eh1 r-aa-n\", \"nn\"],\n  \"intergenerational\": [\"ih-n t-er jh-eh1 n-er ey1 sh-ah n-ah-l\", \"jj\"],\n  \"intergovernmental\": [\"ih-n t-er g-ah v-er-n m-eh1-n t-ah-l\", \"jj\"],\n  \"intergroup\": [\"ih-n t-er g-r-uw1-p\", \"jj nn\"],\n  \"interim\": [\"ih1-n t-er ah-m\", \"jj nn\"],\n  \"interior\": [\"ih-n t-ih1 r-iy er\", \"jj nn\"],\n  \"interject\": [\"ih-n t-er jh-eh1-k-t\", \"vb vbp\"],\n  \"interlace\": [\"ih-n-t-er-l-ey1-s\", \"vb\"],\n  \"interlaced\": [\"ih-n t-er l-ey1-s-t\", \"vbn jj\"],\n  \"interlock\": [\"ih-n-t-er-l-aa1-k\", \"vb\"],\n  \"interlocking\": [\"ih1-n t-er l-aa k-ih-ng\", \"jj\"],\n  \"interloper\": [\"ih1-n t-er l-ow p-er\", \"nn\"],\n  \"interlude\": [\"ih1-n t-er l-uw-d\", \"nn\"],\n  \"intermediary\": [\"ih-n t-er m-iy1 d-iy eh r-iy\", \"nn jj\"],\n  \"intermediate\": [\"ih-n t-er m-iy1 d-iy ih-t\", \"jj\"],\n  \"interminable\": [\"ih-n t-er1 m-ah n-ah b-ah-l\", \"jj\"],\n  \"intermingle\": [\"ih-n t-er m-ih1-ng g-ah-l\", \"vb vbp\"],\n  \"intermission\": [\"ih-n t-er m-ih1 sh-ah-n\", \"nn\"],\n  \"intermittent\": [\"ih-n t-er m-ih1 t-ah-n-t\", \"jj\"],\n  \"intermittently\": [\"ih-n t-er m-ih1 t-ah-n-t l-iy\", \"rb\"],\n  \"intern\": [\"ih1-n t-er-n\", \"nn vb\"],\n  \"internal\": [\"ih-n t-er1 n-ah-l\", \"jj\"],\n  \"internally\": [\"ih-n t-er1 n-ah l-iy\", \"rb\"],\n  \"international\": [\"ih-n t-er n-ae1 sh-ah n-ah-l\", \"jj nn\"],\n  \"internationalization\": [\"ih-n t-er n-ae sh-ah-n ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"internationalize\": [\"ih-n t-er n-ae1 sh-ah-n ah l-ay-z\", \"vb\"],\n  \"internationally\": [\"ih-n t-er n-ae1 sh-ah-n ah l-iy\", \"rb\"],\n  \"internist\": [\"ih-n t-er1 n-ih-s-t\", \"nn\"],\n  \"internment\": [\"ih-n t-er1-n m-ah-n-t\", \"nn\"],\n  \"interoffice\": [\"ih-n t-er ao1 f-ah-s\", \"jj\"],\n  \"interpersonal\": [\"ih-n t-er p-er1 s-ah n-ah-l\", \"jj\"],\n  \"interplanetary\": [\"ih-n t-er p-l-ae1 n-ah t-eh r-iy\", \"jj\"],\n  \"interplay\": [\"ih1-n t-er p-l-ey\", \"nn\"],\n  \"interpolate\": [\"ih-t-er1-p-ah-l-ey-t\", \"vb\"],\n  \"interpret\": [\"ih-n t-er1 p-r-ah-t\", \"vb vbp\"],\n  \"interpretation\": [\"ih-n t-er p-r-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"interpreter\": [\"ih-n t-er1 p-r-ah t-er\", \"nn\"],\n  \"interpretive\": [\"ih-n t-er1 p-r-ah t-ih-v\", \"jj\"],\n  \"interprovincial\": [\"ih-n t-er p-r-ow v-ih1-n sh-ah-l\", \"jj\"],\n  \"interrelate\": [\"ih-n-t-er-r-ih-l-ey1-t\", \"vb\"],\n  \"interrelated\": [\"ih-n t-er r-ih l-ey1 t-ih-d\", \"vbn jj\"],\n  \"interrogate\": [\"ih-n t-eh1 r-ah g-ey-t\", \"vb\"],\n  \"interrogation\": [\"ih-n t-eh r-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"interrogator\": [\"ih-n t-eh1 r-ah g-ey t-er\", \"nn\"],\n  \"interrupt\": [\"ih-n t-er ah1-p-t\", \"vb vbp\"],\n  \"interrupted\": [\"ih-n t-er ah1-p t-ih-d\", \"vbn jj vbd\"],\n  \"interruption\": [\"ih-n t-er ah1-p sh-ah-n\", \"nn\"],\n  \"intersect\": [\"ih-n t-er s-eh1-k-t\", \"vb vbp\"],\n  \"intersection\": [\"ih-n t-er s-eh1-k sh-ah-n\", \"nn\"],\n  \"intersperse\": [\"ih-n-t-er-s-p-er1-s\", \"vb\"],\n  \"interstate\": [\"ih-n t-er s-t-ey1-t\", \"jj nn\"],\n  \"interstellar\": [\"ih-n t-er s-t-eh1 l-er\", \"jj\"],\n  \"intertwine\": [\"ih-n-t-er-t-w-ay1-n\", \"vb\"],\n  \"intertwined\": [\"ih-n t-er t-w-ay1-n-d\", \"vbn jj\"],\n  \"intertwining\": [\"ih1-n t-er t-w-ay n-ih-ng\", \"vbg jj\"],\n  \"interval\": [\"ih1-n t-er v-ah-l\", \"nn\"],\n  \"intervene\": [\"ih-n t-er v-iy1-n\", \"vb\"],\n  \"intervenor\": [\"ih-n t-er v-iy1 n-er\", \"nn\"],\n  \"intervention\": [\"ih-n t-er v-eh1-n ch-ah-n\", \"nn\"],\n  \"interventionist\": [\"ih-n t-er v-eh1-n sh-ah n-ih-s-t\", \"jj\"],\n  \"interview\": [\"ih1-n t-er v-y-uw\", \"nn vb\"],\n  \"interviewee\": [\"ih-n t-er v-y-uw iy1\", \"nn\"],\n  \"interviewer\": [\"ih1-n t-er v-y-uw er\", \"nn\"],\n  \"interweave\": [\"ih-n-t-er-w-iy1-v\", \"vb\"],\n  \"interwoven\": [\"ih-n t-er w-ow1 v-ah-n\", \"vbn vbd\"],\n  \"intestinal\": [\"ih-n t-eh1 s-t-ah n-ah-l\", \"jj\"],\n  \"intestine\": [\"ih-n t-eh1 s-t-ah-n\", \"nn\"],\n  \"intifada\": [\"ih-n t-ih f-aa1 d-ah\", \"nn\"],\n  \"intimacy\": [\"ih1-n t-ah m-ah s-iy\", \"nn\"],\n  \"intimate\": [\"ih1-n t-ah m-ah-t\", \"jj nn vb\"],\n  \"intimately\": [\"ih1-n t-ah m-ah-t l-iy\", \"rb\"],\n  \"intimation\": [\"ih-n t-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"intimidate\": [\"ih-n t-ih1 m-ih d-ey-t\", \"vb\"],\n  \"intimidating\": [\"ih-n t-ih1 m-ih d-ey t-ih-ng\", \"vbg jj\"],\n  \"intimidation\": [\"ih-n t-ih m-ih d-ey1 sh-ah-n\", \"nn\"],\n  \"into\": [\"ih-n t-uw1\", \"in rp\"],\n  \"intolerable\": [\"ih-n t-aa1 l-er ah b-ah-l\", \"jj\"],\n  \"intolerably\": [\"ih-n t-aa1 l-er ah b-l-iy\", \"rb\"],\n  \"intolerance\": [\"ih-n t-aa1 l-er ah-n-s\", \"nn\"],\n  \"intolerant\": [\"ih-n t-aa1 l-er ah-n-t\", \"jj\"],\n  \"intone\": [\"ih-n-t-ow1-n\", \"vb\"],\n  \"intoxicated\": [\"ih-n t-aa1-k s-ah k-ey t-ah-d\", \"jj\"],\n  \"intoxicating\": [\"ih-n t-aa1-k s-ih k-ey t-ih-ng\", \"jj\"],\n  \"intoxication\": [\"ih-n t-aa-k s-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"intracompany\": [\"ih-n t-r-ah k-aa1-m p-ah n-iy\", \"jj\"],\n  \"intractable\": [\"ih-n t-r-ae1-k t-ah b-ah-l\", \"jj\"],\n  \"intramural\": [\"ih-n t-r-ah m-y-uh1 r-ah-l\", \"jj\"],\n  \"intransigence\": [\"ih-n t-r-ae1-n s-ah jh-ah-n-s\", \"nn\"],\n  \"intransigent\": [\"ih-n t-r-ae1-n s-ah jh-ah-n-t\", \"jj\"],\n  \"intraocular\": [\"ih-n t-r-ah ow1 k-y-uw l-er\", \"jj\"],\n  \"intraparty\": [\"ih1-n t-r-ah p-aa-r t-iy\", \"jj\"],\n  \"intrastate\": [\"ih-n t-r-ah s-t-ey1-t\", \"jj\"],\n  \"intrauterine\": [\"ih-n t-r-ah y-uw1 t-er ih-n\", \"jj\"],\n  \"intravenous\": [\"ih-n t-r-ah v-iy1 n-ah-s\", \"jj\"],\n  \"intravenously\": [\"ih-n t-r-ae1 v-ah n-ah-s l-iy\", \"rb\"],\n  \"intrepid\": [\"ih-n t-r-eh1 p-ah-d\", \"jj\"],\n  \"intricacy\": [\"ih1-n t-r-ah k-ah s-iy\", \"nn\"],\n  \"intricate\": [\"ih1-n t-r-ah k-ah-t\", \"jj\"],\n  \"intricately\": [\"ih1-n t-r-ah k-ah-t l-iy\", \"rb\"],\n  \"intrigue\": [\"ih-n t-r-iy1-g\", \"nn vb\"],\n  \"intrigued\": [\"ih1-n t-r-iy-g-d\", \"vbn jj\"],\n  \"intriguing\": [\"ih-n t-r-iy1 g-ih-ng\", \"jj vbg\"],\n  \"intriguingly\": [\"ih-n t-r-iy1 g-ih-ng l-iy\", \"rb\"],\n  \"intrinsic\": [\"ih-n t-r-ih1-n s-ih-k\", \"jj\"],\n  \"intrinsically\": [\"ih-n t-r-ih1-n s-ih k-ah l-iy\", \"rb\"],\n  \"introduce\": [\"ih-n t-r-ah d-uw1-s\", \"vb vbp\"],\n  \"introduction\": [\"ih-n t-r-ah d-ah1-k sh-ah-n\", \"nn\"],\n  \"introductory\": [\"ih-n t-r-ah d-ah1-k t-er iy\", \"jj\"],\n  \"introspection\": [\"ih-n t-r-ah s-p-eh1-k sh-ah-n\", \"nn\"],\n  \"introspective\": [\"ih-n t-r-ah s-p-eh1-k t-ih-v\", \"jj\"],\n  \"introvert\": [\"ih1-n-t-r-ow-v-er-t\", \"vb\"],\n  \"introverted\": [\"ih1-n t-r-ow v-er t-ih-d\", \"vbn jj\"],\n  \"intrude\": [\"ih-n t-r-uw1-d\", \"vb vbp\"],\n  \"intruder\": [\"ih-n t-r-uw1 d-er\", \"nn\"],\n  \"intrusion\": [\"ih-n t-r-uw1 zh-ah-n\", \"nn\"],\n  \"intrusive\": [\"ih-n t-r-uw1 s-ih-v\", \"jj\"],\n  \"intuition\": [\"ih-n t-uw ih1 sh-ah-n\", \"nn\"],\n  \"intuitive\": [\"ih-n t-uw1 ah t-ih-v\", \"jj\"],\n  \"intuitively\": [\"ih-n t-uw1 ih t-ih-v l-iy\", \"rb\"],\n  \"inundate\": [\"ih1-n-ah-n-d-ey-t\", \"vb\"],\n  \"inundated\": [\"ih1 n-ah-n d-ey t-ih-d\", \"vbn jj\"],\n  \"inundation\": [\"ih n-ah-n d-ey1 sh-ah-n\", \"nn\"],\n  \"inure\": [\"ih-n-y-uh1-r\", \"vb\"],\n  \"invade\": [\"ih-n v-ey1-d\", \"vb vbp\"],\n  \"invader\": [\"ih-n v-ey1 d-er\", \"nn\"],\n  \"invalid\": [\"ih1-n v-ah l-ah-d\", \"jj nn\"],\n  \"invalidate\": [\"ih-n v-ae1 l-ih d-ey-t\", \"vb\"],\n  \"invaluable\": [\"ih-n v-ae1-l y-ah b-ah-l\", \"jj\"],\n  \"invariably\": [\"ih-n v-eh1 r-iy ah b-l-iy\", \"rb\"],\n  \"invariant\": [\"ih-n v-eh1 r-iy ah-n-t\", \"jj nn\"],\n  \"invasion\": [\"ih-n v-ey1 zh-ah-n\", \"nn\"],\n  \"invasive\": [\"ih-n v-ey1 s-ih-v\", \"jj\"],\n  \"invective\": [\"ih-n v-eh1-k t-ih-v\", \"nn\"],\n  \"invent\": [\"ih-n v-eh1-n-t\", \"vb vbp\"],\n  \"invention\": [\"ih-n v-eh1-n sh-ah-n\", \"nn\"],\n  \"inventive\": [\"ih-n v-eh1-n t-ih-v\", \"jj\"],\n  \"inventiveness\": [\"ih-n v-eh1-n t-ih-v n-ah-s\", \"nn\"],\n  \"inventor\": [\"ih-n v-eh1-n t-er\", \"nn\"],\n  \"inventory\": [\"ih-n v-ah-n t-ao1 r-iy\", \"nn\"],\n  \"inverse\": [\"ih-n v-er1-s\", \"jj nn\"],\n  \"inversely\": [\"ih-n v-er1-s l-iy\", \"rb\"],\n  \"inversion\": [\"ih-n v-er1 zh-ah-n\", \"nn\"],\n  \"invert\": [\"ih-n-v-er1-t\", \"vb\"],\n  \"invertebrate\": [\"ih-n v-er1 t-ah b-r-ah-t\", \"nn\"],\n  \"inverted\": [\"ih-n v-er1 t-ih-d\", \"jj vbn\"],\n  \"invest\": [\"ih-n v-eh1-s-t\", \"vb vbp\"],\n  \"investable\": [\"ih-n v-eh1 s-t-ah b-ah-l\", \"jj\"],\n  \"invested\": [\"ih-n v-eh1 s-t-ah-d\", \"vbn jj vbd\"],\n  \"investigate\": [\"ih-n v-eh1 s-t-ah g-ey-t\", \"vb vbp\"],\n  \"investigation\": [\"ih-n v-eh s-t-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"investigational\": [\"ih-n v-eh s-t-ih g-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"investigative\": [\"ih-n v-eh1 s-t-ah g-ey t-ih-v\", \"jj\"],\n  \"investigator\": [\"ih-n v-eh1 s-t-ah g-ey t-er\", \"nn\"],\n  \"investing\": [\"ih-n v-eh1 s-t-ih-ng\", \"vbg jj nn\"],\n  \"investment\": [\"ih-n v-eh1-s-t m-ah-n-t\", \"nn jj\"],\n  \"investor\": [\"ih-n v-eh1 s-t-er\", \"nn\"],\n  \"inveterate\": [\"ih-n v-eh1 t-er ah-t\", \"jj\"],\n  \"invidious\": [\"ih-n v-ih1 d-iy ah-s\", \"jj\"],\n  \"invigorate\": [\"ih-n v-ih1 g-er ih-t\", \"vb\"],\n  \"invincible\": [\"ih-n v-ih1-n s-ah b-ah-l\", \"jj\"],\n  \"inviolable\": [\"ih-n v-ay1 ah l-ah b-ah-l\", \"jj\"],\n  \"inviolate\": [\"ih-n v-ay1 ah l-ih-t\", \"jj\"],\n  \"invisible\": [\"ih-n v-ih1 z-ah b-ah-l\", \"jj\"],\n  \"invitation\": [\"ih-n v-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"invitational\": [\"ih-n v-ah t-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"invite\": [\"ih-n v-ay1-t\", \"vb vbp nn\"],\n  \"inviting\": [\"ih-n v-ay1 t-ih-ng\", \"vbg jj\"],\n  \"invocation\": [\"ih-n v-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"invoice\": [\"ih1-n v-oy s-ih\", \"nn\"],\n  \"invoicing\": [\"ih1-n v-oy s-ih-ng\", \"nn\"],\n  \"invoke\": [\"ih-n v-ow1-k\", \"vb\"],\n  \"involuntarily\": [\"ih-n v-ow l-ah1-n t-er ih l-iy\", \"rb\"],\n  \"involuntary\": [\"ih-n v-aa1 l-ah-n t-eh r-iy\", \"jj\"],\n  \"involve\": [\"ih-n v-aa1-l-v\", \"vb vbp\"],\n  \"involved\": [\"ih-n v-aa1-l-v-d\", \"vbn vbd jj\"],\n  \"involvement\": [\"ih-n v-aa1-l-v m-ah-n-t\", \"nn\"],\n  \"invulnerability\": [\"ih-n v-ah-l n-er ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"invulnerable\": [\"ih-n v-ah1-l n-er ah b-ah-l\", \"jj\"],\n  \"inward\": [\"ih1-n w-er-d\", \"rb jj\"],\n  \"inwardly\": [\"ih1-n w-er-d l-iy\", \"rb\"],\n  \"iodide\": [\"ay1 ah d-ay-d\", \"nn\"],\n  \"iodine\": [\"ay1 ah d-ay-n\", \"nn\"],\n  \"ion\": [\"ay1 ah-n\", \"nn\"],\n  \"ionic\": [\"ay aa1 n-ih-k\", \"jj\"],\n  \"ionize\": [\"ay1-ah-n-ay-z\", \"vb\"],\n  \"iota\": [\"ay ow1 t-ah\", \"nn\"],\n  \"ip\": [\"ih1-p\", \"nn\"],\n  \"irate\": [\"ay r-ey1-t\", \"jj\"],\n  \"ire\": [\"ay1-r\", \"nn\"],\n  \"iridescent\": [\"ih r-ah d-eh1 s-ah-n-t\", \"jj\"],\n  \"iridium\": [\"ih r-ih1 d-iy ah-m\", \"nn\"],\n  \"irk\": [\"er1-k\", \"vb\"],\n  \"irksome\": [\"er1-k s-ah-m\", \"jj\"],\n  \"iron\": [\"ay1 er-n\", \"nn vb\"],\n  \"ironclad\": [\"ay1 er-n k-l-ae-d\", \"jj\"],\n  \"ironic\": [\"ay r-aa1 n-ih-k\", \"jj\"],\n  \"ironical\": [\"ay r-aa1 n-ih k-ah-l\", \"jj\"],\n  \"ironically\": [\"ay r-aa1 n-ih-k l-iy\", \"rb\"],\n  \"irony\": [\"ay1 r-ah n-iy\", \"nn\"],\n  \"irradiate\": [\"ih-r-ey1-d-iy-ey-t\", \"vb\"],\n  \"irradiated\": [\"ih r-ey1 d-iy ey t-ih-d\", \"vbn jj\"],\n  \"irradiation\": [\"ih r-ey d-iy ey1 sh-ah-n\", \"nn\"],\n  \"irrational\": [\"ih r-ae1 sh-ah n-ah-l\", \"jj\"],\n  \"irrationality\": [\"ih r-ae sh-ah n-ae1 l-ah t-iy\", \"nn\"],\n  \"irrationally\": [\"ih r-ae1 sh-ah-n ah l-iy\", \"rb\"],\n  \"irreconcilable\": [\"ih r-eh1 k-ah-n s-ay l-ah b-ah-l\", \"jj\"],\n  \"irrefutable\": [\"ih r-ah f-y-uw1 t-ah b-ah-l\", \"jj\"],\n  \"irregular\": [\"ih r-eh1 g-y-ah l-er\", \"jj nn\"],\n  \"irregularity\": [\"ih r-eh g-y-ah l-eh1 r-ah t-iy\", \"nn\"],\n  \"irregularly\": [\"ih r-eh1 g-y-ah l-er l-iy\", \"rb\"],\n  \"irrelevant\": [\"ih r-eh1 l-ah v-ah-n-t\", \"jj\"],\n  \"irremediable\": [\"ih r-ih m-iy1 d-iy ah b-ah-l\", \"jj\"],\n  \"irreparable\": [\"ih r-eh1 p-er ah b-ah-l\", \"jj\"],\n  \"irreparably\": [\"ih r-eh1 p-er ah b-l-iy\", \"rb\"],\n  \"irreplaceable\": [\"ih r-ah p-l-ey1 s-ah b-ah-l\", \"jj\"],\n  \"irrepressible\": [\"ih r-ah p-r-eh1 s-ah b-ah-l\", \"jj\"],\n  \"irresistible\": [\"ih r-ih z-ih1 s-t-ah b-ah-l\", \"jj\"],\n  \"irresistibly\": [\"ih r-ih z-ih1 s-t-ah b-l-iy\", \"rb\"],\n  \"irrespective\": [\"ih r-ah s-p-eh1-k t-ih-v\", \"rb\"],\n  \"irresponsibility\": [\"ih r-ah s-p-aa-n s-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"irresponsible\": [\"ih r-ah s-p-aa1-n s-ah b-ah-l\", \"jj nn\"],\n  \"irresponsibly\": [\"ih r-ah s-p-aa1-n s-ah b-l-iy\", \"rb\"],\n  \"irretrievably\": [\"ih r-ah t-r-iy1 v-ah b-l-iy\", \"rb\"],\n  \"irreverence\": [\"ih r-eh1 v-er ah-n-s\", \"nn\"],\n  \"irreverent\": [\"ih r-eh1 v-er ah-n-t\", \"jj\"],\n  \"irreversible\": [\"ih r-ih v-er1 s-ah b-ah-l\", \"jj\"],\n  \"irreversibly\": [\"ih r-ih v-er1 s-ah b-l-iy\", \"rb\"],\n  \"irrevocable\": [\"ih r-eh1 v-ah k-ah b-ah-l\", \"jj\"],\n  \"irrevocably\": [\"ih r-eh1 v-ah k-ah b-l-iy\", \"rb\"],\n  \"irrigate\": [\"ih1 r-ah g-ey-t\", \"vb\"],\n  \"irrigation\": [\"ih r-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"irritable\": [\"ih1 r-ah t-ah b-ah-l\", \"jj\"],\n  \"irritant\": [\"ih1 r-ah t-ah-n-t\", \"nn\"],\n  \"irritate\": [\"ih1 r-ih t-ey-t\", \"vb\"],\n  \"irritated\": [\"ih1 r-ah t-ey t-ah-d\", \"vbn jj vbd\"],\n  \"irritating\": [\"ih1 r-ah t-ey t-ih-ng\", \"jj\"],\n  \"irritation\": [\"ih r-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"is\": [\"ih1-s\", \"vbz\"],\n  \"isn't\": [\"ih1-z-ah-n-t\", \"vbz vbp\"],\n  \"island\": [\"ay1 l-ah-n-d\", \"nn\"],\n  \"islander\": [\"ay1 l-ah-n d-er\", \"nn\"],\n  \"isle\": [\"ay1-l\", \"nn\"],\n  \"isolate\": [\"ay1 s-ah l-ey-t\", \"vb vbp\"],\n  \"isolated\": [\"ay1 s-ah l-ey t-ah-d\", \"vbn jj vbd\"],\n  \"isolating\": [\"ay1 s-ah l-ey t-ih-ng\", \"vbg jj\"],\n  \"isolation\": [\"ay s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"isolationism\": [\"ay s-ah l-ey1 sh-ah-n ih z-ah-m\", \"nn\"],\n  \"isomer\": [\"ay1 s-ah m-er\", \"nn\"],\n  \"isothermal\": [\"ay s-ah th-er1 m-ah-l\", \"jj\"],\n  \"isotonic\": [\"ay s-ah t-aa1 n-ih-k\", \"jj\"],\n  \"isotopic\": [\"ay s-ah t-aa1 p-ih-k\", \"jj\"],\n  \"issuable\": [\"ih1 sh-uw ah b-ah-l\", \"jj\"],\n  \"issuance\": [\"ih1 sh-uw ah-n-s\", \"nn\"],\n  \"issue\": [\"ih1 sh-uw\", \"nn vbp vb\"],\n  \"issued\": [\"ih1 sh-uw-d\", \"vbn vbd jj\"],\n  \"issuer\": [\"ih1 sh-uw er\", \"nn\"],\n  \"isthmus\": [\"ih1-s m-ah-s\", \"nn\"],\n  \"it\": [\"ih1-t\", \"prp\"],\n  \"italic\": [\"ay t-ae1 l-ih-k\", \"nn\"],\n  \"itch\": [\"ih1-ch\", \"vb nn\"],\n  \"itchy\": [\"ih1 ch-iy\", \"jj\"],\n  \"item\": [\"ay1 t-ah-m\", \"nn\"],\n  \"itemize\": [\"ay1 t-ah m-ay-z\", \"vb\"],\n  \"itinerant\": [\"ay t-ih1 n-er ah-n-t\", \"jj\"],\n  \"itinerary\": [\"ay t-ih1 n-er eh r-iy\", \"nn\"],\n  \"its\": [\"ih1-t-s\", \"prp$\"],\n  \"itself\": [\"ih-t s-eh1-l-f\", \"prp\"],\n  \"ivory\": [\"ay1 v-er iy\", \"nn jj\"],\n  \"ivy\": [\"ay1 v-iy\", \"nn\"],\n  \"jab\": [\"jh-ae1-b\", \"nn\"],\n  \"jabbed\": [\"jh-ae1-b-d\", \"vbd\"],\n  \"jack\": [\"jh-ae1-k\", \"vb nn\"],\n  \"jackass\": [\"jh-ae1 k-ae-s\", \"nn\"],\n  \"jacket\": [\"jh-ae1 k-ah-t\", \"nn vb\"],\n  \"jackhammer\": [\"jh-ae1-k hh-ae m-er\", \"nn\"],\n  \"jackpot\": [\"jh-ae1-k p-aa-t\", \"nn\"],\n  \"jade\": [\"jh-ey1-d\", \"nn\"],\n  \"jaded\": [\"jh-ey1 d-ah-d\", \"jj\"],\n  \"jag\": [\"jh-ae1-g-d\", \"vb\"],\n  \"jagged\": [\"jh-ae1-g-d\", \"jj vbn\"],\n  \"jail\": [\"jh-ey1-l\", \"nn vb\"],\n  \"jailed\": [\"jh-ey1-l-d\", \"vbn vbd jj\"],\n  \"jailhouse\": [\"jh-ey1-l hh-aw-s\", \"nn\"],\n  \"jalopy\": [\"jh-ah l-aa1 p-iy\", \"nn\"],\n  \"jam\": [\"jh-ae1-m\", \"nn vb vbp\"],\n  \"jammed\": [\"jh-ae1-m-d\", \"vbn vbd jj\"],\n  \"jamming\": [\"jh-ae1 m-ih-ng\", \"nn\"],\n  \"janitor\": [\"jh-ae1 n-ah t-er\", \"nn\"],\n  \"jar\": [\"jh-aa1-r\", \"nn\"],\n  \"jargon\": [\"jh-aa1-r g-ah-n\", \"nn\"],\n  \"jarred\": [\"jh-aa1-r-d\", \"vbd vbn\"],\n  \"jarring\": [\"jh-aa1 r-ih-ng\", \"vbg jj\"],\n  \"jasmine\": [\"jh-ae1-z m-ah-n\", \"nn\"],\n  \"jaunt\": [\"jh-ao1-n-t\", \"nn\"],\n  \"jauntily\": [\"jh-ao1-n t-ah l-iy\", \"rb\"],\n  \"jaunty\": [\"jh-ao1-n t-iy\", \"jj\"],\n  \"java\": [\"jh-aa1 v-ah\", \"nn\"],\n  \"jaw\": [\"jh-ao1\", \"nn\"],\n  \"jawbone\": [\"jh-ao1 b-ow-n\", \"nn\"],\n  \"jawboning\": [\"jh-ao1 b-ow n-ih-ng\", \"nn\"],\n  \"jay\": [\"jh-ey1\", \"nn\"],\n  \"jazz\": [\"jh-ae1-z\", \"nn\"],\n  \"jazzy\": [\"jh-ae1 z-iy\", \"jj\"],\n  \"jealous\": [\"jh-eh1 l-ah-s\", \"jj\"],\n  \"jealously\": [\"jh-eh1 l-ah-s l-iy\", \"rb\"],\n  \"jealousy\": [\"jh-eh1 l-ah s-iy\", \"nn\"],\n  \"jeans\": [\"jh-iy1-n-s\", \"nn\"],\n  \"jeep\": [\"jh-iy1-p\", \"nn\"],\n  \"jeer\": [\"jh-iy1-r\", \"nn vb\"],\n  \"jelly\": [\"jh-eh1 l-iy\", \"nn\"],\n  \"jellyfish\": [\"jh-eh1 l-iy f-ih-sh\", \"nn\"],\n  \"jeopardize\": [\"jh-eh1 p-er d-ay-z\", \"vb vbp\"],\n  \"jeopardy\": [\"jh-eh1 p-er d-iy\", \"nn\"],\n  \"jerk\": [\"jh-er1-k\", \"nn vb\"],\n  \"jerky\": [\"jh-er1 k-iy\", \"jj nn\"],\n  \"jest\": [\"jh-eh1-s-t\", \"nn\"],\n  \"jester\": [\"jh-eh1 s-t-er\", \"nn\"],\n  \"jet\": [\"jh-eh1-t\", \"nn vb vbp\"],\n  \"jetliner\": [\"jh-eh1-t l-ay n-er\", \"nn\"],\n  \"jettison\": [\"jh-eh1 t-ih s-ah-n\", \"vb\"],\n  \"jetty\": [\"jh-eh1 t-iy\", \"nn\"],\n  \"jewel\": [\"jh-uw1 ah-l\", \"nn\"],\n  \"jeweler\": [\"jh-uw1 ah l-er\", \"nn\"],\n  \"jewelry\": [\"jh-uw1 ah-l r-iy\", \"nn\"],\n  \"jibe\": [\"jh-ay1-b\", \"nn\"],\n  \"jiffy\": [\"jh-ih1 f-iy\", \"nn\"],\n  \"jig\": [\"jh-ih1-g\", \"nn\"],\n  \"jiggle\": [\"jh-ih1-g-ah-l\", \"vb\"],\n  \"jigsaw\": [\"jh-ih1-g s-ao\", \"nn\"],\n  \"jihad\": [\"jh-iy1 hh-ae-d\", \"nn\"],\n  \"jillion\": [\"jh-ih1 l-y-ah-n\", \"nn\"],\n  \"jilt\": [\"jh-ih1-l-t\", \"vb\"],\n  \"jimmied\": [\"jh-ih1 m-iy-d\", \"vbd\"],\n  \"jimmy\": [\"jh-ih1-m-iy\", \"vb\"],\n  \"jingle\": [\"jh-ih1-ng g-ah-l\", \"nn\"],\n  \"jink\": [\"jh-ih1-ng-k\", \"nn\"],\n  \"jinx\": [\"jh-ih1-ng-k-s\", \"nn\"],\n  \"jitter\": [\"jh-ih1 t-er\", \"vb\"],\n  \"jitters\": [\"jh-ih1 t-er-z\", \"vbz nn\"],\n  \"jittery\": [\"jh-ih1 t-er iy\", \"jj\"],\n  \"jive\": [\"jh-ay1-v\", \"vb\"],\n  \"job\": [\"jh-aa1-b\", \"nn\"],\n  \"jobless\": [\"jh-aa1-b l-ah-s\", \"jj\"],\n  \"joblessness\": [\"jh-aa1-b l-ah-s n-ah-s\", \"nn\"],\n  \"jock\": [\"jh-aa1-k\", \"nn\"],\n  \"jockey\": [\"jh-aa1 k-iy\", \"nn vb vbp\"],\n  \"jocular\": [\"jh-aa1 k-y-ah l-er\", \"jj\"],\n  \"jog\": [\"jh-aa1-g\", \"vb\"],\n  \"jogger\": [\"jh-aa1 g-er\", \"nn\"],\n  \"jogging\": [\"jh-aa1 g-ih-ng\", \"nn\"],\n  \"john\": [\"jh-aa1-n\", \"nn\"],\n  \"join\": [\"jh-oy1-n\", \"vb vbp\"],\n  \"joiner\": [\"jh-oy1 n-er\", \"nn\"],\n  \"joint\": [\"jh-oy1-n-t\", \"jj nn\"],\n  \"jointly\": [\"jh-oy1-n-t l-iy\", \"rb\"],\n  \"joke\": [\"jh-ow1-k\", \"nn vbp vb\"],\n  \"joker\": [\"jh-ow1 k-er\", \"nn\"],\n  \"jokingly\": [\"jh-ow1 k-ih-ng l-iy\", \"rb\"],\n  \"jolly\": [\"jh-aa1 l-iy\", \"jj\"],\n  \"jolt\": [\"jh-ow1-l-t\", \"nn vb\"],\n  \"joss\": [\"jh-ao1-s\", \"nn\"],\n  \"jostle\": [\"jh-aa1 s-ah-l\", \"vbp vb\"],\n  \"jot\": [\"jh-aa1-t\", \"nn\"],\n  \"jotted\": [\"jh-aa1 t-ih-d\", \"jj\"],\n  \"journal\": [\"jh-er1 n-ah-l\", \"nn\"],\n  \"journalism\": [\"jh-er1 n-ah l-ih z-ah-m\", \"nn\"],\n  \"journalist\": [\"jh-er1 n-ah l-ah-s-t\", \"nn\"],\n  \"journalistic\": [\"jh-er n-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"journey\": [\"jh-er1 n-iy\", \"nn vb\"],\n  \"joust\": [\"jh-aw1-s-t\", \"vb\"],\n  \"jovial\": [\"jh-ow1 v-iy ah-l\", \"jj\"],\n  \"jowl\": [\"jh-aw1-l\", \"nn\"],\n  \"jowly\": [\"jh-aw1 l-iy\", \"jj\"],\n  \"joy\": [\"jh-oy1\", \"nn\"],\n  \"joyful\": [\"jh-oy1 f-ah-l\", \"jj\"],\n  \"joyfully\": [\"jh-oy1 f-ah l-iy\", \"rb\"],\n  \"joyous\": [\"jh-oy1 ah-s\", \"jj\"],\n  \"joyride\": [\"jh-oy1 r-ay-d\", \"nn\"],\n  \"jubilant\": [\"jh-uw1 b-ah l-ah-n-t\", \"jj\"],\n  \"jubilation\": [\"jh-uw b-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"judge\": [\"jh-ah1-jh\", \"nn vb vbp\"],\n  \"judgement\": [\"jh-ah1-jh m-ah-n-t\", \"nn\"],\n  \"judgeship\": [\"jh-ah1-jh sh-ih-p\", \"nn\"],\n  \"judgment\": [\"jh-ah1-jh m-ah-n-t\", \"nn\"],\n  \"judgmental\": [\"jh-ah-jh m-eh1-n t-ah-l\", \"jj\"],\n  \"judicial\": [\"jh-uw d-ih1 sh-ah-l\", \"jj\"],\n  \"judicially\": [\"jh-uw d-ih1 sh-ah l-iy\", \"rb\"],\n  \"judiciary\": [\"jh-uw d-ih1 sh-iy eh r-iy\", \"nn jj\"],\n  \"judicious\": [\"jh-uw d-ih1 sh-ah-s\", \"jj\"],\n  \"judiciously\": [\"jh-uw d-ih1 sh-ih-s l-iy\", \"rb\"],\n  \"jug\": [\"jh-ah1-g\", \"nn\"],\n  \"juggernaut\": [\"jh-ah1 g-er n-ao-t\", \"nn\"],\n  \"juggle\": [\"jh-ah1 g-ah-l\", \"vb\"],\n  \"juggler\": [\"jh-ah1 g-ah l-er\", \"nn\"],\n  \"juice\": [\"jh-uw1-s\", \"nn\"],\n  \"juiciest\": [\"jh-uw1 s-iy ah-s-t\", \"jjs\"],\n  \"juicy\": [\"jh-uw1 s-iy\", \"jj\"],\n  \"jumble\": [\"jh-ah1-m b-ah-l\", \"nn vb\"],\n  \"jumbo\": [\"jh-ah1-m b-ow\", \"jj nn\"],\n  \"jump\": [\"jh-ah1-m-p\", \"nn vbp jj vb\"],\n  \"jumper\": [\"jh-ah1-m p-er\", \"nn\"],\n  \"jumpy\": [\"jh-ah1-m p-iy\", \"jj\"],\n  \"junction\": [\"jh-ah1-ng-k sh-ah-n\", \"nn\"],\n  \"juncture\": [\"jh-ah1-ng-k ch-er\", \"nn\"],\n  \"jungle\": [\"jh-ah1-ng g-ah-l\", \"nn\"],\n  \"junior\": [\"jh-uw1 n-y-er\", \"jj nn\"],\n  \"junk\": [\"jh-ah1-ng-k\", \"nn vb\"],\n  \"junkbond\": [\"jh-ah1-ng-k b-aa-n-d\", \"nn\"],\n  \"junket\": [\"jh-ah1-ng k-ih-t\", \"nn\"],\n  \"junkholder\": [\"jh-ah1-ng-k hh-ow-l d-er\", \"nn\"],\n  \"junkie\": [\"jh-ah1-ng k-iy\", \"nn\"],\n  \"junkyard\": [\"jh-ah1-ng-k y-aa-r-d\", \"nn\"],\n  \"junta\": [\"hh-uh1-n t-ah\", \"nn\"],\n  \"jurisdiction\": [\"jh-uh r-ah-s d-ih1-k sh-ah-n\", \"nn\"],\n  \"jurist\": [\"jh-uh1 r-ah-s-t\", \"nn\"],\n  \"juror\": [\"jh-uh1 r-er\", \"nn\"],\n  \"jury\": [\"jh-uh1 r-iy\", \"nn\"],\n  \"just\": [\"jh-ah1-s-t\", \"rb jj rp\"],\n  \"justice\": [\"jh-ah1 s-t-ah-s\", \"nn\"],\n  \"justifiable\": [\"jh-ah1 s-t-ah f-ay ah b-ah-l\", \"jj\"],\n  \"justifiably\": [\"jh-ah1 s-t-ah f-ay ah b-l-iy\", \"rb\"],\n  \"justification\": [\"jh-ah s-t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"justified\": [\"jh-ah1 s-t-ah f-ay-d\", \"vbn vbd jj\"],\n  \"justify\": [\"jh-ah1 s-t-ah f-ay\", \"vb vbp\"],\n  \"justly\": [\"jh-ah1-s-t l-iy\", \"rb\"],\n  \"jute\": [\"jh-uw1-t\", \"nn\"],\n  \"juvenile\": [\"jh-uw1 v-ah n-ah-l\", \"jj nn\"],\n  \"juxtapose\": [\"jh-ah-k-s-t-ah-p-ow1-z\", \"vb\"],\n  \"juxtaposition\": [\"jh-ah-k s-t-ah p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"kale\": [\"k-ey1-l\", \"nn\"],\n  \"kaleidoscope\": [\"k-ah l-ay1 d-ah s-k-ow-p\", \"nn\"],\n  \"kamikaze\": [\"k-aa m-ah k-aa1 z-iy\", \"nn\"],\n  \"kangaroo\": [\"k-ae-ng g-er uw1\", \"nn\"],\n  \"karaoke\": [\"k-eh r-iy ow1 k-iy\", \"nn\"],\n  \"kayo\": [\"k-ey ow1\", \"vb\"],\n  \"kazoo\": [\"k-ah z-uw1\", \"nn\"],\n  \"keel\": [\"k-iy1-l\", \"nn vb\"],\n  \"keelson\": [\"k-eh1-l s-ah-n\", \"nn\"],\n  \"keen\": [\"k-iy1-n\", \"jj nn vb\"],\n  \"keener\": [\"k-iy1 n-er\", \"jjr\"],\n  \"keenest\": [\"k-iy1 n-ah-s-t\", \"jjs\"],\n  \"keenly\": [\"k-iy1-n l-iy\", \"rb\"],\n  \"keep\": [\"k-iy1-p\", \"vb nn vbp\"],\n  \"keeper\": [\"k-iy1 p-er\", \"nn\"],\n  \"keepsake\": [\"k-iy1-p s-ey-k\", \"nn\"],\n  \"keg\": [\"k-eh1-g\", \"nn\"],\n  \"kelp\": [\"k-eh1-l-p\", \"nn\"],\n  \"kennel\": [\"k-eh1 n-ah-l\", \"nn\"],\n  \"kenning\": [\"k-eh1 n-ih-ng\", \"nn\"],\n  \"keno\": [\"k-iy1 n-ow\", \"jj\"],\n  \"kept\": [\"k-eh1-p-t\", \"vbd vbn\"],\n  \"kerchief\": [\"k-er1 ch-ah-f\", \"nn\"],\n  \"kernel\": [\"k-er1 n-ah-l\", \"nn\"],\n  \"kerosene\": [\"k-eh1 r-ah s-iy-n\", \"nn\"],\n  \"ketchup\": [\"k-eh1 ch-ah-p\", \"nn vb in\"],\n  \"kettle\": [\"k-eh1 t-ah-l\", \"nn\"],\n  \"key\": [\"k-iy1\", \"nn vb\"],\n  \"keyboard\": [\"k-iy1 b-ao-r-d\", \"nn\"],\n  \"keyed\": [\"k-iy1-d\", \"vbn jj\"],\n  \"keyhole\": [\"k-iy1 hh-ow-l\", \"nn\"],\n  \"keyless\": [\"k-iy1 l-ah-s\", \"jj\"],\n  \"keynote\": [\"k-iy1 n-ow-t\", \"vbp nn vb\"],\n  \"keypad\": [\"k-iy1 p-ae-d\", \"nn\"],\n  \"keystone\": [\"k-iy1 s-t-ow-n\", \"nn\"],\n  \"khaki\": [\"k-aa1 k-iy\", \"jj\"],\n  \"kibbutz\": [\"k-ih b-uh1-t-s\", \"nn\"],\n  \"kick\": [\"k-ih1-k\", \"nn vb vbp\"],\n  \"kickback\": [\"k-ih1-k b-ae-k\", \"nn\"],\n  \"kicker\": [\"k-ih1 k-er\", \"nn\"],\n  \"kickoff\": [\"k-ih1-k ao-f\", \"nn\"],\n  \"kid\": [\"k-ih1-d\", \"nn vb\"],\n  \"kiddie\": [\"k-ih1 d-iy\", \"nn\"],\n  \"kidnap\": [\"k-ih1-d n-ae-p\", \"vb\"],\n  \"kidnapper\": [\"k-ih1-d n-ae p-er\", \"nn\"],\n  \"kidnapping\": [\"k-ih1-d n-ae p-ih-ng\", \"nn vbg\"],\n  \"kidney\": [\"k-ih1-d n-iy\", \"nn\"],\n  \"kill\": [\"k-ih1-l\", \"vb vbp nn\"],\n  \"killer\": [\"k-ih1 l-er\", \"nn\"],\n  \"killing\": [\"k-ih1 l-ih-ng\", \"vbg jj nn\"],\n  \"kiln\": [\"k-ih1-l-n\", \"nn\"],\n  \"kilobyte\": [\"k-ih1 l-ow b-ay-t\", \"nn\"],\n  \"kilogram\": [\"k-ih1 l-ah g-r-ae-m\", \"nn\"],\n  \"kilometer\": [\"k-ah l-aa1 m-ah t-er\", \"nn\"],\n  \"kilowatt\": [\"k-ih1 l-ah w-aa-t\", \"nn\"],\n  \"kilt\": [\"k-ih1-l-t\", \"nn\"],\n  \"kilter\": [\"k-ih1-l t-er\", \"nn\"],\n  \"kimchi\": [\"k-ih1-m ch-iy\", \"nn\"],\n  \"kimono\": [\"k-ah m-ow1 n-ah\", \"nn\"],\n  \"kin\": [\"k-ih1-n\", \"nn\"],\n  \"kind\": [\"k-ay1-n-d\", \"nn jj rb\"],\n  \"kinder\": [\"k-ay1-n d-er\", \"jjr\"],\n  \"kindergarten\": [\"k-ih1-n d-er g-aa-r t-ah-n\", \"nn\"],\n  \"kindest\": [\"k-ay1-n d-ah-s-t\", \"jjs\"],\n  \"kindle\": [\"k-ih1-n d-ah-l\", \"vb\"],\n  \"kindly\": [\"k-ay1-n-d l-iy\", \"rb jj\"],\n  \"kindness\": [\"k-ay1-n-d n-ah-s\", \"nn\"],\n  \"kindred\": [\"k-ih1-n d-r-ih-d\", \"jj\"],\n  \"kinesthetic\": [\"k-ih n-ah-s th-eh1 t-ih-k\", \"jj\"],\n  \"kinetic\": [\"k-ah n-eh1 t-ih-k\", \"jj\"],\n  \"king\": [\"k-ih1-ng\", \"nn\"],\n  \"kingdom\": [\"k-ih1-ng d-ah-m\", \"nn\"],\n  \"kingmaker\": [\"k-ih1-ng m-ey k-er\", \"nn\"],\n  \"kingpin\": [\"k-ih1-ng p-ih-n\", \"nn\"],\n  \"kinship\": [\"k-ih1-n sh-ih-p\", \"nn\"],\n  \"kiosk\": [\"k-iy1 ao-s-k\", \"nn\"],\n  \"kiss\": [\"k-ih1-s\", \"nn vb vbp\"],\n  \"kit\": [\"k-ih1-t\", \"nn\"],\n  \"kitchen\": [\"k-ih1 ch-ah-n\", \"nn\"],\n  \"kitchenette\": [\"k-ih ch-ah n-eh1-t\", \"nn\"],\n  \"kitchenware\": [\"k-ih1 ch-ah-n w-eh-r\", \"nn\"],\n  \"kite\": [\"k-ay1-t\", \"nn\"],\n  \"kitten\": [\"k-ih1 t-ah-n\", \"nn\"],\n  \"kitty\": [\"k-ih1 t-iy\", \"nn\"],\n  \"kiwi\": [\"k-iy1 w-iy\", \"nn\"],\n  \"klieg\": [\"k-l-iy1-g\", \"nn\"],\n  \"knack\": [\"n-ae1-k\", \"nn\"],\n  \"knead\": [\"n-iy1-d\", \"vb\"],\n  \"knee\": [\"n-iy1\", \"nn\"],\n  \"kneecap\": [\"n-iy1 k-ae-p\", \"nn\"],\n  \"kneel\": [\"n-iy1-l\", \"vb\"],\n  \"knell\": [\"n-eh1-l\", \"nn\"],\n  \"knelt\": [\"n-eh1-l-t\", \"vbd vbn\"],\n  \"knew\": [\"n-uw1\", \"vbd\"],\n  \"knife\": [\"n-ay1-f\", \"nn\"],\n  \"knifelike\": [\"n-ay1 f-l-ay-k\", \"jj\"],\n  \"knight\": [\"n-ay1-t\", \"nn\"],\n  \"knightly\": [\"n-ay1-t l-iy\", \"jj\"],\n  \"knit\": [\"n-ih1-t\", \"vbn jj nn vbd vb\"],\n  \"knitted\": [\"n-ih1 t-ah-d\", \"vbn vbd jj\"],\n  \"knitwear\": [\"n-ih1-t w-eh-r\", \"nn\"],\n  \"knob\": [\"n-aa1-b\", \"nn\"],\n  \"knock\": [\"n-aa1-k\", \"vb vbp nn\"],\n  \"knockdown\": [\"n-aa1-k d-aw-n\", \"nn\"],\n  \"knockoff\": [\"n-aa1-k ao-f\", \"nn\"],\n  \"knockout\": [\"n-aa1-k aw-t\", \"nn\"],\n  \"knoll\": [\"n-ow1-l\", \"nn\"],\n  \"knot\": [\"n-aa1-t\", \"nn vb\"],\n  \"knotted\": [\"n-aa1 t-ih-d\", \"jj vbd vbn\"],\n  \"knotty\": [\"n-aa1 t-iy\", \"jj\"],\n  \"know\": [\"n-ow1\", \"vb nn vbp\"],\n  \"knowing\": [\"n-ow1 ih-ng\", \"vbg jj nn\"],\n  \"knowingly\": [\"n-ow1 ih-ng l-iy\", \"rb\"],\n  \"knowledge\": [\"n-aa1 l-ah-jh\", \"nn\"],\n  \"knowledgeable\": [\"n-aa1 l-ah jh-ah b-ah-l\", \"jj\"],\n  \"known\": [\"n-ow1-n\", \"vbn jj\"],\n  \"knuckle\": [\"n-ah1 k-ah-l\", \"nn vb\"],\n  \"kook\": [\"k-uw1-k\", \"nn\"],\n  \"kosher\": [\"k-ow1 sh-er\", \"jj\"],\n  \"kraft\": [\"k-r-ae1-f-t\", \"nn\"],\n  \"kraut\": [\"k-r-aw1-t\", \"nn\"],\n  \"krona\": [\"k-r-ow1 n-ah\", \"nn\"],\n  \"kroner\": [\"k-r-ow1 n-er\", \"nn\"],\n  \"kronor\": [\"k-r-ow1 n-er\", \"nn\"],\n  \"kudo\": [\"k-uw1 d-ow\", \"nn\"],\n  \"lab\": [\"l-ae1-b\", \"nn\"],\n  \"label\": [\"l-ey1 b-ah-l\", \"nn vb vbp\"],\n  \"labor\": [\"l-ey1 b-er\", \"nn vbp vb\"],\n  \"laboratory\": [\"l-ae1 b-r-ah t-ao r-iy\", \"nn\"],\n  \"labored\": [\"l-ey1 b-er-d\", \"vbd vbn jj\"],\n  \"laborer\": [\"l-ey1 b-er er\", \"nn\"],\n  \"laborious\": [\"l-ah b-ao1 r-iy ah-s\", \"jj\"],\n  \"laboriously\": [\"l-ah b-ao1 r-iy ah-s l-iy\", \"rb\"],\n  \"labyrinth\": [\"l-ae1 b-er ih-n-th\", \"nn\"],\n  \"lace\": [\"l-ey1-s\", \"nn vb\"],\n  \"laced\": [\"l-ey1-s-t\", \"vbn vbd jj\"],\n  \"lacerate\": [\"l-ae1 s-er ey-t\", \"vb\"],\n  \"laceration\": [\"l-ae s-er ey1 sh-ah-n\", \"nn\"],\n  \"lacey\": [\"l-ey1 s-iy\", \"jj nn\"],\n  \"lack\": [\"l-ae1-k\", \"nn vb vbp\"],\n  \"lackadaisical\": [\"l-ae k-ah d-ey1 z-ih k-ah-l\", \"jj\"],\n  \"lackey\": [\"l-ae1 k-iy\", \"nn\"],\n  \"lacking\": [\"l-ae1 k-ih-ng\", \"vbg jj\"],\n  \"lackluster\": [\"l-ae1-k l-ah s-t-er\", \"jj nn rb\"],\n  \"lacquer\": [\"l-ae1 k-er\", \"nn vb\"],\n  \"lactate\": [\"l-ae1-k-t-ey-t\", \"vb\"],\n  \"lacy\": [\"l-ey1 s-iy\", \"jj\"],\n  \"lad\": [\"l-ae1-d\", \"nn\"],\n  \"ladder\": [\"l-ae1 d-er\", \"nn\"],\n  \"lade\": [\"l-ey1-d\", \"vb\"],\n  \"laden\": [\"l-ey1 d-ah-n\", \"jj vbn\"],\n  \"ladle\": [\"l-ey1 d-ah-l\", \"nn\"],\n  \"lady\": [\"l-ey1 d-iy\", \"nn\"],\n  \"ladylike\": [\"l-ey1 d-iy l-ay-k\", \"jj\"],\n  \"lag\": [\"l-ae1-g\", \"vb nn vbp jj\"],\n  \"laggard\": [\"l-ae1 g-er-d\", \"jj nn\"],\n  \"lagging\": [\"l-ae1 g-ih-ng\", \"vbg jj nn\"],\n  \"lagoon\": [\"l-ah g-uw1-n\", \"nn\"],\n  \"laid\": [\"l-ey1-d\", \"vbn vbd\"],\n  \"lain\": [\"l-ey1-n\", \"vbn\"],\n  \"laity\": [\"l-ey1 ah t-iy\", \"nn\"],\n  \"lak\": [\"l-ae1-k\", \"in\"],\n  \"lake\": [\"l-ey1-k\", \"nn\"],\n  \"lamb\": [\"l-ae1-m\", \"nn\"],\n  \"lambaste\": [\"l-ae-m b-ae1-s-t\", \"vb vbp\"],\n  \"lame\": [\"l-ey1-m\", \"jj\"],\n  \"lament\": [\"l-ah m-eh1-n-t\", \"nn vb\"],\n  \"laminate\": [\"l-ae1-m-ah-n-ah-t\", \"vb\"],\n  \"laminated\": [\"l-ae1 m-ah n-ey t-ah-d\", \"vbn jj\"],\n  \"lamp\": [\"l-ae1-m-p\", \"nn\"],\n  \"lampoon\": [\"l-ae-m p-uw1-n\", \"vb\"],\n  \"lamppost\": [\"l-ae1-m-p p-ow-s-t\", \"nn\"],\n  \"lance\": [\"l-ae1-n-s\", \"nn\"],\n  \"land\": [\"l-ae1-n-d\", \"nn vbp vb\"],\n  \"landau\": [\"l-ae1-n d-aw\", \"nn\"],\n  \"landes\": [\"l-ae1-n-d-z\", \"nn\"],\n  \"landfall\": [\"l-ae1-n-d f-ao-l\", \"nn\"],\n  \"landfill\": [\"l-ae1-n-d f-ih-l\", \"nn\"],\n  \"landholding\": [\"l-ae1-n-d hh-ow-l d-ih-ng\", \"nn\"],\n  \"landing\": [\"l-ae1-n d-ih-ng\", \"nn vbg\"],\n  \"landlocked\": [\"l-ae1-n-d l-aa-k-t\", \"jj\"],\n  \"landlord\": [\"l-ae1-n-d l-ao-r-d\", \"nn\"],\n  \"landmark\": [\"l-ae1-n-d m-aa-r-k\", \"nn jj\"],\n  \"landowner\": [\"l-ae1-n-d ow n-er\", \"nn\"],\n  \"landscape\": [\"l-ae1-n-d s-k-ey-p\", \"nn vb\"],\n  \"landscaped\": [\"l-ae1-n-d s-k-ey-p-t\", \"vbn jj\"],\n  \"landscaper\": [\"l-ae1-n-d s-k-ey p-er\", \"nn\"],\n  \"landslide\": [\"l-ae1-n-d s-l-ay-d\", \"nn\"],\n  \"lane\": [\"l-ey1-n\", \"nn\"],\n  \"language\": [\"l-ae1-ng g-w-ah-jh\", \"nn\"],\n  \"languid\": [\"l-ae1-ng g-w-ah-d\", \"jj\"],\n  \"languish\": [\"l-ae1-ng g-w-ih-sh\", \"vb\"],\n  \"languishing\": [\"l-ae1-ng g-w-ih sh-ih-ng\", \"vbg jj\"],\n  \"lanky\": [\"l-ae1-ng k-iy\", \"jj\"],\n  \"lantern\": [\"l-ae1-n t-er-n\", \"nn\"],\n  \"lanthanum\": [\"l-ae1-n th-ah n-ah-m\", \"nn\"],\n  \"lap\": [\"l-ae1-p\", \"nn\"],\n  \"lapel\": [\"l-ah p-eh1-l\", \"nn\"],\n  \"lapidary\": [\"l-ae1 p-ah d-eh r-iy\", \"jj nn\"],\n  \"lapped\": [\"l-ae1-p-t\", \"vbd vbn\"],\n  \"lapse\": [\"l-ae1-p-s\", \"nn vb vbp\"],\n  \"lapsed\": [\"l-ae1-p-s-t\", \"jj vbd vbn\"],\n  \"laptop\": [\"l-ae1-p t-aa-p\", \"nn jj\"],\n  \"larceny\": [\"l-aa1-r s-ah n-iy\", \"nn\"],\n  \"lard\": [\"l-aa1-r-d\", \"nn\"],\n  \"larder\": [\"l-aa1-r d-er\", \"nn\"],\n  \"large\": [\"l-aa1-r-jh\", \"jj rb\"],\n  \"largely\": [\"l-aa1-r-jh l-iy\", \"rb\"],\n  \"larger\": [\"l-aa1-r jh-er\", \"jjr rbr\"],\n  \"largess\": [\"l-aa1-r jh-ah-s\", \"nn\"],\n  \"largesse\": [\"l-aa-r g-eh1-s\", \"nn vb\"],\n  \"largest\": [\"l-aa1-r jh-ah-s-t\", \"jjs rbs\"],\n  \"lark\": [\"l-aa1-r-k\", \"nn\"],\n  \"larkspur\": [\"l-aa1-r-k s-p-er\", \"nn\"],\n  \"larval\": [\"l-aa1-r v-ah-l\", \"jj\"],\n  \"larynx\": [\"l-eh1 r-ih-ng-k-s\", \"nn\"],\n  \"laser\": [\"l-ey1 z-er\", \"nn\"],\n  \"lash\": [\"l-ae1-sh\", \"vb vbp nn\"],\n  \"lass\": [\"l-ae1-s\", \"nn\"],\n  \"lasso\": [\"l-ae1 s-ow\", \"nn vb\"],\n  \"last\": [\"l-ae1-s-t\", \"jj nn rb vb vbp\"],\n  \"lastest\": [\"l-ae1 s-t-ah-s-t\", \"jjs\"],\n  \"lasting\": [\"l-ae1 s-t-ih-ng\", \"vbg jj\"],\n  \"lastly\": [\"l-ae1-s-t l-iy\", \"rb\"],\n  \"lat\": [\"l-aa1-t\", \"nn\"],\n  \"latch\": [\"l-ae1-ch\", \"nn vb vbp\"],\n  \"late\": [\"l-ey1-t\", \"jj rb\"],\n  \"latecomer\": [\"l-ey1-t k-ah m-er\", \"nn\"],\n  \"lately\": [\"l-ey1-t l-iy\", \"rb\"],\n  \"latent\": [\"l-ey1 t-ah-n-t\", \"jj nn\"],\n  \"later\": [\"l-ey1 t-er\", \"rb rp jjr rbr\"],\n  \"lateral\": [\"l-ae1 t-er ah-l\", \"jj\"],\n  \"latest\": [\"l-ey1 t-ah-s-t\", \"jjs jj\"],\n  \"latex\": [\"l-ey1 t-eh-k-s\", \"nn\"],\n  \"lathe\": [\"l-ey1-dh\", \"nn\"],\n  \"lather\": [\"l-ae1 dh-er\", \"nn\"],\n  \"latitude\": [\"l-ae1 t-ah t-uw-d\", \"nn\"],\n  \"latter\": [\"l-ae1 t-er\", \"nn jj\"],\n  \"lattice\": [\"l-ae1 t-ah-s\", \"nn\"],\n  \"laud\": [\"l-ao1-d\", \"vb\"],\n  \"laudable\": [\"l-ao1 d-ah b-ah-l\", \"jj\"],\n  \"laudanum\": [\"l-ao1 d-ah n-ah-m\", \"nn\"],\n  \"laudatory\": [\"l-ao1 d-ah t-ao r-iy\", \"jj\"],\n  \"laugh\": [\"l-ae1-f\", \"nn vbp vb\"],\n  \"laughing\": [\"l-ae1 f-ih-ng\", \"vbg jj nn\"],\n  \"laughingly\": [\"l-ae1 f-ih-ng l-iy\", \"rb\"],\n  \"laughingstock\": [\"l-ae1 f-ih-ng s-t-aa-k\", \"nn\"],\n  \"laughter\": [\"l-ae1-f t-er\", \"nn\"],\n  \"launch\": [\"l-ao1-n-ch\", \"vb nn\"],\n  \"launched\": [\"l-ao1-n-ch-t\", \"vbn vbd\"],\n  \"launcher\": [\"l-ao1-n ch-er\", \"nn\"],\n  \"launder\": [\"l-ao1-n d-er\", \"vb\"],\n  \"launderer\": [\"l-ao1-n d-er er\", \"nn\"],\n  \"laundromat\": [\"l-ao1-n d-r-ah m-ae-t\", \"nn\"],\n  \"laundry\": [\"l-ao1-n d-r-iy\", \"nn\"],\n  \"laureate\": [\"l-ao1 r-iy ah-t\", \"nn\"],\n  \"laurel\": [\"l-ao1 r-ah-l\", \"nn\"],\n  \"lava\": [\"l-aa1 v-ah\", \"nn\"],\n  \"lavatory\": [\"l-ae1 v-ah t-ao r-iy\", \"nn\"],\n  \"lavender\": [\"l-ae1 v-ah-n d-er\", \"jj nn\"],\n  \"lavish\": [\"l-ae1 v-ih-sh\", \"jj vb\"],\n  \"lavishly\": [\"l-ae1 v-ih-sh l-iy\", \"rb\"],\n  \"law\": [\"l-ao1\", \"nn\"],\n  \"lawbreaker\": [\"l-ao1 b-r-ey k-er\", \"nn\"],\n  \"lawful\": [\"l-ao1 f-ah-l\", \"jj\"],\n  \"lawfully\": [\"l-ao1 f-ah l-iy\", \"rb\"],\n  \"lawless\": [\"l-ao1 l-ah-s\", \"jj\"],\n  \"lawlessness\": [\"l-ao1 l-ah-s n-ah-s\", \"nn\"],\n  \"lawmaker\": [\"l-ao1 m-ey k-er\", \"nn\"],\n  \"lawmaking\": [\"l-ao1 m-ey k-ih-ng\", \"jj nn\"],\n  \"lawman\": [\"l-ao1 m-ah-n\", \"nn\"],\n  \"lawn\": [\"l-ao1-n\", \"nn\"],\n  \"lawnmower\": [\"l-ao1-n m-ow er\", \"nn\"],\n  \"lawsuit\": [\"l-ao1 s-uw-t\", \"nn\"],\n  \"lawyer\": [\"l-ao1 y-er\", \"nn\"],\n  \"lax\": [\"l-ae1-k-s\", \"jj\"],\n  \"laxative\": [\"l-ae1-k s-ah t-ih-v\", \"nn\"],\n  \"laxity\": [\"l-ae1-k s-ah t-iy\", \"nn\"],\n  \"lay\": [\"l-ey1\", \"vbd vbp jj vb\"],\n  \"layer\": [\"l-ey1 er\", \"nn vb\"],\n  \"layman\": [\"l-ey1 m-ah-n\", \"nn\"],\n  \"layoff\": [\"l-ey1 ao-f\", \"nn\"],\n  \"layout\": [\"l-ey1 aw-t\", \"nn\"],\n  \"lazily\": [\"l-ae1 z-ah l-iy\", \"rb\"],\n  \"lazy\": [\"l-ey1 z-iy\", \"jj\"],\n  \"leach\": [\"l-iy1-ch\", \"vb\"],\n  \"leaching\": [\"l-iy1 ch-ih-ng\", \"nn\"],\n  \"lead\": [\"l-eh1-d\", \"vb vbp jj nn\"],\n  \"leaded\": [\"l-eh1 d-ih-d\", \"jj\"],\n  \"leaden\": [\"l-eh1 d-ah-n\", \"jj\"],\n  \"leader\": [\"l-iy1 d-er\", \"nn\"],\n  \"leaderless\": [\"l-iy1 d-er l-ah-s\", \"jj\"],\n  \"leadership\": [\"l-iy1 d-er sh-ih-p\", \"nn\"],\n  \"leading\": [\"l-iy1 d-ih-ng\", \"vbg jj nn\"],\n  \"leadoff\": [\"l-iy1-d ao-f\", \"nn\"],\n  \"leaf\": [\"l-iy1-f\", \"nn vb\"],\n  \"leaflet\": [\"l-iy1-f l-ah-t\", \"nn\"],\n  \"leafy\": [\"l-iy1 f-iy\", \"jj\"],\n  \"league\": [\"l-iy1-g\", \"nn\"],\n  \"leaguer\": [\"l-iy1 g-er\", \"nn\"],\n  \"leak\": [\"l-iy1-k\", \"nn vb\"],\n  \"leakage\": [\"l-iy1 k-ah-jh\", \"nn\"],\n  \"leaker\": [\"l-iy1 k-er\", \"nn\"],\n  \"leaky\": [\"l-iy1 k-iy\", \"jj\"],\n  \"lean\": [\"l-iy1-n\", \"jj vbp vb\"],\n  \"leant\": [\"l-iy1-n-t\", \"vbd vbn\"],\n  \"leap\": [\"l-iy1-p\", \"nn vbp vb\"],\n  \"leapfrog\": [\"l-iy1-p f-r-ao-g\", \"vb nn\"],\n  \"leaping\": [\"l-iy1 p-ih-ng\", \"vbg jj\"],\n  \"leapt\": [\"l-eh1-p-t\", \"vbd\"],\n  \"learn\": [\"l-er1-n\", \"vb vbp\"],\n  \"learned\": [\"l-er1-n-d\", \"jj\"],\n  \"learner\": [\"l-er1 n-er\", \"nn\"],\n  \"learnt\": [\"l-er1-n-t\", \"vbd vbn\"],\n  \"lease\": [\"l-iy1-s\", \"nn vbp vb\"],\n  \"leased\": [\"l-iy1-s-t\", \"vbn vbd jj\"],\n  \"leash\": [\"l-iy1-sh\", \"nn\"],\n  \"least\": [\"l-iy1-s-t\", \"jjs rbs jj\"],\n  \"leather\": [\"l-eh1 dh-er\", \"nn jj\"],\n  \"leathery\": [\"l-eh1 dh-er iy\", \"jj\"],\n  \"leave\": [\"l-iy1-v\", \"vb nn vbp\"],\n  \"leaven\": [\"l-eh1-v-ah-n\", \"vb\"],\n  \"leavened\": [\"l-eh1 v-ah-n-d\", \"vbd vbn jj\"],\n  \"lecher\": [\"l-eh1 ch-er\", \"nn\"],\n  \"lecherous\": [\"l-eh1 ch-er ah-s\", \"jj\"],\n  \"lectern\": [\"l-eh1-k t-er-n\", \"nn\"],\n  \"lecture\": [\"l-eh1-k ch-er\", \"nn vbp vb\"],\n  \"lecturer\": [\"l-eh1-k ch-er er\", \"nn\"],\n  \"led\": [\"l-eh1-d\", \"vbd vbn\"],\n  \"ledge\": [\"l-eh1-jh\", \"nn\"],\n  \"ledger\": [\"l-eh1 jh-er\", \"nn\"],\n  \"leech\": [\"l-iy1-ch\", \"nn vb\"],\n  \"leery\": [\"l-ih1 r-iy\", \"jj\"],\n  \"leeway\": [\"l-iy1 w-ey\", \"nn\"],\n  \"left\": [\"l-eh1-f-t\", \"vbn jj nn rb vbd\"],\n  \"leftist\": [\"l-eh1-f t-ih-s-t\", \"jj\"],\n  \"leftover\": [\"l-eh1-f-t ow v-er\", \"jj\"],\n  \"leftward\": [\"l-eh1-f-t w-er-d\", \"jj\"],\n  \"leg\": [\"l-eh1-g\", \"nn\"],\n  \"legacy\": [\"l-eh1 g-ah s-iy\", \"nn\"],\n  \"legal\": [\"l-iy1 g-ah-l\", \"jj\"],\n  \"legalistic\": [\"l-eh g-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"legality\": [\"l-iy g-ae1 l-ah t-iy\", \"nn\"],\n  \"legalization\": [\"l-iy g-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"legalize\": [\"l-iy1 g-ah l-ay-z\", \"vb vbp\"],\n  \"legally\": [\"l-iy1 g-ah l-iy\", \"rb\"],\n  \"legend\": [\"l-eh1 jh-ah-n-d\", \"nn\"],\n  \"legendary\": [\"l-eh1 jh-ah-n d-eh r-iy\", \"jj\"],\n  \"legged\": [\"l-eh1 g-ah-d\", \"jj\"],\n  \"leggings\": [\"l-eh1 g-ih-ng-z\", \"nn\"],\n  \"leggy\": [\"l-eh1 g-iy\", \"jj\"],\n  \"legibility\": [\"l-eh jh-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"legible\": [\"l-eh1 jh-ah b-ah-l\", \"jj\"],\n  \"legion\": [\"l-iy1 jh-ah-n\", \"jj nn\"],\n  \"legislate\": [\"l-eh1 jh-ih s-l-ey-t\", \"vb\"],\n  \"legislation\": [\"l-eh jh-ah-s l-ey1 sh-ah-n\", \"nn\"],\n  \"legislator\": [\"l-eh1 jh-ah-s l-ey t-er\", \"nn\"],\n  \"legislature\": [\"l-eh1 jh-ah-s l-ey ch-er\", \"nn\"],\n  \"legitimacy\": [\"l-ah jh-ih1 t-ah m-ah s-iy\", \"nn\"],\n  \"legitimate\": [\"l-ah jh-ih1 t-ah m-ah-t\", \"jj\"],\n  \"legitimately\": [\"l-ah jh-ih1 t-ah m-ah-t l-iy\", \"rb\"],\n  \"legitimize\": [\"l-ah jh-ih1 t-ah m-ay-z\", \"vb\"],\n  \"legume\": [\"l-eh1 g-y-uw-m\", \"nn\"],\n  \"leisure\": [\"l-eh1 zh-er\", \"nn\"],\n  \"leisurely\": [\"l-iy1 z-er l-iy\", \"jj rb\"],\n  \"leitmotif\": [\"l-ay1-t m-ow t-iy-f\", \"nn\"],\n  \"lemming\": [\"l-eh1 m-ih-ng\", \"nn\"],\n  \"lemon\": [\"l-eh1 m-ah-n\", \"nn jj\"],\n  \"lemonade\": [\"l-eh1 m-ah n-ey1-d\", \"nn\"],\n  \"lend\": [\"l-eh1-n-d\", \"vb vbp\"],\n  \"lender\": [\"l-eh1-n d-er\", \"nn\"],\n  \"lending\": [\"l-eh1-n d-ih-ng\", \"vbg jj\"],\n  \"length\": [\"l-eh1-ng-k-th\", \"nn\"],\n  \"lengthen\": [\"l-eh1-ng th-ah-n\", \"vb vbp\"],\n  \"lengthened\": [\"l-eh1-ng th-ah-n-d\", \"vbn vbd jj\"],\n  \"lengthwise\": [\"l-eh1-ng-th w-ay-z\", \"rb jj\"],\n  \"lengthy\": [\"l-eh1-ng th-iy\", \"jj\"],\n  \"leniency\": [\"l-iy1 n-y-ah-n s-iy\", \"nn\"],\n  \"lenient\": [\"l-iy1 n-iy ah-n-t\", \"jj\"],\n  \"lens\": [\"l-eh1-n-z\", \"nn\"],\n  \"lent\": [\"l-eh1-n-t\", \"vbd vbn\"],\n  \"lentil\": [\"l-eh1-n t-ah-l\", \"nn\"],\n  \"leopard\": [\"l-eh1 p-er-d\", \"nn\"],\n  \"leprosy\": [\"l-eh1 p-r-ah s-iy\", \"nn\"],\n  \"lesbian\": [\"l-eh1-z b-iy ah-n\", \"nn\"],\n  \"lesion\": [\"l-iy1 zh-ah-n\", \"nn\"],\n  \"less\": [\"l-eh1-s\", \"jjs cc rb rbr rbs\"],\n  \"lessen\": [\"l-eh1 s-ah-n\", \"vb\"],\n  \"lessened\": [\"l-eh1 s-ah-n-d\", \"vbn jj vbd\"],\n  \"lesser\": [\"l-eh1 s-er\", \"jjr rbr\"],\n  \"lesson\": [\"l-eh1 s-ah-n\", \"nn\"],\n  \"let\": [\"l-eh1-t\", \"vb vbd vbn vbp nn\"],\n  \"letdown\": [\"l-eh1-t d-aw-n\", \"nn\"],\n  \"lethal\": [\"l-iy1 th-ah-l\", \"jj\"],\n  \"lethality\": [\"l-iy th-ae1 l-ah t-iy\", \"nn\"],\n  \"lethargic\": [\"l-ah th-aa1-r jh-ih-k\", \"jj\"],\n  \"lethargy\": [\"l-eh1 th-er jh-iy\", \"nn\"],\n  \"letter\": [\"l-eh1 t-er\", \"nn vb\"],\n  \"letterhead\": [\"l-eh1 t-er hh-eh-d\", \"nn\"],\n  \"lettering\": [\"l-eh1 t-er ih-ng\", \"nn\"],\n  \"lettuce\": [\"l-eh1 t-ah-s\", \"nn\"],\n  \"letup\": [\"l-eh1-t ah-p\", \"nn\"],\n  \"leukemia\": [\"l-uw k-iy1 m-iy ah\", \"nn\"],\n  \"levamisole\": [\"l-ah v-ae1 m-ih s-ow-l\", \"nn\"],\n  \"levee\": [\"l-eh1 v-iy\", \"nn\"],\n  \"level\": [\"l-eh1 v-ah-l\", \"nn vbp jj vb\"],\n  \"lever\": [\"l-eh1 v-er\", \"nn\"],\n  \"leverage\": [\"l-eh1 v-er ih-jh\", \"nn vb\"],\n  \"leveraged\": [\"l-iy1 v-er ih-jh-d\", \"jj vbn nn\"],\n  \"leviathan\": [\"l-ah v-ay1 ah th-ah-n\", \"jj nn\"],\n  \"levied\": [\"l-eh1 v-iy-d\", \"vbn vbd\"],\n  \"levitation\": [\"l-eh v-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"levity\": [\"l-eh1 v-ih t-iy\", \"nn\"],\n  \"levy\": [\"l-eh1 v-iy\", \"nn vbp vb\"],\n  \"lewd\": [\"l-uw1-d\", \"jj\"],\n  \"lexical\": [\"l-eh1-k s-ih k-ah-l\", \"jj\"],\n  \"lexicon\": [\"l-eh1-k s-ih k-aa-n\", \"nn\"],\n  \"liability\": [\"l-ay ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"liable\": [\"l-ay1 ah b-ah-l\", \"jj\"],\n  \"liaison\": [\"l-iy ey1 z-aa-n\", \"nn jj\"],\n  \"liar\": [\"l-ay1 er\", \"nn\"],\n  \"libel\": [\"l-ay1 b-ah-l\", \"nn vb\"],\n  \"libelous\": [\"l-ay1 b-ah l-ah-s\", \"jj\"],\n  \"liberal\": [\"l-ih1 b-er ah-l\", \"jj nn\"],\n  \"liberalism\": [\"l-ih1 b-er ah l-ih z-ah-m\", \"nn\"],\n  \"liberality\": [\"l-ih b-er ae1 l-ah t-iy\", \"nn\"],\n  \"liberalization\": [\"l-ih b-r-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"liberalize\": [\"l-ih1 b-er ah l-ay-z\", \"vb vbp\"],\n  \"liberalized\": [\"l-ih1 b-er ah l-ay-z-d\", \"vbn jj vbd\"],\n  \"liberally\": [\"l-ih1 b-er ah l-iy\", \"rb\"],\n  \"liberate\": [\"l-ih1 b-er ey-t\", \"vb\"],\n  \"liberated\": [\"l-ih1 b-er ey t-ih-d\", \"vbn jj vbd\"],\n  \"liberating\": [\"l-ih1 b-er ey t-ih-ng\", \"vbg jj\"],\n  \"liberation\": [\"l-ih b-er ey1 sh-ah-n\", \"nn\"],\n  \"libertarian\": [\"l-ih b-er t-eh1 r-iy ah-n\", \"jj\"],\n  \"libertine\": [\"l-ih1 b-er t-iy-n\", \"nn\"],\n  \"liberty\": [\"l-ih1 b-er t-iy\", \"nn\"],\n  \"libido\": [\"l-ah b-iy1 d-ow\", \"nn\"],\n  \"librarian\": [\"l-ay b-r-eh1 r-iy ah-n\", \"nn\"],\n  \"library\": [\"l-ay1 b-r-eh r-iy\", \"nn\"],\n  \"libretto\": [\"l-ah b-r-eh1 t-ow\", \"nn\"],\n  \"lice\": [\"l-ay1-s\", \"nns\"],\n  \"license\": [\"l-ay1 s-ah-n-s\", \"nn vbp vb\"],\n  \"licensed\": [\"l-ay1 s-ah-n-s-t\", \"vbn vbd jj\"],\n  \"licensee\": [\"l-ay s-ah-n s-iy1\", \"nn\"],\n  \"licensing\": [\"l-ay1 s-ah-n s-ih-ng\", \"vbg jj\"],\n  \"lichen\": [\"l-ay1 k-ah-n\", \"nn\"],\n  \"lick\": [\"l-ih1-k\", \"vb\"],\n  \"lid\": [\"l-ih1-d\", \"nn\"],\n  \"lie\": [\"l-ay1\", \"vb vbp nn\"],\n  \"lied\": [\"l-ay1-d\", \"vbd vbn\"],\n  \"lieder\": [\"l-iy1 d-er\", \"jj nn\"],\n  \"lien\": [\"l-iy1-n\", \"nn\"],\n  \"lieutenant\": [\"l-uw t-eh1 n-ah-n-t\", \"nn\"],\n  \"life\": [\"l-ay1-f\", \"nn rb\"],\n  \"lifeblood\": [\"l-ay1-f b-l-ah-d\", \"nn\"],\n  \"lifeboat\": [\"l-ay1-f b-ow-t\", \"nn\"],\n  \"lifeguard\": [\"l-ay1-f g-aa-r-d\", \"nn\"],\n  \"lifeless\": [\"l-ay1-f l-ah-s\", \"jj\"],\n  \"lifelike\": [\"l-ay1-f l-ay-k\", \"jj\"],\n  \"lifeline\": [\"l-ay1-f l-ay-n\", \"nn\"],\n  \"lifelong\": [\"l-ay1-f l-ao1-ng\", \"jj\"],\n  \"lifer\": [\"l-ay1 f-er\", \"nn\"],\n  \"lifestyle\": [\"l-ay1-f s-t-ay-l\", \"nn\"],\n  \"lifetime\": [\"l-ay1-f t-ay-m\", \"nn jj\"],\n  \"lift\": [\"l-ih1-f-t\", \"vb nn vbp\"],\n  \"lifter\": [\"l-ih1-f t-er\", \"nn\"],\n  \"lifting\": [\"l-ih1-f t-ih-ng\", \"vbg jj nn\"],\n  \"liftoff\": [\"l-ih1-f-t ao-f\", \"nn\"],\n  \"ligament\": [\"l-ih1 g-ah m-ah-n-t\", \"nn\"],\n  \"ligand\": [\"l-ih1 g-ah-n-d\", \"nn\"],\n  \"light\": [\"l-ay1-t\", \"nn jj vb vbp\"],\n  \"lighted\": [\"l-ay1 t-ah-d\", \"vbn vbd\"],\n  \"lighten\": [\"l-ay1 t-ah-n\", \"vb\"],\n  \"lighter\": [\"l-ay1 t-er\", \"jjr rbr nn\"],\n  \"lightest\": [\"l-ay1 t-ah-s-t\", \"jjs\"],\n  \"lighthearted\": [\"l-ay1-t hh-aa-r t-ih-d\", \"jj\"],\n  \"lighthouse\": [\"l-ay1-t hh-aw-s\", \"nn\"],\n  \"lighting\": [\"l-ay1 t-ih-ng\", \"nn vbg\"],\n  \"lightly\": [\"l-ay1-t l-iy\", \"rb\"],\n  \"lightness\": [\"l-ay1-t n-ah-s\", \"nn\"],\n  \"lightning\": [\"l-ay1-t n-ih-ng\", \"nn\"],\n  \"lightweight\": [\"l-ay1-t w-ey1-t\", \"jj nn\"],\n  \"lignite\": [\"l-ih1-g n-ay-t\", \"jj nn\"],\n  \"likable\": [\"l-ay1 k-ah b-ah-l\", \"jj\"],\n  \"like\": [\"l-ay1-k\", \"vb\"],\n  \"likelier\": [\"l-ay1-k l-iy er\", \"jjr\"],\n  \"likeliest\": [\"l-ay1-k l-iy ah-s-t\", \"jjs\"],\n  \"likelihood\": [\"l-ay1-k l-iy hh-uh-d\", \"nn\"],\n  \"likely\": [\"l-ay1-k l-iy\", \"jj rb\"],\n  \"liken\": [\"l-ay1-k-ah-n\", \"vb\"],\n  \"likeness\": [\"l-ay1-k n-ah-s\", \"nn\"],\n  \"likewise\": [\"l-ay1-k w-ay-z\", \"rb\"],\n  \"lilac\": [\"l-ay1 l-ae-k\", \"jj\"],\n  \"lilt\": [\"l-ih1-l-t\", \"nn\"],\n  \"lily\": [\"l-ih1 l-iy\", \"nn\"],\n  \"limb\": [\"l-ih1-m\", \"nn\"],\n  \"limber\": [\"l-ih1-m b-er\", \"jj\"],\n  \"limbo\": [\"l-ih1-m b-ow\", \"nn\"],\n  \"lime\": [\"l-ay1-m\", \"nn\"],\n  \"limelight\": [\"l-ay1-m l-ay-t\", \"nn\"],\n  \"limestone\": [\"l-ay1-m s-t-ow-n\", \"nn\"],\n  \"limit\": [\"l-ih1 m-ah-t\", \"nn vb vbp\"],\n  \"limitation\": [\"l-ih m-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"limited\": [\"l-ih1 m-ah t-ah-d\", \"jj vbd vbn\"],\n  \"limitless\": [\"l-ih1 m-ah-t l-ah-s\", \"jj\"],\n  \"limo\": [\"l-ih1 m-ow\", \"nn\"],\n  \"limousine\": [\"l-ih1 m-ah z-iy-n\", \"nn\"],\n  \"limp\": [\"l-ih1-m-p\", \"jj nn vb\"],\n  \"linchpin\": [\"l-ih1-n-ch p-ih-n\", \"nn\"],\n  \"linden\": [\"l-ih1-n d-ah-n\", \"nn\"],\n  \"line\": [\"l-ay1-n\", \"nn vbp rb vb\"],\n  \"lineage\": [\"l-ih1 n-iy ah-jh\", \"nn\"],\n  \"lineal\": [\"l-ih1 n-iy ah-l\", \"jj\"],\n  \"linear\": [\"l-ih1 n-iy er\", \"jj\"],\n  \"linearly\": [\"l-ih1 n-iy er l-iy\", \"rb\"],\n  \"linebacker\": [\"l-ay1-n b-ae k-er\", \"nn\"],\n  \"lined\": [\"l-ay1-n-d\", \"vbn vbd jj\"],\n  \"lineman\": [\"l-ay1-n m-ah-n\", \"nn\"],\n  \"linen\": [\"l-ih1 n-ah-n\", \"nn jj\"],\n  \"lineup\": [\"l-ay1-n ah-p\", \"nn\"],\n  \"linger\": [\"l-ih1-ng g-er\", \"vb vbp\"],\n  \"lingerie\": [\"l-aa1-n zh-er ey\", \"nn\"],\n  \"lingering\": [\"l-ih1-ng g-er ih-ng\", \"vbg jj\"],\n  \"lingo\": [\"l-ih1-ng g-ow\", \"nn\"],\n  \"linguist\": [\"l-ih1-ng g-w-ih-s-t\", \"nn\"],\n  \"linguistic\": [\"l-ih-ng g-w-ih1 s-t-ih-k\", \"jj\"],\n  \"link\": [\"l-ih1-ng-k\", \"nn vb vbp\"],\n  \"linkage\": [\"l-ih1-ng k-ah-jh\", \"nn\"],\n  \"linked\": [\"l-ih1-ng-k-t\", \"vbn vbd jj\"],\n  \"linoleum\": [\"l-ah n-ow1 l-iy ah-m\", \"nn\"],\n  \"lint\": [\"l-ih1-n-t\", \"nn\"],\n  \"lion\": [\"l-ay1 ah-n\", \"nn\"],\n  \"lionize\": [\"l-ay1-ah-n-ay-z\", \"vb\"],\n  \"lip\": [\"l-ih1-p\", \"nn jj\"],\n  \"lipid\": [\"l-ay1 p-ah-d\", \"nn\"],\n  \"lipstick\": [\"l-ih1-p s-t-ih-k\", \"nn\"],\n  \"liquefied\": [\"l-ih1 k-w-ah f-ay-d\", \"vbn\"],\n  \"liquefy\": [\"l-ih1 k-w-ah f-ay\", \"vb vbp\"],\n  \"liqueur\": [\"l-ih k-er1\", \"nn\"],\n  \"liquid\": [\"l-ih1 k-w-ah-d\", \"jj nn\"],\n  \"liquidate\": [\"l-ih1 k-w-ih d-ey-t\", \"vb\"],\n  \"liquidation\": [\"l-ih k-w-ih d-ey1 sh-ah-n\", \"nn\"],\n  \"liquidator\": [\"l-ih1 k-w-ih d-ey t-er\", \"nn\"],\n  \"liquidity\": [\"l-ih k-w-ih1 d-ah t-iy\", \"nn\"],\n  \"liquor\": [\"l-ih1 k-er\", \"nn\"],\n  \"list\": [\"l-ih1-s-t\", \"nn vbp vb\"],\n  \"listed\": [\"l-ih1 s-t-ah-d\", \"vbn vbd jj\"],\n  \"listen\": [\"l-ih1 s-ah-n\", \"vb vbp\"],\n  \"listener\": [\"l-ih1 s-ah-n er\", \"nn\"],\n  \"listing\": [\"l-ih1 s-t-ih-ng\", \"nn vbg\"],\n  \"listless\": [\"l-ih1-s-t l-ah-s\", \"jj\"],\n  \"listlessly\": [\"l-ih1-s-t l-ah-s l-iy\", \"rb\"],\n  \"lit\": [\"l-ih1-t\", \"vbd vbn jj nn\"],\n  \"litany\": [\"l-ih1 t-ah n-iy\", \"nn\"],\n  \"liter\": [\"l-iy1 t-er\", \"nn\"],\n  \"literacy\": [\"l-ih1 t-er ah s-iy\", \"nn\"],\n  \"literal\": [\"l-ih1 t-er ah-l\", \"jj\"],\n  \"literally\": [\"l-ih1 t-er ah l-iy\", \"rb\"],\n  \"literary\": [\"l-ih1 t-er eh r-iy\", \"jj nn\"],\n  \"literate\": [\"l-ih1 t-er ah-t\", \"jj\"],\n  \"literature\": [\"l-ih1 t-er ah ch-er\", \"nn\"],\n  \"lithe\": [\"l-ay1-dh\", \"jj\"],\n  \"lithium\": [\"l-ih1 th-iy ah-m\", \"nn\"],\n  \"lithograph\": [\"l-ih1 th-ah g-r-ae-f\", \"nn\"],\n  \"lithography\": [\"l-ah th-aa1 g-r-ah f-iy\", \"nn\"],\n  \"litigant\": [\"l-ih1 t-ih g-ah-n-t\", \"nn\"],\n  \"litigate\": [\"l-ih1 t-ih g-ey-t\", \"vb\"],\n  \"litigation\": [\"l-ih t-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"litigator\": [\"l-ih1 t-ah g-ey t-er\", \"nn\"],\n  \"litigious\": [\"l-ih t-ih1 jh-ah-s\", \"jj\"],\n  \"litle\": [\"l-ay1 t-ah-l\", \"jj nn\"],\n  \"litmus\": [\"l-ih1-t m-ah-s\", \"nn\"],\n  \"litter\": [\"l-ih1 t-er\", \"nn vb vbp\"],\n  \"littering\": [\"l-ih1 t-er ih-ng\", \"nn\"],\n  \"little\": [\"l-ih1 t-ah-l\", \"jj rb\"],\n  \"littlest\": [\"l-ih1 t-ah-l ah-s-t\", \"jjs\"],\n  \"liturgical\": [\"l-ah t-er1 jh-ih k-ah-l\", \"jj\"],\n  \"liturgy\": [\"l-ih1 t-er jh-iy\", \"nn\"],\n  \"livable\": [\"l-ih1 v-ah b-ah-l\", \"jj\"],\n  \"live\": [\"l-ay1-v\", \"vb rb vbp jj\"],\n  \"lived\": [\"l-ay1-v-d\", \"vbd vbn\"],\n  \"livelier\": [\"l-ay1-v l-iy er\", \"jjr\"],\n  \"liveliest\": [\"l-ay1-v l-iy ah-s-t\", \"jjs\"],\n  \"livelihood\": [\"l-ay1-v l-iy hh-uh-d\", \"nn\"],\n  \"liveliness\": [\"l-ay1-v l-iy n-ah-s\", \"nn\"],\n  \"lively\": [\"l-ay1-v l-iy\", \"jj rb\"],\n  \"liver\": [\"l-ih1 v-er\", \"nn\"],\n  \"liveried\": [\"l-ih1 v-r-iy-d\", \"jj\"],\n  \"livestock\": [\"l-ay1-v s-t-aa-k\", \"nn\"],\n  \"livid\": [\"l-ih1 v-ih-d\", \"jj\"],\n  \"living\": [\"l-ih1 v-ih-ng\", \"vbg jj nn\"],\n  \"lizard\": [\"l-ih1 z-er-d\", \"nn\"],\n  \"lo\": [\"l-ow1\", \"uh\"],\n  \"load\": [\"l-ow1-d\", \"nn vb vbp\"],\n  \"loaded\": [\"l-ow1 d-ah-d\", \"vbn jj vbd\"],\n  \"loader\": [\"l-ow1 d-er\", \"nn\"],\n  \"loaf\": [\"l-ow1-f\", \"nn\"],\n  \"loafer\": [\"l-ow1 f-er\", \"nn\"],\n  \"loan\": [\"l-ow1-n\", \"nn vb\"],\n  \"loath\": [\"l-ow1-th\", \"jj\"],\n  \"loathe\": [\"l-ow1-dh\", \"vb\"],\n  \"loathsome\": [\"l-ow1-dh s-ah-m\", \"jj\"],\n  \"loave\": [\"l-ow1-v\", \"nn\"],\n  \"lob\": [\"l-aa1-b\", \"vb\"],\n  \"lobbied\": [\"l-aa1 b-iy-d\", \"vbd vbn\"],\n  \"lobby\": [\"l-aa1 b-iy\", \"nn vb\"],\n  \"lobbying\": [\"l-aa1 b-iy ih-ng\", \"vbg jj nn\"],\n  \"lobbyist\": [\"l-aa1 b-iy ah-s-t\", \"nn\"],\n  \"lobe\": [\"l-ow1-b\", \"nn\"],\n  \"loblolly\": [\"l-aa1 b-l-aa l-iy\", \"nn\"],\n  \"lobo\": [\"l-ow1 b-ow\", \"nn\"],\n  \"lobster\": [\"l-aa1-b s-t-er\", \"nn\"],\n  \"lobule\": [\"l-aa1 b-y-uw-l\", \"nn\"],\n  \"local\": [\"l-ow1 k-ah-l\", \"jj nn\"],\n  \"locale\": [\"l-ow k-ae1-l\", \"nn\"],\n  \"locality\": [\"l-ow k-ae1 l-ah t-iy\", \"nn\"],\n  \"localization\": [\"l-ow k-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"localize\": [\"l-ow1-k-ah-l-ay-z\", \"vb\"],\n  \"localized\": [\"l-ow1 k-ah l-ay-z-d\", \"jj vbn\"],\n  \"locally\": [\"l-ow1 k-ah l-iy\", \"rb\"],\n  \"locate\": [\"l-ow1 k-ey-t\", \"vb vbp\"],\n  \"located\": [\"l-ow1 k-ey t-ah-d\", \"vbn jj vbd\"],\n  \"location\": [\"l-ow k-ey1 sh-ah-n\", \"nn\"],\n  \"loch\": [\"l-aa1-k\", \"nn\"],\n  \"lock\": [\"l-aa1-k\", \"vb vbp jj nn\"],\n  \"locked\": [\"l-aa1-k-t\", \"vbn jj vbd\"],\n  \"locker\": [\"l-aa1 k-er\", \"nn\"],\n  \"locking\": [\"l-aa1 k-ih-ng\", \"jj vbg\"],\n  \"lockout\": [\"l-aa1-k aw-t\", \"nn\"],\n  \"lockstep\": [\"l-aa1-k s-t-eh-p\", \"nn\"],\n  \"lockup\": [\"l-aa1-k ah-p\", \"nn\"],\n  \"locomotive\": [\"l-ow k-ah m-ow1 t-ih-v\", \"nn\"],\n  \"locus\": [\"l-ow1 k-ah-s\", \"nn\"],\n  \"locust\": [\"l-ow1 k-ah-s-t\", \"nn\"],\n  \"lodge\": [\"l-aa1-jh\", \"nn vb\"],\n  \"lodging\": [\"l-aa1 jh-ih-ng\", \"nn vbg\"],\n  \"loft\": [\"l-ao1-f-t\", \"nn\"],\n  \"lofty\": [\"l-ao1-f t-iy\", \"jj\"],\n  \"log\": [\"l-ao1-g\", \"nn vb vbp\"],\n  \"logarithm\": [\"l-aa1 g-er ih dh-ah-m\", \"nn\"],\n  \"logger\": [\"l-aa1 g-er\", \"nn\"],\n  \"loggerhead\": [\"l-aa1 g-er hh-eh-d\", \"nn\"],\n  \"logging\": [\"l-ao1 g-ih-ng\", \"vbg jj\"],\n  \"logic\": [\"l-aa1 jh-ih-k\", \"nn\"],\n  \"logical\": [\"l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"logically\": [\"l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"logistic\": [\"l-ah jh-ih1 s-t-ih-k\", \"jj\"],\n  \"logistical\": [\"l-ah jh-ih1 s-t-ih k-ah-l\", \"jj\"],\n  \"logjam\": [\"l-aa1-g jh-ae-m\", \"nn\"],\n  \"logo\": [\"l-ow1 g-ow\", \"nn\"],\n  \"loin\": [\"l-oy1-n\", \"nn\"],\n  \"loincloth\": [\"l-oy1-n k-l-ao-th\", \"nn\"],\n  \"loiter\": [\"l-oy1-t-er\", \"vb\"],\n  \"loll\": [\"l-aa1-l\", \"vb\"],\n  \"lollipop\": [\"l-aa1 l-iy p-aa-p\", \"nn\"],\n  \"lone\": [\"l-ow1-n\", \"jj\"],\n  \"loneliness\": [\"l-ow1-n l-iy n-ah-s\", \"nn\"],\n  \"lonely\": [\"l-ow1-n l-iy\", \"jj\"],\n  \"loner\": [\"l-ow1 n-er\", \"nn\"],\n  \"lonesome\": [\"l-ow1-n s-ah-m\", \"jj\"],\n  \"long\": [\"l-ao1-ng\", \"jj vb vbp rb\"],\n  \"longer\": [\"l-ao1-ng g-er\", \"rb jjr rbr\"],\n  \"longest\": [\"l-ao1-ng g-ah-s-t\", \"jjs\"],\n  \"longevity\": [\"l-ao-n jh-eh1 v-ah t-iy\", \"nn\"],\n  \"longhand\": [\"l-ao1-ng hh-ae-n-d\", \"jj nn\"],\n  \"longhorn\": [\"l-ao1-ng hh-ao-r-n\", \"nn\"],\n  \"longing\": [\"l-ao1 ng-ih-ng\", \"nn vbg\"],\n  \"longish\": [\"l-ao1 ng-ih-sh\", \"jj\"],\n  \"longitude\": [\"l-aa1-n jh-ah t-uw-d\", \"nn\"],\n  \"longitudinal\": [\"l-aa-n jh-ah t-uw1 d-ah n-ah-l\", \"jj\"],\n  \"longrange\": [\"l-ao1-ng r-ey-n-jh\", \"jj\"],\n  \"longshot\": [\"l-ao1-ng sh-aa-t\", \"nn\"],\n  \"longstanding\": [\"l-ao1-ng s-t-ae-n d-ih-ng\", \"jj\"],\n  \"longterm\": [\"l-ao1-ng t-er-m\", \"jj nn\"],\n  \"longtime\": [\"l-ao1-ng t-ay-m\", \"jj nn\"],\n  \"look\": [\"l-uh1-k\", \"vb nn vbp\"],\n  \"lookalike\": [\"l-uh1 k-ah l-ay-k\", \"jj\"],\n  \"looking\": [\"l-uh1 k-ih-ng\", \"vbg jj nn\"],\n  \"lookout\": [\"l-uh1-k aw-t\", \"nn\"],\n  \"loom\": [\"l-uw1-m\", \"vbp nn vb\"],\n  \"loon\": [\"l-uw1-n\", \"nn\"],\n  \"loony\": [\"l-uw1 n-iy\", \"jj\"],\n  \"loop\": [\"l-uw1-p\", \"nn vb\"],\n  \"loophole\": [\"l-uw1-p hh-ow-l\", \"nn\"],\n  \"loopy\": [\"l-uw1 p-iy\", \"jj\"],\n  \"loose\": [\"l-uw1-s\", \"jj rb vb rp\"],\n  \"loosely\": [\"l-uw1-s l-iy\", \"rb\"],\n  \"loosen\": [\"l-uw1 s-ah-n\", \"vb\"],\n  \"looser\": [\"l-uw1 s-er\", \"jjr\"],\n  \"loot\": [\"l-uw1-t\", \"nn vb\"],\n  \"lop\": [\"l-aa1-p\", \"jj\"],\n  \"lope\": [\"l-ow1-p\", \"nn vb\"],\n  \"lopped\": [\"l-aa1-p-t\", \"vbd vbn\"],\n  \"lopping\": [\"l-aa1 p-ih-ng\", \"nn\"],\n  \"lopsided\": [\"l-aa1-p s-ay1 d-ih-d\", \"jj\"],\n  \"loquacious\": [\"l-ow k-w-ey1 sh-ah-s\", \"jj\"],\n  \"lord\": [\"l-ao1-r-d\", \"nn\"],\n  \"lore\": [\"l-ao1-r\", \"nn\"],\n  \"lose\": [\"l-uw1-z\", \"vb vbp\"],\n  \"loser\": [\"l-uw1 z-er\", \"nn jj\"],\n  \"losing\": [\"l-uw1 z-ih-ng\", \"vbg jj nn\"],\n  \"loss\": [\"l-ao1-s\", \"nn\"],\n  \"lost\": [\"l-ao1-s-t\", \"vbd vbn jj\"],\n  \"lot\": [\"l-aa1-t\", \"nn rb jj\"],\n  \"lotion\": [\"l-ow1 sh-ah-n\", \"nn\"],\n  \"lotter\": [\"l-aa1 t-er\", \"nn\"],\n  \"lottery\": [\"l-aa1 t-er iy\", \"nn\"],\n  \"lotus\": [\"l-ow1 t-ah-s\", \"nn\"],\n  \"loud\": [\"l-aw1-d\", \"jj rb\"],\n  \"louder\": [\"l-aw1 d-er\", \"jjr rb rbr\"],\n  \"loudest\": [\"l-aw1 d-ah-s-t\", \"jjs rbs\"],\n  \"loudly\": [\"l-aw1-d l-iy\", \"rb\"],\n  \"loudspeaker\": [\"l-aw1-d s-p-iy k-er\", \"nn\"],\n  \"lounge\": [\"l-aw1-n-jh\", \"nn vb\"],\n  \"louse\": [\"l-aw1-s\", \"nn\"],\n  \"lousy\": [\"l-aw1 z-iy\", \"jj\"],\n  \"lovable\": [\"l-ah1 v-ah b-ah-l\", \"jj\"],\n  \"love\": [\"l-ah1-v\", \"nn vb vbp\"],\n  \"loved\": [\"l-ah1-v-d\", \"vbd vbn jj\"],\n  \"lovely\": [\"l-ah1-v l-iy\", \"jj\"],\n  \"lover\": [\"l-ah1 v-er\", \"nn\"],\n  \"lovin\": [\"l-ow1 v-ih-n\", \"jj\"],\n  \"loving\": [\"l-ah1 v-ih-ng\", \"jj vbg\"],\n  \"lovingly\": [\"l-ah1 v-ih-ng l-iy\", \"rb\"],\n  \"low\": [\"l-ow1\", \"jj nn rb rp\"],\n  \"lower\": [\"l-ow1 er\", \"jjr rbr vbp jj rb vb\"],\n  \"lowered\": [\"l-ow1 er-d\", \"vbd vbn jj\"],\n  \"lowest\": [\"l-ow1 ah-s-t\", \"jjs jj\"],\n  \"lowland\": [\"l-ow1 l-ae-n-d\", \"nn\"],\n  \"lowly\": [\"l-ow1 l-iy\", \"jj rb\"],\n  \"loyal\": [\"l-oy1 ah-l\", \"jj\"],\n  \"loyalist\": [\"l-oy1 ah l-ih-s-t\", \"nn jj\"],\n  \"loyalty\": [\"l-oy1 ah-l t-iy\", \"nn\"],\n  \"lube\": [\"l-uw1-b\", \"nn\"],\n  \"lubricant\": [\"l-uw1 b-r-ah k-ah-n-t\", \"nn jj\"],\n  \"lubricate\": [\"l-uw1-b-r-ih-k-ey-t\", \"vb\"],\n  \"lucid\": [\"l-uw1 s-ah-d\", \"jj\"],\n  \"luck\": [\"l-ah1-k\", \"nn\"],\n  \"luckier\": [\"l-ah1 k-iy er\", \"jjr\"],\n  \"luckiest\": [\"l-ah1 k-iy ah-s-t\", \"jjs\"],\n  \"luckily\": [\"l-ah1 k-ah l-iy\", \"rb\"],\n  \"lucky\": [\"l-ah1 k-iy\", \"jj\"],\n  \"lucrative\": [\"l-uw1 k-r-ah t-ih-v\", \"jj\"],\n  \"lucy\": [\"l-uw1 s-iy\", \"nn\"],\n  \"ludicrous\": [\"l-uw1 d-ah k-r-ah-s\", \"jj\"],\n  \"ludicrously\": [\"l-uw1 d-ah k-r-ah-s l-iy\", \"rb\"],\n  \"lug\": [\"l-ah1-g\", \"vb nn\"],\n  \"luggage\": [\"l-ah1 g-ah-jh\", \"nn\"],\n  \"lukewarm\": [\"l-uw1-k w-ao1-r-m\", \"jj\"],\n  \"lull\": [\"l-ah1-l\", \"nn vb\"],\n  \"lullaby\": [\"l-ah1 l-ah b-ay\", \"nn\"],\n  \"lumbar\": [\"l-ah1-m b-aa-r\", \"jj\"],\n  \"lumber\": [\"l-ah1-m b-er\", \"nn vb vbp\"],\n  \"lumbering\": [\"l-ah1-m b-er ih-ng\", \"jj nn\"],\n  \"lumberjack\": [\"l-ah1-m b-er jh-ae-k\", \"nn\"],\n  \"lumberyard\": [\"l-ah1-m b-er y-aa-r-d\", \"nn\"],\n  \"lumen\": [\"l-uw1 m-ah-n\", \"nn\"],\n  \"luminary\": [\"l-uw1 m-ah n-eh r-iy\", \"nn\"],\n  \"luminescence\": [\"l-uw m-ah n-eh1 s-ah-n-s\", \"nn\"],\n  \"luminescent\": [\"l-uw m-ah n-eh1 s-ah-n-t\", \"jj\"],\n  \"luminous\": [\"l-uw1 m-ah n-ah-s\", \"jj\"],\n  \"lump\": [\"l-ah1-m-p\", \"nn vb vbp\"],\n  \"lumpy\": [\"l-ah1-m p-iy\", \"jj\"],\n  \"lunar\": [\"l-uw1 n-er\", \"jj\"],\n  \"lunatic\": [\"l-uw1 n-ah t-ih-k\", \"jj\"],\n  \"lunch\": [\"l-ah1-n-ch\", \"nn vb\"],\n  \"luncheon\": [\"l-ah1-n ch-ah-n\", \"nn\"],\n  \"lunchroom\": [\"l-ah1-n-ch r-uw-m\", \"nn\"],\n  \"lunchtime\": [\"l-ah1-n-ch t-ay-m\", \"nn\"],\n  \"lung\": [\"l-ah1-ng\", \"nn\"],\n  \"lunge\": [\"l-ah1-n-jh\", \"vb\"],\n  \"lunger\": [\"l-ah1 ng-er\", \"nn\"],\n  \"lurch\": [\"l-er1-ch\", \"nn vb vbp\"],\n  \"lure\": [\"l-uh1-r\", \"vb nn\"],\n  \"lurid\": [\"l-uh1 r-ah-d\", \"jj\"],\n  \"lurk\": [\"l-er1-k\", \"vb vbp\"],\n  \"luscious\": [\"l-ah1 sh-ih-s\", \"jj\"],\n  \"lush\": [\"l-ah1-sh\", \"jj\"],\n  \"lust\": [\"l-ah1-s-t\", \"nn\"],\n  \"luster\": [\"l-ah1 s-t-er\", \"nn\"],\n  \"lustful\": [\"l-ah1-s-t f-ah-l\", \"jj\"],\n  \"lustre\": [\"l-ah1 s-t-er\", \"nn\"],\n  \"lustrous\": [\"l-ah1-s t-r-ah-s\", \"jj\"],\n  \"lusty\": [\"l-ah1 s-t-iy\", \"jj\"],\n  \"lute\": [\"l-uw1-t\", \"nn\"],\n  \"luxurious\": [\"l-ah-g zh-er1 iy ah-s\", \"jj\"],\n  \"luxury\": [\"l-ah1-g zh-er iy\", \"nn jj\"],\n  \"lye\": [\"l-ay1\", \"nn\"],\n  \"lymph\": [\"l-ih1-m-f\", \"nn\"],\n  \"lymphocyte\": [\"l-ih1-m f-ah s-ay-t\", \"nn\"],\n  \"lymphoma\": [\"l-ih-m f-ow1 m-ah\", \"nn\"],\n  \"lynch\": [\"l-ih1-n-ch\", \"vb\"],\n  \"lyric\": [\"l-ih1 r-ih-k\", \"jj nn\"],\n  \"lyrical\": [\"l-ih1 r-ih k-ah-l\", \"jj\"],\n  \"lyricism\": [\"l-ih1 r-ih s-ih z-ah-m\", \"nn\"],\n  \"lyricist\": [\"l-ih1 r-ih s-ih-s-t\", \"nn\"],\n  \"macabre\": [\"m-ah k-aa1 b-r-ah\", \"jj\"],\n  \"macaroni\": [\"m-ae k-er ow1 n-iy\", \"nn\"],\n  \"macaw\": [\"m-ah k-ao1\", \"nn\"],\n  \"machete\": [\"m-ah sh-eh1 t-iy\", \"nn\"],\n  \"machination\": [\"m-ae k-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"machine\": [\"m-ah sh-iy1-n\", \"nn\"],\n  \"machinery\": [\"m-ah sh-iy1 n-er iy\", \"nn\"],\n  \"machining\": [\"m-ah sh-iy1 n-ih-ng\", \"nn\"],\n  \"machinist\": [\"m-ah sh-iy1 n-ah-s-t\", \"nn\"],\n  \"macho\": [\"m-aa1 ch-ow\", \"jj nn\"],\n  \"mackerel\": [\"m-ae1 k-er ah-l\", \"nn\"],\n  \"mackinaw\": [\"m-ae1 k-ah n-ao\", \"nn\"],\n  \"mackintosh\": [\"m-ae1 k-ah-n t-aa-sh\", \"nn\"],\n  \"macroeconomic\": [\"m-ae k-r-ow eh k-ah n-aa1 m-ih-k\", \"jj\"],\n  \"mad\": [\"m-ae1-d\", \"jj\"],\n  \"madam\": [\"m-ae1 d-ah-m\", \"nn\"],\n  \"madcap\": [\"m-ae1-d k-ae-p\", \"jj\"],\n  \"madden\": [\"m-ae1-d-ah-n\", \"vb\"],\n  \"maddening\": [\"m-ae1 d-ah-n ih-ng\", \"jj vbg\"],\n  \"maddeningly\": [\"m-ae1 d-ah-n ih-ng l-iy\", \"rb\"],\n  \"made\": [\"m-ey1-d\", \"vbn vbd jj\"],\n  \"madhouse\": [\"m-ae1-d hh-aw-s\", \"nn\"],\n  \"madly\": [\"m-ae1-d l-iy\", \"rb\"],\n  \"madman\": [\"m-ae1-d m-ae-n\", \"nn\"],\n  \"madness\": [\"m-ae1-d n-ah-s\", \"nn\"],\n  \"madrigal\": [\"m-ae1 d-r-ah g-ah-l\", \"nn\"],\n  \"madstone\": [\"m-ae1-d s-t-ow-n\", \"nn\"],\n  \"maelstrom\": [\"m-ey1-l s-t-r-ah-m\", \"nn\"],\n  \"maestro\": [\"m-ay1 s-t-r-ow\", \"nn\"],\n  \"mafia\": [\"m-aa1 f-iy ah\", \"nn\"],\n  \"magazine\": [\"m-ae1 g-ah z-iy-n\", \"nn\"],\n  \"magenta\": [\"m-ah jh-eh1-n t-ah\", \"jj nn\"],\n  \"maggot\": [\"m-ae1 g-ah-t\", \"nn\"],\n  \"magic\": [\"m-ae1 jh-ih-k\", \"nn jj\"],\n  \"magical\": [\"m-ae1 jh-ih k-ah-l\", \"jj\"],\n  \"magically\": [\"m-ae1 jh-ih k-ah l-iy\", \"rb\"],\n  \"magician\": [\"m-ah jh-ih1 sh-ah-n\", \"nn\"],\n  \"magistrate\": [\"m-ae1 jh-ah s-t-r-ey-t\", \"nn\"],\n  \"magnanimous\": [\"m-ae-g n-ae1 n-ah m-ah-s\", \"jj\"],\n  \"magnate\": [\"m-ae1-g n-ah-t\", \"nn\"],\n  \"magnesium\": [\"m-ae-g n-iy1 z-iy ah-m\", \"nn\"],\n  \"magnet\": [\"m-ae1-g n-ah-t\", \"nn\"],\n  \"magnetic\": [\"m-ae-g n-eh1 t-ih-k\", \"jj\"],\n  \"magnetically\": [\"m-ae-g n-eh1 t-ih k-ah l-iy\", \"rb\"],\n  \"magnetism\": [\"m-ae1-g n-ah t-ih z-ah-m\", \"nn\"],\n  \"magnetize\": [\"m-ae1-g n-ih t-ay-z\", \"vb\"],\n  \"magnification\": [\"m-ae-g n-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"magnificent\": [\"m-ae-g n-ih1 f-ah s-ah-n-t\", \"jj\"],\n  \"magnificently\": [\"m-ae-g n-ih1 f-ah s-ah-n-t l-iy\", \"rb\"],\n  \"magnify\": [\"m-ae1-g n-ah f-ay\", \"vb\"],\n  \"magnitude\": [\"m-ae1-g n-ah t-uw-d\", \"nn\"],\n  \"magnolia\": [\"m-ae-g n-ow1 l-y-ah\", \"nn\"],\n  \"magnum\": [\"m-ae1-g n-ah-m\", \"nn\"],\n  \"magpie\": [\"m-ae1-g p-ay\", \"nn\"],\n  \"mahogany\": [\"m-ah hh-aa1 g-ah n-iy\", \"nn\"],\n  \"maid\": [\"m-ey1-d\", \"nn\"],\n  \"maiden\": [\"m-ey1 d-ah-n\", \"nn jj\"],\n  \"mail\": [\"m-ey1-l\", \"nn vb vbp\"],\n  \"mailbox\": [\"m-ey1-l b-aa-k-s\", \"nn\"],\n  \"mailed\": [\"m-ey1-l-d\", \"vbn vbd jj\"],\n  \"mailer\": [\"m-ey1 l-er-z\", \"nn\"],\n  \"mailing\": [\"m-ey1 l-ih-ng\", \"nn vbg\"],\n  \"mailman\": [\"m-ey1-l m-ae-n\", \"nn\"],\n  \"mailroom\": [\"m-ey1-l r-uw-m\", \"nn jj\"],\n  \"maimed\": [\"m-ey1-m-d\", \"jj\"],\n  \"main\": [\"m-ey1-n\", \"jj nn\"],\n  \"mainframe\": [\"m-ey1-n f-r-ey-m\", \"nn jj\"],\n  \"mainland\": [\"m-ey1-n l-ae-n-d\", \"nn jj\"],\n  \"mainline\": [\"m-ey1-n l-ay-n\", \"jj nn\"],\n  \"mainly\": [\"m-ey1-n l-iy\", \"rb\"],\n  \"mainstay\": [\"m-ey1-n s-t-ey\", \"nn jj\"],\n  \"mainstream\": [\"m-ey1-n s-t-r-iy-m\", \"nn jj rb\"],\n  \"maintain\": [\"m-ey-n t-ey1-n\", \"vb vbp\"],\n  \"maintenance\": [\"m-ey1-n t-ah n-ah-n-s\", \"nn\"],\n  \"majestic\": [\"m-ah jh-eh1 s-t-ih-k\", \"jj\"],\n  \"majestically\": [\"m-ah jh-eh1 s-t-ih k-ah l-iy\", \"rb\"],\n  \"majesty\": [\"m-ae1 jh-ah s-t-iy\", \"nn\"],\n  \"major\": [\"m-ey1 jh-er\", \"jj nn vb vbp\"],\n  \"majoritarian\": [\"m-ae jh-er ih t-eh1 r-iy ah-n\", \"jj\"],\n  \"majority\": [\"m-ah jh-ao1 r-ah t-iy\", \"nn jj\"],\n  \"make\": [\"m-ey1-k\", \"vb nn vbp\"],\n  \"makeover\": [\"m-ae1-k ow v-er\", \"nn\"],\n  \"maker\": [\"m-ey1 k-er\", \"nn\"],\n  \"makeshift\": [\"m-ey1-k sh-ih-f-t\", \"jj nn\"],\n  \"makeup\": [\"m-ey1-k ah-p\", \"nn\"],\n  \"maladjusted\": [\"m-ae-l ah jh-ah1 s-t-ih-d\", \"jj\"],\n  \"malady\": [\"m-ae1 l-ah d-iy\", \"nn\"],\n  \"malaise\": [\"m-ae l-ey1-z\", \"nn\"],\n  \"malaria\": [\"m-ah l-eh1 r-iy ah\", \"nn\"],\n  \"male\": [\"m-ey1-l\", \"jj nn\"],\n  \"malevolent\": [\"m-ah l-eh1 v-ah l-ah-n-t\", \"jj\"],\n  \"malformation\": [\"m-ae-l f-ao-r m-ey1 sh-ah-n\", \"nn\"],\n  \"malformed\": [\"m-ae-l f-ao1-r-m-d\", \"jj\"],\n  \"malfunction\": [\"m-ae-l f-ah1-ng-k sh-ah-n\", \"nn\"],\n  \"malfunctioning\": [\"m-ae-l f-ah1-ng-k sh-ah-n ih-ng\", \"jj\"],\n  \"malice\": [\"m-ae1 l-ah-s\", \"nn\"],\n  \"malicious\": [\"m-ah l-ih1 sh-ah-s\", \"jj\"],\n  \"maliciously\": [\"m-ah l-ih1 sh-ih-s l-iy\", \"rb\"],\n  \"malign\": [\"m-ah-l-ay1-n\", \"vb\"],\n  \"malignancy\": [\"m-ah l-ih1-g n-ah-n s-iy\", \"nn\"],\n  \"malignant\": [\"m-ah l-ih1-g n-ah-n-t\", \"jj\"],\n  \"mall\": [\"m-ao1-l\", \"nn\"],\n  \"malleable\": [\"m-ae1 l-iy ah b-ah-l\", \"jj\"],\n  \"malnourished\": [\"m-ae-l n-er1 ih-sh-t\", \"jj\"],\n  \"malnutrition\": [\"m-ae-l n-uw t-r-ih1 sh-ah-n\", \"nn\"],\n  \"malpractice\": [\"m-ae-l p-r-ae1-k t-ah-s\", \"nn vb\"],\n  \"malt\": [\"m-ao1-l-t\", \"nn vb\"],\n  \"malted\": [\"m-ao1-l t-ah-d\", \"vbn jj\"],\n  \"maltreat\": [\"m-ae-l t-r-iy1-t\", \"vb\"],\n  \"maltreatment\": [\"m-ae-l t-r-iy1-t m-ah-n-t\", \"nn\"],\n  \"mama\": [\"m-aa1 m-ah\", \"nn\"],\n  \"mammal\": [\"m-ae1 m-ah-l\", \"nn\"],\n  \"mammalian\": [\"m-ah m-ey1 l-iy ah-n\", \"jj\"],\n  \"mammary\": [\"m-ae1 m-er iy\", \"jj\"],\n  \"mammography\": [\"m-ah m-aa1 g-r-ah f-iy\", \"nn\"],\n  \"mammoth\": [\"m-ae1 m-ah-th\", \"jj\"],\n  \"man\": [\"m-ae1-n\", \"nn jj vb uh\"],\n  \"mana\": [\"m-aa1 n-ah\", \"nn\"],\n  \"manage\": [\"m-ae1 n-ah-jh\", \"vb vbp\"],\n  \"manageable\": [\"m-ae1 n-ih jh-ah b-ah-l\", \"jj\"],\n  \"managed\": [\"m-ae1 n-ah-jh-d\", \"vbd vbn jj\"],\n  \"management\": [\"m-ae1 n-ah-jh m-ah-n-t\", \"nn\"],\n  \"manager\": [\"m-ae1 n-ah jh-er\", \"nn\"],\n  \"managerial\": [\"m-ae n-ih jh-ih1 r-iy ah-l\", \"jj\"],\n  \"managing\": [\"m-ae1 n-ah jh-ih-ng\", \"vbg jj nn\"],\n  \"mandamus\": [\"m-ae-n d-ey1 m-ah-s\", \"nn\"],\n  \"mandate\": [\"m-ae1-n d-ey-t\", \"nn vb\"],\n  \"mandatory\": [\"m-ae1-n d-ah t-ao r-iy\", \"jj nn\"],\n  \"mane\": [\"m-ey1-n\", \"nn\"],\n  \"maneuver\": [\"m-ah n-uw1 v-er\", \"nn vb\"],\n  \"maneuvering\": [\"m-ah n-uw1 v-er ih-ng\", \"vbg jj\"],\n  \"manger\": [\"m-ey1-n jh-er\", \"nn\"],\n  \"mangle\": [\"m-ae1-ng-g-ah-l\", \"vb\"],\n  \"mangled\": [\"m-ae1-ng g-ah-l-d\", \"jj vbn\"],\n  \"manhandle\": [\"m-ae1-n-hh-ae-n-d-ah-l\", \"vb\"],\n  \"manhole\": [\"m-ae1-n hh-ow-l\", \"nn\"],\n  \"manhood\": [\"m-ae1-n hh-uh-d\", \"nn\"],\n  \"mania\": [\"m-ey1 n-iy ah\", \"nn\"],\n  \"maniac\": [\"m-ey1 n-iy ae-k\", \"nn\"],\n  \"maniacal\": [\"m-ah n-ay1 ah k-ah-l\", \"jj\"],\n  \"manic\": [\"m-ae1 n-ih-k\", \"jj\"],\n  \"manicure\": [\"m-ae1-n-ih-k-y-er\", \"vb\"],\n  \"manifest\": [\"m-ae1 n-ah f-eh-s-t\", \"jj vb vbp\"],\n  \"manifestation\": [\"m-ae n-ah f-eh s-t-ey1 sh-ah-n\", \"nn\"],\n  \"manifestly\": [\"m-ae1 n-ah f-eh-s-t l-iy\", \"rb\"],\n  \"manifesto\": [\"m-ae n-ah f-eh1 s-t-ow\", \"nn\"],\n  \"manifold\": [\"m-ae1 n-ah f-ow-l-d\", \"nn jj\"],\n  \"manila\": [\"m-ah n-ih1 l-ah\", \"jj\"],\n  \"manipulate\": [\"m-ah n-ih1 p-y-ah l-ey-t\", \"vb vbp\"],\n  \"manipulation\": [\"m-ah n-ih p-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"manipulative\": [\"m-ah n-ih1 p-y-ah l-ey t-ih-v\", \"jj\"],\n  \"manipulator\": [\"m-ah n-ih1 p-y-ah l-ey t-er\", \"nn\"],\n  \"mankind\": [\"m-ae1-n k-ay1-n-d\", \"nn\"],\n  \"manly\": [\"m-ae1-n l-iy\", \"jj\"],\n  \"manmade\": [\"m-ae1-n m-ey1-d\", \"nn\"],\n  \"manna\": [\"m-ae1 n-ah\", \"nn\"],\n  \"manned\": [\"m-ae1-n-d\", \"jj vbd vbn\"],\n  \"mannequin\": [\"m-ae1 n-ah k-ih-n\", \"nn\"],\n  \"manner\": [\"m-ae1 n-er\", \"nn\"],\n  \"mannered\": [\"m-ae1 n-er-d\", \"jj\"],\n  \"mannerism\": [\"m-ae1 n-er ih z-ah-m\", \"nn\"],\n  \"manor\": [\"m-ae1 n-er\", \"nn\"],\n  \"manpower\": [\"m-ae1-n p-aw er\", \"nn\"],\n  \"mansion\": [\"m-ae1-n sh-ah-n\", \"nn\"],\n  \"manslaughter\": [\"m-ae1-n s-l-ao t-er\", \"nn\"],\n  \"mantel\": [\"m-ae1-n t-ah-l\", \"nn\"],\n  \"mantle\": [\"m-ae1-n t-ah-l\", \"nn\"],\n  \"manual\": [\"m-ae1 n-y-uw ah-l\", \"jj nn\"],\n  \"manually\": [\"m-ae1 n-y-uw ah l-iy\", \"rb\"],\n  \"manufacture\": [\"m-ae n-y-ah f-ae1-k ch-er\", \"vb nn vbp\"],\n  \"manufactured\": [\"m-ae n-y-ah f-ae1-k ch-er-d\", \"vbn vbd jj\"],\n  \"manufacturer\": [\"m-ae n-y-ah f-ae1-k ch-er er\", \"nn\"],\n  \"manure\": [\"m-ah n-uh1-r\", \"nn\"],\n  \"manuscript\": [\"m-ae1 n-y-ah s-k-r-ih-p-t\", \"nn\"],\n  \"many\": [\"m-eh1 n-iy\", \"jj dt rb vb pdt\"],\n  \"map\": [\"m-ae1-p\", \"nn vbp vb\"],\n  \"maple\": [\"m-ey1 p-ah-l\", \"nn jj\"],\n  \"maquila\": [\"m-ah-k w-iy1 l-ah\", \"nn\"],\n  \"mar\": [\"m-aa1-r\", \"vb\"],\n  \"marathon\": [\"m-eh1 r-ah th-aa-n\", \"nn jj\"],\n  \"marauder\": [\"m-er ao1 d-er\", \"nn\"],\n  \"marble\": [\"m-aa1-r b-ah-l\", \"nn\"],\n  \"march\": [\"m-aa1-r-ch\", \"nn vbp vb\"],\n  \"marcher\": [\"m-aa1-r ch-er\", \"nn\"],\n  \"mare\": [\"m-eh1-r\", \"nn\"],\n  \"margarine\": [\"m-aa1-r jh-er ah-n\", \"nn\"],\n  \"margin\": [\"m-aa1-r jh-ah-n\", \"nn vb\"],\n  \"marginal\": [\"m-aa1-r jh-ah n-ah-l\", \"jj\"],\n  \"marginalize\": [\"m-aa1-r-jh-ah-n-ah-l-ay-z\", \"vb\"],\n  \"marginally\": [\"m-aa1-r jh-ah n-ah l-iy\", \"rb\"],\n  \"marijuana\": [\"m-eh r-ah-w aa1 n-ah\", \"nn\"],\n  \"marimba\": [\"m-er ih1-m b-ah\", \"nn\"],\n  \"marina\": [\"m-er iy1 n-ah\", \"nn\"],\n  \"marinate\": [\"m-eh1-r-ah-n-ey-t\", \"vb\"],\n  \"marine\": [\"m-er iy1-n\", \"nn jj\"],\n  \"mariner\": [\"m-eh1 r-ah n-er\", \"nn\"],\n  \"marital\": [\"m-eh1 r-ah t-ah-l\", \"jj\"],\n  \"maritime\": [\"m-eh1 r-ah t-ay-m\", \"jj\"],\n  \"mark\": [\"m-aa1-r-k\", \"nn vbp vb\"],\n  \"markdown\": [\"m-aa1-r-k d-aw-n\", \"nn jj\"],\n  \"marked\": [\"m-aa1-r-k-t\", \"vbn jj vbd\"],\n  \"markedly\": [\"m-aa1-r k-ah-d l-iy\", \"rb\"],\n  \"marker\": [\"m-aa1-r k-er\", \"nn\"],\n  \"market\": [\"m-aa1-r k-ah-t\", \"nn vbp vb\"],\n  \"marketability\": [\"m-aa-r k-ih t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"marketable\": [\"m-aa1-r k-ah t-ah b-ah-l\", \"jj\"],\n  \"marketeer\": [\"m-aa-r k-ah t-ih1-r\", \"nn\"],\n  \"marketer\": [\"m-aa1-r k-ah t-er\", \"nn\"],\n  \"marketing\": [\"m-aa1-r k-ah t-ih-ng\", \"vbg jj\"],\n  \"marketplace\": [\"m-aa1-r k-ah-t p-l-ey-s\", \"nn\"],\n  \"marketwide\": [\"m-aa1-r k-ah-t w-ay-d\", \"jj\"],\n  \"marksmanship\": [\"m-aa1-r-k-s m-ah-n sh-ih-p\", \"nn\"],\n  \"markup\": [\"m-aa1-r-k ah-p\", \"nn\"],\n  \"marmalade\": [\"m-aa1-r m-ah l-ey-d\", \"nn\"],\n  \"maroon\": [\"m-er uw1-n\", \"nn jj vb\"],\n  \"marque\": [\"m-aa1-r-k\", \"nn\"],\n  \"marquee\": [\"m-aa-r k-iy1\", \"nn\"],\n  \"marred\": [\"m-aa1-r-d\", \"vbn jj vbd\"],\n  \"marriage\": [\"m-eh1 r-ih-jh\", \"nn\"],\n  \"married\": [\"m-eh1 r-iy-d\", \"vbn vbd jj\"],\n  \"marrow\": [\"m-eh1 r-ow\", \"nn\"],\n  \"marry\": [\"m-eh1 r-iy\", \"vb vbp\"],\n  \"marsh\": [\"m-aa1-r-sh\", \"nn\"],\n  \"marshal\": [\"m-aa1-r sh-ah-l\", \"nn vb vbp\"],\n  \"marshmallow\": [\"m-aa1-r-sh m-eh l-ow\", \"nn\"],\n  \"martial\": [\"m-aa1-r sh-ah-l\", \"jj\"],\n  \"martingale\": [\"m-aa1-r t-ih ng-ey-l\", \"nn\"],\n  \"martini\": [\"m-aa-r t-iy1 n-iy\", \"nn\"],\n  \"martyr\": [\"m-aa1-r t-er\", \"nn\"],\n  \"martyrdom\": [\"m-aa1-r t-er d-ah-m\", \"nn\"],\n  \"marvel\": [\"m-aa1-r v-ah-l\", \"vb nn\"],\n  \"marvelous\": [\"m-aa1-r v-ah l-ah-s\", \"jj\"],\n  \"marvelously\": [\"m-aa1-r v-ah l-ah-s l-iy\", \"rb\"],\n  \"mascara\": [\"m-ae s-k-eh1 r-ah\", \"nn\"],\n  \"mascot\": [\"m-ae1 s-k-ah-t\", \"nn\"],\n  \"masculine\": [\"m-ae1-s k-y-ah l-ah-n\", \"jj nn\"],\n  \"masculinity\": [\"m-ae-s k-y-ah l-ih1 n-ah t-iy\", \"nn\"],\n  \"mash\": [\"m-ae1-sh\", \"nn vb\"],\n  \"mask\": [\"m-ae1-s-k\", \"nn vbp vb\"],\n  \"masked\": [\"m-ae1-s-k-t\", \"vbn vbd jj\"],\n  \"mason\": [\"m-ey1 s-ah-n\", \"nn\"],\n  \"masonry\": [\"m-ey1 s-ah-n r-iy\", \"nn\"],\n  \"masquerade\": [\"m-ae-s k-er ey1-d\", \"nn vb vbp\"],\n  \"mass\": [\"m-ae1-s\", \"nn jj rb vb\"],\n  \"massacre\": [\"m-ae1 s-ah k-er\", \"nn vb\"],\n  \"massage\": [\"m-ah s-aa1-zh\", \"nn vb\"],\n  \"massive\": [\"m-ae1 s-ih-v\", \"jj\"],\n  \"massively\": [\"m-ae1 s-ih-v l-iy\", \"rb\"],\n  \"mast\": [\"m-ae1-s-t\", \"nn\"],\n  \"master\": [\"m-ae1 s-t-er\", \"nn vb\"],\n  \"masterful\": [\"m-ae1 s-t-er f-ah-l\", \"jj\"],\n  \"masterfully\": [\"m-ae1 s-t-er f-ah l-iy\", \"rb\"],\n  \"masterly\": [\"m-ae1 s-t-er l-iy\", \"jj\"],\n  \"mastermind\": [\"m-ae1 s-t-er m-ay-n-d\", \"nn vb\"],\n  \"masterpiece\": [\"m-ae1 s-t-er p-iy-s\", \"nn\"],\n  \"masterwork\": [\"m-ae1 s-t-er w-er-k\", \"nn\"],\n  \"mastery\": [\"m-ae1 s-t-er iy\", \"nn\"],\n  \"mastiff\": [\"m-ae1 s-t-ah-f\", \"nn\"],\n  \"mat\": [\"m-ae1-t\", \"nn\"],\n  \"matador\": [\"m-ae1 t-ah d-ao-r\", \"nn\"],\n  \"match\": [\"m-ae1-ch\", \"vb vbp nn\"],\n  \"matched\": [\"m-ae1-ch-t\", \"vbn jj vbd\"],\n  \"matching\": [\"m-ae1 ch-ih-ng\", \"vbg jj nn\"],\n  \"matchmaker\": [\"m-ae1-ch m-ey k-er\", \"nn\"],\n  \"matchmaking\": [\"m-ae1-ch m-ey k-ih-ng\", \"nn\"],\n  \"mate\": [\"m-ey1-t\", \"nn vbp vb uh\"],\n  \"mater\": [\"m-aa1 t-er\", \"nn\"],\n  \"material\": [\"m-ah t-ih1 r-iy ah-l\", \"nn jj\"],\n  \"materialism\": [\"m-ah t-ih1 r-iy ah l-ih z-ah-m\", \"nn\"],\n  \"materialistic\": [\"m-ah t-ih r-iy ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"materialize\": [\"m-ah t-ih1 r-iy ah l-ay-z\", \"vb vbp\"],\n  \"materially\": [\"m-ah t-ih1 r-iy ah l-iy\", \"rb\"],\n  \"materiel\": [\"m-ah t-ih r-iy eh1-l\", \"nn\"],\n  \"maternal\": [\"m-ah t-er1 n-ah-l\", \"jj\"],\n  \"maternity\": [\"m-ah t-er1 n-ih t-iy\", \"nn\"],\n  \"math\": [\"m-ae1-th\", \"nn\"],\n  \"mathematical\": [\"m-ae th-ah m-ae1 t-ih k-ah-l\", \"jj\"],\n  \"mathematically\": [\"m-ae th-ah m-ae1 t-ih k-ah l-iy\", \"rb\"],\n  \"mathematician\": [\"m-ae th-ah m-ah t-ih1 sh-ah-n\", \"nn\"],\n  \"mathematics\": [\"m-ae th-ah m-ae1 t-ih-k-s\", \"nn\"],\n  \"matinee\": [\"m-ae1 t-ih n-ey\", \"jj\"],\n  \"mating\": [\"m-ey1 t-ih-ng\", \"nn jj vbg\"],\n  \"matriarch\": [\"m-ey1 t-r-iy aa-r-k\", \"nn\"],\n  \"matriarchal\": [\"m-ey t-r-iy aa1-r k-ah-l\", \"jj\"],\n  \"matrimonial\": [\"m-ae t-r-ah m-ow1 n-iy ah-l\", \"jj\"],\n  \"matrimony\": [\"m-ae1 t-r-ah m-ow n-iy\", \"nn\"],\n  \"matrix\": [\"m-ey1 t-r-ih-k-s\", \"nn\"],\n  \"matron\": [\"m-ey1 t-r-ah-n\", \"nn\"],\n  \"matronly\": [\"m-ey1 t-r-ah-n l-iy\", \"jj\"],\n  \"matt\": [\"m-ae1-t\", \"nn\"],\n  \"matte\": [\"m-ae1-t\", \"nn\"],\n  \"matter\": [\"m-ae1 t-er\", \"nn vbp vb\"],\n  \"matting\": [\"m-ae1 t-ih-ng\", \"nn\"],\n  \"mattress\": [\"m-ae1 t-r-ah-s\", \"nn\"],\n  \"maturation\": [\"m-ae ch-er ey1 sh-ah-n\", \"nn\"],\n  \"mature\": [\"m-ah ch-uh1-r\", \"jj vb vbp\"],\n  \"maturity\": [\"m-ah ch-uh1 r-ah t-iy\", \"nn\"],\n  \"maudlin\": [\"m-ao1-d l-ih-n\", \"jj\"],\n  \"maul\": [\"m-ao1-l\", \"vb\"],\n  \"mauler\": [\"m-ao1 l-er\", \"nn\"],\n  \"mausoleum\": [\"m-ao s-ah l-iy1 ah-m\", \"nn\"],\n  \"mauve\": [\"m-ao1-v\", \"jj\"],\n  \"maven\": [\"m-ey1 v-ah-n\", \"nn\"],\n  \"maverick\": [\"m-ae1 v-er ih-k\", \"nn jj\"],\n  \"maw\": [\"m-ao1\", \"nn\"],\n  \"mawkish\": [\"m-ao1 k-ih-sh\", \"jj\"],\n  \"max\": [\"m-ae1-k-s\", \"nn\"],\n  \"maxim\": [\"m-ae1-k s-ah-m\", \"nn\"],\n  \"maximal\": [\"m-ae1-k s-ah m-ah-l\", \"jj\"],\n  \"maximization\": [\"m-ae-k s-ih m-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"maximize\": [\"m-ae1-k s-ah m-ay-z\", \"vb vbp\"],\n  \"maximum\": [\"m-ae1-k s-ah m-ah-m\", \"jj nn\"],\n  \"may\": [\"m-ey1\", \"md\"],\n  \"maybe\": [\"m-ey1 b-iy\", \"rb\"],\n  \"mayhem\": [\"m-ey1 hh-eh-m\", \"nn\"],\n  \"mayonnaise\": [\"m-ey1 ah n-ey-z\", \"nn\"],\n  \"mayor\": [\"m-ey1 er\", \"nn\"],\n  \"mayoral\": [\"m-ey1 er ah-l\", \"jj\"],\n  \"mayoralty\": [\"m-ey1 er ah-l t-iy\", \"nn\"],\n  \"maze\": [\"m-ey1-z\", \"nn\"],\n  \"me\": [\"m-iy1\", \"prp\"],\n  \"meadow\": [\"m-eh1 d-ow\", \"nn\"],\n  \"meager\": [\"m-iy1 g-er\", \"jj\"],\n  \"meal\": [\"m-iy1-l\", \"nn\"],\n  \"mealtime\": [\"m-iy1-l t-ay-m\", \"nn\"],\n  \"mealy\": [\"m-iy1 l-iy\", \"jj\"],\n  \"mealynosed\": [\"m-iy1 l-iy n-ow-z-d\", \"jj\"],\n  \"mean\": [\"m-iy1-n\", \"vb vbp jj\"],\n  \"meander\": [\"m-iy-ae1-n-d-er\", \"vb\"],\n  \"meaner\": [\"m-iy1 n-er\", \"jjr\"],\n  \"meanest\": [\"m-iy1 n-ah-s-t\", \"jjs\"],\n  \"meaning\": [\"m-iy1 n-ih-ng\", \"nn vbg\"],\n  \"meaningful\": [\"m-iy1 n-ih-ng f-ah-l\", \"jj\"],\n  \"meaningfully\": [\"m-iy1 n-ih-ng f-ah l-iy\", \"rb\"],\n  \"meaningless\": [\"m-iy1 n-ih-ng l-ah-s\", \"jj\"],\n  \"meanness\": [\"m-iy1-n n-ah-s\", \"nn\"],\n  \"means\": [\"m-iy1-n-z\", \"nn\"],\n  \"meant\": [\"m-eh1-n-t\", \"vbd vbn\"],\n  \"meantime\": [\"m-iy1-n t-ay-m\", \"nn rb\"],\n  \"meanwhile\": [\"m-iy1-n w-ay-l\", \"rb nn\"],\n  \"measles\": [\"m-iy1 z-ah-l-z\", \"nn\"],\n  \"measly\": [\"m-iy1-z l-iy\", \"jj\"],\n  \"measurable\": [\"m-eh1 zh-er ah b-ah-l\", \"jj\"],\n  \"measurably\": [\"m-eh1 zh-er ah b-l-iy\", \"rb\"],\n  \"measure\": [\"m-eh1 zh-er\", \"nn vbp vb\"],\n  \"measured\": [\"m-eh1 zh-er-d\", \"vbn vbd jj\"],\n  \"measurement\": [\"m-eh1 zh-er m-ah-n-t\", \"nn\"],\n  \"measuring\": [\"m-eh1 zh-er ih-ng\", \"vbg jj\"],\n  \"meat\": [\"m-iy1-t\", \"nn\"],\n  \"meatpacker\": [\"m-iy1-t p-ae k-er\", \"nn\"],\n  \"meatpacking\": [\"m-iy1-t p-ae k-ih-ng\", \"nn\"],\n  \"meaty\": [\"m-iy1 t-iy\", \"jj\"],\n  \"mecca\": [\"m-eh1 k-ah\", \"nn\"],\n  \"mechanic\": [\"m-ah k-ae1 n-ih-k\", \"nn\"],\n  \"mechanical\": [\"m-ah k-ae1 n-ih k-ah-l\", \"jj\"],\n  \"mechanically\": [\"m-ah k-ae1 n-ih-k l-iy\", \"rb\"],\n  \"mechanism\": [\"m-eh1 k-ah n-ih z-ah-m\", \"nn\"],\n  \"mechanistic\": [\"m-eh k-ah n-ih1 s-t-ih-k\", \"jj\"],\n  \"mechanization\": [\"m-eh k-ah n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"mechanize\": [\"m-eh1-k-ah-n-ay-z\", \"vb\"],\n  \"mechanized\": [\"m-eh1 k-ah n-ay-z-d\", \"jj vbn\"],\n  \"medal\": [\"m-eh1 d-ah-l\", \"nn\"],\n  \"medalist\": [\"m-eh1 d-ah l-ih-s-t\", \"nn\"],\n  \"medallion\": [\"m-ah d-ae1 l-y-ah-n\", \"nn\"],\n  \"meddle\": [\"m-eh1 d-ah-l\", \"vb\"],\n  \"median\": [\"m-iy1 d-iy ah-n\", \"jj nn\"],\n  \"mediate\": [\"m-iy1 d-iy ey-t\", \"vb\"],\n  \"mediation\": [\"m-iy d-iy ey1 sh-ah-n\", \"nn\"],\n  \"mediator\": [\"m-iy1 d-iy ey t-er\", \"nn\"],\n  \"medic\": [\"m-eh1 d-ih-k\", \"nn\"],\n  \"medical\": [\"m-eh1 d-ah k-ah-l\", \"jj\"],\n  \"medically\": [\"m-eh1 d-ah-k l-iy\", \"rb\"],\n  \"medicare\": [\"m-eh1 d-ah k-eh-r\", \"nn\"],\n  \"medication\": [\"m-eh d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"medicinal\": [\"m-ah d-ih1 s-ah n-ah-l\", \"jj nn\"],\n  \"medicine\": [\"m-eh1 d-ah s-ah-n\", \"nn\"],\n  \"medico\": [\"m-eh1 d-ih k-ow\", \"nn\"],\n  \"medieval\": [\"m-ih d-iy1 v-ah-l\", \"jj nn\"],\n  \"mediocre\": [\"m-iy d-iy ow1 k-er\", \"jj\"],\n  \"mediocrity\": [\"m-iy d-iy aa1 k-r-ah t-iy\", \"nn\"],\n  \"meditate\": [\"m-eh1 d-ah t-ey-t\", \"vb\"],\n  \"meditation\": [\"m-eh d-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"meditative\": [\"m-eh1 d-ah t-ey t-ih-v\", \"jj\"],\n  \"medium\": [\"m-iy1 d-iy ah-m\", \"nn jj\"],\n  \"medley\": [\"m-eh1-d l-iy\", \"nn\"],\n  \"meek\": [\"m-iy1-k\", \"jj\"],\n  \"meekly\": [\"m-iy1-k l-iy\", \"rb\"],\n  \"meet\": [\"m-iy1-t\", \"vb vbp nn\"],\n  \"meeting\": [\"m-iy1 t-ih-ng\", \"nn vbg\"],\n  \"mega\": [\"m-eh1 g-ah\", \"jj\"],\n  \"megabit\": [\"m-eh1 g-ah b-ih-t\", \"nn\"],\n  \"megabyte\": [\"m-eh1 g-ah b-ay-t\", \"nn\"],\n  \"megahertz\": [\"m-eh1 g-ah hh-er-t-s\", \"nn\"],\n  \"megalomania\": [\"m-eh g-ah l-ow m-ey1 n-iy ah\", \"nn\"],\n  \"megalomaniac\": [\"m-eh g-ah l-ow m-ey1 n-iy ae-k\", \"nn\"],\n  \"megawatt\": [\"m-eh1 g-ah w-aa-t\", \"nn\"],\n  \"melamine\": [\"m-eh1 l-ah m-iy-n\", \"nn\"],\n  \"melancholy\": [\"m-eh1 l-ah-n k-aa l-iy\", \"nn jj\"],\n  \"melange\": [\"m-eh1 l-ae-ng\", \"nn\"],\n  \"melanin\": [\"m-eh1 l-ah n-ah-n\", \"nn\"],\n  \"meld\": [\"m-eh1-l-d\", \"vb\"],\n  \"melee\": [\"m-ey1 l-ey\", \"nn\"],\n  \"mellow\": [\"m-eh1 l-ow\", \"jj vb\"],\n  \"melodic\": [\"m-ah l-aa1 d-ih-k\", \"jj\"],\n  \"melodious\": [\"m-ah l-ow1 d-iy ah-s\", \"jj\"],\n  \"melodrama\": [\"m-eh1 l-ah d-r-aa m-ah\", \"nn\"],\n  \"melodramatic\": [\"m-eh l-ah d-r-ah m-ae1 t-ih-k\", \"jj\"],\n  \"melody\": [\"m-eh1 l-ah d-iy\", \"nn\"],\n  \"melon\": [\"m-eh1 l-ah-n\", \"nn\"],\n  \"melt\": [\"m-eh1-l-t\", \"vb vbp nn\"],\n  \"meltdown\": [\"m-eh1-l-t d-aw-n\", \"nn jj\"],\n  \"melted\": [\"m-eh1-l t-ah-d\", \"vbn jj vbd\"],\n  \"melting\": [\"m-eh1-l t-ih-ng\", \"vbg jj nn\"],\n  \"member\": [\"m-eh1-m b-er\", \"nn\"],\n  \"membership\": [\"m-eh1-m b-er sh-ih-p\", \"nn\"],\n  \"membrane\": [\"m-eh1-m b-r-ey-n\", \"nn\"],\n  \"memento\": [\"m-ih m-eh1-n t-ow\", \"nn\"],\n  \"memo\": [\"m-eh1 m-ow\", \"nn\"],\n  \"memoir\": [\"m-eh1-m w-aa-r\", \"nn\"],\n  \"memorabilia\": [\"m-eh m-er ah b-iy1 l-y-ah\", \"nn\"],\n  \"memorable\": [\"m-eh1 m-er ah b-ah-l\", \"jj\"],\n  \"memorandum\": [\"m-eh m-er ae1-n d-ah-m\", \"nn\"],\n  \"memorial\": [\"m-ah m-ao1 r-iy ah-l\", \"nn jj\"],\n  \"memorialize\": [\"m-ah-m-ao1-r-iy-ah-l-ay-z\", \"vb\"],\n  \"memorize\": [\"m-eh1 m-er ay-z\", \"vb vbp\"],\n  \"memory\": [\"m-eh1 m-er iy\", \"nn\"],\n  \"menace\": [\"m-eh1 n-ah-s\", \"nn vb\"],\n  \"menacing\": [\"m-eh1 n-ah s-ih-ng\", \"jj vbg\"],\n  \"mend\": [\"m-eh1-n-d\", \"vb\"],\n  \"mendacity\": [\"m-eh-n d-ae1 s-ih t-iy\", \"nn\"],\n  \"menial\": [\"m-iy1 n-iy ah-l\", \"jj\"],\n  \"menopause\": [\"m-eh1 n-ah p-aw-z\", \"nn\"],\n  \"menstrual\": [\"m-eh1-n-s t-r-uw ah-l\", \"jj\"],\n  \"menstruation\": [\"m-eh-n-s t-r-uw ey1 sh-ah-n\", \"jj\"],\n  \"menswear\": [\"m-eh1-n-z w-ey-r\", \"nn\"],\n  \"mental\": [\"m-eh1-n t-ah-l\", \"jj\"],\n  \"mentality\": [\"m-eh-n t-ae1 l-ah t-iy\", \"nn\"],\n  \"mentally\": [\"m-eh1-n t-ah l-iy\", \"rb nn jj\"],\n  \"mention\": [\"m-eh1-n sh-ah-n\", \"vb nn vbp\"],\n  \"mentor\": [\"m-eh1-n t-ao-r\", \"nn\"],\n  \"menu\": [\"m-eh1 n-y-uw\", \"nn\"],\n  \"mercenary\": [\"m-er1 s-ah n-eh r-iy\", \"jj\"],\n  \"mercer\": [\"m-er1 s-er\", \"nn\"],\n  \"merchandise\": [\"m-er1 ch-ah-n d-ay-z\", \"nn vb\"],\n  \"merchandiser\": [\"m-er1 ch-ah-n d-ay z-er\", \"nn\"],\n  \"merchant\": [\"m-er1 ch-ah-n-t\", \"nn jj\"],\n  \"merciful\": [\"m-er1 s-ih f-ah-l\", \"jj\"],\n  \"mercifully\": [\"m-er1 s-ih f-ah l-iy\", \"rb\"],\n  \"merciless\": [\"m-er1 s-ah l-ah-s\", \"jj\"],\n  \"mercilessly\": [\"m-er1 s-ah l-ah-s l-iy\", \"rb\"],\n  \"mercurial\": [\"m-er k-y-uh1 r-iy ah-l\", \"jj\"],\n  \"mercury\": [\"m-er1 k-y-er iy\", \"nn\"],\n  \"mercy\": [\"m-er1 s-iy\", \"nn\"],\n  \"mere\": [\"m-ih1-r\", \"jj\"],\n  \"merely\": [\"m-ih1-r l-iy\", \"rb\"],\n  \"merest\": [\"m-eh1 r-ah-s-t\", \"jjs\"],\n  \"merge\": [\"m-er1-jh\", \"vb nn vbp\"],\n  \"merged\": [\"m-er1-jh-d\", \"vbn jj vbd\"],\n  \"merger\": [\"m-er1 jh-er\", \"nn\"],\n  \"meridian\": [\"m-er ih1 d-iy ah-n\", \"nn\"],\n  \"merit\": [\"m-eh1 r-ah-t\", \"nn vb vbp\"],\n  \"meritless\": [\"m-eh1 r-ih-t l-ah-s\", \"jj\"],\n  \"meritorious\": [\"m-eh r-ah t-ao1 r-iy ah-s\", \"jj\"],\n  \"mermaid\": [\"m-er1 m-ey-d\", \"nn\"],\n  \"merrily\": [\"m-eh1 r-ah l-iy\", \"rb\"],\n  \"merry\": [\"m-eh1 r-iy\", \"jj\"],\n  \"mesenteric\": [\"m-eh s-ah-n t-eh1 r-ih-k\", \"jj\"],\n  \"mesh\": [\"m-eh1-sh\", \"nn vbp vb\"],\n  \"mesmerize\": [\"m-eh1-z-m-er-ay-z\", \"vb\"],\n  \"mesothelioma\": [\"m-eh s-ah th-iy l-iy ow1 m-ah\", \"nn\"],\n  \"mess\": [\"m-eh1-s\", \"nn vbp vb\"],\n  \"message\": [\"m-eh1 s-ah-jh\", \"nn vb\"],\n  \"messenger\": [\"m-eh1 s-ah-n jh-er\", \"nn\"],\n  \"messiah\": [\"m-ah s-ay1 ah\", \"nn\"],\n  \"messianic\": [\"m-eh s-iy ae1 n-ih-k\", \"jj\"],\n  \"messy\": [\"m-eh1 s-iy\", \"jj\"],\n  \"met\": [\"m-eh1-t\", \"vbd vbn\"],\n  \"metabolic\": [\"m-eh t-ah b-aa1 l-ih-k\", \"jj\"],\n  \"metabolism\": [\"m-ah t-ae1 b-ah l-ih z-ah-m\", \"nn\"],\n  \"metabolize\": [\"m-ah t-ae1 b-ah l-ay-z\", \"vb\"],\n  \"metal\": [\"m-eh1 t-ah-l\", \"nn\"],\n  \"metallic\": [\"m-ah t-ae1 l-ih-k\", \"jj\"],\n  \"metallurgical\": [\"m-eh t-ah l-er1 jh-ih k-ah-l\", \"jj\"],\n  \"metallurgy\": [\"m-eh1 t-ah l-er jh-iy\", \"nn\"],\n  \"metalworker\": [\"m-eh1 t-ah-l w-er k-er\", \"nn\"],\n  \"metalworking\": [\"m-eh1 t-ah-l w-er k-ih-ng\", \"nn\"],\n  \"metamorphic\": [\"m-eh t-ah m-ao1-r f-ih-k\", \"jj\"],\n  \"metamorphosis\": [\"m-eh t-ah m-ao1-r f-ah s-ah-s\", \"nn\"],\n  \"metaphor\": [\"m-eh1 t-ah f-ao-r\", \"nn\"],\n  \"metaphorical\": [\"m-eh t-ah f-ao1 r-ih k-ah-l\", \"jj\"],\n  \"metaphysical\": [\"m-eh t-ah f-ih1 z-ih k-ah-l\", \"jj\"],\n  \"metaphysics\": [\"m-eh t-ah f-ih1 z-ih-k-s\", \"nn\"],\n  \"mete\": [\"m-iy1-t\", \"vb\"],\n  \"meteor\": [\"m-iy1 t-iy er\", \"nn\"],\n  \"meteoric\": [\"m-iy t-iy ao1 r-ih-k\", \"jj\"],\n  \"meteorological\": [\"m-iy t-iy ao r-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"meteorologist\": [\"m-iy t-iy er aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"meteorology\": [\"m-iy t-iy er aa1 l-ah jh-iy\", \"nn\"],\n  \"meter\": [\"m-iy1 t-er\", \"nn vb\"],\n  \"methadone\": [\"m-eh1 th-ah d-ow-n\", \"nn\"],\n  \"methane\": [\"m-eh1 th-ey-n\", \"nn\"],\n  \"methanol\": [\"m-eh1 th-ah n-aa-l\", \"nn\"],\n  \"method\": [\"m-eh1 th-ah-d\", \"nn\"],\n  \"methodical\": [\"m-ah th-aa1 d-ah k-ah-l\", \"jj\"],\n  \"methodically\": [\"m-ah th-aa1 d-ih k-ah l-iy\", \"rb\"],\n  \"methodological\": [\"m-eh th-ah d-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"methodology\": [\"m-eh th-ah d-aa1 l-ah jh-iy\", \"nn\"],\n  \"methyl\": [\"m-eh1 th-ah-l\", \"nn\"],\n  \"methylene\": [\"m-eh1 th-ih l-iy-n\", \"nn\"],\n  \"meticulous\": [\"m-ah t-ih1 k-y-ah l-ah-s\", \"jj\"],\n  \"meticulously\": [\"m-ah t-ih1 k-y-ah l-ah-s l-iy\", \"rb\"],\n  \"metric\": [\"m-eh1 t-r-ih-k\", \"jj nn\"],\n  \"metrical\": [\"m-eh1 t-r-ih k-ah-l\", \"jj\"],\n  \"metro\": [\"m-eh1 t-r-ow\", \"nn\"],\n  \"metropolis\": [\"m-ah t-r-aa1 p-ah l-ah-s\", \"nn\"],\n  \"metropolitan\": [\"m-eh t-r-ah p-aa1 l-ah t-ah-n\", \"jj nn\"],\n  \"mettle\": [\"m-eh1 t-ah-l\", \"nn\"],\n  \"mew\": [\"m-y-uw1\", \"vb\"],\n  \"miasma\": [\"m-iy ae1-z m-ah\", \"nn\"],\n  \"mica\": [\"m-ay1 k-ah\", \"nn\"],\n  \"micro\": [\"m-ay1 k-r-ow\", \"jj\"],\n  \"microbe\": [\"m-ay1 k-r-ow-b\", \"nn\"],\n  \"microbial\": [\"m-ay k-r-ow1 b-iy ah-l\", \"jj\"],\n  \"microbiologist\": [\"m-ay k-r-ow b-iy aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"microbiology\": [\"m-ay k-r-ow b-ay aa1 l-ah jh-iy\", \"nn\"],\n  \"microchip\": [\"m-ay1 k-r-ow ch-ih1-p\", \"nn jj\"],\n  \"microcircuit\": [\"m-ay1 k-r-ow s-er k-ah-t\", \"nn\"],\n  \"microcosm\": [\"m-ay1 k-r-ah k-aa z-ah-m\", \"nn\"],\n  \"microeconomic\": [\"m-ay k-r-ow eh k-ah n-aa1 m-ih-k\", \"jj\"],\n  \"microeconomics\": [\"m-ay k-r-ow eh k-ah n-aa1 m-ih-k-s\", \"nn\"],\n  \"microfilm\": [\"m-ay1 k-r-ah f-ih-l-m\", \"nn\"],\n  \"microgram\": [\"m-ay1 k-r-ow g-r-ae-m\", \"nn\"],\n  \"micromanage\": [\"m-ay k-r-ow m-ae1 n-ih-jh\", \"nn\"],\n  \"micromanagement\": [\"m-ay k-r-ow m-ae1 n-ih-jh m-ah-n-t\", \"nn\"],\n  \"micrometer\": [\"m-ay k-r-aa1 m-ah t-er\", \"nn\"],\n  \"micron\": [\"m-ay1 k-r-aa-n\", \"nn\"],\n  \"microorganism\": [\"m-ay k-r-ow ao1-r g-ah n-ih z-ah-m\", \"nn\"],\n  \"microphone\": [\"m-ay1 k-r-ah f-ow-n\", \"nn\"],\n  \"microscope\": [\"m-ay1 k-r-ah-s k-ow-p\", \"nn\"],\n  \"microscopic\": [\"m-ay k-r-ah s-k-aa1 p-ih-k\", \"jj\"],\n  \"microwavable\": [\"m-ay k-r-ow w-ey1 v-ah b-ah-l\", \"jj\"],\n  \"microwave\": [\"m-ay1 k-r-ah w-ey-v\", \"nn vb\"],\n  \"midafternoon\": [\"m-ih1-d ae-f t-er n-uw-n\", \"nn\"],\n  \"midair\": [\"m-ih1-d eh1-r\", \"nn\"],\n  \"midcontinent\": [\"m-ih-d k-aa1-n t-ih n-ah-n-t\", \"jj\"],\n  \"midday\": [\"m-ih1-d d-ey\", \"nn rb\"],\n  \"middle\": [\"m-ih1 d-ah-l\", \"nn jj\"],\n  \"middleman\": [\"m-ih1 d-ah-l m-ae-n\", \"nn\"],\n  \"middling\": [\"m-ih1 d-ah-l ih-ng\", \"jj\"],\n  \"midland\": [\"m-ih1-d l-ae-n-d\", \"nn\"],\n  \"midlevel\": [\"m-ih1-d l-ah v-ah-l\", \"jj\"],\n  \"midmorning\": [\"m-ih1-d m-ao-r n-ih-ng\", \"nn\"],\n  \"midnight\": [\"m-ih1-d n-ay-t\", \"nn rb\"],\n  \"midpoint\": [\"m-ih1-d p-oy-n-t\", \"nn\"],\n  \"midpriced\": [\"m-ih1-d p-r-ay1-s-t\", \"jj\"],\n  \"midrange\": [\"m-ih1 d-r-ey-n-jh\", \"jj nn\"],\n  \"midseason\": [\"m-ih1-d s-iy1 z-ah-n\", \"nn\"],\n  \"midsession\": [\"m-ih1-d s-eh sh-ah-n\", \"nn\"],\n  \"midsize\": [\"m-ih1-d s-ay-z\", \"jj\"],\n  \"midsized\": [\"m-ih1-d s-ay-z-d\", \"jj\"],\n  \"midst\": [\"m-ih1-d-s-t\", \"nn\"],\n  \"midstream\": [\"m-ih1-d s-t-r-iy-m\", \"nn\"],\n  \"midsummer\": [\"m-ih1-d s-ah1 m-er\", \"nn\"],\n  \"midterm\": [\"m-ih1-d t-er-m\", \"jj\"],\n  \"midtown\": [\"m-ih1-d t-aw-n\", \"jj nn\"],\n  \"midway\": [\"m-ih1-d w-ey\", \"rb jj nn\"],\n  \"midweek\": [\"m-ih1-d w-iy-k\", \"jj nn\"],\n  \"midwest\": [\"m-ih-d w-eh1-s-t\", \"jjs\"],\n  \"midwestern\": [\"m-ih-d w-eh1 s-t-er-n\", \"jj\"],\n  \"midwife\": [\"m-ih1-d w-ay-f\", \"nn\"],\n  \"midwinter\": [\"m-ih1-d w-ih1-n t-er\", \"nn\"],\n  \"midyear\": [\"m-ih1 d-y-ih-r\", \"nn\"],\n  \"mien\": [\"m-iy1-n\", \"nn\"],\n  \"miffed\": [\"m-ih1-f-t\", \"jj\"],\n  \"might\": [\"m-ay1-t\", \"md nn vbd\"],\n  \"mightn't\": [\"m-ay1-t-ah-n-t\", \"md\"],\n  \"mightiest\": [\"m-ay1 t-iy ah-s-t\", \"jjs\"],\n  \"mightily\": [\"m-ay1 t-ah l-iy\", \"rb\"],\n  \"mighty\": [\"m-ay1 t-iy\", \"jj rb\"],\n  \"migraine\": [\"m-ay1 g-r-ey-n\", \"nn\"],\n  \"migrant\": [\"m-ay1 g-r-ah-n-t\", \"jj nn\"],\n  \"migrate\": [\"m-ay1 g-r-ey-t\", \"vb vbp\"],\n  \"migration\": [\"m-ay g-r-ey1 sh-ah-n\", \"nn\"],\n  \"migratory\": [\"m-ay1 g-r-ah t-ao r-iy\", \"jj\"],\n  \"mild\": [\"m-ay1-l-d\", \"jj\"],\n  \"milder\": [\"m-ay1-l d-er\", \"jjr\"],\n  \"mildew\": [\"m-ih1-l d-uw\", \"nn\"],\n  \"mildly\": [\"m-ay1-l-d l-iy\", \"rb\"],\n  \"mile\": [\"m-ay1-l\", \"nn\"],\n  \"mileage\": [\"m-ay1 l-ah-jh\", \"nn\"],\n  \"milestone\": [\"m-ay1-l s-t-ow-n\", \"nn\"],\n  \"milieu\": [\"m-ih l-y-uh1\", \"nn\"],\n  \"militancy\": [\"m-ih1 l-ah t-ah-n s-iy\", \"nn\"],\n  \"militant\": [\"m-ih1 l-ah t-ah-n-t\", \"nn jj\"],\n  \"militarism\": [\"m-ih1 l-ah t-er ih z-ah-m\", \"nn\"],\n  \"military\": [\"m-ih1 l-ah t-eh r-iy\", \"jj nn\"],\n  \"militia\": [\"m-ah l-ih1 sh-ah\", \"nn\"],\n  \"milk\": [\"m-ih1-l-k\", \"nn vb\"],\n  \"milky\": [\"m-ih1-l k-iy\", \"jj\"],\n  \"mill\": [\"m-ih1-l\", \"nn vb\"],\n  \"milled\": [\"m-ih1-l-d\", \"jj\"],\n  \"millennium\": [\"m-ah l-eh1 n-iy ah-m\", \"nn\"],\n  \"milligram\": [\"m-ih1 l-ah g-r-ae-m\", \"nn\"],\n  \"millimeter\": [\"m-ih1 l-ah m-iy t-er\", \"nn\"],\n  \"million\": [\"m-ih1 l-y-ah-n\", \"nn\"],\n  \"millionaire\": [\"m-ih l-y-ah n-eh1-r\", \"nn\"],\n  \"millionth\": [\"m-ih1 l-y-ah-n-th\", \"jj\"],\n  \"mimic\": [\"m-ih1 m-ih-k\", \"vb vbp\"],\n  \"mimicked\": [\"m-ih1 m-ih-k-t\", \"vbn\"],\n  \"min\": [\"m-ih1-n\", \"nn\"],\n  \"minaret\": [\"m-ih n-er eh1-t\", \"nn\"],\n  \"mince\": [\"m-ih1-n-s\", \"vb\"],\n  \"mincemeat\": [\"m-ih1-n-s m-iy-t\", \"nn\"],\n  \"mind\": [\"m-ay1-n-d\", \"nn rb vb\"],\n  \"mindful\": [\"m-ay1-n-d f-ah-l\", \"jj\"],\n  \"mindless\": [\"m-ay1-n-d l-ah-s\", \"jj\"],\n  \"mindset\": [\"m-ay1-n-d s-eh-t\", \"nn\"],\n  \"mine\": [\"m-ay1-n\", \"nn vb prp vbp\"],\n  \"minefield\": [\"m-ay1-n f-iy-l-d\", \"nn\"],\n  \"miner\": [\"m-ay1 n-er\", \"nn\"],\n  \"mineral\": [\"m-ih1 n-er ah-l\", \"nn jj\"],\n  \"mineralogy\": [\"m-ih n-er aa1 l-ah jh-iy\", \"nn\"],\n  \"mineworker\": [\"m-ay1-n w-er k-er\", \"nn\"],\n  \"mingle\": [\"m-ih1-ng g-ah-l\", \"vb vbp\"],\n  \"mingled\": [\"m-ih1-ng g-ah-l-d\", \"vbd vbn jj\"],\n  \"miniature\": [\"m-ih1 n-iy ah ch-uh-r\", \"jj nn\"],\n  \"miniaturize\": [\"m-ih1-n-ih-ch-er-ay-z\", \"vb\"],\n  \"minicar\": [\"m-ih1 n-iy k-aa-r\", \"nn\"],\n  \"minimal\": [\"m-ih1 n-ah m-ah-l\", \"jj\"],\n  \"minimalism\": [\"m-ih1 n-ah m-ah l-ih z-ah-m\", \"nn\"],\n  \"minimalist\": [\"m-ih1 n-ah m-ah l-ih-s-t\", \"jj nn\"],\n  \"minimally\": [\"m-ih1 n-ah m-ah-l iy\", \"rb\"],\n  \"minimill\": [\"m-ih1 n-iy m-aa-l\", \"nn\"],\n  \"minimize\": [\"m-ih1 n-ah m-ay-z\", \"vb\"],\n  \"minimum\": [\"m-ih1 n-ah m-ah-m\", \"jj nn\"],\n  \"minion\": [\"m-ih1 n-y-ah-n\", \"nn\"],\n  \"miniscule\": [\"m-ih1 n-ih s-k-y-uw-l\", \"jj nn\"],\n  \"miniseries\": [\"m-ih1 n-ih s-eh r-iy-z\", \"nn\"],\n  \"miniskirt\": [\"m-ih1 n-iy s-k-er-t\", \"nn\"],\n  \"minister\": [\"m-ih1 n-ah s-t-er\", \"nn\"],\n  \"ministerial\": [\"m-ih n-ih s-t-iy1 r-iy ah-l\", \"jj\"],\n  \"ministration\": [\"m-ih n-ah-s t-r-ey1 sh-ah-n\", \"nn\"],\n  \"ministry\": [\"m-ih1 n-ah-s t-r-iy\", \"nn\"],\n  \"minivan\": [\"m-ih1 n-iy v-ae1-n\", \"nn\"],\n  \"mink\": [\"m-ih1-ng-k\", \"nn\"],\n  \"minor\": [\"m-ay1 n-er\", \"jj nn\"],\n  \"minority\": [\"m-ay n-ao1 r-ah t-iy\", \"nn jj\"],\n  \"minstrel\": [\"m-ih1-n s-t-r-ah-l\", \"nn\"],\n  \"mint\": [\"m-ih1-n-t\", \"nn vb\"],\n  \"minter\": [\"m-ih1-n t-er\", \"nn\"],\n  \"minuet\": [\"m-ih n-y-ah-w eh1-t\", \"nn\"],\n  \"minus\": [\"m-ay1 n-ah-s\", \"cc in jj nn\"],\n  \"minuscule\": [\"m-ih1 n-ah s-k-y-uw-l\", \"jj\"],\n  \"minute\": [\"m-ih1 n-ah-t\", \"nn jj\"],\n  \"minutely\": [\"m-ih1 n-ah-t l-iy\", \"rb\"],\n  \"miracle\": [\"m-ih1 r-ah k-ah-l\", \"nn\"],\n  \"miraculous\": [\"m-er ae1 k-y-ah l-ah-s\", \"jj\"],\n  \"miraculously\": [\"m-er ae1 k-y-ah l-ah-s l-iy\", \"rb\"],\n  \"mire\": [\"m-ay1-r\", \"nn vb\"],\n  \"mired\": [\"m-ay1-r-d\", \"vbn jj\"],\n  \"mirror\": [\"m-ih1 r-er\", \"nn vbp vb\"],\n  \"mirth\": [\"m-er1-th\", \"nn\"],\n  \"misadventure\": [\"m-ih-s ah-d v-eh1-n ch-er\", \"nn\"],\n  \"misallocate\": [\"m-ih-s-ae1-l-ah-k-ey-t\", \"vb\"],\n  \"misanthrope\": [\"m-ih1 s-ah-n th-r-ow-p\", \"nn\"],\n  \"misapplication\": [\"m-ih-s ae p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"misapplied\": [\"m-ih-s ah p-l-ay1-d\", \"vbn\"],\n  \"misapply\": [\"m-ih-s-ah-p-l-ay1\", \"vb\"],\n  \"misapprehension\": [\"m-ih-s ae p-r-iy hh-eh1-n sh-ah-n\", \"nn\"],\n  \"misappropriate\": [\"m-ih-s-ah-p-r-ow1-p-r-iy-ey-t\", \"vb\"],\n  \"misappropriation\": [\"m-ih-s ah p-r-ow p-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"misbegotten\": [\"m-ih-s b-ah g-aa1 t-ah-n\", \"jj\"],\n  \"misbehave\": [\"m-ih-s-b-ah-hh-ey1-v\", \"vb\"],\n  \"misbehavior\": [\"m-ih-s b-ah hh-ey1 v-y-er\", \"nn\"],\n  \"miscalculate\": [\"m-ih-s-k-ae1-l-k-y-ah-l-ey-t\", \"vb\"],\n  \"miscalculation\": [\"m-ih-s k-ae1-l k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"miscarriage\": [\"m-ih-s k-eh1 r-ih jh-ih\", \"nn\"],\n  \"miscellaneous\": [\"m-ih s-ah l-ey1 n-iy ah-s\", \"jj\"],\n  \"miscellany\": [\"m-ih1 s-ah l-ey n-iy\", \"nn\"],\n  \"mischarge\": [\"m-ih-s-ch-aa1-r-jh\", \"vb\"],\n  \"mischarging\": [\"m-ih-s ch-aa1-r jh-ih-ng\", \"nn\"],\n  \"mischief\": [\"m-ih1-s ch-ah-f\", \"nn\"],\n  \"mischievous\": [\"m-ih1-s ch-ah v-ah-s\", \"jj\"],\n  \"misconception\": [\"m-ih-s k-ah-n s-eh1-p sh-ah-n\", \"nn\"],\n  \"misconduct\": [\"m-ih-s k-aa1-n d-ah-k-t\", \"nn\"],\n  \"misconstrue\": [\"m-ih-s-k-ah-n-s-t-r-uw1\", \"vb\"],\n  \"miscount\": [\"m-ih1-s k-aw1-n-t\", \"nn\"],\n  \"miscreant\": [\"m-ih1-s k-r-iy ah-n-t\", \"jj nn\"],\n  \"miscue\": [\"m-ih1-s k-y-uw\", \"nn\"],\n  \"misdeed\": [\"m-ih-s d-iy1-d\", \"nn\"],\n  \"misdemeanor\": [\"m-ih-s d-ah m-iy1 n-er\", \"nn\"],\n  \"miserable\": [\"m-ih1 z-er ah b-ah-l\", \"jj\"],\n  \"miserably\": [\"m-ih1 z-er ah b-l-iy\", \"rb\"],\n  \"miserly\": [\"m-ay1 z-er l-iy\", \"jj\"],\n  \"misery\": [\"m-ih1 z-er iy\", \"nn\"],\n  \"misfit\": [\"m-ih1-s f-ih-t\", \"nn\"],\n  \"misfortune\": [\"m-ih-s f-ao1-r ch-ah-n\", \"nn\"],\n  \"misgiving\": [\"m-ih-s g-ih1 v-ih-ng\", \"nn\"],\n  \"misguide\": [\"m-ih-s-g-ay1-d\", \"vb\"],\n  \"misguided\": [\"m-ih-s g-ay1 d-ih-d\", \"jj vbn\"],\n  \"mishandle\": [\"m-ih-s-hh-ae1-n-d-ah-l\", \"vb\"],\n  \"mishandled\": [\"m-ih-s hh-ae1-n d-ah-l-d\", \"vbd jj vbn\"],\n  \"mishap\": [\"m-ih1-s hh-ae-p\", \"nn\"],\n  \"misinform\": [\"m-ih-s-ih-n-f-ao1-r-m\", \"vb\"],\n  \"misinformation\": [\"m-ih-s ih-n f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"misinterpret\": [\"m-ih-s ih-n t-er1 p-r-ah-t\", \"vb vbp\"],\n  \"misinterpretation\": [\"m-ih-s ih-n t-er p-r-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"misjudge\": [\"m-ih-s-jh-ah1-jh\", \"vb\"],\n  \"misjudgment\": [\"m-ih-s jh-ah1-jh m-ah-n-t\", \"nn\"],\n  \"mislaid\": [\"m-ih-s l-ey1-d\", \"vbn\"],\n  \"mislead\": [\"m-ih-s-l-iy1-d\", \"vb\"],\n  \"misleading\": [\"m-ih-s l-iy1 d-ih-ng\", \"jj vbg\"],\n  \"misleadingly\": [\"m-ih-s l-iy1 d-ih-ng l-iy\", \"rb\"],\n  \"misled\": [\"m-ih-s l-eh1-d\", \"vbd vbn\"],\n  \"mismanage\": [\"m-ih-s-m-ae1-n-ih-jh\", \"vb\"],\n  \"mismanagement\": [\"m-ih-s m-ae1 n-ih-jh m-ah-n-t\", \"nn\"],\n  \"mismatch\": [\"m-ih-s m-ae1-ch\", \"nn vb\"],\n  \"misnomer\": [\"m-ih-s n-ow1 m-er\", \"nn\"],\n  \"misperceive\": [\"m-ih-s-p-er-s-iy1-v\", \"vb\"],\n  \"misperception\": [\"m-ih-s p-er s-eh1-p sh-ah-n\", \"nn\"],\n  \"misplace\": [\"m-ih-s p-l-ey1-s\", \"vb\"],\n  \"misprice\": [\"m-ih-s-p-r-ay1-s\", \"vb\"],\n  \"misquote\": [\"m-ih-s-k-w-ow1-t\", \"vb\"],\n  \"misread\": [\"m-ih-s r-iy1-d\", \"vbd\"],\n  \"misreading\": [\"m-ih-s r-iy1 d-ih-ng\", \"nn\"],\n  \"misrepresent\": [\"m-ih-s r-eh p-r-ah z-eh1-n-t\", \"vb\"],\n  \"misrepresentation\": [\"m-ih-s r-eh p-r-ih z-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"miss\": [\"m-ih1-s\", \"vb vbp nn\"],\n  \"missed\": [\"m-ih1-s-t\", \"vbd vbn jj\"],\n  \"misshapen\": [\"m-ih-s sh-ey1 p-ah-n\", \"jj\"],\n  \"missile\": [\"m-ih1 s-ah-l\", \"nn\"],\n  \"missing\": [\"m-ih1 s-ih-ng\", \"vbg jj\"],\n  \"mission\": [\"m-ih1 sh-ah-n\", \"nn\"],\n  \"missionary\": [\"m-ih1 sh-ah-n eh r-iy\", \"jj nn\"],\n  \"missive\": [\"m-ih1 s-ih-v\", \"nn\"],\n  \"misspell\": [\"m-ih-s-s-p-eh1-l\", \"vb\"],\n  \"misspent\": [\"m-ih-s s-p-eh1-n-t\", \"vbn\"],\n  \"misstate\": [\"m-ih-s-s-t-ey1-t\", \"vb\"],\n  \"misstatement\": [\"m-ih-s t-ey1-t m-ah-n-t\", \"nn\"],\n  \"misstep\": [\"m-ih-s s-t-eh1-p\", \"nn\"],\n  \"missy\": [\"m-ih1 s-iy\", \"nn\"],\n  \"mist\": [\"m-ih1-s-t\", \"nn\"],\n  \"mistake\": [\"m-ih s-t-ey1-k\", \"nn vb\"],\n  \"mistaken\": [\"m-ih s-t-ey1 k-ah-n\", \"vbn jj\"],\n  \"mistakenly\": [\"m-ih s-t-ey1 k-ah-n l-iy\", \"rb\"],\n  \"mister\": [\"m-ih1 s-t-er\", \"nn\"],\n  \"mistletoe\": [\"m-ih1 s-ah-l t-ow\", \"nn\"],\n  \"mistook\": [\"m-ih s-t-uh1-k\", \"vbd\"],\n  \"mistreat\": [\"m-ih-s t-r-iy1-t\", \"vb\"],\n  \"mistreatment\": [\"m-ih-s t-r-iy1-t m-ah-n-t\", \"nn\"],\n  \"mistress\": [\"m-ih1-s t-r-ah-s\", \"nn\"],\n  \"mistrial\": [\"m-ih-s t-r-ay1 ah-l\", \"nn\"],\n  \"mistrust\": [\"m-ih-s t-r-ah1-s-t\", \"nn vb\"],\n  \"mistrusted\": [\"m-ih-s t-r-ah1 s-t-ih-d\", \"vbd vbn jj\"],\n  \"misty\": [\"m-ih1 s-t-iy\", \"jj\"],\n  \"misunderstand\": [\"m-ih-s ah-n d-er s-t-ae1-n-d\", \"vb\"],\n  \"misunderstanding\": [\"m-ih-s ah-n d-er s-t-ae1-n d-ih-ng\", \"nn\"],\n  \"misunderstood\": [\"m-ih-s ah-n d-er s-t-uh1-d\", \"vbn vbd\"],\n  \"misuse\": [\"m-ih-s y-uw1-z\", \"nn vb vbp\"],\n  \"mite\": [\"m-ay1-t\", \"nn\"],\n  \"miter\": [\"m-ay1 t-er\", \"vb\"],\n  \"mitigate\": [\"m-ih1 t-ah g-ey-t\", \"vb\"],\n  \"mitigating\": [\"m-ih1 t-ah g-ey t-ih-ng\", \"vbg jj\"],\n  \"mitigation\": [\"m-ih t-ih g-ey1 sh-ah-n\", \"nn\"],\n  \"mitral\": [\"m-ay1 t-r-ah-l\", \"jj\"],\n  \"mitre\": [\"m-ih1 t-r-iy\", \"nn\"],\n  \"mitt\": [\"m-ih1-t\", \"nn\"],\n  \"mitten\": [\"m-ih1 t-ah-n\", \"nn\"],\n  \"mix\": [\"m-ih1-k-s\", \"nn vbp vb\"],\n  \"mixed\": [\"m-ih1-k-s-t\", \"vbn vbd jj\"],\n  \"mixer\": [\"m-ih1-k s-er\", \"nn\"],\n  \"mixture\": [\"m-ih1-k-s ch-er\", \"nn\"],\n  \"moan\": [\"m-ow1-n\", \"vb\"],\n  \"moat\": [\"m-ow1-t\", \"nn\"],\n  \"mob\": [\"m-aa1-b\", \"nn\"],\n  \"mobile\": [\"m-ow1 b-ah-l\", \"jj\"],\n  \"mobility\": [\"m-ow b-ih1 l-ah t-iy\", \"nn\"],\n  \"mobilization\": [\"m-ow b-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"mobilize\": [\"m-ow1 b-ah l-ay-z\", \"vb\"],\n  \"mobster\": [\"m-aa1-b s-t-er\", \"nn\"],\n  \"mock\": [\"m-aa1-k\", \"jj vbp vb\"],\n  \"mockery\": [\"m-aa1 k-er iy\", \"nn\"],\n  \"mocking\": [\"m-aa1 k-ih-ng\", \"vbg jj\"],\n  \"mode\": [\"m-ow1-d\", \"nn\"],\n  \"model\": [\"m-aa1 d-ah-l\", \"nn vb\"],\n  \"modeled\": [\"m-aa1 d-ah-l-d\", \"vbn vbd jj\"],\n  \"modeling\": [\"m-aa1 d-ah-l ih-ng\", \"nn jj vbg\"],\n  \"modem\": [\"m-ow1 d-ah-m\", \"nn\"],\n  \"moderate\": [\"m-aa1 d-er ah-t\", \"jj vbp vb\"],\n  \"moderately\": [\"m-aa1 d-er ah-t l-iy\", \"rb\"],\n  \"moderating\": [\"m-aa1 d-er ey t-ih-ng\", \"vbg jj\"],\n  \"moderation\": [\"m-aa d-er ey1 sh-ah-n\", \"nn\"],\n  \"moderator\": [\"m-aa1 d-er ey t-er\", \"nn\"],\n  \"modern\": [\"m-aa1 d-er-n\", \"jj nn\"],\n  \"modernism\": [\"m-aa1 d-er n-ih z-ah-m\", \"nn\"],\n  \"modernist\": [\"m-aa1 d-er n-ah-s-t\", \"jj nn\"],\n  \"modernity\": [\"m-aa d-er1 n-ah t-iy\", \"nn\"],\n  \"modernization\": [\"m-aa d-er n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"modernize\": [\"m-aa1 d-er n-ay-z\", \"vb\"],\n  \"modernized\": [\"m-aa1 d-er n-ay-z-d\", \"vbn jj vbd\"],\n  \"modest\": [\"m-aa1 d-ah-s-t\", \"jj\"],\n  \"modestly\": [\"m-aa1 d-ah-s-t l-iy\", \"rb\"],\n  \"modesty\": [\"m-aa1 d-ah s-t-iy\", \"nn\"],\n  \"modicum\": [\"m-aa1 d-ih k-ah-m\", \"nn\"],\n  \"modification\": [\"m-aa d-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"modified\": [\"m-aa1 d-ah f-ay-d\", \"vbn jj vbd\"],\n  \"modify\": [\"m-aa1 d-ah f-ay\", \"vb vbp\"],\n  \"modular\": [\"m-aa1 jh-ah l-er\", \"jj\"],\n  \"modulate\": [\"m-ao1 jh-y-uw l-ey-t\", \"vbp vb\"],\n  \"modulation\": [\"m-aa jh-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"module\": [\"m-aa1 jh-uw-l\", \"nn\"],\n  \"mogul\": [\"m-ow1 g-ah-l\", \"nn\"],\n  \"moist\": [\"m-oy1-s-t\", \"jj\"],\n  \"moisten\": [\"m-oy1-s-ah-n\", \"vb\"],\n  \"moistened\": [\"m-oy1 s-ah-n-d\", \"jj vbd\"],\n  \"moisture\": [\"m-oy1-s ch-er\", \"nn\"],\n  \"moisturizer\": [\"m-oy1-s ch-er ay z-er\", \"nn\"],\n  \"molasses\": [\"m-ah l-ae1 s-ah-z\", \"nn\"],\n  \"mold\": [\"m-ow1-l-d\", \"nn vb vbp\"],\n  \"moldable\": [\"m-ow1-l d-ah b-ah-l\", \"jj\"],\n  \"molded\": [\"m-ow1-l d-ah-d\", \"vbn jj vbd\"],\n  \"molding\": [\"m-ow1-l d-ih-ng\", \"nn vbg\"],\n  \"moldy\": [\"m-ow1-l d-iy\", \"jj\"],\n  \"mole\": [\"m-ow1-l\", \"nn\"],\n  \"molecular\": [\"m-ah l-eh1 k-y-ah l-er\", \"jj\"],\n  \"molecule\": [\"m-aa1 l-ah k-y-uw-l\", \"nn\"],\n  \"molehill\": [\"m-ow1-l hh-ih-l\", \"nn\"],\n  \"molest\": [\"m-ah l-eh1-s-t\", \"vb\"],\n  \"mollified\": [\"m-aa1 l-ah f-ay-d\", \"vbn vbd\"],\n  \"mollify\": [\"m-aa1 l-ah f-ay\", \"vb\"],\n  \"mollycoddle\": [\"m-aa1 l-iy k-aa d-ah-l\", \"nn\"],\n  \"molt\": [\"m-ow1-l-t\", \"vb\"],\n  \"molten\": [\"m-ow1-l t-ah-n\", \"jj\"],\n  \"molton\": [\"m-ow1-l t-ah-n\", \"nn\"],\n  \"mom\": [\"m-aa1-m\", \"nn\"],\n  \"moment\": [\"m-ow1 m-ah-n-t\", \"nn\"],\n  \"momentarily\": [\"m-ow m-ah-n t-eh1 r-ah l-iy\", \"rb\"],\n  \"momentary\": [\"m-ow1 m-ah-n t-eh r-iy\", \"jj\"],\n  \"momentous\": [\"m-ow m-eh1-n t-ah-s\", \"jj\"],\n  \"momentum\": [\"m-ow m-eh1-n t-ah-m\", \"nn\"],\n  \"monarch\": [\"m-aa1 n-aa-r-k\", \"nn\"],\n  \"monarchy\": [\"m-aa1 n-aa-r k-iy\", \"nn\"],\n  \"monastery\": [\"m-aa1 n-ah s-t-eh r-iy\", \"nn\"],\n  \"monastic\": [\"m-ah n-ae1 s-t-ih-k\", \"jj\"],\n  \"monetary\": [\"m-aa1 n-ah t-eh r-iy\", \"jj\"],\n  \"money\": [\"m-ah1 n-iy\", \"nn\"],\n  \"moneyed\": [\"m-ah1 n-iy-d\", \"jj\"],\n  \"moneymaker\": [\"m-ah1 n-iy m-ey k-er\", \"nn\"],\n  \"moneymaking\": [\"m-ah1 n-iy m-ey k-ih-ng\", \"jj nn\"],\n  \"monied\": [\"m-ah1 n-iy-d\", \"jj\"],\n  \"moniker\": [\"m-aa1 n-ih k-er\", \"nn\"],\n  \"monitor\": [\"m-aa1 n-ah t-er\", \"vb nn vbp\"],\n  \"monitored\": [\"m-aa1 n-ah t-er-d\", \"vbn vbd jj\"],\n  \"monk\": [\"m-ah1-ng-k\", \"nn\"],\n  \"monkey\": [\"m-ah1-ng k-iy\", \"nn\"],\n  \"mono\": [\"m-ow1 n-ow\", \"jj nn\"],\n  \"monochromatic\": [\"m-aa n-ah k-r-ow m-ae1 t-ih-k\", \"jj\"],\n  \"monochrome\": [\"m-aa1 n-ah k-r-ow-m\", \"jj\"],\n  \"monoclonal\": [\"m-aa n-ah k-l-ow1 n-ah-l\", \"jj\"],\n  \"monogamous\": [\"m-ah n-aa1 g-ah m-ah-s\", \"jj\"],\n  \"monogrammed\": [\"m-aa1 n-ah g-r-ae-m-d\", \"jj\"],\n  \"monograph\": [\"m-aa1 n-ah g-r-ae-f\", \"nn\"],\n  \"monohull\": [\"m-aa1 n-ah hh-ah-l\", \"nn\"],\n  \"monolith\": [\"m-aa1 n-ah l-ih-th\", \"nn\"],\n  \"monolithic\": [\"m-aa n-ah l-ih1 th-ih-k\", \"jj\"],\n  \"monologue\": [\"m-aa1 n-ah l-ao-g\", \"nn\"],\n  \"monomer\": [\"m-aa1 n-ah m-er\", \"nn\"],\n  \"monophonic\": [\"m-aa n-ah f-aa1 n-ih-k\", \"jj\"],\n  \"monopolistic\": [\"m-ah n-aa p-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"monopolization\": [\"m-ah n-aa p-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"monopolize\": [\"m-ah n-aa1 p-ah l-ay-z\", \"vb\"],\n  \"monopoly\": [\"m-ah n-aa1 p-ah l-iy\", \"nn\"],\n  \"monotone\": [\"m-aa1 n-ah t-ow-n\", \"jj nn\"],\n  \"monotonous\": [\"m-ah n-aa1 t-ah-n ah-s\", \"jj\"],\n  \"monotony\": [\"m-ah n-aa1 t-ah-n iy\", \"nn\"],\n  \"monsoon\": [\"m-aa-n s-uw1-n\", \"nn\"],\n  \"monster\": [\"m-aa1-n s-t-er\", \"nn\"],\n  \"monstrosity\": [\"m-aa-n-s t-r-aa1 s-ah t-iy\", \"nn\"],\n  \"monstrous\": [\"m-aa1-n-s t-r-ah-s\", \"jj\"],\n  \"montage\": [\"m-aa-n t-aa1-zh\", \"nn\"],\n  \"month\": [\"m-ah1-n-th\", \"nn\"],\n  \"monthlong\": [\"m-ah1-n th-l-ao-ng\", \"jj\"],\n  \"monthly\": [\"m-ah1-n-th l-iy\", \"jj nn rb\"],\n  \"monument\": [\"m-aa1 n-y-uw m-ah-n-t\", \"nn\"],\n  \"monumental\": [\"m-aa n-y-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"mood\": [\"m-uw1-d\", \"nn\"],\n  \"moody\": [\"m-uw1 d-iy\", \"jj\"],\n  \"moon\": [\"m-uw1-n\", \"nn vb\"],\n  \"moonlight\": [\"m-uw1-n l-ay-t\", \"nn vb\"],\n  \"moonlike\": [\"m-uw1-n l-ay-k\", \"jj\"],\n  \"moonlit\": [\"m-uw1-n l-ih-t\", \"jj\"],\n  \"moor\": [\"m-uh1-r\", \"vb\"],\n  \"mooring\": [\"m-uh1 r-ih-ng\", \"nn\"],\n  \"moot\": [\"m-uw1-t\", \"jj\"],\n  \"mop\": [\"m-aa1-p\", \"vb nn\"],\n  \"moraine\": [\"m-er ey1-n\", \"nn\"],\n  \"moral\": [\"m-ao1 r-ah-l\", \"jj nn\"],\n  \"morale\": [\"m-er ae1-l\", \"nn\"],\n  \"moralism\": [\"m-ao1 r-ah l-ih z-ah-m\", \"nn\"],\n  \"moralist\": [\"m-ao1 r-ah l-ih-s-t\", \"nn\"],\n  \"moralistic\": [\"m-ao r-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"morality\": [\"m-er ae1 l-ah t-iy\", \"nn\"],\n  \"moralize\": [\"m-ao1-r-ah-l-ay-z\", \"vb\"],\n  \"moralizing\": [\"m-ao1 r-ah l-ay z-ih-ng\", \"vbg jj\"],\n  \"morally\": [\"m-ao1 r-ah l-iy\", \"rb\"],\n  \"morass\": [\"m-er ae1-s\", \"nn\"],\n  \"moratorium\": [\"m-ao r-ah t-ao1 r-iy ah-m\", \"nn\"],\n  \"morbid\": [\"m-ao1-r b-ah-d\", \"jj\"],\n  \"morbidity\": [\"m-ao-r b-ih1 d-ah t-iy\", \"nn\"],\n  \"more\": [\"m-ao1-r\", \"jjr rbr nn jj rb rp\"],\n  \"moreover\": [\"m-ao r-ow1 v-er\", \"rb\"],\n  \"morgue\": [\"m-ao1-r-g\", \"nn\"],\n  \"moribund\": [\"m-ao1 r-ah b-ah-n-d\", \"jj\"],\n  \"morning\": [\"m-ao1-r n-ih-ng\", \"nn\"],\n  \"morose\": [\"m-er ow1-s\", \"jj\"],\n  \"morphine\": [\"m-ao1-r f-iy-n\", \"nn\"],\n  \"morphological\": [\"m-ao-r f-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"morphology\": [\"m-ao-r f-aa1 l-ah jh-iy\", \"nn\"],\n  \"morrow\": [\"m-aa1 r-ow\", \"nn\"],\n  \"morsel\": [\"m-ao1-r s-ah-l\", \"nn\"],\n  \"mortal\": [\"m-ao1-r t-ah-l\", \"jj nn\"],\n  \"mortality\": [\"m-ao-r t-ae1 l-ah t-iy\", \"nn\"],\n  \"mortally\": [\"m-ao1-r t-ah l-iy\", \"rb\"],\n  \"mortar\": [\"m-ao1-r t-er\", \"nn\"],\n  \"mortgage\": [\"m-ao1-r g-ah-jh\", \"nn vb\"],\n  \"mortis\": [\"m-ao1-r t-ih-s\", \"nn\"],\n  \"mosaic\": [\"m-ow z-ey1 ih-k\", \"nn\"],\n  \"mosey\": [\"m-ow1 z-iy\", \"vb\"],\n  \"mosque\": [\"m-aa1-s-k\", \"nn\"],\n  \"mosquito\": [\"m-ah s-k-iy1 t-ow\", \"nn\"],\n  \"moss\": [\"m-ao1-s\", \"nn\"],\n  \"most\": [\"m-ow1-s-t\", \"rbs jj nn rb jjs\"],\n  \"mostly\": [\"m-ow1-s-t l-iy\", \"rb jj\"],\n  \"motel\": [\"m-ow t-eh1-l\", \"nn\"],\n  \"moth\": [\"m-ao1-th\", \"nn\"],\n  \"mothball\": [\"m-ao1-th b-ao-l\", \"nn vb jj\"],\n  \"mothballing\": [\"m-ao1-th b-ao1 l-ih-ng\", \"nn\"],\n  \"mother\": [\"m-ah1 dh-er\", \"nn vb\"],\n  \"motherhood\": [\"m-ah1 dh-er hh-uh-d\", \"nn\"],\n  \"motherland\": [\"m-ah1 dh-er l-ae-n-d\", \"nn\"],\n  \"motherly\": [\"m-ah1 dh-er l-iy\", \"jj\"],\n  \"motif\": [\"m-ow t-iy1-f\", \"nn\"],\n  \"motion\": [\"m-ow1 sh-ah-n\", \"nn vb\"],\n  \"motionless\": [\"m-ow1 sh-ah-n l-ah-s\", \"jj\"],\n  \"motivate\": [\"m-ow1 t-ah v-ey-t\", \"vb vbp\"],\n  \"motivated\": [\"m-ow1 t-ah v-ey t-ah-d\", \"vbn vbd jj\"],\n  \"motivating\": [\"m-ow1 t-ah v-ey t-ih-ng\", \"vbg jj\"],\n  \"motivation\": [\"m-ow t-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"motive\": [\"m-ow1 t-ih-v\", \"nn jj\"],\n  \"motley\": [\"m-aa1-t l-iy\", \"jj\"],\n  \"motor\": [\"m-ow1 t-er\", \"nn jj vb\"],\n  \"motorbike\": [\"m-ow1 t-er b-ay-k\", \"nn\"],\n  \"motorcade\": [\"m-ow1 t-er k-ey-d\", \"nn\"],\n  \"motorcycle\": [\"m-ow1 t-er s-ay k-ah-l\", \"nn\"],\n  \"motorist\": [\"m-ow1 t-er ih-s-t\", \"nn\"],\n  \"motorize\": [\"m-ow1-t-er-ay-z\", \"vb\"],\n  \"motorized\": [\"m-ow1 t-er ay-z-d\", \"vbn jj\"],\n  \"mottle\": [\"m-aa1 t-ah-l\", \"vb nn\"],\n  \"mottled\": [\"m-aa1 t-ah-l-d\", \"vbn jj\"],\n  \"motto\": [\"m-aa1 t-ow\", \"nn\"],\n  \"mould\": [\"m-ow1-l-d\", \"vb\"],\n  \"mound\": [\"m-aw1-n-d\", \"nn\"],\n  \"mount\": [\"m-aw1-n-t\", \"vb nn vbp\"],\n  \"mountain\": [\"m-aw1-n t-ah-n\", \"nn\"],\n  \"mountainous\": [\"m-aw1-n t-ah n-ah-s\", \"jj\"],\n  \"mountainside\": [\"m-aw1-n t-ah-n s-ay-d\", \"nn\"],\n  \"mountaintop\": [\"m-aw1-n t-ah-n t-aa-p\", \"nn\"],\n  \"mounted\": [\"m-aw1-n t-ah-d\", \"vbn jj vbd\"],\n  \"mounting\": [\"m-aw1-n t-ih-ng\", \"vbg jj nn\"],\n  \"mourn\": [\"m-ao1-r-n\", \"vb\"],\n  \"mourner\": [\"m-ao1-r n-er\", \"nn\"],\n  \"mournful\": [\"m-ao1-r-n f-ah-l\", \"jj\"],\n  \"mouse\": [\"m-aw1-s\", \"nn\"],\n  \"mousetrap\": [\"m-aw1-s t-r-ae-p\", \"nn\"],\n  \"mousse\": [\"m-uw1-s\", \"nn\"],\n  \"moustache\": [\"m-ah1 s-t-ae-sh\", \"nn\"],\n  \"mouth\": [\"m-aw1-th\", \"nn vb\"],\n  \"mouthful\": [\"m-aw1-th f-uh-l\", \"nn\"],\n  \"mouthpiece\": [\"m-aw1-th p-iy-s\", \"nn\"],\n  \"movable\": [\"m-uw1 v-ah b-ah-l\", \"jj nn\"],\n  \"move\": [\"m-uw1-v\", \"nn vbp vb\"],\n  \"movement\": [\"m-uw1-v m-ah-n-t\", \"nn\"],\n  \"mover\": [\"m-uw1 v-er\", \"nn\"],\n  \"movie\": [\"m-uw1 v-iy\", \"nn\"],\n  \"moviegoer\": [\"m-uw1 v-iy g-ow er\", \"nn\"],\n  \"moving\": [\"m-uw1 v-ih-ng\", \"vbg jj nn\"],\n  \"movingly\": [\"m-uw1 v-ih-ng l-iy\", \"rb\"],\n  \"mow\": [\"m-ow1\", \"vb\"],\n  \"mown\": [\"m-ow1-n\", \"vbn\"],\n  \"mower\": [\"m-ow1 er\", \"nn\"],\n  \"moxie\": [\"m-aa1-k s-iy\", \"nn\"],\n  \"much\": [\"m-ah1-ch\", \"jj dt nn rb\"],\n  \"muck\": [\"m-ah1-k\", \"nn vb\"],\n  \"mucky\": [\"m-ah1 k-iy\", \"jj\"],\n  \"mucosa\": [\"m-y-uw k-ow1 s-ah\", \"nn\"],\n  \"mucus\": [\"m-y-uw1 k-ah-s\", \"nn\"],\n  \"mud\": [\"m-ah1-d\", \"nn\"],\n  \"muddied\": [\"m-ah1 d-iy-d\", \"vbn jj\"],\n  \"muddle\": [\"m-ah1 d-ah-l\", \"nn vb\"],\n  \"muddleheaded\": [\"m-ah1 d-ah-l hh-eh d-ah-d\", \"jj\"],\n  \"muddy\": [\"m-ah1 d-iy\", \"jj\"],\n  \"mudslinging\": [\"m-ah1-d s-l-ih ng-ih-ng\", \"nn\"],\n  \"mudwagon\": [\"m-ah1-d w-ae g-ah-n\", \"nn\"],\n  \"muff\": [\"m-ah1-f\", \"nn\"],\n  \"muffin\": [\"m-ah1 f-ah-n\", \"nn\"],\n  \"muffle\": [\"m-ah1-f-ah-l\", \"vb\"],\n  \"muffled\": [\"m-ah1 f-ah-l-d\", \"jj vbd vbn\"],\n  \"muffler\": [\"m-ah1-f l-er\", \"nn\"],\n  \"mug\": [\"m-ah1-g\", \"nn\"],\n  \"mugged\": [\"m-ah1-g-d\", \"vbn\"],\n  \"mugger\": [\"m-ah1 g-er\", \"nn\"],\n  \"mugging\": [\"m-ah1 g-ih-ng\", \"nn\"],\n  \"muggy\": [\"m-ah1 g-iy\", \"jj\"],\n  \"mulatto\": [\"m-ah l-aa1 t-ow\", \"nn\"],\n  \"mulch\": [\"m-ah1-l-ch\", \"nn vb\"],\n  \"mule\": [\"m-y-uw1-l\", \"nn\"],\n  \"mull\": [\"m-ah1-l\", \"vb\"],\n  \"mullah\": [\"m-ah1 l-ah\", \"nn\"],\n  \"multicolored\": [\"m-ah-l t-iy k-ah1 l-er-d\", \"jj\"],\n  \"multifaceted\": [\"m-ah-l t-iy f-ae1 s-ah t-ih-d\", \"jj\"],\n  \"multilateral\": [\"m-ah-l t-ih l-ae1 t-er ah-l\", \"jj\"],\n  \"multilayered\": [\"m-ah-l t-iy l-ey1 er-d\", \"jj\"],\n  \"multilevel\": [\"m-ah-l t-ay l-eh1 v-ah-l\", \"jj\"],\n  \"multilingual\": [\"m-ah-l t-iy l-ih1-ng w-ah-l\", \"jj\"],\n  \"multinational\": [\"m-ah-l t-ay n-ae1 sh-ah n-ah-l\", \"jj\"],\n  \"multipart\": [\"m-ah1-l t-iy p-aa-r-t\", \"jj\"],\n  \"multiparty\": [\"m-ah1-l t-iy p-aa-r t-iy\", \"nn jj\"],\n  \"multiple\": [\"m-ah1-l t-ah p-ah-l\", \"jj nn\"],\n  \"multiplexer\": [\"m-ah1-l t-iy p-l-eh-k s-er\", \"nn\"],\n  \"multiplication\": [\"m-ah-l t-ah p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"multiplicity\": [\"m-ah-l t-ah p-l-ih1 s-ih t-iy\", \"nn\"],\n  \"multiply\": [\"m-ah1-l t-ah p-l-ay\", \"vb vbp\"],\n  \"multipurpose\": [\"m-ah-l t-iy p-er1 p-ah-s\", \"jj\"],\n  \"multistate\": [\"m-ah1-l t-iy s-t-ey1-t\", \"nn\"],\n  \"multitask\": [\"m-ah1-l-t-iy-t-ae-s-k\", \"vb\"],\n  \"multitude\": [\"m-ah1-l t-ah t-uw-d\", \"nn\"],\n  \"multivalve\": [\"m-ah1-l t-iy v-ae-l-v\", \"jj\"],\n  \"multiyear\": [\"m-ah1-l t-iy y-iy1-r\", \"jj\"],\n  \"mum\": [\"m-ah1-m\", \"jj nn\"],\n  \"mumble\": [\"m-ah1-m b-ah-l\", \"nn vb\"],\n  \"mumbo\": [\"m-ah1-m b-ow\", \"nn\"],\n  \"mummified\": [\"m-ah1 m-ih f-ay-d\", \"vbn\"],\n  \"mummify\": [\"m-ah1-m-ah-f-ay\", \"vb\"],\n  \"mummy\": [\"m-ah1 m-iy\", \"nn\"],\n  \"munch\": [\"m-ah1-n-ch\", \"vb\"],\n  \"mundane\": [\"m-ah-n d-ey1-n\", \"jj\"],\n  \"municipal\": [\"m-y-uw n-ih1 s-ah p-ah-l\", \"jj nn\"],\n  \"municipality\": [\"m-y-uw n-ih s-ah p-ae1 l-ah t-iy\", \"nn\"],\n  \"municipally\": [\"m-y-uw n-ih1 s-ih p-ah l-iy\", \"rb\"],\n  \"munition\": [\"m-y-uw n-ih1 sh-ah-n\", \"nn\"],\n  \"mural\": [\"m-y-uh1 r-ah-l\", \"nn\"],\n  \"murder\": [\"m-er1 d-er\", \"nn vb\"],\n  \"murdered\": [\"m-er1 d-er-d\", \"vbn vbd jj\"],\n  \"murderer\": [\"m-er1 d-er er\", \"nn\"],\n  \"murdering\": [\"m-er1 d-er ih-ng\", \"vbg jj\"],\n  \"murderous\": [\"m-er1 d-er ah-s\", \"jj\"],\n  \"murkier\": [\"m-er1 k-iy er\", \"jjr\"],\n  \"murky\": [\"m-er1 k-iy\", \"jj\"],\n  \"murmur\": [\"m-er1 m-er\", \"nn vb\"],\n  \"muscat\": [\"m-ah1-s k-ae-t\", \"jj\"],\n  \"muscle\": [\"m-ah1 s-ah-l\", \"nn vb\"],\n  \"muscular\": [\"m-ah1-s k-y-ah l-er\", \"jj\"],\n  \"musculature\": [\"m-ah1-s k-y-ah l-ah ch-er\", \"nn\"],\n  \"muse\": [\"m-y-uw1-z\", \"nn vb\"],\n  \"museum\": [\"m-y-uw z-iy1 ah-m\", \"nn\"],\n  \"mush\": [\"m-ah1-sh\", \"nn\"],\n  \"mushroom\": [\"m-ah1-sh r-uw-m\", \"nn vbp vb\"],\n  \"mushrooming\": [\"m-ah1-sh r-uh m-ih-ng\", \"nn\"],\n  \"mushy\": [\"m-ah1 sh-iy\", \"jj\"],\n  \"music\": [\"m-y-uw1 z-ih-k\", \"nn\"],\n  \"musical\": [\"m-y-uw1 z-ih k-ah-l\", \"jj nn\"],\n  \"musicality\": [\"m-y-uw z-ih k-ae1 l-ah t-iy\", \"nn\"],\n  \"musically\": [\"m-y-uw1 z-ih-k l-iy\", \"rb\"],\n  \"musician\": [\"m-y-uw z-ih1 sh-ah-n\", \"nn\"],\n  \"musk\": [\"m-ah1-s-k\", \"nn\"],\n  \"musket\": [\"m-ah1-s k-ah-t\", \"nn\"],\n  \"mussel\": [\"m-ah1 s-ah-l\", \"nn\"],\n  \"must\": [\"m-ah1-s-t\", \"md\"],\n  \"mustn't\": [\"m-ah1-s-t-ah-n-t\", \"md\"],\n  \"mustache\": [\"m-ah1 s-t-ae-sh\", \"nn\"],\n  \"mustached\": [\"m-ah1 s-t-ae-sh-t\", \"jj\"],\n  \"mustachioed\": [\"m-ah s-t-ae1 sh-iy ow-d\", \"jj\"],\n  \"mustard\": [\"m-ah1 s-t-er-d\", \"nn jj vb\"],\n  \"muster\": [\"m-ah1 s-t-er\", \"vb nn\"],\n  \"mutant\": [\"m-y-uw1 t-ah-n-t\", \"jj\"],\n  \"mutate\": [\"m-y-uw1 t-ey-t\", \"vb\"],\n  \"mutation\": [\"m-y-uw t-ey1 sh-ah-n\", \"nn\"],\n  \"mute\": [\"m-y-uw1-t\", \"jj vb\"],\n  \"muted\": [\"m-y-uw1 t-ih-d\", \"vbn vbd jj\"],\n  \"mutilate\": [\"m-y-uw1-t-ah-l-ey-t\", \"vb\"],\n  \"mutilated\": [\"m-y-uw1 t-ah l-ey t-ah-d\", \"vbn jj\"],\n  \"mutilation\": [\"m-y-uw t-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"mutineer\": [\"m-y-uw t-ah n-ih1-r\", \"nn\"],\n  \"mutinous\": [\"m-y-uw1 t-ah n-ah-s\", \"jj\"],\n  \"mutiny\": [\"m-y-uw1 t-ah n-iy\", \"nn\"],\n  \"mutt\": [\"m-ah1-t\", \"nn\"],\n  \"mutter\": [\"m-ah1 t-er\", \"vb\"],\n  \"mutton\": [\"m-ah1 t-ah-n\", \"nn\"],\n  \"mutual\": [\"m-y-uw1 ch-ah w-ah-l\", \"jj\"],\n  \"mutually\": [\"m-y-uw1 ch-uw ah l-iy\", \"rb\"],\n  \"muzzle\": [\"m-ah1 z-ah-l\", \"nn vb\"],\n  \"my\": [\"m-ay1\", \"prp$\"],\n  \"mycology\": [\"m-ay k-aa1 l-ah jh-iy\", \"nn\"],\n  \"myopia\": [\"m-ay ow1 p-iy ah\", \"nn\"],\n  \"myopic\": [\"m-ay aa1 p-ih-k\", \"jj\"],\n  \"myriad\": [\"m-ih1 r-iy ah-d\", \"jj nn\"],\n  \"myrrh\": [\"m-er1\", \"nn\"],\n  \"myrtle\": [\"m-er1 t-ah-l\", \"nn\"],\n  \"myself\": [\"m-ay s-eh1-l-f\", \"prp\"],\n  \"mysterious\": [\"m-ih s-t-ih1 r-iy ah-s\", \"jj\"],\n  \"mysteriously\": [\"m-ih s-t-ih1 r-iy ah-s l-iy\", \"rb\"],\n  \"mystery\": [\"m-ih1 s-t-er iy\", \"nn\"],\n  \"mystic\": [\"m-ih1 s-t-ih-k\", \"jj nn\"],\n  \"mystical\": [\"m-ih1 s-t-ih k-ah-l\", \"jj\"],\n  \"mysticism\": [\"m-ih1 s-t-ih s-ih z-ah-m\", \"nn\"],\n  \"mystified\": [\"m-ih1 s-t-ah f-ay-d\", \"vbn\"],\n  \"mystify\": [\"m-ih1-s-t-ah-f-ay\", \"vb\"],\n  \"mystique\": [\"m-ih s-t-iy1-k\", \"nn\"],\n  \"myth\": [\"m-ih1-th\", \"nn\"],\n  \"mythic\": [\"m-ih1 th-ih-k\", \"jj\"],\n  \"mythical\": [\"m-ih1 th-ah k-ah-l\", \"jj\"],\n  \"mythological\": [\"m-ih th-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"mythology\": [\"m-ah th-aa1 l-ah jh-iy\", \"nn\"],\n  \"nab\": [\"n-ae1-b\", \"vb\"],\n  \"nadir\": [\"n-ey1 d-er\", \"nn\"],\n  \"nag\": [\"n-ae1-g\", \"vb\"],\n  \"nagging\": [\"n-ae1 g-ih-ng\", \"jj vbg\"],\n  \"nail\": [\"n-ey1-l\", \"nn rb vb\"],\n  \"naive\": [\"n-ay iy1-v\", \"jj nn\"],\n  \"naively\": [\"n-aa iy1-v l-iy\", \"rb\"],\n  \"naivete\": [\"n-aa iy v-ah t-ey1\", \"nn\"],\n  \"naked\": [\"n-ey1 k-ah-d\", \"jj\"],\n  \"name\": [\"n-ey1-m\", \"nn vb uh vbp\"],\n  \"named\": [\"n-ey1-m-d\", \"vbn vbd jj\"],\n  \"nameless\": [\"n-ey1-m l-ah-s\", \"jj\"],\n  \"namely\": [\"n-ey1-m l-iy\", \"rb\"],\n  \"nameplate\": [\"n-ey1-m p-l-ey-t\", \"nn\"],\n  \"namesake\": [\"n-ey1-m s-ey-k\", \"nn\"],\n  \"nanny\": [\"n-ae1 n-iy\", \"nn\"],\n  \"nap\": [\"n-ae1-p\", \"nn vb vbp\"],\n  \"napkin\": [\"n-ae1-p k-ih-n\", \"nn\"],\n  \"narco\": [\"n-aa1-r k-ow\", \"nn\"],\n  \"narcolepsy\": [\"n-aa1-r k-ah l-eh-p s-iy\", \"nn\"],\n  \"narcotic\": [\"n-aa-r k-aa1 t-ih-k\", \"jj\"],\n  \"narrate\": [\"n-eh1-r-ey-t\", \"vb\"],\n  \"narration\": [\"n-eh r-ey1 sh-ah-n\", \"nn\"],\n  \"narrative\": [\"n-ae1 r-ah t-ih-v\", \"nn jj\"],\n  \"narrator\": [\"n-eh1 r-ey t-er\", \"nn\"],\n  \"narrow\": [\"n-eh1 r-ow\", \"jj vb\"],\n  \"narrower\": [\"n-eh1 r-ow er\", \"jjr\"],\n  \"narrowest\": [\"n-eh1 r-ow ah-s-t\", \"jjs\"],\n  \"narrowly\": [\"n-eh1 r-ow l-iy\", \"rb\"],\n  \"narrowness\": [\"n-eh1 r-ow n-ah-s\", \"nn\"],\n  \"nasal\": [\"n-ey1 z-ah-l\", \"jj\"],\n  \"nascent\": [\"n-ey1 s-ah-n-t\", \"jj\"],\n  \"nastier\": [\"n-ae1 s-t-iy er\", \"jjr\"],\n  \"nastiest\": [\"n-ae1 s-t-iy ah-s-t\", \"jjs\"],\n  \"nasty\": [\"n-ae1 s-t-iy\", \"jj\"],\n  \"natal\": [\"n-ey1 t-ah-l\", \"jj\"],\n  \"nation\": [\"n-ey1 sh-ah-n\", \"nn\"],\n  \"national\": [\"n-ae1 sh-ah n-ah-l\", \"jj nn rb\"],\n  \"nationalism\": [\"n-ae1 sh-ah-n ah l-ih z-ah-m\", \"nn\"],\n  \"nationalist\": [\"n-ae1 sh-ah-n ah l-ah-s-t\", \"jj nn\"],\n  \"nationalistic\": [\"n-ae sh-ah-n ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"nationality\": [\"n-ae sh-ah n-ae1 l-ah t-iy\", \"nn\"],\n  \"nationalization\": [\"n-ae sh-ah-n ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"nationalize\": [\"n-ae1 sh-ah-n ah l-ay-z\", \"vb\"],\n  \"nationalized\": [\"n-ae1 sh-ah-n ah l-ay-z-d\", \"vbd vbn jj\"],\n  \"nationally\": [\"n-ae1 sh-ah-n ah l-iy\", \"rb\"],\n  \"nationhood\": [\"n-ey1 sh-ah-n hh-uh-d\", \"nn\"],\n  \"nationwide\": [\"n-ey1 sh-ah-n w-ay1-d\", \"jj rb\"],\n  \"native\": [\"n-ey1 t-ih-v\", \"jj nn\"],\n  \"nattily\": [\"n-ae1 t-ah l-iy\", \"rb\"],\n  \"natty\": [\"n-ae1 t-iy\", \"jj\"],\n  \"natural\": [\"n-ae1 ch-er ah-l\", \"jj nn\"],\n  \"naturalism\": [\"n-ae1 ch-er ah l-ih z-ah-m\", \"nn\"],\n  \"naturalist\": [\"n-ae1 ch-er ah l-ah-s-t\", \"nn\"],\n  \"naturalistic\": [\"n-ae ch-er ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"naturalize\": [\"n-ae1-ch-er-ah-l-ay-z\", \"vb\"],\n  \"naturalized\": [\"n-ae1 ch-er ah l-ay-z-d\", \"vbn jj\"],\n  \"naturally\": [\"n-ae1 ch-er ah l-iy\", \"rb\"],\n  \"nature\": [\"n-ey1 ch-er\", \"nn jj\"],\n  \"natured\": [\"n-ey1 ch-er-d\", \"jj\"],\n  \"naught\": [\"n-ao1-t\", \"nn\"],\n  \"naughty\": [\"n-ao1 t-iy\", \"jj\"],\n  \"nausea\": [\"n-ao1 z-iy ah\", \"nn\"],\n  \"nauseate\": [\"n-ao1-z-iy-ey-t\", \"vb\"],\n  \"nauseated\": [\"n-ao1 z-iy ey t-ah-d\", \"vbn jj\"],\n  \"nautical\": [\"n-ao1 t-ah k-ah-l\", \"jj\"],\n  \"naval\": [\"n-ey1 v-ah-l\", \"jj\"],\n  \"navel\": [\"n-ey1 v-ah-l\", \"nn\"],\n  \"navigable\": [\"n-ae1 v-ah g-ah b-ah-l\", \"jj\"],\n  \"navigate\": [\"n-ae1 v-ah g-ey-t\", \"vb\"],\n  \"navigation\": [\"n-ae1 v-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"navigational\": [\"n-ae v-ah g-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"navigator\": [\"n-ae1 v-ah g-ey t-er\", \"nn\"],\n  \"navy\": [\"n-ey1 v-iy\", \"nn jj\"],\n  \"nay\": [\"n-ey1\", \"rb\"],\n  \"naysayer\": [\"n-ey s-ey1 er\", \"nn\"],\n  \"near\": [\"n-ih1-r\", \"in rb vb jj\"],\n  \"nearby\": [\"n-ih1-r b-ay1\", \"jj rb\"],\n  \"nearer\": [\"n-ih1 r-er\", \"jjr in rbr\"],\n  \"nearest\": [\"n-ih1 r-ah-s-t\", \"jjs rbs in\"],\n  \"nearly\": [\"n-ih1-r l-iy\", \"rb\"],\n  \"nearsighted\": [\"n-iy1-r s-ay t-ih-d\", \"jj\"],\n  \"neat\": [\"n-iy1-t\", \"jj\"],\n  \"neater\": [\"n-iy1 t-er\", \"rbr\"],\n  \"neatest\": [\"n-iy1 t-ah-s-t\", \"jjs\"],\n  \"neatly\": [\"n-iy1-t l-iy\", \"rb\"],\n  \"neatness\": [\"n-iy1-t n-ah-s\", \"nn\"],\n  \"nebula\": [\"n-eh1 b-y-ah l-ah\", \"nn\"],\n  \"nebulous\": [\"n-eh1 b-y-ah l-ah-s\", \"jj\"],\n  \"necessarily\": [\"n-eh s-ah s-eh1 r-ah l-iy\", \"rb\"],\n  \"necessary\": [\"n-eh1 s-ah s-eh r-iy\", \"jj\"],\n  \"necessitate\": [\"n-ah s-eh1 s-ah t-ey-t\", \"vbp vb\"],\n  \"necessity\": [\"n-ah s-eh1 s-ah t-iy\", \"nn\"],\n  \"neck\": [\"n-eh1-k\", \"nn rb vb\"],\n  \"necklace\": [\"n-eh1-k l-ah-s\", \"nn\"],\n  \"necktie\": [\"n-eh1-k t-ay\", \"nn\"],\n  \"necrosis\": [\"n-ah k-r-ow1 s-ah-s\", \"nn\"],\n  \"nectar\": [\"n-eh1-k t-er\", \"nn\"],\n  \"need\": [\"n-iy1-d\", \"nn vbp md vb\"],\n  \"needed\": [\"n-iy1 d-ah-d\", \"vbn jj vbd\"],\n  \"needle\": [\"n-iy1 d-ah-l\", \"nn vb\"],\n  \"needlelike\": [\"n-iy1 d-ah-l l-ay-k\", \"jj\"],\n  \"needless\": [\"n-iy1-d l-ah-s\", \"jj\"],\n  \"needlessly\": [\"n-iy1-d l-ah-s l-iy\", \"rb\"],\n  \"needy\": [\"n-iy1 d-iy\", \"jj\"],\n  \"negate\": [\"n-ih g-ey1-t\", \"vb\"],\n  \"negative\": [\"n-eh1 g-ah t-ih-v\", \"jj nn\"],\n  \"negatively\": [\"n-eh1 g-ah t-ih-v l-iy\", \"rb\"],\n  \"negativism\": [\"n-eh1 g-ah t-ih v-ih z-ah-m\", \"nn\"],\n  \"neglect\": [\"n-ah g-l-eh1-k-t\", \"nn vb vbp\"],\n  \"neglected\": [\"n-ah g-l-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"negligence\": [\"n-eh1-g l-ah jh-ah-n-s\", \"nn\"],\n  \"negligent\": [\"n-eh1-g l-ah jh-ah-n-t\", \"jj\"],\n  \"negligently\": [\"n-eh1-g l-ih jh-ah-n-t l-iy\", \"rb\"],\n  \"negligible\": [\"n-eh1-g l-ah jh-ah b-ah-l\", \"jj\"],\n  \"negotiable\": [\"n-ah g-ow1 sh-ah b-ah-l\", \"jj\"],\n  \"negotiate\": [\"n-ah g-ow1 sh-iy ey-t\", \"vb vbp\"],\n  \"negotiated\": [\"n-ah g-ow1 sh-iy ey t-ah-d\", \"vbn jj vbd\"],\n  \"negotiating\": [\"n-ih g-ow1 sh-iy ey t-ih-ng\", \"vbg jj nn\"],\n  \"negotiation\": [\"n-ih g-ow sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"negotiator\": [\"n-ah g-ow1 sh-iy ey t-er\", \"nn\"],\n  \"neighbor\": [\"n-ey1 b-er\", \"nn vb\"],\n  \"neighborhood\": [\"n-ey1 b-er hh-uh-d\", \"nn\"],\n  \"neighboring\": [\"n-ey1 b-er ih-ng\", \"vbg jj\"],\n  \"neighborly\": [\"n-ey1 b-er l-iy\", \"jj\"],\n  \"neither\": [\"n-iy1 dh-er\", \"dt nn rb cc\"],\n  \"nemesis\": [\"n-eh1 m-ah s-ih-s\", \"nn\"],\n  \"neoclassical\": [\"n-iy ow k-l-ae1 s-ih k-ah-l\", \"jj\"],\n  \"neoconservative\": [\"n-iy ow k-ah-n s-er1 v-ah t-ih-v\", \"jj\"],\n  \"neoliberal\": [\"n-iy ow l-ih1 b-er ah-l\", \"jj\"],\n  \"neon\": [\"n-iy1 aa-n\", \"nn\"],\n  \"neonatal\": [\"n-iy ow n-ey1 t-ah-l\", \"jj\"],\n  \"neophyte\": [\"n-iy1 ah f-ay-t\", \"jj nn\"],\n  \"nephew\": [\"n-eh1 f-y-uw\", \"nn\"],\n  \"nepotism\": [\"n-eh1 p-ah t-ih z-ah-m\", \"nn\"],\n  \"nerd\": [\"n-er1-d\", \"nn\"],\n  \"nerdy\": [\"n-er1 d-iy\", \"jj\"],\n  \"nerve\": [\"n-er1-v\", \"nn\"],\n  \"nervous\": [\"n-er1 v-ah-s\", \"jj\"],\n  \"nervously\": [\"n-er1 v-ah-s l-iy\", \"rb\"],\n  \"nervousness\": [\"n-er1 v-ah-s n-ah-s\", \"nn\"],\n  \"nervy\": [\"n-er1 v-iy\", \"jj\"],\n  \"nest\": [\"n-eh1-s-t\", \"nn vb vbp\"],\n  \"nester\": [\"n-eh1 s-t-er\", \"nn\"],\n  \"nesting\": [\"n-eh1 s-t-ih-ng\", \"vbg jj nn\"],\n  \"nestle\": [\"n-eh1-s-ah-l\", \"vb\"],\n  \"nestling\": [\"n-eh1-s-t l-ih-ng\", \"nn\"],\n  \"net\": [\"n-eh1-t\", \"jj nn vb\"],\n  \"nether\": [\"n-eh1 dh-er\", \"jj cc\"],\n  \"nettle\": [\"n-eh1-t-ah-l\", \"vb\"],\n  \"nettlesome\": [\"n-eh1 t-ah-l s-ah-m\", \"jj\"],\n  \"network\": [\"n-eh1-t w-er-k\", \"nn vb\"],\n  \"neural\": [\"n-uh1 r-ah-l\", \"jj\"],\n  \"neurological\": [\"n-uh r-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"neurologist\": [\"n-uh r-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"neuropathy\": [\"n-uh1 r-ow p-ae th-iy\", \"nn\"],\n  \"neurosurgeon\": [\"n-uh1 r-ow s-er jh-ah-n\", \"nn\"],\n  \"neurotic\": [\"n-uh r-aa1 t-ih-k\", \"jj\"],\n  \"neuter\": [\"n-uw1 t-er\", \"nn vb\"],\n  \"neutral\": [\"n-uw1 t-r-ah-l\", \"jj\"],\n  \"neutrality\": [\"n-uw t-r-ae1 l-ah t-iy\", \"nn\"],\n  \"neutralization\": [\"n-uw t-r-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"neutralize\": [\"n-uw1 t-r-ah l-ay-z\", \"vb\"],\n  \"neutrino\": [\"n-uw t-r-iy1 n-ow\", \"nn\"],\n  \"neutron\": [\"n-uw1 t-r-aa-n\", \"nn\"],\n  \"never\": [\"n-eh1 v-er\", \"rb rbr\"],\n  \"nevertheless\": [\"n-eh v-er dh-ah l-eh1-s\", \"rb\"],\n  \"new\": [\"n-uw1\", \"jj\"],\n  \"newborn\": [\"n-uw1 b-ao-r-n\", \"jj\"],\n  \"newcomer\": [\"n-uw1 k-ah m-er\", \"nn\"],\n  \"newer\": [\"n-uw1 er\", \"jjr\"],\n  \"newest\": [\"n-uw1 ah-s-t\", \"jjs jj\"],\n  \"newfangled\": [\"n-uw f-ae1-ng g-ah-l-d\", \"jj\"],\n  \"newfound\": [\"n-uw1 f-aw1-n-d\", \"jj\"],\n  \"newly\": [\"n-uw1 l-iy\", \"rb jj\"],\n  \"newlywed\": [\"n-uw1 l-iy w-eh-d\", \"nn\"],\n  \"news\": [\"n-uw1-z\", \"nn\"],\n  \"newscast\": [\"n-uw1-z k-ae-s-t\", \"nn\"],\n  \"newscaster\": [\"n-uw1-z k-ae s-t-er\", \"nn\"],\n  \"newsletter\": [\"n-uw1-z l-eh t-er\", \"nn\"],\n  \"newsmaker\": [\"n-uw1-z m-ey k-er\", \"nn\"],\n  \"newsman\": [\"n-uw1-z m-ae-n\", \"nn\"],\n  \"newspaper\": [\"n-uw1-z p-ey p-er\", \"nn\"],\n  \"newspaperman\": [\"n-uw1-z p-ey p-er m-ae-n\", \"nn\"],\n  \"newsprint\": [\"n-uw1-z p-r-ih-n-t\", \"nn\"],\n  \"newsreel\": [\"n-uw1-z r-iy-l\", \"nn\"],\n  \"newsroom\": [\"n-uw1-z r-uw-m\", \"nn\"],\n  \"newsstand\": [\"n-uw1-z s-t-ae-n-d\", \"nn\"],\n  \"newsweekly\": [\"n-uw1-z w-iy-k l-iy\", \"rb\"],\n  \"newswire\": [\"n-uw1-z w-ay-r\", \"nn\"],\n  \"newsworthy\": [\"n-uw1-z w-er dh-iy\", \"jj\"],\n  \"newt\": [\"n-uw1-t\", \"nn\"],\n  \"next\": [\"n-eh1-k-s-t\", \"jj in rb\"],\n  \"nexus\": [\"n-eh1-k s-ah-s\", \"nn\"],\n  \"nib\": [\"n-ih1-b\", \"nn\"],\n  \"nibble\": [\"n-ih1 b-ah-l\", \"vb nn\"],\n  \"nice\": [\"n-ay1-s\", \"jj\"],\n  \"nicely\": [\"n-ay1-s l-iy\", \"rb\"],\n  \"nicer\": [\"n-ay1 s-er\", \"jjr\"],\n  \"nicest\": [\"n-ay1 s-ih-s-t\", \"jjs\"],\n  \"nicety\": [\"n-ay1 s-ih t-iy\", \"nn\"],\n  \"niche\": [\"n-ih1-ch\", \"nn\"],\n  \"nick\": [\"n-ih1-k\", \"vb\"],\n  \"nickel\": [\"n-ih1 k-ah-l\", \"nn jj\"],\n  \"nickname\": [\"n-ih1-k n-ey-m\", \"nn vb vbp\"],\n  \"nicotine\": [\"n-ih1 k-ah t-iy-n\", \"nn\"],\n  \"niece\": [\"n-iy1-s\", \"nn\"],\n  \"nifty\": [\"n-ih1-f t-iy\", \"jj\"],\n  \"niggardly\": [\"n-ih1 g-er-d l-iy\", \"jj\"],\n  \"night\": [\"n-ay1-t\", \"nn rb\"],\n  \"nightclub\": [\"n-ay1-t k-l-ah-b\", \"nn\"],\n  \"nighter\": [\"n-ay1 t-er\", \"nn\"],\n  \"nightfall\": [\"n-ay1-t f-ao-l\", \"nn\"],\n  \"nightingale\": [\"n-ay1 t-ih-ng g-ey-l\", \"nn\"],\n  \"nightly\": [\"n-ay1-t l-iy\", \"jj rb\"],\n  \"nightmare\": [\"n-ay1-t m-eh-r\", \"nn\"],\n  \"nightmarish\": [\"n-ay1-t m-eh r-ih-sh\", \"jj\"],\n  \"nightshirt\": [\"n-ay1 ch-er-t\", \"nn\"],\n  \"nighttime\": [\"n-ay1-t t-ay-m\", \"jj nn\"],\n  \"nihilism\": [\"n-ay1 ah l-ih z-ah-m\", \"nn\"],\n  \"nilly\": [\"n-ih1 l-iy\", \"rb\"],\n  \"nimble\": [\"n-ih1-m b-ah-l\", \"jj\"],\n  \"nimbly\": [\"n-ih1-m b-l-iy\", \"rb\"],\n  \"nine\": [\"n-ih1-n\", \"cd\"],\n  \"ninefold\": [\"n-ih1-n f-ow-l-d\", \"jj rb\"],\n  \"ninety\": [\"n-ay1-n t-iy\", \"nn\"],\n  \"ninth\": [\"n-ay1-n-th\", \"jj\"],\n  \"nip\": [\"n-ih1-p\", \"vb\"],\n  \"nirvana\": [\"n-ih-r v-aa1 n-ah\", \"nn\"],\n  \"nitpicking\": [\"n-ih1-t p-ih k-ih-ng\", \"jj\"],\n  \"nitrate\": [\"n-ay1 t-r-ey-t\", \"nn\"],\n  \"nitrogen\": [\"n-ay1 t-r-ah jh-ah-n\", \"nn\"],\n  \"nitrous\": [\"n-ih1 t-r-ah-s\", \"nn\"],\n  \"nix\": [\"n-ih1-k-s\", \"vb\"],\n  \"no\": [\"n-ow1\", \"dt jj nn rb uh\"],\n  \"nobility\": [\"n-ow b-ih1 l-ah t-iy\", \"nn\"],\n  \"noble\": [\"n-ow1 b-ah-l\", \"jj\"],\n  \"nobleman\": [\"n-ow1 b-ah-l m-ah-n\", \"nn\"],\n  \"nobly\": [\"n-aa1 b-l-iy\", \"rb\"],\n  \"nobody\": [\"n-ow1 b-aa d-iy\", \"nn\"],\n  \"nocturnal\": [\"n-aa-k t-er1 n-ah-l\", \"jj\"],\n  \"nod\": [\"n-aa1-d\", \"nn vb vbp\"],\n  \"nodding\": [\"n-aa1 d-ih-ng\", \"vbg jj\"],\n  \"node\": [\"n-ow1-d\", \"nn\"],\n  \"nodular\": [\"n-aa1 jh-ah l-er\", \"jj\"],\n  \"nodule\": [\"n-aa1 jh-uw-l\", \"nn\"],\n  \"noise\": [\"n-oy1-z\", \"nn\"],\n  \"noisier\": [\"n-oy1 z-iy er\", \"jjr\"],\n  \"noisily\": [\"n-oy1 z-ah l-iy\", \"rb\"],\n  \"noisy\": [\"n-oy1 z-iy\", \"jj\"],\n  \"nomad\": [\"n-ow1 m-ae-d\", \"nn\"],\n  \"nomadic\": [\"n-ow m-ae1 d-ih-k\", \"jj\"],\n  \"nomenclature\": [\"n-ow1 m-ah-n k-l-ey ch-er\", \"nn\"],\n  \"nominal\": [\"n-aa1 m-ah n-ah-l\", \"jj nn\"],\n  \"nominally\": [\"n-aa1 m-ah n-ah l-iy\", \"rb\"],\n  \"nominate\": [\"n-aa1 m-ah n-ah-t\", \"vb vbp\"],\n  \"nomination\": [\"n-aa m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"nominee\": [\"n-aa m-ah n-iy1\", \"nn\"],\n  \"nonbinding\": [\"n-aa1-n b-ay1-n d-ih-ng\", \"jj\"],\n  \"nonchalant\": [\"n-aa-n sh-ah l-aa1-n-t\", \"jj\"],\n  \"noncombatant\": [\"n-aa-n k-ah-m b-ae1 t-ah-n-t\", \"jj\"],\n  \"noncommittal\": [\"n-aa1-n k-ah m-ih1 t-ah-l\", \"jj\"],\n  \"noncompliance\": [\"n-aa-n k-ah-m p-l-ay1 ah-n-s\", \"nn\"],\n  \"nonconformist\": [\"n-aa-n k-ah-n f-ao1-r m-ih-s-t\", \"nn\"],\n  \"nondescript\": [\"n-aa1-n d-ih s-k-r-ih1-p-t\", \"jj\"],\n  \"nondurable\": [\"n-aa-n d-uh1 r-ah b-ah-l\", \"jj\"],\n  \"none\": [\"n-ah1-n\", \"nn\"],\n  \"nonentity\": [\"n-aa-n eh1-n t-ah t-iy\", \"nn\"],\n  \"nonessential\": [\"n-aa-n ih s-eh1-n ch-ah-l\", \"jj\"],\n  \"nonetheless\": [\"n-ah-n dh-ah l-eh1-s\", \"rb\"],\n  \"nonevent\": [\"n-aa1-n ih v-eh1-n-t\", \"nn\"],\n  \"nonexistent\": [\"n-aa-n ah-g z-ih1 s-t-ah-n-t\", \"jj\"],\n  \"nonfat\": [\"n-aa1-n f-ae1-t\", \"jj\"],\n  \"nonferrous\": [\"n-aa-n f-eh1 r-ah-s\", \"jj\"],\n  \"nonfiction\": [\"n-aa-n f-ih1-k sh-ah-n\", \"nn\"],\n  \"nonlethal\": [\"n-aa-n l-iy1 th-ah-l\", \"jj\"],\n  \"nonmember\": [\"n-aa-n m-eh1-m b-er\", \"nn\"],\n  \"nonpartisan\": [\"n-aa-n p-aa1-r t-ah z-ah-n\", \"jj\"],\n  \"nonpaying\": [\"n-aa-n p-ey1 ih-ng\", \"jj\"],\n  \"nonpayment\": [\"n-aa-n p-ey1 m-ah-n-t\", \"nn\"],\n  \"nonpoisonous\": [\"n-aa-n p-oy1 z-ah n-ah-s\", \"jj\"],\n  \"nonproductive\": [\"n-aa-n p-r-ah d-ah1-k t-ih-v\", \"jj\"],\n  \"nonprofit\": [\"n-aa-n p-r-aa1 f-ah-t\", \"nn jj\"],\n  \"nonrecurring\": [\"n-aa-n r-ih k-er1 ih-ng\", \"jj\"],\n  \"nonsense\": [\"n-aa1-n s-eh-n-s\", \"nn jj\"],\n  \"nonsensical\": [\"n-aa-n s-eh1-n s-ih k-ah-l\", \"jj\"],\n  \"nonsmoker\": [\"n-aa-n s-m-ow1 k-er\", \"nn\"],\n  \"nonspecific\": [\"n-aa-n s-p-ah s-ih1 f-ih-k\", \"jj\"],\n  \"nonstandard\": [\"n-aa-n s-t-ae1-n d-er-d\", \"jj\"],\n  \"nonstop\": [\"n-aa-n s-t-aa1-p\", \"jj nn rb\"],\n  \"nontoxic\": [\"n-aa-n t-aa1-k s-ih-k\", \"jj\"],\n  \"nonviolence\": [\"n-aa-n v-ay1 ah l-ah-n-s\", \"nn\"],\n  \"nonviolent\": [\"n-aa-n v-ay1 ah l-ah-n-t\", \"jj\"],\n  \"nonvoting\": [\"n-aa-n v-ow1 t-ih-ng\", \"jj\"],\n  \"noodle\": [\"n-uw1 d-ah-l\", \"nn\"],\n  \"nook\": [\"n-uh1-k\", \"nn\"],\n  \"noon\": [\"n-uw1-n\", \"nn\"],\n  \"noose\": [\"n-uw1-s\", \"nn\"],\n  \"norm\": [\"n-ao1-r-m\", \"nn\"],\n  \"normal\": [\"n-ao1-r m-ah-l\", \"jj rb\"],\n  \"normalcy\": [\"n-ao1-r m-ah-l s-iy\", \"nn\"],\n  \"normalization\": [\"n-ao-r m-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"normalize\": [\"n-ao1-r m-ah l-ay-z\", \"vb\"],\n  \"normally\": [\"n-ao1-r m-ah l-iy\", \"rb\"],\n  \"normative\": [\"n-ao1-r m-ah t-ih-v\", \"jj\"],\n  \"north\": [\"n-ao1-r-th\", \"rb jj nn\"],\n  \"northeast\": [\"n-ao-r-th iy1-s-t\", \"nn jj rb\"],\n  \"northeastern\": [\"n-ao-r-th iy1 s-t-er-n\", \"jj\"],\n  \"northerly\": [\"n-ao1-r dh-er l-iy\", \"jj\"],\n  \"northern\": [\"n-ao1-r dh-er-n\", \"jj\"],\n  \"northerner\": [\"n-ao1-r dh-er n-er\", \"nn\"],\n  \"northernmost\": [\"n-ao1-r dh-er-n m-ow-s-t\", \"jj\"],\n  \"northward\": [\"n-ao1-r-th w-er-d\", \"rb\"],\n  \"northwest\": [\"n-ao-r-th w-eh1-s-t\", \"rb nn jjs jj\"],\n  \"northwestern\": [\"n-ao-r-th w-eh1 s-t-er-n\", \"jj\"],\n  \"nose\": [\"n-ow1-z\", \"nn vb\"],\n  \"nosebleed\": [\"n-ow1-z b-l-iy-d\", \"nn\"],\n  \"nosedive\": [\"n-ow1-z d-ay-v\", \"nn jj vb\"],\n  \"nostalgia\": [\"n-ao s-t-ae1-l jh-ah\", \"nn\"],\n  \"nostalgic\": [\"n-ao s-t-ae1-l jh-ih-k\", \"jj\"],\n  \"nostril\": [\"n-aa1-s t-r-ah-l\", \"nn\"],\n  \"nostrum\": [\"n-aa1-s t-r-ah-m\", \"nn\"],\n  \"nosy\": [\"n-ow1 z-iy\", \"jj\"],\n  \"not\": [\"n-aa1-t\", \"rb\"],\n  \"notable\": [\"n-ow1 t-ah b-ah-l\", \"jj\"],\n  \"notably\": [\"n-ow1 t-ah b-l-iy\", \"rb\"],\n  \"notation\": [\"n-ow t-ey1 sh-ah-n\", \"nn\"],\n  \"notch\": [\"n-aa1-ch\", \"nn vb\"],\n  \"note\": [\"n-ow1-t\", \"nn vbp vb\"],\n  \"notebook\": [\"n-ow1-t b-uh-k\", \"nn\"],\n  \"noted\": [\"n-ow1 t-ah-d\", \"vbd jj vbn\"],\n  \"noteholder\": [\"n-ow1-t hh-ow-l d-er\", \"nn\"],\n  \"noteworthy\": [\"n-ow1-t w-er dh-iy\", \"jj\"],\n  \"nothing\": [\"n-ah1 th-ih-ng\", \"nn\"],\n  \"nothingness\": [\"n-ah1 th-ih-ng n-ah-s\", \"nn\"],\n  \"notice\": [\"n-ow1 t-ah-s\", \"nn vb vbp\"],\n  \"noticeable\": [\"n-ow1 t-ah s-ah b-ah-l\", \"jj\"],\n  \"noticeably\": [\"n-ow1 t-ih s-ah b-l-iy\", \"rb\"],\n  \"noticed\": [\"n-ow1 t-ah-s-t\", \"vbd vbn jj\"],\n  \"notification\": [\"n-ow t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"notify\": [\"n-ow1 t-ah f-ay\", \"vb vbp\"],\n  \"notion\": [\"n-ow1 sh-ah-n\", \"nn\"],\n  \"notoriety\": [\"n-ow t-er ay1 ah t-iy\", \"nn\"],\n  \"notorious\": [\"n-ow t-ao1 r-iy ah-s\", \"jj\"],\n  \"notoriously\": [\"n-ow t-ao1 r-iy ah-s l-iy\", \"rb\"],\n  \"noun\": [\"n-aw1-n\", \"nn\"],\n  \"nourish\": [\"n-er1 ih-sh\", \"vb\"],\n  \"nourished\": [\"n-er1 ih-sh-t\", \"vbn jj\"],\n  \"nourishment\": [\"n-er1 ih-sh m-ah-n-t\", \"nn\"],\n  \"novel\": [\"n-aa1 v-ah-l\", \"nn jj\"],\n  \"novelist\": [\"n-aa1 v-ah l-ah-s-t\", \"nn\"],\n  \"novelistic\": [\"n-aa v-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"novelty\": [\"n-aa1 v-ah-l t-iy\", \"nn\"],\n  \"novice\": [\"n-aa1 v-ah-s\", \"nn jj\"],\n  \"now\": [\"n-aw1\", \"rb jj nn uh\"],\n  \"nowadays\": [\"n-aw1 ah d-ey-z\", \"rb\"],\n  \"nowhere\": [\"n-ow1 w-eh-r\", \"rb nn\"],\n  \"noxious\": [\"n-aa1-k sh-ah-s\", \"jj\"],\n  \"nozzle\": [\"n-aa1 z-ah-l\", \"nn\"],\n  \"nuance\": [\"n-uw1 aa-n-s\", \"nn\"],\n  \"nuclear\": [\"n-uw1-k l-iy er\", \"jj\"],\n  \"nucleus\": [\"n-uw1 k-l-iy ah-s\", \"nn\"],\n  \"nude\": [\"n-uw1-d\", \"jj nn\"],\n  \"nudge\": [\"n-ah1-jh\", \"vb nn\"],\n  \"nudist\": [\"n-uw1 d-ih-s-t\", \"jj\"],\n  \"nudity\": [\"n-uw1 d-ih t-iy\", \"nn\"],\n  \"nugget\": [\"n-ah1 g-ih-t\", \"nn\"],\n  \"nuisance\": [\"n-uw1 s-ah-n-s\", \"nn jj\"],\n  \"nuke\": [\"n-uw1-k\", \"nn vb\"],\n  \"null\": [\"n-ah1-l\", \"jj\"],\n  \"nullified\": [\"n-ah1 l-ah f-ay-d\", \"vbn vbd\"],\n  \"nullify\": [\"n-ah1 l-ah f-ay\", \"vb vbp\"],\n  \"numb\": [\"n-ah1-m\", \"jj vb\"],\n  \"number\": [\"n-ah1-m b-er\", \"nn vb vbp\"],\n  \"numbing\": [\"n-ah1 m-ih-ng\", \"jj\"],\n  \"numbingly\": [\"n-ah1 m-ih-ng l-iy\", \"rb\"],\n  \"numbness\": [\"n-ah1-m n-ah-s\", \"nn\"],\n  \"numeral\": [\"n-uw1 m-er ah-l\", \"nn\"],\n  \"numerical\": [\"n-uw m-eh1 r-ah k-ah-l\", \"jj\"],\n  \"numerically\": [\"n-uw m-eh1 r-ih-k l-iy\", \"rb\"],\n  \"numerous\": [\"n-uw1 m-er ah-s\", \"jj\"],\n  \"nun\": [\"n-ah1-n\", \"nn\"],\n  \"nurse\": [\"n-er1-s\", \"nn vb\"],\n  \"nursery\": [\"n-er1 s-er iy\", \"nn\"],\n  \"nurture\": [\"n-er1 ch-er\", \"vb nn\"],\n  \"nurturer\": [\"n-er1 t-er er\", \"nn\"],\n  \"nut\": [\"n-ah1-t\", \"nn\"],\n  \"nutmeg\": [\"n-ah1-t m-eh-g\", \"nn\"],\n  \"nutrient\": [\"n-uw1 t-r-iy ah-n-t\", \"jj\"],\n  \"nutrition\": [\"n-uw t-r-ih1 sh-ah-n\", \"nn\"],\n  \"nutritional\": [\"n-uw t-r-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"nutritionist\": [\"n-uw t-r-ih1 sh-ah n-ih-s-t\", \"nn\"],\n  \"nutritious\": [\"n-uw t-r-ih1 sh-ah-s\", \"jj\"],\n  \"nutritive\": [\"n-uw1 t-r-ah t-ih-v\", \"jj\"],\n  \"nutshell\": [\"n-ah1 ch-eh-l\", \"nn\"],\n  \"nutty\": [\"n-ah1 t-iy\", \"jj\"],\n  \"nyet\": [\"n-y-eh1-t\", \"uh\"],\n  \"nylon\": [\"n-ay1 l-aa-n\", \"nn\"],\n  \"nymph\": [\"n-ih1-m-f\", \"nn\"],\n  \"nymphomaniac\": [\"n-ih-m f-ah m-ey1 n-iy ae-k\", \"nn jj\"],\n  \"oak\": [\"ow1-k\", \"nn\"],\n  \"oasis\": [\"ow ey1 s-ih-s\", \"nn\"],\n  \"oat\": [\"ow1-t\", \"nn\"],\n  \"oath\": [\"ow1-th\", \"nn\"],\n  \"oatmeal\": [\"ow1-t m-iy-l\", \"nn\"],\n  \"obedience\": [\"ow b-iy1 d-iy ah-n-s\", \"nn\"],\n  \"obedient\": [\"ow b-iy1 d-iy ah-n-t\", \"jj\"],\n  \"obediently\": [\"ow b-iy1 d-iy ah-n-t l-iy\", \"rb\"],\n  \"obese\": [\"ow b-iy1-s\", \"jj\"],\n  \"obesity\": [\"ow b-iy1 s-ah t-iy\", \"nn\"],\n  \"obey\": [\"ow b-ey1\", \"vb vbp\"],\n  \"obfuscate\": [\"aa1-b f-ah-s k-ey-t\", \"vb\"],\n  \"obfuscation\": [\"aa-b f-ah s-k-ey1 sh-ah-n\", \"nn\"],\n  \"obituary\": [\"ow b-ih1 ch-uw eh r-iy\", \"nn\"],\n  \"object\": [\"aa1-b jh-eh-k-t\", \"nn vbp vb\"],\n  \"objection\": [\"ah-b jh-eh1-k sh-ah-n\", \"nn\"],\n  \"objectionable\": [\"ah-b jh-eh1-k sh-ah-n ah b-ah-l\", \"jj\"],\n  \"objective\": [\"ah-b jh-eh1-k t-ih-v\", \"nn jj\"],\n  \"objectively\": [\"aa-b jh-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"objectivity\": [\"aa-b jh-eh-k t-ih1 v-ih t-iy\", \"nn\"],\n  \"objector\": [\"ah-b jh-eh1-k t-er\", \"nn\"],\n  \"obligate\": [\"aa1-b-l-ah-g-ey-t\", \"vb\"],\n  \"obligated\": [\"aa1 b-l-ah g-ey t-ih-d\", \"vbn vbd jj\"],\n  \"obligation\": [\"aa b-l-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"obligatory\": [\"ah b-l-ih1 g-ah t-ao r-iy\", \"jj\"],\n  \"oblige\": [\"ah b-l-ay1-jh\", \"vb nn\"],\n  \"obliged\": [\"ah b-l-ay1-jh-d\", \"vbn jj vbd\"],\n  \"obliging\": [\"ah b-l-ay1 jh-ih-ng\", \"jj\"],\n  \"obligingly\": [\"ah b-l-ay1 jh-ih-ng l-iy\", \"rb\"],\n  \"oblique\": [\"ah b-l-iy1-k\", \"jj\"],\n  \"obliquely\": [\"ow b-l-iy1 k-l-iy\", \"rb\"],\n  \"obliterate\": [\"ah b-l-ih1 t-er ey-t\", \"vb\"],\n  \"oblivion\": [\"ah b-l-ih1 v-iy ah-n\", \"nn\"],\n  \"oblivious\": [\"ah b-l-ih1 v-iy ah-s\", \"jj\"],\n  \"oblong\": [\"aa1 b-l-ao-ng\", \"jj\"],\n  \"obnoxious\": [\"aa-b n-aa1-k sh-ah-s\", \"jj\"],\n  \"oboist\": [\"ow1 b-ow ah-s-t\", \"nn\"],\n  \"obscene\": [\"aa-b s-iy1-n\", \"jj\"],\n  \"obscenity\": [\"ah-b s-eh1 n-ih t-iy\", \"nn\"],\n  \"obscure\": [\"ah-b s-k-y-uh1-r\", \"jj vb\"],\n  \"obscured\": [\"ah-b s-k-y-uh1-r-d\", \"vbn jj vbd\"],\n  \"obscurity\": [\"ah-b s-k-y-uh1 r-ah t-iy\", \"nn\"],\n  \"obsequious\": [\"ah-b s-iy1 k-w-iy ah-s\", \"jj\"],\n  \"observable\": [\"ah-b z-er1 v-ah b-ah-l\", \"jj\"],\n  \"observance\": [\"ah-b z-er1 v-ah-n-s\", \"nn\"],\n  \"observant\": [\"ah-b z-er1 v-ah-n-t\", \"jj\"],\n  \"observation\": [\"aa-b z-er v-ey1 sh-ah-n\", \"nn\"],\n  \"observatory\": [\"ah-b z-er1 v-ah t-ao r-iy\", \"nn\"],\n  \"observe\": [\"ah-b z-er1-v\", \"vb vbp\"],\n  \"observed\": [\"ah-b z-er1-v-d\", \"vbn jj vbd\"],\n  \"observer\": [\"ah-b z-er1 v-er\", \"nn\"],\n  \"obsess\": [\"ah-b-s-eh1-s\", \"vb\"],\n  \"obsessed\": [\"ah-b s-eh1-s-t\", \"vbn jj\"],\n  \"obsession\": [\"ah-b s-eh1 sh-ah-n\", \"nn\"],\n  \"obsessive\": [\"ah-b s-eh1 s-ih-v\", \"jj nn\"],\n  \"obsessively\": [\"aa-b s-eh1 s-ih-v l-iy\", \"rb\"],\n  \"obsidian\": [\"ah-b s-ih1 d-iy ah-n\", \"nn\"],\n  \"obsolescent\": [\"aa-b s-ah l-eh1 s-ah-n-t\", \"jj\"],\n  \"obsolete\": [\"aa1-b s-ah l-iy-t\", \"jj\"],\n  \"obstacle\": [\"aa1-b s-t-ah k-ah-l\", \"nn\"],\n  \"obstetrician\": [\"aa-b s-t-ah t-r-ih1 sh-ah-n\", \"nn\"],\n  \"obstinacy\": [\"aa1-b s-t-ah n-ah s-iy\", \"nn\"],\n  \"obstinate\": [\"aa1-b s-t-ah n-ah-t\", \"jj\"],\n  \"obstruct\": [\"ah-b s-t-r-ah1-k-t\", \"vb vbp\"],\n  \"obstruction\": [\"ah-b s-t-r-ah1-k sh-ah-n\", \"nn\"],\n  \"obstructive\": [\"ah-b s-t-r-ah1-k t-ih-v\", \"jj\"],\n  \"obtain\": [\"ah-b t-ey1-n\", \"vb vbp\"],\n  \"obtainable\": [\"ah-b t-ey1 n-ah b-ah-l\", \"jj\"],\n  \"obtrude\": [\"ah-b-t-r-uw1-d\", \"vb\"],\n  \"obtuse\": [\"aa-b t-uw1-s\", \"jj\"],\n  \"obverse\": [\"ah-b v-er1-s\", \"nn\"],\n  \"obviate\": [\"aa1-b v-iy ey-t\", \"vb\"],\n  \"obvious\": [\"aa1-b v-iy ah-s\", \"jj\"],\n  \"obviously\": [\"aa1-b v-iy ah-s l-iy\", \"rb\"],\n  \"occasion\": [\"ah k-ey1 zh-ah-n\", \"nn vb\"],\n  \"occasional\": [\"ah k-ey1 zh-ah n-ah-l\", \"jj\"],\n  \"occasionally\": [\"ah k-ey1 zh-ah-n ah l-iy\", \"rb\"],\n  \"occidental\": [\"aa-k s-ah d-eh1-n t-ah-l\", \"jj\"],\n  \"occipital\": [\"aa-k s-ih1 p-ah t-ah-l\", \"jj\"],\n  \"occlusion\": [\"ah k-l-uw1 zh-ah-n\", \"nn\"],\n  \"occupancy\": [\"aa1 k-y-ah p-ah-n s-iy\", \"nn\"],\n  \"occupant\": [\"aa1 k-y-ah p-ah-n-t\", \"nn\"],\n  \"occupation\": [\"aa k-y-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"occupational\": [\"aa k-y-ah p-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"occupied\": [\"aa1 k-y-ah p-ay-d\", \"vbn jj vbd\"],\n  \"occupy\": [\"aa1 k-y-ah p-ay\", \"vb vbp\"],\n  \"occupying\": [\"aa1 k-y-ah p-ay ih-ng\", \"vbg jj\"],\n  \"occur\": [\"ah k-er1\", \"vb vbp\"],\n  \"occurrence\": [\"ah k-er1 ah-n-s\", \"nn\"],\n  \"ocean\": [\"ow1 sh-ah-n\", \"nn\"],\n  \"oceanfront\": [\"ow sh-ah-n f-r-ah-n-t\", \"jj nn\"],\n  \"oceanographic\": [\"ow sh-ah-n ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"oceanography\": [\"ow sh-ah n-aa1 g-r-ah f-iy\", \"nn\"],\n  \"ocelot\": [\"aa1 s-ah l-aa-t\", \"nn\"],\n  \"ochre\": [\"ow1 k-er\", \"jj nn\"],\n  \"octagonal\": [\"aa-k t-ae1 g-ah n-ah-l\", \"jj\"],\n  \"octane\": [\"aa1-k t-ey-n\", \"nn\"],\n  \"octave\": [\"aa1-k t-ih-v\", \"jj\"],\n  \"octogenarian\": [\"aa-k t-ah jh-ih n-eh1 r-iy ah-n\", \"jj\"],\n  \"octopus\": [\"aa1-k t-ah p-uh-s\", \"nn\"],\n  \"odd\": [\"aa1-d\", \"jj\"],\n  \"oddball\": [\"aa1-d b-ao-l\", \"jj\"],\n  \"oddest\": [\"aa1 d-ah-s-t\", \"jjs\"],\n  \"oddity\": [\"aa1 d-ah t-iy\", \"nn\"],\n  \"oddly\": [\"aa1-d l-iy\", \"rb\"],\n  \"ode\": [\"ow1-d\", \"nn\"],\n  \"odious\": [\"ow1 d-iy ah-s\", \"jj\"],\n  \"odor\": [\"ow1 d-er\", \"nn\"],\n  \"odyssey\": [\"aa1 d-ah s-iy\", \"nn\"],\n  \"oedipal\": [\"eh1 d-ah p-ah-l\", \"jj\"],\n  \"of\": [\"ah1-v\", \"in rb rp\"],\n  \"off\": [\"ao1-f\", \"in rb jj nn rp\"],\n  \"offbeat\": [\"ao1-f b-iy1-t\", \"jj\"],\n  \"offend\": [\"ah f-eh1-n-d\", \"vb\"],\n  \"offended\": [\"ah f-eh1-n d-ah-d\", \"vbn jj vbd\"],\n  \"offender\": [\"ah f-eh1-n d-er\", \"nn\"],\n  \"offense\": [\"ah f-eh1-n-s\", \"nn\"],\n  \"offensive\": [\"ah f-eh1-n s-ih-v\", \"jj nn\"],\n  \"offensively\": [\"ah f-eh1-n s-ih-v l-iy\", \"rb\"],\n  \"offer\": [\"ao1 f-er\", \"nn vb vbp\"],\n  \"offered\": [\"ao1 f-er-d\", \"vbn jj vbd\"],\n  \"offering\": [\"ao1 f-er ih-ng\", \"nn vbg\"],\n  \"offhand\": [\"ao1-f hh-ae1-n-d\", \"jj\"],\n  \"offical\": [\"ao1 f-ih k-ah-l\", \"nn\"],\n  \"office\": [\"ao1 f-ah-s\", \"nn\"],\n  \"officeholder\": [\"ao1 f-ah-s hh-ow-l d-er\", \"nn\"],\n  \"officer\": [\"ao1 f-ah s-er\", \"nn\"],\n  \"official\": [\"ah f-ih1 sh-ah-l\", \"nn jj\"],\n  \"officialdom\": [\"ah f-ih1 sh-ah-l d-ah-m\", \"nn\"],\n  \"officially\": [\"ah f-ih1 sh-ah l-iy\", \"rb\"],\n  \"officiate\": [\"ah f-ih1 sh-iy ey-t\", \"vb\"],\n  \"offing\": [\"ao1 f-ih-ng\", \"nn\"],\n  \"offset\": [\"ao-f s-eh1-t\", \"vb jj vbd vbn vbp\"],\n  \"offsetting\": [\"ao-f s-eh1 t-ih-ng\", \"vbg jj\"],\n  \"offshoot\": [\"ao1-f sh-uw-t\", \"nn\"],\n  \"offshore\": [\"ao1-f sh-ao1-r\", \"jj rb\"],\n  \"offspring\": [\"ao1-f s-p-r-ih-ng\", \"nn\"],\n  \"offstage\": [\"ao1-f s-t-ey1-jh\", \"rb jj\"],\n  \"oft\": [\"ao1-f-t\", \"rb\"],\n  \"often\": [\"ao1 f-ah-n\", \"rb\"],\n  \"oftener\": [\"ao1 f-ah-n er\", \"rbr\"],\n  \"oftentimes\": [\"ao1 f-ah-n t-ay-m-z\", \"rb\"],\n  \"ogle\": [\"ow1-g-ah-l\", \"vb\"],\n  \"ogre\": [\"ow1 g-r-ah\", \"nn\"],\n  \"ogress\": [\"ow1 g-r-ah-s\", \"nn\"],\n  \"oh\": [\"ow1\", \"uh\"],\n  \"oil\": [\"oy1-l\", \"nn\"],\n  \"oiled\": [\"oy1-l-d\", \"jj\"],\n  \"oiler\": [\"oy1 l-er\", \"nn\"],\n  \"oilfield\": [\"oy1-l f-iy-l-d\", \"nn\"],\n  \"oilman\": [\"oy1-l m-ae-n\", \"nn\"],\n  \"oilseed\": [\"oy1-l s-iy-d\", \"nn\"],\n  \"oily\": [\"oy1 l-iy\", \"jj\"],\n  \"ointment\": [\"oy1-n-t m-ah-n-t\", \"nn\"],\n  \"okay\": [\"ow1 k-ey1\", \"jj rb vb uh\"],\n  \"old\": [\"ow1-l-d\", \"jj\"],\n  \"olden\": [\"ow1-l d-ah-n\", \"jj\"],\n  \"older\": [\"ow1-l d-er\", \"jjr rbr jj\"],\n  \"oldest\": [\"ow1-l d-ah-s-t\", \"jjs\"],\n  \"ole\": [\"ow1-l\", \"jj nn\"],\n  \"olfactory\": [\"ow-l f-ae1-k t-er iy\", \"jj\"],\n  \"oligarch\": [\"ow1 l-ih g-aa-r-k\", \"nn\"],\n  \"oligopoly\": [\"aa l-ih g-aa1 p-ah l-iy\", \"nn\"],\n  \"olive\": [\"aa1 l-ah-v\", \"jj nn\"],\n  \"ombudsman\": [\"aa1-m b-ah-d-z m-ah-n\", \"nn\"],\n  \"omelet\": [\"aa1-m l-ah-t\", \"nn\"],\n  \"omen\": [\"ow1 m-ah-n\", \"nn\"],\n  \"ominous\": [\"aa1 m-ah n-ah-s\", \"jj\"],\n  \"ominously\": [\"aa1 m-ah n-ah-s l-iy\", \"rb\"],\n  \"omission\": [\"ow m-ih1 sh-ah-n\", \"nn\"],\n  \"omit\": [\"ow m-ih1-t\", \"vb vbp\"],\n  \"omnibus\": [\"aa1-m n-ah b-ah-s\", \"jj nn\"],\n  \"omnipotence\": [\"aa-m n-ih1 p-ah t-ah-n-s\", \"nn\"],\n  \"omnipresence\": [\"aa-m n-ah p-r-eh1 z-ah-n-s\", \"nn\"],\n  \"omnipresent\": [\"aa-m n-ih p-r-eh1 z-ah-n-t\", \"jj\"],\n  \"omniscient\": [\"aa-m n-ih1 sh-ah-n-t\", \"jj\"],\n  \"on\": [\"aa1-n\", \"in rbr jj rb rp\"],\n  \"onboard\": [\"aa1-n b-ao-r-d\", \"nn\"],\n  \"once\": [\"w-ah1-n-s\", \"rb in\"],\n  \"oncologist\": [\"aa-ng k-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"oncology\": [\"aa-ng k-aa1 l-ah jh-iy\", \"nn\"],\n  \"oncoming\": [\"ao1-n k-ah m-ih-ng\", \"jj\"],\n  \"one\": [\"w-ah1-n\", \"cd\"],\n  \"oneness\": [\"w-ah1-n n-ah-s\", \"nn\"],\n  \"onerous\": [\"ow1 n-er ah-s\", \"jj\"],\n  \"oneself\": [\"w-ah-n s-eh1-l-f\", \"prp\"],\n  \"onetime\": [\"w-ah1-n t-ay1-m\", \"jj\"],\n  \"oneyear\": [\"w-ah1-n y-ih1-r\", \"jj\"],\n  \"ongoing\": [\"aa1-n g-ow ih-ng\", \"jj\"],\n  \"onion\": [\"ah1 n-y-ah-n\", \"nn\"],\n  \"online\": [\"ao1-n l-ay-n\", \"jj\"],\n  \"onlooker\": [\"ao1-n l-uh k-er\", \"nn\"],\n  \"only\": [\"ow1-n l-iy\", \"rb in jj\"],\n  \"onrushing\": [\"aa1-n r-ah sh-ih-ng\", \"jj\"],\n  \"onscreen\": [\"aa-n s-k-r-iy1-n\", \"rb\"],\n  \"onset\": [\"aa1-n s-eh-t\", \"nn\"],\n  \"onslaught\": [\"ao1-n s-l-ao-t\", \"nn\"],\n  \"onstage\": [\"aa-n s-t-ey1-jh\", \"nn rb\"],\n  \"onto\": [\"aa1-n t-uw\", \"in\"],\n  \"ontological\": [\"aa-n t-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"onus\": [\"ow1 n-ah-s\", \"nn\"],\n  \"onward\": [\"ao1-n w-er-d\", \"rb\"],\n  \"onwards\": [\"aa1-n w-er-d-z\", \"rb\"],\n  \"onyx\": [\"aa1 n-ih-k-s\", \"nn\"],\n  \"oodles\": [\"uw1 d-ah-l-z\", \"nn\"],\n  \"ooze\": [\"uw1-z\", \"nn vb\"],\n  \"opaque\": [\"ow p-ey1-k\", \"jj\"],\n  \"open\": [\"ow1 p-ah-n\", \"jj vbp nn rb rp vb\"],\n  \"opener\": [\"ow1 p-ah-n er\", \"nn\"],\n  \"opening\": [\"ow1 p-ah-n ih-ng\", \"nn vbg jj\"],\n  \"openly\": [\"ow1 p-ah-n l-iy\", \"rb\"],\n  \"openness\": [\"ow1 p-ah-n n-ah-s\", \"nn\"],\n  \"opera\": [\"aa1 p-r-ah\", \"nn\"],\n  \"operable\": [\"aa1 p-er ah b-ah-l\", \"jj\"],\n  \"operate\": [\"aa1 p-er ey-t\", \"vb vbp\"],\n  \"operated\": [\"aa1 p-er ey t-ah-d\", \"vbn vbd jj\"],\n  \"operatic\": [\"aa p-er ae1 t-ih-k\", \"jj\"],\n  \"operating\": [\"aa1 p-er ey t-ih-ng\", \"vbg jj nn\"],\n  \"operation\": [\"aa p-er ey1 sh-ah-n\", \"nn\"],\n  \"operational\": [\"aa p-er ey1 sh-ah n-ah-l\", \"jj\"],\n  \"operationally\": [\"aa1 p-er ey1 sh-ah-n ah l-iy\", \"rb\"],\n  \"operative\": [\"aa1 p-er ah t-ih-v\", \"jj nn\"],\n  \"operator\": [\"aa1 p-er ey t-er\", \"nn\"],\n  \"operetta\": [\"aa p-er eh1 t-ah\", \"nn\"],\n  \"ophthalmologist\": [\"aa-p th-ah m-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"opine\": [\"ow-p-ay1-n\", \"vb\"],\n  \"opinion\": [\"ah p-ih1 n-y-ah-n\", \"nn\"],\n  \"opinionated\": [\"ah p-ih1 n-y-ah n-ey t-ih-d\", \"jj\"],\n  \"opium\": [\"ow1 p-iy ah-m\", \"nn\"],\n  \"opponent\": [\"ah p-ow1 n-ah-n-t\", \"nn\"],\n  \"opportune\": [\"aa p-er t-uw1-n\", \"jj\"],\n  \"opportunism\": [\"aa p-er t-uw1 n-ih z-ah-m\", \"nn\"],\n  \"opportunist\": [\"aa p-er t-uw1 n-ih-s-t\", \"nn\"],\n  \"opportunistic\": [\"aa p-er t-uw n-ih1 s-t-ih-k\", \"jj\"],\n  \"opportunity\": [\"aa p-er t-uw1 n-ah t-iy\", \"nn\"],\n  \"oppose\": [\"ah p-ow1-z\", \"vb vbp\"],\n  \"opposed\": [\"ah p-ow1-z-d\", \"vbn jj vbd\"],\n  \"opposing\": [\"ah p-ow1 z-ih-ng\", \"vbg jj\"],\n  \"opposite\": [\"aa1 p-ah z-ah-t\", \"jj in nn\"],\n  \"opposition\": [\"aa p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"oppress\": [\"ah-p-r-eh1-s\", \"vb\"],\n  \"oppressed\": [\"ah p-r-eh1-s-t\", \"jj vbd vbn\"],\n  \"oppression\": [\"ah p-r-eh1 sh-ah-n\", \"nn\"],\n  \"oppressive\": [\"ah p-r-eh1 s-ih-v\", \"jj\"],\n  \"oppressor\": [\"ah p-r-eh1 s-er\", \"nn\"],\n  \"opprobrium\": [\"ah p-r-ow1 b-r-iy ah-m\", \"nn\"],\n  \"opt\": [\"aa1-p-t\", \"vb vbp\"],\n  \"optic\": [\"aa1-p t-ih-k\", \"jj\"],\n  \"optical\": [\"aa1-p t-ih k-ah-l\", \"jj\"],\n  \"optically\": [\"aa1-p t-ih-k l-iy\", \"rb\"],\n  \"optician\": [\"aa-p t-ih1 sh-ah-n\", \"nn\"],\n  \"optimal\": [\"aa1-p t-ah m-ah-l\", \"jj\"],\n  \"optimism\": [\"aa1-p t-ah m-ih z-ah-m\", \"nn\"],\n  \"optimist\": [\"aa1-p t-ah m-ih-s-t\", \"nn\"],\n  \"optimistic\": [\"aa-p t-ah m-ih1 s-t-ih-k\", \"jj\"],\n  \"optimistically\": [\"aa-p t-ih m-ih1 s-t-ih k-ah l-iy\", \"rb\"],\n  \"optimization\": [\"aa-p t-ah m-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"optimize\": [\"aa1-p t-ah m-ay-z\", \"vb\"],\n  \"optimum\": [\"aa1-p t-ah m-ah-m\", \"jj nn\"],\n  \"option\": [\"aa1-p sh-ah-n\", \"nn vb\"],\n  \"optional\": [\"aa1-p sh-ah n-ah-l\", \"jj\"],\n  \"opulence\": [\"aa1 p-y-ah l-ah-n-s\", \"nn\"],\n  \"opulent\": [\"aa1 p-y-ah l-ah-n-t\", \"jj\"],\n  \"opus\": [\"ow1 p-ah-s\", \"nn\"],\n  \"or\": [\"ao1-r\", \"cc\"],\n  \"oracle\": [\"ao1 r-ah k-ah-l\", \"nn\"],\n  \"oral\": [\"ao1 r-ah-l\", \"jj\"],\n  \"orally\": [\"ao1 r-ah l-iy\", \"rb\"],\n  \"orange\": [\"ao1 r-ah-n-jh\", \"jj nn\"],\n  \"oration\": [\"ao r-ey1 sh-ah-n\", \"nn\"],\n  \"orator\": [\"ao1 r-ah t-er\", \"nn\"],\n  \"oratorical\": [\"ao r-ah t-ao1 r-ah k-ah-l\", \"jj\"],\n  \"oratorio\": [\"aa r-ah t-ao1 r-iy ow\", \"nn\"],\n  \"oratory\": [\"ao1 r-ah t-ao r-iy\", \"nn\"],\n  \"orb\": [\"ao1-r-b\", \"nn\"],\n  \"orbit\": [\"ao1-r b-ah-t\", \"nn vb\"],\n  \"orbital\": [\"ao1-r b-ah t-ah-l\", \"jj nn\"],\n  \"orchard\": [\"ao1-r ch-er-d\", \"nn\"],\n  \"orchestra\": [\"ao1-r k-ah-s t-r-ah\", \"nn\"],\n  \"orchestral\": [\"ao-r k-eh1-s t-r-ah-l\", \"jj\"],\n  \"orchestrate\": [\"ao1-r k-ih s-t-r-ey-t\", \"vb\"],\n  \"orchestration\": [\"ao-r k-ah-s t-r-ey1 sh-ah-n\", \"nn\"],\n  \"orchid\": [\"ao1-r k-ah-d\", \"nn\"],\n  \"ordain\": [\"ao-r d-ey1-n\", \"vb\"],\n  \"ordeal\": [\"ao-r d-iy1-l\", \"nn\"],\n  \"order\": [\"ao1-r d-er\", \"nn vbp in vb\"],\n  \"ordered\": [\"ao1-r d-er-d\", \"vbd vbn jj\"],\n  \"orderliness\": [\"ao1-r d-er l-iy n-ah-s\", \"nn\"],\n  \"orderly\": [\"ao1-r d-er l-iy\", \"jj nn rb\"],\n  \"ordinance\": [\"ao1-r d-ah n-ah-n-s\", \"nn\"],\n  \"ordinarily\": [\"ao-r d-ah n-eh1 r-ah l-iy\", \"rb\"],\n  \"ordinary\": [\"ao1-r d-ah n-eh r-iy\", \"jj nn\"],\n  \"ordination\": [\"ao-r d-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"ordnance\": [\"ao1-r-d n-ah-n-s\", \"nn\"],\n  \"ore\": [\"ao1-r\", \"nn\"],\n  \"organ\": [\"ao1-r g-ah-n\", \"nn\"],\n  \"organic\": [\"ao-r g-ae1 n-ih-k\", \"jj\"],\n  \"organically\": [\"ao-r g-ae1 n-ih-k l-iy\", \"rb\"],\n  \"organism\": [\"ao1-r g-ah n-ih z-ah-m\", \"nn\"],\n  \"organismic\": [\"ao-r g-ah n-ih1-z m-ih-k\", \"jj\"],\n  \"organist\": [\"ao1-r g-ah n-ah-s-t\", \"nn\"],\n  \"organization\": [\"ao-r g-ah n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"organizational\": [\"ao-r g-ah n-ah z-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"organize\": [\"ao1-r g-ah n-ay-z\", \"vb vbp\"],\n  \"organized\": [\"ao1-r g-ah n-ay-z-d\", \"vbn vbd jj\"],\n  \"organizer\": [\"ao1-r g-ah n-ay z-er\", \"nn\"],\n  \"orgasm\": [\"ao1-r g-ae z-ah-m\", \"nn\"],\n  \"orgy\": [\"ao1-r jh-iy\", \"nn\"],\n  \"orient\": [\"ao1-r-iy-eh-n-t\", \"vb\"],\n  \"oriental\": [\"ao r-iy eh1-n t-ah-l\", \"jj\"],\n  \"orientation\": [\"ao r-iy eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"oriented\": [\"ao1 r-iy eh-n t-ah-d\", \"vbn vbd jj\"],\n  \"orifice\": [\"ao1 r-ah f-ah s-ah\", \"nn\"],\n  \"origin\": [\"ao1 r-ah jh-ah-n\", \"nn\"],\n  \"original\": [\"er ih1 jh-ah n-ah-l\", \"jj nn\"],\n  \"originality\": [\"er ih jh-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"originally\": [\"er ih1 jh-ah n-ah l-iy\", \"rb\"],\n  \"originate\": [\"er ih1 jh-ah n-ey-t\", \"vb vbp\"],\n  \"originated\": [\"er ih1 jh-ah n-ey t-ah-d\", \"vbd jj vbn\"],\n  \"origination\": [\"er ih jh-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"originator\": [\"er ih1 jh-ah n-ey t-er\", \"nn\"],\n  \"ornament\": [\"ao1-r n-ah m-ah-n-t\", \"nn vb\"],\n  \"ornamental\": [\"ao-r n-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"ornamentation\": [\"ao-r n-ah m-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"ornate\": [\"ao-r n-ey1-t\", \"jj\"],\n  \"ornery\": [\"ao1-r n-er iy\", \"jj\"],\n  \"orphan\": [\"ao1-r f-ah-n\", \"jj nn vb\"],\n  \"orphanage\": [\"ao1-r f-ah n-ah-jh\", \"nn\"],\n  \"orphaned\": [\"ao1-r f-ah-n-d\", \"vbn jj\"],\n  \"orthodontic\": [\"ao-r th-ah d-aa1-n t-ih-k\", \"jj\"],\n  \"orthodontist\": [\"ao-r th-ah d-aa1-n t-ah-s-t\", \"nn\"],\n  \"orthodox\": [\"ao1-r th-ah d-aa-k-s\", \"jj nn\"],\n  \"orthodoxy\": [\"ao1-r th-ah d-aa-k s-iy\", \"nn\"],\n  \"orthography\": [\"ao-r th-aa1 g-r-ah f-iy\", \"nn\"],\n  \"orthopedic\": [\"ao-r th-ah p-iy1 d-ih-k\", \"jj\"],\n  \"oscillate\": [\"aa1-s-ah-l-ey-t\", \"vb\"],\n  \"oscillation\": [\"aa s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"oscillator\": [\"aa1 s-ah l-ey t-er\", \"nn\"],\n  \"osmium\": [\"aa1-z m-iy ah-m\", \"nn\"],\n  \"osmotic\": [\"aa-z m-aa1 t-ah-k\", \"jj\"],\n  \"ossification\": [\"aa s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"ossify\": [\"aa1 s-ah f-ay\", \"vb\"],\n  \"ostensibly\": [\"aa s-t-eh1-n s-ah b-l-iy\", \"rb\"],\n  \"ostentation\": [\"ao s-t-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"ostentatious\": [\"aa s-t-ah-n t-ey1 sh-ah-s\", \"jj\"],\n  \"ostentatiously\": [\"aa s-t-ah-n t-ey1 sh-ah-s l-iy\", \"rb\"],\n  \"ostinato\": [\"aa s-t-ah n-aa1 t-ow\", \"nn\"],\n  \"ostracism\": [\"ao1 s-t-r-ah s-ih z-ah-m\", \"nn\"],\n  \"ostracize\": [\"ao1-s-t-r-ah-s-ay-z\", \"vb\"],\n  \"ostrich\": [\"ao1 s-t-r-ih-ch\", \"jj nn\"],\n  \"other\": [\"ah1 dh-er\", \"jj nn\"],\n  \"otherwise\": [\"ah1 dh-er w-ay-z\", \"rb jj\"],\n  \"otherworldly\": [\"ah1 dh-er w-er1-l-d l-iy\", \"jj\"],\n  \"otter\": [\"aa1 t-er\", \"nn\"],\n  \"ought\": [\"ao1-t\", \"md\"],\n  \"ounce\": [\"aw1-n-s\", \"nn\"],\n  \"our\": [\"aw1 er\", \"prp$\"],\n  \"ours\": [\"aw1 er-z\", \"prp\"],\n  \"ourselves\": [\"aw er s-eh1-l-v-z\", \"prp\"],\n  \"oust\": [\"aw1-s-t\", \"vb\"],\n  \"ousted\": [\"aw1 s-t-ih-d\", \"vbn vbd jj\"],\n  \"ouster\": [\"aw1 s-t-er\", \"nn\"],\n  \"out\": [\"aw1-t\", \"in jj nn rb rp\"],\n  \"outage\": [\"aw1 t-ah-jh\", \"nn\"],\n  \"outback\": [\"aw1-t b-ae-k\", \"nn\"],\n  \"outbid\": [\"aw1-t b-ih-d\", \"vb vbd vbn vbp\"],\n  \"outboard\": [\"aw1-t b-ao-r-d\", \"jj\"],\n  \"outbound\": [\"aw1-t b-aw-n-d\", \"jj\"],\n  \"outbreak\": [\"aw1-t b-r-ey-k\", \"nn\"],\n  \"outburst\": [\"aw1-t b-er-s-t\", \"nn\"],\n  \"outcast\": [\"aw1-t k-ae-s-t\", \"nn\"],\n  \"outclass\": [\"aw1-t k-l-ae-s\", \"vbp vb\"],\n  \"outcome\": [\"aw1-t k-ah-m\", \"nn\"],\n  \"outcry\": [\"aw1-t k-r-ay\", \"nn\"],\n  \"outdate\": [\"aw1-t-d-ey-t\", \"vb\"],\n  \"outdated\": [\"aw1-t d-ey t-ih-d\", \"jj vbn\"],\n  \"outdid\": [\"aw1-t d-ih-d\", \"vbd\"],\n  \"outdistance\": [\"aw1-t-d-ih1-s-t-ah-n-s\", \"vb\"],\n  \"outdo\": [\"aw-t d-uw1\", \"vb vbp\"],\n  \"outdone\": [\"aw1-t d-ah1-n\", \"vbn\"],\n  \"outdoor\": [\"aw1-t d-ao-r\", \"jj\"],\n  \"outdoors\": [\"aw1-t d-ao1-r-z\", \"rb nn\"],\n  \"outdoorsman\": [\"aw1-t d-ao-r-z m-ah-n\", \"nn\"],\n  \"outer\": [\"aw1 t-er\", \"jj\"],\n  \"outfield\": [\"aw1-t f-iy-l-d\", \"nn\"],\n  \"outfielder\": [\"aw1-t f-iy-l d-er\", \"nn\"],\n  \"outfit\": [\"aw1-t f-ih-t\", \"nn vb vbp\"],\n  \"outflank\": [\"aw1-t f-l-ae-ng-k\", \"vb\"],\n  \"outflow\": [\"aw1-t f-l-ow\", \"nn\"],\n  \"outgain\": [\"aw1-t-g-ey-n\", \"vb\"],\n  \"outgoing\": [\"aw1-t g-ow ih-ng\", \"jj\"],\n  \"outgrew\": [\"aw-t g-r-uw1\", \"vbd\"],\n  \"outgrow\": [\"aw-t g-r-ow1\", \"vb\"],\n  \"outgrown\": [\"aw-t g-r-ow1-n\", \"vbn\"],\n  \"outgrowth\": [\"aw1-t g-r-ow-th\", \"nn\"],\n  \"outguess\": [\"aw1-t g-eh-s\", \"vb\"],\n  \"outhouse\": [\"aw1-t hh-aw-s\", \"nn\"],\n  \"outing\": [\"aw1 t-ih-ng\", \"nn\"],\n  \"outlandish\": [\"aw-t l-ae1-n d-ih-sh\", \"jj\"],\n  \"outlast\": [\"aw1-t l-ae-s-t\", \"vb\"],\n  \"outlaw\": [\"aw1-t l-ao\", \"vb nn\"],\n  \"outlawed\": [\"aw1-t l-ao-d\", \"vbn jj vbd\"],\n  \"outlawry\": [\"aw1-t l-ao r-iy\", \"nn\"],\n  \"outlay\": [\"aw1-t l-ey\", \"nn\"],\n  \"outlet\": [\"aw1-t l-eh-t\", \"nn\"],\n  \"outline\": [\"aw1-t l-ay-n\", \"nn vb vbp\"],\n  \"outlined\": [\"aw1-t l-ay-n-d\", \"vbn vbd jj\"],\n  \"outlive\": [\"aw-t l-ih1-v\", \"vb\"],\n  \"outlook\": [\"aw1-t l-uh-k\", \"nn\"],\n  \"outlying\": [\"aw1-t l-ay ih-ng\", \"jj\"],\n  \"outmaneuver\": [\"aw-t m-ah n-uw1 v-er\", \"vb\"],\n  \"outmode\": [\"aw-t-m-ow1-d\", \"vb\"],\n  \"outmoded\": [\"aw-t m-ow1 d-ah-d\", \"jj vbn\"],\n  \"outnumber\": [\"aw-t n-ah1-m b-er\", \"vb\"],\n  \"outpace\": [\"aw1-t p-ey-s\", \"vb vbp\"],\n  \"outpaced\": [\"aw1-t p-ey-s-t\", \"vbd vbn\"],\n  \"outpatient\": [\"aw1-t p-ey sh-ah-n-t\", \"nn jj\"],\n  \"outperform\": [\"aw1-t p-er f-ao-r-m\", \"vb jj vbp\"],\n  \"outplacement\": [\"aw1-t p-l-ey-s m-ah-n-t\", \"nn\"],\n  \"outpost\": [\"aw1-t p-ow-s-t\", \"nn\"],\n  \"outpouring\": [\"aw-t p-ao1 r-ih-ng\", \"nn\"],\n  \"output\": [\"aw1-t p-uh-t\", \"nn vb\"],\n  \"outrage\": [\"aw1-t r-ey-jh\", \"nn vb\"],\n  \"outraged\": [\"aw1-t r-ey-jh-d\", \"vbn jj vbd\"],\n  \"outrageous\": [\"aw-t r-ey1 jh-ah-s\", \"jj\"],\n  \"outrageously\": [\"aw-t r-ey1 jh-ah-s l-iy\", \"rb\"],\n  \"outreach\": [\"aw1-t r-iy-ch\", \"nn\"],\n  \"outrigger\": [\"aw1-t r-ih g-er\", \"nn\"],\n  \"outright\": [\"aw1-t r-ay1-t\", \"jj rb\"],\n  \"outrun\": [\"aw-t r-ah1-n\", \"vb vbn\"],\n  \"outscore\": [\"aw-t-s-k-ao1-r\", \"vb\"],\n  \"outsell\": [\"aw-t s-eh1-l\", \"vb\"],\n  \"outset\": [\"aw1-t s-eh-t\", \"nn\"],\n  \"outshine\": [\"aw1 ch-ay-n\", \"vb\"],\n  \"outshone\": [\"aw-t sh-ow1-n\", \"nn\"],\n  \"outside\": [\"aw1-t s-ay1-d\", \"in jj nn rb\"],\n  \"outsider\": [\"aw-t s-ay1 d-er\", \"nn\"],\n  \"outsized\": [\"aw1-t s-ay-z-d\", \"jj\"],\n  \"outskirt\": [\"aw1-t s-k-er-t\", \"nn\"],\n  \"outsold\": [\"aw-t s-ow1-l-d\", \"vbd\"],\n  \"outspend\": [\"aw1-t s-p-eh-n-d\", \"vb vbp\"],\n  \"outspoken\": [\"aw1-t s-p-ow1 k-ah-n\", \"jj\"],\n  \"outstanding\": [\"aw-t s-t-ae1-n d-ih-ng\", \"jj\"],\n  \"outstretch\": [\"aw-t-s-t-r-eh1-ch\", \"vb\"],\n  \"outstrip\": [\"aw-t s-t-r-ih1-p\", \"vb\"],\n  \"outstripped\": [\"aw-t s-t-r-ih1-p-t\", \"nn vbd vbn\"],\n  \"outta\": [\"uw1 t-ah\", \"in\"],\n  \"outward\": [\"aw1-t w-er-d\", \"rb jj\"],\n  \"outwardly\": [\"aw1-t w-er-d l-iy\", \"rb .\"],\n  \"outweigh\": [\"aw1-t w-ey\", \"vbp vb\"],\n  \"outwit\": [\"aw1-t w-ih-t\", \"vb\"],\n  \"oval\": [\"ow1 v-ah-l\", \"jj nn\"],\n  \"ovarian\": [\"ow v-eh1 r-iy ah-n\", \"jj\"],\n  \"ovation\": [\"ow v-ey1 sh-ah-n\", \"nn\"],\n  \"oven\": [\"ah1 v-ah-n\", \"nn\"],\n  \"over\": [\"ow1 v-er\", \"in rp jj rb\"],\n  \"overactive\": [\"ow1 v-er ae1-k t-ih-v\", \"jj\"],\n  \"overall\": [\"ow1 v-er ao-l\", \"jj nn rb\"],\n  \"overarch\": [\"ow1 v-er aa-r-ch\", \"vb\"],\n  \"overarching\": [\"ow1 v-er aa-r ch-ih-ng\", \"vbg jj\"],\n  \"overbearing\": [\"ow1 v-er b-eh1 r-ih-ng\", \"jj\"],\n  \"overbill\": [\"ow-v-er-b-ih1-l\", \"vb\"],\n  \"overblown\": [\"ow v-er b-l-ow1-n\", \"jj\"],\n  \"overboard\": [\"ow1 v-er b-ao-r-d\", \"rb\"],\n  \"overbought\": [\"ow1 v-er b-ao1-t\", \"vbn jj nn\"],\n  \"overbuilding\": [\"ow1 v-er b-ih-l d-ih-ng\", \"nn\"],\n  \"overbuilt\": [\"ow1 v-er b-ih1-l-t\", \"jj nn\"],\n  \"overburden\": [\"ow1 v-er b-er1 d-ah-n\", \"vb\"],\n  \"overburdened\": [\"ow1 v-er b-er1 d-ah-n-d\", \"vbn jj vbd\"],\n  \"overcame\": [\"ow1 v-er k-ey1-m\", \"vbd\"],\n  \"overcapacity\": [\"ow1 v-er k-ah p-ae1 s-ah t-iy\", \"nn\"],\n  \"overcast\": [\"ow1 v-er k-ae-s-t\", \"nn jj\"],\n  \"overcharge\": [\"ow1 v-er ch-aa-r-jh\", \"vb\"],\n  \"overcoat\": [\"ow1 v-er k-ow-t\", \"nn\"],\n  \"overcome\": [\"ow1 v-er k-ah-m\", \"vb vbn vbp\"],\n  \"overconfident\": [\"ow v-er k-aa1-n f-ih d-ah-n-t\", \"jj\"],\n  \"overcook\": [\"ow-v-er-k-uh1-k\", \"vb\"],\n  \"overcrowd\": [\"ow-v-er-k-r-aw1-d\", \"vb\"],\n  \"overcrowded\": [\"ow1 v-er k-r-aw d-ih-d\", \"jj vbn\"],\n  \"overdo\": [\"ow1-v-er-d-uw1\", \"vb\"],\n  \"overdone\": [\"ow1 v-er d-ah1-n\", \"vbn\"],\n  \"overdose\": [\"ow1 v-er d-ow-s\", \"nn vb\"],\n  \"overdraft\": [\"ow1 v-er d-r-ae-f-t\", \"nn\"],\n  \"overdraw\": [\"ow1 v-er d-r-ao\", \"vb\"],\n  \"overdrawn\": [\"ow1 v-er d-r-ao1-n\", \"jj\"],\n  \"overdrive\": [\"ow1 v-er d-r-ay-v\", \"nn\"],\n  \"overdue\": [\"ow1 v-er d-uw1\", \"jj\"],\n  \"overeager\": [\"ow1 v-er iy g-er\", \"jj\"],\n  \"overeat\": [\"ow1 v-er iy-t\", \"vb vbp\"],\n  \"overemphasize\": [\"ow1 v-er eh1-m f-ah s-ay-z\", \"vb\"],\n  \"overestimate\": [\"ow v-er eh1-s t-ah m-ey-t\", \"vb\"],\n  \"overextend\": [\"ow-v-er-ih-k-s-t-eh1-n-d\", \"vb\"],\n  \"overextended\": [\"ow v-er ih-k s-t-eh1-n d-ah-d\", \"vbn vbd jj\"],\n  \"overfeed\": [\"ow v-er f-iy1-d\", \"vb\"],\n  \"overfill\": [\"ow1 v-er f-ih-l\", \"vb\"],\n  \"overflight\": [\"ow1 v-er f-l-ay-t\", \"nn\"],\n  \"overflow\": [\"ow1 v-er f-l-ow\", \"nn vb\"],\n  \"overfund\": [\"ow1-v-er-f-ah-n-d\", \"vb\"],\n  \"overgenerous\": [\"ow1 v-er jh-eh n-er ah-s\", \"jj\"],\n  \"overgrazing\": [\"ow1 v-er g-r-ey z-ih-ng\", \"nn\"],\n  \"overgrown\": [\"ow1 v-er g-r-ow1-n\", \"vbn jj\"],\n  \"overhang\": [\"ow1 v-er hh-ae-ng\", \"nn vb\"],\n  \"overhaul\": [\"ow1 v-er hh-ao-l\", \"nn vb\"],\n  \"overhead\": [\"ow1 v-er hh-eh1-d\", \"jj nn rb\"],\n  \"overhear\": [\"ow1 v-er hh-ih1-r\", \"vb\"],\n  \"overheat\": [\"ow1 v-er hh-iy-t\", \"vb\"],\n  \"overheating\": [\"ow1 v-er hh-iy t-ih-ng\", \"vbg jj\"],\n  \"overjoyed\": [\"ow v-er jh-oy1-d\", \"jj\"],\n  \"overkill\": [\"ow1 v-er k-ih-l\", \"nn\"],\n  \"overlaid\": [\"ow1 v-er l-ey-d\", \"vbn\"],\n  \"overland\": [\"ow1 v-er l-ae-n-d\", \"rb\"],\n  \"overlap\": [\"ow1 v-er l-ae-p\", \"nn vb vbp\"],\n  \"overlapping\": [\"ow1 v-er l-ae p-ih-ng\", \"vbg jj nn\"],\n  \"overlay\": [\"ow1 v-er l-ey\", \"nn vb vbp\"],\n  \"overleveraged\": [\"ow1 v-er l-eh1 v-r-ih-jh-d\", \"jj\"],\n  \"overload\": [\"ow1 v-er l-ow-d\", \"nn vbp vb\"],\n  \"overloaded\": [\"ow1 v-er l-ow d-ih-d\", \"vbn jj\"],\n  \"overlook\": [\"ow1 v-er l-uh-k\", \"vb vbp\"],\n  \"overly\": [\"ow1 v-er l-iy\", \"rb\"],\n  \"overlying\": [\"ow v-er l-ay1 ih-ng\", \"jj\"],\n  \"overnight\": [\"ow1 v-er n-ay1-t\", \"jj nn rb\"],\n  \"overnighter\": [\"ow v-er n-ay1 t-er\", \"nn\"],\n  \"overpaid\": [\"ow1 v-er p-ey1-d\", \"vbn vbd jj\"],\n  \"overpass\": [\"ow1 v-er p-ae-s\", \"nn\"],\n  \"overpay\": [\"ow1 v-er p-ey\", \"vb\"],\n  \"overpayment\": [\"ow1 v-er p-ey m-ah-n-t\", \"nn\"],\n  \"overplay\": [\"ow1-v-er-p-l-ey1\", \"vb\"],\n  \"overpopulation\": [\"ow v-er p-aa p-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"overpower\": [\"ow-v-er-p-aw1-er\", \"vb\"],\n  \"overpowering\": [\"ow1 v-er p-aw1 r-ih-ng\", \"jj\"],\n  \"overprice\": [\"ow-v-er-p-r-ay1-s\", \"vb\"],\n  \"overpriced\": [\"ow1 v-er p-r-ay-s-t\", \"vbn jj\"],\n  \"overproduce\": [\"ow1 v-er p-r-ah d-uw1-s\", \"vb\"],\n  \"overproducer\": [\"ow1 v-er p-r-ah d-uw1 s-er\", \"nn\"],\n  \"overran\": [\"ow1 v-er r-ae1-n\", \"vbd\"],\n  \"overrate\": [\"ow-v-er-r-ey1-t\", \"vb\"],\n  \"overreach\": [\"ow1 v-er r-iy-ch\", \"vb\"],\n  \"overreact\": [\"ow1 v-er r-iy ae1-k-t\", \"vb vbp\"],\n  \"overreaction\": [\"ow1 v-er r-iy ae-k sh-ah-n\", \"nn\"],\n  \"overregulate\": [\"ow1-v-er-r-eh1-g-y-ah-l-ey-t\", \"vb\"],\n  \"overregulated\": [\"ow v-er r-eh1 g-y-ah l-ey t-ih-d\", \"jj vbn\"],\n  \"overregulation\": [\"ow v-er r-eh g-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"overridden\": [\"ow1 v-er r-ih1 d-ah-n\", \"vbn\"],\n  \"override\": [\"ow1 v-er r-ay-d\", \"vb nn\"],\n  \"overriding\": [\"ow1 v-er r-ay d-ih-ng\", \"vbg jj\"],\n  \"overrode\": [\"ow1 v-er r-ow1-d\", \"vbd\"],\n  \"overrule\": [\"ow1 v-er r-uw-l\", \"vb\"],\n  \"overrun\": [\"ow1 v-er r-ah-n\", \"vbn jj nn\"],\n  \"oversaw\": [\"ow1 v-er s-ao\", \"vbd\"],\n  \"overseas\": [\"ow1 v-er s-iy1-z\", \"jj nn rb\"],\n  \"oversee\": [\"ow1 v-er s-iy\", \"vb\"],\n  \"overseen\": [\"ow1 v-er s-iy-n\", \"vbn nn\"],\n  \"overseer\": [\"ow1 v-er s-iy1 er\", \"nn\"],\n  \"oversell\": [\"ow1 v-er s-eh-l\", \"vb vbp\"],\n  \"overshadow\": [\"ow1 v-er sh-ae1 d-ow\", \"vbp vb\"],\n  \"overshot\": [\"ow1 v-er sh-aa-t\", \"vbd\"],\n  \"oversight\": [\"ow1 v-er s-ay-t\", \"nn\"],\n  \"oversimplified\": [\"ow v-er s-ih1-m p-l-ih f-ay-d\", \"vbn jj\"],\n  \"oversimplify\": [\"ow-v-er-s-ih1-m-p-l-ih-f-ay\", \"vb\"],\n  \"oversize\": [\"ow v-er s-ay1-z\", \"jj nn\"],\n  \"oversized\": [\"ow1 v-er s-ay1-z-d\", \"jj\"],\n  \"oversold\": [\"ow1 v-er s-ow-l-d\", \"vbn vbd jj\"],\n  \"overspend\": [\"ow1-v-er-s-p-eh-n-d\", \"vb\"],\n  \"overstaffed\": [\"ow1 v-er s-t-ae-f-t\", \"jj\"],\n  \"overstate\": [\"ow1 v-er s-t-ey-t\", \"vb vbp\"],\n  \"overstatement\": [\"ow1 v-er s-t-ey-t m-ah-n-t\", \"nn\"],\n  \"overstep\": [\"ow1-v-er-s-t-eh-p\", \"vb\"],\n  \"oversupplied\": [\"ow v-er s-ah p-l-ay1-d\", \"jj vbn\"],\n  \"oversupply\": [\"ow v-er s-ah p-l-ay1\", \"nn\"],\n  \"overt\": [\"ow v-er1-t\", \"jj\"],\n  \"overtake\": [\"ow1 v-er t-ey-k\", \"vb vbp\"],\n  \"overtaken\": [\"ow1 v-er t-ey k-ah-n\", \"vbn\"],\n  \"overtax\": [\"ow1-v-er-t-ae-k-s\", \"vb\"],\n  \"overtaxed\": [\"ow v-er t-ae1-k-s-t\", \"jj vbn\"],\n  \"overthrow\": [\"ow1 v-er th-r-ow\", \"vb nn\"],\n  \"overthrown\": [\"ow v-er th-r-ow1-n\", \"vbn\"],\n  \"overtime\": [\"ow1 v-er t-ay-m\", \"nn jj rb\"],\n  \"overtly\": [\"ow v-er1-t l-iy\", \"rb\"],\n  \"overtone\": [\"ow1 v-er t-ow-n\", \"nn\"],\n  \"overtook\": [\"ow v-er t-uh1-k\", \"vbd\"],\n  \"overture\": [\"ow1 v-er ch-er\", \"nn\"],\n  \"overturn\": [\"ow1 v-er t-er-n\", \"vb\"],\n  \"overuse\": [\"ow v-er y-uw1-z\", \"nn vb\"],\n  \"overused\": [\"ow v-er y-uw1-z-d\", \"vbn jj\"],\n  \"overvalue\": [\"ow1-v-er-v-ae-l-y-uw\", \"vb\"],\n  \"overvalued\": [\"ow1 v-er v-ae-l y-uw-d\", \"vbn jj vbd\"],\n  \"overview\": [\"ow1 v-er v-y-uw\", \"nn\"],\n  \"overweight\": [\"ow v-er w-ey1-t\", \"jj nn vb\"],\n  \"overwhelm\": [\"ow v-er w-eh1-l-m\", \"vb vbp\"],\n  \"overwhelmed\": [\"ow v-er w-eh1-l-m-d\", \"vbn vbd jj\"],\n  \"overwhelming\": [\"ow v-er w-eh1-l m-ih-ng\", \"jj vbg\"],\n  \"overwhelmingly\": [\"ow v-er w-eh1-l m-ih-ng l-iy\", \"rb\"],\n  \"overwork\": [\"ow-v-er-w-er1-k\", \"vb\"],\n  \"overworked\": [\"ow v-er w-er1-k-t\", \"vbn jj\"],\n  \"overwritten\": [\"ow v-er r-ih1 t-ah-n\", \"jj\"],\n  \"overwrought\": [\"ow v-er r-ao1-t\", \"jj\"],\n  \"overzealous\": [\"ow v-er z-eh1 l-ah-s\", \"jj\"],\n  \"ovulation\": [\"ow v-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"owe\": [\"ow1\", \"vbp vb\"],\n  \"owing\": [\"ow1 ih-ng\", \"jj vbg\"],\n  \"owl\": [\"aw1-l\", \"nn\"],\n  \"own\": [\"ow1-n\", \"jj vbp vb\"],\n  \"owned\": [\"ow1-n-d\", \"vbn vbd jj\"],\n  \"owner\": [\"ow1 n-er\", \"nn\"],\n  \"ownership\": [\"ow1 n-er sh-ih-p\", \"nn\"],\n  \"ox\": [\"aa1-k-s\", \"nn\"],\n  \"oxcart\": [\"aa1-k-s k-aa-r-t\", \"nn\"],\n  \"oxidation\": [\"aa-k s-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"oxide\": [\"aa1-k s-ay-d\", \"nn\"],\n  \"oxidized\": [\"aa1-k s-ah d-ay-z-d\", \"jj\"],\n  \"oxygen\": [\"aa1-k s-ah jh-ah-n\", \"nn\"],\n  \"oyster\": [\"oy1 s-t-er\", \"nn\"],\n  \"ozone\": [\"ow1 z-ow-n\", \"nn\"],\n  \"pace\": [\"p-ey1-s\", \"nn vb vbp\"],\n  \"pacemaker\": [\"p-ey1-s m-ey k-er\", \"nn\"],\n  \"pacer\": [\"p-ey1 s-er\", \"nn\"],\n  \"pachinko\": [\"p-ah ch-ih1-ng k-ow\", \"nn\"],\n  \"pacific\": [\"p-ah s-ih1 f-ih-k\", \"jj\"],\n  \"pacified\": [\"p-ae1 s-ah f-ay-d\", \"vbd\"],\n  \"pacifier\": [\"p-ae1 s-ah f-ay er\", \"nn\"],\n  \"pacifism\": [\"p-ae1 s-ih f-ih z-ah-m\", \"nn\"],\n  \"pacifist\": [\"p-ae1 s-ih f-ih-s-t\", \"nn\"],\n  \"pacify\": [\"p-ae1 s-ah f-ay\", \"vb\"],\n  \"pacing\": [\"p-ey1 s-ih-ng\", \"vbg jj nn\"],\n  \"pack\": [\"p-ae1-k\", \"nn vb vbp\"],\n  \"package\": [\"p-ae1 k-ah-jh\", \"nn vb\"],\n  \"packaged\": [\"p-ae1 k-ih-jh-d\", \"vbn jj\"],\n  \"packaging\": [\"p-ae1 k-ih jh-ih-ng\", \"nn vbg\"],\n  \"packed\": [\"p-ae1-k-t\", \"vbn jj vbd\"],\n  \"packer\": [\"p-ae1 k-er\", \"nn\"],\n  \"packet\": [\"p-ae1 k-ah-t\", \"nn\"],\n  \"pact\": [\"p-ae1-k-t\", \"nn\"],\n  \"pad\": [\"p-ae1-d\", \"nn vb\"],\n  \"padded\": [\"p-ae1 d-ah-d\", \"jj vbn\"],\n  \"padding\": [\"p-ae1 d-ih-ng\", \"nn vbg\"],\n  \"paddle\": [\"p-ae1 d-ah-l\", \"nn\"],\n  \"paddock\": [\"p-ae1 d-ah-k\", \"nn\"],\n  \"paddy\": [\"p-ae1 d-iy\", \"nn\"],\n  \"padlock\": [\"p-ae1-d l-aa-k\", \"nn vb\"],\n  \"paean\": [\"p-iy1 ah-n\", \"nn\"],\n  \"pagan\": [\"p-ey1 g-ah-n\", \"jj\"],\n  \"paganism\": [\"p-ey1 g-ah n-ih z-ah-m\", \"nn\"],\n  \"page\": [\"p-ey1-jh\", \"nn vb\"],\n  \"pageant\": [\"p-ae1 jh-ah-n-t\", \"nn\"],\n  \"pageantry\": [\"p-ae1 jh-ah-n t-r-iy\", \"nn\"],\n  \"pager\": [\"p-ey1 jh-er\", \"nn\"],\n  \"paging\": [\"p-ey1 jh-ih-ng\", \"nn\"],\n  \"pagoda\": [\"p-ah g-ow1 d-ah\", \"nn\"],\n  \"paid\": [\"p-ey1-d\", \"vbn vbd jj\"],\n  \"pail\": [\"p-ey1-l\", \"nn\"],\n  \"pain\": [\"p-ey1-n\", \"nn vb\"],\n  \"pained\": [\"p-ey1-n-d\", \"jj vbd vbn\"],\n  \"painful\": [\"p-ey1-n f-ah-l\", \"jj\"],\n  \"painfully\": [\"p-ey1-n f-ah l-iy\", \"rb\"],\n  \"painkiller\": [\"p-ey1-n k-ih l-er\", \"nn\"],\n  \"painless\": [\"p-ey1-n l-ah-s\", \"jj\"],\n  \"painlessly\": [\"p-ey1-n l-ah-s l-iy\", \"rb\"],\n  \"painstaking\": [\"p-ey1-n-s t-ey k-ih-ng\", \"jj\"],\n  \"painstakingly\": [\"p-ey1-n-s t-ey k-ih-ng l-iy\", \"rb\"],\n  \"paint\": [\"p-ey1-n-t\", \"nn vb vbp\"],\n  \"paintbrush\": [\"p-ey1-n-t b-r-ah-sh\", \"nn\"],\n  \"painted\": [\"p-ey1-n t-ah-d\", \"vbn vbd jj\"],\n  \"painter\": [\"p-ey1-n t-er\", \"nn\"],\n  \"painting\": [\"p-ey1-n t-ih-ng\", \"nn vbg\"],\n  \"pair\": [\"p-eh1-r\", \"nn vb\"],\n  \"paired\": [\"p-eh1-r-d\", \"vbn jj vbd\"],\n  \"pairing\": [\"p-eh1 r-ih-ng\", \"nn vbg\"],\n  \"pajama\": [\"p-ah jh-aa1 m-ah\", \"nn\"],\n  \"pal\": [\"p-ae1-l\", \"nn jj\"],\n  \"palace\": [\"p-ae1 l-ah-s\", \"nn\"],\n  \"palatability\": [\"p-ae l-ah t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"palatable\": [\"p-ae1 l-ah t-ah b-ah-l\", \"jj\"],\n  \"palate\": [\"p-ae1 l-ah-t\", \"nn\"],\n  \"palatial\": [\"p-ah l-ey1 sh-ah-l\", \"jj\"],\n  \"palazzo\": [\"p-ah l-aa1 z-ow\", \"nn\"],\n  \"pale\": [\"p-ey1-l\", \"jj vb vbp nn\"],\n  \"paled\": [\"p-ey1-l-d\", \"vbd vbn\"],\n  \"palest\": [\"p-ey1 l-ah-s-t\", \"jjs\"],\n  \"palette\": [\"p-ae1 l-ah-t\", \"nn\"],\n  \"palisade\": [\"p-ae l-ih s-ey1-d\", \"nn\"],\n  \"pall\": [\"p-aa1-l\", \"nn vb\"],\n  \"palladium\": [\"p-ah l-ey1 d-iy ah-m\", \"nn\"],\n  \"pallet\": [\"p-ae1 l-ah-t\", \"nn\"],\n  \"palliative\": [\"p-ae1 l-iy ah t-ih-v\", \"jj\"],\n  \"pallid\": [\"p-ae1 l-ah-d\", \"jj\"],\n  \"palm\": [\"p-aa1-m\", \"nn vb\"],\n  \"palpable\": [\"p-ae1-l p-ah b-ah-l\", \"jj\"],\n  \"palpably\": [\"p-ae1-l p-ah b-l-iy\", \"rb\"],\n  \"palpitation\": [\"p-ae-l p-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"palsy\": [\"p-ao1-l z-iy\", \"nn\"],\n  \"paltry\": [\"p-ao1-l t-r-iy\", \"jj\"],\n  \"pamper\": [\"p-ae1-m p-er\", \"vb\"],\n  \"pampered\": [\"p-ae1-m p-er-d\", \"jj\"],\n  \"pamphlet\": [\"p-ae1-m f-l-ah-t\", \"nn\"],\n  \"pamphleteer\": [\"p-ae-m f-l-ah t-ih1-r\", \"nn\"],\n  \"pan\": [\"p-ae1-n\", \"nn vb\"],\n  \"panacea\": [\"p-ae n-ah s-iy1 ah\", \"nn\"],\n  \"panache\": [\"p-ah n-aa1-sh\", \"nn\"],\n  \"pancake\": [\"p-ae1-n k-ey-k\", \"nn\"],\n  \"pancreas\": [\"p-ae1-n k-r-iy ah-s\", \"nn\"],\n  \"pandanus\": [\"p-ae-n d-ey1 n-ah-s\", \"nn\"],\n  \"pandemic\": [\"p-ae-n d-eh1 m-ih-k\", \"nn\"],\n  \"pandemonium\": [\"p-ae-n d-ih m-ow1 n-iy ah-m\", \"nn\"],\n  \"pander\": [\"p-ae1-n-d-er\", \"vb\"],\n  \"pane\": [\"p-ey1-n\", \"nn\"],\n  \"panel\": [\"p-ae1 n-ah-l\", \"nn\"],\n  \"paneled\": [\"p-ae1 n-ah-l-d\", \"jj\"],\n  \"paneling\": [\"p-ae1 n-ah l-ih-ng\", \"nn\"],\n  \"panelist\": [\"p-ae1 n-ah l-ih-s-t\", \"nn\"],\n  \"panelization\": [\"p-ae1 n-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"panelize\": [\"p-ae1-n-ah-l-ay-z\", \"vb\"],\n  \"pang\": [\"p-ae1-ng\", \"nn\"],\n  \"panhandle\": [\"p-ae1-n hh-ae-n d-ah-l\", \"nn\"],\n  \"panic\": [\"p-ae1 n-ih-k\", \"nn vb vbp\"],\n  \"panicked\": [\"p-ae1 n-ih-k-t\", \"vbd vbn jj\"],\n  \"panicky\": [\"p-ae1 n-ih k-iy\", \"jj\"],\n  \"panky\": [\"p-ae1-ng k-iy\", \"nn\"],\n  \"panoply\": [\"p-ae1 n-aa p-l-iy\", \"nn\"],\n  \"panorama\": [\"p-ae n-er ae1 m-ah\", \"nn\"],\n  \"panoramic\": [\"p-ae n-er ae1 m-ih-k\", \"jj\"],\n  \"pansy\": [\"p-ae1-n z-iy\", \"nn\"],\n  \"pant\": [\"p-ae1-n-t\", \"nn vb\"],\n  \"pantaloon\": [\"p-ae1-n t-ah l-uw-n\", \"nn\"],\n  \"pantheon\": [\"p-ae1-n th-iy aa-n\", \"nn\"],\n  \"panther\": [\"p-ae1-n th-er\", \"nn\"],\n  \"pantie\": [\"p-ae1-n t-iy\", \"nn\"],\n  \"panting\": [\"p-ae1-n t-ih-ng\", \"vbg jj nn\"],\n  \"pantomime\": [\"p-ae1-n t-ah m-ay-m\", \"nn vb vbp\"],\n  \"pantry\": [\"p-ae1-n t-r-iy\", \"nn\"],\n  \"pap\": [\"p-ae1-p\", \"nn\"],\n  \"papal\": [\"p-ey1 p-ah-l\", \"jj\"],\n  \"paper\": [\"p-ey1 p-er\", \"nn vb\"],\n  \"paperback\": [\"p-ey1 p-er b-ae-k\", \"nn jj\"],\n  \"paperboard\": [\"p-ey1 p-er b-ao-r-d\", \"nn\"],\n  \"paperboy\": [\"p-ey1 p-er b-ao-y\", \"nn\"],\n  \"paperless\": [\"p-ey1 p-er l-ah-s\", \"jj\"],\n  \"paperwork\": [\"p-ey1 p-er w-er-k\", \"nn\"],\n  \"papery\": [\"p-ey1 p-er iy\", \"jj\"],\n  \"paprika\": [\"p-ae p-r-iy1 k-ah\", \"nn\"],\n  \"parable\": [\"p-eh1 r-ah b-ah-l\", \"nn\"],\n  \"parachute\": [\"p-eh1 r-ah sh-uw-t\", \"nn vb\"],\n  \"parade\": [\"p-er ey1-d\", \"nn vb vbp\"],\n  \"paradigm\": [\"p-eh1 r-ah d-ay-m\", \"nn\"],\n  \"paradise\": [\"p-eh1 r-ah d-ay-s\", \"nn\"],\n  \"paradox\": [\"p-eh1 r-ah d-aa-k-s\", \"nn\"],\n  \"paradoxical\": [\"p-eh r-ah d-aa1-k s-ih k-ah-l\", \"jj\"],\n  \"paradoxically\": [\"p-eh r-ah d-aa1-k s-ah-k l-iy\", \"rb\"],\n  \"paragon\": [\"p-eh1 r-ah g-aa-n\", \"nn\"],\n  \"paragraph\": [\"p-ae1 r-ah g-r-ae-f\", \"nn\"],\n  \"parakeet\": [\"p-eh1 r-ah k-iy-t\", \"nn\"],\n  \"paralegal\": [\"p-eh r-ah l-iy1 g-ah-l\", \"nn\"],\n  \"parallel\": [\"p-eh1 r-ah l-eh-l\", \"jj rb vb vbp nn\"],\n  \"parallelism\": [\"p-eh1 r-ah l-eh l-ih z-ah-m\", \"nn\"],\n  \"paralysis\": [\"p-er ae1 l-ah s-ah-s\", \"nn\"],\n  \"paralyze\": [\"p-eh1 r-ah l-ay-z\", \"vb\"],\n  \"paralyzed\": [\"p-eh1 r-ah l-ay-z-d\", \"vbn jj\"],\n  \"paralyzing\": [\"p-eh1 r-ah l-ay z-ih-ng\", \"vbg jj\"],\n  \"parameter\": [\"p-er ae1 m-ah t-er\", \"nn\"],\n  \"parametric\": [\"p-eh r-ah m-eh1 t-r-ih-k\", \"jj\"],\n  \"paramilitary\": [\"p-eh r-ah m-ih1 l-ah t-eh r-iy\", \"jj\"],\n  \"paramount\": [\"p-eh1 r-ah m-aw-n-t\", \"jj\"],\n  \"paranoia\": [\"p-eh r-ah n-oy1 ah\", \"nn\"],\n  \"paranoiac\": [\"p-eh r-ah n-oy1 ae-k\", \"nn\"],\n  \"paranoid\": [\"p-eh1 r-ah n-oy-d\", \"jj\"],\n  \"paranormal\": [\"p-eh r-ah n-ao1-r m-ah-l\", \"jj\"],\n  \"paraphernalia\": [\"p-eh r-ah f-ah n-ey1 l-y-ah\", \"nn\"],\n  \"paraphrase\": [\"p-eh1 r-ah f-r-ey-z\", \"nn vb vbp\"],\n  \"parasite\": [\"p-eh1 r-ah s-ay-t\", \"nn\"],\n  \"parasitic\": [\"p-eh r-ah s-ih1 t-ih-k\", \"jj\"],\n  \"paratrooper\": [\"p-eh1 r-ah t-r-uw p-er\", \"nn\"],\n  \"parcel\": [\"p-aa1-r s-ah-l\", \"nn vbp jj vb\"],\n  \"parceling\": [\"p-aa1-r s-ah-l ih-ng\", \"nn\"],\n  \"parch\": [\"p-aa1-r-ch\", \"vb\"],\n  \"parched\": [\"p-aa1-r-ch-t\", \"vbn vbd jj\"],\n  \"parchment\": [\"p-aa1-r-ch m-ah-n-t\", \"nn\"],\n  \"pardon\": [\"p-aa1-r d-ah-n\", \"vb nn\"],\n  \"pare\": [\"p-eh1-r\", \"vb\"],\n  \"parent\": [\"p-eh1 r-ah-n-t\", \"nn jj\"],\n  \"parentage\": [\"p-eh1 r-ah-n t-ah-jh\", \"nn\"],\n  \"parental\": [\"p-er eh1-n t-ah-l\", \"jj\"],\n  \"parenthesis\": [\"p-er eh1-n th-ah s-ih-s\", \"nn\"],\n  \"parenthood\": [\"p-eh1 r-ah-n-t hh-uh-d\", \"nn\"],\n  \"parenting\": [\"p-eh1 r-ah-n t-ih-ng\", \"nn\"],\n  \"pariah\": [\"p-er ay1 ah\", \"nn\"],\n  \"parish\": [\"p-ae1 r-ih-sh\", \"nn\"],\n  \"parishioner\": [\"p-er ih1 sh-ah n-er\", \"nn\"],\n  \"parity\": [\"p-eh1 r-ah t-iy\", \"nn\"],\n  \"park\": [\"p-aa1-r-k\", \"nn vb\"],\n  \"parked\": [\"p-aa1-r-k-t\", \"vbn jj vbd\"],\n  \"parking\": [\"p-aa1-r k-ih-ng\", \"nn jj vbg\"],\n  \"parkway\": [\"p-aa1-r-k w-ey\", \"nn\"],\n  \"parlance\": [\"p-aa1-r l-ah-n-s\", \"nn\"],\n  \"parlay\": [\"p-aa1-r-l-ey\", \"vb\"],\n  \"parley\": [\"p-aa1-r l-iy\", \"nn vb\"],\n  \"parliament\": [\"p-aa1-r l-ah m-ah-n-t\", \"nn\"],\n  \"parliamentarian\": [\"p-aa-r l-ah m-ah-n t-eh1 r-iy ah-n\", \"nn\"],\n  \"parliamentary\": [\"p-aa-r l-ah m-eh1-n t-er iy\", \"jj\"],\n  \"parlor\": [\"p-aa1-r l-er\", \"nn\"],\n  \"parochial\": [\"p-er ow1 k-iy ah-l\", \"jj\"],\n  \"parodied\": [\"p-eh1 r-ah d-iy-d\", \"vbd\"],\n  \"parody\": [\"p-eh1 r-ah d-iy\", \"nn vb\"],\n  \"parole\": [\"p-er ow1-l\", \"nn jj\"],\n  \"parolee\": [\"p-er ow l-iy1\", \"nn\"],\n  \"parried\": [\"p-eh1 r-iy-d\", \"vbd\"],\n  \"parrot\": [\"p-eh1 r-ah-t\", \"nn\"],\n  \"parry\": [\"p-eh1 r-iy\", \"vb\"],\n  \"parse\": [\"p-aa1-r-s\", \"vb\"],\n  \"parsimony\": [\"p-aa1-r s-ah m-ow n-iy\", \"nn\"],\n  \"parsley\": [\"p-aa1-r-s l-iy\", \"nn\"],\n  \"parson\": [\"p-aa1-r s-ah-n\", \"nn\"],\n  \"parsonage\": [\"p-aa1-r s-ah-n ih-jh\", \"nn\"],\n  \"part\": [\"p-aa1-r-t\", \"nn jj rb vb\"],\n  \"partake\": [\"p-aa-r t-ey1-k\", \"vb vbp\"],\n  \"parted\": [\"p-aa1-r t-ah-d\", \"vbd vbn jj\"],\n  \"partial\": [\"p-aa1-r sh-ah-l\", \"jj nn\"],\n  \"partially\": [\"p-aa1-r sh-ah l-iy\", \"rb\"],\n  \"participant\": [\"p-aa-r t-ih1 s-ah p-ah-n-t\", \"nn\"],\n  \"participate\": [\"p-aa-r t-ih1 s-ah p-ey-t\", \"vb vbp\"],\n  \"participating\": [\"p-aa-r t-ih1 s-ah p-ey t-ih-ng\", \"vbg jj\"],\n  \"participation\": [\"p-aa-r t-ih s-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"participative\": [\"p-aa-r t-ih1 s-ah p-ah t-ih-v\", \"jj\"],\n  \"participatory\": [\"p-aa-r t-ih1 s-ah p-ah t-ao r-iy\", \"jj\"],\n  \"particle\": [\"p-aa1-r t-ah k-ah-l\", \"nn\"],\n  \"particular\": [\"p-er t-ih1 k-y-ah l-er\", \"jj nn rb\"],\n  \"particularity\": [\"p-er t-ih k-y-ah l-ae1 r-ah t-iy\", \"nn\"],\n  \"particularly\": [\"p-aa-r t-ih1 k-y-ah l-er l-iy\", \"rb\"],\n  \"particulate\": [\"p-er t-ih1 k-y-ah l-ah-t\", \"jj\"],\n  \"partisan\": [\"p-aa1-r t-ah z-ah-n\", \"jj nn\"],\n  \"partisanship\": [\"p-aa1-r t-ah z-ah-n sh-ih-p\", \"nn\"],\n  \"partition\": [\"p-aa-r t-ih1 sh-ah-n\", \"nn vb\"],\n  \"partly\": [\"p-aa1-r-t l-iy\", \"rb\"],\n  \"partner\": [\"p-aa1-r-t n-er\", \"nn\"],\n  \"partnership\": [\"p-aa1-r-t n-er sh-ih-p\", \"nn\"],\n  \"party\": [\"p-aa1-r t-iy\", \"nn vb\"],\n  \"pass\": [\"p-ae1-s\", \"vb vbp nn\"],\n  \"passable\": [\"p-ae1 s-ah b-ah-l\", \"jj\"],\n  \"passably\": [\"p-ae1 s-ah b-l-iy\", \"rb\"],\n  \"passage\": [\"p-ae1 s-ah-jh\", \"nn\"],\n  \"passageway\": [\"p-ae1 s-ah-jh w-ey\", \"nn\"],\n  \"passbook\": [\"p-ae1-s b-uh-k\", \"nn\"],\n  \"passe\": [\"p-ae s-ey1\", \"jj\"],\n  \"passel\": [\"p-ae1 s-ih-l\", \"nn\"],\n  \"passenger\": [\"p-ae1 s-ah-n jh-er\", \"nn jj\"],\n  \"passerby\": [\"p-ae1 s-er b-iy\", \"nn\"],\n  \"passing\": [\"p-ae1 s-ih-ng\", \"vbg jj nn\"],\n  \"passion\": [\"p-ae1 sh-ah-n\", \"nn\"],\n  \"passionate\": [\"p-ae1 sh-ah n-ah-t\", \"jj\"],\n  \"passionately\": [\"p-ae1 sh-ah n-ah-t l-iy\", \"rb\"],\n  \"passive\": [\"p-ae1 s-ih-v\", \"jj nn\"],\n  \"passively\": [\"p-ae1 s-ih-v l-iy\", \"rb\"],\n  \"passivity\": [\"p-ah s-ih1 v-ih t-iy\", \"nn\"],\n  \"passport\": [\"p-ae1-s p-ao-r-t\", \"nn\"],\n  \"password\": [\"p-ae1-s w-er-d\", \"nn\"],\n  \"past\": [\"p-ae1-s-t\", \"jj in nn rb\"],\n  \"pasta\": [\"p-aa1 s-t-ah\", \"nn\"],\n  \"paste\": [\"p-ey1-s-t\", \"nn vb\"],\n  \"pastel\": [\"p-ae s-t-eh1-l\", \"jj nn\"],\n  \"pasteurization\": [\"p-ae-s ch-er ah z-ey1 sh-ah-n\", \"nn\"],\n  \"pasteurize\": [\"p-ae1-s-ch-er-ay-z\", \"vb\"],\n  \"pastime\": [\"p-ae1 s-t-ay-m\", \"nn\"],\n  \"pastor\": [\"p-ae1 s-t-er\", \"nn\"],\n  \"pastoral\": [\"p-ae1 s-t-er ah-l\", \"jj\"],\n  \"pastrami\": [\"p-ah s-t-r-aa1 m-iy\", \"nn\"],\n  \"pastry\": [\"p-ey1-s t-r-iy\", \"nn\"],\n  \"pasture\": [\"p-ae1-s ch-er\", \"nn jj vb\"],\n  \"pat\": [\"p-ae1-t\", \"jj nn vb\"],\n  \"patch\": [\"p-ae1-ch\", \"nn vb\"],\n  \"patched\": [\"p-ae1-ch-t\", \"vbn jj\"],\n  \"patchwork\": [\"p-ae1-ch w-er-k\", \"nn jj\"],\n  \"pate\": [\"p-ey1-t\", \"nn\"],\n  \"patent\": [\"p-ae1 t-ah-n-t\", \"nn jj vb\"],\n  \"patented\": [\"p-ae1 t-ah-n t-ah-d\", \"vbn vbd jj\"],\n  \"patently\": [\"p-ae1 t-ah-n-t l-iy\", \"rb\"],\n  \"pater\": [\"p-ey1 t-er\", \"nn\"],\n  \"paternal\": [\"p-ah t-er1 n-ah-l\", \"jj\"],\n  \"paternalism\": [\"p-ah t-er1 n-ah l-ih z-ah-m\", \"nn jj\"],\n  \"paternalistic\": [\"p-ah t-er n-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"paternity\": [\"p-ah t-er1 n-ih t-iy\", \"nn\"],\n  \"path\": [\"p-ae1-th\", \"nn\"],\n  \"pathetic\": [\"p-ah th-eh1 t-ih-k\", \"jj\"],\n  \"pathfinder\": [\"p-ae1-th f-ay-n d-er\", \"nn\"],\n  \"pathogenic\": [\"p-ae th-ah jh-eh1 n-ih-k\", \"jj\"],\n  \"pathological\": [\"p-ae th-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"pathologist\": [\"p-ah th-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"pathology\": [\"p-ah th-aa1 l-ah jh-iy\", \"nn\"],\n  \"pathos\": [\"p-ey1 th-aa-s\", \"nn\"],\n  \"pathway\": [\"p-ae1-th w-ey\", \"nn\"],\n  \"patience\": [\"p-ey1 sh-ah-n-s\", \"nn\"],\n  \"patient\": [\"p-ey1 sh-ah-n-t\", \"nn jj\"],\n  \"patiently\": [\"p-ey1 sh-ah-n-t l-iy\", \"rb\"],\n  \"patina\": [\"p-ah t-iy1 n-ah\", \"nn\"],\n  \"patio\": [\"p-ae1 t-iy ow\", \"nn\"],\n  \"patriarch\": [\"p-ey1 t-r-iy aa-r-k\", \"nn\"],\n  \"patriarchal\": [\"p-ey t-r-iy aa1-r k-ah-l\", \"jj\"],\n  \"patriarchy\": [\"p-ey1 t-r-iy aa-r k-iy\", \"nn\"],\n  \"patrimony\": [\"p-ae1 t-r-ah m-ow n-iy\", \"nn\"],\n  \"patriot\": [\"p-ey1 t-r-iy ah-t\", \"nn\"],\n  \"patriotic\": [\"p-ey t-r-iy aa1 t-ih-k\", \"jj nn\"],\n  \"patriotism\": [\"p-ey1 t-r-iy ah t-ih z-ah-m\", \"nn\"],\n  \"patrol\": [\"p-ah t-r-ow1-l\", \"nn vbp vb\"],\n  \"patrolman\": [\"p-ah t-r-ow1-l m-ae-n\", \"nn\"],\n  \"patron\": [\"p-ey1 t-r-ah-n\", \"nn\"],\n  \"patronage\": [\"p-ae1 t-r-ah n-ih-jh\", \"nn\"],\n  \"patronize\": [\"p-ey1 t-r-ah n-ay-z\", \"vb\"],\n  \"patronizing\": [\"p-ey1 t-r-ah n-ay z-ih-ng\", \"vbg jj\"],\n  \"patsy\": [\"p-ae1-t s-iy\", \"nn\"],\n  \"patter\": [\"p-ae1 t-er\", \"nn vb\"],\n  \"pattern\": [\"p-ae1 t-er-n\", \"nn vb\"],\n  \"patterned\": [\"p-ae1 t-er-n-d\", \"vbn jj\"],\n  \"patty\": [\"p-ae1 t-iy\", \"nn\"],\n  \"paucity\": [\"p-ao1 s-ah t-iy\", \"nn\"],\n  \"paunchy\": [\"p-ao1-n ch-iy\", \"jj\"],\n  \"pauper\": [\"p-ao1 p-er\", \"nn\"],\n  \"pause\": [\"p-ao1-z\", \"nn vbp vb\"],\n  \"pave\": [\"p-ey1-v\", \"vb\"],\n  \"paved\": [\"p-ey1-v-d\", \"jj vbd vbn\"],\n  \"pavement\": [\"p-ey1-v m-ah-n-t\", \"nn\"],\n  \"pavilion\": [\"p-ah v-ih1-l y-ah-n\", \"nn\"],\n  \"paw\": [\"p-ao1\", \"nn vb\"],\n  \"pawn\": [\"p-ao1-n\", \"nn vb\"],\n  \"pawnshop\": [\"p-ao1-n sh-aa-p\", \"nn\"],\n  \"pay\": [\"p-ey1\", \"vb vbp nn\"],\n  \"payable\": [\"p-ey1 ah b-ah-l\", \"jj\"],\n  \"payback\": [\"p-ey1 b-ae-k\", \"nn\"],\n  \"paycheck\": [\"p-ey1 ch-eh-k\", \"nn\"],\n  \"payday\": [\"p-ey1 d-ey\", \"nn\"],\n  \"payer\": [\"p-ey1 er\", \"nn\"],\n  \"paying\": [\"p-ey1 ih-ng\", \"vbg jj\"],\n  \"payload\": [\"p-ey1 l-ow-d\", \"nn\"],\n  \"payment\": [\"p-ey1 m-ah-n-t\", \"nn\"],\n  \"payoff\": [\"p-ey1 ao-f\", \"nn\"],\n  \"payola\": [\"p-ey ow1 l-ah\", \"nn\"],\n  \"payout\": [\"p-ey1 aw-t\", \"nn\"],\n  \"payroll\": [\"p-ey1 r-ow-l\", \"nn\"],\n  \"pea\": [\"p-iy1\", \"nn\"],\n  \"peace\": [\"p-iy1-s\", \"nn\"],\n  \"peaceable\": [\"p-iy1 s-ah b-ah-l\", \"jj\"],\n  \"peaceful\": [\"p-iy1-s f-ah-l\", \"jj\"],\n  \"peacefully\": [\"p-iy1-s f-ah l-iy\", \"rb\"],\n  \"peacekeeping\": [\"p-iy1-s k-iy p-ih-ng\", \"jj\"],\n  \"peacemaker\": [\"p-iy1-s m-ey k-er\", \"nn\"],\n  \"peacemaking\": [\"p-iy1-s m-ey k-ih-ng\", \"nn jj\"],\n  \"peacetime\": [\"p-iy1-s t-ay-m\", \"nn\"],\n  \"peach\": [\"p-iy1-ch\", \"nn\"],\n  \"peacock\": [\"p-iy1 k-aa-k\", \"nn\"],\n  \"peak\": [\"p-iy1-k\", \"nn vbp jj vb\"],\n  \"peaked\": [\"p-iy1-k-t\", \"vbd jj vbn\"],\n  \"peal\": [\"p-iy1-l\", \"nn\"],\n  \"peanut\": [\"p-iy1 n-ah-t\", \"nn jj\"],\n  \"pear\": [\"p-eh1-r\", \"nn\"],\n  \"pearl\": [\"p-er1-l\", \"nn\"],\n  \"pearly\": [\"p-er1 l-iy\", \"jj\"],\n  \"peasant\": [\"p-eh1 z-ah-n-t\", \"nn jj\"],\n  \"pebble\": [\"p-eh1 b-ah-l\", \"nn\"],\n  \"pecan\": [\"p-ah k-aa1-n\", \"nn\"],\n  \"peck\": [\"p-eh1-k\", \"vbp nn vb\"],\n  \"peculiar\": [\"p-ah k-y-uw1 l-y-er\", \"jj nn\"],\n  \"peculiarity\": [\"p-ih k-y-uw l-iy eh1 r-ah t-iy\", \"nn\"],\n  \"peculiarly\": [\"p-ih k-y-uw1 l-y-er l-iy\", \"rb\"],\n  \"pecuniary\": [\"p-eh k-y-uw1 n-iy eh r-iy\", \"jj\"],\n  \"pedagogical\": [\"p-eh d-ah g-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"pedal\": [\"p-eh1 d-ah-l\", \"vb nn\"],\n  \"pedantic\": [\"p-ah d-ae1-n t-ih-k\", \"jj\"],\n  \"peddle\": [\"p-eh1 d-ah-l\", \"vb vbp\"],\n  \"peddler\": [\"p-eh1-d l-er\", \"nn\"],\n  \"peddling\": [\"p-eh1 d-ah-l ih-ng\", \"vbg jj nn\"],\n  \"pedestal\": [\"p-eh1 d-ah s-t-ah-l\", \"nn\"],\n  \"pedestrian\": [\"p-ah d-eh1-s t-r-iy ah-n\", \"jj nn\"],\n  \"pediatric\": [\"p-iy d-iy ae1 t-r-ih-k\", \"jj\"],\n  \"pediatrician\": [\"p-iy d-iy ah t-r-ih1 sh-ah-n\", \"nn\"],\n  \"pediatrics\": [\"p-iy d-iy ae1 t-r-ih-k-s\", \"nn\"],\n  \"pedigree\": [\"p-eh1 d-ah g-r-iy\", \"nn\"],\n  \"peed\": [\"p-iy1-d\", \"vbn\"],\n  \"peek\": [\"p-iy1-k\", \"nn vb\"],\n  \"peel\": [\"p-iy1-l\", \"vb\"],\n  \"peep\": [\"p-iy1-p\", \"nn vb\"],\n  \"peer\": [\"p-ih1-r\", \"nn vbp vb\"],\n  \"peerless\": [\"p-ih1-r l-ih-s\", \"jj\"],\n  \"peg\": [\"p-eh1-g\", \"vbp nn vb\"],\n  \"pegboard\": [\"p-eh1-g b-ao-r-d\", \"nn\"],\n  \"pegged\": [\"p-eh1-g-d\", \"vbn vbd jj\"],\n  \"pejorative\": [\"p-ah jh-ao1 r-ah t-ih-v\", \"jj\"],\n  \"pellet\": [\"p-eh1 l-ah-t\", \"nn\"],\n  \"pelt\": [\"p-eh1-l-t\", \"nn\"],\n  \"pelvic\": [\"p-eh1-l v-ih-k\", \"jj nn\"],\n  \"pelvis\": [\"p-eh1-l v-ah-s\", \"nn\"],\n  \"pen\": [\"p-eh1-n\", \"nn vb\"],\n  \"penal\": [\"p-iy1 n-ah-l\", \"jj\"],\n  \"penalize\": [\"p-eh1 n-ah l-ay-z\", \"vb vbp\"],\n  \"penalty\": [\"p-eh1 n-ah-l t-iy\", \"nn\"],\n  \"penance\": [\"p-eh1 n-ah-n-s\", \"nn\"],\n  \"pence\": [\"p-eh1-n-s\", \"nn\"],\n  \"penchant\": [\"p-eh1-n ch-ah-n-t\", \"nn\"],\n  \"pencil\": [\"p-eh1-n s-ah-l\", \"nn vb\"],\n  \"pendant\": [\"p-eh1-n d-ah-n-t\", \"nn\"],\n  \"pending\": [\"p-eh1-n d-ih-ng\", \"vbg jj\"],\n  \"pendulum\": [\"p-eh1-n jh-ah l-ah-m\", \"nn\"],\n  \"penetrate\": [\"p-eh1 n-ah t-r-ey-t\", \"vb vbp\"],\n  \"penetrating\": [\"p-eh1 n-ah t-r-ey t-ih-ng\", \"jj vbg\"],\n  \"penetration\": [\"p-eh n-ah t-r-ey1 sh-ah-n\", \"nn\"],\n  \"penicillin\": [\"p-eh n-ah s-ih1 l-ah-n\", \"nn\"],\n  \"peninsula\": [\"p-ah n-ih1-n s-ah l-ah\", \"nn\"],\n  \"penitentiary\": [\"p-eh n-ih t-eh1-n ch-er iy\", \"nn\"],\n  \"penman\": [\"p-eh1-n m-ah-n\", \"nn\"],\n  \"pennant\": [\"p-eh1 n-ah-n-t\", \"nn\"],\n  \"penniless\": [\"p-eh1 n-iy l-ah-s\", \"jj\"],\n  \"penny\": [\"p-eh1 n-iy\", \"nn\"],\n  \"pension\": [\"p-eh1-n sh-ah-n\", \"nn\"],\n  \"pensioner\": [\"p-eh1-n sh-ah n-er\", \"nn\"],\n  \"pentagon\": [\"p-eh1-n t-ih g-aa-n\", \"nn\"],\n  \"penthouse\": [\"p-eh1-n-t hh-aw-s\", \"nn\"],\n  \"peony\": [\"p-iy1 ah n-iy\", \"nn\"],\n  \"people\": [\"p-iy p-ah-l\", \"nn\"],\n  \"pepper\": [\"p-eh1 p-er\", \"nn vb\"],\n  \"peppered\": [\"p-eh1 p-er-d\", \"vbd vbn jj\"],\n  \"peppermint\": [\"p-eh1 p-er m-ih-n-t\", \"nn\"],\n  \"pepperoni\": [\"p-eh p-er ow1 n-iy\", \"nn\"],\n  \"peppy\": [\"p-eh1 p-iy\", \"jj\"],\n  \"perceive\": [\"p-er s-iy1-v\", \"vb vbp\"],\n  \"perceived\": [\"p-er s-iy1-v-d\", \"vbn vbd jj\"],\n  \"percent\": [\"p-er s-eh1-n-t\", \"nn\"],\n  \"percentage\": [\"p-er s-eh1-n t-ah-jh\", \"nn\"],\n  \"perceptible\": [\"p-er s-eh1-p t-ah b-ah-l\", \"jj\"],\n  \"perception\": [\"p-er s-eh1-p sh-ah-n\", \"nn\"],\n  \"perceptive\": [\"p-er s-eh1-p t-ih-v\", \"jj\"],\n  \"perceptual\": [\"p-er s-eh1-p ch-ah w-ah-l\", \"jj\"],\n  \"perch\": [\"p-er1-ch\", \"nn vb\"],\n  \"perchlorate\": [\"p-er k-l-ao1 r-ey-t\", \"nn\"],\n  \"percussion\": [\"p-er k-ah1 sh-ah-n\", \"nn\"],\n  \"percussionist\": [\"p-er k-ah1 sh-ah n-ih-s-t\", \"nn\"],\n  \"peremptory\": [\"p-er eh1-m-p t-er iy\", \"jj\"],\n  \"perennial\": [\"p-er eh1 n-iy ah-l\", \"jj\"],\n  \"perennially\": [\"p-er eh1 n-iy ah l-iy\", \"rb\"],\n  \"perestroika\": [\"p-eh r-ah s-t-r-oy1 k-ah\", \"nn\"],\n  \"perfect\": [\"p-er f-eh1-k-t\", \"jj nn vb\"],\n  \"perfection\": [\"p-er f-eh1-k sh-ah-n\", \"nn\"],\n  \"perfectionism\": [\"p-er f-eh1-k sh-ah n-ih z-ah-m\", \"nn\"],\n  \"perfectly\": [\"p-er1 f-ah-k-t l-iy\", \"rb\"],\n  \"perfidy\": [\"p-er1 f-ih d-iy\", \"nn\"],\n  \"perforated\": [\"p-er1 f-er ey t-ah-d\", \"jj\"],\n  \"perforation\": [\"p-er f-er ey1 sh-ah-n\", \"nn\"],\n  \"perforce\": [\"p-er f-ao1-r-s\", \"rb\"],\n  \"perform\": [\"p-er f-ao1-r-m\", \"vb vbp\"],\n  \"performance\": [\"p-er f-ao1-r m-ah-n-s\", \"nn\"],\n  \"performer\": [\"p-er f-ao1-r m-er\", \"nn jj\"],\n  \"performing\": [\"p-er f-ao1-r m-ih-ng\", \"vbg jj\"],\n  \"perfume\": [\"p-er f-y-uw1-m\", \"nn vb\"],\n  \"perfumed\": [\"p-er f-y-uw1-m-d\", \"jj vbn\"],\n  \"perfunctory\": [\"p-er f-ah1-ng-k t-er iy\", \"jj\"],\n  \"perhaps\": [\"p-er hh-ae1-p-s\", \"rb\"],\n  \"peril\": [\"p-eh1 r-ah-l\", \"nn\"],\n  \"perilous\": [\"p-eh1 r-ah l-ah-s\", \"jj\"],\n  \"perilously\": [\"p-eh1 r-ah l-ah-s l-iy\", \"rb\"],\n  \"perimeter\": [\"p-er ih1 m-ah t-er\", \"nn\"],\n  \"period\": [\"p-ih1 r-iy ah-d\", \"nn\"],\n  \"periodic\": [\"p-ih r-iy aa1 d-ih-k\", \"jj\"],\n  \"periodical\": [\"p-ih r-iy aa1 d-ih k-ah-l\", \"nn\"],\n  \"periodically\": [\"p-iy r-iy aa1 d-ih k-ah l-iy\", \"rb\"],\n  \"periodontal\": [\"p-eh r-iy ah d-aa1-n t-ah-l\", \"jj\"],\n  \"peripheral\": [\"p-er ih1 f-er ah-l\", \"jj\"],\n  \"periphery\": [\"p-er ih1 f-er iy\", \"nn\"],\n  \"perish\": [\"p-eh1 r-ih-sh\", \"vb\"],\n  \"perishable\": [\"p-eh1 r-ih sh-ah b-ah-l\", \"jj\"],\n  \"perjury\": [\"p-er1 jh-er iy\", \"nn\"],\n  \"perk\": [\"p-er1-k\", \"jj vb\"],\n  \"perky\": [\"p-er1 k-iy\", \"jj\"],\n  \"permanence\": [\"p-er1 m-ah n-ah-n-s\", \"nn\"],\n  \"permanent\": [\"p-er1 m-ah n-ah-n-t\", \"jj\"],\n  \"permanently\": [\"p-er1 m-ah n-ah-n-t l-iy\", \"rb\"],\n  \"permeate\": [\"p-er1 m-iy ey-t\", \"vb\"],\n  \"permissible\": [\"p-er m-ih1 s-ah b-ah-l\", \"jj nn\"],\n  \"permission\": [\"p-er m-ih1 sh-ah-n\", \"nn\"],\n  \"permissive\": [\"p-er m-ih1 s-ih-v\", \"jj\"],\n  \"permit\": [\"p-er m-ih1-t\", \"vb vbp nn\"],\n  \"permitted\": [\"p-er m-ih1 t-ah-d\", \"vbn jj vbd\"],\n  \"pernicious\": [\"p-er n-ih1 sh-ah-s\", \"jj\"],\n  \"peroxide\": [\"p-er aa1-k s-ay-d\", \"nn\"],\n  \"perpendicular\": [\"p-er p-ah-n d-ih1 k-y-ah l-er\", \"jj\"],\n  \"perpetrate\": [\"p-er1 p-ah t-r-ey-t\", \"vb\"],\n  \"perpetrator\": [\"p-er1 p-ah t-r-ey t-er\", \"nn\"],\n  \"perpetual\": [\"p-er p-eh1 ch-uw ah-l\", \"jj\"],\n  \"perpetually\": [\"p-er p-eh1 ch-uw ah l-iy\", \"rb\"],\n  \"perpetuate\": [\"p-er p-eh1 ch-ah-w ey-t\", \"vb vbp\"],\n  \"perpetuation\": [\"p-er p-eh ch-ah-w ey1 sh-ah-n\", \"nn\"],\n  \"perpetuity\": [\"p-er p-ih t-y-uw1 ih t-iy\", \"nn\"],\n  \"perplex\": [\"p-er-p-l-eh1-k-s\", \"vb\"],\n  \"perplexed\": [\"p-er p-l-eh1-k-s-t\", \"jj vbn\"],\n  \"perplexing\": [\"p-er p-l-eh1-k s-ih-ng\", \"jj\"],\n  \"perplexity\": [\"p-er p-l-eh1-k s-ah t-iy\", \"nn\"],\n  \"perquisite\": [\"p-er1 k-w-ah z-ih-t\", \"nn\"],\n  \"persecute\": [\"p-er1 s-ah k-y-uw-t\", \"vb vbp\"],\n  \"persecution\": [\"p-er s-ah k-y-uw1 sh-ah-n\", \"nn\"],\n  \"perseverance\": [\"p-er s-ah v-ih1 r-ah-n-s\", \"nn\"],\n  \"persevere\": [\"p-er s-ah v-ih1-r\", \"vb vbp\"],\n  \"pershare\": [\"p-er sh-eh1-r\", \"jj\"],\n  \"persist\": [\"p-er s-ih1-s-t\", \"vb vbp\"],\n  \"persistence\": [\"p-er s-ih1 s-t-ah-n-s\", \"nn jj\"],\n  \"persistent\": [\"p-er s-ih1 s-t-ah-n-t\", \"jj nn\"],\n  \"persistently\": [\"p-er s-ih1 s-t-ah-n-t l-iy\", \"rb\"],\n  \"persisting\": [\"p-er s-ih1 s-t-ih-ng\", \"vbg jj\"],\n  \"person\": [\"p-er1 s-ah-n\", \"nn\"],\n  \"persona\": [\"p-er s-ow1 n-ah\", \"nn\"],\n  \"personal\": [\"p-er1 s-ih n-ih-l\", \"jj nn\"],\n  \"personality\": [\"p-er s-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"personalize\": [\"p-er1 s-ah-n ah l-ay-z\", \"vb\"],\n  \"personalized\": [\"p-er1 s-ah-n ah l-ay-z-d\", \"vbn jj\"],\n  \"personally\": [\"p-er1 s-ah-n ah l-iy\", \"rb\"],\n  \"personification\": [\"p-er s-aa n-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"personify\": [\"p-er-s-aa1-n-ah-f-ay\", \"vb\"],\n  \"personnel\": [\"p-er s-ah n-eh1-l\", \"jj nn\"],\n  \"perspective\": [\"p-er s-p-eh1-k t-ih-v\", \"nn jj\"],\n  \"perspiration\": [\"p-er s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"persuade\": [\"p-er s-w-ey1-d\", \"vb vbp\"],\n  \"persuasion\": [\"p-er s-w-ey1 zh-ah-n\", \"nn\"],\n  \"persuasive\": [\"p-er s-w-ey1 s-ih-v\", \"jj\"],\n  \"persuasively\": [\"p-er s-w-ey1 s-ih-v l-iy\", \"rb\"],\n  \"persuasiveness\": [\"p-er s-w-ey1 s-ih-v n-ah-s\", \"nn\"],\n  \"pert\": [\"p-er1-t\", \"jj\"],\n  \"pertain\": [\"p-er t-ey1-n\", \"vbp vb\"],\n  \"pertinent\": [\"p-er1 t-ah n-ah-n-t\", \"jj\"],\n  \"perturb\": [\"p-er-t-er1-b\", \"vb\"],\n  \"perturbation\": [\"p-er t-er b-ey1 sh-ah-n\", \"nn\"],\n  \"perturbed\": [\"p-er t-er1-b-d\", \"jj vbd vbn\"],\n  \"perusal\": [\"p-er uw1 z-ah-l\", \"nn\"],\n  \"peruse\": [\"p-er uw1-z\", \"vb vbp\"],\n  \"pervade\": [\"p-er v-ey1-d\", \"vb vbp\"],\n  \"pervasive\": [\"p-er v-ey1 s-ih-v\", \"jj\"],\n  \"pervasiveness\": [\"p-er v-ey1 s-ih-v n-ih-s\", \"nn\"],\n  \"perverse\": [\"p-er v-er1-s\", \"jj\"],\n  \"perversely\": [\"p-er v-er1-s l-iy\", \"rb\"],\n  \"perversion\": [\"p-er v-er1 zh-ah-n\", \"nn\"],\n  \"pervert\": [\"p-er1 v-er-t\", \"nn vb\"],\n  \"perverted\": [\"p-er v-er1 t-ih-d\", \"vbn jj vbd\"],\n  \"peso\": [\"p-ey1 s-ow\", \"nn\"],\n  \"pessimism\": [\"p-eh1 s-ah m-ih z-ah-m\", \"nn\"],\n  \"pessimist\": [\"p-eh1 s-ah m-ah-s-t\", \"nn\"],\n  \"pessimistic\": [\"p-eh s-ah m-ih1 s-t-ih-k\", \"jj\"],\n  \"pest\": [\"p-eh1-s-t\", \"nn jjs\"],\n  \"pester\": [\"p-eh1 s-t-er\", \"vb\"],\n  \"pesticide\": [\"p-eh1 s-t-ah s-ay-d\", \"nn\"],\n  \"pestilence\": [\"p-eh1 s-t-ah l-ah-n-s\", \"nn\"],\n  \"pet\": [\"p-eh1-t\", \"nn vb jj\"],\n  \"petal\": [\"p-eh1 t-ah-l\", \"nn\"],\n  \"peter\": [\"p-iy1 t-er\", \"vb\"],\n  \"petite\": [\"p-ah t-iy1-t\", \"jj\"],\n  \"petition\": [\"p-ah t-ih1 sh-ah-n\", \"nn vb\"],\n  \"petitioner\": [\"p-ah t-ih1 sh-ah-n er\", \"nn\"],\n  \"petrified\": [\"p-eh1 t-r-ah f-ay-d\", \"jj vbn\"],\n  \"petrify\": [\"p-eh1-t-r-ah-f-ay\", \"vb\"],\n  \"petrochemical\": [\"p-eh t-r-ow k-eh1 m-ih k-ah-l\", \"nn jj\"],\n  \"petroleum\": [\"p-ah t-r-ow1 l-iy ah-m\", \"nn\"],\n  \"pettiness\": [\"p-eh1 t-iy n-ah-s\", \"nn\"],\n  \"petting\": [\"p-eh1 t-ih-ng\", \"nn\"],\n  \"petty\": [\"p-eh1 t-iy\", \"jj\"],\n  \"petulance\": [\"p-eh1 ch-ah l-ah-n-s\", \"nn\"],\n  \"petulant\": [\"p-eh1 ch-ah l-ah-n-t\", \"jj\"],\n  \"pew\": [\"p-y-uw1\", \"nn\"],\n  \"pewter\": [\"p-y-uw1 t-er\", \"nn\"],\n  \"phalanx\": [\"f-ey1 l-ae-ng-k-s\", \"nn\"],\n  \"phantom\": [\"f-ae1-n t-ah-m\", \"jj nn\"],\n  \"pharmaceutical\": [\"f-aa-r m-ah s-uw1 t-ih k-ah-l\", \"jj nn\"],\n  \"pharmacist\": [\"f-aa1-r m-ah s-ih-s-t\", \"nn\"],\n  \"pharmacological\": [\"f-aa-r m-ah k-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"pharmacology\": [\"f-aa-r m-ah k-aa1 l-ah jh-iy\", \"nn\"],\n  \"pharmacy\": [\"f-aa1-r m-ah s-iy\", \"nn\"],\n  \"phase\": [\"f-ey1-z\", \"nn vb\"],\n  \"pheasant\": [\"f-eh1 z-ah-n-t\", \"nn\"],\n  \"phenolic\": [\"f-ah n-aa1 l-ih-k\", \"nn jj\"],\n  \"phenomenal\": [\"f-ah n-aa1 m-ah n-ah-l\", \"jj\"],\n  \"phenomenally\": [\"f-ah n-aa1 m-ah n-ah l-iy\", \"rb\"],\n  \"phenomenon\": [\"f-ah n-aa1 m-ah n-aa-n\", \"nn\"],\n  \"philander\": [\"f-ah-l-ae1-n-d-er\", \"vb\"],\n  \"philanthropic\": [\"f-ih l-ah-n th-r-aa1 p-ih-k\", \"jj\"],\n  \"philanthropist\": [\"f-ah l-ae1-n th-r-ah p-ah-s-t\", \"nn\"],\n  \"philanthropy\": [\"f-ih l-ae1-n th-r-ah p-iy\", \"nn\"],\n  \"philharmonic\": [\"f-ih l-hh-aa-r m-aa1 n-ih-k\", \"nn\"],\n  \"philodendron\": [\"f-ih l-ah d-eh1-n d-r-ah-n\", \"nn\"],\n  \"philosopher\": [\"f-ah l-aa1 s-ah f-er\", \"nn\"],\n  \"philosophic\": [\"f-ih l-ah s-aa1 f-ih-k\", \"jj\"],\n  \"philosophical\": [\"f-ih l-ah s-aa1 f-ih k-ah-l\", \"jj\"],\n  \"philosophically\": [\"f-ih l-ah s-aa1 f-ih k-ah l-iy\", \"rb\"],\n  \"philosophy\": [\"f-ah l-aa1 s-ah f-iy\", \"nn\"],\n  \"phobia\": [\"f-ow1 b-iy ah\", \"nn\"],\n  \"phoenix\": [\"f-iy1 n-ih-k-s\", \"nn\"],\n  \"phone\": [\"f-ow1-n\", \"nn vb vbp\"],\n  \"phonetic\": [\"f-ah n-eh1 t-ih-k\", \"jj\"],\n  \"phoney\": [\"f-ow1 n-iy\", \"jj\"],\n  \"phonic\": [\"f-aa1 n-ih-k\", \"jj\"],\n  \"phonograph\": [\"f-ow1 n-ah g-r-ae-f\", \"nn\"],\n  \"phony\": [\"f-ow1 n-iy\", \"jj nn\"],\n  \"phosphate\": [\"f-aa1-s f-ey-t\", \"nn\"],\n  \"phosphor\": [\"f-aa1-s f-ao-r\", \"nn\"],\n  \"photo\": [\"f-ow1 t-ow\", \"nn jj\"],\n  \"photocopier\": [\"f-ow1 t-ow k-aa p-iy er\", \"nn\"],\n  \"photocopy\": [\"f-ow1 t-ow k-aa p-iy\", \"vb\"],\n  \"photogenic\": [\"f-ow t-ah jh-eh1 n-ih-k\", \"jj\"],\n  \"photograph\": [\"f-ow1 t-ah g-r-ae-f\", \"nn vb\"],\n  \"photographer\": [\"f-ah t-aa1 g-r-ah f-er\", \"nn\"],\n  \"photographic\": [\"f-ow t-ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"photography\": [\"f-ah t-aa1 g-r-ah f-iy\", \"nn\"],\n  \"photosynthesis\": [\"f-ow t-ow s-ih1-n th-ah s-ih-s\", \"nn\"],\n  \"phrase\": [\"f-r-ey1-z\", \"nn vb\"],\n  \"phrasing\": [\"f-r-ey1 z-ih-ng\", \"nn\"],\n  \"phyla\": [\"f-ay1 l-ah\", \"nn\"],\n  \"physical\": [\"f-ih1 z-ih k-ah-l\", \"jj nn\"],\n  \"physically\": [\"f-ih1 z-ih k-ah l-iy\", \"rb\"],\n  \"physician\": [\"f-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"physicist\": [\"f-ih1 z-ih s-ih-s-t\", \"nn\"],\n  \"physics\": [\"f-ih1 z-ih-k-s\", \"nn\"],\n  \"physiological\": [\"f-ih z-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"physiology\": [\"f-ih z-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"physique\": [\"f-ah z-iy1-k\", \"nn\"],\n  \"pi\": [\"p-ay1\", \"nn\"],\n  \"pianist\": [\"p-iy ae1 n-ah-s-t\", \"nn\"],\n  \"piano\": [\"p-iy ae1 n-ow\", \"nn\"],\n  \"piazza\": [\"p-iy ae1 z-ah\", \"nn\"],\n  \"picayune\": [\"p-ih k-iy y-uw1-n\", \"jj\"],\n  \"pick\": [\"p-ih1-k\", \"vb vbp nn\"],\n  \"picker\": [\"p-ih1 k-er\", \"nn\"],\n  \"picket\": [\"p-ih1 k-ah-t\", \"nn vb\"],\n  \"picketer\": [\"p-ih1 k-ah t-er\", \"nn\"],\n  \"pickier\": [\"p-ih1 k-iy er\", \"jjr\"],\n  \"pickle\": [\"p-ih1 k-ah-l\", \"nn\"],\n  \"pickled\": [\"p-ih1 k-ah-l-d\", \"jj\"],\n  \"pickpocket\": [\"p-ih1-k p-aa k-ah-t\", \"nn\"],\n  \"pickup\": [\"p-ih1 k-ah-p\", \"nn jj\"],\n  \"picky\": [\"p-ih1 k-iy\", \"jj\"],\n  \"picnic\": [\"p-ih1-k n-ih-k\", \"nn\"],\n  \"pico\": [\"p-iy1 k-ow\", \"nn\"],\n  \"pictorial\": [\"p-ih-k t-ao1 r-iy ah-l\", \"jj\"],\n  \"picture\": [\"p-ih1-k ch-er\", \"nn vb vbp\"],\n  \"picturesque\": [\"p-ih1-k ch-er ah-s-k\", \"jj nn\"],\n  \"piddling\": [\"p-ih1 d-ah-l ih-ng\", \"jj\"],\n  \"pie\": [\"p-ay1\", \"nn rp\"],\n  \"piece\": [\"p-iy1-s\", \"nn vb\"],\n  \"piecemeal\": [\"p-iy1-s m-iy-l\", \"rb nn\"],\n  \"pier\": [\"p-ih1-r\", \"nn\"],\n  \"pierce\": [\"p-ih1-r-s\", \"vb\"],\n  \"piercing\": [\"p-ih1-r s-ih-ng\", \"vbg jj\"],\n  \"piety\": [\"p-ay1 ah t-iy\", \"nn\"],\n  \"pig\": [\"p-ih1-g\", \"nn\"],\n  \"pigeon\": [\"p-ih1 jh-ah-n\", \"nn\"],\n  \"piggyback\": [\"p-ih1 g-iy b-ae-k\", \"nn vb\"],\n  \"pigment\": [\"p-ih1-g m-ah-n-t\", \"nn\"],\n  \"pigskin\": [\"p-ih1-g s-k-ih-n\", \"nn\"],\n  \"pike\": [\"p-ay1-k\", \"nn\"],\n  \"piker\": [\"p-ay1 k-er\", \"nn\"],\n  \"pile\": [\"p-ay1-l\", \"nn vbp vb\"],\n  \"piled\": [\"p-ay1-l-d\", \"vbd vbn jj\"],\n  \"piles\": [\"p-ay1-l-z\", \"nn\"],\n  \"pileup\": [\"p-ay1 l-ah-p\", \"nn\"],\n  \"pilfer\": [\"p-ih1-l-f-er\", \"vb\"],\n  \"pilgrim\": [\"p-ih1-l g-r-ah-m\", \"nn\"],\n  \"pilgrimage\": [\"p-ih1-l g-r-ah m-ah-jh\", \"nn\"],\n  \"piling\": [\"p-ay1 l-ih-ng\", \"vbg nn\"],\n  \"pill\": [\"p-ih1-l\", \"nn\"],\n  \"pillage\": [\"p-ih1 l-ih-jh\", \"vb\"],\n  \"pillar\": [\"p-ih1 l-er\", \"nn\"],\n  \"pillory\": [\"p-ih1-l-er-iy\", \"vb\"],\n  \"pillow\": [\"p-ih1 l-ow\", \"nn\"],\n  \"pilot\": [\"p-ay1 l-ah-t\", \"nn jj vb\"],\n  \"pimp\": [\"p-ih1-m-p\", \"nn\"],\n  \"pimple\": [\"p-ih1-m p-ah-l\", \"nn\"],\n  \"pin\": [\"p-ih1-n\", \"nn vbp vb\"],\n  \"pinball\": [\"p-ih1-n b-ao-l\", \"nn\"],\n  \"pinch\": [\"p-ih1-n-ch\", \"nn vb\"],\n  \"pinched\": [\"p-ih1-n-ch-t\", \"vbn vbd jj\"],\n  \"pine\": [\"p-ay1-n\", \"nn vb vbp\"],\n  \"pineapple\": [\"p-ay1-n ae p-ah-l\", \"nn\"],\n  \"ping\": [\"p-ih1-ng\", \"nn vb\"],\n  \"pinhole\": [\"p-ih1-n hh-ow-l\", \"nn\"],\n  \"pink\": [\"p-ih1-ng-k\", \"jj nn\"],\n  \"pinnacle\": [\"p-ih1 n-ah k-ah-l\", \"nn\"],\n  \"pinpoint\": [\"p-ih1-n p-oy-n-t\", \"vb nn vbp\"],\n  \"pinpointed\": [\"p-ih1-n p-oy-n t-ih-d\", \"vbn jj vbd\"],\n  \"pint\": [\"p-ay1-n-t\", \"nn\"],\n  \"pinto\": [\"p-ih1-n t-ow\", \"nn\"],\n  \"pioneer\": [\"p-ay ah n-ih1-r\", \"nn vb\"],\n  \"pioneering\": [\"p-ay ah n-ih1 r-ih-ng\", \"vbg jj\"],\n  \"pious\": [\"p-ay1 ah-s\", \"jj\"],\n  \"piously\": [\"p-ay1 ah-s l-iy\", \"rb\"],\n  \"pipe\": [\"p-ay1-p\", \"nn vb\"],\n  \"pipeline\": [\"p-ay1-p l-ay-n\", \"nn\"],\n  \"piper\": [\"p-ay1 p-er\", \"nn\"],\n  \"piping\": [\"p-ay1 p-ih-ng\", \"nn\"],\n  \"piquant\": [\"p-iy1 k-ah-n-t\", \"jj\"],\n  \"pique\": [\"p-iy1-k\", \"jj nn vb\"],\n  \"piracy\": [\"p-ay1 r-ah s-iy\", \"nn\"],\n  \"piranha\": [\"p-ih r-ae1-n-hh ah\", \"nn\"],\n  \"pirate\": [\"p-ay1 r-ah-t\", \"nn vb\"],\n  \"piss\": [\"p-ih1-s\", \"vb\"],\n  \"pistachio\": [\"p-ah s-t-ae1 sh-iy ow\", \"jj\"],\n  \"pistol\": [\"p-ih1 s-t-ah-l\", \"nn\"],\n  \"piston\": [\"p-ih1 s-t-ah-n\", \"nn\"],\n  \"pit\": [\"p-ih1-t\", \"nn vbp vb\"],\n  \"pitch\": [\"p-ih1-ch\", \"nn jj vb vbp\"],\n  \"pitched\": [\"p-ih1-ch-t\", \"vbd jj vbn\"],\n  \"pitcher\": [\"p-ih1 ch-er\", \"nn\"],\n  \"pitchfork\": [\"p-ih1-ch f-ao-r-k\", \"nn\"],\n  \"pitfall\": [\"p-ih1-t f-ao-l\", \"nn\"],\n  \"pith\": [\"p-ih1-th\", \"nn\"],\n  \"pithy\": [\"p-ih1 th-iy\", \"jj\"],\n  \"pitiable\": [\"p-ih1 t-iy ah b-ah-l\", \"jj\"],\n  \"pitiful\": [\"p-ih1 t-ah f-ah-l\", \"jj\"],\n  \"pitifully\": [\"p-ih1 t-ih f-ah l-iy\", \"rb\"],\n  \"pitiless\": [\"p-ih1 t-iy l-ah-s\", \"jj\"],\n  \"pittance\": [\"p-ih1 t-ah-n-s\", \"nn\"],\n  \"pity\": [\"p-ih1 t-iy\", \"nn vb vbp\"],\n  \"pivot\": [\"p-ih1 v-ah-t\", \"jj nn vb\"],\n  \"pivotal\": [\"p-ih1 v-ah t-ah-l\", \"jj\"],\n  \"pizza\": [\"p-iy1-t s-ah\", \"nn\"],\n  \"pizzazz\": [\"p-ih z-ae1-z\", \"nn\"],\n  \"pizzeria\": [\"p-iy-t s-er iy1 ah\", \"nn\"],\n  \"placard\": [\"p-l-ae1 k-er-d\", \"nn\"],\n  \"placate\": [\"p-l-ey1 k-ey-t\", \"vb\"],\n  \"place\": [\"p-l-ey1-s\", \"nn vbp rb vb\"],\n  \"placebo\": [\"p-l-ah s-iy1 b-ow\", \"nn\"],\n  \"placement\": [\"p-l-ey1-s m-ah-n-t\", \"nn\"],\n  \"placid\": [\"p-l-ae1 s-ah-d\", \"jj\"],\n  \"plagiarism\": [\"p-l-ey1 jh-er ih z-ah-m\", \"nn\"],\n  \"plagiarize\": [\"p-l-ey1-jh-er-ay-z\", \"vb\"],\n  \"plague\": [\"p-l-ey1-g\", \"nn vb vbp\"],\n  \"plaid\": [\"p-l-ae1-d\", \"jj nn\"],\n  \"plain\": [\"p-l-ey1-n\", \"jj nn rb\"],\n  \"plainer\": [\"p-l-ey1 n-er\", \"jjr\"],\n  \"plainly\": [\"p-l-ey1-n l-iy\", \"rb\"],\n  \"plaintiff\": [\"p-l-ey1-n t-ah-f\", \"nn\"],\n  \"plaintive\": [\"p-l-ey1-n t-ih-v\", \"jj\"],\n  \"plaintively\": [\"p-l-ey1-n t-ay-v l-iy\", \"rb\"],\n  \"plan\": [\"p-l-ae1-n\", \"nn vb vbp\"],\n  \"planar\": [\"p-l-ey1 n-er\", \"jj\"],\n  \"plane\": [\"p-l-ey1-n\", \"nn vb\"],\n  \"planeload\": [\"p-l-ey1-n l-ow-d\", \"nn\"],\n  \"planer\": [\"p-l-ey1 n-er\", \"nn\"],\n  \"planet\": [\"p-l-ae1 n-ah-t\", \"nn\"],\n  \"planetarium\": [\"p-l-ae n-ah t-eh1 r-iy ah-m\", \"nn\"],\n  \"planetary\": [\"p-l-ae1 n-ah t-eh r-iy\", \"jj\"],\n  \"plank\": [\"p-l-ae1-ng-k\", \"nn\"],\n  \"planking\": [\"p-l-ae1-ng k-ih-ng\", \"nn\"],\n  \"planned\": [\"p-l-ae1-n-d\", \"vbn jj vbd\"],\n  \"planner\": [\"p-l-ae1 n-er\", \"nn\"],\n  \"plant\": [\"p-l-ae1-n-t\", \"nn vb\"],\n  \"plantain\": [\"p-l-ae1-n t-ah-n\", \"nn\"],\n  \"plantation\": [\"p-l-ae-n t-ey1 sh-ah-n\", \"nn\"],\n  \"planted\": [\"p-l-ae1-n t-ah-d\", \"vbn jj vbd\"],\n  \"planter\": [\"p-l-ae1-n t-er\", \"nn\"],\n  \"plaque\": [\"p-l-ae1-k\", \"nn\"],\n  \"plasma\": [\"p-l-ae1-z m-ah\", \"nn\"],\n  \"plaster\": [\"p-l-ae1 s-t-er\", \"nn vb\"],\n  \"plastered\": [\"p-l-ae1 s-t-er-d\", \"vbn jj\"],\n  \"plasterer\": [\"p-l-ae1 s-t-er er\", \"nn\"],\n  \"plastering\": [\"p-l-ae1 s-t-er ih-ng\", \"nn\"],\n  \"plastic\": [\"p-l-ae1 s-t-ih-k\", \"nn jj\"],\n  \"plate\": [\"p-l-ey1-t\", \"nn vb\"],\n  \"plateau\": [\"p-l-ae t-ow1\", \"nn\"],\n  \"platform\": [\"p-l-ae1-t f-ao-r-m\", \"nn\"],\n  \"platinum\": [\"p-l-ae1-t n-ah-m\", \"nn\"],\n  \"platitude\": [\"p-l-ae1 t-ih t-uw-d\", \"nn\"],\n  \"platoon\": [\"p-l-ah t-uw1-n\", \"nn\"],\n  \"platter\": [\"p-l-ae1 t-er\", \"jj nn\"],\n  \"plaudit\": [\"p-l-ao1 d-ih-t\", \"nn\"],\n  \"plausibility\": [\"p-l-ao z-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"plausible\": [\"p-l-ao1 z-ah b-ah-l\", \"jj nn\"],\n  \"plausibly\": [\"p-l-ao1 z-ah b-l-iy\", \"rb\"],\n  \"play\": [\"p-l-ey1\", \"vb nn vbp\"],\n  \"playback\": [\"p-l-ey1 b-ae-k\", \"nn\"],\n  \"playboy\": [\"p-l-ey1 b-oy\", \"nn\"],\n  \"player\": [\"p-l-ey1 er\", \"nn\"],\n  \"playful\": [\"p-l-ey1 f-ah-l\", \"jj\"],\n  \"playfully\": [\"p-l-ey1 f-ah l-iy\", \"rb\"],\n  \"playfulness\": [\"p-l-ey1 f-ah-l n-ah-s\", \"nn\"],\n  \"playground\": [\"p-l-ey1 g-r-aw-n-d\", \"nn\"],\n  \"playhouse\": [\"p-l-ey1 hh-aw-s\", \"nn\"],\n  \"playing\": [\"p-l-ey1 ih-ng\", \"vbg jj nn\"],\n  \"playmate\": [\"p-l-ey1 m-ey-t\", \"nn\"],\n  \"playoff\": [\"p-l-ey1 ao-f\", \"nn\"],\n  \"playpen\": [\"p-l-ey1 p-eh-n\", \"nn\"],\n  \"playroom\": [\"p-l-ey1 r-uw-m\", \"nn\"],\n  \"plaything\": [\"p-l-ey1 th-ih-ng\", \"nn\"],\n  \"playwright\": [\"p-l-ey1 r-ay-t\", \"nn\"],\n  \"plaza\": [\"p-l-aa1 z-ah\", \"nn\"],\n  \"plea\": [\"p-l-iy1\", \"nn\"],\n  \"plead\": [\"p-l-iy1-d\", \"vb vbp\"],\n  \"pleading\": [\"p-l-iy1 d-ih-ng\", \"vbg jj\"],\n  \"pleasant\": [\"p-l-eh1 z-ah-n-t\", \"jj\"],\n  \"pleasantly\": [\"p-l-eh1 z-ah-n-t l-iy\", \"rb\"],\n  \"pleasantry\": [\"p-l-eh1 z-ah-n t-r-iy\", \"nn\"],\n  \"please\": [\"p-l-iy1-z\", \"vb uh vbp\"],\n  \"pleased\": [\"p-l-iy1-z-d\", \"vbn jj vbd\"],\n  \"pleasing\": [\"p-l-iy1 z-ih-ng\", \"jj vbg\"],\n  \"pleasingly\": [\"p-l-iy1 z-ih-ng l-iy\", \"rb\"],\n  \"pleasurable\": [\"p-l-eh1 zh-er ah b-ah-l\", \"jj\"],\n  \"pleasure\": [\"p-l-eh1 zh-er\", \"nn jj vb\"],\n  \"pleat\": [\"p-l-iy1-t\", \"nn\"],\n  \"pled\": [\"p-l-eh1-d\", \"vbd\"],\n  \"pledge\": [\"p-l-eh1-jh\", \"nn vb\"],\n  \"plenary\": [\"p-l-eh1 n-er iy\", \"jj\"],\n  \"plentiful\": [\"p-l-eh1-n t-ah f-ah-l\", \"jj\"],\n  \"plenty\": [\"p-l-eh1-n t-iy\", \"nn jj rb\"],\n  \"plenum\": [\"p-l-eh1 n-ah-m\", \"nn\"],\n  \"plethora\": [\"p-l-eh1 th-er ah\", \"nn\"],\n  \"pliable\": [\"p-l-ay1 ah b-ah-l\", \"jj\"],\n  \"pliant\": [\"p-l-ay1 ah-n-t\", \"jj\"],\n  \"plight\": [\"p-l-ay1-t\", \"nn\"],\n  \"plinking\": [\"p-l-ih1-ng k-ih-ng\", \"jj\"],\n  \"plod\": [\"p-l-aa1-d\", \"vb\"],\n  \"plop\": [\"p-l-aa1-p\", \"vb\"],\n  \"plot\": [\"p-l-aa1-t\", \"nn vb vbp\"],\n  \"plotter\": [\"p-l-aa1 t-er\", \"nn\"],\n  \"plough\": [\"p-l-aw1\", \"vb\"],\n  \"plow\": [\"p-l-aw1\", \"nn vbp vb\"],\n  \"plowed\": [\"p-l-aw1-d\", \"vbn vbd jj\"],\n  \"ploy\": [\"p-l-oy1\", \"nn\"],\n  \"pluck\": [\"p-l-ah1-k\", \"vb nn\"],\n  \"plucky\": [\"p-l-ah1 k-iy\", \"jj\"],\n  \"plug\": [\"p-l-ah1-g\", \"nn vbp vb\"],\n  \"plum\": [\"p-l-ah1-m\", \"nn\"],\n  \"plumage\": [\"p-l-uw1 m-ah-jh\", \"nn\"],\n  \"plumb\": [\"p-l-ah1-m\", \"rb jj nn vb\"],\n  \"plumber\": [\"p-l-ah1 m-er\", \"nn\"],\n  \"plumbing\": [\"p-l-ah1 m-ih-ng\", \"nn\"],\n  \"plume\": [\"p-l-uw1-m\", \"nn\"],\n  \"plummet\": [\"p-l-ah1 m-ah-t\", \"vb nn vbp\"],\n  \"plump\": [\"p-l-ah1-m-p\", \"jj vb\"],\n  \"plunder\": [\"p-l-ah1-n d-er\", \"nn vb\"],\n  \"plundering\": [\"p-l-ah1-n d-er ih-ng\", \"nn\"],\n  \"plunge\": [\"p-l-ah1-n-jh\", \"nn vbp vb\"],\n  \"plunk\": [\"p-l-ah1-ng-k\", \"vb\"],\n  \"plural\": [\"p-l-uh1 r-ah-l\", \"nn jj\"],\n  \"pluralism\": [\"p-l-uh1 r-ah l-ih z-ah-m\", \"nn\"],\n  \"pluralistic\": [\"p-l-uh r-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"plurality\": [\"p-l-er ae1 l-ih t-iy\", \"nn\"],\n  \"plus\": [\"p-l-ah1-s\", \"cc in jj nn rb\"],\n  \"plush\": [\"p-l-ah1-sh\", \"jj nn\"],\n  \"plutonium\": [\"p-l-uw t-ow1 n-iy ah-m\", \"nn\"],\n  \"ply\": [\"p-l-ay1\", \"vbp vb\"],\n  \"plywood\": [\"p-l-ay1 w-uh-d\", \"nn\"],\n  \"pneumatic\": [\"n-uw m-ae1 t-ih-k\", \"jj\"],\n  \"pneumocystis\": [\"n-uw m-ow1 s-ih s-t-ih-s\", \"nn\"],\n  \"pneumonia\": [\"n-uw m-ow1 n-y-ah\", \"nn\"],\n  \"poach\": [\"p-ow1-ch\", \"vb\"],\n  \"poacher\": [\"p-ow1 ch-er\", \"nn\"],\n  \"pocket\": [\"p-aa1 k-ah-t\", \"nn vb\"],\n  \"pocketbook\": [\"p-aa1 k-ah-t b-uh-k\", \"nn\"],\n  \"pocketful\": [\"p-aa1 k-ah-t f-uh-l\", \"nn\"],\n  \"pockmark\": [\"p-aa1-k-m-aa-r-k\", \"vb\"],\n  \"pockmarked\": [\"p-aa1-k m-aa-r-k-t\", \"jj vbn\"],\n  \"pod\": [\"p-aa1-d\", \"nn\"],\n  \"podium\": [\"p-ow1 d-iy ah-m\", \"nn\"],\n  \"poem\": [\"p-ow1 ah-m\", \"nn\"],\n  \"poet\": [\"p-ow1 ah-t\", \"nn\"],\n  \"poetic\": [\"p-ow eh1 t-ih-k\", \"jj\"],\n  \"poetry\": [\"p-ow1 ah t-r-iy\", \"nn\"],\n  \"pogrom\": [\"p-ah g-r-aa1-m\", \"nn\"],\n  \"poignancy\": [\"p-oy1 n-y-ah-n s-iy\", \"nn\"],\n  \"poignant\": [\"p-oy1 n-y-ah-n-t\", \"jj\"],\n  \"poignantly\": [\"p-oy1 n-y-ah-n-t l-iy\", \"rb\"],\n  \"point\": [\"p-oy1-n-t\", \"nn vbp rb vb\"],\n  \"pointed\": [\"p-oy1-n t-ah-d\", \"vbd vbn jj\"],\n  \"pointedly\": [\"p-oy1-n t-ih-d l-iy\", \"rb\"],\n  \"pointer\": [\"p-oy1-n t-er\", \"nn\"],\n  \"pointless\": [\"p-oy1-n-t l-ah-s\", \"jj\"],\n  \"pointy\": [\"p-oy1-n t-iy\", \"jj\"],\n  \"poise\": [\"p-oy1-z\", \"nn vb\"],\n  \"poised\": [\"p-oy1-z-d\", \"vbn vbd jj\"],\n  \"poison\": [\"p-oy1 z-ah-n\", \"nn jj vb\"],\n  \"poisonous\": [\"p-oy1 z-ah n-ah-s\", \"jj\"],\n  \"poke\": [\"p-ow1-k\", \"nn vb\"],\n  \"poker\": [\"p-ow1 k-er\", \"nn\"],\n  \"pokey\": [\"p-ow1 k-iy\", \"jj\"],\n  \"polar\": [\"p-ow1 l-er\", \"jj\"],\n  \"polarity\": [\"p-ow l-eh1 r-ah t-iy\", \"nn\"],\n  \"polarization\": [\"p-ow l-er ah z-ey1 sh-ah-n\", \"nn\"],\n  \"polarize\": [\"p-ow1 l-er ay-z\", \"vb\"],\n  \"pole\": [\"p-ow1-l\", \"nn vb\"],\n  \"polecat\": [\"p-ow1-l k-ae-t\", \"nn\"],\n  \"polemic\": [\"p-ah l-eh1 m-ih-k\", \"jj\"],\n  \"polemical\": [\"p-ah l-eh1 m-ah k-ah-l\", \"jj\"],\n  \"police\": [\"p-ah l-iy1-s\", \"nn vb\"],\n  \"policeman\": [\"p-ah l-iy1-s m-ah-n\", \"nn\"],\n  \"policewoman\": [\"p-ah l-iy1-s w-uh m-ah-n\", \"nn\"],\n  \"policy\": [\"p-aa1 l-ah s-iy\", \"nn\"],\n  \"policyholder\": [\"p-aa1 l-ah s-iy hh-ow-l d-er\", \"nn\"],\n  \"policymaker\": [\"p-aa1 l-ah s-iy m-ey k-er\", \"nn\"],\n  \"policymaking\": [\"p-aa1 l-ah s-iy m-ey k-ih-ng\", \"jj\"],\n  \"polio\": [\"p-ow1 l-iy ow\", \"nn\"],\n  \"polis\": [\"p-ow1 l-ah-s\", \"nn\"],\n  \"polish\": [\"p-aa1 l-ih-sh\", \"vb nn\"],\n  \"polished\": [\"p-aa1 l-ih-sh-t\", \"vbn jj vbd\"],\n  \"polite\": [\"p-ah l-ay1-t\", \"jj\"],\n  \"politely\": [\"p-ah l-ay1-t l-iy\", \"rb\"],\n  \"politeness\": [\"p-ah l-ay1-t n-ah-s\", \"nn\"],\n  \"politic\": [\"p-aa1 l-ah t-ih-k\", \"jj nn\"],\n  \"political\": [\"p-ah l-ih1 t-ah k-ah-l\", \"jj\"],\n  \"politically\": [\"p-ah l-ih1 t-ih k-ah l-iy\", \"rb\"],\n  \"politician\": [\"p-aa l-ah t-ih1 sh-ah-n\", \"nn\"],\n  \"politicize\": [\"p-ah l-ih1 t-ih s-ay-z\", \"vb\"],\n  \"politicized\": [\"p-ah l-ih1 t-ih s-ay-z-d\", \"vbn jj\"],\n  \"politicking\": [\"p-aa1 l-ah t-ih k-ih-ng\", \"nn\"],\n  \"politico\": [\"p-ah l-ih1 t-ih k-ow\", \"nn\"],\n  \"politics\": [\"p-aa1 l-ah t-ih-k-s\", \"nn\"],\n  \"polity\": [\"p-aa1 l-ah t-iy\", \"nn\"],\n  \"polka\": [\"p-ow1-l k-ah\", \"nn\"],\n  \"poll\": [\"p-ow1-l\", \"nn jj vb\"],\n  \"pollen\": [\"p-aa1 l-ah-n\", \"nn\"],\n  \"pollinate\": [\"p-aa1 l-ah n-ey-t\", \"vb vbp\"],\n  \"pollination\": [\"p-aa l-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"polling\": [\"p-ow1 l-ih-ng\", \"nn jj vbg\"],\n  \"pollster\": [\"p-ow1-l s-t-er\", \"nn\"],\n  \"pollutant\": [\"p-ah l-uw1 t-ah-n-t\", \"nn\"],\n  \"pollute\": [\"p-ah l-uw1-t\", \"vb\"],\n  \"polluted\": [\"p-ah l-uw1 t-ah-d\", \"jj vbd vbn\"],\n  \"polluter\": [\"p-ah l-uw1 t-er\", \"nn\"],\n  \"polluting\": [\"p-ah l-uw1 t-ih-ng\", \"vbg jj\"],\n  \"pollution\": [\"p-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"polo\": [\"p-ow1 l-ow\", \"nn\"],\n  \"poltergeist\": [\"p-ow1-l t-er g-ay-s-t\", \"nn\"],\n  \"polyester\": [\"p-aa l-iy eh1 s-t-er\", \"nn\"],\n  \"polymer\": [\"p-aa1 l-ah m-er\", \"nn\"],\n  \"polynomial\": [\"p-aa l-ih n-ow1 m-iy ah-l\", \"nn jj\"],\n  \"polyp\": [\"p-aa1 l-ih-p\", \"nn\"],\n  \"polyurethane\": [\"p-aa l-iy uh1 r-ah th-ey-n\", \"nn\"],\n  \"pomp\": [\"p-aa1-m-p\", \"nn\"],\n  \"pompon\": [\"p-aa1-m p-aa-n\", \"nn\"],\n  \"pompous\": [\"p-aa1-m p-ah-s\", \"jj\"],\n  \"pompousness\": [\"p-aa1-m p-ah-s n-ah-s\", \"nn\"],\n  \"pond\": [\"p-aa1-n-d\", \"nn\"],\n  \"ponder\": [\"p-aa1-n d-er\", \"vb vbp\"],\n  \"ponderous\": [\"p-aa1-n d-er ah-s\", \"jj\"],\n  \"pong\": [\"p-ao1-ng\", \"nn\"],\n  \"ponied\": [\"p-ow1 n-iy-d\", \"vbd\"],\n  \"pontiff\": [\"p-aa1-n t-ah-f\", \"nn\"],\n  \"pony\": [\"p-ow1 n-iy\", \"nn\"],\n  \"pooch\": [\"p-uw1-ch\", \"nn\"],\n  \"poodle\": [\"p-uw1 d-ah-l\", \"nn\"],\n  \"poof\": [\"p-uw1-f\", \"nn\"],\n  \"pool\": [\"p-uw1-l\", \"nn vbp vb\"],\n  \"pooled\": [\"p-uw1-l-d\", \"vbn jj\"],\n  \"poolside\": [\"p-uw1-l s-ay-d\", \"nn\"],\n  \"poor\": [\"p-uh1-r\", \"jj nn\"],\n  \"poorer\": [\"p-uh1 r-er\", \"jjr rbr\"],\n  \"poorest\": [\"p-uh1 r-ih-s-t\", \"jjs\"],\n  \"poorly\": [\"p-uh1-r l-iy\", \"rb\"],\n  \"pop\": [\"p-aa1-p\", \"nn jj vb vbp\"],\n  \"popcorn\": [\"p-aa1-p k-ao-r-n\", \"nn\"],\n  \"pope\": [\"p-ow1-p\", \"nn\"],\n  \"poplar\": [\"p-aa1-p l-er\", \"nn\"],\n  \"poplin\": [\"p-aa1-p l-ih-n\", \"nn\"],\n  \"poppy\": [\"p-aa1 p-iy\", \"nn\"],\n  \"populace\": [\"p-aa1 p-y-ah l-ah-s\", \"nn\"],\n  \"popular\": [\"p-aa1 p-y-ah l-er\", \"jj\"],\n  \"popularity\": [\"p-aa p-y-ah l-eh1 r-ah t-iy\", \"nn\"],\n  \"popularize\": [\"p-aa1 p-y-ah l-er ay-z\", \"vb\"],\n  \"popularly\": [\"p-aa1 p-y-ah l-er l-iy\", \"rb\"],\n  \"populate\": [\"p-aa1 p-y-ah l-ey-t\", \"vb vbp\"],\n  \"populated\": [\"p-aa1 p-y-ah l-ey t-ah-d\", \"vbn jj vbd\"],\n  \"population\": [\"p-aa p-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"populism\": [\"p-aa1 p-y-ah l-ih z-ah-m\", \"nn\"],\n  \"populist\": [\"p-aa1 p-y-ah l-ah-s-t\", \"jj nn\"],\n  \"populous\": [\"p-aa1 p-y-ah l-ah-s\", \"jj\"],\n  \"porcelain\": [\"p-ao1-r s-ah l-ah-n\", \"nn\"],\n  \"porch\": [\"p-ao1-r-ch\", \"nn\"],\n  \"porcupine\": [\"p-ao1-r k-y-ah p-ay-n\", \"nn\"],\n  \"pore\": [\"p-ao1-r\", \"nn vb\"],\n  \"pork\": [\"p-ao1-r-k\", \"nn\"],\n  \"pornographic\": [\"p-ao-r n-ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"pornography\": [\"p-ao-r n-aa1 g-r-ah f-iy\", \"nn\"],\n  \"porous\": [\"p-ao1 r-ah-s\", \"jj\"],\n  \"porpoise\": [\"p-ao1-r p-ah-s\", \"nn\"],\n  \"porridge\": [\"p-ao1 r-ah-jh\", \"nn\"],\n  \"port\": [\"p-ao1-r-t\", \"nn jj\"],\n  \"portability\": [\"p-ao-r t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"portable\": [\"p-ao1-r t-ah b-ah-l\", \"jj nn\"],\n  \"portal\": [\"p-ao1-r t-ah-l\", \"nn\"],\n  \"portend\": [\"p-ao-r t-eh1-n-d\", \"vbp vb\"],\n  \"portent\": [\"p-ao1-r t-eh-n-t\", \"nn\"],\n  \"portentous\": [\"p-ao-r t-eh1-n t-ah-s\", \"jj\"],\n  \"porter\": [\"p-ao1-r t-er\", \"nn\"],\n  \"portfolio\": [\"p-ao-r-t f-ow1 l-iy ow\", \"nn\"],\n  \"portico\": [\"p-ao1-r t-ah k-ow\", \"nn\"],\n  \"portion\": [\"p-ao1-r sh-ah-n\", \"nn\"],\n  \"portly\": [\"p-ao1-r-t l-iy\", \"jj\"],\n  \"portrait\": [\"p-ao1-r t-r-ah-t\", \"nn\"],\n  \"portray\": [\"p-ao-r t-r-ey1\", \"vb vbp\"],\n  \"portrayal\": [\"p-ao-r t-r-ey1 ah-l\", \"nn\"],\n  \"pose\": [\"p-ow1-z\", \"vb vbp nn\"],\n  \"posh\": [\"p-aa1-sh\", \"jj\"],\n  \"position\": [\"p-ah z-ih1 sh-ah-n\", \"nn vbp vb\"],\n  \"positioned\": [\"p-ah z-ih1 sh-ah-n-d\", \"vbn vbd jj\"],\n  \"positive\": [\"p-aa1 z-ah t-ih-v\", \"jj nn\"],\n  \"positively\": [\"p-aa1 z-ah t-ih-v l-iy\", \"rb\"],\n  \"positivism\": [\"p-aa1 z-ah t-ih v-ih z-ah-m\", \"nn jj\"],\n  \"posse\": [\"p-aa1 s-iy\", \"nn\"],\n  \"possess\": [\"p-ah z-eh1-s\", \"vbp vb\"],\n  \"possession\": [\"p-ah z-eh1 sh-ah-n\", \"nn\"],\n  \"possessive\": [\"p-ah z-eh1 s-ih-v\", \"jj\"],\n  \"possessor\": [\"p-ah z-eh1 s-er\", \"nn\"],\n  \"possibility\": [\"p-aa s-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"possible\": [\"p-aa1 s-ah b-ah-l\", \"jj rb\"],\n  \"possibly\": [\"p-aa1 s-ah b-l-iy\", \"rb\"],\n  \"possum\": [\"p-aa1 s-ah-m\", \"nn\"],\n  \"post\": [\"p-ow1-s-t\", \"nn in jj vb vbp\"],\n  \"postage\": [\"p-ow1 s-t-ah-jh\", \"nn\"],\n  \"postal\": [\"p-ow1 s-t-ah-l\", \"jj\"],\n  \"postcard\": [\"p-ow1-s-t k-aa-r-d\", \"nn\"],\n  \"postdoctoral\": [\"p-ow-s-t d-aa1-k t-er ah-l\", \"jj\"],\n  \"posted\": [\"p-ow1 s-t-ih-d\", \"vbd vbn jj\"],\n  \"poster\": [\"p-ow1 s-t-er\", \"nn\"],\n  \"posterity\": [\"p-aa s-t-eh1 r-ah t-iy\", \"nn\"],\n  \"posthumous\": [\"p-aa1 s-ch-uh m-ah-s\", \"jj\"],\n  \"postman\": [\"p-ow1-s-t m-ah-n\", \"nn\"],\n  \"postmark\": [\"p-ow1-s-t-m-aa-r-k\", \"vb\"],\n  \"postmaster\": [\"p-ow1-s-t m-ae s-t-er\", \"nn\"],\n  \"postpone\": [\"p-ow-s-t p-ow1-n\", \"vb vbp\"],\n  \"postponed\": [\"p-ow-s-t p-ow1-n-d\", \"vbn jj vbd\"],\n  \"postponement\": [\"p-ow-s-t p-ow1-n m-ah-n-t\", \"nn\"],\n  \"postscript\": [\"p-ow1-s k-r-ih-p-t\", \"nn\"],\n  \"postulate\": [\"p-aa1 s-ch-ah l-ey-t\", \"vb\"],\n  \"posture\": [\"p-aa1-s ch-er\", \"nn vb vbp\"],\n  \"postwar\": [\"p-ow1-s-t w-ao1-r\", \"jj\"],\n  \"pot\": [\"p-aa1-t\", \"nn vb\"],\n  \"potable\": [\"p-ow1 t-ah b-ah-l\", \"jj\"],\n  \"potash\": [\"p-aa1-t ae-sh\", \"nn\"],\n  \"potassium\": [\"p-ah t-ae1 s-iy ah-m\", \"nn\"],\n  \"potato\": [\"p-ah t-ey1 t-ow\", \"nn\"],\n  \"potency\": [\"p-ow1 t-ah-n s-iy\", \"nn\"],\n  \"potent\": [\"p-ow1 t-ah-n-t\", \"jj\"],\n  \"potentate\": [\"p-ow1 t-ah-n t-ey-t\", \"nn\"],\n  \"potential\": [\"p-ah t-eh1-n sh-ah-l\", \"jj nn\"],\n  \"potentially\": [\"p-ah t-eh1-n sh-ah l-iy\", \"rb\"],\n  \"pothole\": [\"p-aa1-t hh-ow-l\", \"nn\"],\n  \"potion\": [\"p-ow1 sh-ah-n\", \"nn\"],\n  \"potpourri\": [\"p-ow p-uh r-iy1\", \"nn\"],\n  \"potted\": [\"p-aa1 t-ih-d\", \"jj vbn\"],\n  \"potter\": [\"p-aa1 t-er\", \"nn\"],\n  \"pottery\": [\"p-aa1 t-er iy\", \"nn\"],\n  \"potty\": [\"p-aa1 t-iy\", \"nn\"],\n  \"pouch\": [\"p-aw1-ch\", \"nn\"],\n  \"poultice\": [\"p-ow1-l t-ah s-ih\", \"nn\"],\n  \"poultry\": [\"p-ow1-l t-r-iy\", \"nn\"],\n  \"pounce\": [\"p-aw1-n-s\", \"vb\"],\n  \"pound\": [\"p-aw1-n-d\", \"nn vb vbp\"],\n  \"pour\": [\"p-ao1-r\", \"vb in vbp\"],\n  \"pout\": [\"p-aw1-t\", \"nn vb\"],\n  \"poverty\": [\"p-aa1 v-er t-iy\", \"nn\"],\n  \"powder\": [\"p-aw1 d-er\", \"nn vb\"],\n  \"powdered\": [\"p-aw1 d-er-d\", \"jj vbn\"],\n  \"powdery\": [\"p-aw1 d-er iy\", \"jj\"],\n  \"power\": [\"p-aw1 er\", \"nn vbp vb\"],\n  \"powerboat\": [\"p-aw1 er b-ow-t\", \"nn\"],\n  \"powered\": [\"p-aw1 er-d\", \"vbn jj\"],\n  \"powerful\": [\"p-aw1 er f-ah-l\", \"jj\"],\n  \"powerfully\": [\"p-aw1 er-f l-iy\", \"rb\"],\n  \"powerhouse\": [\"p-aw1 er hh-aw-s\", \"nn\"],\n  \"powerless\": [\"p-aw1 er l-ah-s\", \"jj\"],\n  \"powerlessness\": [\"p-aw1 er l-ah-s n-ah-s\", \"nn\"],\n  \"powertrain\": [\"p-aw1-r t-r-ey-n\", \"nn\"],\n  \"powwow\": [\"p-aw1 w-aw\", \"nn\"],\n  \"pox\": [\"p-aa1-k-s\", \"nn\"],\n  \"practical\": [\"p-r-ae1-k t-ah k-ah-l\", \"jj nn\"],\n  \"practicality\": [\"p-r-ae-k t-ih k-ae1 l-ah t-iy\", \"nn\"],\n  \"practically\": [\"p-r-ae1-k t-ah-k l-iy\", \"rb\"],\n  \"practice\": [\"p-r-ae1-k t-ah-s\", \"nn vb vbp\"],\n  \"practiced\": [\"p-r-ae1-k t-ah-s-t\", \"vbn vbd jj\"],\n  \"practitioner\": [\"p-r-ae-k t-ih1 sh-ah-n er\", \"nn\"],\n  \"pragmatic\": [\"p-r-ae-g m-ae1 t-ih-k\", \"jj\"],\n  \"pragmatism\": [\"p-r-ae1-g m-ah t-ih z-ah-m\", \"nn\"],\n  \"pragmatist\": [\"p-r-ae1-g m-ah t-ih-s-t\", \"nn\"],\n  \"prairie\": [\"p-r-eh1 r-iy\", \"nn\"],\n  \"praise\": [\"p-r-ey1-z\", \"nn vbp vb\"],\n  \"praised\": [\"p-r-ey1-z-d\", \"vbd jj vbn\"],\n  \"praiseworthy\": [\"p-r-ey1-z w-er dh-iy\", \"jj\"],\n  \"prance\": [\"p-r-ae1-n-s\", \"vb\"],\n  \"prank\": [\"p-r-ae1-ng-k\", \"nn\"],\n  \"pratfall\": [\"p-r-ae1-t f-ao-l\", \"nn\"],\n  \"prattle\": [\"p-r-ae1 t-ah-l\", \"nn\"],\n  \"prawn\": [\"p-r-ao1-n\", \"nn\"],\n  \"pray\": [\"p-r-ey1\", \"vb vbp\"],\n  \"prayer\": [\"p-r-eh1-r\", \"nn\"],\n  \"preach\": [\"p-r-iy1-ch\", \"vb vbp\"],\n  \"preacher\": [\"p-r-iy1 ch-er\", \"nn\"],\n  \"preaching\": [\"p-r-iy1 ch-ih-ng\", \"vbg jj\"],\n  \"preamble\": [\"p-r-iy ae1-m b-ah-l\", \"nn\"],\n  \"prearrange\": [\"p-r-iy-er-ey1-n-jh\", \"vb\"],\n  \"prearranged\": [\"p-r-iy er ey1-n-jh-d\", \"vbn jj\"],\n  \"precarious\": [\"p-r-iy k-eh1 r-iy ah-s\", \"jj\"],\n  \"precariously\": [\"p-r-ih k-eh1 r-iy ah-s l-iy\", \"rb\"],\n  \"precaution\": [\"p-r-iy k-ao1 sh-ah-n\", \"nn\"],\n  \"precautionary\": [\"p-r-ih k-ao1 sh-ah-n eh r-iy\", \"jj\"],\n  \"precede\": [\"p-r-ih s-iy1-d\", \"vb vbp\"],\n  \"precedence\": [\"p-r-eh1 s-ah d-ah-n-s\", \"nn\"],\n  \"precedent\": [\"p-r-eh1 s-ih d-ah-n-t\", \"nn jj\"],\n  \"preceding\": [\"p-r-iy s-iy1 d-ih-ng\", \"vbg jj\"],\n  \"precept\": [\"p-r-iy1 s-eh-p-t\", \"nn\"],\n  \"precinct\": [\"p-r-iy1 s-ih-ng-k-t\", \"nn\"],\n  \"precious\": [\"p-r-eh1 sh-ah-s\", \"jj rb\"],\n  \"precipice\": [\"p-r-eh1 s-ah p-ah-s\", \"nn\"],\n  \"precipitate\": [\"p-r-ih s-ih1 p-ih t-ey-t\", \"vb nn\"],\n  \"precipitous\": [\"p-r-ih s-ih1 p-ih t-ah-s\", \"jj\"],\n  \"precipitously\": [\"p-r-iy s-ih1 p-ih t-ah-s l-iy\", \"rb\"],\n  \"precise\": [\"p-r-ih s-ay1-s\", \"jj\"],\n  \"precisely\": [\"p-r-ih s-ay1-s l-iy\", \"rb\"],\n  \"precision\": [\"p-r-iy s-ih1 zh-ah-n\", \"nn jj\"],\n  \"preclinical\": [\"p-r-iy-k l-ih1 n-ih k-ah-l\", \"jj\"],\n  \"preclude\": [\"p-r-ih k-l-uw1-d\", \"vb vbp\"],\n  \"precluded\": [\"p-r-ih k-l-uw1 d-ih-d\", \"vbd vbn jj\"],\n  \"precocious\": [\"p-r-ih k-ow1 sh-ah-s\", \"jj\"],\n  \"preconceived\": [\"p-r-iy k-ah-n s-iy1-v-d\", \"jj\"],\n  \"preconception\": [\"p-r-iy k-ah-n s-eh1-p sh-ah-n\", \"nn\"],\n  \"precondition\": [\"p-r-iy k-ah-n d-ih1 sh-ah-n\", \"nn\"],\n  \"precook\": [\"p-r-iy1-k-uh1-k\", \"vb\"],\n  \"precrash\": [\"p-r-iy k-r-ae1-sh\", \"jj\"],\n  \"precursor\": [\"p-r-iy k-er1 s-er\", \"nn\"],\n  \"predate\": [\"p-r-iy-d-ey1-t\", \"vb\"],\n  \"predator\": [\"p-r-eh1 d-ah t-er\", \"nn\"],\n  \"predatory\": [\"p-r-eh1 d-ah t-ao r-iy\", \"jj\"],\n  \"predawn\": [\"p-r-iy d-ao1-n\", \"jj\"],\n  \"predecessor\": [\"p-r-eh1 d-ah s-eh s-er\", \"nn\"],\n  \"predetermined\": [\"p-r-iy d-iy t-er1 m-ih-n-d\", \"jj\"],\n  \"predicament\": [\"p-r-ih d-ih1 k-ah m-ah-n-t\", \"nn\"],\n  \"predicate\": [\"p-r-eh1-d-ah-k-ey-t\", \"vb\"],\n  \"predict\": [\"p-r-ih d-ih1-k-t\", \"vbp vb\"],\n  \"predictability\": [\"p-r-ih d-ih-k t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"predictable\": [\"p-r-ih d-ih1-k t-ah b-ah-l\", \"jj\"],\n  \"predictably\": [\"p-r-ih d-ih1-k t-ah b-l-iy\", \"rb\"],\n  \"predicted\": [\"p-r-ih d-ih1-k t-ih-d\", \"vbd jj vbn\"],\n  \"prediction\": [\"p-r-iy d-ih1-k sh-ah-n\", \"nn\"],\n  \"predictive\": [\"p-r-ih d-ih1-k t-ih-v\", \"jj\"],\n  \"predictor\": [\"p-r-ih d-ih1-k t-er\", \"nn\"],\n  \"predilection\": [\"p-r-eh d-ah l-eh1-k sh-ah-n\", \"nn\"],\n  \"predispose\": [\"p-r-iy d-ih s-p-ow1-z\", \"vb vbp\"],\n  \"predisposition\": [\"p-r-iy d-ih-s p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"predominance\": [\"p-r-ih d-aa1 m-ah n-ah-n-s\", \"nn\"],\n  \"predominant\": [\"p-r-ih d-aa1 m-ah n-ah-n-t\", \"jj\"],\n  \"predominantly\": [\"p-r-ih d-aa1 m-ah n-ah-n-t l-iy\", \"rb\"],\n  \"predominate\": [\"p-r-ih d-aa1 m-ah n-ey-t\", \"vb vbp\"],\n  \"preempt\": [\"p-r-iy1 eh-m-p-t\", \"vb\"],\n  \"preemptive\": [\"p-r-iy eh1-m-p t-ih-v\", \"jj\"],\n  \"preen\": [\"p-r-iy1-n\", \"vb\"],\n  \"prefabricate\": [\"p-r-iy-f-ae1-b-r-ih-k-ey-t\", \"vb\"],\n  \"preface\": [\"p-r-eh1 f-ah-s\", \"nn vb\"],\n  \"prefecture\": [\"p-r-iy1 f-eh-k ch-er\", \"nn\"],\n  \"prefer\": [\"p-r-ah f-er1\", \"vbp vb\"],\n  \"preferable\": [\"p-r-eh1 f-er ah b-ah-l\", \"jj\"],\n  \"preferably\": [\"p-r-eh1 f-er ah b-l-iy\", \"rb\"],\n  \"preference\": [\"p-r-eh1 f-er ah-n-s\", \"nn\"],\n  \"preferential\": [\"p-r-eh f-er eh1-n ch-ah-l\", \"jj\"],\n  \"preferentially\": [\"p-r-eh f-er eh1-n ch-ah l-iy\", \"rb\"],\n  \"preferred\": [\"p-r-ah f-er1-d\", \"jj vbd vbg vbn\"],\n  \"pregnancy\": [\"p-r-eh1-g n-ah-n s-iy\", \"nn\"],\n  \"pregnant\": [\"p-r-eh1-g n-ah-n-t\", \"jj\"],\n  \"prehistoric\": [\"p-r-iy hh-ih s-t-ao1 r-ih-k\", \"jj\"],\n  \"prejudge\": [\"p-r-iy-jh-ah1-jh\", \"vb\"],\n  \"prejudice\": [\"p-r-eh1 jh-ah d-ih-s\", \"nn vb\"],\n  \"prejudiced\": [\"p-r-eh1 jh-ah d-ah-s-t\", \"vbn jj\"],\n  \"prejudicial\": [\"p-r-eh jh-ah d-ih1 sh-ah-l\", \"jj\"],\n  \"preliminarily\": [\"p-r-ih l-ih m-ah n-eh1 r-ih l-iy\", \"rb\"],\n  \"preliminary\": [\"p-r-ih l-ih1 m-ah n-eh r-iy\", \"jj nn\"],\n  \"prelude\": [\"p-r-ey1 l-uw-d\", \"nn\"],\n  \"premarital\": [\"p-r-iy m-eh1 r-ah t-ah-l\", \"jj\"],\n  \"premature\": [\"p-r-iy m-ah ch-uh1-r\", \"jj\"],\n  \"prematurely\": [\"p-r-iy m-ah ch-uh1-r l-iy\", \"rb\"],\n  \"premeditated\": [\"p-r-iy m-eh1 d-ah t-ey t-ih-d\", \"jj\"],\n  \"premier\": [\"p-r-eh m-ih1-r\", \"nn jj\"],\n  \"premiere\": [\"p-r-eh m-ih1-r\", \"nn vbp vb\"],\n  \"premise\": [\"p-r-eh1 m-ih-s\", \"nn\"],\n  \"premium\": [\"p-r-iy1 m-iy ah-m\", \"nn jj\"],\n  \"prenatal\": [\"p-r-iy n-ey1 t-ah-l\", \"jj rb\"],\n  \"preoccupation\": [\"p-r-iy aa k-y-ah p-ey1 sh-ah-n\", \"nn\"],\n  \"preoccupy\": [\"p-r-iy aa1 k-y-ah p-ay\", \"vb vbp\"],\n  \"preordain\": [\"p-r-iy-ao-r-d-ey1-n\", \"vb\"],\n  \"prepackage\": [\"p-r-iy-p-ae1-k-ah-jh\", \"vb\"],\n  \"prepaid\": [\"p-r-iy p-ey1-d\", \"jj vbd vbn\"],\n  \"preparation\": [\"p-r-eh p-er ey1 sh-ah-n\", \"nn\"],\n  \"preparatory\": [\"p-r-ih p-eh1 r-ah t-ao r-iy\", \"jj\"],\n  \"prepare\": [\"p-r-iy p-eh1-r\", \"vb vbp\"],\n  \"prepared\": [\"p-r-iy p-eh1-r-d\", \"vbn vbd jj\"],\n  \"preparedness\": [\"p-r-iy p-eh1 r-ah-d n-ah-s\", \"nn\"],\n  \"preparer\": [\"p-r-iy p-eh1 r-er\", \"nn\"],\n  \"prepay\": [\"p-r-iy p-ey1\", \"vb\"],\n  \"prepayment\": [\"p-r-iy p-ey1 m-ah-n-t\", \"nn\"],\n  \"preponderance\": [\"p-r-iy p-aa1-n d-r-ah-n-s\", \"nn\"],\n  \"preposterous\": [\"p-r-ih p-aa1 s-t-er ah-s\", \"jj\"],\n  \"preppie\": [\"p-r-eh1 p-iy\", \"nn\"],\n  \"preppy\": [\"p-r-eh1 p-iy\", \"nn jj\"],\n  \"prerecord\": [\"p-r-iy-r-iy-k-ao1-r-d\", \"vb\"],\n  \"prerequisite\": [\"p-r-iy r-eh1 k-w-ah z-ah-t\", \"nn\"],\n  \"prerogative\": [\"p-r-ih r-aa1 g-ah t-ih-v\", \"nn\"],\n  \"presage\": [\"p-r-eh1 s-ih-jh\", \"vb vbp\"],\n  \"presale\": [\"p-r-iy1 s-ey-l\", \"jj nn\"],\n  \"preschool\": [\"p-r-iy s-k-uw1-l\", \"jj\"],\n  \"preschooler\": [\"p-r-iy1 s-k-uw l-er\", \"nn\"],\n  \"prescient\": [\"p-r-eh1 s-iy ah-n-t\", \"jj\"],\n  \"prescribe\": [\"p-r-ah s-k-r-ay1-b\", \"vb vbp\"],\n  \"prescribed\": [\"p-r-iy s-k-r-ay1-b-d\", \"vbn jj vbd\"],\n  \"prescriber\": [\"p-r-iy s-k-r-ay1 b-er\", \"nn\"],\n  \"prescription\": [\"p-r-ah s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"presence\": [\"p-r-eh1 z-ah-n-s\", \"nn\"],\n  \"present\": [\"p-r-eh1 z-ah-n-t\", \"jj vbp rb nn vb\"],\n  \"presentable\": [\"p-r-ah z-eh1-n t-ah b-ah-l\", \"jj\"],\n  \"presentation\": [\"p-r-eh z-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"presenter\": [\"p-r-eh1 z-ah-n t-er\", \"nn\"],\n  \"presently\": [\"p-r-eh1 z-ah-n-t l-iy\", \"rb\"],\n  \"preservation\": [\"p-r-eh z-er v-ey1 sh-ah-n\", \"nn\"],\n  \"preservative\": [\"p-r-iy z-er1 v-ah t-ih-v\", \"jj\"],\n  \"preserve\": [\"p-r-ah z-er1-v\", \"vb vbp nn\"],\n  \"preserved\": [\"p-r-ah z-er1-v-d\", \"vbn jj vbd\"],\n  \"preset\": [\"p-r-iy s-eh1-t\", \"jj\"],\n  \"preside\": [\"p-r-ih z-ay1-d\", \"vb\"],\n  \"presidency\": [\"p-r-eh1 z-ah d-ah-n s-iy\", \"nn\"],\n  \"president\": [\"p-r-eh1 z-ah d-eh-n-t\", \"nn\"],\n  \"presidential\": [\"p-r-eh z-ah d-eh1-n ch-ah-l\", \"jj\"],\n  \"press\": [\"p-r-eh1-s\", \"nn vbp vb\"],\n  \"presser\": [\"p-r-eh1 s-er\", \"nn\"],\n  \"pressing\": [\"p-r-eh1 s-ih-ng\", \"vbg jj\"],\n  \"pressman\": [\"p-r-eh1-s m-ah-n\", \"nn\"],\n  \"pressure\": [\"p-r-eh1 sh-er\", \"nn vb vbp\"],\n  \"pressured\": [\"p-r-eh1 sh-er-d\", \"vbn jj vbd\"],\n  \"pressurize\": [\"p-r-eh1-sh-er-ay-z\", \"vb\"],\n  \"prestige\": [\"p-r-eh s-t-iy1-zh\", \"nn jj\"],\n  \"prestigious\": [\"p-r-eh s-t-ih1 jh-ah-s\", \"jj\"],\n  \"presto\": [\"p-r-eh1 s-t-ow\", \"rb\"],\n  \"presumably\": [\"p-r-ah z-uw1 m-ah b-l-iy\", \"rb\"],\n  \"presume\": [\"p-r-ih z-uw1-m\", \"vb vbp\"],\n  \"presumed\": [\"p-r-ah z-uw1-m-d\", \"vbn jj vbd\"],\n  \"presumption\": [\"p-r-ih z-ah1-m-p sh-ah-n\", \"nn\"],\n  \"presumptuous\": [\"p-r-ih z-ah1-m-p ch-ah-w ah-s\", \"jj\"],\n  \"presuppose\": [\"p-r-iy-s-ah-p-ow1-z\", \"vb\"],\n  \"presupposition\": [\"p-r-iy s-ah p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"pretax\": [\"p-r-iy1 t-ae1-k-s\", \"jj nn\"],\n  \"pretend\": [\"p-r-iy t-eh1-n-d\", \"vb jj\"],\n  \"pretense\": [\"p-r-iy t-eh1-n-s\", \"nn\"],\n  \"pretension\": [\"p-r-ah t-eh1-n sh-ah-n\", \"nn\"],\n  \"pretentious\": [\"p-r-iy t-eh1-n sh-ah-s\", \"jj\"],\n  \"pretext\": [\"p-r-iy1 t-eh-k-s-t\", \"nn\"],\n  \"pretrial\": [\"p-r-iy t-r-ay1 ah-l\", \"jj\"],\n  \"prettier\": [\"p-r-ih1 t-iy er\", \"jjr\"],\n  \"prettiest\": [\"p-r-ih1 t-iy ah-s-t\", \"jjs\"],\n  \"pretty\": [\"p-r-ih1 t-iy\", \"rb jj\"],\n  \"prevail\": [\"p-r-ih v-ey1-l\", \"vb vbp\"],\n  \"prevailing\": [\"p-r-ih v-ey1 l-ih-ng\", \"vbg jj\"],\n  \"prevalence\": [\"p-r-eh1 v-ah l-ah-n-s\", \"nn\"],\n  \"prevalent\": [\"p-r-eh1 v-ah l-ah-n-t\", \"jj nn\"],\n  \"prevent\": [\"p-r-ih v-eh1-n-t\", \"vb vbp\"],\n  \"preventable\": [\"p-r-ih v-eh1-n t-ah b-ah-l\", \"jj\"],\n  \"preventative\": [\"p-r-iy v-eh1-n t-ah t-ih-v\", \"jj\"],\n  \"prevention\": [\"p-r-iy v-eh1-n sh-ah-n\", \"nn\"],\n  \"preventive\": [\"p-r-ih v-eh1-n t-ih-v\", \"jj nn\"],\n  \"preview\": [\"p-r-iy1 v-y-uw\", \"nn vb\"],\n  \"previous\": [\"p-r-iy1 v-iy ah-s\", \"jj\"],\n  \"previously\": [\"p-r-iy1 v-iy ah-s l-iy\", \"rb\"],\n  \"prewar\": [\"p-r-iy w-ao1-r\", \"jj\"],\n  \"prey\": [\"p-r-ey1\", \"nn vbp vb\"],\n  \"price\": [\"p-r-ay1-s\", \"nn vbp vb\"],\n  \"priced\": [\"p-r-ay1-s-t\", \"vbn jj vbd\"],\n  \"priceless\": [\"p-r-ay1-s l-ah-s\", \"jj\"],\n  \"pricey\": [\"p-r-ay1 s-iy\", \"jj\"],\n  \"pricier\": [\"p-r-ay1 s-iy er\", \"jjr\"],\n  \"priciest\": [\"p-r-ay s-iy ih-s-t\", \"jjs\"],\n  \"prick\": [\"p-r-ih1-k\", \"nn vb\"],\n  \"prickly\": [\"p-r-ih1-k l-iy\", \"jj rb\"],\n  \"pride\": [\"p-r-ay1-d\", \"nn vb vbp\"],\n  \"priest\": [\"p-r-iy1-s-t\", \"nn\"],\n  \"priestly\": [\"p-r-iy1-s-t l-iy\", \"jj\"],\n  \"prim\": [\"p-r-ih1-m\", \"jj\"],\n  \"prima\": [\"p-r-iy1 m-ah\", \"nn\"],\n  \"primacy\": [\"p-r-ay1 m-ah s-iy\", \"nn\"],\n  \"primal\": [\"p-r-ay1 m-ah-l\", \"jj\"],\n  \"primarily\": [\"p-r-ay m-eh1 r-ah l-iy\", \"rb\"],\n  \"primary\": [\"p-r-ay1 m-eh r-iy\", \"jj nn\"],\n  \"primate\": [\"p-r-ay1 m-ey-t\", \"nn\"],\n  \"prime\": [\"p-r-ay1-m\", \"jj nn vb\"],\n  \"primed\": [\"p-r-ay1-m-d\", \"vbn jj vbd\"],\n  \"primetime\": [\"p-r-ay1-m t-ay-m\", \"nn\"],\n  \"primeval\": [\"p-r-ay m-iy1 v-ah-l\", \"jj\"],\n  \"primitive\": [\"p-r-ih1 m-ah t-ih-v\", \"jj\"],\n  \"primly\": [\"p-r-ih1-m l-iy\", \"rb\"],\n  \"primordial\": [\"p-r-ih m-ao1-r d-iy ah-l\", \"jj\"],\n  \"prince\": [\"p-r-ih1-n-s\", \"nn\"],\n  \"princely\": [\"p-r-ih1-n-s l-iy\", \"jj\"],\n  \"princess\": [\"p-r-ih1-n s-eh-s\", \"nn\"],\n  \"principal\": [\"p-r-ih1-n s-ah p-ah-l\", \"jj nn\"],\n  \"principally\": [\"p-r-ih1-n s-ih p-l-iy\", \"rb\"],\n  \"principle\": [\"p-r-ih1-n s-ah p-ah-l\", \"nn\"],\n  \"principled\": [\"p-r-ih1-n s-ah p-ah-l-d\", \"jj\"],\n  \"print\": [\"p-r-ih1-n-t\", \"nn vb vbp\"],\n  \"printable\": [\"p-r-ih1-n t-ah b-ah-l\", \"jj\"],\n  \"printed\": [\"p-r-ih1-n t-ah-d\", \"vbn vbd jj\"],\n  \"printer\": [\"p-r-ih1-n t-er\", \"nn\"],\n  \"printing\": [\"p-r-ih1-n t-ih-ng\", \"nn vbg\"],\n  \"printout\": [\"p-r-ih1-n-t aw-t\", \"nn\"],\n  \"prior\": [\"p-r-ay1 er\", \"rb nn jj\"],\n  \"priority\": [\"p-r-ay ao1 r-ah t-iy\", \"nn jj\"],\n  \"prison\": [\"p-r-ih1 z-ah-n\", \"nn vb\"],\n  \"prisoner\": [\"p-r-ih1 z-ah-n er\", \"nn\"],\n  \"pristine\": [\"p-r-ih1 s-t-iy-n\", \"jj\"],\n  \"privacy\": [\"p-r-ay1 v-ah s-iy\", \"nn\"],\n  \"private\": [\"p-r-ay1 v-ah-t\", \"jj nn rb\"],\n  \"privately\": [\"p-r-ay1 v-ah-t l-iy\", \"rb\"],\n  \"privation\": [\"p-r-ay v-ey1 sh-ah-n\", \"nn\"],\n  \"privatization\": [\"p-r-ay1 v-ah t-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"privatize\": [\"p-r-ih1 v-ah t-ay-z\", \"vb\"],\n  \"privatized\": [\"p-r-ay1 v-ah t-ay-z-d\", \"vbn vbd jj\"],\n  \"privilege\": [\"p-r-ih1-v l-ah-jh\", \"nn\"],\n  \"privileged\": [\"p-r-ih1-v l-ah-jh-d\", \"jj\"],\n  \"privy\": [\"p-r-ih1 v-iy\", \"jj nn\"],\n  \"prize\": [\"p-r-ay1-z\", \"nn jj vb vbp\"],\n  \"prized\": [\"p-r-ay1-z-d\", \"vbn jj\"],\n  \"pro\": [\"p-r-ow1\", \"nn\"],\n  \"probability\": [\"p-r-aa b-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"probable\": [\"p-r-aa1 b-ah b-ah-l\", \"jj\"],\n  \"probably\": [\"p-r-aa1 b-ah b-l-iy\", \"rb\"],\n  \"probate\": [\"p-r-ow1 b-ey-t\", \"nn\"],\n  \"probation\": [\"p-r-ow b-ey1 sh-ah-n\", \"nn\"],\n  \"probe\": [\"p-r-ow1-b\", \"nn vbp vb\"],\n  \"probing\": [\"p-r-ow1 b-ih-ng\", \"vbg jj nn\"],\n  \"probity\": [\"p-r-ow1 b-ah t-iy\", \"nn\"],\n  \"problem\": [\"p-r-aa1 b-l-ah-m\", \"nn\"],\n  \"problematic\": [\"p-r-aa b-l-ah m-ae1 t-ih-k\", \"jj\"],\n  \"problematical\": [\"p-r-aa b-l-ah m-ae1 t-ih k-ah-l\", \"jj\"],\n  \"proboscis\": [\"p-r-ow b-aa1 s-ah-s\", \"nn\"],\n  \"procedural\": [\"p-r-ah s-iy1 jh-er ah-l\", \"jj\"],\n  \"procedure\": [\"p-r-ah s-iy1 jh-er\", \"nn\"],\n  \"proceed\": [\"p-r-ah s-iy1-d\", \"vb vbp\"],\n  \"proceeding\": [\"p-r-ah s-iy1 d-ih-ng\", \"nn vbg\"],\n  \"process\": [\"p-r-aa1 s-eh-s\", \"nn vbp vb\"],\n  \"processed\": [\"p-r-aa1 s-eh-s-t\", \"vbn vbd jj\"],\n  \"procession\": [\"p-r-ah s-eh1 sh-ah-n\", \"nn\"],\n  \"processional\": [\"p-r-ah s-eh1 sh-ah n-ah-l\", \"nn\"],\n  \"processor\": [\"p-r-aa1 s-eh s-er\", \"nn\"],\n  \"proclaim\": [\"p-r-ow k-l-ey1-m\", \"vb vbp\"],\n  \"proclaimed\": [\"p-r-ow k-l-ey1-m-d\", \"vbd jj vbn\"],\n  \"proclamation\": [\"p-r-aa k-l-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"proclivity\": [\"p-r-ow k-l-ih1 v-ah t-iy\", \"nn\"],\n  \"procrastinate\": [\"p-r-ah k-r-ae1 s-t-ah n-ey-t\", \"vb\"],\n  \"procrastination\": [\"p-r-ah k-r-ae s-t-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"procreate\": [\"p-r-ow1 k-r-iy ey1-t\", \"vb\"],\n  \"procreation\": [\"p-r-ow1 k-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"proctor\": [\"p-r-aa1-k t-er\", \"nn\"],\n  \"procure\": [\"p-r-ow k-y-uh1-r\", \"vb\"],\n  \"procurement\": [\"p-r-ow k-y-uh1-r m-ah-n-t\", \"nn jj\"],\n  \"procurer\": [\"p-r-ow k-y-uh1 r-er\", \"nn\"],\n  \"prod\": [\"p-r-aa1-d\", \"vb nn\"],\n  \"prodigal\": [\"p-r-aa1 d-ih g-ah-l\", \"jj\"],\n  \"prodigious\": [\"p-r-ah d-ih1 jh-ah-s\", \"jj\"],\n  \"prodigiously\": [\"p-r-ow d-ih1 jh-ih-s l-iy\", \"rb\"],\n  \"prodigy\": [\"p-r-aa1 d-ah jh-iy\", \"nn\"],\n  \"produce\": [\"p-r-ah d-uw1-s\", \"vb vbp nn\"],\n  \"producer\": [\"p-r-ah d-uw1 s-er\", \"nn\"],\n  \"producing\": [\"p-r-ah d-uw1 s-ih-ng\", \"vbg jj nn\"],\n  \"product\": [\"p-r-aa1 d-ah-k-t\", \"nn\"],\n  \"production\": [\"p-r-ah d-ah1-k sh-ah-n\", \"nn\"],\n  \"productive\": [\"p-r-ah d-ah1-k t-ih-v\", \"jj\"],\n  \"productivity\": [\"p-r-ow d-ah-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"prof\": [\"p-r-aa1-f\", \"nn\"],\n  \"profane\": [\"p-r-ow f-ey1-n\", \"jj\"],\n  \"profanity\": [\"p-r-ow f-ae1 n-ah t-iy\", \"nn\"],\n  \"profess\": [\"p-r-ah f-eh1-s\", \"vbp vb\"],\n  \"professed\": [\"p-r-ah f-eh1-s-t\", \"vbd vbn jj\"],\n  \"profession\": [\"p-r-ah f-eh1 sh-ah-n\", \"nn\"],\n  \"professional\": [\"p-r-ah f-eh1 sh-ah n-ah-l\", \"jj nn\"],\n  \"professionalism\": [\"p-r-ah f-eh1 sh-ah-n ah l-ih z-ah-m\", \"nn\"],\n  \"professionally\": [\"p-r-ah f-eh1 sh-ah-n ah l-iy\", \"rb\"],\n  \"professor\": [\"p-r-ah f-eh1 s-er\", \"nn\"],\n  \"professorial\": [\"p-r-ow f-ah s-ao1 r-iy ah-l\", \"jj\"],\n  \"professorship\": [\"p-r-ah f-eh1 s-er sh-ih-p\", \"nn\"],\n  \"proffer\": [\"p-r-aa1 f-er\", \"vb\"],\n  \"proficiency\": [\"p-r-ah f-ih1 sh-ah-n s-iy\", \"nn\"],\n  \"proficient\": [\"p-r-aa f-ih1 sh-ah-n-t\", \"jj\"],\n  \"profile\": [\"p-r-ow1 f-ay-l\", \"nn jj vb\"],\n  \"profit\": [\"p-r-aa1 f-ah-t\", \"nn vbp vb\"],\n  \"profitability\": [\"p-r-aa f-ih t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"profitable\": [\"p-r-aa1 f-ah t-ah b-ah-l\", \"jj\"],\n  \"profitably\": [\"p-r-aa1 f-ah t-ah b-l-iy\", \"rb\"],\n  \"profiteer\": [\"p-r-aa-f-ah-t-ih1-r\", \"vb\"],\n  \"profittaking\": [\"p-r-aa1 f-ih-t t-ey k-ih-ng\", \"nn\"],\n  \"profligacy\": [\"p-r-ao1 f-l-ih g-ae s-iy\", \"nn\"],\n  \"profligate\": [\"p-r-ao1 f-l-ih g-ey-t\", \"jj\"],\n  \"profound\": [\"p-r-ow f-aw1-n-d\", \"jj\"],\n  \"profoundly\": [\"p-r-ow f-aw1-n-d l-iy\", \"rb\"],\n  \"profuse\": [\"p-r-ah f-y-uw1-s\", \"jj\"],\n  \"profusely\": [\"p-r-ah f-y-uw1-s l-iy\", \"rb\"],\n  \"profusion\": [\"p-r-ah f-y-uw1 zh-ah-n\", \"nn\"],\n  \"progeny\": [\"p-r-aa1 jh-ah n-iy\", \"nn\"],\n  \"prognosis\": [\"p-r-aa-g n-ow1 s-ah-s\", \"nn\"],\n  \"program\": [\"p-r-ow1 g-r-ae-m\", \"nn vbp vb\"],\n  \"programmable\": [\"p-r-ow1 g-r-ae m-ah b-ah-l\", \"jj\"],\n  \"programmatic\": [\"p-r-aa g-r-ah m-ae1 t-ih-k\", \"jj\"],\n  \"programmed\": [\"p-r-ow1 g-r-ae-m-d\", \"vbn jj\"],\n  \"programmer\": [\"p-r-ow1 g-r-ae m-er\", \"nn\"],\n  \"progress\": [\"p-r-aa1 g-r-eh-s\", \"nn vb\"],\n  \"progression\": [\"p-r-ah g-r-eh1 sh-ah-n\", \"nn\"],\n  \"progressive\": [\"p-r-ah g-r-eh1 s-ih-v\", \"jj nn\"],\n  \"progressively\": [\"p-r-aa g-r-eh1 s-ih-v l-iy\", \"rb\"],\n  \"progressivity\": [\"p-r-aa g-r-eh s-ih1 v-ah t-iy\", \"nn\"],\n  \"prohibit\": [\"p-r-ow hh-ih1 b-ah-t\", \"vb vbp\"],\n  \"prohibition\": [\"p-r-ow ah b-ih1 sh-ah-n\", \"nn\"],\n  \"prohibitive\": [\"p-r-ow hh-ih1 b-ah t-ih-v\", \"jj\"],\n  \"prohibitively\": [\"p-r-ow hh-ih1 b-ah t-ih-v l-iy\", \"rb\"],\n  \"project\": [\"p-r-aa1 jh-eh-k-t\", \"nn vb vbp\"],\n  \"projected\": [\"p-r-ah jh-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"projectile\": [\"p-r-ah jh-eh1-k t-ah-l\", \"nn\"],\n  \"projection\": [\"p-r-ah jh-eh1-k sh-ah-n\", \"nn\"],\n  \"projective\": [\"p-r-ah jh-eh1-k t-ih-v\", \"jj\"],\n  \"projector\": [\"p-r-ah jh-eh1-k t-er\", \"nn\"],\n  \"proletarian\": [\"p-r-ow l-ah t-eh1 r-iy ah-n\", \"jj\"],\n  \"proletariat\": [\"p-r-ow l-ah t-eh1 r-iy ah-t\", \"nn\"],\n  \"proliferate\": [\"p-r-ow l-ih1 f-er ey-t\", \"vb vbp\"],\n  \"proliferated\": [\"p-r-ah l-ih1 f-er ey t-ih-d\", \"vbn vbd\"],\n  \"proliferation\": [\"p-r-ow l-ih f-er ey1 sh-ah-n\", \"nn\"],\n  \"prolific\": [\"p-r-ow l-ih1 f-ih-k\", \"jj\"],\n  \"prolong\": [\"p-r-ah l-ao1-ng\", \"vb\"],\n  \"prolonged\": [\"p-r-ah l-ao1-ng-d\", \"vbn vbd jj\"],\n  \"prom\": [\"p-r-aa1-m\", \"nn\"],\n  \"promenade\": [\"p-r-aa m-ah n-ey1-d\", \"nn\"],\n  \"prominence\": [\"p-r-aa1 m-ah n-ah-n-s\", \"nn\"],\n  \"prominent\": [\"p-r-aa1 m-ah n-ah-n-t\", \"jj\"],\n  \"prominently\": [\"p-r-aa1 m-ah n-ah-n-t l-iy\", \"rb\"],\n  \"promiscuous\": [\"p-r-ow1 m-ih s-k-w-ah-s\", \"jj\"],\n  \"promise\": [\"p-r-aa1 m-ah-s\", \"nn vb vbp\"],\n  \"promised\": [\"p-r-aa1 m-ah-s-t\", \"vbd jj vbn\"],\n  \"promising\": [\"p-r-aa1 m-ah s-ih-ng\", \"jj vbg\"],\n  \"promissory\": [\"p-r-aa1 m-ah s-ao r-iy\", \"jj\"],\n  \"promote\": [\"p-r-ah m-ow1-t\", \"vb vbp\"],\n  \"promoter\": [\"p-r-ah m-ow1 t-er\", \"nn\"],\n  \"promotion\": [\"p-r-ah m-ow1 sh-ah-n\", \"nn\"],\n  \"promotional\": [\"p-r-ah m-ow1 sh-ah n-ah-l\", \"jj\"],\n  \"prompt\": [\"p-r-aa1-m-p-t\", \"vb jj vbp\"],\n  \"promptly\": [\"p-r-aa1-m-p-t l-iy\", \"rb\"],\n  \"promulgate\": [\"p-r-ow-m-ah1-l-g-ey-t\", \"vb\"],\n  \"prone\": [\"p-r-ow1-n\", \"jj rb\"],\n  \"pronoun\": [\"p-r-ow1 n-aw-n\", \"nn\"],\n  \"pronounce\": [\"p-r-ah n-aw1-n-s\", \"vb\"],\n  \"pronounced\": [\"p-r-ah n-aw1-n-s-t\", \"vbn vbd jj\"],\n  \"pronouncement\": [\"p-r-ah n-aw1-n s-m-ah-n-t\", \"nn\"],\n  \"pronouncing\": [\"p-r-ah n-aw1-n s-ih-ng\", \"jj vbg\"],\n  \"pronunciation\": [\"p-r-ow n-ah-n s-iy ey1 sh-ah-n\", \"nn\"],\n  \"proof\": [\"p-r-uw1-f\", \"nn jj\"],\n  \"proofread\": [\"p-r-uw1-f-r-iy-d\", \"vb\"],\n  \"prop\": [\"p-r-aa1-p\", \"vb vbp nn\"],\n  \"propaganda\": [\"p-r-aa p-ah g-ae1-n d-ah\", \"nn\"],\n  \"propagandist\": [\"p-r-aa p-ah g-ae1-n d-ah-s-t\", \"nn\"],\n  \"propagandize\": [\"p-r-aa p-ah g-ae1-n d-ay-z\", \"vb\"],\n  \"propagate\": [\"p-r-aa1 p-ah g-ey-t\", \"vb\"],\n  \"propagation\": [\"p-r-aa p-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"propane\": [\"p-r-ow1 p-ey-n\", \"nn\"],\n  \"propel\": [\"p-r-ah p-eh1-l\", \"vb vbp\"],\n  \"propellant\": [\"p-r-ah p-eh1 l-ah-n-t\", \"nn\"],\n  \"propeller\": [\"p-r-ah p-eh1 l-er\", \"nn\"],\n  \"propensity\": [\"p-r-ah p-eh1-n s-ih t-iy\", \"nn\"],\n  \"proper\": [\"p-r-aa1 p-er\", \"jj\"],\n  \"properly\": [\"p-r-aa1 p-er l-iy\", \"rb\"],\n  \"property\": [\"p-r-aa1 p-er t-iy\", \"nn\"],\n  \"prophecy\": [\"p-r-aa1 f-ah s-iy\", \"nn\"],\n  \"prophesy\": [\"p-r-aa1 f-ah s-ay\", \"vb\"],\n  \"prophet\": [\"p-r-aa1 f-ah-t\", \"nn\"],\n  \"prophetic\": [\"p-r-ah f-eh1 t-ih-k\", \"jj\"],\n  \"propitious\": [\"p-r-ah p-ih1 sh-ah-s\", \"jj\"],\n  \"proponent\": [\"p-r-ah p-ow1 n-ah-n-t\", \"nn\"],\n  \"proportion\": [\"p-r-ah p-ao1-r sh-ah-n\", \"nn\"],\n  \"proportional\": [\"p-r-ah p-ao1-r sh-ah n-ah-l\", \"jj nn\"],\n  \"proportionally\": [\"p-r-ah p-ao1-r sh-ah-n ah l-iy\", \"rb\"],\n  \"proportionate\": [\"p-r-ah p-ao1-r sh-ah-n ah-t\", \"jj\"],\n  \"proportionately\": [\"p-r-ah p-ao1-r sh-ah-n ah-t l-iy\", \"rb\"],\n  \"proportioned\": [\"p-r-ah p-ao1-r sh-ah-n-d\", \"jj\"],\n  \"proposal\": [\"p-r-ah p-ow1 z-ah-l\", \"nn\"],\n  \"propose\": [\"p-r-ah p-ow1-z\", \"vb vbp\"],\n  \"proposed\": [\"p-r-ah p-ow1-z-d\", \"vbn vbd jj\"],\n  \"proposition\": [\"p-r-aa p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"propound\": [\"p-r-ah-p-aw1-n-d\", \"vb\"],\n  \"proprietary\": [\"p-r-ah p-r-ay1 ah t-eh r-iy\", \"jj nn\"],\n  \"proprietor\": [\"p-r-ah p-r-ay1 ah t-er\", \"nn\"],\n  \"proprietorship\": [\"p-r-ah p-r-ay1 ah t-er sh-ih-p\", \"nn\"],\n  \"propriety\": [\"p-r-ah p-r-ay1 ah t-iy\", \"nn\"],\n  \"propulsion\": [\"p-r-ah p-ah1-l sh-ah-n\", \"nn\"],\n  \"propylene\": [\"p-r-ow p-ah l-iy1-n\", \"nn\"],\n  \"prorate\": [\"p-r-ow1-r-ey1-t\", \"vb\"],\n  \"proration\": [\"p-r-ow r-ey1 sh-ah-n\", \"nn jj\"],\n  \"prosaic\": [\"p-r-ow z-ey1 ih-k\", \"jj\"],\n  \"proscribe\": [\"p-r-ow s-k-r-ay1-b\", \"vb vbp\"],\n  \"proscription\": [\"p-r-ow s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"prose\": [\"p-r-ow1-z\", \"nn\"],\n  \"prosecute\": [\"p-r-aa1 s-ah k-y-uw-t\", \"vb\"],\n  \"prosecution\": [\"p-r-aa s-ah k-y-uw1 sh-ah-n\", \"nn\"],\n  \"prosecutor\": [\"p-r-aa1 s-ih k-y-uw t-er\", \"nn\"],\n  \"prosecutorial\": [\"p-r-aa s-ih k-y-uw t-ao1 r-iy ah-l\", \"jj\"],\n  \"proselytize\": [\"p-r-aa1-s-ah-l-ah-t-ay-z\", \"vb\"],\n  \"prospect\": [\"p-r-aa1 s-p-eh-k-t\", \"nn\"],\n  \"prospective\": [\"p-r-ah s-p-eh1-k t-ih-v\", \"jj\"],\n  \"prospectively\": [\"p-r-ah s-p-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"prospector\": [\"p-r-ao1 s-p-eh-k t-er\", \"nn\"],\n  \"prospectus\": [\"p-r-ah s-p-eh1-k t-ah-s\", \"nn\"],\n  \"prosper\": [\"p-r-aa1 s-p-er\", \"vb\"],\n  \"prosperity\": [\"p-r-aa s-p-eh1 r-ah t-iy\", \"nn\"],\n  \"prosperous\": [\"p-r-aa1 s-p-er ah-s\", \"jj\"],\n  \"prostate\": [\"p-r-aa1 s-t-ey-t\", \"nn jj\"],\n  \"prostitute\": [\"p-r-aa1 s-t-ah t-uw-t\", \"nn vb\"],\n  \"prostitution\": [\"p-r-aa s-t-ah t-uw1 sh-ah-n\", \"nn\"],\n  \"prostrate\": [\"p-r-aa1 s-t-r-ey-t\", \"jj\"],\n  \"protagonist\": [\"p-r-ow t-ae1 g-ah n-ah-s-t\", \"nn\"],\n  \"protect\": [\"p-r-ah t-eh1-k-t\", \"vb vbp\"],\n  \"protected\": [\"p-r-ah t-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"protection\": [\"p-r-ah t-eh1-k sh-ah-n\", \"nn\"],\n  \"protectionism\": [\"p-r-ah t-eh1-k sh-ah n-ih z-ah-m\", \"nn\"],\n  \"protectionist\": [\"p-r-ah t-eh1-k sh-ah n-ih-s-t\", \"jj nn\"],\n  \"protective\": [\"p-r-ah t-eh1-k t-ih-v\", \"jj nn\"],\n  \"protectively\": [\"p-r-ah t-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"protector\": [\"p-r-ah t-eh1-k t-er\", \"nn\"],\n  \"protege\": [\"p-r-ow1 t-ah zh-ey\", \"nn\"],\n  \"protein\": [\"p-r-ow1 t-iy-n\", \"nn\"],\n  \"protest\": [\"p-r-ow1 t-eh-s-t\", \"nn vb vbp\"],\n  \"protestation\": [\"p-r-ow t-eh s-t-ey1 sh-ah-n\", \"nn\"],\n  \"protester\": [\"p-r-ow1 t-eh s-t-er\", \"nn\"],\n  \"protestor\": [\"p-r-ow1 t-eh s-t-er\", \"nn\"],\n  \"protocol\": [\"p-r-ow1 t-ah k-aa-l\", \"nn\"],\n  \"proton\": [\"p-r-ow1 t-aa-n\", \"nn\"],\n  \"prototype\": [\"p-r-ow1 t-ah t-ay-p\", \"nn jj\"],\n  \"prototypical\": [\"p-r-ow t-ah t-ih1 p-ih k-ah-l\", \"jj\"],\n  \"protract\": [\"p-r-ow-t-r-ae1-k-t\", \"vb\"],\n  \"protrude\": [\"p-r-ow t-r-uw1-d\", \"vb\"],\n  \"proud\": [\"p-r-aw1-d\", \"jj\"],\n  \"prouder\": [\"p-r-aw1 d-er\", \"rbr\"],\n  \"proudest\": [\"p-r-aw1 d-ah-s-t\", \"jjs\"],\n  \"proudly\": [\"p-r-aw1-d l-iy\", \"rb\"],\n  \"prove\": [\"p-r-uw1-v\", \"vb vbp\"],\n  \"proved\": [\"p-r-uw1-v-d\", \"vbd jj vbn\"],\n  \"proven\": [\"p-r-uw1 v-ah-n\", \"vbn jj\"],\n  \"provenance\": [\"p-r-aa1 v-ah n-ah-n-s\", \"nn\"],\n  \"proverb\": [\"p-r-aa1 v-er-b\", \"nn\"],\n  \"proverbial\": [\"p-r-ah v-er1 b-iy ah-l\", \"jj\"],\n  \"provide\": [\"p-r-ah v-ay1-d\", \"vb vbp\"],\n  \"providence\": [\"p-r-aa1 v-ah d-ah-n-s\", \"nn\"],\n  \"providential\": [\"p-r-aa v-ah d-eh1-n ch-ah-l\", \"jj\"],\n  \"provider\": [\"p-r-ah v-ay1 d-er\", \"nn\"],\n  \"providing\": [\"p-r-ah v-ay1 d-ih-ng\", \"vbg in\"],\n  \"province\": [\"p-r-aa1 v-ah-n-s\", \"nn\"],\n  \"provincial\": [\"p-r-ah v-ih1-n sh-ah-l\", \"jj\"],\n  \"provincially\": [\"p-r-ah v-ih1-n sh-ah l-iy\", \"rb\"],\n  \"provision\": [\"p-r-ah v-ih1 zh-ah-n\", \"nn vb\"],\n  \"provisional\": [\"p-r-ah v-ih1 zh-ah n-ah-l\", \"jj\"],\n  \"provisionally\": [\"p-r-ah v-ih1 zh-ah-n ah l-iy\", \"rb\"],\n  \"proviso\": [\"p-r-ah v-ay1 z-ow\", \"nn\"],\n  \"provocation\": [\"p-r-aa v-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"provocative\": [\"p-r-ow v-aa1 k-ah t-ih-v\", \"jj\"],\n  \"provocatively\": [\"p-r-ow v-aa1 k-ah t-ih-v l-iy\", \"rb\"],\n  \"provoke\": [\"p-r-ah v-ow1-k\", \"vb vbp\"],\n  \"provoked\": [\"p-r-ah v-ow1-k-t\", \"vbd jj vbn\"],\n  \"provoking\": [\"p-r-ah v-ow1 k-ih-ng\", \"vbg jj\"],\n  \"provost\": [\"p-r-ow1 v-ow-s-t\", \"nn\"],\n  \"prow\": [\"p-r-aw1\", \"nn\"],\n  \"prowess\": [\"p-r-aw1 ah-s\", \"nn\"],\n  \"prowl\": [\"p-r-aw1-l\", \"nn vb vbp jj\"],\n  \"proximal\": [\"p-r-aa1-k s-ah m-ah-l\", \"jj\"],\n  \"proximate\": [\"p-r-aa1-k s-ah m-ah-t\", \"jj\"],\n  \"proximity\": [\"p-r-aa-k s-ih1 m-ah t-iy\", \"nn\"],\n  \"proxy\": [\"p-r-aa1-k s-iy\", \"nn jj\"],\n  \"prude\": [\"p-r-uw1-d\", \"nn\"],\n  \"prudence\": [\"p-r-uw1 d-ah-n-s\", \"nn\"],\n  \"prudent\": [\"p-r-uw1 d-ah-n-t\", \"jj\"],\n  \"prudential\": [\"p-r-uw d-eh1-n ch-ah-l\", \"jj\"],\n  \"prudently\": [\"p-r-uw1 d-ah-n-t l-iy\", \"rb\"],\n  \"prune\": [\"p-r-uw1-n\", \"nn vb\"],\n  \"prurient\": [\"p-r-uh1 r-iy ah-n-t\", \"jj\"],\n  \"pry\": [\"p-r-ay1\", \"vb\"],\n  \"prying\": [\"p-r-ay1 ih-ng\", \"jj vbg\"],\n  \"psalm\": [\"s-aa1-l-m\", \"nn\"],\n  \"pseudo\": [\"s-uw1 d-ow\", \"jj\"],\n  \"pseudonym\": [\"s-uw1 d-ah n-ih-m\", \"nn\"],\n  \"psoriasis\": [\"s-er ay1 ah s-ah-s\", \"nn\"],\n  \"psyche\": [\"s-ay1 k-iy\", \"nn\"],\n  \"psychiatric\": [\"s-ay k-iy ae1 t-r-ih-k\", \"jj\"],\n  \"psychiatrist\": [\"s-ah k-ay1 ah t-r-ah-s-t\", \"nn\"],\n  \"psychiatry\": [\"s-ay k-ay1 ah t-r-iy\", \"nn\"],\n  \"psychic\": [\"s-ay1 k-ih-k\", \"jj nn\"],\n  \"psychical\": [\"s-ay1 k-ih k-ah-l\", \"jj\"],\n  \"psychoanalysis\": [\"s-ay k-ow ah n-ae1 l-ah s-ah-s\", \"nn\"],\n  \"psychoanalyst\": [\"s-ay k-ow ae1 n-ah l-ah-s-t\", \"nn\"],\n  \"psychological\": [\"s-ay k-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"psychologically\": [\"s-ay k-ah l-aa1 jh-ih-k l-iy\", \"rb\"],\n  \"psychologist\": [\"s-ay k-aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"psychology\": [\"s-ay k-aa1 l-ah jh-iy\", \"nn\"],\n  \"psychopath\": [\"s-ay1 k-ow p-ae-th\", \"nn\"],\n  \"psychopathic\": [\"s-ay k-ah p-ae1 th-ih-k\", \"jj\"],\n  \"psychotherapist\": [\"s-ay k-ah th-eh1 r-ah p-ih-s-t\", \"nn\"],\n  \"psychotherapy\": [\"s-ay k-ow th-eh1 r-ah p-iy\", \"nn\"],\n  \"psychotic\": [\"s-ay k-aa1 t-ih-k\", \"jj\"],\n  \"psyllium\": [\"s-ih1 l-iy ah-m\", \"nn\"],\n  \"pub\": [\"p-ah1-b\", \"nn\"],\n  \"puberty\": [\"p-y-uw1 b-er t-iy\", \"nn\"],\n  \"public\": [\"p-ah1 b-l-ih-k\", \"jj nn rb\"],\n  \"publication\": [\"p-ah b-l-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"publicist\": [\"p-ah1 b-l-ih s-ih-s-t\", \"nn\"],\n  \"publicity\": [\"p-ah b-l-ih1 s-ah t-iy\", \"nn\"],\n  \"publicize\": [\"p-ah1 b-l-ih s-ay-z\", \"vb\"],\n  \"publicized\": [\"p-ah1 b-l-ih s-ay-z-d\", \"vbn jj\"],\n  \"publicly\": [\"p-ah1 b-l-ih-k l-iy\", \"rb\"],\n  \"publish\": [\"p-ah1 b-l-ih-sh\", \"vb vbp\"],\n  \"published\": [\"p-ah1 b-l-ih-sh-t\", \"vbn jj vbd\"],\n  \"publisher\": [\"p-ah1 b-l-ih sh-er\", \"nn\"],\n  \"publishing\": [\"p-ah1 b-l-ih sh-ih-ng\", \"jj vbg\"],\n  \"puckish\": [\"p-ah1 k-ih-sh\", \"jj\"],\n  \"pudding\": [\"p-uh1 d-ih-ng\", \"nn\"],\n  \"puddle\": [\"p-ah1 d-ah-l\", \"nn\"],\n  \"puerile\": [\"p-y-uw r-iy1-l\", \"jj\"],\n  \"puff\": [\"p-ah1-f\", \"nn vb\"],\n  \"puffery\": [\"p-ah1 f-er iy\", \"nn\"],\n  \"puffy\": [\"p-ah1 f-iy\", \"jj\"],\n  \"pugnacious\": [\"p-ah-g n-ae1 sh-ih-s\", \"jj\"],\n  \"pull\": [\"p-uh1-l\", \"vb vbp nn\"],\n  \"pullback\": [\"p-uh1-l b-ae-k\", \"nn\"],\n  \"pulley\": [\"p-uh1 l-iy\", \"nn\"],\n  \"pullout\": [\"p-uh1-l aw-t\", \"nn\"],\n  \"pulmonary\": [\"p-uh1-l m-ah n-eh r-iy\", \"jj\"],\n  \"pulp\": [\"p-ah1-l-p\", \"nn vb\"],\n  \"pulpit\": [\"p-uh1-l p-ih-t\", \"nn\"],\n  \"pulpwood\": [\"p-ah1-l-p w-uh-d\", \"nn\"],\n  \"pulsate\": [\"p-ah1-l s-ey-t\", \"vb\"],\n  \"pulse\": [\"p-ah1-l-s\", \"nn vb\"],\n  \"pulverize\": [\"p-ah1-l v-er ay-z\", \"vb\"],\n  \"pummel\": [\"p-ah1 m-ah-l\", \"vb\"],\n  \"pummeling\": [\"p-ah1 m-ah-l ih-ng\", \"nn\"],\n  \"pump\": [\"p-ah1-m-p\", \"vb vbp nn\"],\n  \"pumpkin\": [\"p-ah1-m-p k-ih-n\", \"nn\"],\n  \"pun\": [\"p-ah1-n\", \"nn\"],\n  \"punch\": [\"p-ah1-n-ch\", \"nn vbp vb\"],\n  \"punchy\": [\"p-ah1-n ch-iy\", \"jj\"],\n  \"punctuality\": [\"p-ah-ng-k ch-uw ae1 l-ih t-iy\", \"nn\"],\n  \"punctuate\": [\"p-ah1-ng-k-ch-uw-ey-t\", \"vb\"],\n  \"punctuation\": [\"p-ah-ng-k ch-uw ey1 sh-ah-n\", \"nn\"],\n  \"puncture\": [\"p-ah1-ng-k-ch-er\", \"vb\"],\n  \"punctured\": [\"p-ah1-ng-k ch-er-d\", \"jj vbn\"],\n  \"pundit\": [\"p-ah1-n d-ih-t\", \"nn\"],\n  \"pungent\": [\"p-ah1-n jh-ah-n-t\", \"jj\"],\n  \"pungently\": [\"p-ah1-n jh-ah-n-t l-iy\", \"rb\"],\n  \"punish\": [\"p-ah1 n-ih-sh\", \"vb vbp\"],\n  \"punishable\": [\"p-ah1 n-ih sh-ah b-ah-l\", \"jj\"],\n  \"punishing\": [\"p-ah1 n-ih sh-ih-ng\", \"vbg jj\"],\n  \"punishment\": [\"p-ah1 n-ih-sh m-ah-n-t\", \"nn\"],\n  \"punitive\": [\"p-y-uw1 n-ah t-ih-v\", \"jj\"],\n  \"punk\": [\"p-ah1-ng-k\", \"nn jj\"],\n  \"punky\": [\"p-ah1-ng k-iy\", \"jj\"],\n  \"punt\": [\"p-ah1-n-t\", \"nn\"],\n  \"puny\": [\"p-y-uw1 n-iy\", \"jj\"],\n  \"pup\": [\"p-ah1-p\", \"nn\"],\n  \"pupil\": [\"p-y-uw1 p-ah-l\", \"nn\"],\n  \"puppet\": [\"p-ah1 p-ah-t\", \"nn\"],\n  \"puppeteer\": [\"p-ah p-ah t-iy1-r\", \"nn\"],\n  \"puppy\": [\"p-ah1 p-iy\", \"nn\"],\n  \"purchase\": [\"p-er1 ch-ah-s\", \"nn vb vbp\"],\n  \"purchased\": [\"p-er1 ch-ah-s-t\", \"vbn jj vbd\"],\n  \"purchaser\": [\"p-er1 ch-ah s-er\", \"nn\"],\n  \"purchasing\": [\"p-er1 ch-ah s-ih-ng\", \"vbg jj\"],\n  \"pure\": [\"p-y-uh1-r\", \"jj\"],\n  \"purely\": [\"p-y-uh1-r l-iy\", \"rb\"],\n  \"purest\": [\"p-y-uh1 r-ah-s-t\", \"jjs\"],\n  \"purgatory\": [\"p-er1 g-ah t-ao r-iy\", \"nn\"],\n  \"purge\": [\"p-er1-jh\", \"nn vb\"],\n  \"purification\": [\"p-y-uh r-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"purified\": [\"p-y-uh1 r-ah f-ay-d\", \"vbn\"],\n  \"purifier\": [\"p-y-uh1 r-ah f-ay er\", \"nn\"],\n  \"purify\": [\"p-y-uh1 r-ah f-ay\", \"vb vbp\"],\n  \"purist\": [\"p-y-uh1 r-ah-s-t\", \"nn\"],\n  \"puritan\": [\"p-y-uh1 r-ah t-ah-n\", \"jj\"],\n  \"puritanical\": [\"p-y-uh r-ah t-ae1 n-ih k-ah-l\", \"jj\"],\n  \"purity\": [\"p-y-uh1 r-ah t-iy\", \"nn\"],\n  \"purloin\": [\"p-er-l-oy1-n\", \"vb\"],\n  \"purple\": [\"p-er1 p-ah-l\", \"jj nn\"],\n  \"purport\": [\"p-er1 p-ao-r-t\", \"vb vbp\"],\n  \"purported\": [\"p-er p-ao1-r t-ih-d\", \"jj vbd\"],\n  \"purportedly\": [\"p-er p-ao-r t-ih-d l-iy\", \"rb\"],\n  \"purpose\": [\"p-er1 p-ah-s\", \"nn\"],\n  \"purposeful\": [\"p-er1 p-ah-s f-ah-l\", \"jj\"],\n  \"purposefully\": [\"p-er1 p-ah-s f-ah l-iy\", \"rb\"],\n  \"purposeless\": [\"p-er1 p-ah-s l-ah-s\", \"jj\"],\n  \"purposely\": [\"p-er1 p-ah-s l-iy\", \"rb\"],\n  \"purr\": [\"p-er1\", \"vb\"],\n  \"purse\": [\"p-er1-s\", \"nn vb\"],\n  \"pursue\": [\"p-er s-uw1\", \"vb vbp\"],\n  \"pursued\": [\"p-er s-uw1-d\", \"vbn jj vbd\"],\n  \"pursuer\": [\"p-er s-uw1 er\", \"nn\"],\n  \"pursuit\": [\"p-er s-uw1-t\", \"nn\"],\n  \"purveyor\": [\"p-er v-ey1 er\", \"nn\"],\n  \"purview\": [\"p-er1 v-y-uw\", \"nn\"],\n  \"push\": [\"p-uh1-sh\", \"vb vbp nn\"],\n  \"pusher\": [\"p-uh1 sh-er\", \"nn\"],\n  \"pushing\": [\"p-uh1 sh-ih-ng\", \"vbg jj nn\"],\n  \"pushover\": [\"p-uh1-sh ow v-er\", \"nn\"],\n  \"pushup\": [\"p-uh1 sh-ah-p\", \"nn\"],\n  \"pushy\": [\"p-uh1 sh-iy\", \"jj\"],\n  \"pussy\": [\"p-uh1 s-iy\", \"nn\"],\n  \"pussycat\": [\"p-uh1 s-iy k-ae-t\", \"nn\"],\n  \"put\": [\"p-uh1-t\", \"vb jj nn vbp vbd vbn\"],\n  \"putative\": [\"p-y-uw1 t-ah t-ih-v\", \"jj\"],\n  \"putt\": [\"p-ah1-t\", \"nn vb\"],\n  \"puttable\": [\"p-ah1 t-ah b-ah-l\", \"jj\"],\n  \"putter\": [\"p-ah1 t-er\", \"nn\"],\n  \"putty\": [\"p-ah1 t-iy\", \"nn\"],\n  \"puzzle\": [\"p-ah1 z-ah-l\", \"nn vb\"],\n  \"puzzled\": [\"p-ah1 z-ah-l-d\", \"vbn jj vbd\"],\n  \"puzzlement\": [\"p-ah1 z-ah-l m-ah-n-t\", \"nn\"],\n  \"puzzler\": [\"p-ah1-z l-er\", \"nn\"],\n  \"puzzling\": [\"p-ah1 z-ah-l ih-ng\", \"jj vbg\"],\n  \"pylon\": [\"p-ay1 l-aa-n\", \"nn\"],\n  \"pyramid\": [\"p-ih1 r-ah m-ih-d\", \"nn vb\"],\n  \"python\": [\"p-ay1 th-aa-n\", \"nn\"],\n  \"quack\": [\"k-w-ae1-k\", \"nn uh\"],\n  \"quadrennial\": [\"k-w-aa d-r-eh1 n-iy ah-l\", \"jj\"],\n  \"quadriceps\": [\"k-w-aa1 d-r-ah s-eh-p-s\", \"nn\"],\n  \"quadruple\": [\"k-w-aa d-r-uw1 p-ah-l\", \"vb\"],\n  \"quagmire\": [\"k-w-ae1-g m-ay er\", \"nn\"],\n  \"quaint\": [\"k-w-ey1-n-t\", \"jj\"],\n  \"quaintly\": [\"k-w-ey1-n-t l-iy\", \"rb\"],\n  \"quake\": [\"k-w-ey1-k\", \"nn vb\"],\n  \"qualification\": [\"k-w-aa l-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"qualified\": [\"k-w-aa1 l-ah f-ay-d\", \"vbn jj vbd\"],\n  \"qualify\": [\"k-w-aa1 l-ah f-ay\", \"vb vbp\"],\n  \"qualitative\": [\"k-w-aa1 l-ah t-ey t-ih-v\", \"jj\"],\n  \"quality\": [\"k-w-aa1 l-ah t-iy\", \"nn jj\"],\n  \"qualm\": [\"k-w-aa1-m\", \"nn\"],\n  \"quam\": [\"k-w-aa1-m\", \"nn\"],\n  \"quandary\": [\"k-w-aa1-n d-er iy\", \"nn\"],\n  \"quantified\": [\"k-w-aa1-n t-ih f-ay-d\", \"vbn\"],\n  \"quantify\": [\"k-w-aa1-n t-ih f-ay\", \"vb\"],\n  \"quantitative\": [\"k-w-aa1-n t-ih t-ey t-ih-v\", \"jj\"],\n  \"quantity\": [\"k-w-aa1-n t-ah t-iy\", \"nn\"],\n  \"quantum\": [\"k-w-aa1-n t-ah-m\", \"nn\"],\n  \"quarantine\": [\"k-w-ao1 r-ah-n t-iy-n\", \"vb\"],\n  \"quarrel\": [\"k-w-ao1 r-ah-l\", \"nn vb\"],\n  \"quarrelsome\": [\"k-w-ao1 r-ah-l s-ah-m\", \"jj\"],\n  \"quarry\": [\"k-w-ao1 r-iy\", \"nn\"],\n  \"quart\": [\"k-w-ao1-r-t\", \"nn\"],\n  \"quarter\": [\"k-w-ao1-r t-er\", \"nn\"],\n  \"quarterback\": [\"k-w-ao1-r t-er b-ae-k\", \"nn\"],\n  \"quarterly\": [\"k-w-ao1-r t-er l-iy\", \"jj nn rb\"],\n  \"quartet\": [\"k-w-ao-r t-eh1-t\", \"nn\"],\n  \"quartz\": [\"k-w-ao1-r-t-s\", \"nn\"],\n  \"quash\": [\"k-w-ao1-sh\", \"vb\"],\n  \"queasiness\": [\"k-w-iy1 z-iy n-ah-s\", \"nn\"],\n  \"queen\": [\"k-w-iy1-n\", \"nn\"],\n  \"queer\": [\"k-w-ih1-r\", \"jj\"],\n  \"quell\": [\"k-w-eh1-l\", \"vb\"],\n  \"quench\": [\"k-w-eh1-n-ch\", \"vb\"],\n  \"quenching\": [\"k-w-eh1-n ch-ih-ng\", \"nn\"],\n  \"querulous\": [\"k-w-eh1 r-ah l-ah-s\", \"jj\"],\n  \"query\": [\"k-w-iy1 r-iy\", \"nn\"],\n  \"quest\": [\"k-w-eh1-s-t\", \"nn\"],\n  \"question\": [\"k-w-eh1-s ch-ah-n\", \"nn vb vbp\"],\n  \"questionable\": [\"k-w-eh1-s ch-ah n-ah b-ah-l\", \"jj\"],\n  \"questioner\": [\"k-w-eh1-s ch-ah n-er\", \"nn\"],\n  \"questioning\": [\"k-w-eh1-s ch-ah n-ih-ng\", \"vbg jj\"],\n  \"questionnaire\": [\"k-w-eh-s ch-ah n-eh1-r\", \"nn\"],\n  \"queue\": [\"k-y-uw1\", \"nn vb\"],\n  \"quibble\": [\"k-w-ih1 b-ah-l\", \"vb\"],\n  \"quiche\": [\"k-iy1-sh\", \"nn\"],\n  \"quick\": [\"k-w-ih1-k\", \"jj nn rb\"],\n  \"quicken\": [\"k-w-ih1 k-ah-n\", \"vb\"],\n  \"quicker\": [\"k-w-ih1 k-er\", \"jjr rbr jj\"],\n  \"quickest\": [\"k-w-ih1 k-ih-s-t\", \"jjs\"],\n  \"quickie\": [\"k-w-ih1 k-iy\", \"nn jj\"],\n  \"quickly\": [\"k-w-ih1-k l-iy\", \"rb\"],\n  \"quickness\": [\"k-w-ih1-k n-ah-s\", \"nn\"],\n  \"quicksand\": [\"k-w-ih1-k s-ae-n-d\", \"nn\"],\n  \"quicksilver\": [\"k-w-ih1-k s-ih1-l v-er\", \"jj nn\"],\n  \"quid\": [\"k-w-ih1-d\", \"nn\"],\n  \"quiescent\": [\"k-w-ay eh1 s-ah-n-t\", \"jj\"],\n  \"quiet\": [\"k-w-ay1 ah-t\", \"jj nn vb\"],\n  \"quieter\": [\"k-w-ay1 ah t-er\", \"jjr\"],\n  \"quietly\": [\"k-w-ay1 ah-t l-iy\", \"rb\"],\n  \"quietness\": [\"k-w-ay1 ah-t n-ah-s\", \"nn\"],\n  \"quill\": [\"k-w-ih1-l\", \"nn\"],\n  \"quilt\": [\"k-w-ih1-l-t\", \"nn\"],\n  \"quilted\": [\"k-w-ih1-l t-ih-d\", \"jj\"],\n  \"quince\": [\"k-w-ih1-n-s\", \"nn\"],\n  \"quinine\": [\"k-w-ay1 n-ay-n\", \"nn\"],\n  \"quintessential\": [\"k-w-ih-n t-ih s-eh1-n sh-ah-l\", \"jj\"],\n  \"quintet\": [\"k-w-ih-n t-eh1-t\", \"nn\"],\n  \"quintuple\": [\"k-w-ih1-n t-uw p-ah-l\", \"rb vb\"],\n  \"quip\": [\"k-w-ih1-p\", \"nn\"],\n  \"quipped\": [\"k-w-ih1-p-t\", \"vbd nn\"],\n  \"quirk\": [\"k-w-er1-k\", \"nn\"],\n  \"quirky\": [\"k-w-er1 k-iy\", \"jj\"],\n  \"quisling\": [\"k-w-ih1-z l-ih-ng\", \"nn\"],\n  \"quit\": [\"k-w-ih1-t\", \"vb vbd vbn vbp nn\"],\n  \"quite\": [\"k-w-ay1-t\", \"rb pdt\"],\n  \"quiver\": [\"k-w-ih1-v-er\", \"vb\"],\n  \"quixotic\": [\"k-w-ih-k s-aa1 t-ih-k\", \"jj\"],\n  \"quiz\": [\"k-w-ih1-z\", \"nn vb\"],\n  \"quorum\": [\"k-w-ao1 r-ah-m\", \"nn\"],\n  \"quota\": [\"k-w-ow1 t-ah\", \"nn\"],\n  \"quotation\": [\"k-w-ow t-ey1 sh-ah-n\", \"nn\"],\n  \"quote\": [\"k-w-ow1-t\", \"vb vbp nn\"],\n  \"quoted\": [\"k-w-ow1 t-ah-d\", \"vbn jj vbd\"],\n  \"quotient\": [\"k-w-ow1 t-ih ah-n-t\", \"nn\"],\n  \"rabbi\": [\"r-ae1 b-ay\", \"nn\"],\n  \"rabbit\": [\"r-ae1 b-ah-t\", \"nn\"],\n  \"rabble\": [\"r-ae1 b-ah-l\", \"nn\"],\n  \"rabid\": [\"r-ae1 b-ih-d\", \"jj\"],\n  \"raccoon\": [\"r-ae k-uw1-n\", \"nn\"],\n  \"race\": [\"r-ey1-s\", \"nn vb\"],\n  \"racehorse\": [\"r-ey1-s hh-ao-r-s\", \"nn\"],\n  \"racer\": [\"r-ey1 s-er\", \"nn\"],\n  \"racetrack\": [\"r-ey1-s t-r-ae-k\", \"nn\"],\n  \"raceway\": [\"r-ey1-s w-ey\", \"nn\"],\n  \"racial\": [\"r-ey1 sh-ah-l\", \"jj\"],\n  \"racially\": [\"r-ey1 sh-ah l-iy\", \"rb\"],\n  \"racing\": [\"r-ey1 s-ih-ng\", \"vbg jj nn\"],\n  \"racism\": [\"r-ey1 s-ih z-ah-m\", \"nn\"],\n  \"racist\": [\"r-ey1 s-ih-s-t\", \"jj nn\"],\n  \"rack\": [\"r-ae1-k\", \"nn vb vbp\"],\n  \"racket\": [\"r-ae1 k-ih-t\", \"nn\"],\n  \"racketeer\": [\"r-ae k-ih t-ih1-r\", \"nn vb\"],\n  \"racy\": [\"r-ey1 s-iy\", \"jj\"],\n  \"radar\": [\"r-ey1 d-aa-r\", \"nn\"],\n  \"radial\": [\"r-ey1 d-iy ah-l\", \"jj\"],\n  \"radiance\": [\"r-ey1 d-iy ah-n-s\", \"nn\"],\n  \"radiant\": [\"r-ey1 d-iy ah-n-t\", \"jj\"],\n  \"radiate\": [\"r-ey1 d-iy ah-t\", \"vb vbp\"],\n  \"radiated\": [\"r-ey1 d-iy ey t-ah-d\", \"vbd vbn jj\"],\n  \"radiation\": [\"r-ey d-iy ey1 sh-ah-n\", \"nn\"],\n  \"radiator\": [\"r-ey1 d-iy ey t-er\", \"nn\"],\n  \"radical\": [\"r-ae1 d-ah k-ah-l\", \"jj nn\"],\n  \"radicalism\": [\"r-ae1 d-ih k-ah l-ih z-ah-m\", \"nn\"],\n  \"radicalize\": [\"r-ae1-d-ih-k-ah-l-ay-z\", \"vb\"],\n  \"radically\": [\"r-ae1 d-ih-k l-iy\", \"rb\"],\n  \"radio\": [\"r-ey1 d-iy ow\", \"nn vb\"],\n  \"radioactive\": [\"r-ey d-iy ow ae1-k t-ih-v\", \"jj\"],\n  \"radioactivity\": [\"r-ey1 d-iy ow ae-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"radioed\": [\"r-ey1 d-iy ow-d\", \"jj vbd\"],\n  \"radiography\": [\"r-ey d-iy aa1 g-r-ah f-iy\", \"nn\"],\n  \"radish\": [\"r-ae1 d-ih-sh\", \"nn\"],\n  \"radius\": [\"r-ey1 d-iy ah-s\", \"nn\"],\n  \"radon\": [\"r-ey1 d-aa-n\", \"nn\"],\n  \"raffish\": [\"r-ae1 f-ih-sh\", \"jj\"],\n  \"raft\": [\"r-ae1-f-t\", \"nn\"],\n  \"rafter\": [\"r-ae1-f t-er\", \"nn\"],\n  \"rag\": [\"r-ae1-g\", \"nn\"],\n  \"rage\": [\"r-ey1-jh\", \"nn vb\"],\n  \"ragged\": [\"r-ae1 g-ah-d\", \"jj\"],\n  \"raging\": [\"r-ey1 jh-ih-ng\", \"vbg jj\"],\n  \"ragtime\": [\"r-ae1-g t-ay-m\", \"nn\"],\n  \"raid\": [\"r-ey1-d\", \"nn vb\"],\n  \"raider\": [\"r-ey1 d-er\", \"nn\"],\n  \"rail\": [\"r-ey1-l\", \"nn vb\"],\n  \"railbike\": [\"r-ey1-l b-ay-k\", \"nn\"],\n  \"railbiker\": [\"r-ey1-l b-ih k-er\", \"nn\"],\n  \"railcar\": [\"r-ey1-l k-aa-r\", \"nn\"],\n  \"railing\": [\"r-ey1 l-ih-ng\", \"nn\"],\n  \"railroad\": [\"r-ey1-l r-ow-d\", \"nn vb\"],\n  \"railway\": [\"r-ey1-l w-ey\", \"nn\"],\n  \"rain\": [\"r-ey1-n\", \"nn vb\"],\n  \"rainbow\": [\"r-ey1-n b-ow\", \"nn\"],\n  \"raincoat\": [\"r-ey1-n k-ow-t\", \"nn\"],\n  \"raindrop\": [\"r-ey1-n d-r-aa-p\", \"nn\"],\n  \"rainfall\": [\"r-ey1-n f-ao-l\", \"nn\"],\n  \"rainier\": [\"r-ey n-ih1-r\", \"jjr\"],\n  \"rainstorm\": [\"r-ey1-n s-t-ao-r-m\", \"nn\"],\n  \"rainwater\": [\"r-ey1-n w-ao t-er\", \"nn\"],\n  \"rainy\": [\"r-ey1 n-iy\", \"jj\"],\n  \"raise\": [\"r-ey1-z\", \"vb vbp nn\"],\n  \"raised\": [\"r-ey1-z-d\", \"vbn vbd jj\"],\n  \"raiser\": [\"r-ey1 z-er\", \"nn\"],\n  \"raisin\": [\"r-ey1 z-ih-n\", \"nn\"],\n  \"raising\": [\"r-ey1 z-ih-ng\", \"vbg rp\"],\n  \"rake\": [\"r-ey1-k\", \"nn vb vbp\"],\n  \"rakish\": [\"r-ey1 k-ih-sh\", \"jj\"],\n  \"rallied\": [\"r-ae1 l-iy-d\", \"vbd vbn\"],\n  \"rally\": [\"r-ae1 l-iy\", \"nn vbp vb\"],\n  \"rallying\": [\"r-ae1 l-iy ih-ng\", \"vbg jj nn\"],\n  \"ram\": [\"r-ae1-m\", \"vb nn\"],\n  \"ramble\": [\"r-ae1-m b-ah-l\", \"vb vbp nn\"],\n  \"rambling\": [\"r-ae1-m b-l-ih-ng\", \"nn jj\"],\n  \"rambunctious\": [\"r-ae-m b-ah1-ng-k sh-ah-s\", \"jj\"],\n  \"ramification\": [\"r-ae m-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"ramp\": [\"r-ae1-m-p\", \"nn vb\"],\n  \"rampage\": [\"r-ae1-m p-ey-jh\", \"nn\"],\n  \"rampant\": [\"r-ae1-m p-ah-n-t\", \"jj rb\"],\n  \"rampart\": [\"r-ae1-m p-aa-r-t\", \"nn\"],\n  \"ramshackle\": [\"r-ae1-m sh-ae k-ah-l\", \"jj\"],\n  \"ran\": [\"r-ae1-n\", \"vbd\"],\n  \"ranch\": [\"r-ae1-n-ch\", \"nn\"],\n  \"rancher\": [\"r-ae1-n ch-er\", \"nn\"],\n  \"rancid\": [\"r-ae1-n s-ih-d\", \"jj\"],\n  \"rancor\": [\"r-ae1-ng k-er\", \"nn\"],\n  \"rancorous\": [\"r-ae1-ng k-er ah-s\", \"jj\"],\n  \"random\": [\"r-ae1-n d-ah-m\", \"jj nn\"],\n  \"randomly\": [\"r-ae1-n d-ah-m l-iy\", \"rb\"],\n  \"randomness\": [\"r-ae1-n d-ah-m n-ah-s\", \"nn\"],\n  \"rang\": [\"r-ae1-ng\", \"vbd\"],\n  \"range\": [\"r-ey1-n-jh\", \"nn jj vb vbp vbz\"],\n  \"ranger\": [\"r-ey1-n jh-er\", \"nn\"],\n  \"rangy\": [\"r-ey1-n jh-iy\", \"jj\"],\n  \"rank\": [\"r-ae1-ng-k\", \"nn vbp jj vb\"],\n  \"ranked\": [\"r-ae1-ng-k-t\", \"vbd vbn jj\"],\n  \"ranking\": [\"r-ae1-ng k-ih-ng\", \"jj vbg\"],\n  \"rankle\": [\"r-ae1-ng-k-ah-l\", \"vb\"],\n  \"ransack\": [\"r-ae1-n s-ae-k\", \"vb\"],\n  \"ransom\": [\"r-ae1-n s-ah-m\", \"nn\"],\n  \"rant\": [\"r-ae1-n-t\", \"vb\"],\n  \"rap\": [\"r-ae1-p\", \"nn vb vbp\"],\n  \"rapacious\": [\"r-ah p-ae1 sh-ih-s\", \"jj\"],\n  \"rape\": [\"r-ey1-p\", \"nn vb vbp\"],\n  \"raped\": [\"r-ey1-p-t\", \"vbn vbd jj\"],\n  \"rapid\": [\"r-ae1 p-ah-d\", \"jj\"],\n  \"rapidity\": [\"r-ah p-ih1 d-ah t-iy\", \"nn\"],\n  \"rapidly\": [\"r-ae1 p-ah-d l-iy\", \"rb\"],\n  \"rapier\": [\"r-ey1 p-iy er\", \"nn\"],\n  \"rapist\": [\"r-ey1 p-ih-s-t\", \"nn\"],\n  \"rapped\": [\"r-ae1-p-t\", \"vbd vbn\"],\n  \"rapport\": [\"r-ae p-ao1-r\", \"nn\"],\n  \"rapt\": [\"r-ae1-p-t\", \"jj\"],\n  \"raptor\": [\"r-ae1-p t-er\", \"nn\"],\n  \"rapture\": [\"r-ae1-p ch-er\", \"nn\"],\n  \"rare\": [\"r-eh1-r\", \"jj\"],\n  \"rarefied\": [\"r-eh1 r-ah f-ay-d\", \"vbn\"],\n  \"rarefy\": [\"r-eh1-r-ah-f-ay\", \"vb\"],\n  \"rarely\": [\"r-eh1-r l-iy\", \"rb\"],\n  \"rarer\": [\"r-eh1 r-er\", \"jjr\"],\n  \"rarest\": [\"r-eh1 r-ah-s-t\", \"jjs\"],\n  \"rarity\": [\"r-eh1 r-ah t-iy\", \"nn\"],\n  \"rascal\": [\"r-ae1-s k-ah-l\", \"nn\"],\n  \"rash\": [\"r-ae1-sh\", \"nn jj\"],\n  \"raspberry\": [\"r-ae1-z b-eh r-iy\", \"jj nn\"],\n  \"rasped\": [\"r-ae1-s-p-t\", \"vbd\"],\n  \"raspy\": [\"r-ae1-s p-iy\", \"nn\"],\n  \"rat\": [\"r-ae1-t\", \"nn vb\"],\n  \"ratchet\": [\"r-ae1 ch-ah-t\", \"vb\"],\n  \"rate\": [\"r-ey1-t\", \"nn vbp vb\"],\n  \"rated\": [\"r-ey1 t-ah-d\", \"vbn jj vbd\"],\n  \"ratepayer\": [\"r-ey1-t p-ey er\", \"nn\"],\n  \"rather\": [\"r-ae1 dh-er\", \"rb in\"],\n  \"ratification\": [\"r-ae t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"ratify\": [\"r-ae1 t-ah f-ay\", \"vb vbp\"],\n  \"rating\": [\"r-ey1 t-ih-ng\", \"nn vbg\"],\n  \"ratio\": [\"r-ey1 sh-iy ow\", \"nn\"],\n  \"ration\": [\"r-ae1 sh-ah-n\", \"nn vb\"],\n  \"rational\": [\"r-ae1 sh-ah n-ah-l\", \"jj\"],\n  \"rationale\": [\"r-ae sh-ah n-ae1-l\", \"nn\"],\n  \"rationality\": [\"r-ae sh-ah n-ae1 l-ih t-iy\", \"nn\"],\n  \"rationalization\": [\"r-ae sh-ah-n ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"rationalize\": [\"r-ae1 sh-ah-n ah l-ay-z\", \"vb vbp\"],\n  \"rationalized\": [\"r-ae1 sh-ah-n ah l-ay-z-d\", \"jj vbn\"],\n  \"rationally\": [\"r-ae1 sh-ah-n ah l-iy\", \"rb\"],\n  \"rationing\": [\"r-ae1 sh-ah-n ih-ng\", \"nn\"],\n  \"rattle\": [\"r-ae1 t-ah-l\", \"nn vb\"],\n  \"rattled\": [\"r-ae1 t-ah-l-d\", \"vbn jj vbd\"],\n  \"rattler\": [\"r-ae1 t-ah-l er\", \"nn\"],\n  \"rattlesnake\": [\"r-ae1 t-ah-l s-n-ey-k\", \"nn\"],\n  \"ratty\": [\"r-ae1 t-iy\", \"jj\"],\n  \"raucous\": [\"r-ao1 k-ah-s\", \"jj\"],\n  \"ravage\": [\"r-ae1 v-ih-jh\", \"vb\"],\n  \"rave\": [\"r-ey1-v\", \"vbp jj vb\"],\n  \"ravenous\": [\"r-ae1 v-ah n-ah-s\", \"jj\"],\n  \"raw\": [\"r-aa1\", \"jj\"],\n  \"rawhide\": [\"r-ao1 hh-ay-d\", \"nn\"],\n  \"ray\": [\"r-ey1\", \"nn\"],\n  \"rayon\": [\"r-ey1 ah-n\", \"nn\"],\n  \"raze\": [\"r-ey1-z\", \"vb\"],\n  \"razor\": [\"r-ey1 z-er\", \"nn\"],\n  \"razorback\": [\"r-ey1 z-er b-ae-k\", \"nn\"],\n  \"reach\": [\"r-iy1-ch\", \"vb vbp nn\"],\n  \"reacquire\": [\"r-iy ah k-w-ay1-r\", \"vb\"],\n  \"react\": [\"r-iy ae1-k-t\", \"vb vbp\"],\n  \"reaction\": [\"r-iy ae1-k sh-ah-n\", \"nn\"],\n  \"reactionary\": [\"r-iy ae1-k sh-ah-n eh r-iy\", \"jj nn\"],\n  \"reactivate\": [\"r-iy1-ae1-k-t-ah-v-ey-t\", \"vb\"],\n  \"reactivity\": [\"r-iy ae-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"reactor\": [\"r-iy ae1-k t-er\", \"nn\"],\n  \"read\": [\"r-eh1-d\", \"vb nn vbp vbd vbn\"],\n  \"readable\": [\"r-iy1 d-ah b-ah-l\", \"jj\"],\n  \"reader\": [\"r-iy1 d-er\", \"nn\"],\n  \"readership\": [\"r-iy1 d-er sh-ih-p\", \"nn\"],\n  \"readied\": [\"r-eh1 d-iy-d\", \"vbn vbd\"],\n  \"readily\": [\"r-eh1 d-ah l-iy\", \"rb\"],\n  \"readiness\": [\"r-eh1 d-iy n-ah-s\", \"nn\"],\n  \"reading\": [\"r-eh1 d-ih-ng\", \"nn vbg\"],\n  \"readjust\": [\"r-iy ah jh-ah1-s-t\", \"vb\"],\n  \"readmit\": [\"r-iy-ah-d-m-ih1-t\", \"vb\"],\n  \"ready\": [\"r-eh1 d-iy\", \"jj rb vb\"],\n  \"reaffirm\": [\"r-iy ah f-er1-m\", \"vb vbp\"],\n  \"reaffirmation\": [\"r-iy ae f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"reagent\": [\"r-iy ey1 jh-ah-n-t\", \"nn\"],\n  \"real\": [\"r-iy1-l\", \"jj nn rb\"],\n  \"realestate\": [\"r-iy1 l-ih s-t-ey-t\", \"nn vb\"],\n  \"realign\": [\"r-iy ah l-ay1-n\", \"vb\"],\n  \"realigned\": [\"r-iy ah l-ay1-n-d\", \"vbd jj\"],\n  \"realignment\": [\"r-iy ah l-ay1-n m-ah-n-t\", \"nn\"],\n  \"realism\": [\"r-iy1 l-ih z-ah-m\", \"nn\"],\n  \"realist\": [\"r-iy1 l-ih-s-t\", \"nn\"],\n  \"realistic\": [\"r-iy ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"realistically\": [\"r-iy ah l-ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"reality\": [\"r-iy ae1 l-ah t-iy\", \"nn\"],\n  \"realization\": [\"r-iy1 l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"realize\": [\"r-iy1 l-ay-z\", \"vb vbp\"],\n  \"reallocate\": [\"r-iy ae1 l-ah k-ey-t\", \"vb\"],\n  \"really\": [\"r-ih1 l-iy\", \"rb\"],\n  \"realm\": [\"r-eh1-l-m\", \"nn\"],\n  \"realtor\": [\"r-iy1 ah-l t-er\", \"nn\"],\n  \"ream\": [\"r-iy1-m\", \"nn vb\"],\n  \"reap\": [\"r-iy1-p\", \"vb vbp\"],\n  \"reaper\": [\"r-iy1 p-er\", \"nn\"],\n  \"reappear\": [\"r-iy ah p-ih1-r\", \"vbp vb\"],\n  \"reappearance\": [\"r-iy ah p-ih1 r-ah-n-s\", \"nn\"],\n  \"reappoint\": [\"r-iy-ah-p-oy1-n-t\", \"vb\"],\n  \"reappraisal\": [\"r-iy ah p-r-ey1 z-ah-l\", \"nn\"],\n  \"reappraise\": [\"r-iy ah p-r-ey1-z\", \"vb vbp\"],\n  \"rear\": [\"r-ih1-r\", \"jj nn vb\"],\n  \"rearm\": [\"r-iy1 aa1-r-m\", \"vb\"],\n  \"rearrange\": [\"r-iy er ey1-n-jh\", \"vb\"],\n  \"rearrangement\": [\"r-iy er ey1-n-jh m-ah-n-t\", \"nn\"],\n  \"reason\": [\"r-iy1 z-ah-n\", \"nn vb vbp\"],\n  \"reasonable\": [\"r-iy1 z-ah-n ah b-ah-l\", \"jj\"],\n  \"reasonably\": [\"r-iy1 z-ah-n ah b-l-iy\", \"rb\"],\n  \"reasoned\": [\"r-iy1 z-ah-n-d\", \"vbd jj vbn\"],\n  \"reassemble\": [\"r-iy ah s-eh1-m b-ah-l\", \"vb\"],\n  \"reassert\": [\"r-iy ah s-er1-t\", \"vb\"],\n  \"reassess\": [\"r-iy ah s-eh1-s\", \"vb nn\"],\n  \"reassessment\": [\"r-iy ah s-eh1-s m-ah-n-t\", \"nn\"],\n  \"reassign\": [\"r-iy ah s-ay1-n\", \"vb\"],\n  \"reassignment\": [\"r-iy ah s-ay1-n m-ah-n-t\", \"nn\"],\n  \"reassume\": [\"r-iy ah s-uw1-m\", \"vb\"],\n  \"reassurance\": [\"r-iy ah sh-uh1 r-ah-n-s\", \"nn\"],\n  \"reassure\": [\"r-iy ah sh-uh1-r\", \"vb\"],\n  \"reassuring\": [\"r-iy ah sh-uh1 r-ih-ng\", \"vbg jj\"],\n  \"reassuringly\": [\"r-iy ah sh-er1 ih-ng l-iy\", \"rb\"],\n  \"reauthorize\": [\"r-iy ao1 th-er ay-z\", \"vb\"],\n  \"reawaken\": [\"r-iy-ah-w-ey1-k-ah-n\", \"vb\"],\n  \"rebalance\": [\"r-iy b-ae1 l-ah-n-s\", \"vb\"],\n  \"rebate\": [\"r-iy1 b-ey-t\", \"nn vb\"],\n  \"rebel\": [\"r-eh1 b-ah-l\", \"nn vbp jj vb\"],\n  \"rebellion\": [\"r-ih b-eh1-l y-ah-n\", \"nn\"],\n  \"rebellious\": [\"r-ih b-eh1-l y-ah-s\", \"jj\"],\n  \"rebirth\": [\"r-iy b-er1-th\", \"nn\"],\n  \"reborn\": [\"r-iy1 b-ao1-r-n\", \"vbn jj\"],\n  \"rebound\": [\"r-iy b-aw1-n-d\", \"nn vbp vb\"],\n  \"rebuff\": [\"r-ih b-ah1-f\", \"nn vb\"],\n  \"rebuild\": [\"r-iy b-ih1-l-d\", \"vb\"],\n  \"rebuilder\": [\"r-iy b-ih1-l d-er\", \"nn\"],\n  \"rebuilt\": [\"r-iy b-ih1-l-t\", \"vbn\"],\n  \"rebuke\": [\"r-iy b-y-uw1-k\", \"vb nn\"],\n  \"rebut\": [\"r-ih b-ah1-t\", \"vb\"],\n  \"rebuttal\": [\"r-ih b-ah1 t-ah-l\", \"nn\"],\n  \"recalcitrant\": [\"r-ih k-ae1-l s-ih t-r-ah-n-t\", \"jj\"],\n  \"recalculate\": [\"r-iy-k-ae1-l-k-y-ah-l-ey-t\", \"vb\"],\n  \"recalculation\": [\"r-iy k-ae-l k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"recall\": [\"r-iy1 k-ao-l\", \"vb nn vbp\"],\n  \"recant\": [\"r-iy-k-ae1-n-t\", \"vb\"],\n  \"recantation\": [\"r-eh k-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"recast\": [\"r-iy k-ae1-s-t\", \"vb\"],\n  \"recede\": [\"r-ih s-iy1-d\", \"vbp vb\"],\n  \"receipt\": [\"r-ih s-iy1-t\", \"nn\"],\n  \"receivable\": [\"r-ih s-iy1 v-ah b-ah-l\", \"jj nn\"],\n  \"receive\": [\"r-ah s-iy1-v\", \"vb vbp\"],\n  \"received\": [\"r-ah s-iy1-v-d\", \"vbd vbn jj\"],\n  \"receiver\": [\"r-ah s-iy1 v-er\", \"nn\"],\n  \"receivership\": [\"r-ih s-iy1 v-er sh-ih-p\", \"nn\"],\n  \"recent\": [\"r-iy1 s-ah-n-t\", \"jj\"],\n  \"recently\": [\"r-iy1 s-ah-n-t l-iy\", \"rb\"],\n  \"receptacle\": [\"r-ah s-eh1-p t-ah k-ah-l\", \"nn\"],\n  \"reception\": [\"r-ih s-eh1-p sh-ah-n\", \"nn\"],\n  \"receptionist\": [\"r-ih s-eh1-p sh-ah n-ih-s-t\", \"nn\"],\n  \"receptive\": [\"r-ih s-eh1-p t-ih-v\", \"jj\"],\n  \"receptivity\": [\"r-iy1 s-eh-p t-ih1 v-ih t-iy\", \"nn\"],\n  \"receptor\": [\"r-iy s-eh1-p t-er\", \"nn\"],\n  \"recess\": [\"r-ih s-eh1-s\", \"nn vb\"],\n  \"recession\": [\"r-ih s-eh1 sh-ah-n\", \"nn\"],\n  \"recessionary\": [\"r-iy s-eh1 sh-ah-n eh r-iy\", \"jj\"],\n  \"recharge\": [\"r-iy ch-aa1-r-jh\", \"nn vb\"],\n  \"rechargeable\": [\"r-iy ch-aa1-r jh-ah b-ah-l\", \"jj\"],\n  \"recheck\": [\"r-iy1 ch-eh1-k\", \"vb vbp\"],\n  \"recipe\": [\"r-eh1 s-ah p-iy\", \"nn\"],\n  \"recipient\": [\"r-ah s-ih1 p-iy ah-n-t\", \"jj nn\"],\n  \"reciprocal\": [\"r-ih s-ih1 p-r-ah k-ah-l\", \"jj\"],\n  \"reciprocate\": [\"r-ih s-ih1 p-r-ah k-ey-t\", \"vb\"],\n  \"reciprocity\": [\"r-eh s-ih p-r-aa1 s-ih t-iy\", \"nn\"],\n  \"recital\": [\"r-ah s-ay1 t-ah-l\", \"nn\"],\n  \"recitation\": [\"r-eh s-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"recite\": [\"r-ah s-ay1-t\", \"vb vbp\"],\n  \"reckless\": [\"r-eh1-k l-ah-s\", \"jj\"],\n  \"recklessly\": [\"r-eh1-k l-ah-s l-iy\", \"rb\"],\n  \"recklessness\": [\"r-eh1-k l-ah-s n-ah-s\", \"nn\"],\n  \"reckon\": [\"r-eh1 k-ah-n\", \"vbp vb\"],\n  \"reckoning\": [\"r-eh1 k-ah n-ih-ng\", \"nn vbg\"],\n  \"reclaim\": [\"r-iy k-l-ey1-m\", \"vb vbp\"],\n  \"reclaimed\": [\"r-iy k-l-ey1-m-d\", \"vbn vbd jj\"],\n  \"reclamation\": [\"r-eh k-l-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"reclassification\": [\"r-iy k-l-ae s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"reclassified\": [\"r-iy k-l-ae1 s-ah f-ay-d\", \"vbd vbn\"],\n  \"reclassify\": [\"r-iy-k-l-ae1-s-ih-f-ay\", \"vb\"],\n  \"recline\": [\"r-ih-k-l-ay1-n\", \"vb\"],\n  \"recliner\": [\"r-ih k-l-ay1 n-er\", \"nn\"],\n  \"reclining\": [\"r-ih k-l-ay1 n-ih-ng\", \"vbg jj\"],\n  \"recluse\": [\"r-ih k-l-uw1-s\", \"nn\"],\n  \"reclusive\": [\"r-ih k-l-uw1 s-ih-v\", \"jj\"],\n  \"recognition\": [\"r-eh k-ah-g n-ih1 sh-ah-n\", \"nn\"],\n  \"recognizable\": [\"r-eh k-ah-g n-ay1 z-ah b-ah-l\", \"jj\"],\n  \"recognizably\": [\"r-eh1 k-ah-g n-ay z-ah b-l-iy\", \"rb\"],\n  \"recognizance\": [\"r-ih k-aa1 n-ah z-ah-n-s\", \"nn\"],\n  \"recognize\": [\"r-eh1 k-ah-g n-ay-z\", \"vb vbp\"],\n  \"recognized\": [\"r-eh1 k-ah-g n-ay-z-d\", \"vbn jj vbd\"],\n  \"recoil\": [\"r-iy k-oy1-l\", \"nn vb vbp\"],\n  \"recollect\": [\"r-eh k-ah l-eh1-k-t\", \"vb vbp\"],\n  \"recollection\": [\"r-eh k-ah l-eh1-k sh-ah-n\", \"nn\"],\n  \"recombinant\": [\"r-ih k-aa1-m b-ih n-ah-n-t\", \"jj\"],\n  \"recommend\": [\"r-eh k-ah m-eh1-n-d\", \"vb vbp\"],\n  \"recommendation\": [\"r-eh k-ah m-ah-n d-ey1 sh-ah-n\", \"nn\"],\n  \"recommended\": [\"r-eh k-ah m-eh1-n d-ah-d\", \"vbd vbn jj\"],\n  \"recompense\": [\"r-eh1 k-ah-m p-eh-n-s\", \"nn\"],\n  \"reconcile\": [\"r-eh1 k-ah-n s-ay-l\", \"vb\"],\n  \"reconciliation\": [\"r-eh k-ah-n s-ih l-iy ey1 sh-ah-n\", \"nn\"],\n  \"recondite\": [\"r-eh1 k-ah-n d-ay-t\", \"jj\"],\n  \"recondition\": [\"r-iy-k-ah-n-d-ih1-sh-ah-n\", \"vb\"],\n  \"reconfiguration\": [\"r-iy k-ah-n f-ih g-y-er ey1 sh-ah-n\", \"nn\"],\n  \"reconfigure\": [\"r-iy k-ah-n f-ih1 g-y-er\", \"nn\"],\n  \"reconfirm\": [\"r-iy k-ah-n f-er1-m\", \"vb\"],\n  \"reconfirmation\": [\"r-iy k-aa-n f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"reconnaissance\": [\"r-iy k-aa1 n-ah s-ah-n-s\", \"nn\"],\n  \"reconnect\": [\"r-iy k-ah n-eh1-k-t\", \"vb\"],\n  \"reconsider\": [\"r-iy k-ah-n s-ih1 d-er\", \"vb vbp\"],\n  \"reconsideration\": [\"r-iy k-ah-n s-ih d-er ey1 sh-ah-n\", \"nn\"],\n  \"reconstitute\": [\"r-iy k-aa1-n s-t-ah t-uw-t\", \"vb\"],\n  \"reconstruct\": [\"r-iy k-ah-n s-t-r-ah1-k-t\", \"vb vbp\"],\n  \"reconstructed\": [\"r-iy k-ah-n s-t-r-ah1-k t-ih-d\", \"jj vbd vbn\"],\n  \"reconstruction\": [\"r-iy k-ah-n s-t-r-ah1-k sh-ah-n\", \"nn\"],\n  \"reconvene\": [\"r-iy-k-ah-n-v-iy1-n\", \"vb\"],\n  \"record\": [\"r-ah k-ao1-r-d\", \"nn jj vb vbp\"],\n  \"recorded\": [\"r-ah k-ao1-r d-ah-d\", \"vbn vbd jj\"],\n  \"recorder\": [\"r-ih k-ao1-r d-er\", \"nn\"],\n  \"recording\": [\"r-ah k-ao1-r d-ih-ng\", \"nn vbg\"],\n  \"recordkeeping\": [\"r-eh1 k-er-d k-iy p-ih-ng\", \"nn\"],\n  \"recount\": [\"r-ih k-aw1-n-t\", \"vb nn\"],\n  \"recoup\": [\"r-ih k-uw1-p\", \"vb\"],\n  \"recourse\": [\"r-iy1 k-ao-r-s\", \"nn\"],\n  \"recover\": [\"r-ih k-ah1 v-er\", \"vb vbp\"],\n  \"recoverable\": [\"r-ih k-ah1 v-er ah b-ah-l\", \"jj\"],\n  \"recovery\": [\"r-ih k-ah1 v-r-iy\", \"nn\"],\n  \"recreate\": [\"r-eh1 k-r-iy ey-t\", \"vb vbp\"],\n  \"recreation\": [\"r-eh k-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"recreational\": [\"r-eh k-r-iy ey1 sh-ah-n ah-l\", \"jj\"],\n  \"recrimination\": [\"r-ih k-r-ih m-ih n-ey1 sh-ah-n\", \"nn\"],\n  \"recruit\": [\"r-ah k-r-uw1-t\", \"vb vbp nn\"],\n  \"recruiter\": [\"r-ih k-r-uw1 t-er\", \"nn\"],\n  \"recruitment\": [\"r-ah k-r-uw1-t m-ah-n-t\", \"nn\"],\n  \"rectangle\": [\"r-eh1-k t-ae-ng g-ah-l\", \"nn\"],\n  \"rectangular\": [\"r-eh-k t-ae1-ng g-y-ah l-er\", \"jj\"],\n  \"rectification\": [\"r-eh-k t-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"rectified\": [\"r-eh1-k t-ah f-ay-d\", \"vbn\"],\n  \"rectifier\": [\"r-eh1-k t-ah f-ay er\", \"nn\"],\n  \"rectify\": [\"r-eh1-k t-ah f-ay\", \"vb\"],\n  \"rectitude\": [\"r-eh1-k t-ih t-uw-d\", \"nn\"],\n  \"rector\": [\"r-eh1-k t-er\", \"nn\"],\n  \"rectum\": [\"r-eh1-k t-ah-m\", \"nn\"],\n  \"recuperate\": [\"r-ih k-uw1 p-er ey-t\", \"vb\"],\n  \"recuperation\": [\"r-ih k-uw p-er ey1 sh-ah-n\", \"nn\"],\n  \"recur\": [\"r-ih k-er1\", \"vb vbp\"],\n  \"recurrence\": [\"r-ih k-er1 ah-n-s\", \"nn\"],\n  \"recurrent\": [\"r-ih k-er1 ah-n-t\", \"jj\"],\n  \"recuse\": [\"r-ih-k-y-uw1-z\", \"vb\"],\n  \"recyclable\": [\"r-iy s-ay1 k-l-ah b-ah-l\", \"jj\"],\n  \"recycle\": [\"r-iy s-ay1 k-ah-l\", \"vb\"],\n  \"recycled\": [\"r-iy s-ay1 k-ah-l-d\", \"vbn jj vbd\"],\n  \"recycler\": [\"r-iy s-ay1 k-l-er\", \"nn\"],\n  \"red\": [\"r-eh1-d\", \"jj nn\"],\n  \"redcoat\": [\"r-eh1-d k-ow-t\", \"nn\"],\n  \"redder\": [\"r-eh1 d-er\", \"jjr rbr\"],\n  \"reddish\": [\"r-eh1 d-ih-sh\", \"jj\"],\n  \"redecorate\": [\"r-iy-d-eh1-k-er-ey-t\", \"vb\"],\n  \"redecoration\": [\"r-iy d-eh k-er ey1 sh-ah-n\", \"nn\"],\n  \"redeem\": [\"r-ih d-iy1-m\", \"vb vbp\"],\n  \"redeemable\": [\"r-ih d-iy1 m-ah b-ah-l\", \"jj\"],\n  \"redeeming\": [\"r-ih d-iy1 m-ih-ng\", \"vbg jj\"],\n  \"redefine\": [\"r-iy d-ih f-ay1-n\", \"vb\"],\n  \"redefinition\": [\"r-iy d-eh f-ah n-ih1 sh-ah-n\", \"nn\"],\n  \"redemption\": [\"r-ih d-eh1-m-p sh-ah-n\", \"nn\"],\n  \"redemptive\": [\"r-ih d-eh1-m-p t-ih-v\", \"jj\"],\n  \"redeploy\": [\"r-iy d-ih p-l-oy1\", \"vb\"],\n  \"redeployment\": [\"r-iy d-ih p-l-oy1 m-ah-n-t\", \"nn\"],\n  \"redeposition\": [\"r-iy d-eh p-ah z-ih1 sh-ah-n\", \"nn\"],\n  \"redesign\": [\"r-iy d-ih-z ay1-n\", \"nn vb\"],\n  \"redesigned\": [\"r-iy d-ih-z ay1-n-d\", \"vbn vbd jj\"],\n  \"redevelop\": [\"r-iy d-ih-v eh1 l-ah-p\", \"vb\"],\n  \"redhead\": [\"r-eh1-d hh-eh-d\", \"nn\"],\n  \"redheaded\": [\"r-eh1-d hh-eh d-ih-d\", \"jj\"],\n  \"redirect\": [\"r-iy d-er eh1-k-t\", \"vb\"],\n  \"redirection\": [\"r-iy d-er eh1-k sh-ah-n\", \"nn\"],\n  \"rediscover\": [\"r-iy d-ih-s k-ah1 v-er\", \"vb\"],\n  \"rediscovery\": [\"r-iy d-ih-s k-ah1 v-r-iy\", \"nn\"],\n  \"redistribute\": [\"r-iy d-ih-s t-r-ih1 b-y-uw-t\", \"vb vbp\"],\n  \"redistribution\": [\"r-iy d-ih-s t-r-ah b-y-uw1 sh-ah-n\", \"nn\"],\n  \"redistrict\": [\"r-iy d-ih1-s t-r-ih-k-t\", \"vb\"],\n  \"redneck\": [\"r-eh1-d n-eh-k\", \"nn\"],\n  \"redo\": [\"r-iy d-uw1\", \"vb\"],\n  \"redone\": [\"r-iy d-ah1-n\", \"jj nn\"],\n  \"redouble\": [\"r-iy d-ah1 b-ah-l\", \"vb\"],\n  \"redoubt\": [\"r-ah d-aw1-t\", \"nn\"],\n  \"redound\": [\"r-ih d-aw1-n-d\", \"vb\"],\n  \"redraw\": [\"r-iy d-r-ao1\", \"vb\"],\n  \"redrawn\": [\"r-iy d-r-ao1-n\", \"jj\"],\n  \"redress\": [\"r-ih d-r-eh1-s\", \"vb nn\"],\n  \"reduce\": [\"r-ah d-uw1-s\", \"vb vbp\"],\n  \"reduced\": [\"r-ah d-uw1-s-t\", \"vbn vbd jj\"],\n  \"reduction\": [\"r-ah d-ah1-k sh-ah-n\", \"nn\"],\n  \"redundancy\": [\"r-ih d-ah1-n d-ah-n s-iy\", \"nn\"],\n  \"redundant\": [\"r-ih d-ah1-n d-ah-n-t\", \"jj\"],\n  \"redwood\": [\"r-eh1-d w-uh-d\", \"nn\"],\n  \"reed\": [\"r-iy1-d\", \"nn\"],\n  \"reedy\": [\"r-iy1 d-iy\", \"jj\"],\n  \"reef\": [\"r-iy1-f\", \"nn\"],\n  \"reek\": [\"r-iy1-k\", \"vb vbp nn\"],\n  \"reel\": [\"r-iy1-l\", \"nn vbp vb\"],\n  \"reemerge\": [\"r-iy-ih-m-er1-jh\", \"vb\"],\n  \"reestablish\": [\"r-iy ih s-t-ae1 b-l-ih-sh\", \"vb\"],\n  \"reexamination\": [\"r-iy ih-g z-ae m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"reexamine\": [\"r-iy eh-g z-ae1 m-ah-n\", \"vb\"],\n  \"refer\": [\"r-ah f-er1\", \"vb vbp\"],\n  \"referee\": [\"r-eh f-er iy1\", \"nn\"],\n  \"reference\": [\"r-eh1 f-er ah-n-s\", \"nn\"],\n  \"referenda\": [\"r-eh f-er eh1-n d-ah\", \"nn\"],\n  \"referendum\": [\"r-eh f-er eh1-n d-ah-m\", \"nn\"],\n  \"referral\": [\"r-ih f-er1 ah-l\", \"nn\"],\n  \"refile\": [\"r-iy f-ay1-l\", \"vb\"],\n  \"refill\": [\"r-iy1 f-ih-l\", \"nn vb\"],\n  \"refinance\": [\"r-iy f-ah n-ae1-n-s\", \"vb\"],\n  \"refine\": [\"r-ah f-ay1-n\", \"vb\"],\n  \"refined\": [\"r-ah f-ay1-n-d\", \"jj vbn\"],\n  \"refinement\": [\"r-ah f-ay1-n m-ah-n-t\", \"nn\"],\n  \"refiner\": [\"r-ih f-ay1 n-er\", \"nn\"],\n  \"refinery\": [\"r-ih f-ay1 n-er iy\", \"nn\"],\n  \"refit\": [\"r-iy-f-ih1-t\", \"vb\"],\n  \"reflect\": [\"r-ah f-l-eh1-k-t\", \"vb vbp\"],\n  \"reflected\": [\"r-ah f-l-eh1-k t-ah-d\", \"vbd jj vbn\"],\n  \"reflecting\": [\"r-ah f-l-eh1-k t-ih-ng\", \"vbg jj\"],\n  \"reflection\": [\"r-ah f-l-eh1-k sh-ah-n\", \"nn\"],\n  \"reflective\": [\"r-ih f-l-eh1-k t-ih-v\", \"jj\"],\n  \"reflex\": [\"r-iy1 f-l-eh-k-s\", \"nn jj\"],\n  \"reflexively\": [\"r-iy f-l-eh1-k s-ih-v l-iy\", \"rb\"],\n  \"refocus\": [\"r-iy f-ow1 k-ah-s\", \"vb\"],\n  \"reforestation\": [\"r-iy f-ao r-ah s-t-ey1 sh-ah-n\", \"nn\"],\n  \"reform\": [\"r-ah f-ao1-r-m\", \"nn vb\"],\n  \"reformation\": [\"r-eh f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"reformatory\": [\"r-ih f-ao1-r m-ah t-ao r-iy\", \"nn\"],\n  \"reformed\": [\"r-ih f-ao1-r-m-d\", \"vbn jj vbd\"],\n  \"reformer\": [\"r-ih f-ao1-r m-er\", \"jj nn\"],\n  \"reformist\": [\"r-ih f-ao1-r m-ih-s-t\", \"nn jj\"],\n  \"reformulate\": [\"r-iy-f-ao1-r-m-y-ah-l-ey-t\", \"vb\"],\n  \"reformulated\": [\"r-iy f-ao1-r m-y-ah l-ey t-ih-d\", \"vbn jj\"],\n  \"refractive\": [\"r-ah f-r-ae1-k t-ih-v\", \"jj\"],\n  \"refractory\": [\"r-ah f-r-ae1-k t-er iy\", \"jj nn\"],\n  \"refrain\": [\"r-ih f-r-ey1-n\", \"vb nn\"],\n  \"refresh\": [\"r-ih f-r-eh1-sh\", \"vb vbp\"],\n  \"refreshed\": [\"r-iy f-r-eh1-sh-t\", \"jj vbd vbn\"],\n  \"refresher\": [\"r-ih f-r-eh1 sh-er\", \"nn\"],\n  \"refreshing\": [\"r-ih f-r-eh1 sh-ih-ng\", \"jj vbg\"],\n  \"refreshingly\": [\"r-iy f-r-eh1 sh-ih-ng l-iy\", \"rb\"],\n  \"refreshment\": [\"r-ah f-r-eh1-sh m-ah-n-t\", \"nn\"],\n  \"refrigerant\": [\"r-ih f-r-ih1 jh-er ah-n-t\", \"nn\"],\n  \"refrigerate\": [\"r-ih-f-r-ih1-jh-er-ey-t\", \"vb\"],\n  \"refrigerated\": [\"r-ih f-r-ih1 jh-er ey t-ih-d\", \"vbn jj\"],\n  \"refrigeration\": [\"r-ih f-r-ih jh-er ey1 sh-ah-n\", \"nn\"],\n  \"refrigerator\": [\"r-ah f-r-ih1 jh-er ey t-er\", \"nn\"],\n  \"refuel\": [\"r-iy f-y-uw1 ah-l\", \"vb\"],\n  \"refuge\": [\"r-eh1 f-y-uw-jh\", \"nn\"],\n  \"refugee\": [\"r-eh1 f-y-uw jh-iy\", \"nn\"],\n  \"refund\": [\"r-ih f-ah1-n-d\", \"nn vb\"],\n  \"refundable\": [\"r-ih f-ah1-n d-ah b-ah-l\", \"jj\"],\n  \"refunding\": [\"r-ih f-ah1-n d-ih-ng\", \"vbg jj\"],\n  \"refurbish\": [\"r-iy f-er1 b-ih-sh\", \"vb\"],\n  \"refusal\": [\"r-ah f-y-uw1 z-ah-l\", \"nn\"],\n  \"refuse\": [\"r-ah f-y-uw1-z\", \"vb vbp nn\"],\n  \"refute\": [\"r-ih f-y-uw1-t\", \"vb\"],\n  \"regain\": [\"r-ih g-ey1-n\", \"vb vbp\"],\n  \"regal\": [\"r-iy1 g-ah-l\", \"jj\"],\n  \"regale\": [\"r-iy1 g-eh1-l\", \"vb\"],\n  \"regalia\": [\"r-ih g-ey1 l-y-ah\", \"nn\"],\n  \"regard\": [\"r-ah g-aa1-r-d\", \"nn vb vbp\"],\n  \"regarded\": [\"r-ah g-aa1-r d-ah-d\", \"vbn jj vbd\"],\n  \"regardless\": [\"r-ah g-aa1-r-d l-ah-s\", \"rb\"],\n  \"regatta\": [\"r-ah g-aa1 t-ah\", \"nn\"],\n  \"regenerate\": [\"r-iy jh-eh1 n-er ey-t\", \"vb\"],\n  \"regeneration\": [\"r-iy jh-eh1 n-er ey1 sh-ah-n\", \"nn\"],\n  \"regent\": [\"r-iy1 jh-ah-n-t\", \"nn\"],\n  \"reggae\": [\"r-eh1 g-ey\", \"nn\"],\n  \"regime\": [\"r-ah zh-iy1-m\", \"nn\"],\n  \"regimen\": [\"r-eh1 jh-ah m-ah-n\", \"nn\"],\n  \"regiment\": [\"r-eh1 jh-ah m-ah-n-t\", \"nn vb\"],\n  \"regimentation\": [\"r-eh jh-ah m-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"regimented\": [\"r-eh1 jh-ah m-eh-n t-ih-d\", \"vbn jj\"],\n  \"region\": [\"r-iy1 jh-ah-n\", \"nn\"],\n  \"regional\": [\"r-iy1 jh-ah n-ah-l\", \"jj\"],\n  \"regionally\": [\"r-iy1 jh-ah-n ah l-iy\", \"rb\"],\n  \"register\": [\"r-eh1 jh-ih s-t-er\", \"vb nn vbp\"],\n  \"registered\": [\"r-eh1 jh-ih s-t-er-d\", \"vbn vbd jj\"],\n  \"registrant\": [\"r-eh1 jh-ah-s t-r-ah-n-t\", \"nn\"],\n  \"registrar\": [\"r-eh1 jh-ih s-t-r-aa-r\", \"nn\"],\n  \"registration\": [\"r-eh jh-ih-s t-r-ey1 sh-ah-n\", \"nn\"],\n  \"registry\": [\"r-eh1 jh-ih-s t-r-iy\", \"nn\"],\n  \"regress\": [\"r-iy1 g-r-eh-s\", \"vb\"],\n  \"regression\": [\"r-ah g-r-eh1 sh-ah-n\", \"nn\"],\n  \"regressive\": [\"r-ah g-r-eh1 s-ih-v\", \"jj\"],\n  \"regret\": [\"r-ah g-r-eh1-t\", \"vbp nn vb\"],\n  \"regrettable\": [\"r-ih g-r-eh1 t-ah b-ah-l\", \"jj\"],\n  \"regrettably\": [\"r-ih g-r-eh1 t-ah b-l-iy\", \"rb\"],\n  \"regroup\": [\"r-iy g-r-uw1-p\", \"vb vbp\"],\n  \"regular\": [\"r-eh1 g-y-ah l-er\", \"jj\"],\n  \"regularity\": [\"r-eh g-y-ah l-eh1 r-ah t-iy\", \"nn\"],\n  \"regularly\": [\"r-eh1 g-y-ah l-er l-iy\", \"rb\"],\n  \"regulate\": [\"r-eh1 g-y-ah l-ey-t\", \"vb vbp\"],\n  \"regulated\": [\"r-eh1 g-y-ah l-ey t-ah-d\", \"vbn jj vbd\"],\n  \"regulation\": [\"r-eh g-y-ah l-ey1 sh-ah-n\", \"nn jj\"],\n  \"regulative\": [\"r-eh1 g-y-ah l-ey t-ih-v\", \"jj\"],\n  \"regulator\": [\"r-eh1 g-y-ah l-ey t-er\", \"nn\"],\n  \"regulatory\": [\"r-eh1 g-y-ah l-ah t-ao r-iy\", \"jj\"],\n  \"rehabilitate\": [\"r-iy-hh ah b-ih1 l-ah t-ey-t\", \"vb\"],\n  \"rehabilitation\": [\"r-iy-hh ah b-ih l-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"rehash\": [\"r-iy hh-ae1-sh\", \"nn vb vbp\"],\n  \"rehear\": [\"r-iy hh-ih1-r\", \"vb\"],\n  \"rehearing\": [\"r-iy hh-ih1 r-ih-ng\", \"nn\"],\n  \"rehearsal\": [\"r-ih hh-er1 s-ah-l\", \"nn\"],\n  \"rehearse\": [\"r-iy hh-er1-s\", \"vb\"],\n  \"reign\": [\"r-ey1-n\", \"nn vbp vb\"],\n  \"reignite\": [\"r-iy ih-g n-ay1-t\", \"vb nn\"],\n  \"reimburse\": [\"r-iy ih-m b-er1-s\", \"vb vbp\"],\n  \"reimbursement\": [\"r-iy ih-m b-er1-s m-ah-n-t\", \"nn\"],\n  \"reimpose\": [\"r-iy ih-m p-ow1-z\", \"vb jj\"],\n  \"rein\": [\"r-ey1-n\", \"vb nn\"],\n  \"reincarnate\": [\"r-iy-ih-n-k-aa1-r-n-ey-t\", \"vb\"],\n  \"reinforce\": [\"r-iy ih-n f-ao1-r-s\", \"vb vbp\"],\n  \"reinforced\": [\"r-iy ih-n f-ao1-r-s-t\", \"vbn vbd jj\"],\n  \"reinforcement\": [\"r-iy ih-n f-ao1-r-s m-ah-n-t\", \"nn\"],\n  \"reinstate\": [\"r-iy ih-n s-t-ey1-t\", \"vb\"],\n  \"reinstatement\": [\"r-iy ih-n s-t-ey1-t m-ah-n-t\", \"nn\"],\n  \"reinstitute\": [\"r-iy-ih1-n-s-t-ih-t-uw-t\", \"vb\"],\n  \"reinsurance\": [\"r-iy ih-n sh-uh1 r-ah-n-s\", \"nn\"],\n  \"reinsure\": [\"r-iy ih-n sh-uh1-r\", \"vb\"],\n  \"reintegrate\": [\"r-iy-ih1-n-t-ah-g-r-ey-t\", \"vb\"],\n  \"reinterpret\": [\"r-iy ih-n t-er1 p-r-ah-t\", \"vb\"],\n  \"reinterpretation\": [\"r-iy ih-n t-er p-r-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"reintroduce\": [\"r-iy ih-n t-r-ah d-uw1-s\", \"vbp vb\"],\n  \"reinvent\": [\"r-iy ih-n v-eh1-n-t\", \"vb\"],\n  \"reinvest\": [\"r-iy ih-n v-eh1-s-t\", \"vb vbp\"],\n  \"reinvestment\": [\"r-iy ih-n v-eh1-s-t m-ah-n-t\", \"nn\"],\n  \"reinvigorate\": [\"r-iy ih-n v-ih1 g-er ey-t\", \"vb\"],\n  \"reinvigoration\": [\"r-iy ih-n v-ih g-er ey1 sh-ah-n\", \"nn\"],\n  \"reissue\": [\"r-iy ih1 sh-uw\", \"nn\"],\n  \"reiterate\": [\"r-iy ih1 t-er ey-t\", \"vb vbp\"],\n  \"reiteration\": [\"r-iy ih t-er ey1 sh-ah-n\", \"nn\"],\n  \"reject\": [\"r-ih jh-eh1-k-t\", \"vb vbp\"],\n  \"rejection\": [\"r-ih jh-eh1-k sh-ah-n\", \"nn\"],\n  \"rejigger\": [\"r-iy jh-ih1 g-er\", \"vb\"],\n  \"rejoice\": [\"r-ih jh-oy1-s\", \"vbp vb\"],\n  \"rejoin\": [\"r-iy jh-oy1-n\", \"vb vbp\"],\n  \"rejoinder\": [\"r-ih jh-oy1-n d-er\", \"nn\"],\n  \"rejuvenate\": [\"r-ih jh-uw1 v-ah n-ey-t\", \"vb\"],\n  \"rejuvenated\": [\"r-ih jh-uw1 v-ah n-ey t-ih-d\", \"vbn jj\"],\n  \"rejuvenation\": [\"r-ih jh-uw v-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"rekindle\": [\"r-iy k-ih1-n d-ah-l\", \"vb\"],\n  \"relaid\": [\"r-iy l-ey1-d\", \"vbd\"],\n  \"relapse\": [\"r-iy l-ae1-p-s\", \"nn\"],\n  \"relate\": [\"r-ih l-ey1-t\", \"vbp vb\"],\n  \"related\": [\"r-ih l-ey1 t-ih-d\", \"vbn jj vbd\"],\n  \"relation\": [\"r-iy l-ey1 sh-ah-n\", \"nn\"],\n  \"relational\": [\"r-iy l-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"relationship\": [\"r-iy l-ey1 sh-ah-n sh-ih-p\", \"nn\"],\n  \"relative\": [\"r-eh1 l-ah t-ih-v\", \"jj nn\"],\n  \"relatively\": [\"r-eh1 l-ah t-ih-v l-iy\", \"rb\"],\n  \"relativism\": [\"r-eh1 l-ah t-ih v-ih z-ah-m\", \"nn\"],\n  \"relativistic\": [\"r-eh l-ah t-ih v-ih1 s-t-ih-k\", \"jj\"],\n  \"relativity\": [\"r-eh l-ah t-ih1 v-ah t-iy\", \"nn\"],\n  \"relaunch\": [\"r-iy l-ao1-n-ch\", \"vb\"],\n  \"relax\": [\"r-ih l-ae1-k-s\", \"vb vbp\"],\n  \"relaxation\": [\"r-iy l-ae-k s-ey1 sh-ah-n\", \"nn\"],\n  \"relaxed\": [\"r-ih l-ae1-k-s-t\", \"vbn jj vbd\"],\n  \"relaxing\": [\"r-ih l-ae1-k s-ih-ng\", \"vbg jj\"],\n  \"relay\": [\"r-iy1 l-ey\", \"vb nn vbp\"],\n  \"release\": [\"r-iy l-iy1-s\", \"nn vbp vb\"],\n  \"relegate\": [\"r-eh1-l-ah-g-ey-t\", \"vb\"],\n  \"relent\": [\"r-ih l-eh1-n-t\", \"vbp vb\"],\n  \"relentless\": [\"r-ih l-eh1-n-t l-ih-s\", \"jj\"],\n  \"relentlessly\": [\"r-ih l-eh1-n-t l-ah-s l-iy\", \"rb\"],\n  \"relevance\": [\"r-eh1 l-ah v-ah-n-s\", \"nn\"],\n  \"relevancy\": [\"r-eh1 l-ah v-ah-n s-iy\", \"nn\"],\n  \"relevant\": [\"r-eh1 l-ah v-ah-n-t\", \"jj\"],\n  \"reliability\": [\"r-iy l-ay ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"reliable\": [\"r-ih l-ay1 ah b-ah-l\", \"jj\"],\n  \"reliably\": [\"r-ih l-ay1 ah b-l-iy\", \"rb\"],\n  \"reliance\": [\"r-ih l-ay1 ah-n-s\", \"nn\"],\n  \"reliant\": [\"r-ih l-ay1 ah-n-t\", \"jj\"],\n  \"relic\": [\"r-eh1 l-ih-k\", \"nn\"],\n  \"relief\": [\"r-ih l-iy1-f\", \"nn\"],\n  \"relieve\": [\"r-ih l-iy1-v\", \"vb\"],\n  \"relieved\": [\"r-ih l-iy1-v-d\", \"vbn vbd jj\"],\n  \"reliever\": [\"r-iy l-iy1 v-er\", \"nn\"],\n  \"religion\": [\"r-ih l-ih1 jh-ah-n\", \"nn\"],\n  \"religious\": [\"r-ih l-ih1 jh-ah-s\", \"jj in nn\"],\n  \"religiously\": [\"r-ih l-ih1 jh-ah-s l-iy\", \"rb\"],\n  \"relinquish\": [\"r-ih l-ih1-ng k-w-ih-sh\", \"vb vbp\"],\n  \"relish\": [\"r-eh1 l-ih-sh\", \"nn vb\"],\n  \"relive\": [\"r-iy l-ih1-v\", \"vbp vb\"],\n  \"relocate\": [\"r-iy l-ow1 k-ey-t\", \"vb nn vbp\"],\n  \"relocation\": [\"r-iy l-ow1 k-ey1 sh-ah-n\", \"nn\"],\n  \"reluctance\": [\"r-ih l-ah1-k t-ah-n-s\", \"nn\"],\n  \"reluctant\": [\"r-ih l-ah1-k t-ah-n-t\", \"jj\"],\n  \"reluctantly\": [\"r-ih l-ah1-k t-ah-n-t l-iy\", \"rb\"],\n  \"rely\": [\"r-ih l-ay1\", \"vb vbp\"],\n  \"remade\": [\"r-iy m-ey1-d\", \"vbd vbn\"],\n  \"remain\": [\"r-ih m-ey1-n\", \"vb vbp\"],\n  \"remainder\": [\"r-ih m-ey1-n d-er\", \"nn\"],\n  \"remaining\": [\"r-ih m-ey1 n-ih-ng\", \"vbg jj\"],\n  \"remake\": [\"r-iy1 m-ey1-k\", \"vb\"],\n  \"remand\": [\"r-ih-m-ae1-n-d\", \"vb\"],\n  \"remark\": [\"r-ih m-aa1-r-k\", \"nn vb\"],\n  \"remarkable\": [\"r-ih m-aa1-r k-ah b-ah-l\", \"jj\"],\n  \"remarkably\": [\"r-ih m-aa1-r k-ah b-l-iy\", \"rb\"],\n  \"remarried\": [\"r-iy m-eh1 r-iy-d\", \"vbd vbn\"],\n  \"remarry\": [\"r-iy m-eh1 r-iy\", \"vb\"],\n  \"remarrying\": [\"r-iy m-eh1 r-iy ih-ng\", \"nn\"],\n  \"rematch\": [\"r-iy1 m-ae1-ch\", \"nn\"],\n  \"remedial\": [\"r-ih m-iy1 d-iy ah-l\", \"jj\"],\n  \"remediation\": [\"r-ih m-iy d-iy ey1 sh-ah-n\", \"nn\"],\n  \"remedied\": [\"r-eh1 m-ah d-iy-d\", \"vbn\"],\n  \"remedy\": [\"r-eh1 m-ah d-iy\", \"nn vb\"],\n  \"remember\": [\"r-ih m-eh1-m b-er\", \"vb vbp\"],\n  \"remembered\": [\"r-ih m-eh1-m b-er-d\", \"vbd jj vbn\"],\n  \"remembrance\": [\"r-iy m-eh1-m b-r-ah-n-s\", \"nn\"],\n  \"remind\": [\"r-iy m-ay1-n-d\", \"vb vbp\"],\n  \"reminder\": [\"r-iy m-ay1-n d-er\", \"nn\"],\n  \"reminisce\": [\"r-eh-m-ah-n-ih1-s\", \"vb\"],\n  \"reminiscence\": [\"r-eh m-ah n-ih1 s-ah-n-s\", \"nn\"],\n  \"reminiscent\": [\"r-eh m-ah n-ih1 s-ah-n-t\", \"jj nn\"],\n  \"remiss\": [\"r-iy m-ih1-s\", \"jj\"],\n  \"remission\": [\"r-iy m-ih1 sh-ah-n\", \"nn\"],\n  \"remit\": [\"r-iy-m-ih1-t\", \"vb\"],\n  \"remittance\": [\"r-iy m-ih1 t-ah-n s-ih\", \"nn\"],\n  \"remnant\": [\"r-eh1-m n-ah-n-t\", \"nn\"],\n  \"remodel\": [\"r-iy-m-aa1-d-ah-l\", \"vb\"],\n  \"remorse\": [\"r-ih m-ao1-r-s\", \"nn\"],\n  \"remorseless\": [\"r-ih m-ao1-r-s l-ah-s\", \"jj\"],\n  \"remote\": [\"r-ih m-ow1-t\", \"jj\"],\n  \"remotely\": [\"r-iy m-ow1-t l-iy\", \"rb\"],\n  \"remoteness\": [\"r-iy m-ow1-t n-ah-s\", \"nn\"],\n  \"remotest\": [\"r-ih m-ow1 t-ah-s-t\", \"jjs\"],\n  \"removable\": [\"r-ih m-uw1 v-ah b-ah-l\", \"jj\"],\n  \"removal\": [\"r-ih m-uw1 v-ah-l\", \"nn\"],\n  \"remove\": [\"r-iy m-uw1-v\", \"vb vbp\"],\n  \"removed\": [\"r-iy m-uw1-v-d\", \"vbn jj vbd\"],\n  \"remuneration\": [\"r-ih m-y-uw n-er ey1 sh-ah-n\", \"nn\"],\n  \"remunerative\": [\"r-iy m-y-uw1 n-er ah t-ih-v\", \"jj\"],\n  \"renaissance\": [\"r-eh n-ah s-aa1-n-s\", \"nn\"],\n  \"renal\": [\"r-iy1 n-ah-l\", \"jj\"],\n  \"rename\": [\"r-iy n-ey1-m\", \"vb\"],\n  \"renationalize\": [\"r-iy n-ae1 sh-ah-n ah l-ay-z\", \"vb\"],\n  \"render\": [\"r-eh1-n d-er\", \"vb vbp\"],\n  \"rendezvous\": [\"r-aa1-n d-ih v-uw\", \"nn\"],\n  \"rendition\": [\"r-eh-n d-ih1 sh-ah-n\", \"nn\"],\n  \"renegade\": [\"r-eh1 n-ah g-ey-d\", \"nn\"],\n  \"renege\": [\"r-ih n-ih1-g\", \"vb\"],\n  \"renegotiate\": [\"r-iy n-ih g-ow1 sh-iy ey-t\", \"vb\"],\n  \"renegotiation\": [\"r-iy n-ih g-ow sh-iy ey1 sh-ah-n\", \"nn\"],\n  \"renew\": [\"r-ih n-uw1\", \"vb vbp\"],\n  \"renewable\": [\"r-iy n-uw1 ah b-ah-l\", \"jj\"],\n  \"renewal\": [\"r-ih n-uw1 ah-l\", \"nn\"],\n  \"renewed\": [\"r-ih n-uw1-d\", \"vbn vbd jj\"],\n  \"renounce\": [\"r-ih n-aw1-n-s\", \"vb\"],\n  \"renovate\": [\"r-eh1 n-ah v-ey-t\", \"vb\"],\n  \"renovated\": [\"r-eh1 n-ah v-ey t-ih-d\", \"vbn jj\"],\n  \"renovation\": [\"r-eh n-ah v-ey1 sh-ah-n\", \"nn\"],\n  \"renown\": [\"r-ih n-aw1-n\", \"nn vb\"],\n  \"renowned\": [\"r-ih n-aw1-n-d\", \"jj vbn\"],\n  \"rent\": [\"r-eh1-n-t\", \"nn vb vbp\"],\n  \"rental\": [\"r-eh1-n t-ah-l\", \"jj nn\"],\n  \"rented\": [\"r-eh1-n t-ah-d\", \"vbn jj vbd\"],\n  \"renter\": [\"r-eh1-n t-er\", \"nn\"],\n  \"renunciation\": [\"r-ih n-ah-n s-iy ey1 sh-ah-n\", \"nn\"],\n  \"reoffer\": [\"r-iy-ao1-f-er\", \"vb\"],\n  \"reoffered\": [\"r-iy ao1 f-er-d\", \"vbn jj vbd\"],\n  \"reopen\": [\"r-iy ow1 p-ah-n\", \"vb vbp\"],\n  \"reopened\": [\"r-iy ow1 p-ah-n-d\", \"vbd vbn\"],\n  \"reorder\": [\"r-iy ao1-r d-er\", \"vb\"],\n  \"reordering\": [\"r-iy ao1-r d-er ih-ng\", \"nn vbg\"],\n  \"reorganization\": [\"r-iy ao-r g-ah n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"reorganize\": [\"r-iy ao1-r g-ah n-ay-z\", \"vb\"],\n  \"reorganized\": [\"r-iy ao1-r g-ah n-ay-z-d\", \"vbn jj vbd\"],\n  \"reorient\": [\"r-iy ao1 r-iy eh-n-t\", \"vb\"],\n  \"rep\": [\"r-eh1-p\", \"nn\"],\n  \"repackage\": [\"r-iy p-ae1 k-ih-jh\", \"vb\"],\n  \"repaid\": [\"r-iy p-ey1-d\", \"vbn vbd\"],\n  \"repaint\": [\"r-iy-p-ey1-n-t\", \"vb\"],\n  \"repainted\": [\"r-iy p-ey1-n t-ah-d\", \"vbn jj\"],\n  \"repair\": [\"r-ih p-eh1-r\", \"nn vb vbp\"],\n  \"repairman\": [\"r-ih p-eh1-r m-ae-n\", \"nn\"],\n  \"reparation\": [\"r-eh p-er ey1 sh-ah-n\", \"nn\"],\n  \"repartee\": [\"r-eh p-er t-iy1\", \"nn\"],\n  \"repatriate\": [\"r-iy p-ey1 t-r-iy ey-t\", \"vb vbp\"],\n  \"repatriation\": [\"r-iy p-ey t-r-iy ey1 sh-ah-n\", \"nn\"],\n  \"repay\": [\"r-iy p-ey1\", \"vb vbp\"],\n  \"repayable\": [\"r-iy p-ey1 ah b-ah-l\", \"jj\"],\n  \"repayment\": [\"r-iy p-ey1 m-ah-n-t\", \"nn\"],\n  \"repeal\": [\"r-ih p-iy1-l\", \"nn vb\"],\n  \"repeat\": [\"r-ih p-iy1-t\", \"vb jj nn vbp\"],\n  \"repeated\": [\"r-ih p-iy1 t-ih-d\", \"vbn jj vbd\"],\n  \"repeatedly\": [\"r-ih p-iy1 t-ih-d l-iy\", \"rb\"],\n  \"repeater\": [\"r-ih p-iy1 t-er\", \"nn\"],\n  \"repeating\": [\"r-ih p-iy1 t-ih-ng\", \"vbg jj\"],\n  \"repel\": [\"r-ih p-eh1-l\", \"vb vbp\"],\n  \"repellent\": [\"r-ih p-eh1 l-ah-n-t\", \"jj nn\"],\n  \"repent\": [\"r-ih p-eh1-n-t\", \"vb vbp\"],\n  \"repentance\": [\"r-ih p-eh1-n t-ah-n-s\", \"nn\"],\n  \"repercussion\": [\"r-iy p-er k-ah1 sh-ah-n\", \"nn\"],\n  \"repertoire\": [\"r-eh1 p-er t-w-aa-r\", \"nn\"],\n  \"repertory\": [\"r-eh1 p-er t-ao r-iy\", \"nn\"],\n  \"repetition\": [\"r-eh p-ah t-ih1 sh-ah-n\", \"nn\"],\n  \"repetitious\": [\"r-eh p-ah t-ih1 sh-ah-s\", \"jj\"],\n  \"repetitive\": [\"r-ih p-eh1 t-ih t-ih-v\", \"jj\"],\n  \"rephrase\": [\"r-iy f-r-ey1-z\", \"vb\"],\n  \"replace\": [\"r-iy p-l-ey1-s\", \"vb vbp\"],\n  \"replacement\": [\"r-ih p-l-ey1-s m-ah-n-t\", \"nn jj\"],\n  \"replant\": [\"r-iy-p-l-ae1-n-t\", \"vb\"],\n  \"replay\": [\"r-iy p-l-ey1\", \"nn vb\"],\n  \"replenish\": [\"r-iy p-l-eh1 n-ih-sh\", \"vb\"],\n  \"replenishment\": [\"r-ih p-l-eh1 n-ih-sh m-ah-n-t\", \"nn\"],\n  \"replete\": [\"r-iy p-l-iy1-t\", \"jj\"],\n  \"replica\": [\"r-eh1 p-l-ih k-ah\", \"nn\"],\n  \"replicate\": [\"r-eh1 p-l-ah k-ey-t\", \"vb\"],\n  \"replication\": [\"r-eh p-l-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"replied\": [\"r-ih p-l-ay1-d\", \"vbd vbn\"],\n  \"reply\": [\"r-ih p-l-ay1\", \"nn vb vbp\"],\n  \"report\": [\"r-iy p-ao1-r-t\", \"nn vbp vb\"],\n  \"reportage\": [\"r-ih p-ao1-r t-ih-jh\", \"nn\"],\n  \"reported\": [\"r-iy p-ao1-r t-ah-d\", \"vbd jj vbn\"],\n  \"reportedly\": [\"r-ih p-ao1-r t-ah-d l-iy\", \"rb\"],\n  \"reporter\": [\"r-ih p-ao1-r t-er\", \"nn\"],\n  \"reportorial\": [\"r-eh p-er t-ao1 r-iy ah-l\", \"jj\"],\n  \"repose\": [\"r-iy p-ow1-z\", \"nn\"],\n  \"reposition\": [\"r-iy p-ah z-ih1 sh-ah-n\", \"vb\"],\n  \"repositioning\": [\"r-iy p-ah z-ih1 sh-ah-n ih-ng\", \"nn vbg\"],\n  \"repository\": [\"r-iy p-aa1 z-ah t-ao r-iy\", \"nn\"],\n  \"repossess\": [\"r-iy p-ah z-eh1-s\", \"vb\"],\n  \"repossessed\": [\"r-iy p-ah z-eh1-s-t\", \"jj vbn\"],\n  \"reprehensible\": [\"r-eh p-r-ih hh-eh1-n s-ah b-ah-l\", \"jj\"],\n  \"represent\": [\"r-eh p-r-ah z-eh1-n-t\", \"vb vbp\"],\n  \"representation\": [\"r-eh p-r-ah z-eh-n t-ey1 sh-ah-n\", \"nn\"],\n  \"representational\": [\"r-eh p-r-ah z-ah-n t-ey1 sh-ah n-ah-l\", \"jj nn\"],\n  \"representative\": [\"r-eh p-r-ah z-eh1-n t-ah t-ih-v\", \"nn jj\"],\n  \"repress\": [\"r-iy p-r-eh1-s\", \"vb\"],\n  \"repressed\": [\"r-iy p-r-eh1-s-t\", \"vbn jj\"],\n  \"repression\": [\"r-iy p-r-eh1 sh-ah-n\", \"nn\"],\n  \"repressive\": [\"r-iy p-r-eh1 s-ih-v\", \"jj\"],\n  \"reprice\": [\"r-iy p-r-ay1-s\", \"vb\"],\n  \"repricing\": [\"r-iy p-r-ay1 s-ih-ng\", \"nn\"],\n  \"reprieve\": [\"r-iy p-r-iy1-v\", \"nn\"],\n  \"reprimand\": [\"r-eh1-p-r-ah-m-ae-n-d\", \"vb\"],\n  \"reprint\": [\"r-iy p-r-ih1-n-t\", \"vb\"],\n  \"reprisal\": [\"r-iy p-r-ay1 z-ah-l\", \"nn\"],\n  \"reproach\": [\"r-iy p-r-ow1-ch\", \"nn\"],\n  \"reprocess\": [\"r-iy p-r-ao1 s-eh-s\", \"vb\"],\n  \"reproduce\": [\"r-iy p-r-ah d-uw1-s\", \"vb\"],\n  \"reproduction\": [\"r-iy p-r-ah d-ah1-k sh-ah-n\", \"nn\"],\n  \"reproductive\": [\"r-iy p-r-ah d-ah1-k t-ih-v\", \"jj\"],\n  \"reptile\": [\"r-eh1-p t-ay-l\", \"nn\"],\n  \"republic\": [\"r-iy p-ah1 b-l-ah-k\", \"nn\"],\n  \"republican\": [\"r-ih p-ah1 b-l-ih k-ah-n\", \"jj\"],\n  \"repudiate\": [\"r-iy p-y-uw1 d-iy ey-t\", \"vb\"],\n  \"repudiation\": [\"r-ih p-y-uw d-iy ey1 sh-ah-n\", \"nn\"],\n  \"repugnant\": [\"r-ih p-ah1-g n-ah-n-t\", \"jj\"],\n  \"repulse\": [\"r-iy-p-ah1-l-s\", \"vb\"],\n  \"repulsive\": [\"r-iy p-ah1-l s-ih-v\", \"jj\"],\n  \"repurchase\": [\"r-iy p-er1 ch-ah-s\", \"nn jj vb\"],\n  \"reputable\": [\"r-eh1 p-y-ah t-ah b-ah-l\", \"jj\"],\n  \"reputation\": [\"r-eh p-y-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"repute\": [\"r-iy p-y-uw1-t\", \"nn vb\"],\n  \"reputed\": [\"r-ih p-y-uw1 t-ih-d\", \"vbn jj\"],\n  \"reputedly\": [\"r-ih p-y-uw1 t-ih-d l-iy\", \"rb\"],\n  \"requalify\": [\"r-iy k-w-aa1 l-ah f-ay\", \"vb\"],\n  \"request\": [\"r-ih k-w-eh1-s-t\", \"nn vb vbp\"],\n  \"require\": [\"r-iy k-w-ay1 er\", \"vb vbp\"],\n  \"required\": [\"r-iy k-w-ay1 er-d\", \"vbn vbd jj\"],\n  \"requirement\": [\"r-ih k-w-ay1-r m-ah-n-t\", \"nn\"],\n  \"requisite\": [\"r-eh1 k-w-ah z-ah-t\", \"jj\"],\n  \"requisition\": [\"r-eh-k-w-ah-z-ih1-sh-ah-n\", \"vb\"],\n  \"reread\": [\"r-iy1 r-iy1-d\", \"vb vbd vbn\"],\n  \"reroute\": [\"r-iy-r-uw1-t\", \"vb\"],\n  \"rerun\": [\"r-iy1 r-ah1-n\", \"nn\"],\n  \"resale\": [\"r-iy1 s-ey-l\", \"nn\"],\n  \"reschedule\": [\"r-iy s-k-eh1 jh-uw-l\", \"vb\"],\n  \"rescind\": [\"r-ih s-ih1-n-d\", \"vb\"],\n  \"rescission\": [\"r-ih s-ih1 zh-ah-n\", \"nn\"],\n  \"rescue\": [\"r-eh1 s-k-y-uw\", \"nn vb\"],\n  \"rescuer\": [\"r-eh1 s-k-y-uw er\", \"nn\"],\n  \"reseacher\": [\"r-iy s-er1 ch-er\", \"nn\"],\n  \"research\": [\"r-iy s-er1-ch\", \"nn vb vbp\"],\n  \"researcher\": [\"r-iy1 s-er ch-er\", \"nn\"],\n  \"resell\": [\"r-iy s-eh1-l\", \"vb vbp jj\"],\n  \"reseller\": [\"r-iy s-eh1 l-er\", \"jj nn\"],\n  \"resemblance\": [\"r-ih z-eh1-m b-l-ah-n-s\", \"nn\"],\n  \"resemble\": [\"r-ih z-eh1-m b-ah-l\", \"vb vbp\"],\n  \"resent\": [\"r-ih z-eh1-n-t\", \"vbp vb\"],\n  \"resentful\": [\"r-ih z-eh1-n-t f-ah-l\", \"jj\"],\n  \"resentment\": [\"r-ih z-eh1-n-t m-ah-n-t\", \"nn\"],\n  \"reservation\": [\"r-eh z-er v-ey1 sh-ah-n\", \"nn\"],\n  \"reserve\": [\"r-ih z-er1-v\", \"nn jj vb vbp\"],\n  \"reserved\": [\"r-ih z-er1-v-d\", \"vbn vbd jj\"],\n  \"reservist\": [\"r-ih z-er1 v-ih-s-t\", \"nn\"],\n  \"reservoir\": [\"r-eh1 z-ah v-w-aa-r\", \"nn\"],\n  \"reset\": [\"r-iy s-eh1-t\", \"nn vbn jj vb\"],\n  \"resettable\": [\"r-iy s-eh1 t-ah b-ah-l\", \"jj\"],\n  \"resettle\": [\"r-iy s-eh1 t-ah-l\", \"vb\"],\n  \"resettlement\": [\"r-iy s-eh1 t-ah-l m-ah-n-t\", \"nn\"],\n  \"reshape\": [\"r-iy sh-ey1-p\", \"vb\"],\n  \"reshuffle\": [\"r-iy sh-ah1 f-ah-l\", \"nn vb\"],\n  \"reside\": [\"r-ih z-ay1-d\", \"vbp vb\"],\n  \"residence\": [\"r-eh1 z-ih d-ah-n-s\", \"nn\"],\n  \"residency\": [\"r-eh1 z-ih d-ah-n s-iy\", \"nn\"],\n  \"resident\": [\"r-eh1 z-ih d-ah-n-t\", \"nn jj\"],\n  \"residential\": [\"r-eh z-ih d-eh1-n ch-ah-l\", \"jj\"],\n  \"residual\": [\"r-ih z-ih1 jh-uw ah-l\", \"jj nn\"],\n  \"residue\": [\"r-eh1 z-ah d-uw\", \"nn\"],\n  \"resign\": [\"r-ih z-ay1-n\", \"vb vbp\"],\n  \"resignation\": [\"r-eh z-ah-g n-ey1 sh-ah-n\", \"nn\"],\n  \"resigned\": [\"r-ih z-ay1-n-d\", \"vbd vbn jj\"],\n  \"resilience\": [\"r-ih z-ih1 l-iy ah-n-s\", \"nn\"],\n  \"resiliency\": [\"r-ih z-ih1 l-y-ah-n s-iy\", \"nn\"],\n  \"resilient\": [\"r-ih z-ih1 l-y-ah-n-t\", \"jj\"],\n  \"resin\": [\"r-eh1 z-ah-n\", \"nn\"],\n  \"resist\": [\"r-ih z-ih1-s-t\", \"vb vbp\"],\n  \"resistance\": [\"r-ih z-ih1 s-t-ah-n-s\", \"nn\"],\n  \"resistant\": [\"r-ih z-ih1 s-t-ah-n-t\", \"jj nn\"],\n  \"resistor\": [\"r-ih z-ih1 s-t-er\", \"nn\"],\n  \"resold\": [\"r-iy s-ow1-l-d\", \"vbd vbn\"],\n  \"resolute\": [\"r-eh1 z-ah l-uw-t\", \"jj\"],\n  \"resolutely\": [\"r-eh1 s-ah l-uw-t l-iy\", \"rb\"],\n  \"resolution\": [\"r-eh z-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"resolve\": [\"r-iy z-aa1-l-v\", \"vb nn\"],\n  \"resonance\": [\"r-eh1 z-ah n-ah-n-s\", \"nn\"],\n  \"resonant\": [\"r-eh1 z-ah n-ah-n-t\", \"jj\"],\n  \"resonate\": [\"r-eh1 z-ah n-ey-t\", \"vb\"],\n  \"resort\": [\"r-ih z-ao1-r-t\", \"nn vbp vb\"],\n  \"resounding\": [\"r-iy s-aw1-n d-ih-ng\", \"jj\"],\n  \"resource\": [\"r-iy1 s-ao-r-s\", \"nn\"],\n  \"resourceful\": [\"r-iy s-ao1-r-s f-ah-l\", \"jj\"],\n  \"resourcefulness\": [\"r-iy s-ao1-r-s f-ah-l n-ah-s\", \"nn\"],\n  \"respect\": [\"r-ih s-p-eh1-k-t\", \"nn vbp vb\"],\n  \"respectability\": [\"r-iy s-p-eh-k t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"respectable\": [\"r-ih s-p-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"respected\": [\"r-ih s-p-eh1-k t-ih-d\", \"vbn jj vbd\"],\n  \"respectful\": [\"r-ih s-p-eh1-k-t f-ah-l\", \"jj\"],\n  \"respectfully\": [\"r-ih s-p-eh1-k-t f-ah l-iy\", \"rb\"],\n  \"respective\": [\"r-ih s-p-eh1-k t-ih-v\", \"jj\"],\n  \"respectively\": [\"r-ih s-p-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"respiration\": [\"r-eh s-p-er ey1 sh-ah-n\", \"nn\"],\n  \"respirator\": [\"r-eh1 s-p-er ey t-er\", \"nn\"],\n  \"respiratory\": [\"r-eh1 s-p-er ah t-ao r-iy\", \"jj\"],\n  \"respite\": [\"r-eh1 s-p-ih-t\", \"nn\"],\n  \"resplendent\": [\"r-iy s-p-l-eh1-n d-ah-n-t\", \"jj\"],\n  \"respond\": [\"r-ih s-p-aa1-n-d\", \"vb nn vbp\"],\n  \"respondent\": [\"r-ih s-p-aa1-n d-ah-n-t\", \"nn\"],\n  \"response\": [\"r-ih s-p-aa1-n-s\", \"nn\"],\n  \"responsibility\": [\"r-iy s-p-aa-n s-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"responsible\": [\"r-iy s-p-aa1-n s-ah b-ah-l\", \"jj\"],\n  \"responsibly\": [\"r-ih s-p-aa1-n s-ah b-l-iy\", \"rb\"],\n  \"responsive\": [\"r-ih s-p-aa1-n s-ih-v\", \"jj\"],\n  \"responsiveness\": [\"r-ih s-p-aa1-n s-ih-v n-ah-s\", \"nn\"],\n  \"rest\": [\"r-eh1-s-t\", \"nn vbp vb rb\"],\n  \"restage\": [\"r-iy-s-t-ey1-jh\", \"vb\"],\n  \"restart\": [\"r-iy s-t-aa1-r-t\", \"vb\"],\n  \"restate\": [\"r-iy s-t-ey1-t\", \"vb\"],\n  \"restated\": [\"r-iy s-t-ey1 t-ih-d\", \"vbn vbd jj\"],\n  \"restatement\": [\"r-iy s-t-ey1-t m-ah-n-t\", \"nn\"],\n  \"restaurant\": [\"r-eh1 s-t-er aa-n-t\", \"nn\"],\n  \"restaurateur\": [\"r-eh s-t-er ah t-er1\", \"nn\"],\n  \"restful\": [\"r-eh1-s-t f-ah-l\", \"jj\"],\n  \"restitution\": [\"r-eh s-t-ih t-uw1 sh-ah-n\", \"nn\"],\n  \"restive\": [\"r-eh1 s-t-ih-v\", \"jj\"],\n  \"restless\": [\"r-eh1-s-t l-ah-s\", \"jj\"],\n  \"restlessly\": [\"r-eh1-s-t l-ah-s l-iy\", \"rb\"],\n  \"restlessness\": [\"r-eh1-s-t l-ah-s n-ah-s\", \"nn\"],\n  \"restock\": [\"r-iy s-t-aa1-k\", \"vb\"],\n  \"restoration\": [\"r-eh s-t-er ey1 sh-ah-n\", \"nn\"],\n  \"restore\": [\"r-ih s-t-ao1-r\", \"vb vbp\"],\n  \"restorer\": [\"r-ih s-t-ao1 r-er\", \"nn\"],\n  \"restrain\": [\"r-iy s-t-r-ey1-n\", \"vb\"],\n  \"restrained\": [\"r-iy s-t-r-ey1-n-d\", \"vbn vbd jj\"],\n  \"restraining\": [\"r-iy s-t-r-ey1 n-ih-ng\", \"vbg jj\"],\n  \"restraint\": [\"r-ih s-t-r-ey1-n-t\", \"nn\"],\n  \"restrict\": [\"r-iy s-t-r-ih1-k-t\", \"vb vbp\"],\n  \"restricted\": [\"r-iy s-t-r-ih1-k t-ah-d\", \"vbn jj vbd\"],\n  \"restricting\": [\"r-iy s-t-r-ih1-k t-ih-ng\", \"vbg jj\"],\n  \"restriction\": [\"r-iy-s t-r-ih1-k sh-ah-n\", \"nn\"],\n  \"restrictive\": [\"r-iy s-t-r-ih1-k t-ih-v\", \"jj\"],\n  \"restroom\": [\"r-eh1-s-t r-uw-m\", \"nn\"],\n  \"restructure\": [\"r-iy s-t-r-ah1-k ch-er\", \"vb vbp nn\"],\n  \"restructured\": [\"r-iy s-t-r-ah1-k ch-er-d\", \"vbn vbd jj\"],\n  \"restructuring\": [\"r-iy s-t-r-ah1-k ch-er ih-ng\", \"vbg nn\"],\n  \"resubmit\": [\"r-iy s-ah-b m-ih1-t\", \"vb\"],\n  \"result\": [\"r-ih z-ah1-l-t\", \"nn vbp vb\"],\n  \"resultant\": [\"r-iy z-ah1-l t-ah-n-t\", \"jj nn\"],\n  \"resulting\": [\"r-ih z-ah1-l t-ih-ng\", \"vbg jj\"],\n  \"resume\": [\"r-ih z-uw1-m\", \"vb nn vbp\"],\n  \"resumption\": [\"r-ih z-ah1-m-p sh-ah-n\", \"nn\"],\n  \"resurface\": [\"r-iy-s-er1-f-ah-s\", \"vb\"],\n  \"resurge\": [\"r-iy s-er1-jh\", \"vb\"],\n  \"resurgence\": [\"r-iy s-er1 jh-ah-n-s\", \"nn\"],\n  \"resurgent\": [\"r-ih s-er1 jh-ah-n-t\", \"jj\"],\n  \"resurrect\": [\"r-eh z-er eh1-k-t\", \"vb vbp\"],\n  \"resurrection\": [\"r-eh z-er eh1-k sh-ah-n\", \"nn\"],\n  \"resuscitate\": [\"r-ih s-ah1 s-ih t-ey-t\", \"vb\"],\n  \"resuscitation\": [\"r-ih s-ah s-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"retail\": [\"r-iy1 t-ey-l\", \"jj nn vb vbp\"],\n  \"retailer\": [\"r-iy1 t-ey l-er\", \"nn\"],\n  \"retain\": [\"r-ih t-ey1-n\", \"vb vbp\"],\n  \"retained\": [\"r-ih t-ey1-n-d\", \"vbn jj vbd\"],\n  \"retainer\": [\"r-ih t-ey1 n-er\", \"nn\"],\n  \"retake\": [\"r-iy1 t-ey1-k\", \"vb\"],\n  \"retaliate\": [\"r-ih t-ae1 l-iy ey-t\", \"vb\"],\n  \"retaliation\": [\"r-iy t-ae l-iy ey1 sh-ah-n\", \"nn\"],\n  \"retaliatory\": [\"r-iy t-ae1 l-y-ah t-ao r-iy\", \"jj\"],\n  \"retard\": [\"r-ih t-aa1-r-d\", \"vb vbp\"],\n  \"retardant\": [\"r-iy t-aa1-r d-ah-n-t\", \"nn\"],\n  \"retardation\": [\"r-iy t-aa-r d-ey1 sh-ah-n\", \"nn\"],\n  \"retarded\": [\"r-ih t-aa1-r d-ih-d\", \"jj\"],\n  \"retelling\": [\"r-iy t-eh1 l-ih-ng\", \"nn\"],\n  \"retention\": [\"r-iy t-eh1-n sh-ah-n\", \"nn\"],\n  \"rethink\": [\"r-iy th-ih1-ng-k\", \"vb nn\"],\n  \"reticence\": [\"r-eh1 t-ih s-ah-n-s\", \"nn\"],\n  \"reticent\": [\"r-eh1 t-ih s-ah-n-t\", \"jj\"],\n  \"retina\": [\"r-eh1 t-ah n-ah\", \"nn\"],\n  \"retinal\": [\"r-eh1 t-ah n-ah-l\", \"jj\"],\n  \"retinue\": [\"r-eh1 t-ah n-uw\", \"nn\"],\n  \"retire\": [\"r-ih t-ay1-r\", \"vb vbp\"],\n  \"retired\": [\"r-ih t-ay1-r-d\", \"vbn jj vbd\"],\n  \"retiree\": [\"r-iy t-ay1 r-iy1\", \"nn\"],\n  \"retirement\": [\"r-iy t-ay1 er m-ah-n-t\", \"nn\"],\n  \"retiring\": [\"r-ih t-ay1 r-ih-ng\", \"vbg jj\"],\n  \"retool\": [\"r-iy-t-uw1-l\", \"vb\"],\n  \"retort\": [\"r-iy1 t-ao-r-t\", \"nn vb vbp\"],\n  \"retouching\": [\"r-iy t-ah1 ch-ih-ng\", \"nn\"],\n  \"retrace\": [\"r-iy t-r-ey1-s\", \"vb\"],\n  \"retract\": [\"r-iy t-r-ae1-k-t\", \"vb\"],\n  \"retractable\": [\"r-iy t-r-ae1-k t-ah b-ah-l\", \"jj\"],\n  \"retracted\": [\"r-iy t-r-ae1-k t-ah-d\", \"vbn vbd jj\"],\n  \"retraction\": [\"r-iy t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"retrain\": [\"r-iy t-r-ey1-n\", \"vb\"],\n  \"retread\": [\"r-iy t-r-eh1-d\", \"nn\"],\n  \"retreat\": [\"r-iy t-r-iy1-t\", \"nn vb\"],\n  \"retrench\": [\"r-iy-t-r-eh1-n-ch\", \"vb\"],\n  \"retrenchment\": [\"r-iy t-r-eh1-n-ch m-ah-n-t\", \"nn\"],\n  \"retrial\": [\"r-iy t-r-ay1 ah-l\", \"nn\"],\n  \"retribution\": [\"r-eh t-r-ah b-y-uw1 sh-ah-n\", \"nn\"],\n  \"retried\": [\"r-iy t-r-ay1-d\", \"vbn\"],\n  \"retrieval\": [\"r-ih t-r-iy1 v-ah-l\", \"nn\"],\n  \"retrieve\": [\"r-ih t-r-iy1-v\", \"vb vbp\"],\n  \"retriever\": [\"r-iy t-r-iy1 v-er\", \"nn\"],\n  \"retro\": [\"r-eh1 t-r-ow\", \"jj\"],\n  \"retroactive\": [\"r-eh t-r-ow ae1-k t-ih-v\", \"jj\"],\n  \"retroactively\": [\"r-eh t-r-ow ae1-k t-ih-v l-iy\", \"rb\"],\n  \"retroactivity\": [\"r-eh t-r-ow ae-k t-ih1 v-ih t-iy\", \"nn\"],\n  \"retrofit\": [\"r-eh1 t-r-ow f-ih-t\", \"vb\"],\n  \"retrofitting\": [\"r-eh1 t-r-ow f-ih t-ih-ng\", \"nn\"],\n  \"retrograde\": [\"r-eh1 t-r-ah g-r-ey-d\", \"jj\"],\n  \"retrospect\": [\"r-eh1 t-r-ah s-p-eh-k-t\", \"nn\"],\n  \"retrospective\": [\"r-eh t-r-ah s-p-eh1-k t-ih-v\", \"nn jj\"],\n  \"retrovirus\": [\"r-eh t-r-ow v-ay1 r-ah-s\", \"nn\"],\n  \"retry\": [\"r-iy t-r-ay1\", \"vb\"],\n  \"return\": [\"r-ih t-er1-n\", \"nn vbp jj vb\"],\n  \"reunification\": [\"r-iy uw n-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"reunion\": [\"r-iy uw1 n-y-ah-n\", \"nn\"],\n  \"reunite\": [\"r-iy uw n-ay1-t\", \"vb\"],\n  \"reusable\": [\"r-iy uw1 z-ah b-ah-l\", \"jj\"],\n  \"reuse\": [\"r-iy y-uw1-s\", \"vb\"],\n  \"rev\": [\"r-eh1-v\", \"vb\"],\n  \"revaluation\": [\"r-iy v-ae1-l y-uw ey1 sh-ah-n\", \"nn\"],\n  \"revalue\": [\"r-iy-v-ae1-l-y-uw\", \"vb\"],\n  \"revaluing\": [\"r-iy v-ae1-l y-uw ih-ng\", \"nn\"],\n  \"revamp\": [\"r-iy v-ae1-m-p\", \"vb nn\"],\n  \"revamped\": [\"r-iy v-ae1-m-p-t\", \"vbn vbd jj\"],\n  \"reveal\": [\"r-ih v-iy1-l\", \"vb vbp\"],\n  \"revealed\": [\"r-ih v-iy1-l-d\", \"vbd jj vbn\"],\n  \"revealing\": [\"r-ih v-iy1 l-ih-ng\", \"vbg jj\"],\n  \"revel\": [\"r-eh1 v-ah-l\", \"vb nn vbp\"],\n  \"revelation\": [\"r-eh v-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"revelatory\": [\"r-ih v-eh1 l-ah t-ao r-iy\", \"jj\"],\n  \"reveler\": [\"r-eh1 v-ah l-er\", \"nn\"],\n  \"revelry\": [\"r-eh1 v-ah-l r-iy\", \"nn\"],\n  \"revenge\": [\"r-iy v-eh1-n-jh\", \"nn\"],\n  \"revenue\": [\"r-eh1 v-ah n-uw\", \"nn\"],\n  \"reverberate\": [\"r-ih v-er1 b-er ah-t\", \"vb\"],\n  \"reverberation\": [\"r-iy v-er b-er ey1 sh-ah-n\", \"nn\"],\n  \"revere\": [\"r-ih-v-ih1-r\", \"vb\"],\n  \"revered\": [\"r-ih v-ih1-r-d\", \"vbn jj\"],\n  \"reverence\": [\"r-eh1 v-er ah-n-s\", \"nn\"],\n  \"reverent\": [\"r-eh1 v-er ah-n-t\", \"jj\"],\n  \"reverential\": [\"r-eh v-er eh1-n ch-ah-l\", \"jj\"],\n  \"reverie\": [\"r-eh1 v-er iy\", \"nn\"],\n  \"reversal\": [\"r-ih v-er1 s-ah-l\", \"nn\"],\n  \"reverse\": [\"r-ih v-er1-s\", \"vb jj nn rb vbp\"],\n  \"reversed\": [\"r-ih v-er1-s-t\", \"vbd jj vbn\"],\n  \"reversible\": [\"r-ih v-er1 s-ah b-ah-l\", \"jj\"],\n  \"revert\": [\"r-ih v-er1-t\", \"vb vbp\"],\n  \"review\": [\"r-iy v-y-uw1\", \"nn vb vbp\"],\n  \"reviewer\": [\"r-iy v-y-uw1 er\", \"nn\"],\n  \"revile\": [\"r-iy-v-ay1-l\", \"vb\"],\n  \"reviled\": [\"r-iy v-ay1-l-d\", \"vbn jj\"],\n  \"revise\": [\"r-ih v-ay1-z\", \"vb\"],\n  \"revised\": [\"r-ih v-ay1-z-d\", \"vbn vbd jj\"],\n  \"revision\": [\"r-iy v-ih1 zh-ah-n\", \"nn\"],\n  \"revisionist\": [\"r-iy v-ih1 zh-ah-n ih-s-t\", \"jj\"],\n  \"revisit\": [\"r-iy v-ih1 z-ih-t\", \"vb nn\"],\n  \"revitalization\": [\"r-iy v-ay t-ah l-ah z-ey1 sh-ah-n\", \"nn jj\"],\n  \"revitalize\": [\"r-iy v-ay1 t-ah l-ay-z\", \"vb\"],\n  \"revival\": [\"r-ih v-ay1 v-ah-l\", \"nn\"],\n  \"revive\": [\"r-ih v-ay1-v\", \"vb vbp\"],\n  \"reviving\": [\"r-ih v-ay1 v-ih-ng\", \"vbg jj\"],\n  \"revocable\": [\"r-eh1 v-ah k-ah b-ah-l\", \"jj\"],\n  \"revocation\": [\"r-eh v-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"revoke\": [\"r-ih v-ow1-k\", \"vb\"],\n  \"revolt\": [\"r-ih v-ow1-l-t\", \"nn vb\"],\n  \"revolting\": [\"r-iy v-ow1-l t-ih-ng\", \"jj\"],\n  \"revolution\": [\"r-eh v-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"revolutionary\": [\"r-eh v-ah l-uw1 sh-ah-n eh r-iy\", \"jj nn\"],\n  \"revolutionist\": [\"r-eh v-ah l-uw1 sh-ah-n ih-s-t\", \"nn\"],\n  \"revolutionize\": [\"r-eh v-ah l-uw1 sh-ah-n ay-z\", \"vb\"],\n  \"revolve\": [\"r-iy v-aa1-l-v\", \"vb vbp\"],\n  \"revolver\": [\"r-ih v-aa1-l v-er\", \"nn\"],\n  \"revolving\": [\"r-iy v-aa1-l v-ih-ng\", \"vbg jj\"],\n  \"revulsion\": [\"r-ih v-ah1-l sh-ah-n\", \"nn\"],\n  \"reward\": [\"r-ih w-ao1-r-d\", \"nn vb vbp\"],\n  \"rewarding\": [\"r-ih w-ao1-r d-ih-ng\", \"jj vbg\"],\n  \"rework\": [\"r-iy-w-er1-k\", \"vb\"],\n  \"reworking\": [\"r-iy w-er1 k-ih-ng\", \"nn\"],\n  \"rewrite\": [\"r-iy r-ay1-t\", \"vb nn\"],\n  \"rewritten\": [\"r-iy r-ih1 t-ah-n\", \"vbn\"],\n  \"rewrote\": [\"r-iy r-ow1-t\", \"vbd\"],\n  \"rhapsodic\": [\"r-ae-p s-aa1 d-ih-k\", \"jj\"],\n  \"rhapsody\": [\"r-ae1-p s-ah d-iy\", \"nn\"],\n  \"rhetoric\": [\"r-eh1 t-er ih-k\", \"nn\"],\n  \"rhetorical\": [\"r-ih t-ao1 r-ih k-ah-l\", \"jj\"],\n  \"rhetorician\": [\"r-eh t-er ih1 sh-ah-n\", \"nn\"],\n  \"rheumatic\": [\"r-uw m-ae1 t-ih-k\", \"jj\"],\n  \"rheumatism\": [\"r-uw1 m-ah t-ih z-ah-m\", \"nn\"],\n  \"rheumatoid\": [\"r-uw1 m-ah t-oy-d\", \"jj\"],\n  \"rhinestone\": [\"r-ay1-n s-t-ow-n\", \"nn\"],\n  \"rhino\": [\"r-ay1 n-ow\", \"nn\"],\n  \"rhinoceros\": [\"r-ay n-aa1 s-er ah-s\", \"nn\"],\n  \"rhododendron\": [\"r-ow d-ah d-eh1-n d-r-ah-n\", \"nn\"],\n  \"rhyme\": [\"r-ay1-m\", \"nn vb\"],\n  \"rhythm\": [\"r-ih1 dh-ah-m\", \"nn\"],\n  \"rhythmic\": [\"r-ih1-dh m-ih-k\", \"jj\"],\n  \"rhythmically\": [\"r-ih1-dh m-ih-k l-iy\", \"rb\"],\n  \"rib\": [\"r-ih1-b\", \"nn\"],\n  \"ribbed\": [\"r-ih1-b-d\", \"jj\"],\n  \"ribbing\": [\"r-ih1 b-ih-ng\", \"nn\"],\n  \"ribbon\": [\"r-ih1 b-ah-n\", \"nn\"],\n  \"rice\": [\"r-ay1-s\", \"nn\"],\n  \"rich\": [\"r-ih1-ch\", \"jj\"],\n  \"richer\": [\"r-ih1 ch-er\", \"jjr\"],\n  \"riches\": [\"r-ih1 ch-ah-z\", \"nns\"],\n  \"richest\": [\"r-ih1 ch-ah-s-t\", \"jjs\"],\n  \"richly\": [\"r-ih1-ch l-iy\", \"rb\"],\n  \"richness\": [\"r-ih1-ch n-ah-s\", \"nn\"],\n  \"rickety\": [\"r-ih1 k-ah t-iy\", \"jj\"],\n  \"ricochet\": [\"r-ih1-k-ah-sh-ey\", \"vb\"],\n  \"rid\": [\"r-ih1-d\", \"jj vbn vbd rb vb\"],\n  \"riddance\": [\"r-ih1 d-ah-n-s\", \"nn\"],\n  \"ridden\": [\"r-ih1 d-ah-n\", \"vbn\"],\n  \"riddle\": [\"r-ih1 d-ah-l\", \"nn vb\"],\n  \"riddled\": [\"r-ih1 d-ah-l-d\", \"vbn jj\"],\n  \"ride\": [\"r-ay1-d\", \"vb nn vbp\"],\n  \"rider\": [\"r-ay1 d-er\", \"nn\"],\n  \"ridership\": [\"r-ay1 d-er sh-ih-p\", \"nn\"],\n  \"ridge\": [\"r-ih1-jh\", \"nn\"],\n  \"ridicule\": [\"r-ih1 d-ah k-y-uw-l\", \"nn vb\"],\n  \"ridiculous\": [\"r-ih d-ih1 k-y-ah l-ah-s\", \"jj\"],\n  \"ridiculously\": [\"r-ah d-ih1 k-y-ah l-ah-s l-iy\", \"rb\"],\n  \"riding\": [\"r-ay1 d-ih-ng\", \"vbg jj nn\"],\n  \"rife\": [\"r-ay1-f\", \"jj\"],\n  \"riff\": [\"r-ih1-f\", \"nn\"],\n  \"riffle\": [\"r-ih1 f-ah-l\", \"vb\"],\n  \"rifle\": [\"r-ay1 f-ah-l\", \"nn\"],\n  \"rifled\": [\"r-ay1 f-ah-l-d\", \"jj\"],\n  \"rifleman\": [\"r-ay1 f-ah-l m-ah-n\", \"nn\"],\n  \"rifling\": [\"r-ay1 f-l-ih-ng\", \"nn\"],\n  \"rift\": [\"r-ih1-f-t\", \"nn\"],\n  \"rig\": [\"r-ih1-g\", \"nn vbp vb\"],\n  \"rigged\": [\"r-ih1-g-d\", \"vbn vbd jj\"],\n  \"rigging\": [\"r-ih1 g-ih-ng\", \"nn\"],\n  \"right\": [\"r-ay1-t\", \"nn rb vb in jj\"],\n  \"righteous\": [\"r-ay1 ch-ah-s\", \"jj\"],\n  \"righteousness\": [\"r-ay1 ch-ah-s n-ah-s\", \"nn\"],\n  \"rightful\": [\"r-ay1-t f-ah-l\", \"jj\"],\n  \"rightfully\": [\"r-ay1-t f-ah l-iy\", \"rb\"],\n  \"rightist\": [\"r-ay1 t-ih-s-t\", \"jj\"],\n  \"rightly\": [\"r-ay1-t l-iy\", \"rb\"],\n  \"rightness\": [\"r-ay1-t n-ah-s\", \"nn\"],\n  \"rightward\": [\"r-ay1-t w-er-d\", \"jj\"],\n  \"rigid\": [\"r-ih1 jh-ah-d\", \"jj\"],\n  \"rigidity\": [\"r-ih jh-ih1 d-ah t-iy\", \"nn\"],\n  \"rigidly\": [\"r-ih1 jh-ih-d l-iy\", \"rb\"],\n  \"rigor\": [\"r-ih1 g-er\", \"nn\"],\n  \"rigorous\": [\"r-ih1 g-er ah-s\", \"jj\"],\n  \"rigorously\": [\"r-ih1 g-er ah-s l-iy\", \"rb\"],\n  \"rile\": [\"r-ay1-l\", \"vbp vb\"],\n  \"rill\": [\"r-ih1-l\", \"nn\"],\n  \"rim\": [\"r-ih1-m\", \"nn\"],\n  \"rimmed\": [\"r-ih1-m-d\", \"jj vbd\"],\n  \"rind\": [\"r-ay1-n-d\", \"nn\"],\n  \"ring\": [\"r-ih1-ng\", \"nn vb vbp\"],\n  \"ringed\": [\"r-ih1-ng-d\", \"jj vbn\"],\n  \"ringer\": [\"r-ih1 ng-er\", \"nn\"],\n  \"ringleader\": [\"r-ih1-ng l-iy d-er\", \"nn\"],\n  \"ringside\": [\"r-ih1-ng s-ay-d\", \"nn\"],\n  \"rink\": [\"r-ih1-ng-k\", \"nn\"],\n  \"rinse\": [\"r-ih1-n-s\", \"nn vb\"],\n  \"rinsing\": [\"r-ih1-n s-ih-ng\", \"nn vbg\"],\n  \"riot\": [\"r-ay1 ah-t\", \"nn vb\"],\n  \"rioter\": [\"r-ay1 ah t-er\", \"nn\"],\n  \"rioting\": [\"r-ay1 ah t-ih-ng\", \"nn\"],\n  \"riotous\": [\"r-ay1 ah t-ah-s\", \"jj\"],\n  \"rip\": [\"r-ih1-p\", \"vb nn\"],\n  \"ripe\": [\"r-ay1-p\", \"jj\"],\n  \"ripen\": [\"r-ay1 p-ah-n\", \"vb vbp\"],\n  \"ripening\": [\"r-ay1 p-ah n-ih-ng\", \"vbg jj\"],\n  \"ripple\": [\"r-ih1 p-ah-l\", \"nn vb vbp jj\"],\n  \"rise\": [\"r-ay1-z\", \"vbp vb\"],\n  \"risen\": [\"r-ih1 z-ah-n\", \"n vbn\"],\n  \"rising\": [\"r-ay1 z-ih-ng\", \"vbg jj\"],\n  \"risk\": [\"r-ih1-s-k\", \"nn vbp vb\"],\n  \"riskier\": [\"r-ih1-s-k iy er\", \"jjr rbr nn\"],\n  \"riskiest\": [\"r-ih1-s k-iy ah-s-t\", \"jjs\"],\n  \"riskiness\": [\"r-ih1-s-k iy n-ah-s\", \"nn\"],\n  \"risky\": [\"r-ih1-s k-iy\", \"jj\"],\n  \"rite\": [\"r-ay1-t\", \"nn\"],\n  \"ritual\": [\"r-ih1 ch-uw ah-l\", \"nn\"],\n  \"ritzy\": [\"r-ih1-t s-iy\", \"jj\"],\n  \"rival\": [\"r-ay1 v-ah-l\", \"jj nn vb vbp\"],\n  \"rivalry\": [\"r-ay1 v-ah-l r-iy\", \"nn\"],\n  \"riven\": [\"r-ih1 v-ah-n\", \"vbn\"],\n  \"river\": [\"r-ih1 v-er\", \"nn\"],\n  \"riverbank\": [\"r-ih1 v-er b-ae-ng-k\", \"nn\"],\n  \"riverboat\": [\"r-ih1 v-er b-ow-t\", \"nn\"],\n  \"riverfront\": [\"r-ih1 v-er f-r-ah-n-t\", \"nn\"],\n  \"riverside\": [\"r-ih1 v-er s-ay-d\", \"nn\"],\n  \"rivet\": [\"r-ih1-v-ah-t\", \"vb\"],\n  \"riveting\": [\"r-ih1 v-ah t-ih-ng\", \"vbg jj\"],\n  \"roach\": [\"r-ow1-ch\", \"nn\"],\n  \"road\": [\"r-ow1-d\", \"nn\"],\n  \"roadblock\": [\"r-ow1-d b-l-aa-k\", \"nn\"],\n  \"roadrunner\": [\"r-ow1 d-r-ah n-er\", \"nn\"],\n  \"roadside\": [\"r-ow1-d s-ay-d\", \"nn jj\"],\n  \"roadster\": [\"r-ow1-d s-t-er\", \"nn\"],\n  \"roadway\": [\"r-ow1-d w-ey\", \"nn\"],\n  \"roam\": [\"r-ow1-m\", \"vb vbp\"],\n  \"roar\": [\"r-ao1-r\", \"nn vb\"],\n  \"roaring\": [\"r-ao1 r-ih-ng\", \"vbg jj nn\"],\n  \"roast\": [\"r-ow1-s-t\", \"nn vb\"],\n  \"roasted\": [\"r-ow1 s-t-ah-d\", \"vbn jj vbd\"],\n  \"roaster\": [\"r-ow1 s-t-er\", \"nn\"],\n  \"rob\": [\"r-aa1-b\", \"vb vbp\"],\n  \"robber\": [\"r-aa1 b-er\", \"nn\"],\n  \"robbery\": [\"r-aa1 b-er iy\", \"nn\"],\n  \"robe\": [\"r-ow1-b\", \"nn\"],\n  \"robin\": [\"r-aa1 b-ah-n\", \"nn\"],\n  \"robot\": [\"r-ow1 b-aa-t\", \"nn\"],\n  \"robotic\": [\"r-ow b-aa1 t-ih-k\", \"jj\"],\n  \"robust\": [\"r-ow b-ah1-s-t\", \"jj\"],\n  \"robustly\": [\"r-ow b-ah1-s-t l-iy\", \"rb\"],\n  \"robustness\": [\"r-ow b-ah1-s-t n-ah-s\", \"nn\"],\n  \"rock\": [\"r-aa1-k\", \"nn jj vb vbp\"],\n  \"rocker\": [\"r-aa1 k-er\", \"nn\"],\n  \"rocket\": [\"r-aa1 k-ah-t\", \"nn vb\"],\n  \"rocking\": [\"r-aa1 k-ih-ng\", \"nn jj vbg\"],\n  \"rocky\": [\"r-aa1 k-iy\", \"jj\"],\n  \"rococo\": [\"r-ah k-ow1 k-ow\", \"jj nn\"],\n  \"rod\": [\"r-aa1-d\", \"nn\"],\n  \"rodding\": [\"r-aa1 d-ih-ng\", \"nn\"],\n  \"rode\": [\"r-ow1-d\", \"vbd\"],\n  \"rodent\": [\"r-ow1 d-ah-n-t\", \"nn\"],\n  \"rodeo\": [\"r-ow1 d-iy ow\", \"nn\"],\n  \"roemer\": [\"r-ow1 m-er\", \"nn\"],\n  \"rogue\": [\"r-ow1-g\", \"jj\"],\n  \"roil\": [\"r-oy1-l\", \"vb\"],\n  \"roiling\": [\"r-oy1 l-ih-ng\", \"vbg jj\"],\n  \"role\": [\"r-ow1-l\", \"nn\"],\n  \"roleplaying\": [\"r-ow1-l p-l-ey ih-ng\", \"nn\"],\n  \"roll\": [\"r-ow1-l\", \"nn vb vbp\"],\n  \"rollback\": [\"r-ow1-l b-ae-k\", \"nn\"],\n  \"rolled\": [\"r-ow1-l-d\", \"vbd vbn jj\"],\n  \"roller\": [\"r-ow1 l-er\", \"nn\"],\n  \"rollercoaster\": [\"r-ow1 l-er k-ow s-t-er\", \"nn jj\"],\n  \"rollicking\": [\"r-aa1 l-ih k-ih-ng\", \"jj\"],\n  \"rolling\": [\"r-ow1 l-ih-ng\", \"vbg jj nn\"],\n  \"rollout\": [\"r-ow1-l aw-t\", \"nn\"],\n  \"rollover\": [\"r-ow1 l-ow v-er\", \"nn\"],\n  \"romance\": [\"r-ow m-ae1-n-s\", \"nn vb\"],\n  \"romantic\": [\"r-ow m-ae1-n t-ih-k\", \"jj nn\"],\n  \"romantically\": [\"r-ow m-ae1-n t-ih k-ah l-iy\", \"rb\"],\n  \"romanticism\": [\"r-ow m-ae1-n t-ah s-ih z-ah-m\", \"nn\"],\n  \"romanticize\": [\"r-ow m-ae1-n t-ah s-ay-z\", \"vb\"],\n  \"romanticizing\": [\"r-ow m-ae1-n t-ah s-ay z-ih-ng\", \"nn\"],\n  \"romp\": [\"r-aa1-m-p\", \"nn vb vbp\"],\n  \"roof\": [\"r-uw1-f\", \"nn vb\"],\n  \"roofer\": [\"r-uw1 f-er\", \"nn\"],\n  \"roofing\": [\"r-uw1 f-ih-ng\", \"nn\"],\n  \"rooftop\": [\"r-uw1-f t-aa-p\", \"nn\"],\n  \"rooftree\": [\"r-uw1-f t-r-iy\", \"nn\"],\n  \"rook\": [\"r-uh1-k\", \"nn\"],\n  \"rookie\": [\"r-uh1 k-iy\", \"nn\"],\n  \"room\": [\"r-uw1-m\", \"nn vb\"],\n  \"roomful\": [\"r-uw1-m f-uh-l\", \"nn\"],\n  \"roomier\": [\"r-uw1 m-iy er\", \"jjr\"],\n  \"roominess\": [\"r-uw1 m-iy n-ah-s\", \"nn\"],\n  \"roommate\": [\"r-uw1-m ey-t\", \"nn\"],\n  \"roomy\": [\"r-uw1 m-iy\", \"jj\"],\n  \"roost\": [\"r-uw1-s-t\", \"vb nn\"],\n  \"rooster\": [\"r-uw1 s-t-er\", \"nn\"],\n  \"root\": [\"r-uw1-t\", \"nn vbp vb\"],\n  \"rooted\": [\"r-uw1 t-ah-d\", \"vbn jj\"],\n  \"rootless\": [\"r-uw1-t l-ah-s\", \"jj\"],\n  \"rope\": [\"r-ow1-p\", \"nn vb\"],\n  \"roper\": [\"r-ow1 p-er\", \"nn\"],\n  \"rosary\": [\"r-ow1 z-er iy\", \"nn\"],\n  \"rose\": [\"r-ow1-z\", \"vbd jj nn\"],\n  \"rosebush\": [\"r-ow1-z b-uh-sh\", \"nn\"],\n  \"rosette\": [\"r-ow1 z-eh1-t\", \"nn\"],\n  \"rosier\": [\"r-ow1 z-iy er\", \"jjr rbr\"],\n  \"roster\": [\"r-aa1 s-t-er\", \"nn\"],\n  \"rostrum\": [\"r-aa1-s t-r-ah-m\", \"nn\"],\n  \"rosy\": [\"r-ow1 z-iy\", \"jj\"],\n  \"rot\": [\"r-aa1-t\", \"nn vb\"],\n  \"rotary\": [\"r-ow1 t-er iy\", \"jj\"],\n  \"rotate\": [\"r-ow1 t-ey-t\", \"vb\"],\n  \"rotation\": [\"r-ow t-ey1 sh-ah-n\", \"nn\"],\n  \"rotational\": [\"r-ow t-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"rote\": [\"r-ow1-t\", \"nn jj\"],\n  \"rotor\": [\"r-ow1 t-er\", \"nn\"],\n  \"rotten\": [\"r-aa1 t-ah-n\", \"jj\"],\n  \"rotund\": [\"r-ow t-ah1-n-d\", \"jj\"],\n  \"rotunda\": [\"r-ow t-ah1-n d-ah\", \"nn\"],\n  \"rouge\": [\"r-uw1-zh\", \"nn\"],\n  \"rough\": [\"r-ah1-f\", \"jj rb nn vb\"],\n  \"rougher\": [\"r-ah1 f-er\", \"jjr\"],\n  \"roughest\": [\"r-ah1 f-ah-s-t\", \"jjs\"],\n  \"roughly\": [\"r-ah1-f l-iy\", \"rb\"],\n  \"roughneck\": [\"r-ah1-f n-eh-k\", \"nn\"],\n  \"roughshod\": [\"r-ah1-f sh-aa1-d\", \"jj\"],\n  \"roulette\": [\"r-uw l-eh1-t\", \"nn\"],\n  \"round\": [\"r-aw1-n-d\", \"nn in jj vbp rb vb\"],\n  \"roundabout\": [\"r-aw1-n-d ah b-aw-t\", \"jj\"],\n  \"rounded\": [\"r-aw1-n d-ah-d\", \"vbn jj vbd\"],\n  \"rounder\": [\"r-aw1-n d-er\", \"jjr\"],\n  \"roundhead\": [\"r-aw1-n-d hh-eh-d\", \"nn jj\"],\n  \"roundhouse\": [\"r-aw1-n-d hh-aw-s\", \"nn\"],\n  \"roundly\": [\"r-aw1-n-d l-iy\", \"rb\"],\n  \"roundtable\": [\"r-aw1-n-d t-ey b-ah-l\", \"jj\"],\n  \"roundtrip\": [\"r-aw-n-d t-r-ih1-p\", \"nn\"],\n  \"roundup\": [\"r-aw1-n-d ah-p\", \"nn\"],\n  \"rouse\": [\"r-aw1-s\", \"vb\"],\n  \"rousing\": [\"r-aw1 z-ih-ng\", \"jj nn\"],\n  \"rout\": [\"r-aw1-t\", \"nn vb\"],\n  \"route\": [\"r-uw1-t\", \"nn vbp in rb vb\"],\n  \"routine\": [\"r-uw t-iy1-n\", \"jj nn\"],\n  \"routinely\": [\"r-uw t-iy1-n l-iy\", \"rb\"],\n  \"rove\": [\"r-ow1-v\", \"vb\"],\n  \"row\": [\"r-ow1\", \"nn vbp vb\"],\n  \"rowdiness\": [\"r-aw1 d-iy n-ah-s\", \"nn\"],\n  \"rowdy\": [\"r-aw1 d-iy\", \"jj nn\"],\n  \"rowing\": [\"r-ow1 ih-ng\", \"nn\"],\n  \"royal\": [\"r-oy1 ah-l\", \"jj nn\"],\n  \"royalty\": [\"r-oy1 ah-l t-iy\", \"nn\"],\n  \"rub\": [\"r-ah1-b\", \"nn vb vbp\"],\n  \"rubber\": [\"r-ah1 b-er\", \"nn\"],\n  \"rubberize\": [\"r-ah1-b-er-ay-z\", \"vb\"],\n  \"rubbery\": [\"r-ah1 b-er iy\", \"jj\"],\n  \"rubbish\": [\"r-ah1 b-ih-sh\", \"nn jj\"],\n  \"rubble\": [\"r-ah1 b-ah-l\", \"nn\"],\n  \"ruble\": [\"r-uw1 b-ah-l\", \"nn\"],\n  \"rubout\": [\"r-ah1 b-aw-t\", \"nn\"],\n  \"rubric\": [\"r-uw1 b-r-ih-k\", \"nn\"],\n  \"ruby\": [\"r-uw1 b-iy\", \"nn\"],\n  \"ruckus\": [\"r-ah1 k-ah-s\", \"nn\"],\n  \"rudder\": [\"r-ah1 d-er\", \"nn\"],\n  \"rudderless\": [\"r-ah1 d-er l-ah-s\", \"jj\"],\n  \"ruddy\": [\"r-ah1 d-iy\", \"jj rb\"],\n  \"rude\": [\"r-uw1-d\", \"jj\"],\n  \"rudely\": [\"r-uw1-d l-iy\", \"rb\"],\n  \"rudeness\": [\"r-uw1-d n-ah-s\", \"nn\"],\n  \"rudiment\": [\"r-uw1 d-ih m-ah-n-t\", \"nn\"],\n  \"rudimentary\": [\"r-uw d-ah m-eh1-n t-er iy\", \"jj\"],\n  \"rue\": [\"r-uw1\", \"nn\"],\n  \"rueful\": [\"r-uw1 f-ah-l\", \"jj\"],\n  \"ruefully\": [\"r-uw1 f-ah l-iy\", \"rb\"],\n  \"ruffle\": [\"r-ah1 f-ah-l\", \"vb\"],\n  \"ruffled\": [\"r-ah1 f-ah-l-d\", \"vbn jj vbd\"],\n  \"rug\": [\"r-ah1-g\", \"nn\"],\n  \"rugged\": [\"r-ah1 g-ah-d\", \"jj\"],\n  \"ruggedly\": [\"r-ah1 g-ah-d l-iy\", \"rb\"],\n  \"ruin\": [\"r-uw1 ah-n\", \"nn vbp vb\"],\n  \"ruined\": [\"r-uw1 ah-n-d\", \"vbn jj vbd\"],\n  \"ruinous\": [\"r-uw1 ah n-ah-s\", \"jj\"],\n  \"rule\": [\"r-uw1-l\", \"nn vbp vb\"],\n  \"ruler\": [\"r-uw1 l-er\", \"nn\"],\n  \"ruling\": [\"r-uw1 l-ih-ng\", \"nn vbg jj\"],\n  \"rum\": [\"r-ah1-m\", \"nn\"],\n  \"rumble\": [\"r-ah1-m b-ah-l\", \"nn vb vbp\"],\n  \"rumen\": [\"r-uw1 m-ah-n\", \"nn\"],\n  \"ruminate\": [\"r-uw1-m-ih-n-ey-t\", \"vb\"],\n  \"rumination\": [\"r-uw m-ih n-ey1 sh-ah-n\", \"nn\"],\n  \"rummage\": [\"r-ah1 m-ih-jh\", \"vb\"],\n  \"rummaging\": [\"r-ah1 m-ih jh-ih-ng\", \"jj\"],\n  \"rummy\": [\"r-ah1 m-iy\", \"nn\"],\n  \"rumor\": [\"r-uw1 m-er\", \"nn vb\"],\n  \"rumored\": [\"r-uw1 m-er-d\", \"vbn vbd jj\"],\n  \"rump\": [\"r-ah1-m-p\", \"nn jj\"],\n  \"rumpled\": [\"r-ah1-m p-ah-l-d\", \"jj\"],\n  \"run\": [\"r-ah1-n\", \"vb vbd vbn vbp nn\"],\n  \"runabout\": [\"r-ah1-n ah b-aw-t\", \"nn\"],\n  \"runaway\": [\"r-ah1-n ah w-ey\", \"jj vbn nn\"],\n  \"rundown\": [\"r-ah1-n d-aw-n\", \"nn jj\"],\n  \"rung\": [\"r-ah1-ng\", \"vbn nn\"],\n  \"runner\": [\"r-ah1 n-er\", \"nn\"],\n  \"running\": [\"r-ah1 n-ih-ng\", \"vbg jj rb\"],\n  \"runoff\": [\"r-ah1 n-ao-f\", \"nn\"],\n  \"runup\": [\"r-ah1 n-ah-p\", \"nn\"],\n  \"runway\": [\"r-ah1-n w-ey\", \"nn\"],\n  \"rupee\": [\"r-uw p-iy1\", \"nn\"],\n  \"rupiah\": [\"r-uw p-ay1 ah\", \"nn\"],\n  \"rupture\": [\"r-ah1-p ch-er\", \"nn vb\"],\n  \"rural\": [\"r-uh1 r-ah-l\", \"jj\"],\n  \"ruse\": [\"r-uw1-z\", \"nn\"],\n  \"rush\": [\"r-ah1-sh\", \"nn vb vbp\"],\n  \"rushed\": [\"r-ah1-sh-t\", \"vbd vbn jj\"],\n  \"russe\": [\"r-ah1-s\", \"nn\"],\n  \"rust\": [\"r-ah1-s-t\", \"nn vb\"],\n  \"rusted\": [\"r-ah1 s-t-ah-d\", \"jj\"],\n  \"rustic\": [\"r-ah1 s-t-ih-k\", \"jj\"],\n  \"rusting\": [\"r-ah1 s-t-ih-ng\", \"jj\"],\n  \"rustle\": [\"r-ah1-s-ah-l\", \"vb\"],\n  \"rustler\": [\"r-ah1-s l-er\", \"nn\"],\n  \"rusty\": [\"r-ah1 s-t-iy\", \"jj\"],\n  \"rut\": [\"r-ah1-t\", \"nn\"],\n  \"ruthless\": [\"r-uw1-th l-ah-s\", \"jj\"],\n  \"ruthlessly\": [\"r-uw1-th l-ah-s l-iy\", \"rb\"],\n  \"ruthlessness\": [\"r-uw1-th l-ah-s n-ah-s\", \"nn\"],\n  \"rutted\": [\"r-ah1 t-ih-d\", \"jj\"],\n  \"rye\": [\"r-ay1\", \"nn\"],\n  \"sabbatical\": [\"s-ah b-ae1 t-ih k-ah-l\", \"nn jj\"],\n  \"saber\": [\"s-ey1 b-er\", \"nn\"],\n  \"sable\": [\"s-ey1 b-ah-l\", \"nn\"],\n  \"sabotage\": [\"s-ae1 b-ah t-aa-zh\", \"nn vb\"],\n  \"sabre\": [\"s-ey1 b-er\", \"nn\"],\n  \"sac\": [\"s-ae1-k\", \"nn\"],\n  \"saccharin\": [\"s-ae1 k-er ah-n\", \"nn\"],\n  \"sack\": [\"s-ae1-k\", \"nn vb\"],\n  \"sacrament\": [\"s-ae1 k-r-ah m-ah-n-t\", \"nn\"],\n  \"sacred\": [\"s-ey1 k-r-ah-d\", \"jj\"],\n  \"sacrifice\": [\"s-ae1 k-r-ah f-ay-s\", \"nn vb\"],\n  \"sacrificial\": [\"s-ae k-r-ah f-ih1 sh-ah-l\", \"jj\"],\n  \"sacrilege\": [\"s-ae1 k-r-ah l-ah-jh\", \"nn\"],\n  \"sacrilegious\": [\"s-ae k-r-ah l-eh1 jh-ih-s\", \"jj\"],\n  \"sacrosanct\": [\"s-ae1 k-r-ow s-ae-ng-k-t\", \"jj\"],\n  \"sad\": [\"s-ae1-d\", \"jj\"],\n  \"sadden\": [\"s-ae1-d-ah-n\", \"vb\"],\n  \"saddened\": [\"s-ae1 d-ah-n-d\", \"jj vbn\"],\n  \"sadder\": [\"s-ae1 d-er\", \"jjr\"],\n  \"saddle\": [\"s-ae1 d-ah-l\", \"nn vb\"],\n  \"saddlebag\": [\"s-ae1 d-ah-l b-ae-g\", \"nn\"],\n  \"saddled\": [\"s-ae1 d-ah-l-d\", \"vbn vbd jj\"],\n  \"sadism\": [\"s-ey1 d-ih z-ah-m\", \"nn\"],\n  \"sadist\": [\"s-ey1 d-ah-s-t\", \"nn\"],\n  \"sadistic\": [\"s-ah d-ih1 s-t-ih-k\", \"jj\"],\n  \"sadly\": [\"s-ae1-d l-iy\", \"rb\"],\n  \"sadness\": [\"s-ae1-d n-ah-s\", \"nn\"],\n  \"safari\": [\"s-ah f-aa1 r-iy\", \"nn\"],\n  \"safe\": [\"s-ey1-f\", \"jj nn\"],\n  \"safeguard\": [\"s-ey1-f g-aa-r-d\", \"vb nn\"],\n  \"safekeeping\": [\"s-ey1-f k-iy1 p-ih-ng\", \"nn\"],\n  \"safely\": [\"s-ey1-f l-iy\", \"rb\"],\n  \"safer\": [\"s-ey1 f-er\", \"jjr\"],\n  \"safest\": [\"s-ey1 f-ah-s-t\", \"jjs\"],\n  \"safety\": [\"s-ey1-f t-iy\", \"nn vb\"],\n  \"sag\": [\"s-ae1-g\", \"vb nn vbp\"],\n  \"saga\": [\"s-aa1 g-ah\", \"nn\"],\n  \"sage\": [\"s-ey1-jh\", \"nn jj\"],\n  \"sagebrush\": [\"s-ey1-jh b-r-ah-sh\", \"nn\"],\n  \"sagging\": [\"s-ae1 g-ih-ng\", \"vbg jj nn\"],\n  \"sago\": [\"s-ey1 g-ow\", \"nn\"],\n  \"said\": [\"s-eh1-d\", \"vbd vbn\"],\n  \"sail\": [\"s-ey1-l\", \"vb vbp nn\"],\n  \"sailboat\": [\"s-ey1-l b-ow-t\", \"nn\"],\n  \"sailor\": [\"s-ey1 l-er\", \"nn\"],\n  \"saint\": [\"s-ey1-n-t\", \"nn\"],\n  \"sainthood\": [\"s-ey1-n-t hh-uh-d\", \"nn\"],\n  \"saintly\": [\"s-ey1-n-t l-iy\", \"jj\"],\n  \"sake\": [\"s-ey1-k\", \"nn\"],\n  \"salable\": [\"s-ey1 l-ah b-ah-l\", \"jj\"],\n  \"salacious\": [\"s-ah l-ey1 sh-ah-s\", \"jj\"],\n  \"salad\": [\"s-ae1 l-ah-d\", \"nn\"],\n  \"salamander\": [\"s-ae l-ah m-ae1-n d-er\", \"nn\"],\n  \"salami\": [\"s-ah l-aa1 m-iy\", \"nn\"],\n  \"salaried\": [\"s-ae1 l-er iy-d\", \"jj\"],\n  \"salary\": [\"s-ae1 l-er iy\", \"nn\"],\n  \"sale\": [\"s-ey1-l\", \"nn\"],\n  \"salesman\": [\"s-ey1-l-z m-ah-n\", \"nn\"],\n  \"salesmanship\": [\"s-ey1-l-z m-ah-n sh-ih-p\", \"nn\"],\n  \"salesperson\": [\"s-ey1-l-z p-er s-ah-n\", \"nn\"],\n  \"salient\": [\"s-ey1 l-iy ah-n-t\", \"jj\"],\n  \"saline\": [\"s-ah l-iy1-n\", \"nn jj\"],\n  \"salinity\": [\"s-ah l-ih1 n-ah t-iy\", \"nn\"],\n  \"saliva\": [\"s-ah l-ay1 v-ah\", \"nn\"],\n  \"sally\": [\"s-ae1 l-iy\", \"vb\"],\n  \"salmon\": [\"s-ae1 m-ah-n\", \"nn\"],\n  \"salmonella\": [\"s-ae-l m-ah n-eh1 l-ah\", \"nn\"],\n  \"salon\": [\"s-ah l-aa1-n\", \"nn\"],\n  \"saloon\": [\"s-ah l-uw1-n\", \"nn\"],\n  \"salsa\": [\"s-ao1-l s-ah\", \"nn\"],\n  \"salt\": [\"s-ao1-l-t\", \"nn jj vb\"],\n  \"salted\": [\"s-ao1-l t-ah-d\", \"vbn vbd jj\"],\n  \"saltier\": [\"s-ao1-l t-iy er\", \"jjr\"],\n  \"saltwater\": [\"s-ao-l-t w-aa1 t-er\", \"nn\"],\n  \"salty\": [\"s-ao1-l t-iy\", \"jj\"],\n  \"salutary\": [\"s-ae1 l-y-ah t-eh r-iy\", \"jj\"],\n  \"salute\": [\"s-ah l-uw1-t\", \"nn vb\"],\n  \"salvage\": [\"s-ae1-l v-ah-jh\", \"vb nn\"],\n  \"salvation\": [\"s-ae-l v-ey1 sh-ah-n\", \"nn\"],\n  \"salve\": [\"s-aa1-v\", \"nn vb\"],\n  \"salvo\": [\"s-ae1-l v-ow\", \"nn\"],\n  \"sambuca\": [\"s-ae-m b-y-uw1 k-ah\", \"nn\"],\n  \"same\": [\"s-ey1-m\", \"jj\"],\n  \"sameness\": [\"s-ey1-m n-ah-s\", \"nn\"],\n  \"sample\": [\"s-ae1-m p-ah-l\", \"nn jj vb vbp\"],\n  \"sampler\": [\"s-ae1-m p-l-er\", \"nn\"],\n  \"sampling\": [\"s-ae1-m p-l-ih-ng\", \"nn vbg\"],\n  \"samurai\": [\"s-ae1 m-uh r-ay\", \"nn\"],\n  \"sanctimonious\": [\"s-ae-ng-k t-ah m-ow1 n-iy ah-s\", \"jj\"],\n  \"sanction\": [\"s-ae1-ng-k sh-ah-n\", \"nn vbp vb\"],\n  \"sanctity\": [\"s-ae1-ng-k t-ih t-iy\", \"nn\"],\n  \"sanctuary\": [\"s-ae1-ng-k ch-uw eh r-iy\", \"nn\"],\n  \"sanctum\": [\"s-ae1-ng-k t-ah-m\", \"nn\"],\n  \"sand\": [\"s-ae1-n-d\", \"nn vb\"],\n  \"sandal\": [\"s-ae1-n d-ah-l\", \"nn\"],\n  \"sandbox\": [\"s-ae1-n-d b-aa-k-s\", \"nn\"],\n  \"sander\": [\"s-ae1-n d-er\", \"nn\"],\n  \"sandpaper\": [\"s-ae1-n-d p-ey p-er\", \"nn\"],\n  \"sandwich\": [\"s-ae1-n-d w-ih-ch\", \"nn vb\"],\n  \"sandy\": [\"s-ae1-n d-iy\", \"jj\"],\n  \"sane\": [\"s-ey1-n\", \"jj\"],\n  \"saner\": [\"s-ey1 n-er\", \"jjr\"],\n  \"sang\": [\"s-ae1-ng\", \"vbd\"],\n  \"sanguine\": [\"s-ae1-ng g-w-ih-n\", \"jj nn\"],\n  \"sanitary\": [\"s-ae1 n-ih t-eh r-iy\", \"jj\"],\n  \"sanitation\": [\"s-ae n-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"sanitize\": [\"s-ae1-n-ih-t-ay-z\", \"vb\"],\n  \"sanitizing\": [\"s-ae1 n-ah t-ay z-ih-ng\", \"nn\"],\n  \"sanity\": [\"s-ae1 n-ah t-iy\", \"nn\"],\n  \"sank\": [\"s-ae1-ng-k\", \"vbd\"],\n  \"sap\": [\"s-ae1-p\", \"vb nn\"],\n  \"sapiens\": [\"s-ey1 p-iy ah-n-z\", \"jj\"],\n  \"sarcasm\": [\"s-aa1-r k-ae z-ah-m\", \"nn\"],\n  \"sarcastic\": [\"s-aa-r k-ae1 s-t-ih-k\", \"jj\"],\n  \"sarcastically\": [\"s-aa-r k-ae1 s-t-ih-k l-iy\", \"rb\"],\n  \"sarcoma\": [\"s-aa-r k-ow1 m-er\", \"nn\"],\n  \"sardine\": [\"s-aa-r d-iy1-n\", \"nn\"],\n  \"sardonic\": [\"s-aa-r d-aa1 n-ih-k\", \"jj\"],\n  \"sardonically\": [\"s-aa-r d-aa1 n-ih k-ah l-iy\", \"rb\"],\n  \"sari\": [\"s-aa1 r-iy\", \"nn\"],\n  \"sash\": [\"s-ae1-sh\", \"nn\"],\n  \"sassafras\": [\"s-ae1 s-ah f-r-ae-s\", \"nn\"],\n  \"sassy\": [\"s-ae1 s-iy\", \"jj\"],\n  \"sat\": [\"s-ae1-t\", \"vbd vbn\"],\n  \"satellite\": [\"s-ae1 t-ah l-ay-t\", \"nn jj\"],\n  \"satin\": [\"s-ae1 t-ah-n\", \"nn\"],\n  \"satire\": [\"s-ae1 t-ay er\", \"nn\"],\n  \"satiric\": [\"s-ah t-ih1 r-ih-k\", \"jj\"],\n  \"satirical\": [\"s-ah t-ih1 r-ah k-ah-l\", \"jj\"],\n  \"satirist\": [\"s-ae1 t-er ah-s-t\", \"nn\"],\n  \"satirize\": [\"s-ae1-t-er-ay-z\", \"vb\"],\n  \"satisfaction\": [\"s-ae t-ah-s f-ae1-k sh-ah-n\", \"nn\"],\n  \"satisfactorily\": [\"s-ae t-ih-s f-ae1-k t-r-ah l-iy\", \"rb\"],\n  \"satisfactory\": [\"s-ae t-ah-s f-ae1-k t-r-iy\", \"jj\"],\n  \"satisfied\": [\"s-ae1 t-ah-s f-ay-d\", \"vbn vbd jj\"],\n  \"satisfy\": [\"s-ae1 t-ah-s f-ay\", \"vb vbp\"],\n  \"satisfying\": [\"s-ae1 t-ih-s f-ay ih-ng\", \"jj vbg\"],\n  \"saturate\": [\"s-ae1 ch-er ey-t\", \"vb\"],\n  \"saturated\": [\"s-ae1 ch-er ey t-ah-d\", \"vbn jj vbd\"],\n  \"saturation\": [\"s-ae ch-er ey1 sh-ah-n\", \"nn\"],\n  \"sauce\": [\"s-ao1-s\", \"nn\"],\n  \"saucepan\": [\"s-ao1-s p-ae-n\", \"nn\"],\n  \"saucer\": [\"s-ao1 s-er\", \"nn\"],\n  \"saucy\": [\"s-ao1 s-iy\", \"jj\"],\n  \"sauerkraut\": [\"s-aw1 er k-r-aw-t\", \"nn\"],\n  \"sauna\": [\"s-ao1 n-ah\", \"nn\"],\n  \"saunter\": [\"s-ao1-n t-er\", \"nn\"],\n  \"sausage\": [\"s-ao1 s-ah-jh\", \"nn\"],\n  \"saute\": [\"s-ao t-ey1\", \"vb\"],\n  \"savage\": [\"s-ae1 v-ih-jh\", \"jj nn vb\"],\n  \"savagely\": [\"s-ae1 v-ih-jh l-iy\", \"rb\"],\n  \"savagery\": [\"s-ae1 v-ih-jh eh r-iy\", \"nn\"],\n  \"save\": [\"s-ey1-v\", \"vb in vbp\"],\n  \"saver\": [\"s-ey1 v-er\", \"nn\"],\n  \"saving\": [\"s-ey1 v-ih-ng\", \"vbg jj nn\"],\n  \"savior\": [\"s-ey1 v-y-er\", \"nn\"],\n  \"savor\": [\"s-ey1 v-er\", \"vb\"],\n  \"savory\": [\"s-ey1 v-er iy\", \"jj\"],\n  \"savviest\": [\"s-ae1 v-iy ih-s-t\", \"jjs\"],\n  \"savvy\": [\"s-ae1 v-iy\", \"jj vb nn\"],\n  \"saw\": [\"s-ao1\", \"vbd nn vb\"],\n  \"sawn\": [\"s-ao1-n\", \"vbn\"],\n  \"sawdust\": [\"s-ao1 d-ah-s-t\", \"nn jj\"],\n  \"sawing\": [\"s-ao1 ih-ng\", \"nn\"],\n  \"sawmill\": [\"s-ao1 m-ih-l\", \"nn\"],\n  \"sax\": [\"s-ae1-k-s\", \"nn\"],\n  \"saxophone\": [\"s-ae1-k s-ah f-ow-n\", \"nn\"],\n  \"saxophonist\": [\"s-ae1-k s-ah f-ow n-ih-s-t\", \"nn\"],\n  \"say\": [\"s-ey1\", \"vbp nn vb uh\"],\n  \"scab\": [\"s-k-ae1-b\", \"nn\"],\n  \"scabbard\": [\"s-k-ae1 b-er-d\", \"nn\"],\n  \"scad\": [\"s-k-ae1-d\", \"nn\"],\n  \"scaffold\": [\"s-k-ae1 f-ah-l-d\", \"nn\"],\n  \"scaffolding\": [\"s-k-ae1 f-ah-l d-ih-ng\", \"nn\"],\n  \"scalar\": [\"s-k-ey1 l-er\", \"jj\"],\n  \"scald\": [\"s-k-ao1-l-d\", \"vb\"],\n  \"scale\": [\"s-k-ey1-l\", \"nn vb\"],\n  \"scallop\": [\"s-k-ae1 l-ah-p\", \"nn\"],\n  \"scalloped\": [\"s-k-aa1 l-ah-p-t\", \"jj\"],\n  \"scalp\": [\"s-k-ae1-l-p\", \"nn\"],\n  \"scalpel\": [\"s-k-ae1-l p-ah-l\", \"nn\"],\n  \"scam\": [\"s-k-ae1-m\", \"nn\"],\n  \"scammer\": [\"s-k-ae1 m-er\", \"nn\"],\n  \"scamper\": [\"s-k-ae1-m p-er\", \"vb vbp\"],\n  \"scan\": [\"s-k-ae1-n\", \"nn vbp vb\"],\n  \"scandal\": [\"s-k-ae1-n d-ah-l\", \"nn\"],\n  \"scandalize\": [\"s-k-ae1-n-d-ah-l-ay-z\", \"vb\"],\n  \"scandalous\": [\"s-k-ae1-n d-ah l-ah-s\", \"jj\"],\n  \"scanner\": [\"s-k-ae1 n-er\", \"nn\"],\n  \"scant\": [\"s-k-ae1-n-t\", \"jj\"],\n  \"scanty\": [\"s-k-ae1-n t-iy\", \"jj\"],\n  \"scapegoat\": [\"s-k-ey1-p g-ow-t\", \"nn\"],\n  \"scapegoating\": [\"s-k-ey1-p g-ow t-ih-ng\", \"nn\"],\n  \"scar\": [\"s-k-aa1-r\", \"nn\"],\n  \"scarce\": [\"s-k-eh1-r-s\", \"jj\"],\n  \"scarcely\": [\"s-k-eh1-r-s l-iy\", \"rb\"],\n  \"scarcer\": [\"s-k-eh1-r s-er\", \"jjr nn\"],\n  \"scarcity\": [\"s-k-eh1-r s-ih t-iy\", \"nn\"],\n  \"scare\": [\"s-k-eh1-r\", \"vb nn vbp\"],\n  \"scared\": [\"s-k-eh1-r-d\", \"vbn jj rb vbd\"],\n  \"scarf\": [\"s-k-aa1-r-f\", \"nn\"],\n  \"scarlet\": [\"s-k-aa1-r l-ah-t\", \"jj\"],\n  \"scarred\": [\"s-k-aa1-r-d\", \"jj vbn\"],\n  \"scarves\": [\"s-k-aa1-r-v-z\", \"nn\"],\n  \"scary\": [\"s-k-eh1 r-iy\", \"jj\"],\n  \"scathing\": [\"s-k-ey1 dh-ih-ng\", \"jj\"],\n  \"scatter\": [\"s-k-ae1 t-er\", \"nn vb\"],\n  \"scattered\": [\"s-k-ae1 t-er-d\", \"vbn vbd jj\"],\n  \"scattershot\": [\"s-k-ae1 t-er sh-aa-t\", \"jj\"],\n  \"scavenge\": [\"s-k-ae1-v-ah-n-jh\", \"vb\"],\n  \"scavenger\": [\"s-k-ae1 v-ah-n jh-er\", \"nn\"],\n  \"scenario\": [\"s-ih n-eh1 r-iy ow\", \"nn\"],\n  \"scene\": [\"s-iy1-n\", \"nn\"],\n  \"scenery\": [\"s-iy1 n-er iy\", \"nn\"],\n  \"scenic\": [\"s-iy1 n-ih-k\", \"jj\"],\n  \"scent\": [\"s-eh1-n-t\", \"nn vb\"],\n  \"scented\": [\"s-eh1-n t-ih-d\", \"jj vbn\"],\n  \"schedule\": [\"s-k-eh1 jh-uh-l\", \"nn vb vbp\"],\n  \"scheduled\": [\"s-k-eh1 jh-uh-l-d\", \"vbn vbd jj\"],\n  \"schemata\": [\"s-k-ih m-ae1 t-ah\", \"nn\"],\n  \"schematic\": [\"s-k-ih m-ae1 t-ih-k\", \"jj\"],\n  \"scheme\": [\"s-k-iy1-m\", \"nn vb\"],\n  \"scheming\": [\"s-k-iy1 m-ih-ng\", \"jj vbg\"],\n  \"schilling\": [\"sh-ih1 l-ih-ng\", \"nn\"],\n  \"schism\": [\"s-k-ih1 z-ah-m\", \"nn\"],\n  \"schizophrenia\": [\"s-k-ih-t s-ah f-r-iy1 n-iy ah\", \"nn\"],\n  \"schizophrenic\": [\"sh-ih z-ah f-r-eh1 n-ih-k\", \"jj nn\"],\n  \"schmooze\": [\"sh-m-uw1-z\", \"vb\"],\n  \"schnapps\": [\"sh-n-ae1-p-s\", \"nn\"],\n  \"schnook\": [\"sh-n-uh1-k\", \"nn\"],\n  \"scholar\": [\"s-k-aa1 l-er\", \"nn\"],\n  \"scholarly\": [\"s-k-aa1 l-er l-iy\", \"jj\"],\n  \"scholarship\": [\"s-k-aa1 l-er sh-ih-p\", \"nn\"],\n  \"scholastic\": [\"s-k-ah l-ae1 s-t-ih-k\", \"jj nn\"],\n  \"school\": [\"s-k-uw1-l\", \"nn vb\"],\n  \"schoolbook\": [\"s-k-uw1-l b-uh-k\", \"nn\"],\n  \"schoolboy\": [\"s-k-uw1-l b-oy\", \"nn\"],\n  \"schoolchild\": [\"s-k-uw1-l ch-ih-l-d\", \"nn\"],\n  \"schooler\": [\"s-k-uw1 l-er\", \"nn\"],\n  \"schoolgirl\": [\"s-k-uw1-l g-er-l\", \"nn\"],\n  \"schoolhouse\": [\"s-k-uw1-l hh-aw-s\", \"nn\"],\n  \"schoolmaster\": [\"s-k-uw1-l m-ae s-t-er\", \"nn\"],\n  \"schoolmate\": [\"s-k-uw1-l m-ey-t\", \"nn\"],\n  \"schoolroom\": [\"s-k-uw1-l r-uw-m\", \"nn\"],\n  \"schoolteacher\": [\"s-k-uw1-l t-iy ch-er\", \"nn\"],\n  \"schoolwork\": [\"s-k-uw1-l w-er-k\", \"nn\"],\n  \"schooner\": [\"s-k-uw1 n-er\", \"nn\"],\n  \"science\": [\"s-ay1 ah-n-s\", \"nn jj\"],\n  \"scientific\": [\"s-ay ah-n t-ih1 f-ih-k\", \"jj\"],\n  \"scientifically\": [\"s-ay ah-n t-ih1 f-ih k-ah l-iy\", \"rb\"],\n  \"scientist\": [\"s-ay1 ah-n t-ih-s-t\", \"nn\"],\n  \"scion\": [\"s-ay1 ah-n\", \"nn\"],\n  \"sclerosis\": [\"s-k-l-er ow1 s-ah-s\", \"nn\"],\n  \"scoff\": [\"s-k-ao1-f\", \"vb nn vbp\"],\n  \"scofflaw\": [\"s-k-aa1 f-l-ao\", \"nn\"],\n  \"scold\": [\"s-k-ow1-l-d\", \"vb\"],\n  \"scoop\": [\"s-k-uw1-p\", \"nn vb\"],\n  \"scooter\": [\"s-k-uw1 t-er\", \"nn\"],\n  \"scope\": [\"s-k-ow1-p\", \"nn\"],\n  \"scorch\": [\"s-k-ao1-r-ch\", \"vb\"],\n  \"scorched\": [\"s-k-ao1-r-ch-t\", \"jj vbd\"],\n  \"score\": [\"s-k-ao1-r\", \"nn vb vbp\"],\n  \"scoreboard\": [\"s-k-ao1-r b-ao-r-d\", \"nn\"],\n  \"scorecard\": [\"s-k-ao1-r k-aa-r-d\", \"nn\"],\n  \"scored\": [\"s-k-ao1-r-d\", \"vbd jj vbn\"],\n  \"scorekeeper\": [\"s-k-ao1-r k-iy p-er\", \"nn\"],\n  \"scoreless\": [\"s-k-ao1-r l-ah-s\", \"jj\"],\n  \"scorer\": [\"s-k-ao1 r-er\", \"nn\"],\n  \"scorn\": [\"s-k-ao1-r-n\", \"nn vb vbp\"],\n  \"scornful\": [\"s-k-ao1-r-n f-ah-l\", \"jj\"],\n  \"scotch\": [\"s-k-aa1-ch\", \"nn vb\"],\n  \"scoundrel\": [\"s-k-aw1-n d-r-ah-l\", \"nn\"],\n  \"scour\": [\"s-k-aw1 er\", \"vbp vb\"],\n  \"scoured\": [\"s-k-aw1 er-d\", \"vbn jj vbd\"],\n  \"scourge\": [\"s-k-er1-jh\", \"nn\"],\n  \"scout\": [\"s-k-aw1-t\", \"nn vb\"],\n  \"scowl\": [\"s-k-aw1-l\", \"vb\"],\n  \"scraggly\": [\"s-k-r-ae1-g l-iy\", \"jj\"],\n  \"scramble\": [\"s-k-r-ae1-m b-ah-l\", \"nn vbp vb\"],\n  \"scrambled\": [\"s-k-r-ae1-m b-ah-l-d\", \"vbd jj vbn\"],\n  \"scrap\": [\"s-k-r-ae1-p\", \"nn jj vb\"],\n  \"scrapbook\": [\"s-k-r-ae1-p b-uh-k\", \"nn\"],\n  \"scrape\": [\"s-k-r-ey1-p\", \"nn vb vbp\"],\n  \"scrappy\": [\"s-k-r-ae1 p-iy\", \"jj\"],\n  \"scratch\": [\"s-k-r-ae1-ch\", \"nn vb vbp\"],\n  \"scratchy\": [\"s-k-r-ae1 ch-iy\", \"jj\"],\n  \"scrawl\": [\"s-k-r-ao1-l\", \"nn vb\"],\n  \"scrawled\": [\"s-k-r-ao1-l-d\", \"vbd jj vbn\"],\n  \"scrawny\": [\"s-k-r-ao1 n-iy\", \"jj\"],\n  \"scream\": [\"s-k-r-iy1-m\", \"vb vbp nn\"],\n  \"screaming\": [\"s-k-r-iy1 m-ih-ng\", \"vbg jj nn\"],\n  \"screech\": [\"s-k-r-iy1-ch\", \"nn vb\"],\n  \"screeching\": [\"s-k-r-iy1 ch-ih-ng\", \"vbg jj\"],\n  \"screed\": [\"s-k-r-iy1-d\", \"nn\"],\n  \"screen\": [\"s-k-r-iy1-n\", \"nn vb vbp\"],\n  \"screening\": [\"s-k-r-iy1 n-ih-ng\", \"nn vbg\"],\n  \"screenplay\": [\"s-k-r-iy1-n p-l-ey\", \"nn\"],\n  \"screenwriter\": [\"s-k-r-iy1-n r-ay t-er\", \"nn\"],\n  \"screw\": [\"s-k-r-uw1\", \"nn vb\"],\n  \"screwball\": [\"s-k-r-uw1 b-ao-l\", \"jj nn\"],\n  \"screwdriver\": [\"s-k-r-uw1 d-r-ay v-er\", \"nn\"],\n  \"scribble\": [\"s-k-r-ih1 b-ah-l\", \"vb\"],\n  \"scribbler\": [\"s-k-r-ih1 b-l-er\", \"nn\"],\n  \"scribe\": [\"s-k-r-ay1-b\", \"nn\"],\n  \"scrimmage\": [\"s-k-r-ih1 m-ih-jh\", \"nn\"],\n  \"scrimp\": [\"s-k-r-ih1-m-p\", \"vb\"],\n  \"script\": [\"s-k-r-ih1-p-t\", \"nn\"],\n  \"scriptural\": [\"s-k-r-ih1-p ch-er ah-l\", \"jj\"],\n  \"scripture\": [\"s-k-r-ih1-p ch-er\", \"nn\"],\n  \"scriptwriter\": [\"s-k-r-ih1-p-t r-ay t-er\", \"nn\"],\n  \"scrivener\": [\"s-k-r-ih1-v n-er\", \"nn\"],\n  \"scroll\": [\"s-k-r-ow1-l\", \"nn\"],\n  \"scrounge\": [\"s-k-r-aw1-n-jh\", \"vbp vb\"],\n  \"scrub\": [\"s-k-r-ah1-b\", \"vb jj nn\"],\n  \"scrubber\": [\"s-k-r-ah1 b-er\", \"nn\"],\n  \"scrubbing\": [\"s-k-r-ah1 b-ih-ng\", \"nn vbg\"],\n  \"scrupulous\": [\"s-k-r-uw1 p-y-ah l-ah-s\", \"jj\"],\n  \"scrupulously\": [\"s-k-r-uw1 p-y-ah l-ah-s l-iy\", \"rb\"],\n  \"scrutinize\": [\"s-k-r-uw1 t-ah n-ay-z\", \"vb vbp\"],\n  \"scrutiny\": [\"s-k-r-uw1 t-ah n-iy\", \"nn\"],\n  \"scuba\": [\"s-k-uw1 b-ah\", \"nn\"],\n  \"scuff\": [\"s-k-ah1-f\", \"vb\"],\n  \"scuffle\": [\"s-k-ah1 f-ah-l\", \"nn\"],\n  \"sculpt\": [\"s-k-ah1-l-p-t\", \"vb\"],\n  \"sculptor\": [\"s-k-ah1-l-p t-er\", \"nn\"],\n  \"sculptural\": [\"s-k-ah1-l-p ch-er ah-l\", \"jj\"],\n  \"sculpture\": [\"s-k-ah1-l-p ch-er\", \"nn vb\"],\n  \"sculptured\": [\"s-k-ah1-l-p ch-er-d\", \"vbn jj\"],\n  \"scurried\": [\"s-k-er1 iy-d\", \"vbd\"],\n  \"scurrilous\": [\"s-k-er1 ah l-ah-s\", \"jj\"],\n  \"scurry\": [\"s-k-er1 iy\", \"nn vbp vb\"],\n  \"scuttle\": [\"s-k-ah1 t-ah-l\", \"vb\"],\n  \"scuttled\": [\"s-k-ah1 t-ah-l-d\", \"vbd vbn jj\"],\n  \"sea\": [\"s-iy1\", \"nn vb vbp\"],\n  \"seaboard\": [\"s-iy1 b-ao-r-d\", \"nn\"],\n  \"seacoast\": [\"s-iy1 k-ow-s-t\", \"nn\"],\n  \"seafarer\": [\"s-iy1 f-eh r-er\", \"nn\"],\n  \"seafood\": [\"s-iy1 f-uw-d\", \"nn\"],\n  \"seal\": [\"s-iy1-l\", \"nn vb vbp\"],\n  \"sealant\": [\"s-iy1 l-ah-n-t\", \"nn\"],\n  \"sealed\": [\"s-iy1-l-d\", \"vbn vbd jj\"],\n  \"sealift\": [\"s-iy1 l-ih-f-t\", \"nn\"],\n  \"seam\": [\"s-iy1-m\", \"nn\"],\n  \"seaman\": [\"s-iy1 m-ah-n\", \"nn\"],\n  \"seamless\": [\"s-iy1-m l-ah-s\", \"jj\"],\n  \"seamlessly\": [\"s-iy1-m l-ah-s l-iy\", \"rb\"],\n  \"seamstress\": [\"s-iy1-m s-t-r-ih-s\", \"nn\"],\n  \"seamy\": [\"s-iy1 m-iy\", \"jj\"],\n  \"seaport\": [\"s-iy1 p-ao-r-t\", \"nn\"],\n  \"sear\": [\"s-ih1-r\", \"vb\"],\n  \"search\": [\"s-er1-ch\", \"nn vb vbp\"],\n  \"searcher\": [\"s-er1 ch-er\", \"nn\"],\n  \"searing\": [\"s-ih1 r-ih-ng\", \"vbg jj\"],\n  \"seashore\": [\"s-iy1 sh-ao-r\", \"nn\"],\n  \"seaside\": [\"s-iy1 s-ay-d\", \"jj nn\"],\n  \"season\": [\"s-iy1 z-ah-n\", \"nn vb\"],\n  \"seasonal\": [\"s-iy1 z-ah n-ah-l\", \"jj\"],\n  \"seasonality\": [\"s-iy1 z-ah n-ae l-ih t-iy\", \"nn\"],\n  \"seasonally\": [\"s-iy1 z-ah-n ah l-iy\", \"rb\"],\n  \"seasoned\": [\"s-iy1 z-ah-n-d\", \"jj vbn\"],\n  \"seasoning\": [\"s-iy1 z-ah-n ih-ng\", \"nn\"],\n  \"seat\": [\"s-iy1-t\", \"nn vb vbp\"],\n  \"seated\": [\"s-iy1 t-ah-d\", \"vbn vbd jj\"],\n  \"seating\": [\"s-iy1 t-ih-ng\", \"nn vbg\"],\n  \"seawater\": [\"s-iy1 w-aa t-er\", \"nn\"],\n  \"seaweed\": [\"s-iy1 w-iy-d\", \"nn\"],\n  \"secede\": [\"s-ih s-iy1-d\", \"vb\"],\n  \"secession\": [\"s-ih s-eh1 sh-ah-n\", \"nn\"],\n  \"secessionist\": [\"s-ih s-eh1 sh-ah-n ih-s-t\", \"nn\"],\n  \"seclude\": [\"s-ah-k-l-uw1-d\", \"vb\"],\n  \"secluded\": [\"s-ih k-l-uw1 d-ih-d\", \"vbn jj\"],\n  \"seclusion\": [\"s-ih k-l-uw1 zh-ah-n\", \"nn\"],\n  \"second\": [\"s-eh1 k-ah-n-d\", \"nn jj rb vb\"],\n  \"secondarily\": [\"s-eh k-ah-n d-eh1 r-ah l-iy\", \"rb\"],\n  \"secondary\": [\"s-eh1 k-ah-n d-eh r-iy\", \"jj\"],\n  \"secondhand\": [\"s-eh1 k-ah-n-d hh-ae-n-d\", \"jj\"],\n  \"secondly\": [\"s-eh1 k-ah-n-d l-iy\", \"rb\"],\n  \"secrecy\": [\"s-iy1 k-r-ah s-iy\", \"nn\"],\n  \"secret\": [\"s-iy1 k-r-ah-t\", \"jj nn\"],\n  \"secretarial\": [\"s-eh k-r-ah t-eh1 r-iy ah-l\", \"jj\"],\n  \"secretary\": [\"s-eh1 k-r-ah t-eh r-iy\", \"nn\"],\n  \"secrete\": [\"s-ah k-r-iy1-t\", \"vb\"],\n  \"secretion\": [\"s-ah k-r-iy1 sh-ah-n\", \"nn\"],\n  \"secretive\": [\"s-iy1 k-r-ah t-ih-v\", \"jj\"],\n  \"secretly\": [\"s-iy1 k-r-ih-t l-iy\", \"rb\"],\n  \"sect\": [\"s-eh1-k-t\", \"nn\"],\n  \"sectarian\": [\"s-eh-k t-eh1 r-iy ah-n\", \"jj nn\"],\n  \"section\": [\"s-eh1-k sh-ah-n\", \"nn\"],\n  \"sectional\": [\"s-eh1-k sh-ah n-ah-l\", \"jj\"],\n  \"sector\": [\"s-eh1-k t-er\", \"nn\"],\n  \"secular\": [\"s-eh1 k-y-ah l-er\", \"jj\"],\n  \"secularism\": [\"s-eh1 k-y-ah l-er ih z-ah-m\", \"nn\"],\n  \"secularist\": [\"s-eh1 k-y-ah l-er ih-s-t\", \"nn\"],\n  \"secure\": [\"s-ih k-y-uh1-r\", \"vb jj vbp\"],\n  \"secured\": [\"s-ih k-y-uh1-r-d\", \"vbn vbd jj\"],\n  \"securely\": [\"s-ih k-y-uh1-r l-iy\", \"rb\"],\n  \"securitization\": [\"s-ih k-y-uh r-ah t-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"security\": [\"s-ih k-y-uh1 r-ah t-iy\", \"nn\"],\n  \"sedan\": [\"s-ah d-ae1-n\", \"nn\"],\n  \"sedate\": [\"s-ih d-ey1-t\", \"jj\"],\n  \"sedative\": [\"s-eh1 d-ah t-ih-v\", \"nn\"],\n  \"sedentary\": [\"s-eh1 d-ah-n t-eh r-iy\", \"jj\"],\n  \"sediment\": [\"s-eh1 d-ah m-ah-n-t\", \"nn\"],\n  \"sedimentary\": [\"s-eh d-ah m-eh1-n t-er iy\", \"jj\"],\n  \"sedimentation\": [\"s-eh d-ah m-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"sedition\": [\"s-ih d-ih1 sh-ah-n\", \"nn\"],\n  \"seditious\": [\"s-ih d-ih1 sh-ah-s\", \"jj\"],\n  \"seduce\": [\"s-ih d-uw1-s\", \"vb\"],\n  \"seducer\": [\"s-ih d-uw1 s-er\", \"nn\"],\n  \"seduction\": [\"s-ih d-ah1-k sh-ah-n\", \"nn\"],\n  \"seductive\": [\"s-ih d-ah1-k t-ih-v\", \"jj\"],\n  \"see\": [\"s-iy1\", \"vb uh vbp\"],\n  \"seed\": [\"s-iy1-d\", \"nn vb\"],\n  \"seedling\": [\"s-iy1-d l-ih-ng\", \"nn\"],\n  \"seedy\": [\"s-iy1 d-iy\", \"jj\"],\n  \"seek\": [\"s-iy1-k\", \"vb vbp\"],\n  \"seeker\": [\"s-iy1 k-er\", \"nn\"],\n  \"seem\": [\"s-iy1-m\", \"vb vbp\"],\n  \"seeming\": [\"s-iy1 m-ih-ng\", \"jj vbg\"],\n  \"seemingly\": [\"s-iy1 m-ih-ng l-iy\", \"rb\"],\n  \"seen\": [\"s-iy1-n\", \"vbn vbd jj\"],\n  \"seep\": [\"s-iy1-p\", \"vb vbp\"],\n  \"seepage\": [\"s-iy1 p-ih-jh\", \"nn\"],\n  \"seer\": [\"s-iy1-r\", \"nn\"],\n  \"seesaw\": [\"s-iy1 s-ao\", \"nn vb\"],\n  \"seethe\": [\"s-iy1-dh\", \"vb vbp\"],\n  \"seething\": [\"s-iy1 th-ih-ng\", \"vbg jj\"],\n  \"segment\": [\"s-eh1-g m-ah-n-t\", \"nn vb vbp\"],\n  \"segmentation\": [\"s-eh-g m-ah-n t-ey1 sh-ah-n\", \"nn\"],\n  \"segmented\": [\"s-eh1-g m-eh-n t-ih-d\", \"jj\"],\n  \"segregate\": [\"s-eh1 g-r-ah g-ey-t\", \"vb\"],\n  \"segregated\": [\"s-eh1 g-r-ah g-ey t-ih-d\", \"vbn vbd jj\"],\n  \"segregation\": [\"s-eh g-r-ah g-ey1 sh-ah-n\", \"nn\"],\n  \"segregationist\": [\"s-eh g-r-ah g-ey1 sh-ah-n ih-s-t\", \"nn jj\"],\n  \"seismic\": [\"s-ay1-z m-ih-k\", \"jj\"],\n  \"seize\": [\"s-iy1-z\", \"vb vbp\"],\n  \"seized\": [\"s-iy1-z-d\", \"vbn jj vbd\"],\n  \"seizure\": [\"s-iy1 zh-er\", \"nn\"],\n  \"seldom\": [\"s-eh1-l d-ah-m\", \"rb\"],\n  \"select\": [\"s-ah l-eh1-k-t\", \"vb vbp jj\"],\n  \"selected\": [\"s-ah l-eh1-k t-ah-d\", \"vbn jj vbd\"],\n  \"selection\": [\"s-ah l-eh1-k sh-ah-n\", \"nn\"],\n  \"selective\": [\"s-ah l-eh1-k t-ih-v\", \"jj\"],\n  \"selectively\": [\"s-ah l-eh1-k t-ih-v l-iy\", \"rb\"],\n  \"selectivity\": [\"s-ih l-eh-k t-ih1 v-ah t-iy\", \"nn\"],\n  \"self\": [\"s-eh1-l-f\", \"nn prp\"],\n  \"selfish\": [\"s-eh1-l f-ih-sh\", \"jj\"],\n  \"selfishness\": [\"s-eh1-l f-ih-sh n-ah-s\", \"nn\"],\n  \"selfless\": [\"s-eh1-l-f l-ah-s\", \"jj\"],\n  \"sell\": [\"s-eh1-l\", \"vb vbp nn\"],\n  \"seller\": [\"s-eh1 l-er\", \"nn\"],\n  \"sellin\": [\"s-eh1 l-ih-n\", \"nn\"],\n  \"selling\": [\"s-eh1 l-ih-ng\", \"vbg jj\"],\n  \"selloff\": [\"s-eh1-l ao-f\", \"nn\"],\n  \"sellout\": [\"s-eh1-l aw-t\", \"nn\"],\n  \"semantic\": [\"s-ih m-ae1-n t-ih-k\", \"jj\"],\n  \"semblance\": [\"s-eh1-m b-l-ah-n-s\", \"nn\"],\n  \"semen\": [\"s-iy1 m-ah-n\", \"nn\"],\n  \"semester\": [\"s-ah m-eh1 s-t-er\", \"nn\"],\n  \"semiannual\": [\"s-eh m-iy ae1 n-y-ah w-ah-l\", \"jj\"],\n  \"semiannually\": [\"s-eh m-iy ae1 n-uw ah l-iy\", \"rb\"],\n  \"semiautomatic\": [\"s-eh m-iy ao t-ah m-ae1 t-ih-k\", \"jj\"],\n  \"semicircular\": [\"s-eh m-iy s-er1 k-y-ah l-er\", \"jj\"],\n  \"semiconductor\": [\"s-eh m-iy k-ah-n d-ah1-k t-er\", \"nn\"],\n  \"semifinal\": [\"s-eh m-iy f-ay1 n-ah-l\", \"nn\"],\n  \"semifinalist\": [\"s-eh m-iy f-ay1 n-ah-l ih-s-t\", \"nn\"],\n  \"seminal\": [\"s-eh1 m-ah n-ah-l\", \"jj\"],\n  \"seminar\": [\"s-eh1 m-ah n-aa-r\", \"nn\"],\n  \"seminarian\": [\"s-eh m-ah n-eh1 r-iy ah-n\", \"nn\"],\n  \"seminary\": [\"s-eh1 m-ah n-eh r-iy\", \"nn\"],\n  \"senate\": [\"s-eh1 n-ah-t\", \"nn\"],\n  \"senator\": [\"s-eh1 n-ah t-er\", \"nn\"],\n  \"senatorial\": [\"s-eh n-ah t-ao1 r-iy ah-l\", \"jj\"],\n  \"send\": [\"s-eh1-n-d\", \"vb vbp\"],\n  \"sender\": [\"s-eh1-n d-er\", \"nn\"],\n  \"senile\": [\"s-iy1 n-ay-l\", \"jj\"],\n  \"senior\": [\"s-iy1 n-y-er\", \"jj nn\"],\n  \"seniority\": [\"s-iy n-y-ao1 r-ih t-iy\", \"nn\"],\n  \"sensation\": [\"s-eh-n s-ey1 sh-ah-n\", \"nn\"],\n  \"sensational\": [\"s-eh-n s-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"sense\": [\"s-eh1-n-s\", \"nn vbp vb\"],\n  \"senseless\": [\"s-eh1-n-s l-ah-s\", \"jj\"],\n  \"sensibility\": [\"s-eh-n s-ih b-ih1 l-ih t-iy\", \"nn\"],\n  \"sensible\": [\"s-eh1-n s-ah b-ah-l\", \"jj nn\"],\n  \"sensibly\": [\"s-eh1-n s-ah b-l-iy\", \"rb\"],\n  \"sensitive\": [\"s-eh1-n s-ah t-ih-v\", \"jj nn\"],\n  \"sensitively\": [\"s-eh1-n s-ih t-ih-v l-iy\", \"rb\"],\n  \"sensitivity\": [\"s-eh-n s-ih t-ih1 v-ih t-iy\", \"nn\"],\n  \"sensitize\": [\"s-eh1-n-s-ah-t-ay-z\", \"vb\"],\n  \"sensor\": [\"s-eh1-n s-er\", \"nn\"],\n  \"sensory\": [\"s-eh1-n s-er iy\", \"jj\"],\n  \"sensual\": [\"s-eh1-n ch-ah w-ah-l\", \"jj\"],\n  \"sensuality\": [\"s-eh-n ch-ah-w ae1 l-ah t-iy\", \"nn\"],\n  \"sensuous\": [\"s-eh1-n ch-ah-w ah-s\", \"jj\"],\n  \"sent\": [\"s-eh1-n-t\", \"vbd vbn\"],\n  \"sentence\": [\"s-eh1-n t-ah-n-s\", \"nn vb\"],\n  \"sentiment\": [\"s-eh1-n t-ah m-ah-n-t\", \"nn\"],\n  \"sentimental\": [\"s-eh-n t-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"sentimentality\": [\"s-eh-n t-ah m-eh-n t-ae1 l-ih t-iy\", \"nn\"],\n  \"sentinel\": [\"s-eh1-n t-ah n-ah-l\", \"nn\"],\n  \"sentry\": [\"s-eh1-n t-r-iy\", \"nn\"],\n  \"separate\": [\"s-eh1 p-er ey-t\", \"jj vbp vb\"],\n  \"separated\": [\"s-eh1 p-er ey t-ah-d\", \"vbn jj vbd\"],\n  \"separately\": [\"s-eh1 p-er ah-t l-iy\", \"rb\"],\n  \"separateness\": [\"s-eh1 p-er ah-t n-ah-s\", \"nn\"],\n  \"separation\": [\"s-eh p-er ey1 sh-ah-n\", \"nn\"],\n  \"separatist\": [\"s-eh1 p-er ah t-ih-s-t\", \"jj\"],\n  \"sepsis\": [\"s-eh1-p s-ih-s\", \"nn\"],\n  \"septic\": [\"s-eh1-p t-ih-k\", \"jj nn\"],\n  \"septuagenarian\": [\"s-eh-p ch-uw ah jh-ah n-eh1 r-iy ah-n\", \"nn\"],\n  \"septum\": [\"s-eh1-p t-ah-m\", \"nn\"],\n  \"sequel\": [\"s-iy1 k-w-ah-l\", \"nn\"],\n  \"sequence\": [\"s-iy1 k-w-ah-n-s\", \"nn\"],\n  \"sequester\": [\"s-ih k-w-eh1 s-t-er\", \"nn vb vbp\"],\n  \"sequin\": [\"s-iy1 k-w-ah-n\", \"nn\"],\n  \"sequined\": [\"s-iy1 k-w-ah-n-d\", \"jj\"],\n  \"serenade\": [\"s-eh r-ah n-ey1-d\", \"nn vb\"],\n  \"serendipity\": [\"s-eh r-ah-n d-ih1 p-ih t-iy\", \"nn\"],\n  \"serene\": [\"s-er iy1-n\", \"jj nn\"],\n  \"serenely\": [\"s-er iy1 n-ah l-iy\", \"rb\"],\n  \"serenity\": [\"s-er eh1 n-ah t-iy\", \"nn\"],\n  \"serf\": [\"s-er1-f\", \"nn\"],\n  \"sergeant\": [\"s-aa1-r jh-ah-n-t\", \"nn\"],\n  \"serial\": [\"s-ih1 r-iy ah-l\", \"jj nn\"],\n  \"serialize\": [\"s-ih1-r-iy-ah-l-ay-z\", \"vb\"],\n  \"series\": [\"s-ih1 r-iy-z\", \"nn\"],\n  \"serious\": [\"s-ih1 r-iy ah-s\", \"jj\"],\n  \"seriously\": [\"s-ih1 r-iy ah-s l-iy\", \"rb\"],\n  \"seriousness\": [\"s-ih1 r-iy ah-s n-ah-s\", \"nn\"],\n  \"sermon\": [\"s-er1 m-ah-n\", \"nn\"],\n  \"serotonin\": [\"s-er ah t-ow1 n-ih-n\", \"nn\"],\n  \"serpent\": [\"s-er1 p-ah-n-t\", \"nn\"],\n  \"serpentine\": [\"s-er1 p-ah-n t-ay-n\", \"jj\"],\n  \"serum\": [\"s-ih1 r-ah-m\", \"nn\"],\n  \"servant\": [\"s-er1 v-ah-n-t\", \"nn\"],\n  \"serve\": [\"s-er1-v\", \"nn vb vbp\"],\n  \"server\": [\"s-er1 v-er\", \"nn\"],\n  \"service\": [\"s-er1 v-ah-s\", \"nn vb vbp\"],\n  \"serviceable\": [\"s-er1 v-ah s-ah b-ah-l\", \"jj\"],\n  \"servile\": [\"s-er1 v-ah-l\", \"jj\"],\n  \"servitude\": [\"s-er1 v-ah t-uw-d\", \"nn\"],\n  \"servo\": [\"s-er1 v-ow\", \"nn jj\"],\n  \"sesame\": [\"s-eh1 s-ah m-iy\", \"nn\"],\n  \"session\": [\"s-eh1 sh-ah-n\", \"nn\"],\n  \"set\": [\"s-eh1-t\", \"vbn vbd vbp jj nn vb\"],\n  \"setback\": [\"s-eh1-t b-ae-k\", \"nn\"],\n  \"setter\": [\"s-eh1 t-er\", \"nn\"],\n  \"settle\": [\"s-eh1 t-ah-l\", \"vb vbp\"],\n  \"settled\": [\"s-eh1 t-ah-l-d\", \"vbd vbn jj\"],\n  \"settlement\": [\"s-eh1 t-ah-l m-ah-n-t\", \"nn\"],\n  \"settler\": [\"s-eh1 t-ah-l er\", \"nn\"],\n  \"setup\": [\"s-eh1-t ah-p\", \"nn\"],\n  \"seven\": [\"s-eh1 v-ah-n\", \"cd\"],\n  \"seventh\": [\"s-eh1 v-ah-n-th\", \"jj\"],\n  \"seventy\": [\"s-eh1 v-ah-n t-iy\", \"nn\"],\n  \"sever\": [\"s-eh1 v-er\", \"vb vbp\"],\n  \"several\": [\"s-eh1 v-r-ah-l\", \"jj rb\"],\n  \"severance\": [\"s-eh1 v-er ah-n-s\", \"nn jj\"],\n  \"severe\": [\"s-ah v-ih1-r\", \"jj\"],\n  \"severely\": [\"s-ah v-ih1-r l-iy\", \"rb\"],\n  \"severest\": [\"s-ah v-ih1 r-ah-s-t\", \"jjs\"],\n  \"severity\": [\"s-ih v-eh1 r-ih t-iy\", \"nn\"],\n  \"sew\": [\"s-ow1\", \"vb vbp\"],\n  \"sewn\": [\"s-ow1-n\", \"vbn\"],\n  \"sewage\": [\"s-uw1 ah-jh\", \"nn\"],\n  \"sewer\": [\"s-uw1 er\", \"nn\"],\n  \"sewing\": [\"s-ow1 ih-ng\", \"nn vbg\"],\n  \"sex\": [\"s-eh1-k-s\", \"nn vb\"],\n  \"sexism\": [\"s-eh1-k s-ih z-ah-m\", \"nn\"],\n  \"sexist\": [\"s-eh1-k s-ih-s-t\", \"jj\"],\n  \"sextet\": [\"s-eh-k s-t-eh1-t\", \"nn\"],\n  \"sexton\": [\"s-eh1-k s-t-ah-n\", \"nn\"],\n  \"sexual\": [\"s-eh1-k sh-uw ah-l\", \"jj\"],\n  \"sexuality\": [\"s-eh-k sh-uw ae1 l-ah t-iy\", \"nn\"],\n  \"sexually\": [\"s-eh1-k sh-uw ah l-iy\", \"rb\"],\n  \"sexy\": [\"s-eh1-k s-iy\", \"jj\"],\n  \"shabby\": [\"sh-ae1 b-iy\", \"jj\"],\n  \"shack\": [\"sh-ae1-k\", \"nn\"],\n  \"shackle\": [\"sh-ae1 k-ah-l\", \"vb\"],\n  \"shad\": [\"sh-ae1-d\", \"nn\"],\n  \"shade\": [\"sh-ey1-d\", \"nn vb\"],\n  \"shaded\": [\"sh-ey1 d-ih-d\", \"vbn vbd jj\"],\n  \"shading\": [\"sh-ey1 d-ih-ng\", \"nn vbg\"],\n  \"shadow\": [\"sh-ae1 d-ow\", \"nn vb\"],\n  \"shadowed\": [\"sh-ae1 d-ow-d\", \"vbn jj\"],\n  \"shadowy\": [\"sh-ae1 d-ow iy\", \"jj\"],\n  \"shady\": [\"sh-ey1 d-iy\", \"jj\"],\n  \"shaft\": [\"sh-ae1-f-t\", \"nn\"],\n  \"shaggy\": [\"sh-ae1 g-iy\", \"jj\"],\n  \"shake\": [\"sh-ey1-k\", \"vb nn vbp\"],\n  \"shaken\": [\"sh-ey1 k-ah-n\", \"vbn jj\"],\n  \"shakeout\": [\"sh-ey1-k aw-t\", \"nn\"],\n  \"shaker\": [\"sh-ey1 k-er\", \"nn\"],\n  \"shakeup\": [\"sh-ey1-k ah-p\", \"nn\"],\n  \"shaky\": [\"sh-ey1 k-iy\", \"jj\"],\n  \"shall\": [\"sh-ae1-l\", \"md\"],\n  \"shallow\": [\"sh-ae1 l-ow\", \"jj nn\"],\n  \"shallower\": [\"sh-ae1 l-ow er\", \"jjr\"],\n  \"shallowness\": [\"sh-ae1 l-ow n-ah-s\", \"nn\"],\n  \"sham\": [\"sh-ae1-m\", \"nn jj\"],\n  \"shambles\": [\"sh-ae1-m b-ah-l-z\", \"nn\"],\n  \"shame\": [\"sh-ey1-m\", \"nn vb\"],\n  \"shameful\": [\"sh-ey1-m f-ah-l\", \"jj\"],\n  \"shameless\": [\"sh-ey1-m l-ah-s\", \"jj\"],\n  \"shamelessly\": [\"sh-ey1-m l-ah-s l-iy\", \"rb\"],\n  \"shampoo\": [\"sh-ae-m p-uw1\", \"nn vb\"],\n  \"shamrock\": [\"sh-ae1-m r-aa-k\", \"nn\"],\n  \"shanty\": [\"sh-ae1-n t-iy\", \"nn\"],\n  \"shantytown\": [\"sh-ae1-n t-iy t-aw-n\", \"nn\"],\n  \"shape\": [\"sh-ey1-p\", \"nn vbp vb\"],\n  \"shaped\": [\"sh-ey1-p-t\", \"vbn vbd jj\"],\n  \"shapeless\": [\"sh-ey1-p l-ah-s\", \"jj\"],\n  \"shapely\": [\"sh-ey1-p l-iy\", \"jj\"],\n  \"shard\": [\"sh-aa1-r-d\", \"nn\"],\n  \"share\": [\"sh-eh1-r\", \"nn vbp jj vb\"],\n  \"sharecropper\": [\"sh-eh1-r k-r-aa p-er\", \"nn\"],\n  \"shared\": [\"sh-eh1-r-d\", \"vbn jj vbd\"],\n  \"shareholder\": [\"sh-eh1-r hh-ow-l d-er\", \"nn\"],\n  \"shareholding\": [\"sh-eh1-r hh-ow-l d-ih-ng\", \"nn\"],\n  \"shareowner\": [\"sh-eh1 r-ow n-er\", \"nn\"],\n  \"shark\": [\"sh-aa1-r-k\", \"nn\"],\n  \"sharp\": [\"sh-aa1-r-p\", \"jj\"],\n  \"sharpen\": [\"sh-aa1-r p-ah-n\", \"vb\"],\n  \"sharper\": [\"sh-aa1-r p-er\", \"jjr rbr\"],\n  \"sharpest\": [\"sh-aa1-r p-ah-s-t\", \"jjs\"],\n  \"sharply\": [\"sh-aa1-r-p l-iy\", \"rb\"],\n  \"sharpness\": [\"sh-aa1-r-p n-ah-s\", \"nn\"],\n  \"sharpshooter\": [\"sh-aa1-r-p sh-uw t-er\", \"nn\"],\n  \"shatter\": [\"sh-ae1 t-er\", \"vb\"],\n  \"shattered\": [\"sh-ae1 t-er-d\", \"vbn jj vbd\"],\n  \"shattering\": [\"sh-ae1 t-er ih-ng\", \"vbg jj\"],\n  \"shatterproof\": [\"sh-ae1 t-er p-r-uw-f\", \"jj\"],\n  \"shave\": [\"sh-ey1-v\", \"vb vbp nn\"],\n  \"shaven\": [\"sh-ey1 v-ah-n\", \"jj\"],\n  \"shaver\": [\"sh-ey1 v-er\", \"nn\"],\n  \"shawl\": [\"sh-ao1-l\", \"nn\"],\n  \"she\": [\"sh-iy1\", \"prp\"],\n  \"sheaf\": [\"sh-iy1-f\", \"nn\"],\n  \"shear\": [\"sh-ih1-r\", \"vb\"],\n  \"sheath\": [\"sh-iy1-th\", \"nn\"],\n  \"shed\": [\"sh-eh1-d\", \"vb vbd vbn vbp nn\"],\n  \"sheen\": [\"sh-iy1-n\", \"nn\"],\n  \"sheep\": [\"sh-iy1-p\", \"nn\"],\n  \"sheepish\": [\"sh-iy1 p-ih-sh\", \"jj\"],\n  \"sheepskin\": [\"sh-iy1-p s-k-ih-n\", \"nn\"],\n  \"sheer\": [\"sh-ih1-r\", \"jj nn\"],\n  \"sheet\": [\"sh-iy1-t\", \"nn\"],\n  \"sheik\": [\"sh-iy1-k\", \"nn\"],\n  \"shelf\": [\"sh-eh1-l-f\", \"nn\"],\n  \"shell\": [\"sh-eh1-l\", \"nn jj vb\"],\n  \"shelled\": [\"sh-eh1-l-d\", \"vbd vbn jj\"],\n  \"shellfish\": [\"sh-eh1-l f-ih-sh\", \"nn\"],\n  \"shellshocked\": [\"sh-eh1-l sh-aa-k-t\", \"jj\"],\n  \"shelter\": [\"sh-eh1-l t-er\", \"nn vb\"],\n  \"sheltered\": [\"sh-eh1-l t-er-d\", \"vbn jj\"],\n  \"shelve\": [\"sh-eh1-l-v\", \"vb\"],\n  \"shelved\": [\"sh-eh1-l-v-d\", \"vbd vbn\"],\n  \"shelving\": [\"sh-eh1-l v-ih-ng\", \"nn\"],\n  \"shenanigan\": [\"sh-ah n-ae1 n-ih g-ah-n\", \"nn\"],\n  \"shepherd\": [\"sh-eh1 p-er-d\", \"nn vb\"],\n  \"sherbet\": [\"sh-er1 b-ah-t\", \"nn\"],\n  \"sheriff\": [\"sh-eh1 r-ah-f\", \"nn\"],\n  \"sherry\": [\"sh-eh1 r-iy\", \"nn\"],\n  \"shield\": [\"sh-iy1-l-d\", \"nn vb\"],\n  \"shift\": [\"sh-ih1-f-t\", \"nn vb vbp\"],\n  \"shifting\": [\"sh-ih1-f t-ih-ng\", \"vbg jj nn\"],\n  \"shifty\": [\"sh-ih1-f t-iy\", \"jj\"],\n  \"shill\": [\"sh-ih1-l\", \"nn\"],\n  \"shilling\": [\"sh-ih1 l-ih-ng\", \"nn\"],\n  \"shim\": [\"sh-ih1-m\", \"vb\"],\n  \"shimmer\": [\"sh-ih1 m-er\", \"nn vb\"],\n  \"shimmering\": [\"sh-ih1 m-er ih-ng\", \"vbg jj\"],\n  \"shimmy\": [\"sh-ih1 m-iy\", \"vb vbp\"],\n  \"shin\": [\"sh-ih1-n\", \"nn\"],\n  \"shinbone\": [\"sh-ih1-n b-ow-n\", \"nn\"],\n  \"shine\": [\"sh-ay1-n\", \"nn vbp vb\"],\n  \"shingle\": [\"sh-ih1-ng g-ah-l\", \"nn\"],\n  \"shining\": [\"sh-ay1 n-ih-ng\", \"vbg jj\"],\n  \"shiny\": [\"sh-ay1 n-iy\", \"jj\"],\n  \"ship\": [\"sh-ih1-p\", \"nn vbp vb\"],\n  \"shipboard\": [\"sh-ih1-p b-ao-r-d\", \"nn jj\"],\n  \"shipbuilder\": [\"sh-ih1-p b-ih-l d-er\", \"nn\"],\n  \"shipbuilding\": [\"sh-ih1-p b-ih-l d-ih-ng\", \"nn\"],\n  \"shipload\": [\"sh-ih1-p l-ow-d\", \"nn\"],\n  \"shipmate\": [\"sh-ih1-p m-ey-t\", \"nn\"],\n  \"shipment\": [\"sh-ih1-p m-ah-n-t\", \"nn\"],\n  \"shipowner\": [\"sh-ih1-p ow n-er\", \"nn\"],\n  \"shipped\": [\"sh-ih1-p-t\", \"vbn jj vbd\"],\n  \"shipper\": [\"sh-ih1 p-er\", \"nn\"],\n  \"shipshape\": [\"sh-ih1-p sh-ey-p\", \"jj\"],\n  \"shipyard\": [\"sh-ih1-p y-aa-r-d\", \"nn\"],\n  \"shirk\": [\"sh-er1-k\", \"vb\"],\n  \"shirt\": [\"sh-er1-t\", \"nn\"],\n  \"shirtsleeve\": [\"sh-er1-t s-l-iy-v\", \"nn\"],\n  \"shit\": [\"sh-ih1-t\", \"nn\"],\n  \"shiver\": [\"sh-ih1 v-er\", \"nn vb\"],\n  \"shoal\": [\"sh-ow1-l\", \"nn\"],\n  \"shock\": [\"sh-aa1-k\", \"nn vb\"],\n  \"shocked\": [\"sh-aa1-k-t\", \"vbn vbd jj\"],\n  \"shocker\": [\"sh-aa1 k-er\", \"nn\"],\n  \"shocking\": [\"sh-aa1 k-ih-ng\", \"jj vbg\"],\n  \"shockingly\": [\"sh-aa1 k-ih-ng l-iy\", \"rb\"],\n  \"shod\": [\"sh-aa1-d\", \"jj\"],\n  \"shoddy\": [\"sh-aa1 d-iy\", \"jj\"],\n  \"shoe\": [\"sh-uw1\", \"nn\"],\n  \"shoehorn\": [\"sh-uw1-hh-ao-r-n\", \"vb\"],\n  \"shoelace\": [\"sh-uw1 l-ey-s\", \"nn\"],\n  \"shoemaker\": [\"sh-uw1 m-ey k-er\", \"nn\"],\n  \"shoestring\": [\"sh-uw1 s-t-r-ih-ng\", \"nn\"],\n  \"shone\": [\"sh-ow1-n\", \"vbd vbn\"],\n  \"shoo\": [\"sh-uw1\", \"vb\"],\n  \"shook\": [\"sh-uh1-k\", \"vbd nn vbn\"],\n  \"shoot\": [\"sh-uw1-t\", \"vb nn vbp\"],\n  \"shooter\": [\"sh-uw1 t-er\", \"nn\"],\n  \"shooting\": [\"sh-uw1 t-ih-ng\", \"nn vbg\"],\n  \"shootout\": [\"sh-uw1-t aw-t\", \"nn\"],\n  \"shop\": [\"sh-aa1-p\", \"nn vb vbp\"],\n  \"shopkeeper\": [\"sh-aa1-p k-iy p-er\", \"nn\"],\n  \"shoplifting\": [\"sh-aa1-p l-ih-f t-ih-ng\", \"nn\"],\n  \"shopper\": [\"sh-aa1 p-er\", \"nn\"],\n  \"shopping\": [\"sh-aa1 p-ih-ng\", \"nn jj vbg\"],\n  \"shopworn\": [\"sh-aa1-p w-ao-r-n\", \"jj\"],\n  \"shore\": [\"sh-ao1-r\", \"nn jj rb vb\"],\n  \"shoreline\": [\"sh-ao1-r l-ay-n\", \"nn\"],\n  \"shorn\": [\"sh-ao1-r-n\", \"vb\"],\n  \"short\": [\"sh-ao1-r-t\", \"jj nn rb vb\"],\n  \"shortage\": [\"sh-ao1-r t-ah-jh\", \"nn\"],\n  \"shortcake\": [\"sh-ao1-r-t k-ey-k\", \"nn\"],\n  \"shortchange\": [\"sh-ao-r-t-ch-ey1-n-jh\", \"vb\"],\n  \"shortcoming\": [\"sh-ao1-r-t k-ah m-ih-ng\", \"nn\"],\n  \"shortcut\": [\"sh-ao1-r-t k-ah-t\", \"nn\"],\n  \"shorten\": [\"sh-ao1-r t-ah-n\", \"vb vbp\"],\n  \"shortened\": [\"sh-ao1-r t-ah-n-d\", \"vbn jj\"],\n  \"shorter\": [\"sh-ao1-r t-er\", \"jjr\"],\n  \"shortest\": [\"sh-ao1-r t-ih-s-t\", \"jjs\"],\n  \"shortfall\": [\"sh-ao1-r-t f-ao-l\", \"nn\"],\n  \"shorthand\": [\"sh-ao1-r-t hh-ae-n-d\", \"nn\"],\n  \"shortlived\": [\"sh-ao1-r-t l-ih1-v-d\", \"jj\"],\n  \"shortly\": [\"sh-ao1-r-t l-iy\", \"rb\"],\n  \"shortness\": [\"sh-ao1-r-t n-ah-s\", \"nn\"],\n  \"shortsighted\": [\"sh-ao1-r-t s-ay1 t-ih-d\", \"jj\"],\n  \"shortsightedness\": [\"sh-ao1-r-t s-ay1 t-ih-d n-ih-s\", \"nn\"],\n  \"shortstop\": [\"sh-ao1-r-t s-t-aa-p\", \"nn\"],\n  \"shortterm\": [\"sh-ao1-r-t t-er-m\", \"jj\"],\n  \"shot\": [\"sh-aa1-t\", \"nn vbd vbn\"],\n  \"shotgun\": [\"sh-aa1-t g-ah-n\", \"nn jj\"],\n  \"should\": [\"sh-uh1-d\", \"md vbd\"],\n  \"shouldn't\": [\"sh-uh1-d-ah-n-t\", \"md\"],\n  \"shoulder\": [\"sh-ow1-l d-er\", \"nn vbp rb vb\"],\n  \"shout\": [\"sh-aw1-t\", \"vb vbp nn\"],\n  \"shove\": [\"sh-ah1-v\", \"vb nn\"],\n  \"shovel\": [\"sh-ah1 v-ah-l\", \"nn vb\"],\n  \"show\": [\"sh-ow1\", \"nn vb vbp\"],\n  \"showcase\": [\"sh-ow1 k-ey-s\", \"nn vb\"],\n  \"showdown\": [\"sh-ow1 d-aw-n\", \"nn\"],\n  \"shower\": [\"sh-aw1 er\", \"nn vb vbp\"],\n  \"showman\": [\"sh-ow1 m-ah-n\", \"nn\"],\n  \"showmanship\": [\"sh-ow1 m-ah-n sh-ih-p\", \"nn\"],\n  \"shown\": [\"sh-ow1-n\", \"vbn vbd\"],\n  \"showpiece\": [\"sh-ow1 p-iy-s\", \"nn\"],\n  \"showroom\": [\"sh-ow1 r-uh-m\", \"nn\"],\n  \"showy\": [\"sh-ow1 iy\", \"jj\"],\n  \"shrank\": [\"sh-r-ae1-ng-k\", \"vbd\"],\n  \"shrapnel\": [\"sh-r-ae1-p n-ah-l\", \"nn\"],\n  \"shred\": [\"sh-r-eh1-d\", \"nn vb\"],\n  \"shredded\": [\"sh-r-eh1 d-ah-d\", \"jj vbd\"],\n  \"shredder\": [\"sh-r-eh1 d-er\", \"nn\"],\n  \"shrewd\": [\"sh-r-uw1-d\", \"jj\"],\n  \"shrewdest\": [\"sh-r-uw1 d-ah-s-t\", \"jjs\"],\n  \"shrewdly\": [\"sh-r-uw1-d l-iy\", \"rb\"],\n  \"shriek\": [\"sh-r-iy1-k\", \"nn vb\"],\n  \"shrieking\": [\"sh-r-iy1 k-ih-ng\", \"nn\"],\n  \"shrift\": [\"sh-r-ih1-f-t\", \"nn\"],\n  \"shrill\": [\"sh-r-ih1-l\", \"jj\"],\n  \"shrimp\": [\"sh-r-ih1-m-p\", \"nn\"],\n  \"shrine\": [\"sh-r-ay1-n\", \"nn\"],\n  \"shrink\": [\"sh-r-ih1-ng-k\", \"vb nn\"],\n  \"shrinkage\": [\"sh-r-ih1-ng k-ih-jh\", \"nn\"],\n  \"shrivel\": [\"sh-r-ih1 v-ah-l\", \"vb\"],\n  \"shriveled\": [\"sh-r-ih1 v-ah-l-d\", \"vbn vbd jj\"],\n  \"shroud\": [\"sh-r-aw1-d\", \"nn vb\"],\n  \"shrub\": [\"sh-r-ah1-b\", \"nn\"],\n  \"shrubbery\": [\"sh-r-ah1 b-er iy\", \"nn\"],\n  \"shrug\": [\"sh-r-ah1-g\", \"vb nn vbp\"],\n  \"shrunk\": [\"sh-r-ah1-ng-k\", \"vbn\"],\n  \"shrunken\": [\"sh-r-ah1-ng k-ah-n\", \"jj vbn\"],\n  \"shuck\": [\"sh-ah1-k\", \"vb\"],\n  \"shudder\": [\"sh-ah1 d-er\", \"vb vbp\"],\n  \"shuddering\": [\"sh-ah1 d-er ih-ng\", \"vbg jj\"],\n  \"shuffle\": [\"sh-ah1 f-ah-l\", \"nn vb vbp\"],\n  \"shun\": [\"sh-ah1-n\", \"vb vbp\"],\n  \"shut\": [\"sh-ah1-t\", \"vbn vbd jj nn vb\"],\n  \"shutdown\": [\"sh-ah1-t d-aw-n\", \"nn\"],\n  \"shute\": [\"sh-uw1-t\", \"vb\"],\n  \"shutout\": [\"sh-ah1-t aw-t\", \"nn\"],\n  \"shutter\": [\"sh-ah1 t-er\", \"nn vb\"],\n  \"shuttered\": [\"sh-ah1 t-er-d\", \"jj vbd vbn\"],\n  \"shuttle\": [\"sh-ah1 t-ah-l\", \"nn vb\"],\n  \"shy\": [\"sh-ay1\", \"jj nn rb vb vbp\"],\n  \"shyly\": [\"sh-ay1 l-iy\", \"rb\"],\n  \"sibling\": [\"s-ih1 b-l-ih-ng\", \"nn\"],\n  \"sic\": [\"s-ih1-k\", \"vb\"],\n  \"sick\": [\"s-ih1-k\", \"jj\"],\n  \"sicken\": [\"s-ih1-k-ah-n\", \"vb\"],\n  \"sickened\": [\"s-ih1 k-ah-n-d\", \"vbn vbd jj\"],\n  \"sickening\": [\"s-ih1 k-ah n-ih-ng\", \"jj\"],\n  \"sicker\": [\"s-ih1 k-er\", \"jjr\"],\n  \"sickle\": [\"s-ih1 k-ah-l\", \"jj\"],\n  \"sickly\": [\"s-ih1-k l-iy\", \"jj\"],\n  \"sickness\": [\"s-ih1-k n-ah-s\", \"nn\"],\n  \"side\": [\"s-ay1-d\", \"nn vbp jj rb vb\"],\n  \"sidekick\": [\"s-ay1-d k-ih-k\", \"nn\"],\n  \"sideline\": [\"s-ay1-d l-ay-n\", \"nn vb\"],\n  \"sidelined\": [\"s-ay1-d l-ay-n-d\", \"vbn jj\"],\n  \"sideman\": [\"s-ay1-d m-ae-n\", \"nn\"],\n  \"sideshow\": [\"s-ay1-d sh-ow\", \"nn\"],\n  \"sidestep\": [\"s-ay1-d s-t-eh-p\", \"vb vbp\"],\n  \"sidetrack\": [\"s-ay1-d t-r-ae-k\", \"vb\"],\n  \"sidewalk\": [\"s-ay1-d w-ao-k\", \"nn\"],\n  \"sideways\": [\"s-ay1-d w-ey-z\", \"rb jj\"],\n  \"sidewinder\": [\"s-ay1-d w-ay-n d-er\", \"nn\"],\n  \"sidewise\": [\"s-ay1-d w-ay-z\", \"rb jj\"],\n  \"sidle\": [\"s-ay1 d-ah-l\", \"vb\"],\n  \"siege\": [\"s-iy1-jh\", \"nn\"],\n  \"sieve\": [\"s-ih1-v\", \"nn\"],\n  \"sift\": [\"s-ih1-f-t\", \"vb vbp\"],\n  \"sifting\": [\"s-ih1-f t-ih-ng\", \"nn\"],\n  \"sigh\": [\"s-ay1\", \"nn vb vbp\"],\n  \"sight\": [\"s-ay1-t\", \"nn vb\"],\n  \"sighting\": [\"s-ay1 t-ih-ng\", \"nn\"],\n  \"sightseeing\": [\"s-ay1-t s-iy1 ih-ng\", \"nn\"],\n  \"sign\": [\"s-ay1-n\", \"nn vbp vb\"],\n  \"signal\": [\"s-ih1-g n-ah-l\", \"nn vb vbp\"],\n  \"signatory\": [\"s-ih1-g n-ah t-ao r-iy\", \"jj nn\"],\n  \"signature\": [\"s-ih1-g n-ah ch-er\", \"nn\"],\n  \"signed\": [\"s-ay1-n-d\", \"vbd jj vbn\"],\n  \"signer\": [\"s-ay1 n-er\", \"nn\"],\n  \"significance\": [\"s-ah-g n-ih1 f-ih k-ah-n-s\", \"nn\"],\n  \"significant\": [\"s-ah-g n-ih1 f-ih k-ah-n-t\", \"jj\"],\n  \"significantly\": [\"s-ih-g n-ih1 f-ih k-ah-n-t l-iy\", \"rb\"],\n  \"signify\": [\"s-ih1-g n-ah f-ay\", \"vb\"],\n  \"signpost\": [\"s-ay1-n p-ow-s-t\", \"nn\"],\n  \"silence\": [\"s-ay1 l-ah-n-s\", \"nn vb\"],\n  \"silent\": [\"s-ay1 l-ah-n-t\", \"jj\"],\n  \"silently\": [\"s-ay1 l-ah-n-t l-iy\", \"rb\"],\n  \"silhouette\": [\"s-ih l-ah-w eh1-t\", \"nn\"],\n  \"silica\": [\"s-ih1 l-ah k-ah\", \"nn\"],\n  \"silicate\": [\"s-ih1 l-ah k-ah-t\", \"nn\"],\n  \"silicon\": [\"s-ih1 l-ah k-ah-n\", \"nn\"],\n  \"silicone\": [\"s-ih1 l-ah k-ow-n\", \"nn\"],\n  \"silk\": [\"s-ih1-l-k\", \"nn\"],\n  \"silky\": [\"s-ih1-l k-iy\", \"jj\"],\n  \"sill\": [\"s-ih1-l\", \"nn\"],\n  \"sillier\": [\"s-ih1 l-iy er\", \"jjr\"],\n  \"silliest\": [\"s-ih1 l-iy ah-s-t\", \"jjs\"],\n  \"silliness\": [\"s-ih1 l-iy n-ah-s\", \"nn\"],\n  \"silly\": [\"s-ih1 l-iy\", \"jj nn rb\"],\n  \"silo\": [\"s-ay1 l-ow\", \"nn\"],\n  \"silver\": [\"s-ih1-l v-er\", \"nn jj\"],\n  \"silverware\": [\"s-ih1-l v-er w-eh-r\", \"nn\"],\n  \"silvery\": [\"s-ih1-l v-er iy\", \"jj\"],\n  \"simian\": [\"s-ih1 m-iy ah-n\", \"jj\"],\n  \"similar\": [\"s-ih1 m-ah l-er\", \"jj\"],\n  \"similarity\": [\"s-ih m-ah l-eh1 r-ah t-iy\", \"nn\"],\n  \"similarly\": [\"s-ih1 m-ah l-er l-iy\", \"rb\"],\n  \"simile\": [\"s-ih1 m-ah l-iy\", \"nn\"],\n  \"similiar\": [\"s-ih m-ih1 l-aa-r\", \"jj\"],\n  \"simmer\": [\"s-ih1 m-er\", \"vb vbp\"],\n  \"simple\": [\"s-ih1-m p-ah-l\", \"jj nn\"],\n  \"simpler\": [\"s-ih1-m p-ah l-er\", \"jjr rbr\"],\n  \"simplest\": [\"s-ih1-m p-l-ah-s-t\", \"jjs\"],\n  \"simplicity\": [\"s-ih-m p-l-ih1 s-ah t-iy\", \"nn\"],\n  \"simplification\": [\"s-ih-m p-l-ah f-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"simplified\": [\"s-ih1-m p-l-ah f-ay-d\", \"jj vbn\"],\n  \"simplify\": [\"s-ih1-m p-l-ah f-ay\", \"vb vbp\"],\n  \"simplistic\": [\"s-ih-m p-l-ih1 s-t-ih-k\", \"jj\"],\n  \"simply\": [\"s-ih1-m p-l-iy\", \"rb jj\"],\n  \"simulate\": [\"s-ih1 m-y-ah l-ah-t\", \"vb vbp\"],\n  \"simulated\": [\"s-ih1 m-y-ah l-ey t-ih-d\", \"vbn jj\"],\n  \"simulation\": [\"s-ih m-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"simulator\": [\"s-ih1 m-y-ah l-ey t-er\", \"nn\"],\n  \"simultaneous\": [\"s-ay m-ah-l t-ey1 n-iy ah-s\", \"jj\"],\n  \"simultaneously\": [\"s-ay m-ah-l t-ey1 n-iy ah-s l-iy\", \"rb\"],\n  \"sin\": [\"s-ih1-n\", \"nn vbp vb\"],\n  \"since\": [\"s-ih1-n-s\", \"in rb\"],\n  \"sincere\": [\"s-ih-n s-ih1-r\", \"jj\"],\n  \"sincerely\": [\"s-ih-n s-ih1-r l-iy\", \"rb\"],\n  \"sincerity\": [\"s-ih-n s-eh1 r-ah t-iy\", \"nn\"],\n  \"sine\": [\"s-ay1-n\", \"nn\"],\n  \"sinewy\": [\"s-ih1 n-y-uw iy\", \"jj\"],\n  \"sinful\": [\"s-ih1-n f-ah-l\", \"jj\"],\n  \"sing\": [\"s-ih1-ng\", \"vb vbp\"],\n  \"singer\": [\"s-ih1 ng-er\", \"nn\"],\n  \"singing\": [\"s-ih1 ng-ih-ng\", \"vbg jj nn\"],\n  \"single\": [\"s-ih1-ng g-ah-l\", \"jj vbp nn rb vb\"],\n  \"singlehandedly\": [\"s-ih-ng g-ah-l hh-ae1-n d-ih-d l-iy\", \"rb\"],\n  \"singly\": [\"s-ih1-ng g-l-iy\", \"rb\"],\n  \"singular\": [\"s-ih1-ng g-y-ah l-er\", \"jj nn\"],\n  \"singularly\": [\"s-ih1-ng g-y-ah l-er l-iy\", \"rb\"],\n  \"sinister\": [\"s-ih1 n-ih s-t-er\", \"jj\"],\n  \"sink\": [\"s-ih1-ng-k\", \"vb vbp nn\"],\n  \"sinkhole\": [\"s-ih1-ng-k hh-ow-l\", \"nn\"],\n  \"sinking\": [\"s-ih1-ng k-ih-ng\", \"vbg jj\"],\n  \"sinner\": [\"s-ih1 n-er\", \"nn\"],\n  \"sinning\": [\"s-ih1 n-ih-ng\", \"nn\"],\n  \"sinuous\": [\"s-ih1 n-w-ah-s\", \"jj\"],\n  \"sinus\": [\"s-ay1 n-ah-s\", \"nn\"],\n  \"sip\": [\"s-ih1-p\", \"nn\"],\n  \"siphon\": [\"s-ay1 f-ah-n\", \"vb\"],\n  \"sipped\": [\"s-ih1-p-t\", \"vbd\"],\n  \"sir\": [\"s-er1\", \"nn uh\"],\n  \"siren\": [\"s-ay1 r-ah-n\", \"jj nn\"],\n  \"sister\": [\"s-ih1 s-t-er\", \"nn jj\"],\n  \"sit\": [\"s-ih1-t\", \"vb vbp\"],\n  \"sitcom\": [\"s-ih1-t k-aa-m\", \"nn\"],\n  \"site\": [\"s-ay1-t\", \"nn\"],\n  \"sitter\": [\"s-ih1 t-er\", \"nn\"],\n  \"sitting\": [\"s-ih1 t-ih-ng\", \"vbg jj\"],\n  \"situate\": [\"s-ih1-ch-uw-ey-t\", \"vb\"],\n  \"situation\": [\"s-ih ch-uw ey1 sh-ah-n\", \"nn\"],\n  \"six\": [\"s-ih1-k-s\", \"cd\"],\n  \"sixth\": [\"s-ih1-k-s-th\", \"jj rb\"],\n  \"sizable\": [\"s-ay1 z-ah b-ah-l\", \"jj\"],\n  \"size\": [\"s-ay1-z\", \"nn vbp vb\"],\n  \"sizeable\": [\"s-ay1 z-ah b-ah-l\", \"jj\"],\n  \"sized\": [\"s-ay1-z-d\", \"vbd jj vbn\"],\n  \"sizing\": [\"s-ay1 z-ih-ng\", \"nn\"],\n  \"sizzle\": [\"s-ih1 z-ah-l\", \"nn vb\"],\n  \"sizzling\": [\"s-ih1 z-ah-l ih-ng\", \"jj vbg\"],\n  \"skate\": [\"s-k-ey1-t\", \"vb\"],\n  \"skeet\": [\"s-k-iy1-t\", \"nn\"],\n  \"skeletal\": [\"s-k-eh1 l-ah t-ah-l\", \"jj\"],\n  \"skeleton\": [\"s-k-eh1 l-ah t-ah-n\", \"nn jj\"],\n  \"skeptic\": [\"s-k-eh1-p t-ih-k\", \"nn\"],\n  \"skeptical\": [\"s-k-eh1-p t-ah k-ah-l\", \"jj\"],\n  \"skeptically\": [\"s-k-eh1-p t-ih k-ah l-iy\", \"rb\"],\n  \"skepticism\": [\"s-k-eh1-p t-ih s-ih z-ah-m\", \"nn\"],\n  \"sketch\": [\"s-k-eh1-ch\", \"nn vb\"],\n  \"sketchbook\": [\"s-k-eh1-ch b-uh-k\", \"nn\"],\n  \"sketchy\": [\"s-k-eh1 ch-iy\", \"jj\"],\n  \"skew\": [\"s-k-y-uw1\", \"vb\"],\n  \"skewed\": [\"s-k-y-uw1-d\", \"vbn vbd jj\"],\n  \"skewer\": [\"s-k-y-uw1 er\", \"nn\"],\n  \"ski\": [\"s-k-iy1\", \"nn jj vb vbp\"],\n  \"skid\": [\"s-k-ih1-d\", \"vb\"],\n  \"skier\": [\"s-k-ay1-r\", \"nn\"],\n  \"skiff\": [\"s-k-ih1-f\", \"nn\"],\n  \"skill\": [\"s-k-ih1-l\", \"nn vb\"],\n  \"skilled\": [\"s-k-ih1-l-d\", \"jj vbn\"],\n  \"skillet\": [\"s-k-ih1 l-ah-t\", \"nn\"],\n  \"skillful\": [\"s-k-ih1-l f-ah-l\", \"jj\"],\n  \"skillfully\": [\"s-k-ih1-l f-ah l-iy\", \"rb\"],\n  \"skim\": [\"s-k-ih1-m\", \"vb vbp jj\"],\n  \"skimmer\": [\"s-k-ih1 m-er\", \"nn\"],\n  \"skimp\": [\"s-k-ih1-m-p\", \"vb\"],\n  \"skimpy\": [\"s-k-ih1-m p-iy\", \"jj\"],\n  \"skin\": [\"s-k-ih1-n\", \"nn\"],\n  \"skinhead\": [\"s-k-ih1-n hh-eh-d\", \"nn\"],\n  \"skinless\": [\"s-k-ih1-n l-ah-s\", \"jj\"],\n  \"skinny\": [\"s-k-ih1 n-iy\", \"jj\"],\n  \"skip\": [\"s-k-ih1-p\", \"vb vbp\"],\n  \"skipper\": [\"s-k-ih1 p-er\", \"nn vb\"],\n  \"skirmish\": [\"s-k-er1 m-ih-sh\", \"nn vb\"],\n  \"skirt\": [\"s-k-er1-t\", \"nn vb vbp\"],\n  \"skit\": [\"s-k-ih1-t\", \"nn\"],\n  \"skittish\": [\"s-k-ih1 t-ih-sh\", \"jj\"],\n  \"skittishness\": [\"s-k-ih1 t-ih-sh n-ah-s\", \"nn\"],\n  \"skull\": [\"s-k-ah1-l\", \"nn\"],\n  \"skunk\": [\"s-k-ah1-ng-k\", \"nn\"],\n  \"sky\": [\"s-k-ay1\", \"nn\"],\n  \"skylight\": [\"s-k-ay1 l-ay-t\", \"nn\"],\n  \"skyline\": [\"s-k-ay1 l-ay-n\", \"nn\"],\n  \"skyrocket\": [\"s-k-ay1 r-aa k-ah-t\", \"vb\"],\n  \"skyscraper\": [\"s-k-ay1 s-k-r-ey p-er\", \"nn\"],\n  \"skyward\": [\"s-k-ay1 w-er-d\", \"rb\"],\n  \"skywave\": [\"s-k-ay1 w-ey-v\", \"nn\"],\n  \"slab\": [\"s-l-ae1-b\", \"nn jj\"],\n  \"slack\": [\"s-l-ae1-k\", \"jj vb nn\"],\n  \"slacken\": [\"s-l-ae1 k-ah-n\", \"vb\"],\n  \"slackened\": [\"s-l-ae1 k-ah-n-d\", \"vbd jj vbn\"],\n  \"slag\": [\"s-l-ae1-g\", \"nn\"],\n  \"slain\": [\"s-l-ey1-n\", \"vbn\"],\n  \"slam\": [\"s-l-ae1-m\", \"nn vbp vb\"],\n  \"slammer\": [\"s-l-ae1 m-er\", \"nn\"],\n  \"slander\": [\"s-l-ae1-n d-er\", \"nn vb\"],\n  \"slanderous\": [\"s-l-ae1-n d-er ah-s\", \"jj\"],\n  \"slang\": [\"s-l-ae1-ng\", \"nn\"],\n  \"slant\": [\"s-l-ae1-n-t\", \"nn vb\"],\n  \"slanted\": [\"s-l-ae1-n t-ah-d\", \"vbn vbd jj\"],\n  \"slanting\": [\"s-l-ae1-n t-ih-ng\", \"vbg jj\"],\n  \"slap\": [\"s-l-ae1-p\", \"vb nn\"],\n  \"slapping\": [\"s-l-ae1 p-ih-ng\", \"vbg jj nn\"],\n  \"slapstick\": [\"s-l-ae1-p s-t-ih-k\", \"nn jj\"],\n  \"slash\": [\"s-l-ae1-sh\", \"vb nn vbp\"],\n  \"slasher\": [\"s-l-ae1 sh-er\", \"nn\"],\n  \"slat\": [\"s-l-ae1-t\", \"nn\"],\n  \"slate\": [\"s-l-ey1-t\", \"nn jj vb\"],\n  \"slaughter\": [\"s-l-ao1 t-er\", \"nn vb vbp\"],\n  \"slaughterhouse\": [\"s-l-ao1 t-er hh-aw-s\", \"nn\"],\n  \"slave\": [\"s-l-ey1-v\", \"nn\"],\n  \"slavery\": [\"s-l-ey1 v-er iy\", \"nn\"],\n  \"slavish\": [\"s-l-ey1 v-ih-sh\", \"jj\"],\n  \"slavishly\": [\"s-l-ae1 v-ih-sh l-iy\", \"rb\"],\n  \"slay\": [\"s-l-ey1\", \"vb\"],\n  \"slaying\": [\"s-l-ey1 ih-ng\", \"nn vbg\"],\n  \"sleaze\": [\"s-l-iy1-z\", \"nn\"],\n  \"sleazy\": [\"s-l-iy1 z-iy\", \"jj\"],\n  \"sled\": [\"s-l-eh1-d\", \"vb\"],\n  \"sleek\": [\"s-l-iy1-k\", \"jj\"],\n  \"sleep\": [\"s-l-iy1-p\", \"vb nn vbp\"],\n  \"sleeper\": [\"s-l-iy1 p-er\", \"nn\"],\n  \"sleepily\": [\"s-l-iy1 p-ah l-iy\", \"rb\"],\n  \"sleepless\": [\"s-l-iy1-p l-ah-s\", \"jj\"],\n  \"sleepwalk\": [\"s-l-iy1-p-w-ao-k\", \"vb\"],\n  \"sleepwalker\": [\"s-l-iy1-p w-ao k-er\", \"nn\"],\n  \"sleepy\": [\"s-l-iy1 p-iy\", \"jj\"],\n  \"sleet\": [\"s-l-iy1-t\", \"nn\"],\n  \"sleeve\": [\"s-l-iy1-v\", \"nn\"],\n  \"sleight\": [\"s-l-ay1-t\", \"nn\"],\n  \"sleigh\": [\"s-l-ay1\", \"vb\"],\n  \"slender\": [\"s-l-eh1-n d-er\", \"jj\"],\n  \"slept\": [\"s-l-eh1-p-t\", \"vbd vbn\"],\n  \"sleuth\": [\"s-l-uw1-th\", \"nn\"],\n  \"sleuthing\": [\"s-l-uw1 th-ih-ng\", \"nn\"],\n  \"slew\": [\"s-l-uw1\", \"nn\"],\n  \"slice\": [\"s-l-ay1-s\", \"nn vb vbp\"],\n  \"slick\": [\"s-l-ih1-k\", \"jj nn\"],\n  \"slicker\": [\"s-l-ih1 k-er\", \"nn\"],\n  \"slickly\": [\"s-l-ih1-k l-iy\", \"rb\"],\n  \"slid\": [\"s-l-ih1-d\", \"vbd vbn\"],\n  \"slide\": [\"s-l-ay1-d\", \"nn vbp vb\"],\n  \"sliding\": [\"s-l-ay1 d-ih-ng\", \"vbg jj\"],\n  \"slight\": [\"s-l-ay1-t\", \"jj vb vbp nn\"],\n  \"slighted\": [\"s-l-ay1 t-ih-d\", \"jj vbn\"],\n  \"slightest\": [\"s-l-ay1 t-ah-s-t\", \"jjs\"],\n  \"slightly\": [\"s-l-ay1-t l-iy\", \"rb\"],\n  \"slim\": [\"s-l-ih1-m\", \"jj vb\"],\n  \"slime\": [\"s-l-ay1-m\", \"nn\"],\n  \"slimmer\": [\"s-l-ih1 m-er\", \"rb\"],\n  \"slimy\": [\"s-l-ay1 m-iy\", \"jj\"],\n  \"sling\": [\"s-l-ih1-ng\", \"nn vb\"],\n  \"slingshot\": [\"s-l-ih1-ng sh-aa-t\", \"nn\"],\n  \"slinky\": [\"s-l-ih1-ng k-iy\", \"jj\"],\n  \"slip\": [\"s-l-ih1-p\", \"vb nn vbp\"],\n  \"slippage\": [\"s-l-ih1 p-ih-jh\", \"nn\"],\n  \"slipper\": [\"s-l-ih1 p-er\", \"nn\"],\n  \"slippery\": [\"s-l-ih1 p-er iy\", \"jj\"],\n  \"slipshod\": [\"s-l-ih1-p sh-aa-d\", \"jj\"],\n  \"slit\": [\"s-l-ih1-t\", \"nn vb\"],\n  \"slither\": [\"s-l-ih1-dh-er\", \"vb\"],\n  \"sliver\": [\"s-l-ih1 v-er\", \"nn\"],\n  \"slob\": [\"s-l-aa1-b\", \"nn\"],\n  \"slog\": [\"s-l-aa1-g\", \"vb\"],\n  \"sloop\": [\"s-l-uw1-p\", \"nn\"],\n  \"slop\": [\"s-l-aa1-p\", \"nn vb\"],\n  \"slope\": [\"s-l-ow1-p\", \"nn\"],\n  \"sloping\": [\"s-l-ow1 p-ih-ng\", \"vbg jj\"],\n  \"sloppily\": [\"s-l-aa1 p-ah l-iy\", \"rb\"],\n  \"sloppiness\": [\"s-l-aa1 p-iy n-ah-s\", \"nn\"],\n  \"sloppy\": [\"s-l-aa1 p-iy\", \"jj\"],\n  \"slosh\": [\"s-l-aa1-sh\", \"vb\"],\n  \"slot\": [\"s-l-aa1-t\", \"nn\"],\n  \"slotted\": [\"s-l-aa1 t-ih-d\", \"vbn\"],\n  \"slouch\": [\"s-l-aw1-ch\", \"nn vb\"],\n  \"slough\": [\"s-l-ah1-f\", \"vb\"],\n  \"slovenliness\": [\"s-l-ah1 v-ah-n l-iy n-ah-s\", \"nn\"],\n  \"slovenly\": [\"s-l-ah1 v-ah-n l-iy\", \"jj\"],\n  \"slow\": [\"s-l-ow1\", \"jj vbp rb vb\"],\n  \"slowdown\": [\"s-l-ow1 d-aw-n\", \"nn\"],\n  \"slower\": [\"s-l-ow1 er\", \"jjr rbr\"],\n  \"slowest\": [\"s-l-ow1 ah-s-t\", \"jjs\"],\n  \"slowly\": [\"s-l-ow1 l-iy\", \"rb\"],\n  \"slowness\": [\"s-l-ow1 n-ah-s\", \"nn\"],\n  \"sludge\": [\"s-l-ah1-jh\", \"nn\"],\n  \"slug\": [\"s-l-ah1-g\", \"nn vb\"],\n  \"slugfest\": [\"s-l-ah1-g f-eh-s-t\", \"nn jjs\"],\n  \"slugger\": [\"s-l-ah1 g-er\", \"nn\"],\n  \"sluggish\": [\"s-l-ah1 g-ih-sh\", \"jj\"],\n  \"sluggishly\": [\"s-l-ah1 g-ih-sh l-iy\", \"rb\"],\n  \"sluggishness\": [\"s-l-ah1 g-ih-sh n-ah-s\", \"nn\"],\n  \"sluice\": [\"s-l-uw1-s\", \"nn vb\"],\n  \"slum\": [\"s-l-ah1-m\", \"nn\"],\n  \"slumber\": [\"s-l-ah1-m b-er\", \"nn vb\"],\n  \"slump\": [\"s-l-ah1-m-p\", \"nn vbp vb\"],\n  \"slumping\": [\"s-l-ah1-m p-ih-ng\", \"vbg jj\"],\n  \"slung\": [\"s-l-ah1-ng\", \"vbd vbn\"],\n  \"slur\": [\"s-l-er1\", \"nn vb\"],\n  \"slurry\": [\"s-l-er1 iy\", \"nn\"],\n  \"slush\": [\"s-l-ah1-sh\", \"nn\"],\n  \"sly\": [\"s-l-ay1\", \"jj\"],\n  \"slyly\": [\"s-l-ay1 l-iy\", \"rb\"],\n  \"slyness\": [\"s-l-ay1 n-ah-s\", \"nn\"],\n  \"smack\": [\"s-m-ae1-k\", \"rb vb uh vbp\"],\n  \"small\": [\"s-m-ao1-l\", \"jj\"],\n  \"smaller\": [\"s-m-ao1 l-er\", \"jjr rbr\"],\n  \"smallest\": [\"s-m-ao1 l-ah-s-t\", \"jjs\"],\n  \"smallish\": [\"s-m-ao1 l-ih-sh\", \"jj\"],\n  \"smallness\": [\"s-m-ao1-l n-ah-s\", \"nn\"],\n  \"smallpox\": [\"s-m-ao1-l p-aa-k-s\", \"nn\"],\n  \"smarmy\": [\"s-m-aa1-r m-iy\", \"jj\"],\n  \"smart\": [\"s-m-aa1-r-t\", \"jj nn rb vb\"],\n  \"smarter\": [\"s-m-aa1-r t-er\", \"rbr jjr rb\"],\n  \"smartest\": [\"s-m-aa1-r t-ah-s-t\", \"jjs\"],\n  \"smartly\": [\"s-m-aa1-r-t l-iy\", \"rb\"],\n  \"smash\": [\"s-m-ae1-sh\", \"nn vb vbp\"],\n  \"smashed\": [\"s-m-ae1-sh-t\", \"vbd jj vbn\"],\n  \"smasher\": [\"s-m-ae1 sh-er\", \"nn\"],\n  \"smashing\": [\"s-m-ae1 sh-ih-ng\", \"jj vbg\"],\n  \"smattering\": [\"s-m-ae1 t-er ih-ng\", \"nn\"],\n  \"smear\": [\"s-m-ih1-r\", \"nn vb\"],\n  \"smeared\": [\"s-m-ih1-r-d\", \"vbn jj\"],\n  \"smell\": [\"s-m-eh1-l\", \"nn vb vbp\"],\n  \"smelly\": [\"s-m-eh1 l-iy\", \"jj\"],\n  \"smelt\": [\"s-m-eh1-l-t\", \"vbd vbn\"],\n  \"smelter\": [\"s-m-eh1-l t-er\", \"nn\"],\n  \"smile\": [\"s-m-ay1-l\", \"nn vb vbp\"],\n  \"smiling\": [\"s-m-ay1 l-ih-ng\", \"vbg jj nn\"],\n  \"smilingly\": [\"s-m-ay1 l-ih-ng l-iy\", \"rb\"],\n  \"smirk\": [\"s-m-er1-k\", \"nn vb\"],\n  \"smithereens\": [\"s-m-ih dh-er iy1-n-z\", \"nn\"],\n  \"smitten\": [\"s-m-ih1 t-ah-n\", \"vbn\"],\n  \"smock\": [\"s-m-aa1-k\", \"nn\"],\n  \"smog\": [\"s-m-aa1-g\", \"nn\"],\n  \"smoggiest\": [\"s-m-aa1 g-iy ah-s-t\", \"jjs\"],\n  \"smoke\": [\"s-m-ow1-k\", \"nn vb vbp\"],\n  \"smoked\": [\"s-m-ow1-k-t\", \"vbd jj vbn\"],\n  \"smokeless\": [\"s-m-ow1-k l-ah-s\", \"jj\"],\n  \"smoker\": [\"s-m-ow1 k-er\", \"nn\"],\n  \"smokescreen\": [\"s-m-ow1-k s-k-r-iy-n\", \"nn\"],\n  \"smokestack\": [\"s-m-ow1-k s-t-ae-k\", \"nn\"],\n  \"smoky\": [\"s-m-ow1 k-iy\", \"jj\"],\n  \"smolder\": [\"s-m-ow1-l d-er\", \"vb vbp\"],\n  \"smooth\": [\"s-m-uw1-dh\", \"jj vb\"],\n  \"smoother\": [\"s-m-uw1 dh-er\", \"jj rb jjr\"],\n  \"smoothest\": [\"s-m-uw1 dh-ah-s-t\", \"jjs\"],\n  \"smoothly\": [\"s-m-uw1-dh l-iy\", \"rb\"],\n  \"smoothness\": [\"s-m-uw1-dh n-ah-s\", \"nn\"],\n  \"smorgasbord\": [\"s-m-ao1-r g-ah-s b-ao-r-d\", \"nn\"],\n  \"smother\": [\"s-m-ah1 dh-er\", \"vb\"],\n  \"smothered\": [\"s-m-ah1 dh-er-d\", \"vbd vbn jj\"],\n  \"smudge\": [\"s-m-ah1-jh\", \"nn\"],\n  \"smug\": [\"s-m-ah1-g\", \"jj\"],\n  \"smuggle\": [\"s-m-ah1 g-ah-l\", \"vb\"],\n  \"smuggler\": [\"s-m-ah1-g l-er\", \"nn\"],\n  \"snack\": [\"s-n-ae1-k\", \"nn\"],\n  \"snafu\": [\"s-n-ae1 f-uw\", \"nn\"],\n  \"snag\": [\"s-n-ae1-g\", \"nn vb\"],\n  \"snail\": [\"s-n-ey1-l\", \"nn\"],\n  \"snake\": [\"s-n-ey1-k\", \"nn vb\"],\n  \"snap\": [\"s-n-ae1-p\", \"vb vbp jj nn\"],\n  \"snapdragon\": [\"s-n-ae1-p d-r-ae g-ah-n\", \"nn\"],\n  \"snapped\": [\"s-n-ae1-p-t\", \"vbd vbn jj\"],\n  \"snapper\": [\"s-n-ae1 p-er\", \"nn\"],\n  \"snappy\": [\"s-n-ae1 p-iy\", \"jj\"],\n  \"snapshot\": [\"s-n-ae1-p sh-aa-t\", \"nn\"],\n  \"snare\": [\"s-n-eh1-r\", \"vb nn\"],\n  \"snarl\": [\"s-n-aa1-r-l\", \"nn vb\"],\n  \"snatch\": [\"s-n-ae1-ch\", \"vb vbp\"],\n  \"snazzier\": [\"s-n-ae1 z-iy er\", \"jjr\"],\n  \"snazzy\": [\"s-n-ae1 z-iy\", \"jj\"],\n  \"sneak\": [\"s-n-iy1-k\", \"vb nn vbp\"],\n  \"sneaker\": [\"s-n-iy1 k-er\", \"nn\"],\n  \"sneaky\": [\"s-n-iy1 k-iy\", \"jj\"],\n  \"sneer\": [\"s-n-ih1-r\", \"nn vb\"],\n  \"sneeze\": [\"s-n-iy1-z\", \"vb\"],\n  \"snicker\": [\"s-n-ih1-k-er\", \"vb\"],\n  \"sniff\": [\"s-n-ih1-f\", \"vb\"],\n  \"snip\": [\"s-n-ih1-p\", \"nn vb\"],\n  \"snipe\": [\"s-n-ay1-p\", \"vb\"],\n  \"sniped\": [\"s-n-ay1-p-t\", \"vbd nn\"],\n  \"sniper\": [\"s-n-ay1 p-er\", \"nn\"],\n  \"snippet\": [\"s-n-ih1 p-ah-t\", \"nn\"],\n  \"snob\": [\"s-n-aa1-b\", \"nn\"],\n  \"snobbery\": [\"s-n-aa1 b-er iy\", \"nn\"],\n  \"snobbish\": [\"s-n-aa1 b-ih-sh\", \"jj\"],\n  \"snooker\": [\"s-n-uh1 k-er\", \"nn\"],\n  \"snoop\": [\"s-n-uw1-p\", \"vb\"],\n  \"snooty\": [\"s-n-uw1 t-iy\", \"jj\"],\n  \"snooze\": [\"s-n-uw1-z\", \"vb\"],\n  \"snore\": [\"s-n-ao1-r\", \"vb\"],\n  \"snort\": [\"s-n-ao1-r-t\", \"vb nn\"],\n  \"snorting\": [\"s-n-ao1-r t-ih-ng\", \"nn\"],\n  \"snout\": [\"s-n-aw1-t\", \"nn\"],\n  \"snow\": [\"s-n-ow1\", \"nn vb\"],\n  \"snowball\": [\"s-n-ow1 b-ao-l\", \"nn vb\"],\n  \"snowbird\": [\"s-n-ow1 b-er-d\", \"nn\"],\n  \"snowfall\": [\"s-n-ow1 f-aa-l\", \"nn\"],\n  \"snowflake\": [\"s-n-ow1 f-l-ey-k\", \"nn\"],\n  \"snowman\": [\"s-n-ow1 m-ae-n\", \"nn\"],\n  \"snowstorm\": [\"s-n-ow1 s-t-ao-r-m\", \"nn\"],\n  \"snowy\": [\"s-n-ow1 iy\", \"jj\"],\n  \"snub\": [\"s-n-ah1-b\", \"vb\"],\n  \"snuck\": [\"s-n-ah1-k\", \"vbd\"],\n  \"snuff\": [\"s-n-ah1-f\", \"vb nn\"],\n  \"snuffer\": [\"s-n-ah1 f-er\", \"nn\"],\n  \"snug\": [\"s-n-ah1-g\", \"jj\"],\n  \"snugly\": [\"s-n-ah1-g l-iy\", \"rb\"],\n  \"so\": [\"s-ow1\", \"rb cc in\"],\n  \"soak\": [\"s-ow1-k\", \"vb\"],\n  \"soaked\": [\"s-ow1-k-t\", \"vbn jj vbd\"],\n  \"soaking\": [\"s-ow1 k-ih-ng\", \"vbg jj\"],\n  \"soap\": [\"s-ow1-p\", \"nn\"],\n  \"soapbox\": [\"s-ow1-p b-aa-k-s\", \"nn\"],\n  \"soapy\": [\"s-ow1 p-iy\", \"jj\"],\n  \"soar\": [\"s-ao1-r\", \"vb vbp\"],\n  \"soaring\": [\"s-ao1 r-ih-ng\", \"vbg jj\"],\n  \"sob\": [\"s-aa1-b\", \"vb\"],\n  \"sobbingly\": [\"s-aa1 b-ih-ng l-iy\", \"rb\"],\n  \"sober\": [\"s-ow1 b-er\", \"jj vb\"],\n  \"sobering\": [\"s-ow1 b-er ih-ng\", \"vbg jj\"],\n  \"soberly\": [\"s-ow1 b-er l-iy\", \"rb\"],\n  \"sobriety\": [\"s-ah b-r-ay1 ah t-iy\", \"nn\"],\n  \"sobriquet\": [\"s-ow1 b-r-ah k-ey\", \"nn\"],\n  \"socalled\": [\"s-ow1 k-aa1-l-d\", \"jj\"],\n  \"soccer\": [\"s-aa1 k-er\", \"nn\"],\n  \"sociable\": [\"s-ow1 sh-ah b-ah-l\", \"jj\"],\n  \"social\": [\"s-ow1 sh-ah-l\", \"jj nn\"],\n  \"socialism\": [\"s-ow1 sh-ah l-ih z-ah-m\", \"nn\"],\n  \"socialist\": [\"s-ow1 sh-ah l-ah-s-t\", \"jj nn\"],\n  \"socialistic\": [\"s-ow sh-ah l-ih1 s-t-ih-k\", \"jj\"],\n  \"socialite\": [\"s-ow1 sh-ah l-ay-t\", \"nn\"],\n  \"socialization\": [\"s-ow sh-ah l-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"socialize\": [\"s-ow1 sh-ah l-ay-z\", \"vb\"],\n  \"socially\": [\"s-ow1 sh-ah l-iy\", \"rb\"],\n  \"societal\": [\"s-ah s-ay1 ih t-ah-l\", \"jj\"],\n  \"society\": [\"s-ah s-ay1 ah t-iy\", \"nn\"],\n  \"socioeconomic\": [\"s-ow s-iy ow eh k-ah n-aa1 m-ih-k\", \"jj\"],\n  \"sociological\": [\"s-ow s-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"sociologist\": [\"s-ow s-iy aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"sociology\": [\"s-ow s-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"sociopath\": [\"s-ow1 s-iy ow p-ae-th\", \"nn\"],\n  \"sock\": [\"s-aa1-k\", \"nn vb\"],\n  \"socket\": [\"s-aa1 k-ah-t\", \"nn\"],\n  \"sod\": [\"s-aa1-d\", \"nn\"],\n  \"soda\": [\"s-ow1 d-ah\", \"nn\"],\n  \"sodden\": [\"s-aa1 d-ah-n\", \"jj\"],\n  \"sodium\": [\"s-ow1 d-iy ah-m\", \"nn\"],\n  \"sodomy\": [\"s-aa1 d-ah m-iy\", \"nn\"],\n  \"sofa\": [\"s-ow1 f-ah\", \"nn\"],\n  \"soft\": [\"s-aa1-f-t\", \"jj rb\"],\n  \"softball\": [\"s-ao1-f-t b-ao-l\", \"nn\"],\n  \"softdrink\": [\"s-ao1-f-t d-r-ih-ng-k\", \"nn\"],\n  \"soften\": [\"s-aa1 f-ah-n\", \"vb\"],\n  \"softened\": [\"s-ao1 f-ah-n-d\", \"vbd vbn jj\"],\n  \"softener\": [\"s-ao1 f-ah-n er\", \"nn\"],\n  \"softening\": [\"s-ao1 f-ah-n ih-ng\", \"vbg jj\"],\n  \"softer\": [\"s-aa1-f t-er\", \"jjr rb\"],\n  \"softest\": [\"s-ao1-f t-ah-s-t\", \"jjs\"],\n  \"softly\": [\"s-ao1-f-t l-iy\", \"rb\"],\n  \"softness\": [\"s-ao1-f-t n-ah-s\", \"nn\"],\n  \"software\": [\"s-ao1-f-t w-eh-r\", \"nn\"],\n  \"softwood\": [\"s-ao1-f-t w-uh-d\", \"jj\"],\n  \"soggy\": [\"s-aa1 g-iy\", \"jj\"],\n  \"soil\": [\"s-oy1-l\", \"nn vb\"],\n  \"soiled\": [\"s-oy1-l-d\", \"vbn jj vbd\"],\n  \"sojourn\": [\"s-ow1 jh-er-n\", \"nn\"],\n  \"solace\": [\"s-aa1 l-ah-s\", \"nn\"],\n  \"solar\": [\"s-ow1 l-er\", \"jj\"],\n  \"sold\": [\"s-ow1-l-d\", \"vbn vbd\"],\n  \"solder\": [\"s-aa1 d-er\", \"jj vb\"],\n  \"soldering\": [\"s-aa1 d-er ih-ng\", \"jj vbg\"],\n  \"soldier\": [\"s-ow1-l jh-er\", \"nn\"],\n  \"soldiering\": [\"s-ow1-l jh-er ih-ng\", \"nn\"],\n  \"sole\": [\"s-ow1-l\", \"jj nn\"],\n  \"solely\": [\"s-ow1-l l-iy\", \"rb\"],\n  \"solemn\": [\"s-aa1 l-ah-m\", \"jj\"],\n  \"solemnity\": [\"s-ah l-eh1-m n-ah t-iy\", \"nn\"],\n  \"solemnly\": [\"s-ao1 l-ah-m l-iy\", \"rb\"],\n  \"solicit\": [\"s-ah l-ih1 s-ih-t\", \"vb vbp\"],\n  \"solicitation\": [\"s-ah l-ih s-ih t-ey1 sh-ah-n\", \"nn\"],\n  \"solicited\": [\"s-ah l-ih1 s-ih t-ih-d\", \"vbd jj vbn\"],\n  \"solicitor\": [\"s-ah l-ih1 s-ah t-er\", \"nn\"],\n  \"solicitous\": [\"s-ah l-ih1 s-ah t-ah-s\", \"jj\"],\n  \"solicitude\": [\"s-ah l-ih1 s-ih t-uw-d\", \"nn\"],\n  \"solid\": [\"s-aa1 l-ah-d\", \"jj nn rb\"],\n  \"solidarity\": [\"s-aa l-ah d-eh1 r-ah t-iy\", \"nn\"],\n  \"solidify\": [\"s-ah l-ih1 d-ah f-ay\", \"vb vbp\"],\n  \"solidity\": [\"s-ah l-ih1 d-ah t-iy\", \"nn\"],\n  \"solidly\": [\"s-aa1 l-ah-d l-iy\", \"rb\"],\n  \"solitary\": [\"s-aa1 l-ah t-eh r-iy\", \"jj nn\"],\n  \"solitude\": [\"s-aa1 l-ah t-uw-d\", \"nn\"],\n  \"solo\": [\"s-ow1 l-ow\", \"nn jj rb vb\"],\n  \"soloist\": [\"s-ow1 l-ow ah-s-t\", \"nn\"],\n  \"soluble\": [\"s-aa1 l-y-ah b-ah-l\", \"jj\"],\n  \"solution\": [\"s-ah l-uw1 sh-ah-n\", \"nn\"],\n  \"solvable\": [\"s-aa1-l v-ah b-ah-l\", \"jj\"],\n  \"solve\": [\"s-aa1-l-v\", \"vb vbp\"],\n  \"solvency\": [\"s-ao1-l v-ah-n s-iy\", \"nn\"],\n  \"solvent\": [\"s-aa1-l v-ah-n-t\", \"jj nn\"],\n  \"soma\": [\"s-ow1 m-ah\", \"nn\"],\n  \"somber\": [\"s-aa1-m b-er\", \"jj\"],\n  \"somberly\": [\"s-aa1-m b-er l-iy\", \"rb\"],\n  \"some\": [\"s-ah1-m\", \"dt nn rb\"],\n  \"somebody\": [\"s-ah1-m b-aa d-iy\", \"nn\"],\n  \"someday\": [\"s-ah1-m d-ey\", \"rb\"],\n  \"somehow\": [\"s-ah1-m hh-aw\", \"rb wrb\"],\n  \"someone\": [\"s-ah1-m w-ah-n\", \"nn\"],\n  \"someplace\": [\"s-ah1-m p-l-ey-s\", \"rb nn\"],\n  \"somersault\": [\"s-ah1 m-er s-ao-l-t\", \"nn\"],\n  \"somersaulting\": [\"s-ah1 m-er s-ao-l t-ih-ng\", \"jj nn\"],\n  \"something\": [\"s-ah1-m th-ih-ng\", \"nn\"],\n  \"sometime\": [\"s-ah1-m t-ay-m\", \"rb jj\"],\n  \"sometimes\": [\"s-ah-m t-ay1-m-z\", \"rb\"],\n  \"somewhat\": [\"s-ah1-m w-ah1-t\", \"rb\"],\n  \"somewhere\": [\"s-ah1-m w-eh-r\", \"rb nn\"],\n  \"somnolent\": [\"s-aa1-m n-ah l-ah-n-t\", \"jj\"],\n  \"son\": [\"s-ah1-n\", \"nn\"],\n  \"sonar\": [\"s-ow1 n-aa-r\", \"nn\"],\n  \"sonata\": [\"s-ah n-aa1 t-ah\", \"nn\"],\n  \"song\": [\"s-ao1-ng\", \"nn\"],\n  \"songbird\": [\"s-ao1-ng b-er-d\", \"nn\"],\n  \"songwriter\": [\"s-ao1-ng r-ay t-er\", \"nn\"],\n  \"sonic\": [\"s-aa1 n-ih-k\", \"jj\"],\n  \"sonnet\": [\"s-aa1 n-ih-t\", \"nn\"],\n  \"sonny\": [\"s-ah1 n-iy\", \"nn\"],\n  \"sonorous\": [\"s-aa1 n-er ah-s\", \"jj\"],\n  \"soon\": [\"s-uw1-n\", \"rb\"],\n  \"sooner\": [\"s-uw1 n-er\", \"rbr rb\"],\n  \"soonest\": [\"s-uw1 n-ah-s-t\", \"jjs\"],\n  \"soot\": [\"s-uh1-t\", \"nn\"],\n  \"soothe\": [\"s-uw1-dh\", \"vb\"],\n  \"soothing\": [\"s-uw1 dh-ih-ng\", \"vbg jj\"],\n  \"soothingly\": [\"s-uw1 dh-ih-ng l-iy\", \"rb\"],\n  \"soothsayer\": [\"s-uw-th s-ey1 er\", \"nn\"],\n  \"sooty\": [\"s-uw1 t-iy\", \"jj\"],\n  \"sop\": [\"s-aa1-p\", \"nn\"],\n  \"sophisticate\": [\"s-ah f-ih1 s-t-ah k-ih-t\", \"nn\"],\n  \"sophisticated\": [\"s-ah f-ih1 s-t-ah k-ey t-ih-d\", \"jj\"],\n  \"sophistication\": [\"s-ah f-ih s-t-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"sophomore\": [\"s-aa1-f m-ao-r\", \"nn\"],\n  \"sophomoric\": [\"s-aa f-ow m-aa1 r-ih-k\", \"jj\"],\n  \"sopping\": [\"s-aa1 p-ih-ng\", \"jj vbg\"],\n  \"soprano\": [\"s-ah p-r-aa1 n-ow\", \"nn jj\"],\n  \"sorcery\": [\"s-ao1-r s-er iy\", \"nn\"],\n  \"sordid\": [\"s-ao1-r d-ah-d\", \"jj\"],\n  \"sore\": [\"s-ao1-r\", \"jj nn\"],\n  \"sorely\": [\"s-ao1-r l-iy\", \"rb\"],\n  \"sorghum\": [\"s-ao1-r g-ah-m\", \"nn\"],\n  \"sorority\": [\"s-er ao1 r-ah t-iy\", \"nn\"],\n  \"sorrel\": [\"s-ao1 r-ah-l\", \"jj nn\"],\n  \"sorrow\": [\"s-aa1 r-ow\", \"nn\"],\n  \"sorrowful\": [\"s-aa1 r-ow f-ah-l\", \"jj\"],\n  \"sorry\": [\"s-aa1 r-iy\", \"jj rb uh\"],\n  \"sort\": [\"s-ao1-r-t\", \"nn rb vb vbp\"],\n  \"souffle\": [\"s-uw-f l-ey1\", \"nn\"],\n  \"sought\": [\"s-ao1-t\", \"vbd vbn\"],\n  \"souk\": [\"s-uw1-k\", \"nn\"],\n  \"soul\": [\"s-ow1-l\", \"nn\"],\n  \"soulful\": [\"s-ow1-l f-ah-l\", \"jj\"],\n  \"soulless\": [\"s-ow1-l l-ah-s\", \"jj\"],\n  \"sound\": [\"s-aw1-n-d\", \"nn jj rb vb vbp\"],\n  \"sounder\": [\"s-aw1-n d-er\", \"jjr\"],\n  \"sounding\": [\"s-aw1-n d-ih-ng\", \"vbg jj nn\"],\n  \"soundly\": [\"s-aw1-n-d l-iy\", \"rb\"],\n  \"soundness\": [\"s-aw1-n-d n-ah-s\", \"nn\"],\n  \"soundtrack\": [\"s-aw1-n-d t-r-ae-k\", \"nn\"],\n  \"soup\": [\"s-uw1-p\", \"nn vb\"],\n  \"soupy\": [\"s-uw1 p-iy\", \"jj\"],\n  \"sour\": [\"s-aw1 er\", \"jj vbp nn rb vb\"],\n  \"source\": [\"s-ao1-r-s\", \"nn vb\"],\n  \"soured\": [\"s-aw1 er-d\", \"vbd vbn jj\"],\n  \"south\": [\"s-aw1-th\", \"rb jj nn\"],\n  \"southbound\": [\"s-aw1-th b-aw-n-d\", \"jj\"],\n  \"southeast\": [\"s-aw-th iy1-s-t\", \"rb jj nn\"],\n  \"southeastern\": [\"s-aw-th iy1 s-t-er-n\", \"jj\"],\n  \"southern\": [\"s-ah1 dh-er-n\", \"jj\"],\n  \"southernmost\": [\"s-ah1 dh-er-n m-ow-s-t\", \"jj\"],\n  \"southward\": [\"s-aw1-th w-er-d\", \"rb jj\"],\n  \"southwest\": [\"s-aw-th w-eh1-s-t\", \"rb jj nn jjs\"],\n  \"southwestern\": [\"s-aw-th w-eh1 s-t-er-n\", \"jj\"],\n  \"souvenir\": [\"s-uw v-ah n-ih1-r\", \"nn\"],\n  \"sovereign\": [\"s-aa1 v-r-ah-n\", \"jj nn\"],\n  \"sovereignty\": [\"s-aa1 v-r-ah-n t-iy\", \"nn\"],\n  \"soviet\": [\"s-ow1 v-iy ah-t\", \"jj\"],\n  \"sow\": [\"s-aw1\", \"vbp nn vb\"],\n  \"sown\": [\"s-ow1-n\", \"vbn\"],\n  \"soy\": [\"s-oy1\", \"nn\"],\n  \"soybean\": [\"s-oy1 b-iy-n\", \"nn\"],\n  \"spa\": [\"s-p-aa1\", \"nn\"],\n  \"space\": [\"s-p-ey1-s\", \"nn vb\"],\n  \"spacecraft\": [\"s-p-ey1-s k-r-ae-f-t\", \"nn\"],\n  \"spaced\": [\"s-p-ey1-s-t\", \"vbn jj\"],\n  \"spacer\": [\"s-p-ey1 s-er\", \"nn\"],\n  \"spaceship\": [\"s-p-ey1-s sh-ih-p\", \"nn\"],\n  \"spacesuit\": [\"s-p-ey1-s uw-t\", \"nn\"],\n  \"spacing\": [\"s-p-ey1 s-ih-ng\", \"nn jj\"],\n  \"spacious\": [\"s-p-ey1 sh-ah-s\", \"jj\"],\n  \"spade\": [\"s-p-ey1-d\", \"nn\"],\n  \"spaghetti\": [\"s-p-ah g-eh1 t-iy\", \"nn\"],\n  \"span\": [\"s-p-ae1-n\", \"nn vb vbp\"],\n  \"spandex\": [\"s-p-ae1-n d-ah-k-s\", \"nn\"],\n  \"spangle\": [\"s-p-ae1-ng g-ah-l\", \"nn\"],\n  \"spaniel\": [\"s-p-ae1 n-y-ah-l\", \"nn\"],\n  \"spanking\": [\"s-p-ae1-ng k-ih-ng\", \"jj nn\"],\n  \"spanner\": [\"s-p-ae1 n-er\", \"nn\"],\n  \"spare\": [\"s-p-eh1-r\", \"jj vb vbp\"],\n  \"sparing\": [\"s-p-eh1 r-ih-ng\", \"vbg jj\"],\n  \"sparingly\": [\"s-p-eh1 r-ih-ng l-iy\", \"rb\"],\n  \"spark\": [\"s-p-aa1-r-k\", \"vb nn vbp\"],\n  \"sparkle\": [\"s-p-aa1-r k-ah-l\", \"vb\"],\n  \"sparkling\": [\"s-p-aa1-r k-l-ih-ng\", \"jj rb vbg\"],\n  \"sparred\": [\"s-p-aa1-r-d\", \"vbd\"],\n  \"sparrow\": [\"s-p-eh1 r-ow\", \"nn\"],\n  \"sparse\": [\"s-p-aa1-r-s\", \"jj\"],\n  \"sparsely\": [\"s-p-aa1-r-s l-iy\", \"rb\"],\n  \"spasm\": [\"s-p-ae1 z-ah-m\", \"nn\"],\n  \"spat\": [\"s-p-ae1-t\", \"vbd vbn nn\"],\n  \"spate\": [\"s-p-ey1-t\", \"nn\"],\n  \"spatial\": [\"s-p-ey1 sh-ah-l\", \"jj\"],\n  \"spatter\": [\"s-p-ae1-t-er\", \"vb\"],\n  \"spatula\": [\"s-p-ae1 ch-uh l-ah\", \"nn\"],\n  \"spawn\": [\"s-p-aa1-n\", \"vb vbp\"],\n  \"speak\": [\"s-p-iy1-k\", \"vb vbp\"],\n  \"speaker\": [\"s-p-iy1 k-er\", \"nn\"],\n  \"spear\": [\"s-p-ih1-r\", \"nn vb\"],\n  \"spearhead\": [\"s-p-ih1-r hh-eh-d\", \"vb nn\"],\n  \"spec\": [\"s-p-eh1-k\", \"nn\"],\n  \"special\": [\"s-p-eh1 sh-ah-l\", \"jj nn\"],\n  \"specialist\": [\"s-p-eh1 sh-ah l-ah-s-t\", \"nn jj\"],\n  \"speciality\": [\"s-p-eh sh-iy ae1 l-ih t-iy\", \"nn\"],\n  \"specialization\": [\"s-p-eh sh-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"specialize\": [\"s-p-eh1 sh-ah l-ay-z\", \"vb vbp\"],\n  \"specialized\": [\"s-p-eh1 sh-ah l-ay-z-d\", \"jj vbd vbn\"],\n  \"specially\": [\"s-p-eh1 sh-ah l-iy\", \"rb\"],\n  \"specialty\": [\"s-p-eh1 sh-ah-l t-iy\", \"nn jj\"],\n  \"species\": [\"s-p-iy1 sh-iy-z\", \"nn\"],\n  \"specific\": [\"s-p-ah s-ih1 f-ih-k\", \"jj nn\"],\n  \"specifically\": [\"s-p-ah s-ih1 f-ih-k l-iy\", \"rb\"],\n  \"specification\": [\"s-p-eh s-ih f-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"specificity\": [\"s-p-eh s-ah f-ih1 s-ah t-iy\", \"nn\"],\n  \"specified\": [\"s-p-eh1 s-ah f-ay-d\", \"vbn jj vbd\"],\n  \"specify\": [\"s-p-eh1 s-ah f-ay\", \"vb vbp\"],\n  \"specimen\": [\"s-p-eh1 s-ah m-ah-n\", \"nn\"],\n  \"specious\": [\"s-p-iy1 sh-ah-s\", \"jj\"],\n  \"speck\": [\"s-p-eh1-k\", \"nn\"],\n  \"speckled\": [\"s-p-eh1 k-ah-l-d\", \"jj\"],\n  \"spectacle\": [\"s-p-eh1-k t-ah k-ah-l\", \"nn\"],\n  \"spectacular\": [\"s-p-eh-k t-ae1 k-y-ah l-er\", \"jj\"],\n  \"spectacularly\": [\"s-p-eh-k t-ae1 k-y-ah l-er l-iy\", \"rb\"],\n  \"spectator\": [\"s-p-eh1-k t-ey t-er\", \"nn\"],\n  \"specter\": [\"s-p-eh1-k t-er\", \"nn\"],\n  \"spectre\": [\"s-p-eh1-k t-er\", \"nn\"],\n  \"spectrometer\": [\"s-p-eh-k t-r-aa1 m-ah t-er\", \"nn\"],\n  \"spectroscopy\": [\"s-p-eh-k t-r-aa1 s-k-ah p-iy\", \"nn\"],\n  \"spectrum\": [\"s-p-eh1-k t-r-ah-m\", \"nn\"],\n  \"speculate\": [\"s-p-eh1 k-y-ah l-ey-t\", \"vb vbp\"],\n  \"speculation\": [\"s-p-eh k-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"speculative\": [\"s-p-eh1 k-y-ah l-ah t-ih-v\", \"jj\"],\n  \"speculator\": [\"s-p-eh1 k-y-ah l-ey t-er\", \"nn\"],\n  \"sped\": [\"s-p-eh1-d\", \"vbd vbn\"],\n  \"speech\": [\"s-p-iy1-ch\", \"nn\"],\n  \"speechless\": [\"s-p-iy1-ch l-ah-s\", \"jj\"],\n  \"speechwriter\": [\"s-p-iy1-ch r-ay t-er\", \"nn\"],\n  \"speed\": [\"s-p-iy1-d\", \"nn vb\"],\n  \"speedboat\": [\"s-p-iy1-d b-ow-t\", \"nn\"],\n  \"speedier\": [\"s-p-iy1 d-iy er\", \"jjr jj\"],\n  \"speedily\": [\"s-p-iy1 d-ah l-iy\", \"rb\"],\n  \"speeding\": [\"s-p-iy1 d-ih-ng\", \"vbg jj nn\"],\n  \"speedometer\": [\"s-p-iy d-aa1 m-ah t-er\", \"nn\"],\n  \"speedup\": [\"s-p-iy1 d-ah-p\", \"nn\"],\n  \"speedway\": [\"s-p-iy1-d w-ey\", \"nn\"],\n  \"speedy\": [\"s-p-iy1 d-iy\", \"jj\"],\n  \"spell\": [\"s-p-eh1-l\", \"vb nn vbp\"],\n  \"spelt\": [\"s-p-eh1-l-t\", \"vbd vbn\"],\n  \"spellbound\": [\"s-p-eh1-l b-aw-n-d\", \"vbn\"],\n  \"spend\": [\"s-p-eh1-n-d\", \"vb vbp\"],\n  \"spender\": [\"s-p-eh1-n d-er\", \"nn\"],\n  \"spending\": [\"s-p-eh1-n d-ih-ng\", \"vbg jj\"],\n  \"spent\": [\"s-p-eh1-n-t\", \"vbd jj vbn\"],\n  \"sperm\": [\"s-p-er1-m\", \"nn\"],\n  \"spew\": [\"s-p-y-uw1\", \"vb vbp\"],\n  \"sphere\": [\"s-f-ih1-r\", \"nn\"],\n  \"spherical\": [\"s-f-eh1 r-ih k-ah-l\", \"jj\"],\n  \"spice\": [\"s-p-ay1-s\", \"nn vbp vb\"],\n  \"spiced\": [\"s-p-ay1-s-t\", \"jj\"],\n  \"spicy\": [\"s-p-ay1 s-iy\", \"jj\"],\n  \"spider\": [\"s-p-ay1 d-er\", \"nn\"],\n  \"spied\": [\"s-p-ay1-d\", \"vbd vbn\"],\n  \"spiel\": [\"s-p-iy1-l\", \"nn\"],\n  \"spiffing\": [\"s-p-ih1 f-ih-ng\", \"jj\"],\n  \"spiffy\": [\"s-p-ih1 f-iy\", \"jj\"],\n  \"spigot\": [\"s-p-ih1 g-ah-t\", \"nn\"],\n  \"spike\": [\"s-p-ay1-k\", \"nn vb\"],\n  \"spiked\": [\"s-p-ay1-k-t\", \"jj vbn\"],\n  \"spill\": [\"s-p-ih1-l\", \"nn vb vbp\"],\n  \"spilt\": [\"s-p-ih1-l-t\", \"vbd vbn\"],\n  \"spillover\": [\"s-p-ih1-l ow v-er\", \"nn\"],\n  \"spin\": [\"s-p-ih1-n\", \"vb nn\"],\n  \"spinach\": [\"s-p-ih1 n-ah-ch\", \"nn\"],\n  \"spinal\": [\"s-p-ay1 n-ah-l\", \"jj nn\"],\n  \"spindle\": [\"s-p-ih1-n d-ah-l\", \"nn\"],\n  \"spine\": [\"s-p-ay1-n\", \"nn\"],\n  \"spineless\": [\"s-p-ay1-n l-ah-s\", \"jj\"],\n  \"spinning\": [\"s-p-ih1 n-ih-ng\", \"vbg jj\"],\n  \"spinoff\": [\"s-p-ih1-n ao-f\", \"nn jj\"],\n  \"spinster\": [\"s-p-ih1-n s-t-er\", \"nn\"],\n  \"spiral\": [\"s-p-ay1 r-ah-l\", \"nn vb\"],\n  \"spiraling\": [\"s-p-ay1 r-ah-l ih-ng\", \"vbg jj\"],\n  \"spire\": [\"s-p-ay1-r\", \"nn\"],\n  \"spirit\": [\"s-p-ih1 r-ah-t\", \"nn vb\"],\n  \"spirited\": [\"s-p-ih1 r-ah t-ah-d\", \"jj vbn\"],\n  \"spiritual\": [\"s-p-ih1 r-ih ch-ah w-ah-l\", \"jj nn\"],\n  \"spirituality\": [\"s-p-ih r-ih ch-ah-w ae1 l-ah t-iy\", \"nn\"],\n  \"spiritually\": [\"s-p-ih1 r-ih ch-ah-w ah l-iy\", \"rb\"],\n  \"spit\": [\"s-p-ih1-t\", \"vb nn vbd\"],\n  \"spite\": [\"s-p-ay1-t\", \"nn vb\"],\n  \"spittle\": [\"s-p-ih1 t-ah-l\", \"nn\"],\n  \"splash\": [\"s-p-l-ae1-sh\", \"nn vb\"],\n  \"splashy\": [\"s-p-l-ae1 sh-iy\", \"jj\"],\n  \"splatter\": [\"s-p-l-ae1-t-er\", \"vb\"],\n  \"spleen\": [\"s-p-l-iy1-n\", \"nn\"],\n  \"splendid\": [\"s-p-l-eh1-n d-ah-d\", \"jj\"],\n  \"splendidly\": [\"s-p-l-eh1-n d-ah-d l-iy\", \"rb\"],\n  \"splendor\": [\"s-p-l-eh1-n d-er\", \"nn\"],\n  \"splice\": [\"s-p-l-ay1-s\", \"nn vb\"],\n  \"splint\": [\"s-p-l-ih1-n-t\", \"nn\"],\n  \"splinter\": [\"s-p-l-ih1-n t-er\", \"nn vb vbp jj\"],\n  \"splintered\": [\"s-p-l-ih1-n t-er-d\", \"jj vbd vbn\"],\n  \"splintery\": [\"s-p-l-ih1-n t-er iy\", \"nn\"],\n  \"split\": [\"s-p-l-ih1-t\", \"nn vbn jj vb vbd vbp\"],\n  \"splitting\": [\"s-p-l-ih1 t-ih-ng\", \"vbg jj\"],\n  \"splurge\": [\"s-p-l-er1-jh\", \"nn\"],\n  \"spoil\": [\"s-p-oy1-l\", \"vb vbp\"],\n  \"spoilage\": [\"s-p-oy1 l-ah-jh\", \"nn\"],\n  \"spoiled\": [\"s-p-oy1-l-d\", \"vbn jj vbd\"],\n  \"spoiler\": [\"s-p-oy1 l-er\", \"nn\"],\n  \"spoke\": [\"s-p-ow1-k\", \"vbd nn\"],\n  \"spoken\": [\"s-p-ow1 k-ah-n\", \"vbn jj\"],\n  \"spokesman\": [\"s-p-ow1-k-s m-ah-n\", \"nn\"],\n  \"spokesperson\": [\"s-p-ow1-k s-p-er s-ah-n\", \"nn\"],\n  \"spokeswoman\": [\"s-p-ow1-k-s w-uh m-ah-n\", \"nn\"],\n  \"sponge\": [\"s-p-ah1-n-jh\", \"nn vbp vb\"],\n  \"spongy\": [\"s-p-ah1-n jh-iy\", \"jj\"],\n  \"sponsor\": [\"s-p-aa1-n s-er\", \"nn vbp vb\"],\n  \"sponsorship\": [\"s-p-aa1-n s-er sh-ih-p\", \"nn\"],\n  \"spontaneity\": [\"s-p-aa-n t-ah n-iy1 ah t-iy\", \"nn\"],\n  \"spontaneous\": [\"s-p-aa-n t-ey1 n-iy ah-s\", \"jj\"],\n  \"spontaneously\": [\"s-p-aa-n t-ey1 n-iy ah-s l-iy\", \"rb\"],\n  \"spoof\": [\"s-p-uw1-f\", \"nn vb\"],\n  \"spook\": [\"s-p-uw1-k\", \"vb vbp\"],\n  \"spooky\": [\"s-p-uw1 k-iy\", \"jj\"],\n  \"spoon\": [\"s-p-uw1-n\", \"nn\"],\n  \"spoonful\": [\"s-p-uw1-n f-uh-l\", \"nn\"],\n  \"sporadic\": [\"s-p-er ae1 d-ih-k\", \"jj\"],\n  \"sporadically\": [\"s-p-er ae1 d-ih-k l-iy\", \"rb\"],\n  \"spore\": [\"s-p-ao1-r\", \"nn\"],\n  \"sport\": [\"s-p-ao1-r-t\", \"nn vb\"],\n  \"sporting\": [\"s-p-ao1-r t-ih-ng\", \"vbg jj nn\"],\n  \"sportsman\": [\"s-p-ao1-r-t-s m-ah-n\", \"nn\"],\n  \"sportsmanship\": [\"s-p-ao1-r-t-s m-ah-n sh-ih-p\", \"nn\"],\n  \"sportswear\": [\"s-p-ao1-r-t s-w-eh-r\", \"nn\"],\n  \"sportswriter\": [\"s-p-ao1-r-t-s r-ay t-er\", \"nn\"],\n  \"sporty\": [\"s-p-ao1-r t-iy\", \"jj\"],\n  \"spot\": [\"s-p-aa1-t\", \"nn jj vb vbp\"],\n  \"spotless\": [\"s-p-aa1-t l-ah-s\", \"jj\"],\n  \"spotlight\": [\"s-p-aa1-t l-ay-t\", \"nn vb\"],\n  \"spotted\": [\"s-p-aa1 t-ah-d\", \"vbd vbn jj\"],\n  \"spotty\": [\"s-p-aa1 t-iy\", \"jj\"],\n  \"spousal\": [\"s-p-aw1 z-ah-l\", \"jj\"],\n  \"spouse\": [\"s-p-aw1-s\", \"nn\"],\n  \"spout\": [\"s-p-aw1-t\", \"nn vb vbp\"],\n  \"spouted\": [\"s-p-aw1 t-ah-d\", \"vbd jj\"],\n  \"sprain\": [\"s-p-r-ey1-n\", \"vb\"],\n  \"sprang\": [\"s-p-r-ae1-ng\", \"vbd\"],\n  \"sprawl\": [\"s-p-r-ao1-l\", \"nn vbp vb\"],\n  \"sprawled\": [\"s-p-r-ao1-l-d\", \"vbn vbd jj\"],\n  \"sprawling\": [\"s-p-r-ao1 l-ih-ng\", \"vbg jj\"],\n  \"spray\": [\"s-p-r-ey1\", \"nn vb\"],\n  \"spread\": [\"s-p-r-eh1-d\", \"nn vbd vbn vbp jj vb\"],\n  \"spreader\": [\"s-p-r-eh1 d-er\", \"nn\"],\n  \"spreadsheet\": [\"s-p-r-eh1-d sh-iy-t\", \"nn\"],\n  \"spree\": [\"s-p-r-iy1\", \"nn\"],\n  \"sprightly\": [\"s-p-r-ay1-t l-iy\", \"jj\"],\n  \"spring\": [\"s-p-r-ih1-ng\", \"nn vb vbp\"],\n  \"springboard\": [\"s-p-r-ih1-ng b-ao-r-d\", \"nn\"],\n  \"springtime\": [\"s-p-r-ih1-ng t-ay-m\", \"nn\"],\n  \"sprinkle\": [\"s-p-r-ih1-ng k-ah-l\", \"vb nn vbp\"],\n  \"sprinkler\": [\"s-p-r-ih1-ng k-l-er\", \"nn\"],\n  \"sprint\": [\"s-p-r-ih1-n-t\", \"nn vb\"],\n  \"sprout\": [\"s-p-r-aw1-t\", \"vbp vb\"],\n  \"spruce\": [\"s-p-r-uw1-s\", \"nn vb\"],\n  \"sprung\": [\"s-p-r-ah1-ng\", \"vbd vbn\"],\n  \"spud\": [\"s-p-ah1-d\", \"nn\"],\n  \"spun\": [\"s-p-ah1-n\", \"vbn vbd\"],\n  \"spunky\": [\"s-p-ah1-ng k-iy\", \"nn\"],\n  \"spur\": [\"s-p-er1\", \"vb nn vbp\"],\n  \"spurious\": [\"s-p-y-uh1 r-iy ah-s\", \"jj\"],\n  \"spurn\": [\"s-p-er1-n\", \"vbp vb\"],\n  \"spurned\": [\"s-p-er1-n-d\", \"vbn vbd jj\"],\n  \"spurt\": [\"s-p-er1-t\", \"nn vb vbp\"],\n  \"sputnik\": [\"s-p-ah1-t n-ih-k\", \"nn\"],\n  \"sputter\": [\"s-p-ah1 t-er\", \"vb vbp\"],\n  \"sputtering\": [\"s-p-ah1 t-er ih-ng\", \"jj\"],\n  \"spy\": [\"s-p-ay1\", \"nn vb\"],\n  \"spyglass\": [\"s-p-ay1 g-l-ae-s\", \"nn\"],\n  \"squabble\": [\"s-k-w-aa1 b-ah-l\", \"nn vb\"],\n  \"squad\": [\"s-k-w-aa1-d\", \"nn\"],\n  \"squadron\": [\"s-k-w-aa1 d-r-ah-n\", \"nn\"],\n  \"squalid\": [\"s-k-w-aa1 l-ah-d\", \"jj\"],\n  \"squall\": [\"s-k-w-ao1-l\", \"nn\"],\n  \"squalor\": [\"s-k-w-aa1 l-er\", \"nn\"],\n  \"squander\": [\"s-k-w-aa1-n d-er\", \"vb\"],\n  \"square\": [\"s-k-w-eh1-r\", \"nn jj rb vb vbp\"],\n  \"squared\": [\"s-k-w-eh1-r-d\", \"jj vbd vbn\"],\n  \"squarely\": [\"s-k-w-eh1-r l-iy\", \"rb\"],\n  \"squash\": [\"s-k-w-aa1-sh\", \"nn vb\"],\n  \"squashed\": [\"s-k-w-aa1-sh-t\", \"jj vbn\"],\n  \"squashy\": [\"s-k-w-aa1 sh-iy\", \"jj\"],\n  \"squat\": [\"s-k-w-aa1-t\", \"jj nn vb\"],\n  \"squatter\": [\"s-k-w-aa1 t-er\", \"nn\"],\n  \"squawk\": [\"s-k-w-ao1-k\", \"vb\"],\n  \"squeak\": [\"s-k-w-iy1-k\", \"nn vb\"],\n  \"squeaky\": [\"s-k-w-iy1 k-iy\", \"jj rb\"],\n  \"squeal\": [\"s-k-w-iy1-l\", \"vb nn\"],\n  \"squeamish\": [\"s-k-w-iy1 m-ih-sh\", \"jj\"],\n  \"squeamishness\": [\"s-k-w-iy1 m-ih-sh n-ah-s\", \"nn\"],\n  \"squeegee\": [\"s-k-w-iy1 jh-iy\", \"nn\"],\n  \"squeeze\": [\"s-k-w-iy1-z\", \"nn vbp vb\"],\n  \"squelch\": [\"s-k-w-eh1-l-ch\", \"vb vbp\"],\n  \"squid\": [\"s-k-w-ih1-d\", \"nn\"],\n  \"squint\": [\"s-k-w-ih1-n-t\", \"vb vbp\"],\n  \"squire\": [\"s-k-w-ay1-r\", \"nn\"],\n  \"squirm\": [\"s-k-w-er1-m\", \"vb\"],\n  \"squirrel\": [\"s-k-w-er1 ah-l\", \"nn vb\"],\n  \"squirt\": [\"s-k-w-er1-t\", \"nn vb\"],\n  \"stab\": [\"s-t-ae1-b\", \"nn\"],\n  \"stabbed\": [\"s-t-ae1-b-d\", \"vbd vbn\"],\n  \"stability\": [\"s-t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"stabilization\": [\"s-t-ey b-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"stabilize\": [\"s-t-ey1 b-ah l-ay-z\", \"vb vbp\"],\n  \"stabilizer\": [\"s-t-ey1 b-ah l-ay z-er\", \"nn\"],\n  \"stable\": [\"s-t-ey1 b-ah-l\", \"jj nn\"],\n  \"staccato\": [\"s-t-ah k-aa1 t-ow\", \"jj\"],\n  \"stack\": [\"s-t-ae1-k\", \"nn vb\"],\n  \"stacker\": [\"s-t-ae1 k-er\", \"nn\"],\n  \"stadium\": [\"s-t-ey1 d-iy ah-m\", \"nn\"],\n  \"staff\": [\"s-t-ae1-f\", \"nn vbp vb\"],\n  \"staffer\": [\"s-t-ae1 f-er\", \"nn\"],\n  \"staffing\": [\"s-t-ae1 f-ih-ng\", \"vbg jj nn\"],\n  \"stag\": [\"s-t-ae1-g\", \"nn jj\"],\n  \"stage\": [\"s-t-ey1-jh\", \"nn vbp vb\"],\n  \"stagecoach\": [\"s-t-ey1-jh k-ow-ch\", \"nn\"],\n  \"stager\": [\"s-t-ey1 jh-er\", \"nn\"],\n  \"stagflation\": [\"s-t-ae-g f-l-ey1 sh-ah-n\", \"nn\"],\n  \"stagger\": [\"s-t-ae1 g-er\", \"vb\"],\n  \"staggered\": [\"s-t-ae1 g-er-d\", \"vbd jj vbn\"],\n  \"staggering\": [\"s-t-ae1 g-er ih-ng\", \"jj vbg\"],\n  \"stagnant\": [\"s-t-ae1-g n-ah-n-t\", \"jj\"],\n  \"stagnate\": [\"s-t-ae1-g-n-ey-t\", \"vb\"],\n  \"stagnation\": [\"s-t-ae-g n-ey1 sh-ah-n\", \"nn\"],\n  \"staid\": [\"s-t-ey1-d\", \"jj vbn\"],\n  \"stain\": [\"s-t-ey1-n\", \"nn vb\"],\n  \"stained\": [\"s-t-ey1-n-d\", \"vbn jj vbd\"],\n  \"stainless\": [\"s-t-ey1-n l-ah-s\", \"jj\"],\n  \"stair\": [\"s-t-eh1-r\", \"nn\"],\n  \"staircase\": [\"s-t-eh1-r k-ey-s\", \"nn\"],\n  \"stairway\": [\"s-t-eh1-r w-ey\", \"nn\"],\n  \"stake\": [\"s-t-ey1-k\", \"nn vb vbp\"],\n  \"stale\": [\"s-t-ey1-l\", \"jj\"],\n  \"stalemate\": [\"s-t-ey1-l m-ey-t\", \"nn\"],\n  \"stalk\": [\"s-t-ao1-k\", \"vb vbp\"],\n  \"stalked\": [\"s-t-ao1-k-t\", \"vbd vbn jj\"],\n  \"stall\": [\"s-t-ao1-l\", \"nn vb\"],\n  \"stalled\": [\"s-t-ao1-l-d\", \"vbn jj vbd\"],\n  \"stallion\": [\"s-t-ae1 l-y-ah-n\", \"nn\"],\n  \"stalwart\": [\"s-t-ao1-l w-er-t\", \"jj nn\"],\n  \"stamina\": [\"s-t-ae1 m-ah n-ah\", \"nn\"],\n  \"stamp\": [\"s-t-ae1-m-p\", \"nn vb\"],\n  \"stampede\": [\"s-t-ae-m p-iy1-d\", \"nn vb vbp\"],\n  \"stance\": [\"s-t-ae1-n-s\", \"nn\"],\n  \"stanch\": [\"s-t-ae1-n-ch\", \"vb jj\"],\n  \"stand\": [\"s-t-ae1-n-d\", \"vb nn vbp\"],\n  \"standard\": [\"s-t-ae1-n d-er-d\", \"jj nn\"],\n  \"standardize\": [\"s-t-ae1-n d-er d-ay-z\", \"vb\"],\n  \"standardized\": [\"s-t-ae1-n d-er d-ay-z-d\", \"jj vbn\"],\n  \"standby\": [\"s-t-ae1-n-d b-ay1\", \"jj nn\"],\n  \"standing\": [\"s-t-ae1-n d-ih-ng\", \"vbg jj nn\"],\n  \"standoff\": [\"s-t-ae1-n d-ao-f\", \"nn\"],\n  \"standout\": [\"s-t-ae1-n-d aw-t\", \"nn\"],\n  \"standpoint\": [\"s-t-ae1-n-d p-oy-n-t\", \"nn\"],\n  \"standstill\": [\"s-t-ae1-n-d s-t-ih-l\", \"jj nn\"],\n  \"standup\": [\"s-t-ae1-n-d ah-p\", \"jj nn\"],\n  \"stank\": [\"s-t-ae1-n-k\", \"vbd\"],\n  \"staple\": [\"s-t-ey1 p-ah-l\", \"nn jj\"],\n  \"stapling\": [\"s-t-ey1 p-ah-l ih-ng\", \"nn\"],\n  \"star\": [\"s-t-aa1-r\", \"nn jj vb\"],\n  \"starboard\": [\"s-t-aa1-r b-er-d\", \"vb\"],\n  \"starch\": [\"s-t-aa1-r-ch\", \"nn vb\"],\n  \"starched\": [\"s-t-aa1-r-ch-t\", \"vbn jj\"],\n  \"starchy\": [\"s-t-aa1-r ch-iy\", \"jj\"],\n  \"stardom\": [\"s-t-aa1-r d-ah-m\", \"nn\"],\n  \"stare\": [\"s-t-eh1-r\", \"vb vbp nn\"],\n  \"stark\": [\"s-t-aa1-r-k\", \"jj rb\"],\n  \"starker\": [\"s-t-aa1-r k-er\", \"jjr\"],\n  \"starkly\": [\"s-t-aa1-r-k l-iy\", \"rb\"],\n  \"starlet\": [\"s-t-aa1-r l-ah-t\", \"nn\"],\n  \"starlight\": [\"s-t-aa1-r l-ay-t\", \"nn\"],\n  \"starring\": [\"s-t-aa1 r-ih-ng\", \"vbg jj\"],\n  \"start\": [\"s-t-aa1-r-t\", \"vb vbp nn rp\"],\n  \"started\": [\"s-t-aa1-r t-ah-d\", \"vbd jj vbn\"],\n  \"starter\": [\"s-t-aa1-r t-er\", \"nn jj\"],\n  \"starting\": [\"s-t-aa1-r t-ih-ng\", \"vbg jj nn\"],\n  \"startle\": [\"s-t-aa1-r t-ah-l\", \"vb\"],\n  \"startled\": [\"s-t-aa1-r t-ah-l-d\", \"vbn vbd jj\"],\n  \"startling\": [\"s-t-aa1-r-t l-ih-ng\", \"jj vbg\"],\n  \"startlingly\": [\"s-t-aa1-r-t l-ih-ng l-iy\", \"rb\"],\n  \"startup\": [\"s-t-aa1-r-t ah-p\", \"nn jj\"],\n  \"starvation\": [\"s-t-aa-r v-ey1 sh-ah-n\", \"nn\"],\n  \"starve\": [\"s-t-aa1-r-v\", \"vb\"],\n  \"starving\": [\"s-t-aa1-r v-ih-ng\", \"vbg jj\"],\n  \"stash\": [\"s-t-ae1-sh\", \"vb nn\"],\n  \"stat\": [\"s-t-ae1-t\", \"nn\"],\n  \"state\": [\"s-t-ey1-t\", \"nn jj vb vbp\"],\n  \"stated\": [\"s-t-ey1 t-ah-d\", \"vbn jj vbd\"],\n  \"statehood\": [\"s-t-ey1-t hh-uh-d\", \"nn\"],\n  \"stateless\": [\"s-t-ey1-t l-ih-s\", \"jj\"],\n  \"stately\": [\"s-t-ey1-t l-iy\", \"jj\"],\n  \"statement\": [\"s-t-ey1-t m-ah-n-t\", \"nn\"],\n  \"statesman\": [\"s-t-ey1-t-s m-ah-n\", \"nn\"],\n  \"statesmanlike\": [\"s-t-ah t-eh1-s m-ah-n l-ay-k\", \"jj\"],\n  \"statesmanship\": [\"s-t-ey1-t-s m-ah-n sh-ih-p\", \"nn\"],\n  \"statewide\": [\"s-t-ey1-t w-ay-d\", \"jj rb\"],\n  \"static\": [\"s-t-ae1 t-ih-k\", \"jj nn\"],\n  \"station\": [\"s-t-ey1 sh-ah-n\", \"nn vb\"],\n  \"stationary\": [\"s-t-ey1 sh-ah-n eh r-iy\", \"jj\"],\n  \"stationery\": [\"s-t-ey1 sh-ah-n eh r-iy\", \"nn\"],\n  \"statistic\": [\"s-t-ah t-ih1 s-t-ih-k\", \"nn\"],\n  \"statistical\": [\"s-t-ah t-ih1 s-t-ih k-ah-l\", \"jj\"],\n  \"statistically\": [\"s-t-ah t-ih1 s-t-ih k-ah l-iy\", \"rb\"],\n  \"statistician\": [\"s-t-ae t-ah s-t-ih1 sh-ah-n\", \"nn\"],\n  \"statuary\": [\"s-t-ae1 ch-uw eh r-iy\", \"nn\"],\n  \"statue\": [\"s-t-ae1 ch-uw\", \"nn\"],\n  \"stature\": [\"s-t-ae1 ch-er\", \"nn\"],\n  \"status\": [\"s-t-ae1 t-ah-s\", \"nn\"],\n  \"statute\": [\"s-t-ae1 ch-uw-t\", \"nn\"],\n  \"statutory\": [\"s-t-ae1 ch-ah t-ao r-iy\", \"jj\"],\n  \"staunch\": [\"s-t-ao1-n-ch\", \"jj vb\"],\n  \"staunchest\": [\"s-t-ao1-n ch-ah-s-t\", \"jjs\"],\n  \"staunchly\": [\"s-t-ao1-n-ch l-iy\", \"rb\"],\n  \"stave\": [\"s-t-ey1-v\", \"vb\"],\n  \"stay\": [\"s-t-ey1\", \"vb vbp nn\"],\n  \"stayed\": [\"s-t-ey1-d\", \"vbd jj vbn\"],\n  \"staying\": [\"s-t-ey1 ih-ng\", \"vbg jj nn\"],\n  \"stead\": [\"s-t-eh1-d\", \"nn\"],\n  \"steadfast\": [\"s-t-eh1-d f-ae-s-t\", \"jj rb\"],\n  \"steadfastly\": [\"s-t-eh1-d f-ae-s-t l-iy\", \"rb\"],\n  \"steadfastness\": [\"s-t-eh1-d f-ae-s-t n-ah-s\", \"nn\"],\n  \"steadied\": [\"s-t-eh1 d-iy-d\", \"vbd vbn\"],\n  \"steadier\": [\"s-t-eh1 d-iy er\", \"jjr\"],\n  \"steadily\": [\"s-t-eh1 d-ah l-iy\", \"rb\"],\n  \"steadiness\": [\"s-t-eh1 d-iy n-ih-s\", \"nn\"],\n  \"steady\": [\"s-t-eh1 d-iy\", \"jj rb\"],\n  \"steak\": [\"s-t-ey1-k\", \"nn\"],\n  \"steakhouse\": [\"s-t-ey1-k hh-aw-s\", \"nn\"],\n  \"steal\": [\"s-t-iy1-l\", \"vb vbp\"],\n  \"stealing\": [\"s-t-iy1 l-ih-ng\", \"vbg jj\"],\n  \"stealth\": [\"s-t-eh1-l-th\", \"nn\"],\n  \"steam\": [\"s-t-iy1-m\", \"nn vb\"],\n  \"steamboat\": [\"s-t-iy1-m b-ow-t\", \"nn\"],\n  \"steamer\": [\"s-t-iy1 m-er\", \"nn\"],\n  \"steamily\": [\"s-t-iy1 m-ah l-iy\", \"rb\"],\n  \"steamroller\": [\"s-t-iy1-m r-ow l-er\", \"nn\"],\n  \"steamship\": [\"s-t-iy1-m sh-ih-p\", \"nn\"],\n  \"steed\": [\"s-t-iy1-d\", \"nn\"],\n  \"steel\": [\"s-t-iy1-l\", \"nn jj\"],\n  \"steelmaker\": [\"s-t-iy1-l m-ey k-er\", \"nn\"],\n  \"steelmaking\": [\"s-t-iy1-l m-ey k-ih-ng\", \"nn\"],\n  \"steelworker\": [\"s-t-iy1-l w-er k-er\", \"nn\"],\n  \"steely\": [\"s-t-iy1 l-iy\", \"jj\"],\n  \"steep\": [\"s-t-iy1-p\", \"jj nn vb\"],\n  \"steeper\": [\"s-t-iy1 p-er\", \"jjr nn\"],\n  \"steepest\": [\"s-t-iy1 p-ah-s-t\", \"jjs\"],\n  \"steeply\": [\"s-t-iy1-p l-iy\", \"rb\"],\n  \"steepness\": [\"s-t-iy1-p n-ah-s\", \"nn\"],\n  \"steer\": [\"s-t-ih1-r\", \"vb nn vbp\"],\n  \"steering\": [\"s-t-ih1 r-ih-ng\", \"nn jj vbg\"],\n  \"stein\": [\"s-t-ay1-n\", \"nn\"],\n  \"stellar\": [\"s-t-eh1 l-er\", \"jj\"],\n  \"stem\": [\"s-t-eh1-m\", \"vb nn vbp\"],\n  \"stench\": [\"s-t-eh1-n-ch\", \"nn\"],\n  \"step\": [\"s-t-eh1-p\", \"nn vbp vb\"],\n  \"stepchild\": [\"s-t-eh1-p ch-ay-l-d\", \"nn\"],\n  \"stepchildren\": [\"s-t-eh1-p ch-ih1-l d-r-ah-n\", \"nn\"],\n  \"stepladder\": [\"s-t-eh1-p l-ae d-er\", \"nn\"],\n  \"stepmother\": [\"s-t-eh1-p m-ah dh-er\", \"nn\"],\n  \"steppe\": [\"s-t-eh1-p\", \"nn\"],\n  \"stepping\": [\"s-t-eh1 p-ih-ng\", \"vbg jj\"],\n  \"stepson\": [\"s-t-eh1-p s-ah-n\", \"nn\"],\n  \"stereo\": [\"s-t-eh1 r-iy ow\", \"nn jj\"],\n  \"stereotype\": [\"s-t-eh1 r-iy ah t-ay-p\", \"nn vb\"],\n  \"stereotyped\": [\"s-t-eh1 r-iy ah t-ay-p-t\", \"jj vbn\"],\n  \"stereotypical\": [\"s-t-eh r-iy ow t-ih1 p-ih k-ah-l\", \"jj\"],\n  \"sterile\": [\"s-t-eh1 r-ah-l\", \"jj\"],\n  \"sterility\": [\"s-t-er ih1 l-ih t-iy\", \"nn\"],\n  \"sterilization\": [\"s-t-eh r-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"sterilize\": [\"s-t-eh1 r-ah l-ay-z\", \"vb\"],\n  \"sterilizer\": [\"s-t-eh1 r-ah l-ay z-er\", \"nn\"],\n  \"sterling\": [\"s-t-er1 l-ih-ng\", \"nn jj\"],\n  \"stern\": [\"s-t-er1-n\", \"jj nn\"],\n  \"sternly\": [\"s-t-er1-n l-iy\", \"rb\"],\n  \"steroid\": [\"s-t-er oy1-d\", \"jj\"],\n  \"stethoscope\": [\"s-t-eh1 th-ah-s k-ow-p\", \"nn\"],\n  \"stew\": [\"s-t-uw1\", \"nn vb\"],\n  \"steward\": [\"s-t-uw1 er-d\", \"nn\"],\n  \"stewardess\": [\"s-t-uw1 er d-ah-s\", \"nn\"],\n  \"stewardship\": [\"s-t-uw1 er-d sh-ih-p\", \"nn\"],\n  \"stewed\": [\"s-t-uw1-d\", \"jj vbd\"],\n  \"stick\": [\"s-t-ih1-k\", \"vb vbp nn\"],\n  \"sticker\": [\"s-t-ih1 k-er\", \"nn\"],\n  \"stickier\": [\"s-t-ih1 k-iy er\", \"jjr\"],\n  \"sticking\": [\"s-t-ih1 k-ih-ng\", \"vbg jj\"],\n  \"stickler\": [\"s-t-ih1 k-ah l-er\", \"nn\"],\n  \"sticky\": [\"s-t-ih1 k-iy\", \"jj\"],\n  \"stiff\": [\"s-t-ih1-f\", \"jj vb\"],\n  \"stiffen\": [\"s-t-ih1 f-ah-n\", \"vb\"],\n  \"stiffening\": [\"s-t-ih1 f-ah-n ih-ng\", \"vbg jj\"],\n  \"stiffer\": [\"s-t-ih1 f-er\", \"jjr\"],\n  \"stiffest\": [\"s-t-ih1 f-ah-s-t\", \"jjs\"],\n  \"stiffly\": [\"s-t-ih1-f l-iy\", \"rb nn\"],\n  \"stiffness\": [\"s-t-ih1-f n-ah-s\", \"nn\"],\n  \"stifle\": [\"s-t-ay1 f-ah-l\", \"vb\"],\n  \"stifling\": [\"s-t-ay1 f-l-ih-ng\", \"vbg jj\"],\n  \"stigma\": [\"s-t-ih1-g m-ah\", \"nn\"],\n  \"stiletto\": [\"s-t-ah l-eh1 t-ow\", \"nn\"],\n  \"still\": [\"s-t-ih1-l\", \"rb jj nn vb\"],\n  \"stillness\": [\"s-t-ih1-l n-ah-s\", \"nn\"],\n  \"stilt\": [\"s-t-ih1-l-t\", \"nn\"],\n  \"stilted\": [\"s-t-ih1-l t-ih-d\", \"jj\"],\n  \"stimulant\": [\"s-t-ih1 m-y-ah l-ah-n-t\", \"nn\"],\n  \"stimulate\": [\"s-t-ih1 m-y-ah l-ey-t\", \"vb vbp\"],\n  \"stimulating\": [\"s-t-ih1 m-y-ah l-ey t-ih-ng\", \"vbg jj\"],\n  \"stimulation\": [\"s-t-ih m-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"stimulative\": [\"s-t-ih1 m-y-ah l-ey t-ih-v\", \"jj\"],\n  \"stimulator\": [\"s-t-ih1 m-y-ah l-ey t-er\", \"nn\"],\n  \"stimulus\": [\"s-t-ih1 m-y-ah l-ah-s\", \"nn\"],\n  \"sting\": [\"s-t-ih1-ng\", \"nn vb\"],\n  \"stingier\": [\"s-t-ih1-n jh-iy er\", \"jjr\"],\n  \"stinging\": [\"s-t-ih1 ng-ih-ng\", \"jj vbg\"],\n  \"stingy\": [\"s-t-ih1-n jh-iy\", \"jj\"],\n  \"stink\": [\"s-t-ih1-ng-k\", \"nn vb vbp\"],\n  \"stinking\": [\"s-t-ih1-ng k-ih-ng\", \"vbg jj\"],\n  \"stint\": [\"s-t-ih1-n-t\", \"nn\"],\n  \"stipend\": [\"s-t-ay1 p-ah-n-d\", \"nn\"],\n  \"stipulate\": [\"s-t-ih1 p-y-ah l-ey-t\", \"vbp jj vb\"],\n  \"stipulation\": [\"s-t-ih p-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"stir\": [\"s-t-er1\", \"vb vbp nn\"],\n  \"stirling\": [\"s-t-er1 l-ih-ng\", \"jj\"],\n  \"stirring\": [\"s-t-er1 ih-ng\", \"vbg jj nn\"],\n  \"stirrup\": [\"s-t-er1 ah-p\", \"nn\"],\n  \"stitch\": [\"s-t-ih1-ch\", \"nn vb\"],\n  \"stitching\": [\"s-t-ih1 ch-ih-ng\", \"nn vbg\"],\n  \"stock\": [\"s-t-aa1-k\", \"nn vbp jj vb\"],\n  \"stockbroker\": [\"s-t-aa1-k b-r-ow k-er\", \"nn\"],\n  \"stockholder\": [\"s-t-aa1-k hh-ow-l d-er\", \"nn\"],\n  \"stockmarket\": [\"s-t-aa1-k m-aa-r k-ih-t\", \"nn\"],\n  \"stockpile\": [\"s-t-aa1-k p-ay-l\", \"nn vb\"],\n  \"stockpiling\": [\"s-t-aa1-k p-ay l-ih-ng\", \"nn\"],\n  \"stockroom\": [\"s-t-aa1-k r-uw-m\", \"nn\"],\n  \"stocky\": [\"s-t-aa1 k-iy\", \"jj\"],\n  \"stockyard\": [\"s-t-aa1-k y-aa-r-d\", \"nn\"],\n  \"stodgy\": [\"s-t-aa1 jh-iy\", \"jj\"],\n  \"stoicism\": [\"s-t-ow1 ah s-ih z-ah-m\", \"nn\"],\n  \"stoke\": [\"s-t-ow1-k\", \"vb\"],\n  \"stoker\": [\"s-t-ow1 k-er\", \"nn\"],\n  \"stole\": [\"s-t-ow1-l\", \"vbd\"],\n  \"stolen\": [\"s-t-ow1 l-ah-n\", \"vbn jj\"],\n  \"stolid\": [\"s-t-aa1 l-ah-d\", \"jj\"],\n  \"stomach\": [\"s-t-ah1 m-ah-k\", \"nn vb\"],\n  \"stomp\": [\"s-t-aa1-m-p\", \"vb\"],\n  \"stone\": [\"s-t-ow1-n\", \"nn rb vb\"],\n  \"stonewall\": [\"s-t-ow1-n-w-ao-l\", \"vb\"],\n  \"stoneware\": [\"s-t-ow1-n w-eh-r\", \"nn\"],\n  \"stony\": [\"s-t-ow1 n-iy\", \"jj\"],\n  \"stood\": [\"s-t-uh1-d\", \"vbd vbn\"],\n  \"stooge\": [\"s-t-uw1 jh-ih\", \"nn\"],\n  \"stool\": [\"s-t-uw1-l\", \"nn\"],\n  \"stoop\": [\"s-t-uw1-p\", \"vb nn vbp\"],\n  \"stop\": [\"s-t-aa1-p\", \"vb nn vbp\"],\n  \"stopgap\": [\"s-t-aa1-p g-ae-p\", \"nn jj\"],\n  \"stopover\": [\"s-t-aa1-p ow v-er\", \"nn\"],\n  \"stoppage\": [\"s-t-aa1 p-ih-jh\", \"nn\"],\n  \"stopper\": [\"s-t-aa1 p-er\", \"nn\"],\n  \"stopwatch\": [\"s-t-aa1-p w-aa-ch\", \"nn\"],\n  \"storage\": [\"s-t-ao1 r-ah-jh\", \"nn jj\"],\n  \"store\": [\"s-t-ao1-r\", \"nn vb vbp\"],\n  \"storefront\": [\"s-t-ao1-r f-r-aa-n-t\", \"nn\"],\n  \"storehouse\": [\"s-t-ao1-r hh-aw-s\", \"nn\"],\n  \"storekeeper\": [\"s-t-ao1-r k-iy p-er\", \"nn\"],\n  \"storeroom\": [\"s-t-ao1 r-r-uw-m\", \"nn\"],\n  \"storied\": [\"s-t-ao1 r-iy-d\", \"jj\"],\n  \"storm\": [\"s-t-ao1-r-m\", \"nn vb vbp\"],\n  \"stormy\": [\"s-t-ao1-r m-iy\", \"jj\"],\n  \"story\": [\"s-t-ao1 r-iy\", \"nn\"],\n  \"storyline\": [\"s-t-ao1 r-iy l-ay-n\", \"nn\"],\n  \"storyteller\": [\"s-t-ao1 r-iy t-eh l-er\", \"nn\"],\n  \"storytelling\": [\"s-t-ao1 r-iy t-eh l-ih-ng\", \"nn\"],\n  \"stout\": [\"s-t-aw1-t\", \"jj\"],\n  \"stoutly\": [\"s-t-aw1-t l-iy\", \"rb\"],\n  \"stove\": [\"s-t-ow1-v\", \"nn\"],\n  \"stow\": [\"s-t-ow1\", \"vb\"],\n  \"straddle\": [\"s-t-r-ae1 d-ah-l\", \"vb\"],\n  \"straggle\": [\"s-t-r-ae1-g-ah-l\", \"vb\"],\n  \"straggler\": [\"s-t-r-ae1 g-l-er\", \"nn\"],\n  \"straight\": [\"s-t-r-ey1-t\", \"jj rb\"],\n  \"straighten\": [\"s-t-r-ey1 t-ah-n\", \"vb\"],\n  \"straighter\": [\"s-t-r-ey1 t-er\", \"jjr rbr\"],\n  \"straightforward\": [\"s-t-r-ey1-t f-ao1-r w-er-d\", \"jj\"],\n  \"strain\": [\"s-t-r-ey1-n\", \"nn vb vbp\"],\n  \"strained\": [\"s-t-r-ey1-n-d\", \"vbd jj vbn\"],\n  \"strait\": [\"s-t-r-ey1-t\", \"nn\"],\n  \"straitjacket\": [\"s-t-r-ey1-t jh-ae k-ah-t\", \"nn\"],\n  \"strand\": [\"s-t-r-ae1-n-d\", \"nn vb\"],\n  \"strange\": [\"s-t-r-ey1-n-jh\", \"jj\"],\n  \"strangely\": [\"s-t-r-ey1-n-jh l-iy\", \"rb\"],\n  \"strangeness\": [\"s-t-r-ey1-n-jh n-ah-s\", \"nn\"],\n  \"stranger\": [\"s-t-r-ey1-n jh-er\", \"nn jjr\"],\n  \"strangest\": [\"s-t-r-ey1-n jh-ih-s-t\", \"jjs\"],\n  \"strangle\": [\"s-t-r-ae1-ng-g-ah-l\", \"vb\"],\n  \"strangled\": [\"s-t-r-ae1-ng g-ah-l-d\", \"vbn jj\"],\n  \"stranglehold\": [\"s-t-r-ae1-ng g-ah-l hh-ow-l-d\", \"nn\"],\n  \"strangulation\": [\"s-t-r-ae-ng g-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"strap\": [\"s-t-r-ae1-p\", \"vb jj\"],\n  \"strapped\": [\"s-t-r-ae1-p-t\", \"vbn vbd jj\"],\n  \"strapping\": [\"s-t-r-ae1 p-ih-ng\", \"jj vbg\"],\n  \"stratagem\": [\"s-t-r-ae1 t-ah jh-ah-m\", \"nn\"],\n  \"strategic\": [\"s-t-r-ah t-iy1 jh-ih-k\", \"jj\"],\n  \"strategically\": [\"s-t-r-ah t-iy1 jh-ih-k l-iy\", \"rb\"],\n  \"strategist\": [\"s-t-r-ae1 t-ih jh-ih-s-t\", \"nn\"],\n  \"strategy\": [\"s-t-r-ae1 t-ah jh-iy\", \"nn\"],\n  \"stratified\": [\"s-t-r-ae1 t-ah f-ay-d\", \"jj vbn\"],\n  \"stratify\": [\"s-t-r-ae1-t-ah-f-ay\", \"vb\"],\n  \"stratosphere\": [\"s-t-r-ae1 t-ah s-f-ih-r\", \"nn\"],\n  \"stratospheric\": [\"s-t-r-ae t-ah s-f-ih1 r-ih-k\", \"jj\"],\n  \"stratum\": [\"s-t-r-ae1 t-ah-m\", \"nn\"],\n  \"straw\": [\"s-t-r-ao1\", \"nn jj\"],\n  \"strawberry\": [\"s-t-r-ao1 b-eh r-iy\", \"nn\"],\n  \"stray\": [\"s-t-r-ey1\", \"jj nn vb vbp\"],\n  \"streak\": [\"s-t-r-iy1-k\", \"nn vb vbp\"],\n  \"stream\": [\"s-t-r-iy1-m\", \"nn vb\"],\n  \"streamer\": [\"s-t-r-iy1 m-er\", \"nn\"],\n  \"streamline\": [\"s-t-r-iy1-m l-ay-n\", \"vb\"],\n  \"streamlined\": [\"s-t-r-iy1-m l-ay-n-d\", \"jj vbd vbn\"],\n  \"street\": [\"s-t-r-iy1-t\", \"nn\"],\n  \"streetcar\": [\"s-t-r-iy1-t k-aa-r\", \"nn\"],\n  \"strength\": [\"s-t-r-eh1-ng-k-th\", \"nn\"],\n  \"strengthen\": [\"s-t-r-eh1-ng th-ah-n\", \"vb vbp\"],\n  \"strengthened\": [\"s-t-r-eh1-ng th-ah-n-d\", \"vbn jj vbd\"],\n  \"strenuous\": [\"s-t-r-eh1 n-y-uw ah-s\", \"jj\"],\n  \"strenuously\": [\"s-t-r-eh1 n-y-uw ah-s l-iy\", \"rb\"],\n  \"stress\": [\"s-t-r-eh1-s\", \"nn vbp vb\"],\n  \"stressed\": [\"s-t-r-eh1-s-t\", \"vbd jj vbn\"],\n  \"stressful\": [\"s-t-r-eh1-s f-ah-l\", \"jj\"],\n  \"stretch\": [\"s-t-r-eh1-ch\", \"nn vbp jj vb\"],\n  \"stretched\": [\"s-t-r-eh1-ch-t\", \"vbd jj vbn\"],\n  \"stretcher\": [\"s-t-r-eh1 ch-er\", \"nn\"],\n  \"strewn\": [\"s-t-r-uw1-n\", \"vbn\"],\n  \"stricken\": [\"s-t-r-ih1 k-ah-n\", \"vbn jj\"],\n  \"strict\": [\"s-t-r-ih1-k-t\", \"jj\"],\n  \"stricter\": [\"s-t-r-ih1-k t-er\", \"jjr\"],\n  \"strictest\": [\"s-t-r-ih1-k t-ah-s-t\", \"jjs\"],\n  \"strictly\": [\"s-t-r-ih1-k-t l-iy\", \"rb\"],\n  \"stricture\": [\"s-t-r-ih1-k ch-er\", \"nn\"],\n  \"stride\": [\"s-t-r-ay1-d\", \"nn vbp vb\"],\n  \"strident\": [\"s-t-r-ay1 d-ah-n-t\", \"jj\"],\n  \"stridently\": [\"s-t-r-ay1 d-ah-n-t l-iy\", \"rb\"],\n  \"strife\": [\"s-t-r-ay1-f\", \"nn\"],\n  \"strike\": [\"s-t-r-ay1-k\", \"nn vb vbp\"],\n  \"strikebreaker\": [\"s-t-r-ay1-k b-r-ey k-er\", \"nn\"],\n  \"strikeout\": [\"s-t-r-ay1-k aw-t\", \"nn\"],\n  \"striker\": [\"s-t-r-ay1 k-er\", \"nn\"],\n  \"striking\": [\"s-t-r-ay1 k-ih-ng\", \"jj vbg\"],\n  \"strikingly\": [\"s-t-r-ay1 k-ih-ng l-iy\", \"rb\"],\n  \"string\": [\"s-t-r-ih1-ng\", \"nn vb\"],\n  \"stringed\": [\"s-t-r-ih1-ng-d\", \"jj\"],\n  \"stringent\": [\"s-t-r-ih1-n jh-ah-n-t\", \"jj\"],\n  \"stringently\": [\"s-t-r-ih1-n jh-ah-n-t l-iy\", \"rb\"],\n  \"stringy\": [\"s-t-r-ih1 ng-iy\", \"jj\"],\n  \"strip\": [\"s-t-r-ih1-p\", \"nn vb vbp\"],\n  \"stripe\": [\"s-t-r-ay1-p\", \"nn\"],\n  \"striped\": [\"s-t-r-ay1-p-t\", \"jj\"],\n  \"stripped\": [\"s-t-r-ih1-p-t\", \"vbn jj vbd\"],\n  \"stripper\": [\"s-t-r-ih1 p-er\", \"nn\"],\n  \"striptease\": [\"s-t-r-ih1-p t-iy-z\", \"nn\"],\n  \"strive\": [\"s-t-r-ay1-v\", \"vb vbp\"],\n  \"strobe\": [\"s-t-r-ow1-b\", \"nn\"],\n  \"strode\": [\"s-t-r-ow1-d\", \"vbd\"],\n  \"stroke\": [\"s-t-r-ow1-k\", \"nn vb\"],\n  \"stroll\": [\"s-t-r-ow1-l\", \"nn vb vbp\"],\n  \"stroller\": [\"s-t-r-ow1 l-er\", \"nn\"],\n  \"strong\": [\"s-t-r-ao1-ng\", \"jj rb\"],\n  \"stronger\": [\"s-t-r-ao1-ng er\", \"jjr rbr\"],\n  \"strongest\": [\"s-t-r-ao1-ng g-ah-s-t\", \"jjs\"],\n  \"stronghold\": [\"s-t-r-ao1-ng hh-ow-l-d\", \"nn\"],\n  \"strongly\": [\"s-t-r-ao1-ng l-iy\", \"rb\"],\n  \"strongman\": [\"s-t-r-ao1-ng m-ae-n\", \"nn\"],\n  \"strove\": [\"s-t-r-ow1-v\", \"vbd\"],\n  \"struck\": [\"s-t-r-ah1-k\", \"vbd vbn\"],\n  \"structural\": [\"s-t-r-ah1-k ch-er ah-l\", \"jj\"],\n  \"structurally\": [\"s-t-r-ah1-k ch-er ah l-iy\", \"rb\"],\n  \"structure\": [\"s-t-r-ah1-k ch-er\", \"nn vb\"],\n  \"structured\": [\"s-t-r-ah1-k ch-er-d\", \"vbn jj vbd\"],\n  \"struggle\": [\"s-t-r-ah1 g-ah-l\", \"nn vbp vb\"],\n  \"struggling\": [\"s-t-r-ah1 g-ah l-ih-ng\", \"vbg jj\"],\n  \"strung\": [\"s-t-r-ah1-ng\", \"vbn vbd\"],\n  \"strut\": [\"s-t-r-ah1-t\", \"nn\"],\n  \"strutting\": [\"s-t-r-ah1 t-ih-ng\", \"vbg jj\"],\n  \"strychnine\": [\"s-t-r-ih1-k n-ay-n\", \"nn\"],\n  \"stub\": [\"s-t-ah1-b\", \"nn vb\"],\n  \"stubble\": [\"s-t-ah1 b-ah-l\", \"jj nn\"],\n  \"stubborn\": [\"s-t-ah1 b-er-n\", \"jj\"],\n  \"stubbornly\": [\"s-t-ah1 b-er-n l-iy\", \"rb\"],\n  \"stubbornness\": [\"s-t-ah1 b-er-n n-ah-s\", \"nn\"],\n  \"stubby\": [\"s-t-ah1 b-iy\", \"jj\"],\n  \"stucco\": [\"s-t-ah1 k-ow\", \"nn\"],\n  \"stuck\": [\"s-t-ah1-k\", \"vbn vbd jj\"],\n  \"stud\": [\"s-t-ah1-d\", \"nn\"],\n  \"studded\": [\"s-t-ah1 d-ih-d\", \"vbn\"],\n  \"student\": [\"s-t-uw1 d-ah-n-t\", \"nn\"],\n  \"studied\": [\"s-t-ah1 d-iy-d\", \"vbn vbd jj\"],\n  \"studio\": [\"s-t-uw1 d-iy ow\", \"nn\"],\n  \"studious\": [\"s-t-uw1 d-iy ah-s\", \"jj\"],\n  \"studiously\": [\"s-t-uw1 d-iy ah-s l-iy\", \"rb\"],\n  \"study\": [\"s-t-ah1 d-iy\", \"nn vbp vb\"],\n  \"stuff\": [\"s-t-ah1-f\", \"nn vb vbp\"],\n  \"stuffed\": [\"s-t-ah1-f-t\", \"vbn jj vbd\"],\n  \"stuffy\": [\"s-t-ah1 f-iy\", \"jj\"],\n  \"stultifying\": [\"s-t-ah1-l t-ah f-ay ih-ng\", \"jj\"],\n  \"stumble\": [\"s-t-ah1-m b-ah-l\", \"vb vbp nn\"],\n  \"stumbling\": [\"s-t-ah1-m b-ah-l ih-ng\", \"vbg jj nn\"],\n  \"stump\": [\"s-t-ah1-m-p\", \"nn vb\"],\n  \"stumpage\": [\"s-t-ah1-m p-ih-jh\", \"nn\"],\n  \"stumping\": [\"s-t-ah1-m p-ih-ng\", \"nn\"],\n  \"stun\": [\"s-t-ah1-n\", \"vb\"],\n  \"stung\": [\"s-t-ah1-ng\", \"vbn vbd\"],\n  \"stunk\": [\"s-t-ah1-ng-k\", \"vbd vbn\"],\n  \"stunned\": [\"s-t-ah1-n-d\", \"vbd vbn jj\"],\n  \"stunning\": [\"s-t-ah1 n-ih-ng\", \"jj\"],\n  \"stunningly\": [\"s-t-ah1 n-ih-ng l-iy\", \"rb\"],\n  \"stunt\": [\"s-t-ah1-n-t\", \"nn vb\"],\n  \"stupendous\": [\"s-t-uw p-eh1-n d-ah-s\", \"jj\"],\n  \"stupid\": [\"s-t-uw1 p-ah-d\", \"jj\"],\n  \"stupidest\": [\"s-t-uw1 p-ih d-ah-s-t\", \"jjs\"],\n  \"stupidity\": [\"s-t-uw p-ih1 d-ih t-iy\", \"nn\"],\n  \"stupor\": [\"s-t-uw1 p-er\", \"nn\"],\n  \"sturdy\": [\"s-t-er1 d-iy\", \"jj\"],\n  \"sturgeon\": [\"s-t-er1 jh-ah-n\", \"nn\"],\n  \"stutter\": [\"s-t-ah1 t-er\", \"nn\"],\n  \"style\": [\"s-t-ay1-l\", \"nn vb\"],\n  \"styling\": [\"s-t-ay1 l-ih-ng\", \"nn\"],\n  \"stylish\": [\"s-t-ay1 l-ih-sh\", \"jj\"],\n  \"stylishly\": [\"s-t-ay1 l-ih-sh l-iy\", \"rb\"],\n  \"stylist\": [\"s-t-ay1 l-ih-s-t\", \"nn\"],\n  \"stylistic\": [\"s-t-ay l-ih1 s-t-ih-k\", \"jj\"],\n  \"stylistically\": [\"s-t-ay l-ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"stylize\": [\"s-t-ay1-l-ay-z\", \"vb\"],\n  \"stylized\": [\"s-t-ay1 l-ay-z-d\", \"jj vbn\"],\n  \"stymie\": [\"s-t-ay1 m-iy\", \"vb\"],\n  \"stymied\": [\"s-t-ay1 m-iy-d\", \"vbn jj\"],\n  \"styrene\": [\"s-t-ay1 r-iy-n\", \"nn\"],\n  \"suave\": [\"s-w-aa1-v\", \"jj\"],\n  \"sub\": [\"s-ah1-b\", \"nn\"],\n  \"subatomic\": [\"s-ah-b ah t-aa1 m-ih-k\", \"jj\"],\n  \"subcommittee\": [\"s-ah1-b k-ah m-ih1 t-iy\", \"nn\"],\n  \"subcompact\": [\"s-ah-b k-aa1-m p-ae-k-t\", \"nn jj\"],\n  \"subconscious\": [\"s-ah-b k-aa1-n sh-ah-s\", \"jj nn\"],\n  \"subconsciously\": [\"s-ah-b k-aa1-n sh-ah-s l-iy\", \"rb\"],\n  \"subcontinent\": [\"s-ah-b k-aa1-n t-ih n-ah-n-t\", \"nn\"],\n  \"subcontract\": [\"s-ah-b k-aa1-n t-r-ae-k-t\", \"vb nn\"],\n  \"subcontractor\": [\"s-ah-b k-aa1-n t-r-ae-k t-er\", \"nn\"],\n  \"subdivision\": [\"s-ah1-b d-ih v-ih zh-ah-n\", \"nn\"],\n  \"subdue\": [\"s-ah-b d-uw1\", \"vb\"],\n  \"subdued\": [\"s-ah-b d-uw1-d\", \"vbn jj vbd\"],\n  \"subgroup\": [\"s-ah1-b g-r-uw-p\", \"nn\"],\n  \"subject\": [\"s-ah-b jh-eh1-k-t\", \"nn jj vb\"],\n  \"subjective\": [\"s-ah-b jh-eh1-k t-ih-v\", \"jj\"],\n  \"subjugate\": [\"s-ah1-b jh-ah g-ey-t\", \"vb\"],\n  \"subjugated\": [\"s-ah1-b jh-ah g-ey t-ih-d\", \"jj\"],\n  \"sublease\": [\"s-ah1-b l-iy-s\", \"nn\"],\n  \"sublet\": [\"s-ah1 b-l-eh-t\", \"vb vbn\"],\n  \"sublime\": [\"s-ah b-l-ay1-m\", \"jj nn\"],\n  \"subliminal\": [\"s-ah-b l-ih1 m-ih n-ah-l\", \"jj\"],\n  \"submachine\": [\"s-ah-b m-ah sh-iy1-n\", \"jj\"],\n  \"submarine\": [\"s-ah1-b m-er iy-n\", \"nn jj\"],\n  \"submerge\": [\"s-ah-b m-er1-jh\", \"vb\"],\n  \"submerged\": [\"s-ah-b m-er1-jh-d\", \"vbn jj\"],\n  \"submission\": [\"s-ah-b m-ih1 sh-ah-n\", \"nn\"],\n  \"submissive\": [\"s-ah-b m-ih1 s-ih-v\", \"jj\"],\n  \"submit\": [\"s-ah-b m-ih1-t\", \"vb vbp\"],\n  \"subordinate\": [\"s-ah b-ao1-r d-ah n-ey-t\", \"jj nn vb\"],\n  \"subordinated\": [\"s-ah b-ao1-r d-ah n-ey t-ih-d\", \"vbn jj vbd\"],\n  \"subpar\": [\"s-ah-b p-aa1-r\", \"jj\"],\n  \"subplot\": [\"s-ah1-b p-l-aa-t\", \"nn\"],\n  \"subpoena\": [\"s-ah p-iy1 n-ah\", \"nn vb\"],\n  \"subscribe\": [\"s-ah-b s-k-r-ay1-b\", \"vb vbp\"],\n  \"subscribed\": [\"s-ah-b s-k-r-ay1-b-d\", \"vbn vbd jj\"],\n  \"subscriber\": [\"s-ah-b s-k-r-ay1 b-er\", \"nn\"],\n  \"subscription\": [\"s-ah-b s-k-r-ih1-p sh-ah-n\", \"nn jj\"],\n  \"subsequent\": [\"s-ah1-b s-ah k-w-ah-n-t\", \"jj\"],\n  \"subsequently\": [\"s-ah1-b s-ah k-w-ah-n-t l-iy\", \"rb\"],\n  \"subservience\": [\"s-ah-b s-er1 v-iy ah-n-s\", \"nn\"],\n  \"subservient\": [\"s-ah-b s-er1 v-iy ah-n-t\", \"jj\"],\n  \"subset\": [\"s-ah1-b s-eh-t\", \"nn\"],\n  \"subside\": [\"s-ah-b s-ay1-d\", \"vb vbp\"],\n  \"subsidence\": [\"s-ah-b s-ay1 d-ah-n-s\", \"nn\"],\n  \"subsidiary\": [\"s-ah-b s-ih1 d-iy eh r-iy\", \"nn jj\"],\n  \"subsidization\": [\"s-ah-b s-ih d-ih z-ey1 sh-ah-n\", \"nn\"],\n  \"subsidize\": [\"s-ah1-b s-ih d-ay-z\", \"vb vbp\"],\n  \"subsidized\": [\"s-ah1-b s-ih d-ay-z-d\", \"jj vbn\"],\n  \"subsidy\": [\"s-ah1-b s-ih d-iy\", \"nn\"],\n  \"subsist\": [\"s-ah-b s-ih1-s-t\", \"vb\"],\n  \"subsistence\": [\"s-ah-b s-ih1 s-t-ah-n-s\", \"nn\"],\n  \"subsoil\": [\"s-ah1-b s-oy-l\", \"nn\"],\n  \"substance\": [\"s-ah1-b s-t-ah-n-s\", \"nn\"],\n  \"substandard\": [\"s-ah-b s-t-ae1-n d-er-d\", \"jj\"],\n  \"substantial\": [\"s-ah-b s-t-ae1-n ch-ah-l\", \"jj\"],\n  \"substantially\": [\"s-ah-b s-t-ae1-n sh-ah l-iy\", \"rb\"],\n  \"substantiate\": [\"s-ah-b s-t-ae1-n ch-iy ey-t\", \"vb\"],\n  \"substantiated\": [\"s-ah-b s-t-ae1-n sh-iy ey t-ih-d\", \"jj\"],\n  \"substantiation\": [\"s-ah-b s-t-ae-n ch-iy ey1 sh-ah-n\", \"nn\"],\n  \"substantive\": [\"s-ah1-b s-t-ah-n t-ih-v\", \"jj nn\"],\n  \"substantively\": [\"s-ah1-b s-t-ah-n t-ih-v l-iy\", \"rb\"],\n  \"substitute\": [\"s-ah1-b s-t-ah t-uw-t\", \"nn jj vb vbp\"],\n  \"substituted\": [\"s-ah1-b s-t-ah t-uw t-ah-d\", \"vbn jj vbd\"],\n  \"substitution\": [\"s-ah-b s-t-ih t-uw1 sh-ah-n\", \"nn\"],\n  \"substrate\": [\"s-ah1-b s-t-r-ey-t\", \"nn\"],\n  \"subsurface\": [\"s-ah1-b s-er f-ah-s\", \"jj\"],\n  \"subsystem\": [\"s-ah1-b s-ih s-t-ah-m\", \"nn\"],\n  \"subterfuge\": [\"s-ah1-b t-er f-y-uw-jh\", \"nn\"],\n  \"subterranean\": [\"s-ah-b t-er ey1 n-iy ah-n\", \"jj\"],\n  \"subtitle\": [\"s-ah1-b t-ay t-ah-l\", \"nn vb\"],\n  \"subtle\": [\"s-ah1 t-ah-l\", \"jj\"],\n  \"subtler\": [\"s-ah1 t-ah-l er\", \"jjr nn\"],\n  \"subtlety\": [\"s-ah1 t-ah-l t-iy\", \"nn\"],\n  \"subtly\": [\"s-ah1 t-ah l-iy\", \"rb\"],\n  \"subtract\": [\"s-ah-b t-r-ae1-k-t\", \"vb vbp\"],\n  \"subtraction\": [\"s-ah-b t-r-ae1-k sh-ah-n\", \"nn\"],\n  \"suburb\": [\"s-ah1 b-er-b\", \"nn\"],\n  \"suburban\": [\"s-ah b-er1 b-ah-n\", \"jj\"],\n  \"suburbanite\": [\"s-ah b-er1 b-ah n-ay-t\", \"jj nn\"],\n  \"suburbia\": [\"s-ah b-er1 b-iy ah\", \"nn\"],\n  \"subversion\": [\"s-ah-b v-er1 zh-ah-n\", \"nn\"],\n  \"subversive\": [\"s-ah-b v-er1 s-ih-v\", \"jj\"],\n  \"subvert\": [\"s-ah-b v-er1-t\", \"vb vbp\"],\n  \"subway\": [\"s-ah1-b w-ey\", \"nn\"],\n  \"subzero\": [\"s-ah-b z-ih1 r-ow\", \"jj\"],\n  \"succeed\": [\"s-ah-k s-iy1-d\", \"vb vbp\"],\n  \"success\": [\"s-ah-k s-eh1-s\", \"nn\"],\n  \"successful\": [\"s-ah-k s-eh1-s f-ah-l\", \"jj\"],\n  \"successfully\": [\"s-ah-k s-eh1-s f-ah l-iy\", \"rb\"],\n  \"succession\": [\"s-ah-k s-eh1 sh-ah-n\", \"nn\"],\n  \"successive\": [\"s-ah-k s-eh1 s-ih-v\", \"jj\"],\n  \"successively\": [\"s-ah-k s-eh1 s-ih-v l-iy\", \"rb\"],\n  \"successor\": [\"s-ah-k s-eh1 s-er\", \"nn\"],\n  \"succinct\": [\"s-ah-k s-ih1-ng-k-t\", \"jj\"],\n  \"succinctly\": [\"s-ah-k s-ih1-ng-k-t l-iy\", \"rb\"],\n  \"succor\": [\"s-ah1 k-er\", \"nn\"],\n  \"succulent\": [\"s-ah1 k-y-ah l-ih-n-t\", \"jj\"],\n  \"succumb\": [\"s-ah k-ah1-m\", \"vb\"],\n  \"such\": [\"s-ah1-ch\", \"jj pdt dt\"],\n  \"suck\": [\"s-ah1-k\", \"vb nn vbp\"],\n  \"sucker\": [\"s-ah1 k-er\", \"nn vb\"],\n  \"suction\": [\"s-ah1-k sh-ah-n\", \"nn\"],\n  \"sudden\": [\"s-ah1 d-ah-n\", \"jj\"],\n  \"suddenly\": [\"s-ah1 d-ah-n l-iy\", \"rb\"],\n  \"suddenness\": [\"s-ah1 d-ah-n n-ah-s\", \"nn\"],\n  \"suds\": [\"s-ah1-d-z\", \"nn\"],\n  \"sue\": [\"s-uw1\", \"vb vbp\"],\n  \"suede\": [\"s-w-ey1-d\", \"nn\"],\n  \"suey\": [\"s-uw1 iy\", \"nn\"],\n  \"suffer\": [\"s-ah1 f-er\", \"vb vbp\"],\n  \"sufferer\": [\"s-ah1 f-er er\", \"nn\"],\n  \"suffering\": [\"s-ah1 f-er ih-ng\", \"vbg jj nn\"],\n  \"suffice\": [\"s-ah f-ay1-s\", \"vb vbp\"],\n  \"sufficiency\": [\"s-ah f-ih1 sh-ah-n s-iy\", \"nn\"],\n  \"sufficient\": [\"s-ah f-ih1 sh-ah-n-t\", \"jj\"],\n  \"sufficiently\": [\"s-ah f-ih1 sh-ah-n-t l-iy\", \"rb\"],\n  \"suffix\": [\"s-ah1 f-ih-k-s\", \"nn\"],\n  \"suffocate\": [\"s-ah1 f-ah k-ey-t\", \"vb\"],\n  \"suffocating\": [\"s-ah1 f-ah k-ey t-ih-ng\", \"vbg jj\"],\n  \"suffocation\": [\"s-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"suffrage\": [\"s-ah1 f-r-ih-jh\", \"nn\"],\n  \"suffragette\": [\"s-ah f-r-ah jh-eh1-t\", \"nn\"],\n  \"suffuse\": [\"s-ah-f-y-uw1-z\", \"vb\"],\n  \"sugar\": [\"sh-uh1 g-er\", \"nn vb\"],\n  \"sugarcane\": [\"sh-uh1-g er-k ey-n\", \"nn\"],\n  \"sugared\": [\"sh-uh1 g-er-d\", \"jj vbn\"],\n  \"sugary\": [\"sh-uh1 g-er iy\", \"jj\"],\n  \"suggest\": [\"s-ah-g jh-eh1-s-t\", \"vbp vb\"],\n  \"suggested\": [\"s-ah-g jh-eh1 s-t-ah-d\", \"vbd vbn jj\"],\n  \"suggestion\": [\"s-ah-g jh-eh1-s ch-ah-n\", \"nn\"],\n  \"suggestive\": [\"s-ah-g jh-eh1 s-t-ih-v\", \"jj\"],\n  \"suicidal\": [\"s-uw ah s-ay1 d-ah-l\", \"jj\"],\n  \"suicide\": [\"s-uw1 ah s-ay-d\", \"nn\"],\n  \"suit\": [\"s-uw1-t\", \"nn vbp rb vb\"],\n  \"suitability\": [\"s-uw t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"suitable\": [\"s-uw1 t-ah b-ah-l\", \"jj\"],\n  \"suitably\": [\"s-uw1 t-ah b-l-iy\", \"rb\"],\n  \"suitcase\": [\"s-uw1-t k-ey-s\", \"nn\"],\n  \"suite\": [\"s-w-iy1-t\", \"nn\"],\n  \"suitor\": [\"s-uw1 t-er\", \"nn\"],\n  \"sulfide\": [\"s-ah1-l f-ay-d\", \"nn\"],\n  \"sulfur\": [\"s-ah1-l f-er\", \"nn\"],\n  \"sulfuric\": [\"s-ah-l f-y-uh1 r-ih-k\", \"jj\"],\n  \"sulk\": [\"s-ah1-l-k\", \"vb\"],\n  \"sullen\": [\"s-ah1 l-ah-n\", \"jj\"],\n  \"sulphur\": [\"s-ah1-l f-er\", \"nn\"],\n  \"sultan\": [\"s-ah1-l t-ah-n\", \"nn\"],\n  \"sultry\": [\"s-ah1-l t-r-iy\", \"jj\"],\n  \"sum\": [\"s-ah1-m\", \"nn vb\"],\n  \"sumac\": [\"s-uw1 m-ae-k\", \"nn\"],\n  \"summarily\": [\"s-ah m-eh1 r-ih l-iy\", \"rb\"],\n  \"summarize\": [\"s-ah1 m-er ay-z\", \"vb\"],\n  \"summary\": [\"s-ah1 m-er iy\", \"nn\"],\n  \"summation\": [\"s-ah m-ey1 sh-ah-n\", \"nn\"],\n  \"summer\": [\"s-ah1 m-er\", \"nn\"],\n  \"summertime\": [\"s-ah1 m-er t-ay-m\", \"nn\"],\n  \"summit\": [\"s-ah1 m-ah-t\", \"nn jj\"],\n  \"summiteer\": [\"s-ah m-ih t-ih1-r\", \"nn\"],\n  \"summitry\": [\"s-ah1 m-ih t-r-iy\", \"nn\"],\n  \"summon\": [\"s-ah1 m-ah-n\", \"vb\"],\n  \"summons\": [\"s-ah1 m-ah-n-z\", \"nn\"],\n  \"sumptuous\": [\"s-ah1-m-p ch-w-ah-s\", \"jj\"],\n  \"sun\": [\"s-ah1-n\", \"nn vb\"],\n  \"sunburn\": [\"s-ah1-n b-er-n\", \"nn vb\"],\n  \"sunder\": [\"s-ah1-n d-er\", \"vb\"],\n  \"sundown\": [\"s-ah1-n d-aw-n\", \"nn\"],\n  \"sundry\": [\"s-ah1-n d-r-iy\", \"jj\"],\n  \"sunflower\": [\"s-ah1-n f-l-aw er\", \"nn\"],\n  \"sung\": [\"s-ah1-ng\", \"vbn\"],\n  \"sunglasses\": [\"s-ah1-n g-l-ae s-ih-z\", \"nn\"],\n  \"sunk\": [\"s-ah1-ng-k\", \"vbn vbd\"],\n  \"sunken\": [\"s-ah1-ng k-ah-n\", \"jj\"],\n  \"sunlight\": [\"s-ah1-n l-ay-t\", \"nn\"],\n  \"sunny\": [\"s-ah1 n-iy\", \"jj\"],\n  \"sunrise\": [\"s-ah1-n r-ay-z\", \"nn\"],\n  \"sunroof\": [\"s-ah1-n r-uw-f\", \"nn\"],\n  \"sunset\": [\"s-ah1-n s-eh-t\", \"nn vb\"],\n  \"sunshine\": [\"s-ah1-n sh-ay-n\", \"nn\"],\n  \"sunshiny\": [\"s-ah1-n sh-ay n-iy\", \"jj\"],\n  \"suntan\": [\"s-ah1-n t-ae-n\", \"nn\"],\n  \"super\": [\"s-uw1 p-er\", \"jj nn\"],\n  \"superb\": [\"s-uh p-er1-b\", \"jj\"],\n  \"superbly\": [\"s-uw1 p-er b-l-iy\", \"rb\"],\n  \"supercharged\": [\"s-uw p-er ch-aa1-r-jh-d\", \"jj\"],\n  \"supercilious\": [\"s-uw p-er s-ih1 l-iy ah-s\", \"jj\"],\n  \"supercomputer\": [\"s-uw p-er k-ah-m p-y-uw1 t-er\", \"nn\"],\n  \"superconductor\": [\"s-uw1 p-er k-ah-n d-ah-k t-er\", \"nn\"],\n  \"superfast\": [\"s-uw1 p-er f-ae-s-t\", \"jj\"],\n  \"superficial\": [\"s-uw p-er f-ih1 sh-ah-l\", \"jj\"],\n  \"superficially\": [\"s-uw1 p-er f-ih sh-ah-l l-iy\", \"rb\"],\n  \"superfluous\": [\"s-uw1 p-er f-l-w-ah-s\", \"jj\"],\n  \"supergiant\": [\"s-uw p-er jh-ay1 ah-n-t\", \"nn\"],\n  \"superhighway\": [\"s-uw p-er hh-ay1 w-ey\", \"nn\"],\n  \"superhuman\": [\"s-uw p-er hh-y-uw1 m-ah-n\", \"jj\"],\n  \"superimpose\": [\"s-uw-p-er-ah-m-p-ow1-z\", \"vb\"],\n  \"superimposed\": [\"s-uw p-er ah-m p-ow1-z-d\", \"vbn jj\"],\n  \"superintendent\": [\"s-uw p-er ah-n t-eh1-n d-ah-n-t\", \"nn\"],\n  \"superior\": [\"s-uw p-ih1 r-iy er\", \"jj nn\"],\n  \"superiority\": [\"s-uw p-ih r-iy ao1 r-ih t-iy\", \"nn\"],\n  \"superlative\": [\"s-uh p-er1 l-ah t-ih-v\", \"jj\"],\n  \"supermarket\": [\"s-uw1 p-er m-aa-r k-ih-t\", \"nn\"],\n  \"supernatural\": [\"s-uw p-er n-ae1 ch-er ah-l\", \"jj nn\"],\n  \"superpower\": [\"s-uw p-er p-aw1 er\", \"nn\"],\n  \"superregional\": [\"s-uw p-er r-iy1 jh-ah n-ah-l\", \"jj\"],\n  \"supersede\": [\"s-uw p-er s-iy1-d\", \"vb\"],\n  \"supersonic\": [\"s-uw p-er s-aa1 n-ih-k\", \"jj\"],\n  \"superstar\": [\"s-uw p-er s-t-aa1-r\", \"nn\"],\n  \"superstition\": [\"s-uw p-er s-t-ih1 sh-ah-n\", \"nn\"],\n  \"superstitious\": [\"s-uw p-er s-t-ih1 sh-ah-s\", \"jj\"],\n  \"superstore\": [\"s-uw1 p-er s-t-ao-r\", \"nn\"],\n  \"superstructure\": [\"s-uw1 p-er s-t-r-ah-k ch-er\", \"nn\"],\n  \"supertanker\": [\"s-uw1 p-er t-ae-ng k-er\", \"nn\"],\n  \"supervise\": [\"s-uw1 p-er v-ay-z\", \"vb vbp\"],\n  \"supervised\": [\"s-uw1 p-er v-ay-z-d\", \"vbd jj vbn\"],\n  \"supervision\": [\"s-uw p-er v-ih1 zh-ah-n\", \"nn\"],\n  \"supervisor\": [\"s-uw1 p-er v-ay z-er\", \"nn\"],\n  \"supervisory\": [\"s-uw p-er v-ay1 z-er iy\", \"jj\"],\n  \"supervoting\": [\"s-uw p-er v-ow1 t-ih-ng\", \"jj\"],\n  \"supine\": [\"s-ah p-ay1-n\", \"nn\"],\n  \"supper\": [\"s-ah1 p-er\", \"nn\"],\n  \"supplant\": [\"s-ah p-l-ae1-n-t\", \"vb\"],\n  \"supple\": [\"s-ah1 p-ah-l\", \"jj\"],\n  \"supplement\": [\"s-ah1 p-l-ah m-ah-n-t\", \"nn vbp vb\"],\n  \"supplemental\": [\"s-ah p-l-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"supplementary\": [\"s-ah p-l-ah m-eh1-n t-er iy\", \"jj nn\"],\n  \"supplied\": [\"s-ah p-l-ay1-d\", \"vbn vbd\"],\n  \"supplier\": [\"s-ah p-l-ay1 er\", \"nn\"],\n  \"supply\": [\"s-ah p-l-ay1\", \"nn vbp vb\"],\n  \"support\": [\"s-ah p-ao1-r-t\", \"nn vb vbp\"],\n  \"supportable\": [\"s-ah p-ao1-r t-ah b-ah-l\", \"jj\"],\n  \"supported\": [\"s-ah p-ao1-r t-ah-d\", \"vbn jj vbd\"],\n  \"supporter\": [\"s-ah p-ao1-r t-er\", \"nn\"],\n  \"supporting\": [\"s-ah p-ao1-r t-ih-ng\", \"vbg jj\"],\n  \"supportive\": [\"s-ah p-ao1-r t-ih-v\", \"jj\"],\n  \"suppose\": [\"s-ah p-ow1-z\", \"vbp vb\"],\n  \"supposed\": [\"s-ah p-ow1-z-d\", \"vbn jj vbd\"],\n  \"supposedly\": [\"s-ah p-ow1 z-ah-d l-iy\", \"rb\"],\n  \"suppress\": [\"s-ah p-r-eh1-s\", \"vb vbp\"],\n  \"suppressant\": [\"s-ah p-r-eh1 s-ah-n-t\", \"nn\"],\n  \"suppressed\": [\"s-ah p-r-eh1-s-t\", \"vbn jj vbd\"],\n  \"suppression\": [\"s-ah p-r-eh1 sh-ah-n\", \"nn\"],\n  \"suppressor\": [\"s-ah p-r-eh1 s-er\", \"nn\"],\n  \"supra\": [\"s-uw1 p-r-ah\", \"rb\"],\n  \"supremacy\": [\"s-ah p-r-eh1 m-ah s-iy\", \"nn\"],\n  \"supreme\": [\"s-ah p-r-iy1-m\", \"nn jj\"],\n  \"supremely\": [\"s-uw p-r-iy1 m-ah l-iy\", \"rb\"],\n  \"surcharge\": [\"s-er ch-aa1-r-jh\", \"nn\"],\n  \"sure\": [\"sh-uh1-r\", \"jj pdt rb uh\"],\n  \"surely\": [\"sh-uh1-r l-iy\", \"rb\"],\n  \"surest\": [\"sh-uh1 r-ih-s-t\", \"jjs\"],\n  \"surf\": [\"s-er1-f\", \"nn vb vbp\"],\n  \"surface\": [\"s-er1 f-ah-s\", \"nn vb vbp\"],\n  \"surfaceness\": [\"s-er1 f-ah-s n-ah-s\", \"nn\"],\n  \"surfactant\": [\"s-er f-ae1-k t-ah-n-t\", \"nn\"],\n  \"surfboard\": [\"s-er1-f b-ao-r-d\", \"nn\"],\n  \"surfeit\": [\"s-er1 f-ah-t\", \"nn\"],\n  \"surfer\": [\"s-er1 f-er\", \"nn\"],\n  \"surfing\": [\"s-er1 f-ih-ng\", \"nn\"],\n  \"surge\": [\"s-er1-jh\", \"nn vb\"],\n  \"surgeon\": [\"s-er1 jh-ah-n\", \"nn\"],\n  \"surgery\": [\"s-er1 jh-er iy\", \"nn\"],\n  \"surgical\": [\"s-er1 jh-ih k-ah-l\", \"jj\"],\n  \"surgically\": [\"s-er1 jh-ih k-ah l-iy\", \"rb\"],\n  \"surging\": [\"s-er1 jh-ih-ng\", \"vbg jj\"],\n  \"surly\": [\"s-er1 l-iy\", \"jj\"],\n  \"surmise\": [\"s-er m-ay1-z\", \"vb\"],\n  \"surmount\": [\"s-er m-aw1-n-t\", \"vb\"],\n  \"surname\": [\"s-er1 n-ey-m\", \"nn\"],\n  \"surpass\": [\"s-er p-ae1-s\", \"vb vbp\"],\n  \"surplus\": [\"s-er1-p l-ah-s\", \"nn jj\"],\n  \"surprise\": [\"s-er p-r-ay1-z\", \"nn jj rb vb\"],\n  \"surprised\": [\"s-er p-r-ay1-z-d\", \"vbn vbd jj\"],\n  \"surprising\": [\"s-er p-r-ay1 z-ih-ng\", \"jj vbg\"],\n  \"surprisingly\": [\"s-er p-r-ay1 z-ih-ng l-iy\", \"rb\"],\n  \"surreal\": [\"s-er iy1-l\", \"jj\"],\n  \"surrealism\": [\"s-er iy1 l-ih z-ah-m\", \"nn\"],\n  \"surrealistic\": [\"s-er iy l-ih1 s-t-ih-k\", \"jj\"],\n  \"surrender\": [\"s-er eh1-n d-er\", \"nn vbp vb\"],\n  \"surreptitious\": [\"s-er ah-p t-ih1 sh-ah-s\", \"jj\"],\n  \"surreptitiously\": [\"s-er ah-p t-ih1 sh-ah-s l-iy\", \"rb\"],\n  \"surrogacy\": [\"s-er1 ah g-ah s-iy\", \"nn\"],\n  \"surrogate\": [\"s-er1 ah g-ah-t\", \"nn\"],\n  \"surround\": [\"s-er aw1-n-d\", \"vbp vb\"],\n  \"surrounding\": [\"s-er aw1-n d-ih-ng\", \"vbg jj\"],\n  \"surtax\": [\"s-er1 t-ae-k-s\", \"nn\"],\n  \"surveillance\": [\"s-er v-ey1 l-ah-n-s\", \"nn\"],\n  \"survey\": [\"s-er v-ey1\", \"nn vb vbp\"],\n  \"surveyor\": [\"s-er v-ey1 er\", \"nn\"],\n  \"survivable\": [\"s-er v-ay1 v-ah b-ah-l\", \"jj\"],\n  \"survival\": [\"s-er v-ay1 v-ah-l\", \"nn\"],\n  \"survivalist\": [\"s-er v-ay1 v-ah l-ih-s-t\", \"nn\"],\n  \"survive\": [\"s-er v-ay1-v\", \"vb vbp\"],\n  \"survivor\": [\"s-er v-ay1 v-er\", \"nn\"],\n  \"susceptibility\": [\"s-ah s-eh-p t-ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"susceptible\": [\"s-ah s-eh1-p t-ah b-ah-l\", \"jj nn\"],\n  \"sushi\": [\"s-uw1 sh-iy\", \"nn\"],\n  \"suspect\": [\"s-ah s-p-eh1-k-t\", \"vbp jj nn vb\"],\n  \"suspected\": [\"s-ah s-p-eh1-k t-ah-d\", \"vbn vbd jj\"],\n  \"suspend\": [\"s-ah s-p-eh1-n-d\", \"vb vbp\"],\n  \"suspended\": [\"s-ah s-p-eh1-n d-ah-d\", \"vbn jj vbd\"],\n  \"suspender\": [\"s-ah s-p-eh1-n d-er\", \"nn\"],\n  \"suspense\": [\"s-ah s-p-eh1-n-s\", \"nn\"],\n  \"suspenseful\": [\"s-ah s-p-eh1-n-s f-ah-l\", \"jj\"],\n  \"suspension\": [\"s-ah s-p-eh1-n sh-ah-n\", \"nn\"],\n  \"suspicion\": [\"s-ah s-p-ih1 sh-ah-n\", \"nn\"],\n  \"suspicious\": [\"s-ah s-p-ih1 sh-ah-s\", \"jj\"],\n  \"suspiciously\": [\"s-ah s-p-ih1 sh-ah-s l-iy\", \"rb\"],\n  \"sustain\": [\"s-ah s-t-ey1-n\", \"vb vbp\"],\n  \"sustainability\": [\"s-ah s-t-ey n-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"sustainable\": [\"s-ah s-t-ey1 n-ah b-ah-l\", \"jj\"],\n  \"sustained\": [\"s-ah s-t-ey1-n-d\", \"vbn vbd jj\"],\n  \"sustenance\": [\"s-ah1 s-t-ah n-ah-n-s\", \"nn\"],\n  \"suture\": [\"s-uw1 ch-er\", \"nn\"],\n  \"svelte\": [\"s-v-eh1-l-t\", \"jj\"],\n  \"swab\": [\"s-w-aa1-b\", \"vb\"],\n  \"swagger\": [\"s-w-ae1 g-er\", \"nn vb\"],\n  \"swallow\": [\"s-w-aa1 l-ow\", \"vb nn vbp\"],\n  \"swam\": [\"s-w-ae1-m\", \"vbd\"],\n  \"swami\": [\"s-w-aa1 m-iy\", \"nn\"],\n  \"swamp\": [\"s-w-aa1-m-p\", \"nn vb\"],\n  \"swampy\": [\"s-w-aa1-m p-iy\", \"jj\"],\n  \"swan\": [\"s-w-aa1-n\", \"nn\"],\n  \"swank\": [\"s-w-ae1-ng-k\", \"jj\"],\n  \"swanky\": [\"s-w-aa1-ng k-iy\", \"jj\"],\n  \"swap\": [\"s-w-aa1-p\", \"nn vbp vb\"],\n  \"swarm\": [\"s-w-ao1-r-m\", \"nn vb\"],\n  \"swart\": [\"s-w-ao1-r-t\", \"jj\"],\n  \"swarthy\": [\"s-w-ao1-r dh-iy\", \"jj\"],\n  \"swashbuckling\": [\"s-w-aa1-sh b-ah k-l-ih-ng\", \"jj\"],\n  \"swat\": [\"s-w-aa1-t\", \"nn\"],\n  \"swatch\": [\"s-w-aa1-ch\", \"nn\"],\n  \"swath\": [\"s-w-aa1-th\", \"nn\"],\n  \"swathe\": [\"s-w-aa1-dh\", \"vb\"],\n  \"sway\": [\"s-w-ey1\", \"vb vbp nn\"],\n  \"swear\": [\"s-w-eh1-r\", \"vb vbp\"],\n  \"sweat\": [\"s-w-eh1-t\", \"nn vbd vbp vb\"],\n  \"sweater\": [\"s-w-eh1 t-er\", \"nn\"],\n  \"sweatshirt\": [\"s-w-eh1-t sh-er-t\", \"nn\"],\n  \"sweatshop\": [\"s-w-eh1-t sh-aa-p\", \"nn\"],\n  \"sweaty\": [\"s-w-eh1 t-iy\", \"jj\"],\n  \"sweep\": [\"s-w-iy1-p\", \"nn vb\"],\n  \"sweeper\": [\"s-w-iy1 p-er\", \"nn\"],\n  \"sweeping\": [\"s-w-iy1 p-ih-ng\", \"vbg jj nn\"],\n  \"sweepstakes\": [\"s-w-iy1-p s-t-ey-k-s\", \"nn\"],\n  \"sweet\": [\"s-w-iy1-t\", \"jj\"],\n  \"sweeten\": [\"s-w-iy1 t-ah-n\", \"vb\"],\n  \"sweetened\": [\"s-w-iy1 t-ah-n-d\", \"vbn vbd jj\"],\n  \"sweetener\": [\"s-w-iy1 t-ah-n er\", \"nn\"],\n  \"sweetening\": [\"s-w-iy1 t-ah-n ih-ng\", \"nn\"],\n  \"sweeter\": [\"s-w-iy1 t-er\", \"jjr\"],\n  \"sweetest\": [\"s-w-iy1 t-ah-s-t\", \"jjs\"],\n  \"sweetheart\": [\"s-w-iy1-t hh-aa-r-t\", \"nn jj\"],\n  \"sweetly\": [\"s-w-iy1-t l-iy\", \"rb\"],\n  \"sweetness\": [\"s-w-iy1-t n-ah-s\", \"nn\"],\n  \"swell\": [\"s-w-eh1-l\", \"vb vbp jj nn\"],\n  \"swelled\": [\"s-w-eh1-l-d\", \"vbd vbn jj\"],\n  \"swelling\": [\"s-w-eh1 l-ih-ng\", \"vbg jj nn\"],\n  \"sweltering\": [\"s-w-eh1-l t-er ih-ng\", \"jj\"],\n  \"swept\": [\"s-w-eh1-p-t\", \"vbd jj vbn\"],\n  \"swerve\": [\"s-w-er1-v\", \"vbp nn vb\"],\n  \"swift\": [\"s-w-ih1-f-t\", \"jj nn rb\"],\n  \"swiftest\": [\"s-w-ih1-f t-ah-s-t\", \"jjs\"],\n  \"swiftly\": [\"s-w-ih1-f-t l-iy\", \"rb\"],\n  \"swiftness\": [\"s-w-ih1-f-t n-ah-s\", \"nn\"],\n  \"swig\": [\"s-w-ih1-g\", \"nn\"],\n  \"swim\": [\"s-w-ih1-m\", \"vb vbp nn\"],\n  \"swimmer\": [\"s-w-ih1 m-er\", \"nn\"],\n  \"swimming\": [\"s-w-ih1 m-ih-ng\", \"vbg jj nn\"],\n  \"swimsuit\": [\"s-w-ih1-m s-uw-t\", \"nn\"],\n  \"swindle\": [\"s-w-ih1-n-d-ah-l\", \"vb\"],\n  \"swindler\": [\"s-w-ih1-n-d l-er\", \"nn\"],\n  \"swine\": [\"s-w-ay1-n\", \"nn\"],\n  \"swing\": [\"s-w-ih1-ng\", \"nn vbp jj vb\"],\n  \"swinger\": [\"s-w-ih1 ng-er\", \"nn\"],\n  \"swinging\": [\"s-w-ih1 ng-ih-ng\", \"vbg jj\"],\n  \"swipe\": [\"s-w-ay1-p\", \"nn vb\"],\n  \"swirl\": [\"s-w-er1-l\", \"nn vb\"],\n  \"swish\": [\"s-w-ih1-sh\", \"vb\"],\n  \"switch\": [\"s-w-ih1-ch\", \"nn vb vbp\"],\n  \"switchboard\": [\"s-w-ih1-ch b-ao-r-d\", \"nn\"],\n  \"switched\": [\"s-w-ih1-ch-t\", \"vbd vbn jj\"],\n  \"switcher\": [\"s-w-ih1 ch-er\", \"nn\"],\n  \"swivel\": [\"s-w-ih1 v-ah-l\", \"jj nn vb\"],\n  \"swollen\": [\"s-w-ow1 l-ah-n\", \"jj vbn\"],\n  \"swoon\": [\"s-w-uw1-n\", \"nn\"],\n  \"swooning\": [\"s-w-uw1 n-ih-ng\", \"nn\"],\n  \"swoop\": [\"s-w-uw1-p\", \"nn vb\"],\n  \"swoops\": [\"s-w-uw1-p-s\", \"nn vbz\"],\n  \"sword\": [\"s-ao1-r-d\", \"nn\"],\n  \"swordfish\": [\"s-ao1-r-d f-ih-sh\", \"nn\"],\n  \"swore\": [\"s-w-ao1-r\", \"vbd\"],\n  \"sworn\": [\"s-w-ao1-r-n\", \"vbn jj\"],\n  \"swum\": [\"s-w-ah1-m\", \"vbn\"],\n  \"swung\": [\"s-w-ah1-ng\", \"vbd vbn\"],\n  \"sycamore\": [\"s-ih1 k-ah m-ao-r\", \"nn\"],\n  \"sycophantic\": [\"s-ih k-ah f-ae1-n t-ih-k\", \"jj\"],\n  \"syllable\": [\"s-ih1 l-ah b-ah-l\", \"nn\"],\n  \"sylvan\": [\"s-ih1-l v-ah-n\", \"jj\"],\n  \"symbiotic\": [\"s-ih-m b-iy aa1 t-ih-k\", \"jj\"],\n  \"symbol\": [\"s-ih1-m b-ah-l\", \"nn\"],\n  \"symbolic\": [\"s-ih-m b-aa1 l-ih-k\", \"jj\"],\n  \"symbolically\": [\"s-ih-m b-aa1 l-ih k-ah l-iy\", \"rb\"],\n  \"symbolism\": [\"s-ih1-m b-ah l-ih z-ah-m\", \"nn\"],\n  \"symbolist\": [\"s-ih1-m b-ah l-ah-s-t\", \"nn\"],\n  \"symbolize\": [\"s-ih1-m b-ah l-ay-z\", \"vb vbp\"],\n  \"symmetrical\": [\"s-ah m-eh1 t-r-ih k-ah-l\", \"jj\"],\n  \"symmetry\": [\"s-ih1 m-ah t-r-iy\", \"nn\"],\n  \"sympathetic\": [\"s-ih-m p-ah th-eh1 t-ih-k\", \"jj\"],\n  \"sympathetically\": [\"s-ih-m p-ah th-eh1 t-ih k-ah l-iy\", \"rb\"],\n  \"sympathize\": [\"s-ih1-m p-ah th-ay-z\", \"vbp vb\"],\n  \"sympathizer\": [\"s-ih1-m p-ah th-ay z-er\", \"nn\"],\n  \"sympathy\": [\"s-ih1-m p-ah th-iy\", \"nn\"],\n  \"symphonic\": [\"s-ih-m f-aa1 n-ih-k\", \"jj\"],\n  \"symphony\": [\"s-ih1-m f-ah n-iy\", \"nn\"],\n  \"symposium\": [\"s-ih-m p-ow1 z-iy ah-m\", \"nn\"],\n  \"symptom\": [\"s-ih1-m-p t-ah-m\", \"nn\"],\n  \"symptomatic\": [\"s-ih-m-p t-ah m-ae1 t-ih-k\", \"jj\"],\n  \"synagogue\": [\"s-ih1 n-ah g-ao-g\", \"nn\"],\n  \"sync\": [\"s-ih1-ng-k\", \"nn\"],\n  \"synchronize\": [\"s-ih1-ng-k-r-ah-n-ay-z\", \"vb\"],\n  \"synchronized\": [\"s-ih1-ng k-r-ah n-ay-z-d\", \"vbn jj\"],\n  \"syndicate\": [\"s-ih1-n d-ih k-ah-t\", \"nn vb\"],\n  \"syndicated\": [\"s-ih1-n d-ih k-ey t-ih-d\", \"vbn vbd jj\"],\n  \"syndication\": [\"s-ih-n d-ih k-ey1 sh-ah-n\", \"nn\"],\n  \"syndicator\": [\"s-ih1-n d-ih k-ey t-er\", \"nn\"],\n  \"syndrome\": [\"s-ih1-n d-r-ow-m\", \"nn\"],\n  \"synergistic\": [\"s-ih n-er jh-ih1 s-t-ih-k\", \"jj\"],\n  \"synergy\": [\"s-ih1 n-er jh-iy\", \"nn\"],\n  \"synonym\": [\"s-ih1 n-ah n-ih-m\", \"nn\"],\n  \"synonymous\": [\"s-ah n-aa1 n-ah m-ah-s\", \"jj\"],\n  \"synopsis\": [\"s-ih n-aa1-p s-ih-s\", \"nn\"],\n  \"synthesis\": [\"s-ih1-n th-ah s-ah-s\", \"nn\"],\n  \"synthesize\": [\"s-ih1-n th-ah s-ay-z\", \"vb\"],\n  \"synthesizer\": [\"s-ih1-n th-ah s-ay z-er\", \"nn\"],\n  \"synthetic\": [\"s-ih-n th-eh1 t-ih-k\", \"jj nn\"],\n  \"syringe\": [\"s-er ih1-n-jh\", \"nn\"],\n  \"syrup\": [\"s-er1 ah-p\", \"nn\"],\n  \"system\": [\"s-ih1 s-t-ah-m\", \"nn\"],\n  \"systematic\": [\"s-ih s-t-ah m-ae1 t-ih-k\", \"jj\"],\n  \"systematically\": [\"s-ih s-t-ah m-ae1 t-ih-k l-iy\", \"rb\"],\n  \"systemic\": [\"s-ih-s t-eh1 m-ih-k\", \"jj\"],\n  \"systemwide\": [\"s-ih1 s-t-ah-m w-ay-d\", \"jj\"],\n  \"tab\": [\"t-ae1-b\", \"nn\"],\n  \"tabby\": [\"t-ae1 b-iy\", \"jj nn\"],\n  \"table\": [\"t-ey1 b-ah-l\", \"nn vb\"],\n  \"tableau\": [\"t-ah b-l-ow1\", \"nn\"],\n  \"tablecloth\": [\"t-ey1 b-ah-l k-l-ao-th\", \"nn\"],\n  \"tablespoon\": [\"t-ey1 b-ah-l s-p-uw-n\", \"nn\"],\n  \"tablet\": [\"t-ae1 b-l-ah-t\", \"nn\"],\n  \"tableware\": [\"t-ey1 b-ah-l w-eh-r\", \"nn\"],\n  \"tabling\": [\"t-ey1 b-ah-l ih-ng\", \"vbg jj nn\"],\n  \"tabloid\": [\"t-ae1 b-l-oy-d\", \"nn jj\"],\n  \"taboo\": [\"t-ae b-uw1\", \"nn\"],\n  \"tabulate\": [\"t-ae1 b-y-ah l-ey-t\", \"vb\"],\n  \"tabulated\": [\"t-ae1 b-y-ah l-ey t-ih-d\", \"vbn jj vbd\"],\n  \"tabulation\": [\"t-ae b-y-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"tacit\": [\"t-ae1 s-ih-t\", \"jj\"],\n  \"tacitly\": [\"t-ae1 s-ih-t l-iy\", \"rb\"],\n  \"tack\": [\"t-ae1-k\", \"nn vb vbp\"],\n  \"tackle\": [\"t-ae1 k-ah-l\", \"vb vbp nn\"],\n  \"tacky\": [\"t-ae1 k-iy\", \"jj\"],\n  \"taco\": [\"t-aa1 k-ow\", \"nn\"],\n  \"tact\": [\"t-ae1-k-t\", \"nn\"],\n  \"tactful\": [\"t-ae1-k-t f-ah-l\", \"jj\"],\n  \"tactic\": [\"t-ae1-k t-ih-k\", \"nn\"],\n  \"tactical\": [\"t-ae1-k t-ih k-ah-l\", \"jj\"],\n  \"tactically\": [\"t-ae1-k t-ih k-ah l-iy\", \"rb\"],\n  \"tactician\": [\"t-ae-k t-ih1 sh-ah-n\", \"nn\"],\n  \"tad\": [\"t-ae1-d\", \"nn rb\"],\n  \"tadpole\": [\"t-ae1-d p-ow-l\", \"nn\"],\n  \"taffeta\": [\"t-ae1 f-ah t-ah\", \"nn\"],\n  \"taffy\": [\"t-ae1 f-iy\", \"jj\"],\n  \"tag\": [\"t-ae1-g\", \"nn vb\"],\n  \"tagged\": [\"t-ae1-g-d\", \"vbn vbd jj\"],\n  \"tagline\": [\"t-ae1 g-l-ay-n\", \"nn\"],\n  \"tail\": [\"t-ey1-l\", \"nn jj vb\"],\n  \"tailgate\": [\"t-ey1-l g-ey-t\", \"nn\"],\n  \"tailor\": [\"t-ey1 l-er\", \"vb nn\"],\n  \"tailored\": [\"t-ey1 l-er-d\", \"vbn jj\"],\n  \"tailpipe\": [\"t-ey1-l p-ay-p\", \"nn\"],\n  \"tailspin\": [\"t-ey1-l s-p-ih-n\", \"nn\"],\n  \"taint\": [\"t-ey1-n-t\", \"nn vb vbp\"],\n  \"tainted\": [\"t-ey1-n t-ih-d\", \"vbn vbd jj\"],\n  \"take\": [\"t-ey1-k\", \"vb nn vbp\"],\n  \"taken\": [\"t-ey1 k-ah-n\", \"vbn vbg\"],\n  \"takeoff\": [\"t-ey1-k ao-f\", \"nn\"],\n  \"takeout\": [\"t-ey1-k aw-t\", \"nn\"],\n  \"takeover\": [\"t-ey1-k ow v-er\", \"nn\"],\n  \"taker\": [\"t-ey1 k-er\", \"nn\"],\n  \"tale\": [\"t-ey1-l\", \"nn\"],\n  \"talent\": [\"t-ae1 l-ah-n-t\", \"nn\"],\n  \"talented\": [\"t-ae1 l-ah-n t-ah-d\", \"jj\"],\n  \"talk\": [\"t-ao1-k\", \"vb vbp nn\"],\n  \"talkative\": [\"t-ao1 k-ah t-ih-v\", \"jj\"],\n  \"talker\": [\"t-ao1 k-er\", \"nn\"],\n  \"talky\": [\"t-ao1 k-iy\", \"jj\"],\n  \"tall\": [\"t-ao1-l\", \"jj\"],\n  \"taller\": [\"t-ao1 l-er\", \"jjr\"],\n  \"tallest\": [\"t-ao1 l-ih-s-t\", \"jjs\"],\n  \"tallied\": [\"t-ae1 l-iy-d\", \"vbn vbd\"],\n  \"tallow\": [\"t-ae1 l-ow\", \"nn\"],\n  \"tally\": [\"t-ae1 l-iy\", \"nn vbp vb\"],\n  \"tallyho\": [\"t-ae l-iy hh-ow1\", \"nn\"],\n  \"tam\": [\"t-ae1-m\", \"nn\"],\n  \"tambourine\": [\"t-ae-m b-er iy1-n\", \"nn\"],\n  \"tame\": [\"t-ey1-m\", \"jj vb\"],\n  \"tamer\": [\"t-ey1 m-er\", \"jjr\"],\n  \"tamper\": [\"t-ae1-m p-er\", \"vb\"],\n  \"tampon\": [\"t-ae1-m p-aa-n\", \"nn\"],\n  \"tan\": [\"t-ae1-n\", \"jj nn\"],\n  \"tandem\": [\"t-ae1-n d-ah-m\", \"nn jj\"],\n  \"tang\": [\"t-ae1-ng\", \"nn\"],\n  \"tangent\": [\"t-ae1-n jh-ah-n-t\", \"jj nn\"],\n  \"tangential\": [\"t-ae-n jh-eh1-n ch-ah-l\", \"jj\"],\n  \"tangible\": [\"t-ae1-n jh-ah b-ah-l\", \"jj\"],\n  \"tangle\": [\"t-ae1-ng g-ah-l\", \"nn vbp vb\"],\n  \"tangled\": [\"t-ae1-ng g-ah-l-d\", \"jj vbd vbn\"],\n  \"tango\": [\"t-ae1-ng g-ow\", \"nn\"],\n  \"tank\": [\"t-ae1-ng-k\", \"nn vb\"],\n  \"tanker\": [\"t-ae1-ng k-er\", \"nn\"],\n  \"tanned\": [\"t-ae1-n-d\", \"jj vbn\"],\n  \"tanning\": [\"t-ae1 n-ih-ng\", \"nn\"],\n  \"tansy\": [\"t-ae1-n z-iy\", \"nn\"],\n  \"tantalize\": [\"t-ae1-n-t-ah-l-ay-z\", \"vb\"],\n  \"tantalizing\": [\"t-ae1-n t-ah l-ay z-ih-ng\", \"vbg jj\"],\n  \"tantamount\": [\"t-ae1-n t-ah m-aw-n-t\", \"jj\"],\n  \"tantrum\": [\"t-ae1-n t-r-ah-m\", \"nn\"],\n  \"tap\": [\"t-ae1-p\", \"vb nn vbp\"],\n  \"tape\": [\"t-ey1-p\", \"nn vb vbp\"],\n  \"taped\": [\"t-ey1-p-t\", \"vbn jj vbd\"],\n  \"taper\": [\"t-ey1 p-er\", \"vb nn\"],\n  \"tapered\": [\"t-ey1 p-er-d\", \"jj vbn\"],\n  \"tapestry\": [\"t-ae1 p-ah-s t-r-iy\", \"nn\"],\n  \"tapped\": [\"t-ae1-p-t\", \"vbd vbn\"],\n  \"tar\": [\"t-aa1-r\", \"nn\"],\n  \"tardiness\": [\"t-aa1-r d-iy n-ah-s\", \"nn\"],\n  \"tardy\": [\"t-aa1-r d-iy\", \"jj\"],\n  \"target\": [\"t-aa1-r g-ah-t\", \"nn vbp vb\"],\n  \"targeted\": [\"t-aa1-r g-ah t-ih-d\", \"vbn vbd jj\"],\n  \"tariff\": [\"t-eh1 r-ah-f\", \"nn\"],\n  \"tarmac\": [\"t-aa1-r m-ae-k\", \"nn\"],\n  \"tarnish\": [\"t-aa1-r n-ih-sh\", \"vb\"],\n  \"tarnished\": [\"t-aa1-r n-ih-sh-t\", \"vbn jj vbd\"],\n  \"tarpon\": [\"t-aa1-r p-ah-n\", \"nn\"],\n  \"tarred\": [\"t-aa1-r-d\", \"vbn vbd\"],\n  \"tarry\": [\"t-eh1 r-iy\", \"vb\"],\n  \"tart\": [\"t-aa1-r-t\", \"jj nn\"],\n  \"tartan\": [\"t-aa1-r t-ah-n\", \"nn\"],\n  \"task\": [\"t-ae1-s-k\", \"nn vb\"],\n  \"taskmaster\": [\"t-ae1-s-k m-ae s-t-er\", \"nn\"],\n  \"tassel\": [\"t-ae1 s-ah-l\", \"nn\"],\n  \"taste\": [\"t-ey1-s-t\", \"nn vb vbp\"],\n  \"tasteful\": [\"t-ey1-s-t f-ah-l\", \"jj\"],\n  \"tastefully\": [\"t-ey1-s-t f-ah l-iy\", \"rb\"],\n  \"tasteless\": [\"t-ey1-s-t l-ah-s\", \"jj\"],\n  \"tastier\": [\"t-ey1 s-t-iy er\", \"jjr\"],\n  \"tasty\": [\"t-ey1 s-t-iy\", \"jj\"],\n  \"tatter\": [\"t-ae1-t-er\", \"vb\"],\n  \"tattered\": [\"t-ae1 t-er-d\", \"jj vbn\"],\n  \"tattoo\": [\"t-ae t-uw1\", \"nn vb\"],\n  \"taught\": [\"t-ao1-t\", \"vbn vbd\"],\n  \"taunt\": [\"t-ao1-n-t\", \"nn vb\"],\n  \"taut\": [\"t-ao1-t\", \"jj rb\"],\n  \"tavern\": [\"t-ae1 v-er-n\", \"nn\"],\n  \"tawdry\": [\"t-ao1 d-r-iy\", \"jj\"],\n  \"tax\": [\"t-ae1-k-s\", \"nn vb vbp\"],\n  \"taxable\": [\"t-ae1-k s-ah b-ah-l\", \"jj\"],\n  \"taxation\": [\"t-ae-k s-ey1 sh-ah-n\", \"nn\"],\n  \"taxed\": [\"t-ae1-k-s-t\", \"vbn jj vbd\"],\n  \"taxi\": [\"t-ae1-k s-iy\", \"nn vb\"],\n  \"taxicab\": [\"t-ae1-k s-iy k-ae-b\", \"nn\"],\n  \"taxing\": [\"t-ae1-k s-ih-ng\", \"vbg jj nn\"],\n  \"taxpayer\": [\"t-ae1-k s-p-ey er\", \"nn\"],\n  \"taxpaying\": [\"t-ae1-k s-p-ey ih-ng\", \"jj\"],\n  \"tea\": [\"t-iy1\", \"nn\"],\n  \"teach\": [\"t-iy1-ch\", \"vb vbp\"],\n  \"teacher\": [\"t-iy1 ch-er\", \"nn\"],\n  \"team\": [\"t-iy1-m\", \"nn vb vbp\"],\n  \"teammate\": [\"t-iy1 m-ey-t\", \"nn\"],\n  \"teamster\": [\"t-iy1-m s-t-er\", \"nn\"],\n  \"teamwork\": [\"t-iy1-m w-er-k\", \"nn\"],\n  \"teapot\": [\"t-iy1 p-aa-t\", \"nn\"],\n  \"tear\": [\"t-eh1-r\", \"vb vbp nn\"],\n  \"tearfully\": [\"t-ih1-r f-ah l-iy\", \"rb\"],\n  \"tease\": [\"t-iy1-z\", \"vb nn vbp\"],\n  \"teaser\": [\"t-iy1 z-er\", \"nn\"],\n  \"teasing\": [\"t-iy1 z-ih-ng\", \"jj vbg\"],\n  \"teaspoon\": [\"t-iy1 s-p-uw-n\", \"nn\"],\n  \"teat\": [\"t-iy1-t\", \"nn\"],\n  \"technical\": [\"t-eh1-k n-ih k-ah-l\", \"jj\"],\n  \"technicality\": [\"t-eh-k n-ih k-ae1 l-ih t-iy\", \"nn\"],\n  \"technically\": [\"t-eh1-k n-ih k-ah l-iy\", \"rb\"],\n  \"technician\": [\"t-eh-k n-ih1 sh-ah-n\", \"nn\"],\n  \"technique\": [\"t-eh-k n-iy1-k\", \"nn\"],\n  \"technocrat\": [\"t-eh1-k n-ah k-r-ae-t\", \"nn\"],\n  \"technocratic\": [\"t-eh-k n-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"technological\": [\"t-eh-k n-ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"technologically\": [\"t-eh-k n-ah l-aa1 jh-ih k-ah l-iy\", \"rb\"],\n  \"technologist\": [\"t-eh-k n-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"technology\": [\"t-eh-k n-aa1 l-ah jh-iy\", \"nn\"],\n  \"teddy\": [\"t-eh1 d-iy\", \"nn\"],\n  \"tedious\": [\"t-iy1 d-iy ah-s\", \"jj\"],\n  \"tediously\": [\"t-iy1 d-iy ah-s l-iy\", \"rb\"],\n  \"tedium\": [\"t-iy1 d-iy ah-m\", \"nn\"],\n  \"tee\": [\"t-iy1\", \"nn vb\"],\n  \"teem\": [\"t-iy1-m\", \"vb\"],\n  \"teen\": [\"t-iy1-n\", \"jj nn\"],\n  \"teenage\": [\"t-iy1 n-ey-jh\", \"jj\"],\n  \"teenager\": [\"t-iy1-n ey jh-er\", \"nn\"],\n  \"teensy\": [\"t-iy1-n s-iy\", \"jj\"],\n  \"teeter\": [\"t-iy1-t-er\", \"vb\"],\n  \"teetering\": [\"t-iy1 t-er ih-ng\", \"vbg jj\"],\n  \"telecast\": [\"t-eh1 l-ah k-ae-s-t\", \"nn\"],\n  \"telecom\": [\"t-eh1 l-ah k-aa-m\", \"nn\"],\n  \"telecommunications\": [\"t-eh l-ah k-ah m-y-uw n-ah k-ey1 sh-ah-n-z\", \"nn\"],\n  \"telegram\": [\"t-eh1 l-ah g-r-ae-m\", \"nn\"],\n  \"telegraph\": [\"t-eh1 l-ah g-r-ae-f\", \"nn vbp vb\"],\n  \"telemarketer\": [\"t-eh l-ah m-aa1-r k-ih t-er\", \"nn\"],\n  \"telemarketing\": [\"t-eh l-ah m-aa1-r k-ah t-ih-ng\", \"nn\"],\n  \"telepathy\": [\"t-ah l-eh1 p-ah th-iy\", \"nn\"],\n  \"telephone\": [\"t-eh1 l-ah f-ow-n\", \"nn vb\"],\n  \"telescope\": [\"t-eh1 l-ah s-k-ow-p\", \"nn vb\"],\n  \"teletype\": [\"t-eh1 l-ah t-ay-p\", \"nn\"],\n  \"televise\": [\"t-eh1-l-ah-v-ay-z\", \"vb\"],\n  \"televised\": [\"t-eh1 l-ah v-ay-z-d\", \"vbn jj\"],\n  \"televising\": [\"t-eh1 l-ah v-ay z-ih-ng\", \"nn\"],\n  \"television\": [\"t-eh1 l-ah v-ih zh-ah-n\", \"nn\"],\n  \"televison\": [\"t-eh1 l-ih v-ih zh-ah-n\", \"nn\"],\n  \"tell\": [\"t-eh1-l\", \"vb vbp\"],\n  \"teller\": [\"t-eh1 l-er\", \"nn\"],\n  \"tellingly\": [\"t-eh1 l-ih-ng l-iy\", \"rb\"],\n  \"telltale\": [\"t-eh1-l t-ey-l\", \"jj nn\"],\n  \"temblor\": [\"t-eh1-m b-l-er\", \"nn\"],\n  \"temerity\": [\"t-ah m-eh1 r-ah t-iy\", \"nn\"],\n  \"temp\": [\"t-eh1-m-p\", \"nn\"],\n  \"temper\": [\"t-eh1-m p-er\", \"nn vb\"],\n  \"tempera\": [\"t-eh1-m p-er ah\", \"nn\"],\n  \"temperament\": [\"t-eh1-m p-r-ah m-ah-n-t\", \"nn\"],\n  \"temperamental\": [\"t-eh-m p-r-ah m-eh1-n t-ah-l\", \"jj\"],\n  \"temperance\": [\"t-eh1-m p-er ah-n-s\", \"nn\"],\n  \"temperate\": [\"t-eh1-m p-r-ah-t\", \"jj\"],\n  \"temperature\": [\"t-eh1-m p-r-ah ch-er\", \"nn\"],\n  \"tempest\": [\"t-eh1-m p-ah-s-t\", \"nn\"],\n  \"tempestuous\": [\"t-eh-m p-eh1-s ch-uw ah-s\", \"jj\"],\n  \"template\": [\"t-eh1-m p-l-ah-t\", \"nn\"],\n  \"temple\": [\"t-eh1-m p-ah-l\", \"nn\"],\n  \"tempo\": [\"t-eh1-m p-ow\", \"nn\"],\n  \"temporal\": [\"t-eh1-m p-er ah-l\", \"jj nn\"],\n  \"temporally\": [\"t-eh1-m p-er ah l-iy\", \"rb\"],\n  \"temporarily\": [\"t-eh-m p-er eh1 r-ah l-iy\", \"rb\"],\n  \"temporary\": [\"t-eh1-m p-er eh r-iy\", \"jj\"],\n  \"tempore\": [\"t-eh1-m p-ao-r\", \"nn\"],\n  \"temporize\": [\"t-eh1-m-p-er-ay-z\", \"vb\"],\n  \"tempt\": [\"t-eh1-m-p-t\", \"vb vbp\"],\n  \"temptation\": [\"t-eh-m t-ey1 sh-ah-n\", \"nn\"],\n  \"tempting\": [\"t-eh1-m-p t-ih-ng\", \"jj\"],\n  \"ten\": [\"t-eh1-n\", \"cd\"],\n  \"tenable\": [\"t-eh1 n-ah b-ah-l\", \"jj\"],\n  \"tenacious\": [\"t-ah n-ey1 sh-ah-s\", \"jj\"],\n  \"tenaciously\": [\"t-ah n-ey1 sh-ah-s l-iy\", \"rb\"],\n  \"tenacity\": [\"t-ah n-ae1 s-ih t-iy\", \"nn\"],\n  \"tenancy\": [\"t-eh1 n-ah-n s-iy\", \"nn\"],\n  \"tenant\": [\"t-eh1 n-ah-n-t\", \"nn\"],\n  \"tend\": [\"t-eh1-n-d\", \"vbp vb\"],\n  \"tended\": [\"t-eh1-n d-ah-d\", \"vbd vbn jj\"],\n  \"tendency\": [\"t-eh1-n d-ah-n s-iy\", \"nn\"],\n  \"tendentious\": [\"t-eh-n d-eh1-n sh-ah-s\", \"jj\"],\n  \"tender\": [\"t-eh1-n d-er\", \"nn vbp jj vb\"],\n  \"tendered\": [\"t-eh1-n d-er-d\", \"vbn jj vbd\"],\n  \"tenderly\": [\"t-eh1-n d-er l-iy\", \"rb\"],\n  \"tenderness\": [\"t-eh1-n d-er n-ah-s\", \"nn\"],\n  \"tendon\": [\"t-eh1-n d-ah-n\", \"nn\"],\n  \"tenement\": [\"t-eh1 n-ah m-ah-n-t\", \"nn\"],\n  \"tenet\": [\"t-eh1 n-ah-t\", \"nn\"],\n  \"tenfold\": [\"t-eh1-n f-ow-l-d\", \"rb jj\"],\n  \"tennis\": [\"t-eh1 n-ah-s\", \"nn\"],\n  \"tenor\": [\"t-eh1 n-er\", \"nn\"],\n  \"tense\": [\"t-eh1-n-s\", \"jj nn\"],\n  \"tensely\": [\"t-eh1-n-s l-iy\", \"rb\"],\n  \"tensile\": [\"t-eh1-n s-ah-l\", \"jj\"],\n  \"tension\": [\"t-eh1-n sh-ah-n\", \"nn\"],\n  \"tent\": [\"t-eh1-n-t\", \"nn\"],\n  \"tentacle\": [\"t-eh1-n t-ah k-ah-l\", \"nn\"],\n  \"tentative\": [\"t-eh1-n t-ah t-ih-v\", \"jj nn\"],\n  \"tentatively\": [\"t-eh1-n t-ah t-ih-v l-iy\", \"rb\"],\n  \"tenth\": [\"t-eh1-n-th\", \"jj nn\"],\n  \"tenting\": [\"t-eh1-n t-ih-ng\", \"nn\"],\n  \"tenuous\": [\"t-eh1 n-y-ah-w ah-s\", \"jj\"],\n  \"tenure\": [\"t-eh1 n-y-er\", \"nn\"],\n  \"tepid\": [\"t-eh1 p-ih-d\", \"jj\"],\n  \"tequila\": [\"t-ah k-iy1 l-ah\", \"nn\"],\n  \"term\": [\"t-er1-m\", \"nn vb vbp\"],\n  \"terminal\": [\"t-er1 m-ah n-ah-l\", \"nn jj\"],\n  \"terminate\": [\"t-er1 m-ah n-ey-t\", \"vb vbp\"],\n  \"termination\": [\"t-er m-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"terminology\": [\"t-er m-ih n-aa1 l-ah jh-iy\", \"nn\"],\n  \"terminus\": [\"t-er1 m-ih n-ah-s\", \"nn\"],\n  \"termite\": [\"t-er1 m-ay-t\", \"nn\"],\n  \"terrace\": [\"t-eh1 r-ah-s\", \"nn vb\"],\n  \"terrain\": [\"t-er ey1-n\", \"nn\"],\n  \"terrestrial\": [\"t-er eh1-s t-r-iy ah-l\", \"jj\"],\n  \"terrible\": [\"t-eh1 r-ah b-ah-l\", \"jj\"],\n  \"terribly\": [\"t-eh1 r-ah b-l-iy\", \"rb\"],\n  \"terrier\": [\"t-eh1 r-iy er\", \"nn\"],\n  \"terrific\": [\"t-er ih1 f-ih-k\", \"jj\"],\n  \"terrified\": [\"t-eh1 r-ah f-ay-d\", \"vbn jj vbd\"],\n  \"terrify\": [\"t-eh1 r-ah f-ay\", \"vb\"],\n  \"terrifying\": [\"t-eh1 r-ah f-ay ih-ng\", \"jj vbg\"],\n  \"territorial\": [\"t-eh r-ih t-ao1 r-iy ah-l\", \"jj nn\"],\n  \"territory\": [\"t-eh1 r-ih t-ao r-iy\", \"nn\"],\n  \"terror\": [\"t-eh1 r-er\", \"nn\"],\n  \"terrorism\": [\"t-eh1 r-er ih z-ah-m\", \"nn\"],\n  \"terrorist\": [\"t-eh1 r-er ih-s-t\", \"jj nn\"],\n  \"terroristic\": [\"t-eh r-er ih1 s-t-ih-k\", \"jj\"],\n  \"terrorize\": [\"t-eh1 r-er ay-z\", \"vb\"],\n  \"terry\": [\"t-eh1 r-iy\", \"nn\"],\n  \"terse\": [\"t-er1-s\", \"jj\"],\n  \"tersely\": [\"t-er1-s l-iy\", \"rb\"],\n  \"tertiary\": [\"t-er1 sh-er iy\", \"jj\"],\n  \"test\": [\"t-eh1-s-t\", \"nn vbp vb\"],\n  \"testament\": [\"t-eh1 s-t-ah m-ah-n-t\", \"nn\"],\n  \"tested\": [\"t-eh1 s-t-ah-d\", \"vbn vbd jj\"],\n  \"testicle\": [\"t-eh1 s-t-ih k-ah-l\", \"nn\"],\n  \"testify\": [\"t-eh1 s-t-ah f-ay\", \"vb vbp\"],\n  \"testily\": [\"t-eh1 s-t-ah l-iy\", \"rb\"],\n  \"testimonial\": [\"t-eh s-t-ah m-ow1 n-iy ah-l\", \"jj nn\"],\n  \"testimony\": [\"t-eh1 s-t-ah m-ow n-iy\", \"nn\"],\n  \"testosterone\": [\"t-eh s-t-aa1 s-t-er ow-n\", \"nn\"],\n  \"testy\": [\"t-eh1 s-t-iy\", \"jj\"],\n  \"tetanus\": [\"t-eh1 t-ah n-ah-s\", \"nn\"],\n  \"tether\": [\"t-eh1-dh-er\", \"vb\"],\n  \"tethered\": [\"t-eh1 dh-er-d\", \"vbn vbd jj\"],\n  \"text\": [\"t-eh1-k-s-t\", \"nn\"],\n  \"textbook\": [\"t-eh1-k-s-t b-uh-k\", \"nn\"],\n  \"textile\": [\"t-eh1-k s-t-ay-l\", \"nn jj\"],\n  \"textual\": [\"t-eh1-k-s ch-ah w-ah-l\", \"jj\"],\n  \"texture\": [\"t-eh1-k-s ch-er\", \"nn\"],\n  \"textured\": [\"t-eh1-k-s ch-er-d\", \"jj\"],\n  \"than\": [\"dh-ae1-n\", \"in rb rbr\"],\n  \"thank\": [\"th-ae1-ng-k\", \"vb vbp\"],\n  \"thankful\": [\"th-ae1-ng-k f-ah-l\", \"jj\"],\n  \"thankfully\": [\"th-ae1-ng-k f-ah l-iy\", \"rb\"],\n  \"thankless\": [\"th-ae1-ng-k l-ah-s\", \"jj\"],\n  \"thanks\": [\"th-ae1-ng-k-s\", \"uh\"],\n  \"thanksgiving\": [\"th-ae-ng-k-s g-ih1 v-ih-ng\", \"nn\"],\n  \"that\": [\"dh-ae1-t\", \"in dt nn rb rp uh wp wdt\"],\n  \"thatch\": [\"th-ae1-ch\", \"nn\"],\n  \"thaw\": [\"th-ao1\", \"nn vb\"],\n  \"the\": [\"dh-ah\", \"dt\"],\n  \"theater\": [\"th-iy1 ah t-er\", \"nn\"],\n  \"theatergoer\": [\"th-iy1 t-er g-ow er\", \"nn\"],\n  \"theatrical\": [\"th-iy ae1 t-r-ih k-ah-l\", \"jj nn\"],\n  \"theatricality\": [\"th-iy ae t-r-ah k-ae1 l-ah t-iy\", \"nn\"],\n  \"theatrically\": [\"th-iy ae1 t-r-ih k-ah l-iy\", \"rb\"],\n  \"theft\": [\"th-eh1-f-t\", \"nn\"],\n  \"their\": [\"dh-eh1-r\", \"prp$\"],\n  \"theirs\": [\"dh-eh1-r-z\", \"prp jj\"],\n  \"them\": [\"dh-eh1-m\", \"prp dt\"],\n  \"thematic\": [\"th-iy m-ae1 t-ih-k\", \"jj\"],\n  \"theme\": [\"th-iy1-m\", \"nn vb\"],\n  \"themed\": [\"th-iy1-m-d\", \"vbn jj\"],\n  \"themselves\": [\"dh-eh-m s-eh1-l-v-z\", \"prp\"],\n  \"then\": [\"dh-eh1-n\", \"rb in jj\"],\n  \"thence\": [\"dh-eh1-n-s\", \"rb\"],\n  \"thenceforth\": [\"dh-eh-n-s f-ao1-r-th\", \"cc\"],\n  \"theocracy\": [\"th-iy aa1 k-r-ah s-iy\", \"nn\"],\n  \"theologian\": [\"th-iy ah l-ow1 jh-iy ah-n\", \"nn\"],\n  \"theological\": [\"th-iy ah l-aa1 jh-ih k-ah-l\", \"jj\"],\n  \"theology\": [\"th-iy aa1 l-ah jh-iy\", \"nn\"],\n  \"theorem\": [\"th-ih1 r-ah-m\", \"nn\"],\n  \"theoretical\": [\"th-iy er eh1 t-ih k-ah-l\", \"jj\"],\n  \"theoretically\": [\"th-iy er eh1 t-ih k-ah l-iy\", \"rb\"],\n  \"theoretician\": [\"th-iy er ah t-ih1 sh-ah-n\", \"nn\"],\n  \"theorist\": [\"th-iy1 er ih-s-t\", \"nn\"],\n  \"theorize\": [\"th-iy1 er ay-z\", \"vbp vb\"],\n  \"theorizing\": [\"th-iy1 er ay z-ih-ng\", \"nn\"],\n  \"theory\": [\"th-ih1 r-iy\", \"nn\"],\n  \"therapeutic\": [\"th-eh r-ah p-y-uw1 t-ih-k\", \"jj nn\"],\n  \"therapist\": [\"th-eh1 r-ah p-ah-s-t\", \"nn\"],\n  \"therapy\": [\"th-eh1 r-ah p-iy\", \"nn\"],\n  \"there\": [\"dh-eh1-r\", \"rb uh nn ex\"],\n  \"thermal\": [\"th-er1 m-ah-l\", \"jj\"],\n  \"thermometer\": [\"th-er m-aa1 m-ah t-er\", \"nn\"],\n  \"thermonuclear\": [\"th-er m-ow n-uw1 k-l-iy er\", \"jj\"],\n  \"thermoplastic\": [\"th-er m-ah p-l-ae1 s-t-ih-k\", \"jj\"],\n  \"thermos\": [\"th-er1 m-ah-s\", \"nn\"],\n  \"thermostat\": [\"th-er1 m-ah s-t-ae-t\", \"nn\"],\n  \"thesaurus\": [\"th-ah s-ao1 r-ah-s\", \"nn\"],\n  \"these\": [\"dh-iy1-z\", \"dt\"],\n  \"thesis\": [\"th-iy1 s-ah-s\", \"nn\"],\n  \"thespian\": [\"th-eh1 s-p-iy ah-n\", \"jj\"],\n  \"they\": [\"dh-ey1\", \"prp\"],\n  \"thiamin\": [\"th-ay1 ah m-ah-n\", \"nn\"],\n  \"thick\": [\"th-ih1-k\", \"jj nn rb\"],\n  \"thicken\": [\"th-ih1 k-ah-n\", \"vb\"],\n  \"thicker\": [\"th-ih1 k-er\", \"jjr\"],\n  \"thicket\": [\"th-ih1 k-ih-t\", \"nn\"],\n  \"thickly\": [\"th-ih1-k l-iy\", \"rb\"],\n  \"thickness\": [\"th-ih1-k n-ah-s\", \"nn\"],\n  \"thief\": [\"th-iy1-f\", \"nn\"],\n  \"thieve\": [\"th-iy1-v\", \"vb\"],\n  \"thieving\": [\"th-iy1 v-ih-ng\", \"vbg jj nn\"],\n  \"thigh\": [\"th-ay1\", \"nn\"],\n  \"thimble\": [\"th-ih1-m b-ah-l\", \"nn\"],\n  \"thin\": [\"th-ih1-n\", \"jj rb vb\"],\n  \"thine\": [\"dh-ay1-n\", \"jj\"],\n  \"thing\": [\"th-ih1-ng\", \"nn\"],\n  \"think\": [\"th-ih1-ng-k\", \"vbp vb nn\"],\n  \"thinker\": [\"th-ih1-ng k-er\", \"nn\"],\n  \"thinking\": [\"th-ih1-ng k-ih-ng\", \"vbg jj\"],\n  \"thinly\": [\"th-ih1-n l-iy\", \"rb\"],\n  \"thinner\": [\"th-ih1 n-er\", \"jjr nn\"],\n  \"thinness\": [\"th-ih1-n n-ih-s\", \"nn\"],\n  \"thinnest\": [\"th-ih1 n-ih-s-t\", \"jjs\"],\n  \"third\": [\"th-er1-d\", \"nn jj rb\"],\n  \"thirst\": [\"th-er1-s-t\", \"nn\"],\n  \"thirsty\": [\"th-er1 s-t-iy\", \"jj\"],\n  \"thirty\": [\"th-er1 t-iy\", \"cd\"],\n  \"this\": [\"dh-ih1-s\", \"dt rb pdt\"],\n  \"thistle\": [\"th-ih1 s-ah-l\", \"nn\"],\n  \"thong\": [\"th-ao1-ng\", \"nn\"],\n  \"thorn\": [\"th-ao1-r-n\", \"nn\"],\n  \"thorny\": [\"th-ao1-r n-iy\", \"jj\"],\n  \"thorough\": [\"th-er1 ow\", \"jj\"],\n  \"thoroughbred\": [\"th-er1 ow b-r-eh1-d\", \"jj nn\"],\n  \"thoroughfare\": [\"th-er1 ow f-eh-r\", \"nn\"],\n  \"thoroughly\": [\"th-er1 ow l-iy\", \"rb\"],\n  \"thoroughness\": [\"th-er1 ow n-ah-s\", \"nn\"],\n  \"those\": [\"dh-ow1-z\", \"dt\"],\n  \"though\": [\"dh-ow1\", \"in rb\"],\n  \"thought\": [\"th-ao1-t\", \"vbd nn vbn\"],\n  \"thoughtful\": [\"th-ao1-t f-ah-l\", \"jj\"],\n  \"thoughtfully\": [\"th-ao1-t f-ah l-iy\", \"rb\"],\n  \"thoughtless\": [\"th-ao1-t l-ah-s\", \"jj\"],\n  \"thousand\": [\"th-aw1 z-ah-n-d\", \"nn\"],\n  \"thousandth\": [\"th-aw1 z-ah-n-d-th\", \"jj\"],\n  \"thrall\": [\"th-r-ao1-l\", \"nn\"],\n  \"thrash\": [\"th-r-ae1-sh\", \"vb\"],\n  \"thrashing\": [\"th-r-ae1 sh-ih-ng\", \"nn vbg\"],\n  \"thread\": [\"th-r-eh1-d\", \"nn vb\"],\n  \"threadbare\": [\"th-r-eh1-d b-eh-r\", \"jj\"],\n  \"threat\": [\"th-r-eh1-t\", \"nn\"],\n  \"threaten\": [\"th-r-eh1 t-ah-n\", \"vb vbp\"],\n  \"threatened\": [\"th-r-eh1 t-ah-n-d\", \"vbn vbd jj\"],\n  \"threatening\": [\"th-r-eh1 t-ah-n ih-ng\", \"vbg jj\"],\n  \"threateningly\": [\"th-r-eh1 t-ah-n ih-ng l-iy\", \"rb\"],\n  \"three\": [\"th-r-iy1\", \"cd\"],\n  \"threefold\": [\"th-r-iy1 f-ow-l-d\", \"jj rb\"],\n  \"threemonth\": [\"th-r-iy1 m-ah-n-th\", \"jj\"],\n  \"threesome\": [\"th-r-iy1 s-ah-m\", \"nn\"],\n  \"threshold\": [\"th-r-eh1-sh ow-l-d\", \"nn\"],\n  \"threw\": [\"th-r-uw1\", \"vbd\"],\n  \"thrice\": [\"th-r-ay1-s\", \"rb\"],\n  \"thrift\": [\"th-r-ih1-f-t\", \"nn\"],\n  \"thrifty\": [\"th-r-ih1-f t-iy\", \"jj\"],\n  \"thrill\": [\"th-r-ih1-l\", \"nn vb\"],\n  \"thrilled\": [\"th-r-ih1-l-d\", \"vbn jj vbd\"],\n  \"thriller\": [\"th-r-ih1 l-er\", \"nn\"],\n  \"thrilling\": [\"th-r-ih1 l-ih-ng\", \"jj\"],\n  \"thrips\": [\"th-r-ih1-p-s\", \"nn\"],\n  \"thrive\": [\"th-r-ay1-v\", \"vb vbp\"],\n  \"thriving\": [\"th-r-ay1 v-ih-ng\", \"vbg jj\"],\n  \"throat\": [\"th-r-ow1-t\", \"nn\"],\n  \"throb\": [\"th-r-aa1-b\", \"vb\"],\n  \"thrombosis\": [\"th-r-aa-m b-ow1 s-ah-s\", \"nn\"],\n  \"throne\": [\"th-r-ow1-n\", \"nn\"],\n  \"throng\": [\"th-r-ao1-ng\", \"nn vb vbp\"],\n  \"throttle\": [\"th-r-aa1 t-ah-l\", \"nn vb\"],\n  \"through\": [\"th-r-uw1\", \"in jj rb rp\"],\n  \"throughout\": [\"th-r-uw aw1-t\", \"in rb\"],\n  \"throughput\": [\"th-r-uw1 p-uh-t\", \"nn\"],\n  \"throw\": [\"th-r-ow1\", \"vb vbp nn\"],\n  \"throwaway\": [\"th-r-ow1 ah w-ey\", \"jj\"],\n  \"throwback\": [\"th-r-ow1 b-ae-k\", \"nn\"],\n  \"thrower\": [\"th-r-ow1 er\", \"nn\"],\n  \"thrown\": [\"th-r-ow1-n\", \"vbn\"],\n  \"thru\": [\"th-r-uw1\", \"nn in\"],\n  \"thrust\": [\"th-r-ah1-s-t\", \"nn vbd vbn vb\"],\n  \"thruway\": [\"th-r-uw1 w-ey\", \"nn\"],\n  \"thud\": [\"th-ah1-d\", \"nn vb\"],\n  \"thug\": [\"th-ah1-g\", \"nn\"],\n  \"thumb\": [\"th-ah1-m\", \"nn vb\"],\n  \"thumbnail\": [\"th-ah1-m n-ey-l\", \"nn\"],\n  \"thump\": [\"th-ah1-m-p\", \"nn vb\"],\n  \"thunder\": [\"th-ah1-n d-er\", \"nn vb vbp\"],\n  \"thundering\": [\"th-ah1-n d-er ih-ng\", \"vbg jj\"],\n  \"thunderous\": [\"th-ah1-n d-er ah-s\", \"jj\"],\n  \"thunderstorm\": [\"th-ah1-n d-er s-t-ao-r-m\", \"nn\"],\n  \"thunderstruck\": [\"th-ah1-n d-er s-t-r-ah-k\", \"jj\"],\n  \"thus\": [\"dh-ah1-s\", \"rb\"],\n  \"thwart\": [\"th-w-ao1-r-t\", \"vb nn rb\"],\n  \"thyroid\": [\"th-ay1 r-oy-d\", \"nn\"],\n  \"tick\": [\"t-ih1-k\", \"vb nn\"],\n  \"ticked\": [\"t-ih1-k-t\", \"vbd vbn jj\"],\n  \"ticker\": [\"t-ih1 k-er\", \"nn\"],\n  \"ticket\": [\"t-ih1 k-ah-t\", \"nn vb\"],\n  \"tickle\": [\"t-ih1-k-ah-l\", \"vb\"],\n  \"ticklish\": [\"t-ih1 k-ah-l ih-sh\", \"jj\"],\n  \"tidal\": [\"t-ay1 d-ah-l\", \"jj\"],\n  \"tidbit\": [\"t-ih1-d b-ih-t\", \"nn\"],\n  \"tide\": [\"t-ay1-d\", \"nn vb\"],\n  \"tidewater\": [\"t-ay1-d w-ao t-er\", \"nn\"],\n  \"tidy\": [\"t-ay1 d-iy\", \"jj\"],\n  \"tie\": [\"t-ay1\", \"nn vbp vb\"],\n  \"tied\": [\"t-ay1-d\", \"vbn jj vbd\"],\n  \"tier\": [\"t-iy1-r\", \"nn\"],\n  \"tiered\": [\"t-iy1-r-d\", \"jj\"],\n  \"tiff\": [\"t-ih1-f\", \"nn\"],\n  \"tiger\": [\"t-ay1 g-er\", \"nn\"],\n  \"tight\": [\"t-ay1-t\", \"jj rb\"],\n  \"tighten\": [\"t-ay1 t-ah-n\", \"vb vbp\"],\n  \"tighter\": [\"t-ay1 t-er\", \"jjr rbr\"],\n  \"tightest\": [\"t-ay1 t-ah-s-t\", \"jjs rbs\"],\n  \"tightfisted\": [\"t-ay1-t f-ih1 s-t-ih-d\", \"jj\"],\n  \"tightly\": [\"t-ay1-t l-iy\", \"rb\"],\n  \"tightness\": [\"t-ay1-t n-ah-s\", \"nn\"],\n  \"tightrope\": [\"t-ay1-t r-ow-p\", \"nn\"],\n  \"tile\": [\"t-ay1-l\", \"nn vb\"],\n  \"tiled\": [\"t-ay1-l-d\", \"jj vbn\"],\n  \"till\": [\"t-ih1-l\", \"in vb\"],\n  \"tiller\": [\"t-ih1 l-er\", \"nn\"],\n  \"tilt\": [\"t-ih1-l-t\", \"vb\"],\n  \"timber\": [\"t-ih1-m b-er\", \"nn vb\"],\n  \"timbre\": [\"t-ih1-m b-er\", \"nn\"],\n  \"time\": [\"t-ay1-m\", \"nn vb\"],\n  \"timed\": [\"t-ay1-m-d\", \"vbn vbd jj\"],\n  \"timeless\": [\"t-ay1-m l-ah-s\", \"jj\"],\n  \"timeliness\": [\"t-ay1-m l-iy n-ah-s\", \"nn\"],\n  \"timely\": [\"t-ay1-m l-iy\", \"jj rb\"],\n  \"timepiece\": [\"t-ay1-m p-iy-s\", \"nn\"],\n  \"timer\": [\"t-ay1 m-er\", \"nn\"],\n  \"times\": [\"t-ay1-m-z\", \"vbz cc rb\"],\n  \"timetable\": [\"t-ay1-m t-ey b-ah-l\", \"nn\"],\n  \"timid\": [\"t-ih1 m-ih-d\", \"jj\"],\n  \"timidity\": [\"t-ah m-ih1 d-ah t-iy\", \"nn\"],\n  \"timidly\": [\"t-ih1 m-ah-d l-iy\", \"rb\"],\n  \"timing\": [\"t-ay1 m-ih-ng\", \"nn vbg\"],\n  \"timorous\": [\"t-ih1 m-er ah-s\", \"jj\"],\n  \"timpani\": [\"t-ih1-m p-ah n-iy\", \"nn\"],\n  \"tin\": [\"t-ih1-n\", \"nn\"],\n  \"tincture\": [\"t-ih1-ng-k ch-er\", \"nn\"],\n  \"tinder\": [\"t-ih1-n d-er\", \"nn\"],\n  \"tine\": [\"t-ay1-n\", \"nn\"],\n  \"tingle\": [\"t-ih1-ng-g-ah-l\", \"vb\"],\n  \"tinier\": [\"t-ay1 n-iy er\", \"nn\"],\n  \"tiniest\": [\"t-ay1 n-iy ah-s-t\", \"jjs\"],\n  \"tinker\": [\"t-ih1-ng k-er\", \"vb\"],\n  \"tinkle\": [\"t-ih1-ng-k-ah-l\", \"vb\"],\n  \"tinny\": [\"t-ih1 n-iy\", \"jj nn\"],\n  \"tinsel\": [\"t-ih1-n s-ah-l\", \"nn\"],\n  \"tint\": [\"t-ih1-n-t\", \"vb vbp nn\"],\n  \"tinted\": [\"t-ih1-n t-ih-d\", \"vbn jj\"],\n  \"tintype\": [\"t-ih1-n t-ay-p\", \"nn\"],\n  \"tiny\": [\"t-ay1 n-iy\", \"jj\"],\n  \"tip\": [\"t-ih1-p\", \"nn vb vbp\"],\n  \"tipoff\": [\"t-ih1 p-ao-f\", \"nn\"],\n  \"tipper\": [\"t-ih1 p-er\", \"nn\"],\n  \"tipple\": [\"t-ih1 p-ah-l\", \"vb vbp\"],\n  \"tipsy\": [\"t-ih1-p s-iy\", \"jj\"],\n  \"tiptoe\": [\"t-ih1-p t-ow\", \"vb\"],\n  \"tirade\": [\"t-ay r-ey1-d\", \"nn\"],\n  \"tire\": [\"t-ay1 er\", \"nn vbp vb\"],\n  \"tired\": [\"t-ay1 er-d\", \"vbn jj vbd\"],\n  \"tireless\": [\"t-ay1 er l-ah-s\", \"jj\"],\n  \"tirelessly\": [\"t-ay1-r l-ah-s l-iy\", \"rb\"],\n  \"tiremaker\": [\"t-ay1-r m-ey k-er\", \"nn\"],\n  \"tiresome\": [\"t-ay1 er s-ah-m\", \"jj\"],\n  \"tissue\": [\"t-ih1 s-y-uw\", \"nn\"],\n  \"titan\": [\"t-ay1 t-ah-n\", \"nn\"],\n  \"titanate\": [\"t-ay1 t-ah n-ey-t\", \"nn\"],\n  \"titanic\": [\"t-ay t-ae1 n-ih-k\", \"jj\"],\n  \"titanium\": [\"t-ay t-ey1 n-iy ah-m\", \"nn\"],\n  \"titillate\": [\"t-ih1-t-ah-l-ey-t\", \"vb\"],\n  \"title\": [\"t-ay1 t-ah-l\", \"nn vb\"],\n  \"titled\": [\"t-ay1 t-ah-l-d\", \"vbn jj vbd\"],\n  \"titter\": [\"t-ih1 t-er\", \"nn vb vbp\"],\n  \"titular\": [\"t-ih1 ch-ah l-er\", \"jj\"],\n  \"to\": [\"t-uw1\", \"to rb\"],\n  \"toad\": [\"t-ow1-d\", \"nn\"],\n  \"toast\": [\"t-ow1-s-t\", \"nn vb\"],\n  \"toaster\": [\"t-ow1 s-t-er\", \"nn\"],\n  \"tobacco\": [\"t-ah b-ae1 k-ow\", \"nn\"],\n  \"today\": [\"t-ah d-ey1\", \"nn jj rb\"],\n  \"toddler\": [\"t-aa1-d l-er\", \"nn\"],\n  \"toe\": [\"t-ow1\", \"nn\"],\n  \"toehold\": [\"t-ow1 hh-ow-l-d\", \"nn\"],\n  \"toenail\": [\"t-ow1 n-ey-l\", \"nn\"],\n  \"toffee\": [\"t-aa1 f-iy\", \"nn\"],\n  \"tofu\": [\"t-ow1 f-uw\", \"nn\"],\n  \"toga\": [\"t-ow1 g-ah\", \"nn\"],\n  \"together\": [\"t-ah g-eh1 dh-er\", \"rb in rp\"],\n  \"togetherness\": [\"t-ah g-eh1 dh-er n-ah-s\", \"nn\"],\n  \"toil\": [\"t-oy1-l\", \"vbp nn vb\"],\n  \"toilet\": [\"t-oy1 l-ah-t\", \"nn\"],\n  \"toiletry\": [\"t-oy1 l-ah t-r-iy\", \"nn\"],\n  \"token\": [\"t-ow1 k-ah-n\", \"jj nn\"],\n  \"told\": [\"t-ow1-l-d\", \"vbd vbn\"],\n  \"tolerable\": [\"t-aa1 l-er ah b-ah-l\", \"jj\"],\n  \"tolerance\": [\"t-aa1 l-er ah-n-s\", \"nn\"],\n  \"tolerant\": [\"t-aa1 l-er ah-n-t\", \"jj\"],\n  \"tolerate\": [\"t-aa1 l-er ey-t\", \"vb vbp\"],\n  \"tolerating\": [\"t-aa1 l-er ey t-ih-ng\", \"vbg jj\"],\n  \"toleration\": [\"t-aa l-er ey1 sh-ah-n\", \"nn\"],\n  \"toll\": [\"t-ow1-l\", \"nn vb\"],\n  \"tomato\": [\"t-ah m-ey1 t-ow\", \"nn\"],\n  \"tomb\": [\"t-uw1-m\", \"nn\"],\n  \"tomblike\": [\"t-uw1-m l-ay-k\", \"jj\"],\n  \"tombstone\": [\"t-uw1-m s-t-ow-n\", \"nn\"],\n  \"tome\": [\"t-ow1-m\", \"nn\"],\n  \"tomorrow\": [\"t-ah m-aa1 r-ow\", \"nn jj rb\"],\n  \"ton\": [\"t-ah1-n\", \"nn\"],\n  \"tonal\": [\"t-ow1 n-ah-l\", \"jj\"],\n  \"tonality\": [\"t-ow n-ae1 l-ah t-iy\", \"nn\"],\n  \"tone\": [\"t-ow1-n\", \"nn vb\"],\n  \"toner\": [\"t-ow1 n-er\", \"nn\"],\n  \"tongs\": [\"t-aa1-ng-z\", \"nn\"],\n  \"tongue\": [\"t-ah1-ng\", \"nn vb\"],\n  \"tongued\": [\"t-ah1-ng-d\", \"vbd jj\"],\n  \"tonic\": [\"t-aa1 n-ih-k\", \"nn\"],\n  \"tonight\": [\"t-ah n-ay1-t\", \"rb nn\"],\n  \"tonnage\": [\"t-ah1 n-ah-jh\", \"nn\"],\n  \"tonsil\": [\"t-aa1-n s-ah-l\", \"nn\"],\n  \"tony\": [\"t-ow1 n-iy\", \"jj\"],\n  \"too\": [\"t-uw1\", \"rb\"],\n  \"took\": [\"t-uh1-k\", \"vbd\"],\n  \"tool\": [\"t-uw1-l\", \"nn vb\"],\n  \"tooth\": [\"t-uw1-th\", \"nn rb\"],\n  \"toothbrush\": [\"t-uw1-th b-r-ah-sh\", \"nn\"],\n  \"toothless\": [\"t-uw1-th l-ah-s\", \"jj\"],\n  \"toothpaste\": [\"t-uw1-th p-ey-s-t\", \"nn\"],\n  \"top\": [\"t-aa1-p\", \"jj nn vbp rb vb\"],\n  \"topaz\": [\"t-ow1 p-ae-z\", \"nn\"],\n  \"topiary\": [\"t-ow1 p-iy eh r-iy\", \"jj\"],\n  \"topic\": [\"t-aa1 p-ih-k\", \"nn\"],\n  \"topical\": [\"t-aa1 p-ah k-ah-l\", \"jj\"],\n  \"topless\": [\"t-aa1-p l-ah-s\", \"jj\"],\n  \"topographic\": [\"t-aa p-ah g-r-ae1 f-ih-k\", \"jj\"],\n  \"topography\": [\"t-ah p-aa1 g-r-ah f-iy\", \"nn\"],\n  \"topper\": [\"t-aa1 p-er\", \"nn\"],\n  \"topple\": [\"t-aa1 p-ah-l\", \"vb\"],\n  \"topsoil\": [\"t-aa1-p s-oy-l\", \"nn\"],\n  \"torch\": [\"t-ao1-r-ch\", \"nn vb\"],\n  \"tore\": [\"t-ao1-r\", \"vbd vbn\"],\n  \"torment\": [\"t-ao1-r m-eh-n-t\", \"nn vb\"],\n  \"tormented\": [\"t-ao1-r m-eh-n t-ih-d\", \"vbn jj\"],\n  \"tormentor\": [\"t-ao1-r m-eh-n t-er\", \"nn\"],\n  \"torn\": [\"t-ao1-r-n\", \"vbn jj\"],\n  \"tornado\": [\"t-ao-r n-ey1 d-ow\", \"nn\"],\n  \"torpedo\": [\"t-ao-r p-iy1 d-ow\", \"vb nn\"],\n  \"torpid\": [\"t-ao1-r p-ah-d\", \"jj\"],\n  \"torpor\": [\"t-ao1-r p-er\", \"nn\"],\n  \"torque\": [\"t-ao1-r-k\", \"nn\"],\n  \"torrent\": [\"t-ao1 r-ah-n-t\", \"nn\"],\n  \"torrid\": [\"t-ao1 r-ah-d\", \"jj\"],\n  \"torso\": [\"t-ao1-r s-ow\", \"nn\"],\n  \"tort\": [\"t-ao1-r-t\", \"nn\"],\n  \"tortilla\": [\"t-ao-r t-iy1 ah\", \"nn\"],\n  \"tortoise\": [\"t-ao1-r t-ah-s\", \"nn\"],\n  \"tortuous\": [\"t-ao1-r ch-ah-w ah-s\", \"jj\"],\n  \"torture\": [\"t-ao1-r ch-er\", \"nn vbp vb\"],\n  \"tortured\": [\"t-ao1-r ch-er-d\", \"vbn jj vbd\"],\n  \"toss\": [\"t-ao1-s\", \"vb nn vbp\"],\n  \"tossed\": [\"t-ao1-s-t\", \"vbd vbn jj\"],\n  \"total\": [\"t-ow1 t-ah-l\", \"jj nn vb vbp\"],\n  \"totalitarian\": [\"t-ow t-ae l-ih t-eh1 r-iy ah-n\", \"jj\"],\n  \"totalitarianism\": [\"t-ow t-ae l-ah t-eh1 r-iy ah n-ih z-ah-m\", \"nn\"],\n  \"totality\": [\"t-ow t-ae1 l-ah t-iy\", \"nn\"],\n  \"totally\": [\"t-ow1 t-ah-l iy\", \"rb\"],\n  \"tote\": [\"t-ow1-t\", \"vb\"],\n  \"totem\": [\"t-ow1 t-ah-m\", \"nn\"],\n  \"totter\": [\"t-aa1-t-er\", \"vb\"],\n  \"tottering\": [\"t-aa1 t-er ih-ng\", \"jj vbg\"],\n  \"touch\": [\"t-ah1-ch\", \"nn rb vb vbp\"],\n  \"touchdown\": [\"t-ah1-ch d-aw-n\", \"nn\"],\n  \"touching\": [\"t-ah1 ch-ih-ng\", \"vbg jj nn\"],\n  \"touchstone\": [\"t-ah1-ch s-t-ow-n\", \"nn\"],\n  \"touchy\": [\"t-ah1 ch-iy\", \"jj\"],\n  \"tough\": [\"t-ah1-f\", \"jj rb vb\"],\n  \"toughen\": [\"t-ah1 f-ah-n\", \"vb\"],\n  \"tougher\": [\"t-ah1 f-er\", \"jjr rbr\"],\n  \"toughest\": [\"t-ah1 f-ah-s-t\", \"jjs\"],\n  \"toughness\": [\"t-ah1-f n-ah-s\", \"nn\"],\n  \"tour\": [\"t-uh1-r\", \"nn vb\"],\n  \"touring\": [\"t-uh1 r-ih-ng\", \"vbg jj nn\"],\n  \"tourism\": [\"t-uh1 r-ih z-ah-m\", \"nn\"],\n  \"tourist\": [\"t-uh1 r-ah-s-t\", \"nn\"],\n  \"tournament\": [\"t-uh1-r n-ah m-ah-n-t\", \"nn\"],\n  \"tourney\": [\"t-er1 n-iy\", \"nn\"],\n  \"tout\": [\"t-aw1-t\", \"vb nn\"],\n  \"tow\": [\"t-ow1\", \"nn vb\"],\n  \"toward\": [\"t-ah w-ao1-r-d\", \"in\"],\n  \"towards\": [\"t-ah w-ao1-r-d-z\", \"in\"],\n  \"towel\": [\"t-aw1 ah-l\", \"nn\"],\n  \"toweling\": [\"t-aw1 ah-l ih-ng\", \"nn\"],\n  \"tower\": [\"t-aw1 er\", \"nn vb\"],\n  \"towering\": [\"t-aw1 er ih-ng\", \"jj vbg\"],\n  \"town\": [\"t-aw1-n\", \"nn\"],\n  \"townhouse\": [\"t-aw1-n hh-aw-s\", \"nn\"],\n  \"toxic\": [\"t-aa1-k s-ih-k\", \"jj nn\"],\n  \"toxicity\": [\"t-aa-k s-ih1 s-ah t-iy\", \"nn\"],\n  \"toxicologist\": [\"t-aa-k s-ih k-aa1 l-ah jh-ih-s-t\", \"nn\"],\n  \"toxicology\": [\"t-aa-k s-ih k-aa1 l-ah jh-iy\", \"nn\"],\n  \"toxin\": [\"t-aa1-k s-ah-n\", \"nn\"],\n  \"toy\": [\"t-oy1\", \"nn vb\"],\n  \"trace\": [\"t-r-ey1-s\", \"nn jj vb\"],\n  \"traceable\": [\"t-r-ey1 s-ah b-ah-l\", \"jj\"],\n  \"tracer\": [\"t-r-ey1 s-er\", \"nn\"],\n  \"trachea\": [\"t-r-ey1 k-iy ah\", \"nn\"],\n  \"tracing\": [\"t-r-ey1 s-ih-ng\", \"vbg jj nn\"],\n  \"track\": [\"t-r-ae1-k\", \"nn vbp vb\"],\n  \"trackage\": [\"t-r-ae1 k-ih-jh\", \"nn\"],\n  \"tracked\": [\"t-r-ae1-k-t\", \"vbn vbd jj\"],\n  \"tract\": [\"t-r-ae1-k-t\", \"nn\"],\n  \"tractor\": [\"t-r-ae1-k t-er\", \"nn\"],\n  \"trade\": [\"t-r-ey1-d\", \"nn vbp vb\"],\n  \"tradeable\": [\"t-r-ey1 d-ah b-ah-l\", \"jj\"],\n  \"traded\": [\"t-r-ey1 d-ih-d\", \"vbn vbd jj\"],\n  \"trademark\": [\"t-r-ey1-d m-aa-r-k\", \"nn\"],\n  \"tradeoff\": [\"t-r-ey1 d-ao-f\", \"nn\"],\n  \"trader\": [\"t-r-ey1 d-er\", \"nn\"],\n  \"trading\": [\"t-r-ey1 d-ih-ng\", \"vbg jj\"],\n  \"tradition\": [\"t-r-ah d-ih1 sh-ah-n\", \"nn\"],\n  \"traditional\": [\"t-r-ah d-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"traditionalist\": [\"t-r-ah d-ih1 sh-ah-n ah l-ih-s-t\", \"nn\"],\n  \"traditionally\": [\"t-r-ah d-ih1 sh-ah-n ah l-iy\", \"rb\"],\n  \"traffic\": [\"t-r-ae1 f-ih-k\", \"nn vb\"],\n  \"trafficker\": [\"t-r-ae1 f-ih k-er\", \"nn\"],\n  \"tragedy\": [\"t-r-ae1 jh-ah d-iy\", \"nn\"],\n  \"tragic\": [\"t-r-ae1 jh-ih-k\", \"jj nn\"],\n  \"tragically\": [\"t-r-ae1 jh-ih-k l-iy\", \"rb\"],\n  \"tragicomic\": [\"t-r-ae jh-ih k-aa1 m-ih-k\", \"jj nn\"],\n  \"trail\": [\"t-r-ey1-l\", \"nn vbp vb\"],\n  \"trailer\": [\"t-r-ey1 l-er\", \"nn\"],\n  \"train\": [\"t-r-ey1-n\", \"nn vb vbp\"],\n  \"trained\": [\"t-r-ey1-n-d\", \"vbn vbd jj\"],\n  \"trainer\": [\"t-r-ey1 n-er\", \"nn\"],\n  \"training\": [\"t-r-ey1 n-ih-ng\", \"vbg jj\"],\n  \"traipse\": [\"t-r-ey1-p-s\", \"vb\"],\n  \"trait\": [\"t-r-ey1-t\", \"nn\"],\n  \"traitor\": [\"t-r-ey1 t-er\", \"nn\"],\n  \"traitorous\": [\"t-r-ey1 t-er ah-s\", \"jj\"],\n  \"trajectory\": [\"t-r-ah jh-eh1-k t-er iy\", \"nn\"],\n  \"trammel\": [\"t-r-ae1 m-ah-l\", \"vb\"],\n  \"tramp\": [\"t-r-ae1-m-p\", \"jj nn vb\"],\n  \"trample\": [\"t-r-ae1-m p-ah-l\", \"vb\"],\n  \"trance\": [\"t-r-ae1-n-s\", \"nn\"],\n  \"tranquil\": [\"t-r-ae1-ng k-w-ah-l\", \"jj\"],\n  \"tranquility\": [\"t-r-ae-ng k-w-ih1 l-ih t-iy\", \"nn\"],\n  \"tranquilizer\": [\"t-r-ae1-ng k-w-ah l-ay z-er\", \"nn\"],\n  \"tranquilizing\": [\"t-r-ae1-ng k-w-ah l-ay z-ih-ng\", \"jj\"],\n  \"transact\": [\"t-r-ae-n z-ae1-k-t\", \"vb\"],\n  \"transaction\": [\"t-r-ae-n z-ae1-k sh-ah-n\", \"nn\"],\n  \"transatlantic\": [\"t-r-ae-n-z ah-t l-ae1-n t-ih-k\", \"jj nn\"],\n  \"transcend\": [\"t-r-ae-n s-eh1-n-d\", \"vb\"],\n  \"transcendence\": [\"t-r-ae-n s-eh1-n d-ah-n-s\", \"nn\"],\n  \"transcendent\": [\"t-r-ae-n s-eh1-n d-ah-n-t\", \"jj\"],\n  \"transcendental\": [\"t-r-ae-n s-ah-n d-eh1-n t-ah-l\", \"jj\"],\n  \"transcribe\": [\"t-r-ae-n s-k-r-ay1-b\", \"vb vbp\"],\n  \"transcribed\": [\"t-r-ae-n s-k-r-ay1-b-d\", \"vbn jj\"],\n  \"transcript\": [\"t-r-ae1-n s-k-r-ih-p-t\", \"nn\"],\n  \"transcription\": [\"t-r-ae-n s-k-r-ih1-p sh-ah-n\", \"nn\"],\n  \"transducer\": [\"t-r-ae-n-s d-uw1 s-er\", \"nn\"],\n  \"transfer\": [\"t-r-ae-n-s f-er1\", \"nn vb vbp\"],\n  \"transferable\": [\"t-r-ae-n-s f-er1 ah b-ah-l\", \"jj\"],\n  \"transferrable\": [\"t-r-ae-n-s f-er1 ah b-ah-l\", \"jj\"],\n  \"transferred\": [\"t-r-ae-n-s f-er1-d\", \"vbn vbd jj\"],\n  \"transform\": [\"t-r-ae-n-s f-ao1-r-m\", \"vb vbp\"],\n  \"transformation\": [\"t-r-ae-n-s f-er m-ey1 sh-ah-n\", \"nn\"],\n  \"transformed\": [\"t-r-ae-n-s f-ao1-r-m-d\", \"vbn jj vbd\"],\n  \"transformer\": [\"t-r-ae-n-s f-ao1-r m-er\", \"nn\"],\n  \"transfuse\": [\"t-r-ae-n-s-f-y-uw1-z\", \"vb\"],\n  \"transfusion\": [\"t-r-ae-n-s f-y-uw1 zh-ah-n\", \"nn\"],\n  \"transgenic\": [\"t-r-ae-n-z jh-eh1 n-ih-k\", \"jj\"],\n  \"transgression\": [\"t-r-ae-n-z g-r-eh1 sh-ah-n\", \"nn\"],\n  \"transience\": [\"t-r-ae1-n z-iy ah-n-s\", \"nn\"],\n  \"transient\": [\"t-r-ae1-n zh-ah-n-t\", \"jj\"],\n  \"transistor\": [\"t-r-ae-n z-ih1 s-t-er\", \"nn\"],\n  \"transit\": [\"t-r-ae1-n z-ah-t\", \"nn jj\"],\n  \"transition\": [\"t-r-ae-n z-ih1 sh-ah-n\", \"nn\"],\n  \"transitional\": [\"t-r-ae-n s-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"transitory\": [\"t-r-ae1-n z-ah t-ao r-iy\", \"jj\"],\n  \"translate\": [\"t-r-ae-n-z l-ey1-t\", \"vb vbp\"],\n  \"translation\": [\"t-r-ae-n-z l-ey1 sh-ah-n\", \"nn\"],\n  \"translator\": [\"t-r-ae-n-s l-ey1 t-er\", \"nn\"],\n  \"translucent\": [\"t-r-ae-n-s l-uw1 s-ah-n-t\", \"jj\"],\n  \"transmission\": [\"t-r-ae-n-s m-ih1 sh-ah-n\", \"nn\"],\n  \"transmit\": [\"t-r-ae-n-z m-ih1-t\", \"vb vbp\"],\n  \"transmittable\": [\"t-r-ae-n-z m-ih1 t-ah b-ah-l\", \"jj\"],\n  \"transmitted\": [\"t-r-ae-n-s m-ih1 t-ih-d\", \"vbn jj vbd\"],\n  \"transmitter\": [\"t-r-ae-n-s m-ih1 t-er\", \"nn\"],\n  \"transnational\": [\"t-r-ae-n-s n-ae1 sh-ah n-ah-l\", \"jj\"],\n  \"transoceanic\": [\"t-r-ae-n-z ow sh-iy ae1 n-ih-k\", \"jj\"],\n  \"transparency\": [\"t-r-ae-n s-p-eh1 r-ah-n s-iy\", \"nn\"],\n  \"transparent\": [\"t-r-ae-n s-p-eh1 r-ah-n-t\", \"jj nn\"],\n  \"transparently\": [\"t-r-ae-n s-p-eh1 r-ah-n-t l-iy\", \"rb\"],\n  \"transpire\": [\"t-r-ae-n-s-p-ay1-er\", \"vb\"],\n  \"transplant\": [\"t-r-ae-n-s p-l-ae1-n-t\", \"nn vbp vb\"],\n  \"transplantation\": [\"t-r-ae-n-z p-l-ae-n t-ey1 sh-ah-n\", \"nn\"],\n  \"transplanted\": [\"t-r-ae-n-s p-l-ae1-n t-ih-d\", \"vbn jj\"],\n  \"transponder\": [\"t-r-ae-n-s p-aa1-n d-er\", \"nn\"],\n  \"transport\": [\"t-r-ae-n-s p-ao1-r-t\", \"nn vbp vb\"],\n  \"transportable\": [\"t-r-ae-n-s p-ao1-r t-ah b-ah-l\", \"jj\"],\n  \"transportation\": [\"t-r-ae-n-s p-er t-ey1 sh-ah-n\", \"nn\"],\n  \"transporter\": [\"t-r-ae-n-s p-ao1-r t-er\", \"nn\"],\n  \"transpose\": [\"t-r-ae-n-s-p-ow1-z\", \"vb\"],\n  \"transverse\": [\"t-r-ae-n-z v-er1-s\", \"jj nn\"],\n  \"trap\": [\"t-r-ae1-p\", \"nn vb\"],\n  \"trapeze\": [\"t-r-ah p-iy1-z\", \"nn\"],\n  \"trapped\": [\"t-r-ae1-p-t\", \"vbn vbd jj\"],\n  \"trash\": [\"t-r-ae1-sh\", \"nn vb\"],\n  \"trauma\": [\"t-r-ao1 m-ah\", \"nn\"],\n  \"traumatic\": [\"t-r-ao m-ae1 t-ih-k\", \"jj\"],\n  \"traumatize\": [\"t-r-ao1-m-ah-t-ay-z\", \"vb\"],\n  \"travail\": [\"t-r-ah v-ey1-l\", \"nn\"],\n  \"travel\": [\"t-r-ae1 v-ah-l\", \"nn vbp vb\"],\n  \"traveled\": [\"t-r-ae1 v-ah-l-d\", \"vbd jj vbn\"],\n  \"traveler\": [\"t-r-ae1 v-ah l-er\", \"nn\"],\n  \"travelled\": [\"t-r-ae1 v-ah-l-d\", \"jj vbd vbn\"],\n  \"traveller\": [\"t-r-ae1 v-ah l-er\", \"nn\"],\n  \"travelogue\": [\"t-r-ae1 v-ah l-ao-g\", \"nn\"],\n  \"traverse\": [\"t-r-ae1 v-er-s\", \"vb\"],\n  \"travesty\": [\"t-r-ae1 v-ah s-t-iy\", \"nn vb\"],\n  \"trawler\": [\"t-r-ao1 l-er\", \"nn\"],\n  \"tray\": [\"t-r-ey1\", \"nn\"],\n  \"treacherous\": [\"t-r-eh1 ch-er ah-s\", \"jj\"],\n  \"treachery\": [\"t-r-eh1 ch-er iy\", \"nn\"],\n  \"tread\": [\"t-r-eh1-d\", \"vb nn\"],\n  \"treadmill\": [\"t-r-eh1-d m-ih-l\", \"nn\"],\n  \"treason\": [\"t-r-iy1 z-ah-n\", \"nn\"],\n  \"treasure\": [\"t-r-eh1 zh-er\", \"nn vb vbp\"],\n  \"treasured\": [\"t-r-eh1 zh-er-d\", \"vbn jj\"],\n  \"treasurer\": [\"t-r-eh1 zh-er er\", \"nn\"],\n  \"treasury\": [\"t-r-eh1 zh-er iy\", \"nn\"],\n  \"treat\": [\"t-r-iy1-t\", \"vb vbp nn\"],\n  \"treatable\": [\"t-r-iy1 t-ah b-ah-l\", \"jj\"],\n  \"treatise\": [\"t-r-iy1 t-ah-s\", \"nn\"],\n  \"treatment\": [\"t-r-iy1-t m-ah-n-t\", \"nn\"],\n  \"treaty\": [\"t-r-iy1 t-iy\", \"nn\"],\n  \"treble\": [\"t-r-eh1 b-ah-l\", \"jj nn vb\"],\n  \"tree\": [\"t-r-iy1\", \"nn\"],\n  \"treeless\": [\"t-r-iy1 l-ah-s\", \"jj\"],\n  \"trek\": [\"t-r-eh1-k\", \"nn vb vbp\"],\n  \"tremble\": [\"t-r-eh1-m b-ah-l\", \"vb nn\"],\n  \"trembling\": [\"t-r-eh1-m b-ah-l ih-ng\", \"vbg jj\"],\n  \"tremendous\": [\"t-r-ah m-eh1-n d-ah-s\", \"jj\"],\n  \"tremendously\": [\"t-r-ah m-eh1-n d-ah-s l-iy\", \"rb\"],\n  \"tremor\": [\"t-r-eh1 m-er\", \"nn\"],\n  \"tremulous\": [\"t-r-eh1 m-y-ah l-ah-s\", \"jj\"],\n  \"tremulously\": [\"t-r-eh1 m-y-ah l-ah-s l-iy\", \"rb\"],\n  \"trench\": [\"t-r-eh1-n-ch\", \"nn\"],\n  \"trenchant\": [\"t-r-eh1-n ch-ah-n-t\", \"jj\"],\n  \"trend\": [\"t-r-eh1-n-d\", \"nn vb\"],\n  \"trendier\": [\"t-r-eh1-n d-y-er\", \"jjr\"],\n  \"trendiest\": [\"t-r-eh-n d-iy1-s-t\", \"jjs\"],\n  \"trendsetter\": [\"t-r-eh1-n-d s-eh t-er\", \"nn\"],\n  \"trendy\": [\"t-r-eh1-n d-iy\", \"jj\"],\n  \"trepidation\": [\"t-r-eh p-ih d-ey1 sh-ah-n\", \"nn\"],\n  \"trespass\": [\"t-r-eh1-s p-ae-s\", \"nn vb vbp\"],\n  \"tress\": [\"t-r-eh1-s\", \"nn\"],\n  \"trestle\": [\"t-r-eh1 s-ah-l\", \"nn\"],\n  \"triad\": [\"t-r-ay1 ae-d\", \"nn jj\"],\n  \"triage\": [\"t-r-ay1 ih-jh\", \"nn\"],\n  \"trial\": [\"t-r-ay1 ah-l\", \"nn vb\"],\n  \"triangle\": [\"t-r-ay1 ae-ng g-ah-l\", \"nn\"],\n  \"triangular\": [\"t-r-ay ae1-ng g-y-ah l-er\", \"jj\"],\n  \"tribal\": [\"t-r-ay1 b-ah-l\", \"jj\"],\n  \"tribe\": [\"t-r-ay1-b\", \"nn\"],\n  \"tribunal\": [\"t-r-ah b-y-uw1 n-ah-l\", \"nn\"],\n  \"tribute\": [\"t-r-ih1 b-y-uw-t\", \"nn\"],\n  \"trick\": [\"t-r-ih1-k\", \"nn vb\"],\n  \"trickery\": [\"t-r-ih1 k-er iy\", \"nn\"],\n  \"trickier\": [\"t-r-ih1 k-iy er\", \"jjr\"],\n  \"trickiest\": [\"t-r-ih1 k-iy ah-s-t\", \"jjs\"],\n  \"trickle\": [\"t-r-ih1 k-ah-l\", \"nn vb vbp\"],\n  \"tricky\": [\"t-r-ih1 k-iy\", \"jj\"],\n  \"tried\": [\"t-r-ay1-d\", \"vbd jj vbn\"],\n  \"triennial\": [\"t-r-ay eh1 n-iy ah-l\", \"nn\"],\n  \"trifle\": [\"t-r-ay1 f-ah-l\", \"nn jj rb vb\"],\n  \"trifling\": [\"t-r-ay1 f-l-ih-ng\", \"jj\"],\n  \"trigger\": [\"t-r-ih1 g-er\", \"vb nn vbp\"],\n  \"triggered\": [\"t-r-ih1 g-er-d\", \"vbn vbd jj\"],\n  \"triglyceride\": [\"t-r-ay g-l-ih1 s-er ay-d\", \"nn\"],\n  \"trilateral\": [\"t-r-ay l-ae1 t-er ah-l\", \"jj\"],\n  \"trillion\": [\"t-r-ih1 l-y-ah-n\", \"nn\"],\n  \"trilogy\": [\"t-r-ih1 l-ah jh-iy\", \"nn\"],\n  \"trim\": [\"t-r-ih1-m\", \"vb jj nn\"],\n  \"trimester\": [\"t-r-ay m-eh1 s-t-er\", \"nn\"],\n  \"trimmed\": [\"t-r-ih1-m-d\", \"vbn rbr vbd jj\"],\n  \"trimmer\": [\"t-r-ih1 m-er\", \"jjr\"],\n  \"trinket\": [\"t-r-ih1-ng k-ah-t\", \"nn\"],\n  \"trio\": [\"t-r-iy1 ow\", \"nn\"],\n  \"trip\": [\"t-r-ih1-p\", \"nn vb\"],\n  \"tripartite\": [\"t-r-ay p-aa1-r t-ay-t\", \"jj\"],\n  \"tripe\": [\"t-r-ay1-p\", \"nn\"],\n  \"triple\": [\"t-r-ih1 p-ah-l\", \"jj nn rb vb\"],\n  \"triplet\": [\"t-r-ih1 p-l-ah-t\", \"nn\"],\n  \"tripod\": [\"t-r-ay1 p-aa-d\", \"nn\"],\n  \"triptych\": [\"t-r-ih1-p t-ih-k\", \"nn\"],\n  \"trite\": [\"t-r-ay1-t\", \"jj\"],\n  \"triumph\": [\"t-r-ay1 ah-m-f\", \"nn vb\"],\n  \"triumphant\": [\"t-r-ay ah1-m f-ah-n-t\", \"jj\"],\n  \"triumphantly\": [\"t-r-ay ah1-m f-ah-n-t l-iy\", \"rb\"],\n  \"triumvirate\": [\"t-r-ay ah1-m v-er ah-t\", \"nn\"],\n  \"trivia\": [\"t-r-ih1 v-iy ah\", \"nn\"],\n  \"trivial\": [\"t-r-ih1 v-iy ah-l\", \"jj nn\"],\n  \"triviality\": [\"t-r-ih v-iy ae1 l-ah t-iy\", \"nn\"],\n  \"trivialize\": [\"t-r-ih1 v-iy ah l-ay-z\", \"vb\"],\n  \"troika\": [\"t-r-oy1 k-ah\", \"nn\"],\n  \"trolley\": [\"t-r-aa1 l-iy\", \"nn\"],\n  \"trombone\": [\"t-r-aa-m b-ow1-n\", \"nn\"],\n  \"trombonist\": [\"t-r-aa-m b-ow1 n-ih-s-t\", \"nn\"],\n  \"troop\": [\"t-r-uw1-p\", \"nn vb vbp\"],\n  \"trooper\": [\"t-r-uw1 p-er\", \"nn\"],\n  \"trophy\": [\"t-r-ow1 f-iy\", \"nn\"],\n  \"tropic\": [\"t-r-aa1 p-ih-k\", \"nn\"],\n  \"tropical\": [\"t-r-aa1 p-ih k-ah-l\", \"jj nn\"],\n  \"trot\": [\"t-r-aa1-t\", \"nn vb\"],\n  \"trotter\": [\"t-r-aa1 t-er\", \"nn\"],\n  \"trouble\": [\"t-r-ah1 b-ah-l\", \"nn vbp jj vb\"],\n  \"troubled\": [\"t-r-ah1 b-ah-l-d\", \"jj vbd vbn\"],\n  \"troublemaker\": [\"t-r-ah1 b-ah-l m-ey k-er\", \"nn\"],\n  \"troubleshooter\": [\"t-r-ah1 b-ah-l sh-uw t-er\", \"nn\"],\n  \"troublesome\": [\"t-r-ah1 b-ah-l s-ah-m\", \"jj\"],\n  \"troubling\": [\"t-r-ah1 b-ah-l ih-ng\", \"jj vbg\"],\n  \"trough\": [\"t-r-ao1-f\", \"nn\"],\n  \"trounce\": [\"t-r-aw1-n-s\", \"vb\"],\n  \"trouncing\": [\"t-r-aw1-n s-ih-ng\", \"nn\"],\n  \"troup\": [\"t-r-uw1-p\", \"nn\"],\n  \"troupe\": [\"t-r-uw1-p\", \"nn\"],\n  \"trouser\": [\"t-r-aw1 z-er\", \"nn\"],\n  \"trout\": [\"t-r-aw1-t\", \"nn\"],\n  \"trove\": [\"t-r-ow1-v\", \"nn\"],\n  \"truce\": [\"t-r-uw1-s\", \"nn\"],\n  \"truck\": [\"t-r-ah1-k\", \"nn vb vbp\"],\n  \"trucker\": [\"t-r-ah1 k-er\", \"nn\"],\n  \"truckload\": [\"t-r-ah1 k-l-ow-d\", \"nn\"],\n  \"truculent\": [\"t-r-ah1 k-y-ah l-ah-n-t\", \"jj\"],\n  \"trudge\": [\"t-r-ah1-jh\", \"nn vb\"],\n  \"true\": [\"t-r-uw1\", \"jj\"],\n  \"truer\": [\"t-r-uw1 er\", \"jjr\"],\n  \"truest\": [\"t-r-uw1 ih-s-t\", \"jjs\"],\n  \"truism\": [\"t-r-uw1 ih z-ah-m\", \"nn\"],\n  \"truly\": [\"t-r-uw1 l-iy\", \"rb\"],\n  \"trump\": [\"t-r-ah1-m-p\", \"nn vb\"],\n  \"trumpet\": [\"t-r-ah1-m p-ah-t\", \"nn vb\"],\n  \"trumpeter\": [\"t-r-ah1-m p-ah t-er\", \"nn\"],\n  \"truncate\": [\"t-r-ah1-ng-k-ey-t\", \"vb\"],\n  \"truncated\": [\"t-r-ah1-ng k-ey t-ih-d\", \"vbn jj\"],\n  \"truncheon\": [\"t-r-ah1-n ch-ih-n\", \"nn\"],\n  \"trundle\": [\"t-r-ah1-n d-ah-l\", \"nn vb vbp\"],\n  \"trunk\": [\"t-r-ah1-ng-k\", \"nn\"],\n  \"truss\": [\"t-r-ah1-s\", \"nn vb\"],\n  \"trust\": [\"t-r-ah1-s-t\", \"nn vbp vb\"],\n  \"trusted\": [\"t-r-ah1 s-t-ih-d\", \"vbn vbd jj\"],\n  \"trustee\": [\"t-r-ah s-t-iy1\", \"nn\"],\n  \"trusteeship\": [\"t-r-ah s-t-iy1 sh-ih-p\", \"nn\"],\n  \"trusting\": [\"t-r-ah1 s-t-ih-ng\", \"jj vbg\"],\n  \"trustworthy\": [\"t-r-ah1-s-t w-er dh-iy\", \"jj\"],\n  \"truth\": [\"t-r-uw1-th\", \"nn\"],\n  \"truthful\": [\"t-r-uw1-th f-ah-l\", \"jj\"],\n  \"truthfully\": [\"t-r-uw1-th f-ah l-iy\", \"rb\"],\n  \"truthfulness\": [\"t-r-uw1-th f-ah-l n-ah-s\", \"nn\"],\n  \"try\": [\"t-r-ay1\", \"vb vbp nn\"],\n  \"trying\": [\"t-r-ay1 ih-ng\", \"vbg jj nn\"],\n  \"tryout\": [\"t-r-ay1 aw-t\", \"nn\"],\n  \"tryst\": [\"t-r-ay1-s-t\", \"nn\"],\n  \"tsunami\": [\"t-s-uw n-aa1 m-iy\", \"nn\"],\n  \"tub\": [\"t-ah1-b\", \"nn\"],\n  \"tuba\": [\"t-uw1 b-ah\", \"nn\"],\n  \"tube\": [\"t-uw1-b\", \"nn\"],\n  \"tuberculosis\": [\"t-ah b-er k-y-ah l-ow1 s-ih-s\", \"nn\"],\n  \"tubing\": [\"t-uw1 b-ih-ng\", \"nn\"],\n  \"tubular\": [\"t-uw1 b-y-ah l-er\", \"jj\"],\n  \"tuck\": [\"t-ah1-k\", \"vbp vb\"],\n  \"tuft\": [\"t-ah1-f-t\", \"nn\"],\n  \"tug\": [\"t-ah1-g\", \"nn vb\"],\n  \"tugboat\": [\"t-ah1-g b-ow-t\", \"nn\"],\n  \"tuition\": [\"t-y-uw ih1 sh-ah-n\", \"nn\"],\n  \"tulip\": [\"t-uw1 l-ah-p\", \"nn\"],\n  \"tumble\": [\"t-ah1-m b-ah-l\", \"nn vb\"],\n  \"tumbled\": [\"t-ah1-m b-ah-l-d\", \"vbd vbn jj\"],\n  \"tumbler\": [\"t-ah1-m b-l-er\", \"nn\"],\n  \"tummy\": [\"t-ah1 m-iy\", \"nn\"],\n  \"tumor\": [\"t-uw1 m-er\", \"nn\"],\n  \"tumult\": [\"t-uw1 m-ah-l-t\", \"nn\"],\n  \"tumultuous\": [\"t-uw m-ah1-l ch-uw ah-s\", \"jj\"],\n  \"tuna\": [\"t-uw1 n-ah\", \"nn\"],\n  \"tundra\": [\"t-ah1-n d-r-ah\", \"nn\"],\n  \"tune\": [\"t-uw1-n\", \"nn vb vbp\"],\n  \"tuned\": [\"t-uw1-n-d\", \"vbn jj vbd\"],\n  \"tuneful\": [\"t-uw1-n f-ah-l\", \"jj\"],\n  \"tung\": [\"t-ah1-ng\", \"nn\"],\n  \"tungsten\": [\"t-ah1-ng s-t-ah-n\", \"nn\"],\n  \"tunic\": [\"t-uw1 n-ih-k\", \"nn\"],\n  \"tunnel\": [\"t-ah1 n-ah-l\", \"nn vb vbp\"],\n  \"turban\": [\"t-er1 b-ah-n\", \"nn\"],\n  \"turbine\": [\"t-er1 b-ay-n\", \"nn jj\"],\n  \"turbo\": [\"t-er1 b-ow\", \"nn\"],\n  \"turbofan\": [\"t-er1 b-ow f-ae-n\", \"nn\"],\n  \"turboprop\": [\"t-er1 b-ow p-r-aa-p\", \"nn\"],\n  \"turbulence\": [\"t-er1 b-y-ah l-ah-n-s\", \"nn\"],\n  \"turbulent\": [\"t-er1 b-y-ah l-ah-n-t\", \"jj\"],\n  \"turf\": [\"t-er1-f\", \"nn jj\"],\n  \"turgid\": [\"t-er1 jh-ih-d\", \"jj\"],\n  \"turkey\": [\"t-er1 k-iy\", \"nn jj\"],\n  \"turmoil\": [\"t-er1 m-oy-l\", \"nn\"],\n  \"turn\": [\"t-er1-n\", \"vb nn rb vbp\"],\n  \"turnabout\": [\"t-er1-n ah b-aw-t\", \"nn\"],\n  \"turnaround\": [\"t-er1 n-er aw-n-d\", \"nn\"],\n  \"turning\": [\"t-er1 n-ih-ng\", \"vbg jj nn\"],\n  \"turnip\": [\"t-er1 n-ah-p\", \"nn\"],\n  \"turnkey\": [\"t-er1-n k-iy\", \"nn\"],\n  \"turnoff\": [\"t-er1 n-ao-f\", \"nn\"],\n  \"turnout\": [\"t-er1-n aw-t\", \"nn\"],\n  \"turnover\": [\"t-er1-n ow v-er\", \"nn\"],\n  \"turnpike\": [\"t-er1-n p-ay-k\", \"nn\"],\n  \"turntable\": [\"t-er1-n t-ey b-ah-l\", \"nn\"],\n  \"turpentine\": [\"t-er1 p-ah-n t-ay-n\", \"nn\"],\n  \"turquoise\": [\"t-er1 k-w-oy-z\", \"jj nn\"],\n  \"turret\": [\"t-er1 ah-t\", \"nn jj\"],\n  \"turtle\": [\"t-er1 t-ah-l\", \"nn\"],\n  \"turtleneck\": [\"t-er1 t-ah-l n-eh-k\", \"nn\"],\n  \"tusk\": [\"t-ah1-s-k\", \"nn\"],\n  \"tussle\": [\"t-ah1 s-ah-l\", \"nn vb\"],\n  \"tutelage\": [\"t-y-uw1 t-ih l-ih-jh\", \"nn\"],\n  \"tutor\": [\"t-uw1 t-er\", \"nn vb\"],\n  \"tutorial\": [\"t-uw t-ao1 r-iy ah-l\", \"nn\"],\n  \"tuxedo\": [\"t-ah-k s-iy1 d-ow\", \"nn\"],\n  \"twaddle\": [\"t-w-aa1 d-ah-l\", \"nn\"],\n  \"twang\": [\"t-w-aa1-ng\", \"nn\"],\n  \"twangy\": [\"t-w-aa1-n jh-iy\", \"jj\"],\n  \"tweak\": [\"t-w-iy1-k\", \"vb\"],\n  \"tweed\": [\"t-w-iy1-d\", \"nn\"],\n  \"tweedy\": [\"t-w-iy1 d-iy\", \"jj\"],\n  \"tweezer\": [\"t-w-iy1 z-er\", \"nn\"],\n  \"twenty\": [\"t-w-eh1-n t-iy\", \"cd nn\"], //#HWF\n  \"twice\": [\"t-w-ay1-s\", \"rb jj\"],\n  \"twig\": [\"t-w-ih1-g\", \"nn\"],\n  \"twilight\": [\"t-w-ay1 l-ay-t\", \"nn\"],\n  \"twin\": [\"t-w-ih1-n\", \"jj nn\"],\n  \"twine\": [\"t-w-ay1-n\", \"nn vb\"],\n  \"twinge\": [\"t-w-ih1-n-jh\", \"nn\"],\n  \"twinjet\": [\"t-w-ih1-n jh-eh-t\", \"nn\"],\n  \"twinkle\": [\"t-w-ih1-ng k-ah-l\", \"nn vb\"],\n  \"twirl\": [\"t-w-er1-l\", \"vb\"],\n  \"twirler\": [\"t-w-er1 l-er\", \"nn\"],\n  \"twist\": [\"t-w-ih1-s-t\", \"nn vbp vb\"],\n  \"twisted\": [\"t-w-ih1 s-t-ah-d\", \"vbn jj vbd\"],\n  \"twister\": [\"t-w-ih1 s-t-er\", \"nn\"],\n  \"twisty\": [\"t-w-ih1 s-t-iy\", \"jj\"],\n  \"twitch\": [\"t-w-ih1-ch\", \"nn vb\"],\n  \"two\": [\"t-uw1\", \"cd\"],\n  \"twosome\": [\"t-uw1 s-ah-m\", \"nn\"],\n  \"tycoon\": [\"t-ay k-uw1-n\", \"nn\"],\n  \"tyke\": [\"t-ay1-k\", \"nn\"],\n  \"type\": [\"t-ay1-p\", \"nn vb\"],\n  \"typecast\": [\"t-ay1-p k-ae-s-t\", \"vb\"],\n  \"typed\": [\"t-ay1-p-t\", \"vbn jj vbd\"],\n  \"typeface\": [\"t-ay1-p f-ey s-ah\", \"nn\"],\n  \"typesetting\": [\"t-ay1-p s-eh t-ih-ng\", \"nn\"],\n  \"typewriter\": [\"t-ay1-p r-ay t-er\", \"nn\"],\n  \"typewriting\": [\"t-ay1-p r-ay t-ih-ng\", \"nn\"],\n  \"typewritten\": [\"t-ay1-p r-ih t-ah-n\", \"jj vbn\"],\n  \"typhoid\": [\"t-ay1 f-oy-d\", \"nn\"],\n  \"typhoon\": [\"t-ay f-uw1-n\", \"nn\"],\n  \"typhus\": [\"t-ay1 f-ah-s\", \"nn\"],\n  \"typical\": [\"t-ih1 p-ah k-ah-l\", \"jj\"],\n  \"typically\": [\"t-ih1 p-ih-k l-iy\", \"rb\"],\n  \"typify\": [\"t-ih1 p-ah f-ay\", \"vbp vb\"],\n  \"typist\": [\"t-ay1 p-ih-s-t\", \"nn\"],\n  \"typographical\": [\"t-ay p-ah g-r-ae1 f-ih k-ah-l\", \"jj\"],\n  \"typography\": [\"t-ah p-aa1 g-r-ah f-iy\", \"nn\"],\n  \"tyrannical\": [\"t-er ae1 n-ih k-ah-l\", \"jj\"],\n  \"tyranny\": [\"t-ih1 r-ah n-iy\", \"nn\"],\n  \"tyrant\": [\"t-ay1 r-ah-n-t\", \"nn\"],\n  \"ubiquitous\": [\"y-uw b-ih1 k-w-ih t-ah-s\", \"jj\"],\n  \"ubiquity\": [\"y-uw b-ih1 k-w-ih t-iy\", \"nn\"],\n  \"uglier\": [\"ah1-g l-iy er\", \"jjr\"],\n  \"ugliness\": [\"ah1-g l-iy n-ah-s\", \"nn\"],\n  \"ugly\": [\"ah1-g l-iy\", \"jj\"],\n  \"ulcer\": [\"ah1-l s-er\", \"nn\"],\n  \"ultimate\": [\"ah1-l t-ah m-ah-t\", \"jj\"],\n  \"ultimately\": [\"ah1-l t-ah m-ah-t l-iy\", \"rb\"],\n  \"ultimatum\": [\"ah-l t-ah m-ey1 t-ah-m\", \"nn\"],\n  \"ultra\": [\"ah1-l t-r-ah\", \"jj\"],\n  \"ultramodern\": [\"ah-l t-r-ah m-aa1 d-er-n\", \"jj\"],\n  \"ultrasonic\": [\"ah-l t-r-ah s-aa1 n-ih-k\", \"jj\"],\n  \"ultrasound\": [\"ah-l t-r-ah s-aw1-n-d\", \"nn\"],\n  \"ultraviolet\": [\"ah-l t-r-ah v-ay1 ah l-ih-t\", \"jj nn\"],\n  \"umbrage\": [\"ah1-m b-r-ih-jh\", \"nn\"],\n  \"umbrella\": [\"ah-m b-r-eh1 l-ah\", \"nn\"],\n  \"umpire\": [\"ah1-m p-ay er\", \"nn\"],\n  \"unabashed\": [\"ah-n ah b-ae1-sh-t\", \"jj\"],\n  \"unabated\": [\"ah-n ah b-ey1 t-ih-d\", \"jj\"],\n  \"unable\": [\"ah-n ey1 b-ah-l\", \"jj\"],\n  \"unabridged\": [\"ah-n ah b-r-ih1-jh-d\", \"jj\"],\n  \"unacceptable\": [\"ah-n ae-k s-eh1-p t-ah b-ah-l\", \"jj\"],\n  \"unacceptably\": [\"ah-n ae-k s-eh1-p t-ah b-l-iy\", \"rb\"],\n  \"unaccompanied\": [\"ah-n ah k-ah1-m p-ah n-iy-d\", \"jj\"],\n  \"unaccountable\": [\"ah-n ah k-aw1-n t-ah b-ah-l\", \"jj\"],\n  \"unaccountably\": [\"ah-n ah k-aw1-n t-ah b-l-iy\", \"rb\"],\n  \"unaccounted\": [\"ah-n ah k-aw1-n t-ih-d\", \"jj\"],\n  \"unaccustomed\": [\"ah-n ah k-ah1 s-t-ah-m-d\", \"jj\"],\n  \"unaddressed\": [\"ah-n ah d-r-eh1-s-t\", \"jj\"],\n  \"unadjusted\": [\"ah-n ah jh-ah1 s-t-ih-d\", \"jj\"],\n  \"unadorned\": [\"ah-n ah d-ao1-r-n-d\", \"jj\"],\n  \"unadulterated\": [\"ah-n ah d-ah1-l t-er ey t-ih-d\", \"jj\"],\n  \"unaffected\": [\"ah-n ah f-eh1-k t-ih-d\", \"jj\"],\n  \"unaffiliated\": [\"ah-n ah f-ih1 l-iy ey t-ih-d\", \"jj\"],\n  \"unaffordable\": [\"ah-n ah f-ao1-r d-ah b-ah-l\", \"jj\"],\n  \"unafraid\": [\"ah-n ah f-r-ey1-d\", \"jj\"],\n  \"unaided\": [\"ah-n ey1 d-ih-d\", \"jj\"],\n  \"unalloyed\": [\"ah-n ae1 l-oy-d\", \"jj\"],\n  \"unalterable\": [\"ah-n ao1-l t-er ah b-ah-l\", \"jj\"],\n  \"unaltered\": [\"ah-n ao1-l t-er-d\", \"jj\"],\n  \"unambiguous\": [\"ah n-ae-m b-ih1 g-y-ah-w ah-s\", \"jj\"],\n  \"unambiguously\": [\"ah n-ae-m b-ih1 g-y-uw ah-s l-iy\", \"rb\"],\n  \"unamended\": [\"ah-n ah m-eh1-n d-ih-d\", \"jj\"],\n  \"unamortized\": [\"ah n-ae1 m-er t-ay-z-d\", \"jj\"],\n  \"unanimity\": [\"y-uw n-ah n-ih1 m-ah t-iy\", \"nn\"],\n  \"unanimous\": [\"y-uw n-ae1 n-ah m-ah-s\", \"jj\"],\n  \"unanimously\": [\"y-uw n-ae1 n-ah m-ah-s l-iy\", \"rb\"],\n  \"unannounced\": [\"ah-n ah n-aw1-n-s-t\", \"jj\"],\n  \"unanswerable\": [\"ah-n ae-n s-er ah b-ah-l\", \"jj\"],\n  \"unanswered\": [\"ah-n ae1-n s-er-d\", \"jj\"],\n  \"unanticipated\": [\"ah-n ae-n t-ih1 s-ah p-ey t-ih-d\", \"jj\"],\n  \"unapologetic\": [\"ah-n ah p-aa l-ah jh-eh1 t-ih-k\", \"jj\"],\n  \"unappealing\": [\"ah-n ah p-iy1 l-ih-ng\", \"jj\"],\n  \"unappreciated\": [\"ah-n ah p-r-iy1 sh-iy ey t-ih-d\", \"jj\"],\n  \"unapproved\": [\"ah-n ah p-r-uw1-v-d\", \"jj\"],\n  \"unarmed\": [\"ah-n aa1-r-m-d\", \"jj\"],\n  \"unashamedly\": [\"ah-n ah sh-ey1 m-ah-d l-iy\", \"rb\"],\n  \"unassailable\": [\"ah-n ah s-ey1 l-ah b-ah-l\", \"jj\"],\n  \"unassisted\": [\"ah-n ah s-ih1 s-t-ih-d\", \"jj\"],\n  \"unassuming\": [\"ah-n ah s-uw1 m-ih-ng\", \"jj\"],\n  \"unattached\": [\"ah-n ah t-ae1-ch-t\", \"jj\"],\n  \"unattainable\": [\"ah-n ah t-ey1 n-ah b-ah-l\", \"jj nn\"],\n  \"unattended\": [\"ah-n ah t-eh1-n d-ih-d\", \"jj\"],\n  \"unattractive\": [\"ah-n ah t-r-ae1-k t-ih-v\", \"jj\"],\n  \"unaudited\": [\"ah n-ao1 d-ah t-ih-d\", \"jj\"],\n  \"unauthentic\": [\"ah-n ao th-eh1-n t-ih-k\", \"jj\"],\n  \"unauthorized\": [\"ah-n ao1 th-er ay-z-d\", \"jj\"],\n  \"unavailability\": [\"ah-n ah v-ey l-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"unavailable\": [\"ah-n ah v-ey1 l-ah b-ah-l\", \"jj\"],\n  \"unavailing\": [\"ah-n ah v-ey1 l-ih-ng\", \"jj\"],\n  \"unavoidable\": [\"ah-n ah v-oy1 d-ah b-ah-l\", \"jj\"],\n  \"unavoidably\": [\"ah-n ah v-oy1 d-ah b-l-iy\", \"rb\"],\n  \"unaware\": [\"ah-n ah w-eh1-r\", \"jj rb\"],\n  \"unbalance\": [\"ah-n-b-ae1-l-ah-n-s\", \"vb\"],\n  \"unbalanced\": [\"ah-n b-ae1 l-ah-n-s-t\", \"jj vbn\"],\n  \"unbearable\": [\"ah-n b-eh1 r-ah b-ah-l\", \"jj\"],\n  \"unbearably\": [\"ah-n b-eh1 r-ah b-l-iy\", \"rb\"],\n  \"unbeknownst\": [\"ah-n b-iy n-ow1-n-s-t\", \"jj\"],\n  \"unbelievable\": [\"ah-n b-ah l-iy1 v-ah b-ah-l\", \"jj\"],\n  \"unbelievably\": [\"ah-n b-ah l-iy1 v-ah b-l-iy\", \"rb\"],\n  \"unbelieving\": [\"ah-n b-ah l-iy1 v-ih-ng\", \"jj\"],\n  \"unbiased\": [\"ah-n b-ay1 ah-s-t\", \"jj\"],\n  \"unblemished\": [\"ah-n b-l-eh1 m-ih-sh-t\", \"jj\"],\n  \"unborn\": [\"ah1-n b-ao1-r-n\", \"jj nn\"],\n  \"unbound\": [\"ah-n b-aw1-n-d\", \"jj vbn\"],\n  \"unbounded\": [\"ah-n b-aw1-n d-ih-d\", \"jj\"],\n  \"unbridled\": [\"ah-n b-r-ay1 d-ah-l-d\", \"jj\"],\n  \"unbroken\": [\"ah-n b-r-ow1 k-ah-n\", \"jj\"],\n  \"unburdened\": [\"ah-n b-er1 d-ah-n-d\", \"jj\"],\n  \"unburned\": [\"ah-n b-er1-n-d\", \"jj\"],\n  \"uncalled\": [\"ah-n k-ao1-l-d\", \"jj\"],\n  \"uncannily\": [\"ah-n k-ae1 n-ah l-iy\", \"rb\"],\n  \"uncanny\": [\"ah-n k-ae1 n-iy\", \"jj\"],\n  \"uncaring\": [\"ah-n k-eh1 r-ih-ng\", \"jj\"],\n  \"unceasing\": [\"ah-n s-iy1 s-ih-ng\", \"jj\"],\n  \"uncensored\": [\"ah-n s-eh1-n s-er-d\", \"jj\"],\n  \"unceremoniously\": [\"ah-n s-eh r-ah m-ow1 n-iy ah-s l-iy\", \"rb\"],\n  \"uncertain\": [\"ah-n s-er1 t-ah-n\", \"jj rb\"],\n  \"uncertainty\": [\"ah-n s-er1 t-ah-n t-iy\", \"nn\"],\n  \"unchallenged\": [\"ah-n ch-ae1 l-ih-n-jh-d\", \"jj\"],\n  \"unchanged\": [\"ah-n ch-ey1-n-jh-d\", \"jj\"],\n  \"unchanging\": [\"ah-n ch-ey1-n jh-ih-ng\", \"jj\"],\n  \"uncharacteristic\": [\"ah-n k-eh r-ih-k t-er ih1 s-t-ih-k\", \"jj\"],\n  \"uncharacteristically\": [\"ah-n k-eh r-ih-k t-er ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"uncharted\": [\"ah-n ch-aa1-r t-ih-d\", \"jj\"],\n  \"unchecked\": [\"ah-n ch-eh1-k-t\", \"jj\"],\n  \"unclaimed\": [\"ah-n k-l-ey1-m-d\", \"jj\"],\n  \"unclassified\": [\"ah-n k-l-ae1 s-ih f-ay-d\", \"jj\"],\n  \"uncle\": [\"ah1-ng k-ah-l\", \"nn\"],\n  \"unclean\": [\"ah-n k-l-iy1-n\", \"jj\"],\n  \"unclear\": [\"ah-n k-l-ih1-r\", \"jj\"],\n  \"uncluttered\": [\"ah-n k-l-ah1 t-er-d\", \"jj\"],\n  \"uncoated\": [\"ah-n k-ow1 t-ih-d\", \"jj\"],\n  \"uncollectable\": [\"ah-n k-ah l-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"uncomfortable\": [\"ah-n k-ah1-m f-er t-ah b-ah-l\", \"jj\"],\n  \"uncomfortably\": [\"ah-n k-ah1-m-f t-ah b-l-iy\", \"rb\"],\n  \"uncommitted\": [\"ah-n k-ah m-ih1 t-ih-d\", \"jj\"],\n  \"uncommon\": [\"ah-n k-aa1 m-ah-n\", \"jj rb\"],\n  \"uncommonly\": [\"ah-n k-aa1 m-ah-n l-iy\", \"rb\"],\n  \"uncompensated\": [\"ah-n k-aa1-m p-ah-n s-ey t-ih-d\", \"jj\"],\n  \"uncompetitive\": [\"ah-n k-ah-m p-eh1 t-ah t-ih-v\", \"jj\"],\n  \"uncomplicated\": [\"ah-n k-aa1-m p-l-ah k-ey t-ih-d\", \"jj\"],\n  \"uncompromising\": [\"ah-n k-aa1-m p-r-ah m-ay z-ih-ng\", \"jj\"],\n  \"unconcealed\": [\"ah-n k-ah-n s-iy1-l-d\", \"jj\"],\n  \"unconcern\": [\"ah-n k-ah-n s-er1-n\", \"nn\"],\n  \"unconcerned\": [\"ah-n k-ah-n s-er1-n-d\", \"jj\"],\n  \"unconditional\": [\"ah-n k-ah-n d-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"unconditionally\": [\"ah-n k-ah-n d-ih1 sh-ah-n ah l-iy\", \"rb\"],\n  \"unconfirmed\": [\"ah-n k-ah-n f-er1-m-d\", \"jj\"],\n  \"unconnected\": [\"ah-n k-ah n-eh1-k t-ih-d\", \"jj\"],\n  \"unconscionable\": [\"ah-n k-aa1-n sh-ah-n ah b-ah-l\", \"jj\"],\n  \"unconscious\": [\"ah-n k-aa1-n sh-ah-s\", \"jj nn\"],\n  \"unconsciously\": [\"ah-n k-aa1-n sh-ah-s l-iy\", \"rb\"],\n  \"unconsolidated\": [\"ah-n k-ah-n s-aa1 l-ah d-ey t-ih-d\", \"jj\"],\n  \"unconstitutional\": [\"ah-n k-aa-n s-t-ah t-uw1 sh-ah n-ah-l\", \"jj\"],\n  \"uncontested\": [\"ah-n k-ah-n t-eh1 s-t-ih-d\", \"jj\"],\n  \"uncontrollable\": [\"ah-n k-ah-n t-r-ow1 l-ah b-ah-l\", \"jj\"],\n  \"uncontrollably\": [\"ah-n k-ah-n t-r-ow1 l-ah b-l-iy\", \"rb\"],\n  \"uncontrolled\": [\"ah-n k-ah-n t-r-ow1-l-d\", \"jj\"],\n  \"unconventional\": [\"ah-n k-ah-n v-eh1-n sh-ah n-ah-l\", \"jj\"],\n  \"unconvinced\": [\"ah-n k-ah-n v-ih1-n-s-t\", \"jj\"],\n  \"unconvincing\": [\"ah-n k-ah-n v-ih1-n s-ih-ng\", \"jj\"],\n  \"uncooperative\": [\"ah-n k-ow aa1 p-er ah t-ih-v\", \"jj\"],\n  \"uncorrected\": [\"ah-n k-er eh1-k t-ih-d\", \"jj\"],\n  \"uncounted\": [\"ah-n k-aw1-n t-ih-d\", \"jj\"],\n  \"uncouth\": [\"ah1-n k-uw1-th\", \"jj\"],\n  \"uncover\": [\"ah-n k-ah1 v-er\", \"vb\"],\n  \"uncovered\": [\"ah-n k-ah1 v-er-d\", \"vbn vbd jj\"],\n  \"uncritical\": [\"ah-n k-r-ih1 t-ih k-ah-l\", \"jj\"],\n  \"uncritically\": [\"ah-n k-r-ih1 t-ih k-ah l-iy\", \"rb\"],\n  \"uncut\": [\"ah-n k-ah1-t\", \"jj\"],\n  \"undamaged\": [\"ah-n d-ae1 m-ah-jh-d\", \"jj\"],\n  \"undated\": [\"ah-n d-ey1 t-ih-d\", \"jj\"],\n  \"undaunted\": [\"ah-n d-ao1-n t-ih-d\", \"jj\"],\n  \"undecided\": [\"ah-n d-ih s-ay1 d-ih-d\", \"jj\"],\n  \"undeclared\": [\"ah-n d-ih k-l-eh1-r-d\", \"jj\"],\n  \"undefeated\": [\"ah-n d-ih f-iy1 t-ih-d\", \"jj\"],\n  \"undefined\": [\"ah-n d-ih f-ay1-n-d\", \"jj\"],\n  \"undelivered\": [\"ah-n d-ih l-ih1 v-er-d\", \"jj\"],\n  \"undemocratic\": [\"ah-n d-eh m-ah k-r-ae1 t-ih-k\", \"jj\"],\n  \"undeniable\": [\"ah-n d-ih n-ay1 ah b-ah-l\", \"jj\"],\n  \"undeniably\": [\"ah-n d-ih n-ay1 ah b-l-iy\", \"rb\"],\n  \"under\": [\"ah1-n d-er\", \"in jj rb rp\"],\n  \"underachiever\": [\"ah1-n d-er ah ch-iy v-er\", \"nn\"],\n  \"underage\": [\"ah1-n d-er ih-jh\", \"jj\"],\n  \"underarm\": [\"ah-n d-er aa1-r-m\", \"nn\"],\n  \"underbelly\": [\"ah1-n d-er b-eh l-iy\", \"nn\"],\n  \"underbrush\": [\"ah1-n d-er b-r-ah-sh\", \"nn\"],\n  \"undercover\": [\"ah-n d-er k-ah1 v-er\", \"jj\"],\n  \"undercurrent\": [\"ah1-n d-er k-er ah-n-t\", \"nn\"],\n  \"undercut\": [\"ah1-n d-er k-ah-t\", \"vb nn vbd vbn vbp jj\"],\n  \"underdeveloped\": [\"ah-n d-er d-ih v-eh1 l-ah-p-t\", \"jj\"],\n  \"underdog\": [\"ah1-n d-er d-ao-g\", \"nn\"],\n  \"underemployed\": [\"ah1-n d-er ih-m p-l-oy1-d\", \"jj\"],\n  \"underemployment\": [\"ah-n d-er ih-m p-l-oy1 m-ah-n-t\", \"nn\"],\n  \"underestimate\": [\"ah1-n d-er eh1 s-t-ah m-ey-t\", \"vb\"],\n  \"underfoot\": [\"ah-n d-er f-uh1-t\", \"rb\"],\n  \"underfund\": [\"ah1-n-d-er-f-ah-n-d\", \"vb\"],\n  \"underfunded\": [\"ah1-n d-er f-ah-n d-ih-d\", \"vbn jj\"],\n  \"undergarment\": [\"ah1-n d-er g-aa-r m-ah-n-t\", \"nn\"],\n  \"undergo\": [\"ah-n d-er g-ow1\", \"vb vbp\"],\n  \"undergone\": [\"ah-n d-er g-ao1-n\", \"vbn\"],\n  \"undergraduate\": [\"ah-n d-er g-r-ae1 jh-ah-w ah-t\", \"jj nn\"],\n  \"underground\": [\"ah1-n d-er g-r-aw-n-d\", \"jj nn rb\"],\n  \"undergrowth\": [\"ah1-n d-er g-r-ow-th\", \"nn\"],\n  \"underhanded\": [\"ah1-n d-er hh-ae1-n d-ih-d\", \"jj\"],\n  \"underlie\": [\"ah-n d-er l-ay1\", \"vbp vb\"],\n  \"underline\": [\"ah1-n d-er l-ay-n\", \"vb\"],\n  \"underling\": [\"ah1-n d-er l-ih-ng\", \"nn\"],\n  \"underlying\": [\"ah-n d-er l-ay1 ih-ng\", \"vbg jj\"],\n  \"undermine\": [\"ah1-n d-er m-ay-n\", \"vb vbp\"],\n  \"undermined\": [\"ah-n d-er m-ay1-n-d\", \"vbn vbd jj\"],\n  \"underneath\": [\"ah-n d-er n-iy1-th\", \"in nn\"],\n  \"underpaid\": [\"ah1-n d-er p-ey1-d\", \"jj vbd vbn\"],\n  \"underperform\": [\"ah1-n d-er p-er f-ao-r-m\", \"vb jj\"],\n  \"underperformance\": [\"ah-n d-er p-er f-ao1-r m-ah-n-s\", \"nn\"],\n  \"underperforming\": [\"ah1-n d-er p-er f-ao-r m-ih-ng\", \"vbg jj\"],\n  \"underpin\": [\"ah1-n d-er p-ih-n\", \"vb\"],\n  \"underpriced\": [\"ah1-n d-er p-r-ay-s-t\", \"jj\"],\n  \"underrate\": [\"ah-n-d-er-r-ey1-t\", \"vb\"],\n  \"underrepresented\": [\"ah-n d-er r-eh p-r-ih z-eh1-n t-ih-d\", \"jj\"],\n  \"underscore\": [\"ah-n d-er s-k-ao1-r\", \"vbp nn vb\"],\n  \"undersea\": [\"ah-n d-er s-iy1\", \"jj\"],\n  \"underserved\": [\"ah-n d-er s-er1-v-d\", \"jj\"],\n  \"underside\": [\"ah1-n d-er s-ay-d\", \"nn\"],\n  \"undersized\": [\"ah1-n d-er s-ay-z-d\", \"jj\"],\n  \"understand\": [\"ah-n d-er s-t-ae1-n-d\", \"vb vbp\"],\n  \"understandable\": [\"ah-n d-er s-t-ae1-n d-ah b-ah-l\", \"jj\"],\n  \"understandably\": [\"ah-n d-er s-t-ae1-n d-ah b-l-iy\", \"rb\"],\n  \"understanding\": [\"ah-n d-er s-t-ae1-n d-ih-ng\", \"nn vbg\"],\n  \"understate\": [\"ah1-n d-er s-t-ey-t\", \"vb vbp\"],\n  \"understated\": [\"ah1-n d-er s-t-ey t-ih-d\", \"vbn vbd jj\"],\n  \"understatement\": [\"ah1-n d-er s-t-ey-t m-ah-n-t\", \"nn\"],\n  \"understood\": [\"ah-n d-er s-t-uh1-d\", \"vbn vbd\"],\n  \"undertake\": [\"ah1-n d-er t-ey-k\", \"vb\"],\n  \"undertaken\": [\"ah1-n d-er t-ey k-ah-n\", \"vbn\"],\n  \"undertaker\": [\"ah1-n d-er t-ey k-er\", \"nn\"],\n  \"undertaking\": [\"ah1-n d-er t-ey k-ih-ng\", \"nn vbg\"],\n  \"undertone\": [\"ah1-n d-er t-ow-n\", \"nn\"],\n  \"undertook\": [\"ah-n d-er t-uh1-k\", \"vbd\"],\n  \"undertow\": [\"ah1-n d-er t-ow\", \"nn\"],\n  \"underuse\": [\"ah-n-d-er-y-uw1-z\", \"vb\"],\n  \"underutilize\": [\"ah1-n-d-er-y-uw-t-ah-l-ay-z\", \"vb\"],\n  \"undervalue\": [\"ah1-n-d-er-v-ae-l-y-uw\", \"vb\"],\n  \"undervalued\": [\"ah1-n d-er v-ae-l y-uw-d\", \"vbn vbd jj\"],\n  \"underwater\": [\"ah1-n d-er w-ao t-er\", \"jj nn rb\"],\n  \"underway\": [\"ah-n d-er w-ey1\", \"rb jj\"],\n  \"underwear\": [\"ah1-n d-er w-eh-r\", \"nn\"],\n  \"underweight\": [\"ah-n d-er w-ey1 t-ih-d\", \"jj\"],\n  \"underwent\": [\"ah-n d-er w-eh1-n-t\", \"vbd\"],\n  \"underworld\": [\"ah1-n d-er w-er-l-d\", \"nn\"],\n  \"underwrite\": [\"ah1-n d-er r-ay-t\", \"vb vbp\"],\n  \"underwriter\": [\"ah1-n d-er r-ay t-er\", \"nn\"],\n  \"underwritten\": [\"ah1-n d-er r-ih t-ah-n\", \"vbn jj nn\"],\n  \"underwrote\": [\"ah-n d-er r-ow1-t\", \"vbd nn\"],\n  \"undeserved\": [\"ah-n d-ih z-er1-v-d\", \"jj\"],\n  \"undesirable\": [\"ah-n d-ih z-ay1 r-ah b-ah-l\", \"jj nn\"],\n  \"undetectable\": [\"ah-n d-ih t-eh1-k t-ah b-ah-l\", \"jj\"],\n  \"undetected\": [\"ah-n d-ih t-eh1-k t-ih-d\", \"jj\"],\n  \"undetermined\": [\"ah-n d-ih t-er1 m-ih-n-d\", \"jj\"],\n  \"undeveloped\": [\"ah-n d-ih v-eh1 l-ah-p-t\", \"jj\"],\n  \"undid\": [\"ah-n d-ih1-d\", \"vbd\"],\n  \"undifferentiated\": [\"ah-n d-ih f-er eh1-n sh-iy ey t-ih-d\", \"jj\"],\n  \"undiluted\": [\"ah-n d-ah l-uw1 t-ih-d\", \"jj\"],\n  \"undiminished\": [\"ah-n d-ah m-ih1 n-ih-sh-t\", \"jj\"],\n  \"undisciplined\": [\"ah-n d-ih1 s-ih p-l-ih-n-d\", \"jj\"],\n  \"undisclosed\": [\"ah-n d-ih-s k-l-ow1-z-d\", \"jj\"],\n  \"undisguised\": [\"ah-n d-ih-s g-ay1-z-d\", \"jj\"],\n  \"undisputed\": [\"ah-n d-ih s-p-y-uw1 t-ih-d\", \"jj\"],\n  \"undistinguished\": [\"ah-n d-ih s-t-ih1-ng g-w-ih-sh-t\", \"jj\"],\n  \"undisturbed\": [\"ah-n d-ih s-t-er1-b-d\", \"jj\"],\n  \"undiversified\": [\"ah-n d-ih v-er1 s-ih f-ay-d\", \"jj\"],\n  \"undivided\": [\"ah-n d-ah v-ay1 d-ih-d\", \"jj\"],\n  \"undo\": [\"ah-n d-uw1\", \"vb\"],\n  \"undoing\": [\"ah-n d-uw1 ih-ng\", \"nn vbg\"],\n  \"undone\": [\"ah-n d-ah1-n\", \"vbn jj\"],\n  \"undoubtedly\": [\"ah-n d-aw1 t-ih-d l-iy\", \"rb\"],\n  \"undreamed\": [\"ah-n d-r-iy1-m-d\", \"jj\"],\n  \"undress\": [\"ah-n d-r-eh1-s\", \"nn\"],\n  \"undue\": [\"ah-n d-uw1\", \"jj\"],\n  \"undulating\": [\"ah1-n jh-ah l-ey t-ih-ng\", \"jj\"],\n  \"unduly\": [\"ah-n d-uw1 l-iy\", \"rb\"],\n  \"undying\": [\"ah-n d-ay1 ih-ng\", \"jj\"],\n  \"unearned\": [\"ah-n er1-n-d\", \"jj\"],\n  \"unearth\": [\"ah-n er1-th\", \"vb\"],\n  \"unearthly\": [\"ah-n er1-th l-iy\", \"jj\"],\n  \"unease\": [\"ah-n iy1-z\", \"nn\"],\n  \"uneasily\": [\"ah-n iy1 z-ah l-iy\", \"rb\"],\n  \"uneasiness\": [\"ah-n iy1 z-iy n-ah-s\", \"nn\"],\n  \"uneasy\": [\"ah-n iy1 z-iy\", \"jj\"],\n  \"uneconomic\": [\"ah-n eh k-ah n-aa1 m-ih-k\", \"jj\"],\n  \"uneconomical\": [\"ah-n eh k-ah n-aa1 m-ih k-ah-l\", \"jj\"],\n  \"uneducated\": [\"ah-n eh1 jh-uh k-ey t-ih-d\", \"jj\"],\n  \"unelected\": [\"ah-n ih l-eh1-k t-ih-d\", \"jj\"],\n  \"unemployed\": [\"ah-n eh-m p-l-oy1-d\", \"jj\"],\n  \"unemployment\": [\"ah-n ih-m p-l-oy1 m-ah-n-t\", \"nn\"],\n  \"unencumbered\": [\"ah-n eh-n k-ah1-m b-er-d\", \"jj\"],\n  \"unending\": [\"ah-n eh1-n d-ih-ng\", \"jj\"],\n  \"unenforceable\": [\"ah-n eh-n f-ao1-r s-ah b-ah-l\", \"jj\"],\n  \"unenlightened\": [\"ah-n eh-n l-ay1 t-ah-n-d\", \"jj\"],\n  \"unenthusiastic\": [\"ah-n ih-n th-uw z-iy ae1 s-t-ih-k\", \"jj\"],\n  \"unenviable\": [\"ah-n eh1-n v-iy ah b-ah-l\", \"jj\"],\n  \"unequal\": [\"ah-n iy1 k-w-ah-l\", \"jj\"],\n  \"unequaled\": [\"ah-n iy1 k-w-ah-l-d\", \"jj\"],\n  \"unequivocal\": [\"ah-n ih k-w-ih1 v-ah k-ah-l\", \"jj\"],\n  \"unequivocally\": [\"ah-n iy k-w-ih1 v-ah k-ah l-iy\", \"rb\"],\n  \"unethical\": [\"ah-n eh1 th-ih k-ah-l\", \"jj\"],\n  \"uneven\": [\"ah-n iy1 v-ah-n\", \"jj\"],\n  \"unevenly\": [\"ah-n iy1 v-ah-n l-iy\", \"rb\"],\n  \"uneventful\": [\"ah-n iy v-eh1-n-t f-ah-l\", \"jj\"],\n  \"unexciting\": [\"ah-n ih-k s-ay1 t-ih-ng\", \"jj\"],\n  \"unexercised\": [\"ah-n eh1-k s-er s-ay-z-d\", \"jj\"],\n  \"unexpected\": [\"ah-n ih-k s-p-eh1-k t-ih-d\", \"jj\"],\n  \"unexpectedly\": [\"ah-n ih-k s-p-eh1-k t-ih-d l-iy\", \"rb\"],\n  \"unexplainable\": [\"ah-n ih-k s-p-l-ey1 n-ah b-ah-l\", \"jj\"],\n  \"unexplained\": [\"ah-n ih-k s-p-l-ey1-n-d\", \"jj\"],\n  \"unexplored\": [\"ah-n ih-k s-p-l-ao1-r-d\", \"jj\"],\n  \"unfailing\": [\"ah-n f-ey1 l-ih-ng\", \"jj\"],\n  \"unfailingly\": [\"ah-n f-ey1 l-ih-ng l-iy\", \"rb\"],\n  \"unfair\": [\"ah-n f-eh1-r\", \"jj\"],\n  \"unfairly\": [\"ah-n f-eh1-r l-iy\", \"rb\"],\n  \"unfairness\": [\"ah-n f-eh1-r n-ah-s\", \"nn\"],\n  \"unfaithful\": [\"ah-n f-ey1-th f-ah-l\", \"jj\"],\n  \"unfamiliar\": [\"ah-n f-ah m-ih1 l-y-er\", \"jj\"],\n  \"unfamiliarity\": [\"ah-n f-ah m-ih l-y-eh1 r-ah t-iy\", \"nn\"],\n  \"unfashionable\": [\"ah-n f-ae1 sh-ah-n ah b-ah-l\", \"jj\"],\n  \"unfathomable\": [\"ah-n f-ae1 dh-ah m-ah b-ah-l\", \"jj\"],\n  \"unfavorable\": [\"ah-n f-ey1 v-er ah b-ah-l\", \"jj\"],\n  \"unfavorably\": [\"ah-n f-ey1 v-er ah b-l-iy\", \"rb\"],\n  \"unfazed\": [\"ah-n f-ey1-z-d\", \"jj\"],\n  \"unfeasible\": [\"ah-n f-iy1 z-ah b-ah-l\", \"jj\"],\n  \"unfenced\": [\"ah-n f-eh1-n-s-t\", \"jj\"],\n  \"unfettered\": [\"ah-n f-eh1 t-er-d\", \"jj\"],\n  \"unfilled\": [\"ah-n f-ih1-l-d\", \"jj\"],\n  \"unfinished\": [\"ah-n f-ih1 n-ih-sh-t\", \"jj\"],\n  \"unfit\": [\"ah-n f-ih1-t\", \"jj nn\"],\n  \"unflagging\": [\"ah-n f-l-ae1 g-ih-ng\", \"jj\"],\n  \"unflappable\": [\"ah-n f-l-ae1 p-ah b-ah-l\", \"jj\"],\n  \"unflattering\": [\"ah-n f-l-ae1 t-er ih-ng\", \"jj\"],\n  \"unflinching\": [\"ah-n f-l-ih1-n ch-ih-ng\", \"jj\"],\n  \"unfocused\": [\"ah-n f-ow1 k-ah-s-t\", \"jj\"],\n  \"unfold\": [\"ah-n f-ow1-l-d\", \"vb vbp\"],\n  \"unfolding\": [\"ah-n f-ow1-l d-ih-ng\", \"vbg jj\"],\n  \"unforeseen\": [\"ah-n f-ao-r s-iy1-n\", \"jj\"],\n  \"unforgettable\": [\"ah-n f-er g-eh1 t-ah b-ah-l\", \"jj\"],\n  \"unforgivable\": [\"ah-n f-ao-r g-ih1 v-ah b-ah-l\", \"jj\"],\n  \"unforgiving\": [\"ah-n f-er g-ih1 v-ih-ng\", \"jj\"],\n  \"unformed\": [\"ah-n f-ao1-r-m-d\", \"jj\"],\n  \"unfortunate\": [\"ah-n f-ao1-r ch-ah n-ah-t\", \"jj nn\"],\n  \"unfortunately\": [\"ah-n f-ao1-r ch-ah n-ah-t l-iy\", \"rb\"],\n  \"unfounded\": [\"ah-n f-aw1-n d-ih-d\", \"jj\"],\n  \"unfriendly\": [\"ah-n f-r-eh1-n-d l-iy\", \"jj\"],\n  \"unfulfilled\": [\"ah-n f-uh-l f-ih1-l-d\", \"jj\"],\n  \"unfunded\": [\"ah-n f-ah1-n d-ih-d\", \"jj\"],\n  \"unfunnily\": [\"ah-n f-ah1 n-ah l-iy\", \"rb\"],\n  \"unfurl\": [\"ah-n-f-er1-l\", \"vb\"],\n  \"ungainly\": [\"ah-n g-ey1-n l-iy\", \"jj\"],\n  \"unglamorous\": [\"ah-n g-l-ae1 m-er ah-s\", \"jj\"],\n  \"unglued\": [\"ah-n g-l-uw1-d\", \"jj\"],\n  \"ungovernable\": [\"ah-n g-ah1 v-er n-ah b-ah-l\", \"jj\"],\n  \"ungrateful\": [\"ah-n g-r-ey1-t f-ah-l\", \"jj\"],\n  \"unhappily\": [\"ah-n hh-ae1 p-ah l-iy\", \"rb\"],\n  \"unhappiness\": [\"ah-n hh-ae1 p-iy n-ih-s\", \"nn\"],\n  \"unhappy\": [\"ah-n hh-ae1 p-iy\", \"jj\"],\n  \"unharmed\": [\"ah-n hh-aa1-r-m-d\", \"jj\"],\n  \"unhealthy\": [\"ah-n hh-eh1-l th-iy\", \"jj\"],\n  \"unheard\": [\"ah-n hh-er1-d\", \"jj\"],\n  \"unhedged\": [\"ah-n hh-eh1-jh-d\", \"jj\"],\n  \"unheeded\": [\"ah-n hh-iy1 d-ih-d\", \"jj\"],\n  \"unheralded\": [\"ah-n hh-eh1 r-ah-l d-ih-d\", \"jj\"],\n  \"unhesitatingly\": [\"ah-n hh-eh1 z-ih t-ey t-ih-ng l-iy\", \"rb\"],\n  \"unhindered\": [\"ah-n hh-ih1-n d-er-d\", \"jj\"],\n  \"unhinge\": [\"ah-n-hh-ih1-n-jh\", \"vb\"],\n  \"unholy\": [\"ah-n hh-ow1 l-iy\", \"jj\"],\n  \"unhurried\": [\"ah-n hh-er1 iy-d\", \"jj\"],\n  \"unhurt\": [\"ah-n hh-er1-t\", \"jj\"],\n  \"unidentified\": [\"ah-n ay d-eh1-n t-ah f-ay-d\", \"jj\"],\n  \"unification\": [\"y-uw n-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"unified\": [\"y-uw1 n-ah f-ay-d\", \"jj vbd vbn\"],\n  \"uniform\": [\"y-uw1 n-ah f-ao-r-m\", \"nn jj\"],\n  \"uniformed\": [\"y-uw1 n-ah f-ao-r-m-d\", \"jj\"],\n  \"uniformity\": [\"y-uw n-ah f-ao1-r m-ah t-iy\", \"nn\"],\n  \"uniformly\": [\"y-uw1 n-ah f-ao-r-m l-iy\", \"rb\"],\n  \"unify\": [\"y-uw1 n-ah f-ay\", \"vb\"],\n  \"unifying\": [\"y-uw1 n-ah f-ay ih-ng\", \"vbg jj\"],\n  \"unilateral\": [\"y-uw n-ah l-ae1 t-er ah-l\", \"jj\"],\n  \"unilaterally\": [\"y-uw n-ah l-ae1 t-er ah l-iy\", \"rb\"],\n  \"unimaginable\": [\"ah-n ih m-ae1 jh-ih n-ah b-ah-l\", \"jj\"],\n  \"unimaginative\": [\"ah-n ih m-ae1 jh-ih n-ah t-ih-v\", \"jj\"],\n  \"unimpaired\": [\"ah-n ih-m p-eh1-r-d\", \"jj\"],\n  \"unimpeachable\": [\"ah-n ih-m p-iy1 ch-ah b-ah-l\", \"jj\"],\n  \"unimpeded\": [\"ah-n ih-m p-iy1 d-ih-d\", \"jj\"],\n  \"unimportant\": [\"ah-n ih-m p-ao1-r t-ah-n-t\", \"jj\"],\n  \"unimpressed\": [\"ah-n ih-m p-r-eh1-s-t\", \"jj\"],\n  \"unimpressive\": [\"ah-n ih-m p-r-eh1 s-ih-v\", \"jj\"],\n  \"unimproved\": [\"ah-n ih-m p-r-uw1-v-d\", \"jj\"],\n  \"unincorporated\": [\"ah-n ih-n k-ao1-r p-er ey t-ih-d\", \"jj\"],\n  \"unindicted\": [\"ah-n ih-n d-ay1 t-ih-d\", \"jj\"],\n  \"uninfected\": [\"ah-n ih-n f-eh1-k t-ih-d\", \"jj\"],\n  \"uninformative\": [\"ah-n ih-n f-ao1-r m-ah t-ih-v\", \"jj\"],\n  \"uninformed\": [\"ah-n ih-n f-ao1-r-m-d\", \"jj\"],\n  \"uninhabitable\": [\"ah-n ih-n hh-ae1 b-ah t-ah b-ah-l\", \"jj\"],\n  \"uninhabited\": [\"ah-n ih-n hh-ae1 b-ah t-ih-d\", \"jj\"],\n  \"uninhibited\": [\"ah-n ih-n hh-ih1 b-ih t-ih-d\", \"jj\"],\n  \"uninitiated\": [\"ah-n ih n-ih1 sh-iy ey t-ih-d\", \"jj\"],\n  \"uninjured\": [\"ah-n ih1-n jh-er-d\", \"jj\"],\n  \"uninspired\": [\"ah-n ih-n s-p-ay1 er-d\", \"jj\"],\n  \"uninsurable\": [\"ah-n ih-n sh-uh1 r-ah b-ah-l\", \"jj\"],\n  \"uninsured\": [\"ah-n ih-n sh-uh1-r-d\", \"jj\"],\n  \"unintelligible\": [\"ah-n ih-n t-eh1 l-ah jh-ah b-ah-l\", \"jj\"],\n  \"unintended\": [\"ah-n ih-n t-eh1-n d-ih-d\", \"jj\"],\n  \"unintentional\": [\"ah-n ih-n t-eh1-n sh-ah n-ah-l\", \"jj\"],\n  \"unintentionally\": [\"ah-n ih-n t-eh1-n sh-ah-n ah l-iy\", \"rb\"],\n  \"uninterested\": [\"ah-n ih1-n t-r-ah s-t-ah-d\", \"jj\"],\n  \"uninteresting\": [\"ah-n ih1-n t-r-ah s-t-ih-ng\", \"jj\"],\n  \"uninterrupted\": [\"ah-n ih-n t-er ah1-p t-ih-d\", \"jj\"],\n  \"uninterruptible\": [\"ah-n ih-n t-er ah1-p t-ah b-ah-l\", \"jj\"],\n  \"uninvited\": [\"ah-n ih-n v-ay1 t-ih-d\", \"jj\"],\n  \"uninviting\": [\"ah-n ih-n v-ay1 t-ih-ng\", \"jj\"],\n  \"uninvolved\": [\"ah-n ih-n v-ao1-l-v-d\", \"jj\"],\n  \"union\": [\"y-uw1 n-y-ah-n\", \"nn jj\"],\n  \"unionist\": [\"y-uw1 n-y-ah n-ah-s-t\", \"nn\"],\n  \"unionize\": [\"y-uw1-n-y-ah-n-ay-z\", \"vb\"],\n  \"unionized\": [\"y-uw1 n-y-ah n-ay-z-d\", \"jj vbd vbn\"],\n  \"unique\": [\"y-uw n-iy1-k\", \"jj nn\"],\n  \"uniquely\": [\"y-uw n-iy1-k l-iy\", \"rb\"],\n  \"uniqueness\": [\"y-uw n-iy1-k n-ah-s\", \"nn\"],\n  \"unison\": [\"y-uw1 n-ah s-ah-n\", \"nn\"],\n  \"unissued\": [\"ah-n ih1 sh-uw-d\", \"jj\"],\n  \"unit\": [\"y-uw1 n-ah-t\", \"nn\"],\n  \"unitary\": [\"y-uw1 n-ih t-eh r-iy\", \"jj\"],\n  \"unite\": [\"y-uw1 n-ay-t\", \"vb vbp\"],\n  \"united\": [\"y-uw n-ay1 t-ah-d\", \"vbn vbd jj\"],\n  \"unitholder\": [\"y-uw1 n-ih-t hh-ow-l d-er\", \"nn\"],\n  \"unity\": [\"y-uw1 n-ah t-iy\", \"nn\"],\n  \"universal\": [\"y-uw n-ah v-er1 s-ah-l\", \"jj\"],\n  \"universality\": [\"y-uw n-ah v-er s-ae1 l-ah t-iy\", \"nn\"],\n  \"universally\": [\"y-uw n-ah v-er1 s-ah l-iy\", \"rb\"],\n  \"universe\": [\"y-uw1 n-ah v-er-s\", \"nn\"],\n  \"university\": [\"y-uw n-ah v-er1 s-ah t-iy\", \"nn\"],\n  \"unjust\": [\"ah-n jh-ah1-s-t\", \"jj\"],\n  \"unjustifiable\": [\"ah-n jh-ah s-t-ih f-ay1 ah b-ah-l\", \"jj\"],\n  \"unjustifiably\": [\"ah-n jh-ah s-t-ih f-ay1 ah b-l-iy\", \"rb\"],\n  \"unjustified\": [\"ah-n jh-ah1 s-t-ah f-ay-d\", \"jj\"],\n  \"unjustly\": [\"ah-n jh-ah1-s-t l-iy\", \"rb\"],\n  \"unkempt\": [\"ah-n k-eh1-m-p-t\", \"jj\"],\n  \"unkind\": [\"ah-n k-ay1-n-d\", \"jj\"],\n  \"unknowable\": [\"ah-n n-ow1 ah b-ah-l\", \"jj\"],\n  \"unknowingly\": [\"ah-n n-ow1 ih-ng l-iy\", \"rb\"],\n  \"unknown\": [\"ah-n n-ow1-n\", \"jj nn\"],\n  \"unlabeled\": [\"ah-n l-ey1 b-ah-l-d\", \"jj\"],\n  \"unlawful\": [\"ah-n l-ao1 f-ah-l\", \"jj\"],\n  \"unlawfully\": [\"ah-n l-ao1 f-ah l-iy\", \"rb\"],\n  \"unleaded\": [\"ah-n l-eh1 d-ah-d\", \"jj\"],\n  \"unleash\": [\"ah-n l-iy1-sh\", \"vb vbp\"],\n  \"unless\": [\"ah-n l-eh1-s\", \"in\"],\n  \"unlicensed\": [\"ah-n l-ay1 s-ah-n-s-t\", \"jj\"],\n  \"unlike\": [\"ah-n l-ay1-k\", \"in jj nn\"],\n  \"unlikely\": [\"ah-n l-ay1-k l-iy\", \"jj rb\"],\n  \"unlimited\": [\"ah-n l-ih1 m-ah t-ah-d\", \"jj\"],\n  \"unlined\": [\"ah-n l-ay1-n-d\", \"jj\"],\n  \"unlisted\": [\"ah-n l-ih1 s-t-ih-d\", \"jj\"],\n  \"unload\": [\"ah-n l-ow1-d\", \"vb vbp\"],\n  \"unloaded\": [\"ah-n l-ow1 d-ah-d\", \"vbn jj vbd\"],\n  \"unlock\": [\"ah-n l-aa1-k\", \"vb vbp\"],\n  \"unlocked\": [\"ah-n l-aa1-k-t\", \"vbd vbn jj\"],\n  \"unlucky\": [\"ah-n l-ah1 k-iy\", \"jj\"],\n  \"unmanageable\": [\"ah-n m-ae1 n-ih jh-ah b-ah-l\", \"jj\"],\n  \"unmanaged\": [\"ah-n m-ae1 n-ih-jh-d\", \"jj\"],\n  \"unmanned\": [\"ah-n m-ae1-n-d\", \"jj\"],\n  \"unmarked\": [\"ah-n m-aa1-r-k-t\", \"jj\"],\n  \"unmarried\": [\"ah-n m-eh1 r-iy-d\", \"jj\"],\n  \"unmask\": [\"ah-n m-ae1-s-k\", \"vb\"],\n  \"unmatched\": [\"ah-n m-ae1-ch-t\", \"jj\"],\n  \"unmentioned\": [\"ah-n m-eh1-n ch-ah-n-d\", \"jj\"],\n  \"unmet\": [\"ah-n m-eh1-t\", \"jj\"],\n  \"unmistakable\": [\"ah-n m-ih s-t-ey1 k-ah b-ah-l\", \"jj\"],\n  \"unmistakably\": [\"ah-n m-ih s-t-ey1 k-ah b-l-iy\", \"rb\"],\n  \"unmixed\": [\"ah-n m-ih1-k-s-t\", \"jj\"],\n  \"unmolested\": [\"ah-n m-ah l-eh1 s-t-ih-d\", \"jj\"],\n  \"unmoved\": [\"ah-n m-uw1-v-d\", \"jj\"],\n  \"unnamed\": [\"ah-n n-ey1-m-d\", \"jj\"],\n  \"unnatural\": [\"ah-n n-ae1 ch-er ah-l\", \"jj\"],\n  \"unnecessarily\": [\"ah-n n-eh1 s-ah s-eh r-ah l-iy\", \"rb\"],\n  \"unnecessary\": [\"ah-n n-eh1 s-ah s-eh r-iy\", \"jj\"],\n  \"unneeded\": [\"ah-n n-iy1 d-ih-d\", \"jj\"],\n  \"unnerve\": [\"ah-n-er1-v\", \"vb\"],\n  \"unnerved\": [\"ah-n n-er1-v-d\", \"vbd jj\"],\n  \"unnerving\": [\"ah-n er1 v-ih-ng\", \"vbg jj\"],\n  \"unnoticed\": [\"ah-n n-ow1 t-ih-s-t\", \"jj\"],\n  \"unobtainable\": [\"ah-n ah-b t-ey1 n-ah b-ah-l\", \"jj\"],\n  \"unobtrusive\": [\"ah-n ah-b t-r-uw1 s-ih-v\", \"jj\"],\n  \"unoccupied\": [\"ah-n aa1 k-y-ah p-ay-d\", \"jj\"],\n  \"unofficial\": [\"ah-n ah f-ih1 sh-ah-l\", \"jj\"],\n  \"unofficially\": [\"ah-n ah f-ih1 sh-ah l-iy\", \"rb\"],\n  \"unopened\": [\"ah-n ow1 p-ah-n-d\", \"jj\"],\n  \"unopposed\": [\"ah-n ah p-ow1-z-d\", \"jj\"],\n  \"unorganized\": [\"ah-n ao1-r g-ah n-ay-z-d\", \"jj\"],\n  \"unorthodox\": [\"ah n-ao1-r th-ah d-aa-k-s\", \"jj\"],\n  \"unpack\": [\"ah-n p-ae1-k\", \"vb\"],\n  \"unpaid\": [\"ah-n p-ey1-d\", \"jj\"],\n  \"unpalatable\": [\"ah-n p-ae1 l-ah t-ah b-ah-l\", \"jj\"],\n  \"unparalleled\": [\"ah-n p-eh1 r-ah l-eh-l-d\", \"jj\"],\n  \"unpatriotic\": [\"ah-n p-ey t-r-iy aa1 t-ih-k\", \"jj\"],\n  \"unperturbed\": [\"ah-n p-er t-er1-b-d\", \"jj\"],\n  \"unplanned\": [\"ah-n p-l-ae1-n-d\", \"jj\"],\n  \"unpleasant\": [\"ah-n p-l-eh1 z-ah-n-t\", \"jj\"],\n  \"unpleasantly\": [\"ah-n p-l-eh1 z-ah-n-t l-iy\", \"rb\"],\n  \"unpleasantness\": [\"ah-n p-l-eh1 z-ah-n-t n-ah-s\", \"nn\"],\n  \"unpopular\": [\"ah-n p-aa1 p-y-ah l-er\", \"jj\"],\n  \"unpopularity\": [\"ah-n p-aa p-y-ah l-eh1 r-ih t-iy\", \"nn\"],\n  \"unprecedented\": [\"ah-n p-r-eh1 s-ih d-eh-n t-ih-d\", \"jj\"],\n  \"unprecedentedly\": [\"ah-n p-r-eh1 s-ah d-eh-n t-ih-d l-iy\", \"rb\"],\n  \"unpredictability\": [\"ah-n p-r-ah d-ih-k t-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"unpredictable\": [\"ah-n p-r-ih d-ih1-k t-ah b-ah-l\", \"jj\"],\n  \"unpredictably\": [\"ah-n p-r-ih d-ih1-k t-ah b-l-iy\", \"rb\"],\n  \"unprepared\": [\"ah-n p-r-iy p-eh1-r-d\", \"jj\"],\n  \"unpretentious\": [\"ah-n p-r-iy t-eh1-n sh-ah-s\", \"jj\"],\n  \"unproductive\": [\"ah-n p-r-ah d-ah1-k t-ih-v\", \"jj\"],\n  \"unprofessional\": [\"ah-n p-r-ah f-eh1 sh-ah n-ah-l\", \"jj\"],\n  \"unprofitable\": [\"ah-n p-r-aa1 f-ih t-ah b-ah-l\", \"jj\"],\n  \"unpromising\": [\"ah-n p-r-ao1 m-ih s-ih-ng\", \"jj\"],\n  \"unprotected\": [\"ah-n p-r-ah t-eh1-k t-ih-d\", \"jj\"],\n  \"unproved\": [\"ah-n p-r-uw1-v-d\", \"jj\"],\n  \"unproven\": [\"ah-n p-r-uw1 v-ah-n\", \"jj\"],\n  \"unpublicized\": [\"ah-n p-ah1 b-l-ih s-ay-z-d\", \"jj\"],\n  \"unpublished\": [\"ah-n p-ah1 b-l-ih-sh-t\", \"jj\"],\n  \"unpunished\": [\"ah-n p-ah1 n-ih-sh-t\", \"jj\"],\n  \"unqualified\": [\"ah-n k-w-aa1 l-ih f-ay-d\", \"jj\"],\n  \"unquestionable\": [\"ah-n k-w-eh1-s ch-ah n-ah b-ah-l\", \"jj\"],\n  \"unquestionably\": [\"ah-n k-w-eh1-s ch-ah n-ah b-l-iy\", \"rb\"],\n  \"unquestioned\": [\"ah-n k-w-eh1-s ch-ah-n-d\", \"jj\"],\n  \"unravel\": [\"ah-n r-ae1 v-ah-l\", \"vb vbp\"],\n  \"unraveled\": [\"ah-n r-ae1 v-ah-l-d\", \"vbn jj vbd\"],\n  \"unraveling\": [\"ah-n r-ae1 v-ah-l ih-ng\", \"jj vbg\"],\n  \"unread\": [\"ah-n r-eh1-d\", \"jj\"],\n  \"unreadable\": [\"ah-n r-iy1 d-ah b-ah-l\", \"jj\"],\n  \"unreal\": [\"ah-n r-iy1-l\", \"jj\"],\n  \"unrealistic\": [\"ah-n r-iy l-ih1 s-t-ih-k\", \"jj\"],\n  \"unrealistically\": [\"ah-n r-iy ah l-ih1 s-t-ih-k l-iy\", \"rb\"],\n  \"unreality\": [\"ah-n r-iy ae1 l-ah t-iy\", \"nn\"],\n  \"unrealized\": [\"ah-n r-iy1 ah l-ay-z-d\", \"jj\"],\n  \"unreasonable\": [\"ah-n r-iy1-z n-ah b-ah-l\", \"jj\"],\n  \"unreasonably\": [\"ah-n r-iy1 z-ah-n ah b-l-iy\", \"rb\"],\n  \"unreasoning\": [\"ah-n r-iy1-z n-ih-ng\", \"jj\"],\n  \"unrecognizable\": [\"ah-n r-eh k-ah-g n-ay1 z-ah b-ah-l\", \"jj\"],\n  \"unrecognized\": [\"ah-n r-eh1 k-ah-g n-ay-z-d\", \"jj\"],\n  \"unreconstructed\": [\"ah-n r-iy k-ah-n s-t-r-ah1-k t-ih-d\", \"jj\"],\n  \"unredeemed\": [\"ah-n r-iy d-iy1-m-d\", \"jj\"],\n  \"unregistered\": [\"ah-n r-eh1 jh-ih s-t-er-d\", \"jj\"],\n  \"unregulated\": [\"ah-n r-eh1 g-y-ah l-ey t-ih-d\", \"jj\"],\n  \"unrelated\": [\"ah-n r-ih l-ey1 t-ih-d\", \"jj\"],\n  \"unreleased\": [\"ah-n r-ih l-iy1-s-t\", \"jj\"],\n  \"unrelenting\": [\"ah-n r-iy l-eh1-n t-ih-ng\", \"jj\"],\n  \"unreliability\": [\"ah-n r-iy l-ay ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"unreliable\": [\"ah-n r-ih l-ay1 ah b-ah-l\", \"jj\"],\n  \"unrelieved\": [\"ah-n r-iy l-iy1-v-d\", \"jj\"],\n  \"unremarkable\": [\"ah-n r-ih m-aa1-r k-ah b-ah-l\", \"jj\"],\n  \"unremitting\": [\"ah-n r-ih m-ih1 t-ih-ng\", \"jj\"],\n  \"unrepentant\": [\"ah-n r-ih p-eh1-n t-ah-n-t\", \"jj\"],\n  \"unreported\": [\"ah-n r-iy p-ao1-r t-ih-d\", \"jj\"],\n  \"unrequited\": [\"ah-n r-iy k-w-ay1 t-ih-d\", \"jj\"],\n  \"unresolved\": [\"ah-n r-ih z-aa1-l-v-d\", \"jj\"],\n  \"unresponsive\": [\"ah-n r-iy s-p-aa1-n s-ih-v\", \"jj\"],\n  \"unrest\": [\"ah-n r-eh1-s-t\", \"nn\"],\n  \"unrestrained\": [\"ah-n r-iy s-t-r-ey1-n-d\", \"jj\"],\n  \"unrestricted\": [\"ah-n r-iy s-t-r-ih1-k t-ih-d\", \"jj\"],\n  \"unrivaled\": [\"ah-n r-ay1 v-ah-l-d\", \"jj\"],\n  \"unruffled\": [\"ah-n r-ah1 f-ah-l-d\", \"jj\"],\n  \"unruly\": [\"ah-n r-uw1 l-iy\", \"jj\"],\n  \"unsafe\": [\"ah-n s-ey1-f\", \"jj\"],\n  \"unsaleable\": [\"ah-n s-ey1 l-ah b-ah-l\", \"jj\"],\n  \"unsanctioned\": [\"ah-n s-ae1-ng-k sh-ah-n-d\", \"jj\"],\n  \"unsatisfactory\": [\"ah-n s-ah t-ih-s f-ae1-k t-er iy\", \"jj\"],\n  \"unsatisfied\": [\"ah-n s-ae1 t-ih-s f-ay-d\", \"jj\"],\n  \"unsatisfying\": [\"ah-n s-ae1 t-ih-s f-ay ih-ng\", \"jj\"],\n  \"unsaturated\": [\"ah-n s-ae1 ch-er ey t-ih-d\", \"jj\"],\n  \"unsavory\": [\"ah-n s-ey1 v-er iy\", \"jj\"],\n  \"unscathed\": [\"ah-n s-k-ey1-dh-d\", \"jj\"],\n  \"unscheduled\": [\"ah-n s-k-eh1 jh-uw-l-d\", \"jj\"],\n  \"unscientific\": [\"ah-n s-ay ah-n t-ih1 f-ih-k\", \"jj\"],\n  \"unscramble\": [\"ah-n s-k-r-ae1-m b-ah-l\", \"vb\"],\n  \"unscrupulous\": [\"ah-n s-k-r-uw1 p-y-ah l-ah-s\", \"jj\"],\n  \"unseal\": [\"ah-n s-iy1-l\", \"vb\"],\n  \"unsealed\": [\"ah-n s-iy1-l-d\", \"vbn jj\"],\n  \"unseat\": [\"ah-n s-iy1-t\", \"vb\"],\n  \"unseated\": [\"ah-n s-iy1 t-ih-d\", \"jj vbd\"],\n  \"unsecured\": [\"ah-n s-ih k-y-uh1-r-d\", \"jj\"],\n  \"unseemly\": [\"ah-n s-iy1-m l-iy\", \"jj\"],\n  \"unseen\": [\"ah-n s-iy1-n\", \"jj\"],\n  \"unsentimental\": [\"ah-n s-eh-n t-ih m-eh1-n t-ah-l\", \"jj\"],\n  \"unsettle\": [\"ah-n-s-eh1-t-ah-l\", \"vb\"],\n  \"unsettled\": [\"ah-n s-eh1 t-ah-l-d\", \"jj vbd vbn\"],\n  \"unsettling\": [\"ah-n s-eh1 t-ah-l ih-ng\", \"jj vbg\"],\n  \"unshackled\": [\"ah-n sh-ae1 k-ah-l-d\", \"jj\"],\n  \"unshakable\": [\"ah-n sh-ey1 k-ah b-ah-l\", \"jj\"],\n  \"unsharpened\": [\"ah-n sh-aa1-r p-ah-n-d\", \"jj\"],\n  \"unshaven\": [\"ah-n sh-ey1 v-ah-n\", \"jj\"],\n  \"unsightly\": [\"ah-n s-ay1-t l-iy\", \"jj\"],\n  \"unsigned\": [\"ah-n s-ay1-n-d\", \"jj\"],\n  \"unskilled\": [\"ah-n s-k-ih1-l-d\", \"jj\"],\n  \"unsmiling\": [\"ah-n s-m-ay1 l-ih-ng\", \"jj\"],\n  \"unsold\": [\"ah-n s-ow1-l-d\", \"jj\"],\n  \"unsolicited\": [\"ah-n s-ah l-ih1 s-ih t-ih-d\", \"jj\"],\n  \"unsolved\": [\"ah-n s-aa1-l-v-d\", \"jj\"],\n  \"unsophisticated\": [\"ah-n s-ah f-ih1 s-t-ih k-ey t-ih-d\", \"jj\"],\n  \"unsound\": [\"ah-n s-aw1-n-d\", \"jj\"],\n  \"unspeakable\": [\"ah-n s-p-iy1 k-ah b-ah-l\", \"jj\"],\n  \"unspecified\": [\"ah-n s-p-eh1 s-ah f-ay-d\", \"jj\"],\n  \"unspectacular\": [\"ah-n s-p-eh-k t-ae1 k-y-ah l-er\", \"jj\"],\n  \"unspent\": [\"ah-n s-p-eh1-n-t\", \"jj\"],\n  \"unspoiled\": [\"ah-n s-p-oy1-l-d\", \"jj\"],\n  \"unspoken\": [\"ah-n s-p-ow1 k-ah-n\", \"jj\"],\n  \"unstable\": [\"ah-n s-t-ey1 b-ah-l\", \"jj\"],\n  \"unstated\": [\"ah-n s-t-ey1 t-ih-d\", \"jj\"],\n  \"unsteady\": [\"ah-n s-t-eh1 d-iy\", \"jj vb\"],\n  \"unstinting\": [\"ah-n s-t-ih1-n t-ih-ng\", \"jj\"],\n  \"unstoppable\": [\"ah-n s-t-aa1 p-ah b-ah-l\", \"jj\"],\n  \"unstructured\": [\"ah-n s-t-r-ah1-k sh-er-d\", \"jj\"],\n  \"unstuck\": [\"ah-n s-t-ah1-k\", \"jj\"],\n  \"unsubsidized\": [\"ah-n s-ah1-b s-ah d-ay-z-d\", \"jj\"],\n  \"unsubstantiated\": [\"ah-n s-ah-b s-t-ae1-n sh-iy ey t-ih-d\", \"jj\"],\n  \"unsubtle\": [\"ah-n s-ah1 t-ah-l\", \"jj\"],\n  \"unsuccessful\": [\"ah-n s-ah-k s-eh1-s f-ah-l\", \"jj\"],\n  \"unsuccessfully\": [\"ah-n s-ah-k s-eh1-s f-ah l-iy\", \"rb\"],\n  \"unsuitable\": [\"ah-n s-uw1 t-ah b-ah-l\", \"jj\"],\n  \"unsuited\": [\"ah-n s-uw1 t-ih-d\", \"jj\"],\n  \"unsung\": [\"ah-n s-ah1-ng\", \"jj\"],\n  \"unsupportable\": [\"ah-n s-ah p-ao1-r t-ah b-ah-l\", \"jj\"],\n  \"unsupported\": [\"ah-n s-ah p-ao1-r t-ih-d\", \"jj\"],\n  \"unsure\": [\"ah-n sh-uh1-r\", \"jj\"],\n  \"unsurpassed\": [\"ah-n s-er p-ae1-s-t\", \"jj\"],\n  \"unsurprising\": [\"ah-n s-er p-r-ay1 z-ih-ng\", \"jj\"],\n  \"unsuspected\": [\"ah-n s-ah s-p-eh1-k t-ih-d\", \"jj\"],\n  \"unsuspecting\": [\"ah-n s-ah s-p-eh1-k t-ih-ng\", \"jj\"],\n  \"unsustainable\": [\"ah-n s-ah s-t-ey1 n-ah b-ah-l\", \"jj\"],\n  \"unswerving\": [\"ah-n s-w-er1 v-ih-ng\", \"jj\"],\n  \"unsympathetic\": [\"ah-n s-ih-m p-ah th-eh1 t-ih-k\", \"jj\"],\n  \"untapped\": [\"ah-n t-ae1-p-t\", \"jj\"],\n  \"untenable\": [\"ah-n t-eh1 n-ah b-ah-l\", \"jj\"],\n  \"untested\": [\"ah-n t-eh1 s-t-ih-d\", \"jj\"],\n  \"unthinkable\": [\"ah-n th-ih1-ng k-ah b-ah-l\", \"jj nn\"],\n  \"unthinking\": [\"ah-n th-ih1-ng k-ih-ng\", \"jj\"],\n  \"unthinkingly\": [\"ah-n th-ih1-ng k-ih-ng l-iy\", \"rb\"],\n  \"untidy\": [\"ah-n t-ay1 d-iy\", \"jj\"],\n  \"untie\": [\"ah-n-t-ay1\", \"vb\"],\n  \"until\": [\"ah-n t-ih1-l\", \"in\"],\n  \"untimely\": [\"ah-n t-ay1-m l-iy\", \"jj\"],\n  \"unto\": [\"ah1-n t-uw\", \"in rp\"],\n  \"untold\": [\"ah-n t-ow1-l-d\", \"jj\"],\n  \"untouchable\": [\"ah-n t-ah1 ch-ah b-ah-l\", \"jj\"],\n  \"untouched\": [\"ah-n t-ah1-ch-t\", \"jj\"],\n  \"untoward\": [\"ah-n t-uw ao1-r-d\", \"jj\"],\n  \"untraditional\": [\"ah-n t-r-ah d-ih1 sh-ah n-ah-l\", \"jj\"],\n  \"untrained\": [\"ah-n t-r-ey1-n-d\", \"jj\"],\n  \"untrammeled\": [\"ah-n t-r-ae1 m-ah-l-d\", \"jj\"],\n  \"untreated\": [\"ah-n t-r-iy1 t-ih-d\", \"jj\"],\n  \"untried\": [\"ah-n t-r-ay1-d\", \"jj\"],\n  \"untrue\": [\"ah-n t-r-uw1\", \"jj\"],\n  \"untrustworthy\": [\"ah-n t-r-ah1-s-t w-er dh-iy\", \"jj\"],\n  \"unturned\": [\"ah-n t-er1-n-d\", \"jj\"],\n  \"unusable\": [\"ah-n y-uw1 z-ah b-ah-l\", \"jj\"],\n  \"unused\": [\"ah-n y-uw1-z-d\", \"jj\"],\n  \"unusual\": [\"ah n-y-uw1 zh-uw ah-l\", \"jj\"],\n  \"unusually\": [\"ah n-y-uw1 zh-uw ah-l-iy\", \"rb\"],\n  \"unveil\": [\"ah-n v-ey1-l\", \"vb\"],\n  \"unveiled\": [\"ah-n v-ey1-l-d\", \"vbd jj vbn\"],\n  \"unverifiable\": [\"ah-n v-eh r-ih f-ay1 ah b-ah-l\", \"jj\"],\n  \"unwanted\": [\"ah-n w-ao1-n t-ih-d\", \"jj\"],\n  \"unwarranted\": [\"ah-n w-ao1 r-ah-n t-ih-d\", \"jj\"],\n  \"unwary\": [\"ah-n w-eh1 r-iy\", \"jj\"],\n  \"unwashed\": [\"ah-n w-aa1-sh-t\", \"jj\"],\n  \"unwavering\": [\"ah-n w-ey1 v-er ih-ng\", \"jj\"],\n  \"unwed\": [\"ah-n w-eh1-d\", \"jj\"],\n  \"unwelcome\": [\"ah-n w-eh1-l k-ah-m\", \"jj\"],\n  \"unwieldy\": [\"ah-n w-iy1-l d-iy\", \"jj\"],\n  \"unwilling\": [\"ah-n w-ih1 l-ih-ng\", \"jj\"],\n  \"unwillingness\": [\"ah-n w-ih1 l-ih-ng n-ih-s\", \"nn\"],\n  \"unwind\": [\"ah-n w-ay1-n-d\", \"vb\"],\n  \"unwise\": [\"ah-n w-ay1-z\", \"jj\"],\n  \"unwisely\": [\"ah-n w-ay1-z l-iy\", \"rb\"],\n  \"unwitting\": [\"ah-n w-ih1 t-ih-ng\", \"jj\"],\n  \"unwittingly\": [\"ah-n w-ih1 t-ih-ng l-iy\", \"rb\"],\n  \"unworkable\": [\"ah-n w-er1 k-ah b-ah-l\", \"jj\"],\n  \"unworthy\": [\"ah-n w-er1 dh-iy\", \"jj nn\"],\n  \"unwritten\": [\"ah-n r-ih1 t-ah-n\", \"jj\"],\n  \"unyielding\": [\"ah-n y-iy1-l d-ih-ng\", \"jj\"],\n  \"up\": [\"ah1-p\", \"in\"],\n  \"upbeat\": [\"ah1-p b-iy-t\", \"jj nn\"],\n  \"upbringing\": [\"ah1-p b-r-ih ng-ih-ng\", \"nn\"],\n  \"upcoming\": [\"ah1-p k-ah m-ih-ng\", \"jj\"],\n  \"update\": [\"ah-p d-ey1-t\", \"vb vbp nn\"],\n  \"updated\": [\"ah-p d-ey1 t-ah-d\", \"vbn jj\"],\n  \"upgrade\": [\"ah-p g-r-ey1-d\", \"vb jj nn\"],\n  \"upgraded\": [\"ah-p g-r-ey1 d-ah-d\", \"vbn vbd jj\"],\n  \"upheaval\": [\"ah-p hh-iy1 v-ah-l\", \"nn\"],\n  \"upheld\": [\"ah-p hh-eh1-l-d\", \"vbd vbn\"],\n  \"uphill\": [\"ah1-p hh-ih1-l\", \"jj rb\"],\n  \"uphold\": [\"ah-p hh-ow1-l-d\", \"vb vbp\"],\n  \"upholster\": [\"ah-p-ow1-l-s-t-er\", \"vb\"],\n  \"upholstery\": [\"ah-p ow1-l s-t-er iy\", \"nn\"],\n  \"upkeep\": [\"ah1-p k-iy-p\", \"nn\"],\n  \"upland\": [\"ah1-p l-ah-n-d\", \"jj rb\"],\n  \"uplift\": [\"ah1-p l-ih-f-t\", \"nn vb\"],\n  \"uplifting\": [\"ah1-p l-ih-f t-ih-ng\", \"jj vbg\"],\n  \"upmarket\": [\"ah1-p m-aa-r k-ah-t\", \"jj\"],\n  \"upon\": [\"ah p-aa1-n\", \"in rb rp\"],\n  \"upped\": [\"ah1-p-t\", \"vbd vbn\"],\n  \"upper\": [\"ah1 p-er\", \"jj\"],\n  \"uppermost\": [\"ah1 p-er m-ow-s-t\", \"jjs jj rb\"],\n  \"upright\": [\"ah-p r-ay1-t\", \"rb jj\"],\n  \"uprising\": [\"ah p-r-ay1 z-ih-ng\", \"nn\"],\n  \"upriver\": [\"ah p-r-ih1 v-er\", \"jj\"],\n  \"uproar\": [\"ah1-p r-ao-r\", \"nn\"],\n  \"uproot\": [\"ah-p r-uw1-t\", \"vb\"],\n  \"uprooted\": [\"ah-p r-uw1 t-ih-d\", \"vbn vbd jj\"],\n  \"upscale\": [\"ah1-p s-k-ey-l\", \"jj nn rb\"],\n  \"upset\": [\"ah-p s-eh1-t\", \"vbn nn vb vbd vbp jj\"],\n  \"upsetting\": [\"ah-p s-eh1 t-ih-ng\", \"vbg jj nn\"],\n  \"upshot\": [\"ah1-p sh-aa-t\", \"nn\"],\n  \"upside\": [\"ah1-p s-ay1-d\", \"rb jj nn\"],\n  \"upstage\": [\"ah-p-s-t-ey1-jh\", \"vb\"],\n  \"upstairs\": [\"ah-p s-t-eh1-r-z\", \"nn rb jj\"],\n  \"upstanding\": [\"ah1-p s-t-ae-n d-ih-ng\", \"jj\"],\n  \"upstart\": [\"ah1-p s-t-aa-r-t\", \"nn jj\"],\n  \"upstate\": [\"ah1-p s-t-ey1-t\", \"jj rb\"],\n  \"upstream\": [\"ah1-p s-t-r-iy1-m\", \"rb jj\"],\n  \"upsurge\": [\"ah1-p s-er-jh\", \"nn\"],\n  \"upswing\": [\"ah-p s-w-ih1-ng\", \"nn\"],\n  \"uptick\": [\"ah1-p t-ih-k\", \"nn jj vb\"],\n  \"uptight\": [\"ah-p t-ay1-t\", \"jj\"],\n  \"uptown\": [\"ah1-p t-aw1-n\", \"nn jj\"],\n  \"uptrend\": [\"ah1-p t-r-eh-n-d\", \"nn\"],\n  \"upturn\": [\"ah-p t-er1-n\", \"nn\"],\n  \"upward\": [\"ah1-p w-er-d\", \"rb jj\"],\n  \"upwardly\": [\"ah1-p w-er-d l-iy\", \"rb\"],\n  \"uranium\": [\"y-er ey1 n-iy ah-m\", \"nn\"],\n  \"urban\": [\"er1 b-ah-n\", \"jj\"],\n  \"urbane\": [\"er b-ey1-n\", \"jj\"],\n  \"urbanization\": [\"er b-ah n-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"urbanize\": [\"er1-b-ah-n-ay-z\", \"vb\"],\n  \"urbanized\": [\"er1 b-ah n-ay-z-d\", \"vbn jj\"],\n  \"urea\": [\"y-er iy1 ah\", \"nn\"],\n  \"uremia\": [\"y-er iy1 m-iy ah\", \"nn\"],\n  \"urethane\": [\"y-er1 ah th-ey-n\", \"nn\"],\n  \"urge\": [\"er1-jh\", \"vb vbp nn\"],\n  \"urgency\": [\"er1 jh-ah-n s-iy\", \"nn\"],\n  \"urgent\": [\"er1 jh-ah-n-t\", \"jj\"],\n  \"urgently\": [\"er1 jh-ah-n-t l-iy\", \"rb\"],\n  \"urinary\": [\"y-er1 ah n-eh r-iy\", \"jj\"],\n  \"urine\": [\"y-er1 ah-n\", \"nn\"],\n  \"urn\": [\"er1-n\", \"nn\"],\n  \"us\": [\"ah1-s\", \"prp\"],\n  \"usable\": [\"y-uw1 z-ah b-ah-l\", \"jj\"],\n  \"usage\": [\"y-uw1 s-ah-jh\", \"nn\"],\n  \"use\": [\"y-uw1-s\", \"nn vb vbp\"],\n  \"used\": [\"y-uw1-z-d\", \"vbn vbd jj\"],\n  \"useful\": [\"y-uw1-s f-ah-l\", \"jj\"],\n  \"usefully\": [\"y-uw1-s f-ah l-iy\", \"rb\"],\n  \"usefulness\": [\"y-uw1-s f-ah-l n-ah-s\", \"nn\"],\n  \"useless\": [\"y-uw1-s l-ah-s\", \"jj\"],\n  \"user\": [\"y-uw1 z-er\", \"nn\"],\n  \"usher\": [\"ah1 sh-er\", \"nn vbp vb\"],\n  \"usual\": [\"y-uw1 zh-ah w-ah-l\", \"jj rb\"],\n  \"usually\": [\"y-uw1 zh-ah-w ah l-iy\", \"rb\"],\n  \"usurp\": [\"y-uw s-er1-p\", \"vb\"],\n  \"usurpation\": [\"y-uw s-er p-ey1 sh-ah-n\", \"nn\"],\n  \"utensil\": [\"y-uw t-eh1-n s-ah-l\", \"nn\"],\n  \"uterus\": [\"y-uw1 t-er ah-s\", \"nn\"],\n  \"utilitarian\": [\"y-uw t-ih l-ah t-eh1 r-iy ah-n\", \"jj\"],\n  \"utility\": [\"y-uw t-ih1 l-ah t-iy\", \"nn jj\"],\n  \"utilization\": [\"y-uw t-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"utilize\": [\"y-uw1 t-ah l-ay-z\", \"vb vbp\"],\n  \"utmost\": [\"ah1-t m-ow-s-t\", \"jj nn\"],\n  \"utopia\": [\"y-uw t-ow1 p-iy ah\", \"nn\"],\n  \"utopian\": [\"y-uw t-ow1 p-iy ah-n\", \"jj nn\"],\n  \"utter\": [\"ah1 t-er\", \"jj vbp vb\"],\n  \"utterance\": [\"ah1 t-er ah-n-s\", \"nn\"],\n  \"utterly\": [\"ah1 t-er l-iy\", \"rb\"],\n  \"vacancy\": [\"v-ey1 k-ah-n s-iy\", \"nn\"],\n  \"vacant\": [\"v-ey1 k-ah-n-t\", \"jj\"],\n  \"vacate\": [\"v-ey1 k-ey-t\", \"vb\"],\n  \"vacation\": [\"v-ey k-ey1 sh-ah-n\", \"nn vb\"],\n  \"vacationer\": [\"v-ey k-ey1 sh-ah-n er\", \"nn\"],\n  \"vaccination\": [\"v-ae-k s-ah n-ey1 sh-ah-n\", \"nn\"],\n  \"vaccine\": [\"v-ae-k s-iy1-n\", \"nn\"],\n  \"vaccinia\": [\"v-ah ch-iy1 n-iy ah\", \"nn\"],\n  \"vacillate\": [\"v-ae1 s-ah l-ey-t\", \"vb\"],\n  \"vacillation\": [\"v-ae s-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"vacuous\": [\"v-ae1 k-y-uw ah-s\", \"jj\"],\n  \"vacuum\": [\"v-ae1 k-y-uw-m\", \"nn jj vb vbp\"],\n  \"vagabond\": [\"v-ae1 g-ah b-aa-n-d\", \"nn\"],\n  \"vagary\": [\"v-ey1 g-er iy\", \"nn\"],\n  \"vagina\": [\"v-ah jh-ay1 n-ah\", \"nn\"],\n  \"vaginal\": [\"v-ah jh-ay1 n-ah-l\", \"jj\"],\n  \"vague\": [\"v-ey1-g\", \"jj\"],\n  \"vaguely\": [\"v-ey1-g l-iy\", \"rb\"],\n  \"vagueness\": [\"v-ey1-g n-ih-s\", \"nn\"],\n  \"vaguer\": [\"v-ey1 g-er\", \"jjr\"],\n  \"vaguest\": [\"v-ey1 g-ih-s-t\", \"jjs\"],\n  \"vain\": [\"v-ey1-n\", \"jj rb\"],\n  \"vainly\": [\"v-ey1-n l-iy\", \"rb\"],\n  \"valet\": [\"v-ae l-ey1\", \"nn\"],\n  \"valiant\": [\"v-ae1-l y-ah-n-t\", \"jj\"],\n  \"valiantly\": [\"v-ae1-l y-ah-n-t l-iy\", \"rb\"],\n  \"valid\": [\"v-ae1 l-ah-d\", \"jj\"],\n  \"validate\": [\"v-ae1 l-ah d-ey-t\", \"vb\"],\n  \"validation\": [\"v-ae l-ah d-ey1 sh-ah-n\", \"nn\"],\n  \"validity\": [\"v-ah l-ih1 d-ah t-iy\", \"nn\"],\n  \"validly\": [\"v-ae1 l-ih-d l-iy\", \"rb\"],\n  \"valley\": [\"v-ae1 l-iy\", \"nn\"],\n  \"valor\": [\"v-ae1 l-er\", \"nn\"],\n  \"valuable\": [\"v-ae1-l y-ah b-ah-l\", \"jj\"],\n  \"valuation\": [\"v-ae-l y-uw ey1 sh-ah-n\", \"nn\"],\n  \"value\": [\"v-ae1-l y-uw\", \"nn vbp vb\"],\n  \"valued\": [\"v-ae1-l y-uw-d\", \"vbn jj vbd\"],\n  \"valueless\": [\"v-ae1-l y-uw l-ah-s\", \"jj\"],\n  \"valve\": [\"v-ae1-l-v\", \"nn\"],\n  \"vampire\": [\"v-ae1-m p-ay-r\", \"nn\"],\n  \"van\": [\"v-ae1-n\", \"nn\"],\n  \"vandal\": [\"v-ae1-n d-ah-l\", \"nn\"],\n  \"vandalism\": [\"v-ae1-n d-ah l-ih z-ah-m\", \"nn\"],\n  \"vandalize\": [\"v-ae1-n-d-ah-l-ay-z\", \"vb\"],\n  \"vane\": [\"v-ey1-n\", \"nn\"],\n  \"vanguard\": [\"v-ae1-n g-aa-r-d\", \"nn\"],\n  \"vanilla\": [\"v-ah n-ih1 l-ah\", \"nn\"],\n  \"vanish\": [\"v-ae1 n-ih-sh\", \"vbp vb\"],\n  \"vanity\": [\"v-ae1 n-ah t-iy\", \"nn\"],\n  \"vantage\": [\"v-ae1-n t-ah-jh\", \"nn\"],\n  \"vapor\": [\"v-ey1 p-er\", \"nn\"],\n  \"vaporization\": [\"v-ey p-er ah z-ey1 sh-ah-n\", \"nn\"],\n  \"variability\": [\"v-eh r-iy ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"variable\": [\"v-eh1 r-iy ah b-ah-l\", \"jj nn\"],\n  \"variance\": [\"v-eh1 r-iy ah-n-s\", \"nn\"],\n  \"variant\": [\"v-eh1 r-iy ah-n-t\", \"nn jj\"],\n  \"variation\": [\"v-eh r-iy ey1 sh-ah-n\", \"nn\"],\n  \"varied\": [\"v-eh1 r-iy-d\", \"vbn vbd jj\"],\n  \"variety\": [\"v-er ay1 ah t-iy\", \"nn\"],\n  \"various\": [\"v-eh1 r-iy ah-s\", \"jj\"],\n  \"variously\": [\"v-eh1 r-iy ah-s l-iy\", \"rb\"],\n  \"varmint\": [\"v-aa1-r m-ih-n-t\", \"nn\"],\n  \"varnish\": [\"v-aa1-r n-ih-sh\", \"nn\"],\n  \"vary\": [\"v-eh1 r-iy\", \"vbp vb\"],\n  \"varying\": [\"v-eh1 r-iy ih-ng\", \"vbg jj\"],\n  \"vascular\": [\"v-ae1 s-k-y-ah l-er\", \"jj\"],\n  \"vase\": [\"v-ey1-s\", \"nn\"],\n  \"vassal\": [\"v-ae1 s-ah-l\", \"nn\"],\n  \"vast\": [\"v-ae1-s-t\", \"jj\"],\n  \"vastly\": [\"v-ae1-s-t l-iy\", \"rb\"],\n  \"vat\": [\"v-ae1-t\", \"nn\"],\n  \"vaudeville\": [\"v-aa1-d v-ih-l\", \"nn\"],\n  \"vault\": [\"v-ao1-l-t\", \"nn vb\"],\n  \"vaulting\": [\"v-ao1-l t-ih-ng\", \"jj vbg\"],\n  \"vaunt\": [\"v-ao1-n-t\", \"vb\"],\n  \"vaunted\": [\"v-ao1-n t-ih-d\", \"jj vbn\"],\n  \"veal\": [\"v-iy1-l\", \"nn\"],\n  \"vector\": [\"v-eh1-k t-er\", \"nn\"],\n  \"veer\": [\"v-ih1-r\", \"vb\"],\n  \"vegetable\": [\"v-eh1-jh t-ah b-ah-l\", \"nn\"],\n  \"vegetarian\": [\"v-eh jh-ah t-eh1 r-iy ah-n\", \"jj\"],\n  \"vegetation\": [\"v-eh jh-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"vehemence\": [\"v-iy1 ah m-ah-n-s\", \"nn\"],\n  \"vehement\": [\"v-iy1 ah m-ah-n-t\", \"jj\"],\n  \"vehemently\": [\"v-iy1 ah m-ah-n-t l-iy\", \"rb\"],\n  \"vehicle\": [\"v-iy1 hh-ih k-ah-l\", \"nn\"],\n  \"vehicular\": [\"v-iy hh-ih1 k-y-ah l-er\", \"jj\"],\n  \"veil\": [\"v-ey1-l\", \"nn vb\"],\n  \"veiled\": [\"v-ey1-l-d\", \"vbn jj\"],\n  \"veiling\": [\"v-ey1 l-ih-ng\", \"nn\"],\n  \"vein\": [\"v-ey1-n\", \"nn\"],\n  \"velocity\": [\"v-ah l-aa1 s-ah t-iy\", \"nn\"],\n  \"velvet\": [\"v-eh1-l v-ah-t\", \"nn\"],\n  \"velvety\": [\"v-eh1-l v-ah t-iy\", \"jj\"],\n  \"venal\": [\"v-iy1 n-ah-l\", \"jj\"],\n  \"vend\": [\"v-eh1-n-d\", \"vb\"],\n  \"vendetta\": [\"v-eh-n d-eh1 t-ah\", \"nn\"],\n  \"vending\": [\"v-eh1-n d-ih-ng\", \"vbg jj\"],\n  \"vendor\": [\"v-eh1-n d-er\", \"nn\"],\n  \"veneer\": [\"v-ah n-ih1-r\", \"nn\"],\n  \"venerable\": [\"v-eh1 n-er ah b-ah-l\", \"jj nn\"],\n  \"venerate\": [\"v-eh1-n-er-ey-t\", \"vb\"],\n  \"venereal\": [\"v-ah n-ih1 r-iy ah-l\", \"jj\"],\n  \"vengeance\": [\"v-eh1-n jh-ah-n-s\", \"nn\"],\n  \"venison\": [\"v-eh1 n-ah s-ah-n\", \"nn\"],\n  \"venom\": [\"v-eh1 n-ah-m\", \"nn\"],\n  \"venomous\": [\"v-eh1 n-ah m-ah-s\", \"jj\"],\n  \"vent\": [\"v-eh1-n-t\", \"nn vb\"],\n  \"ventilate\": [\"v-eh1-n-t-ih-l-ey-t\", \"vb\"],\n  \"ventilated\": [\"v-eh1-n t-ah l-ey t-ih-d\", \"vbd vbn jj\"],\n  \"ventilation\": [\"v-eh-n t-ah l-ey1 sh-ah-n\", \"nn\"],\n  \"ventilator\": [\"v-eh1-n t-ah l-ey t-er\", \"nn\"],\n  \"ventricular\": [\"v-eh-n t-r-ih1 k-y-uw l-er\", \"jj\"],\n  \"venture\": [\"v-eh1-n ch-er\", \"nn vbp jj vb\"],\n  \"venturesome\": [\"v-eh1-n ch-er s-ah-m\", \"jj\"],\n  \"venue\": [\"v-eh1 n-y-uw\", \"nn\"],\n  \"veracity\": [\"v-er ae1 s-ih t-iy\", \"nn\"],\n  \"veranda\": [\"v-er ae1-n d-ah\", \"nn\"],\n  \"verb\": [\"v-er1-b\", \"nn\"],\n  \"verbal\": [\"v-er1 b-ah-l\", \"jj\"],\n  \"verbally\": [\"v-er b-ae1 l-iy\", \"rb\"],\n  \"verbatim\": [\"v-er b-ey1 t-ah-m\", \"rb jj\"],\n  \"verbiage\": [\"v-er1 b-iy ih-jh\", \"nn\"],\n  \"verdant\": [\"v-er1 d-ah-n-t\", \"jj\"],\n  \"verdict\": [\"v-er1 d-ih-k-t\", \"nn\"],\n  \"verge\": [\"v-er1-jh\", \"nn\"],\n  \"verifiable\": [\"v-eh1 r-ah f-ay ah b-ah-l\", \"jj\"],\n  \"verification\": [\"v-eh r-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"verified\": [\"v-eh1 r-ah f-ay-d\", \"vbn\"],\n  \"verify\": [\"v-eh1 r-ah f-ay\", \"vb vbp\"],\n  \"verisimilitude\": [\"v-eh r-ah s-ah m-ih1 l-ah t-uw-d\", \"nn\"],\n  \"veritable\": [\"v-eh1 r-ih t-ah b-ah-l\", \"jj\"],\n  \"verity\": [\"v-eh1 r-ah t-iy\", \"nn\"],\n  \"vermilion\": [\"v-er m-ih1 l-y-ah-n\", \"jj nn\"],\n  \"vernacular\": [\"v-er n-ae1 k-y-ah l-er\", \"nn jj\"],\n  \"vernal\": [\"v-er1 n-ah-l\", \"jj\"],\n  \"versatile\": [\"v-er1 s-ah t-ah-l\", \"jj\"],\n  \"versatility\": [\"v-er s-ah t-ih1 l-ah t-iy\", \"nn\"],\n  \"verse\": [\"v-er1-s\", \"nn\"],\n  \"versed\": [\"v-er1-s-t\", \"jj\"],\n  \"version\": [\"v-er1 zh-ah-n\", \"nn\"],\n  \"versus\": [\"v-er1 s-ah-s\", \"in cc\"],\n  \"vertebral\": [\"v-er1 t-ah b-r-ah-l\", \"jj\"],\n  \"vertebrate\": [\"v-er1 t-ah b-r-ey-t\", \"nn\"],\n  \"vertex\": [\"v-er1 t-eh-k-s\", \"nn\"],\n  \"vertical\": [\"v-er1 t-ih k-ah-l\", \"jj nn\"],\n  \"vertically\": [\"v-er1 t-ih-k l-iy\", \"rb\"],\n  \"vertigo\": [\"v-er1 t-ih g-ow\", \"nn\"],\n  \"verve\": [\"v-er1-v\", \"nn\"],\n  \"very\": [\"v-eh1 r-iy\", \"rb jj\"],\n  \"vessel\": [\"v-eh1 s-ah-l\", \"nn\"],\n  \"vest\": [\"v-eh1-s-t\", \"nn vb\"],\n  \"vested\": [\"v-eh1 s-t-ah-d\", \"vbn jj\"],\n  \"vestige\": [\"v-eh1 s-t-ih-jh\", \"nn\"],\n  \"vet\": [\"v-eh1-t\", \"nn\"],\n  \"veteran\": [\"v-eh1 t-er ah-n\", \"nn jj\"],\n  \"veterinarian\": [\"v-eh t-r-ah n-eh1 r-iy ah-n\", \"nn\"],\n  \"veterinary\": [\"v-eh1 t-r-ah n-eh r-iy\", \"jj\"],\n  \"veto\": [\"v-iy1 t-ow\", \"nn vb\"],\n  \"vetted\": [\"v-eh1 t-ih-d\", \"vbn\"],\n  \"via\": [\"v-ay1 ah\", \"in\"],\n  \"viability\": [\"v-ay ah b-ih1 l-ah t-iy\", \"nn\"],\n  \"viable\": [\"v-ay1 ah b-ah-l\", \"jj\"],\n  \"viaduct\": [\"v-ay1 ah d-ah-k-t\", \"nn\"],\n  \"vial\": [\"v-ay1 ah-l\", \"nn\"],\n  \"vibe\": [\"v-ay1-b\", \"nn\"],\n  \"vibrancy\": [\"v-ay1 b-r-ah-n s-iy\", \"nn\"],\n  \"vibrant\": [\"v-ay1 b-r-ah-n-t\", \"jj\"],\n  \"vibrate\": [\"v-ay1 b-r-ey-t\", \"vb\"],\n  \"vibration\": [\"v-ay b-r-ey1 sh-ah-n\", \"nn\"],\n  \"vibrato\": [\"v-iy b-r-aa1 t-ow\", \"nn\"],\n  \"vicar\": [\"v-ih1 k-er\", \"nn\"],\n  \"vicarious\": [\"v-ay k-eh1 r-iy ah-s\", \"jj\"],\n  \"vicariously\": [\"v-ay k-eh1 r-iy ah-s l-iy\", \"rb\"],\n  \"vice\": [\"v-ay1-s\", \"nn jj rb\"],\n  \"vicinity\": [\"v-ah s-ih1 n-ah t-iy\", \"nn\"],\n  \"vicious\": [\"v-ih1 sh-ah-s\", \"jj\"],\n  \"viciously\": [\"v-ih1 sh-ah-s l-iy\", \"rb\"],\n  \"vicissitude\": [\"v-ih s-ih1 s-ih t-uw-d\", \"nn\"],\n  \"victim\": [\"v-ih1-k t-ah-m\", \"nn\"],\n  \"victimize\": [\"v-ih1-k-t-ah-m-ay-z\", \"vb\"],\n  \"victimized\": [\"v-ih1-k t-ah m-ay-z-d\", \"vbn jj\"],\n  \"victimless\": [\"v-ih1-k t-ah-m l-ah-s\", \"jj\"],\n  \"victor\": [\"v-ih1-k t-er\", \"nn\"],\n  \"victorious\": [\"v-ih-k t-ao1 r-iy ah-s\", \"jj\"],\n  \"victory\": [\"v-ih1-k t-er iy\", \"nn\"],\n  \"video\": [\"v-ih1 d-iy ow\", \"nn jj\"],\n  \"videocassette\": [\"v-ih1 d-iy ow k-ae s-eh-t\", \"nn\"],\n  \"videotape\": [\"v-ih1 d-iy ow t-ey1-p\", \"nn vb\"],\n  \"videotext\": [\"v-ih1 d-iy ow t-eh-k-s-t\", \"nn\"],\n  \"view\": [\"v-y-uw1\", \"nn vbp vb\"],\n  \"viewer\": [\"v-y-uw1 er\", \"nn\"],\n  \"viewership\": [\"v-y-uw1 er sh-ih-p\", \"nn\"],\n  \"viewpoint\": [\"v-y-uw1 p-oy-n-t\", \"nn\"],\n  \"vigil\": [\"v-ih1 jh-ah-l\", \"nn\"],\n  \"vigilance\": [\"v-ih1 jh-ah l-ah-n-s\", \"nn\"],\n  \"vigilant\": [\"v-ih1 jh-ah l-ah-n-t\", \"jj\"],\n  \"vigilante\": [\"v-ih jh-ah l-ae1-n t-ih\", \"nn\"],\n  \"vigilantism\": [\"v-ih jh-ah l-ae1-n t-ih z-ah-m\", \"nn\"],\n  \"vignette\": [\"v-ih-n y-eh1-t\", \"nn\"],\n  \"vigor\": [\"v-ih1 g-er\", \"nn\"],\n  \"vigorous\": [\"v-ih1 g-er ah-s\", \"jj\"],\n  \"vigorously\": [\"v-ih1 g-er ah-s l-iy\", \"rb\"],\n  \"vile\": [\"v-ay1-l\", \"jj\"],\n  \"vilification\": [\"v-ih l-ah f-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"vilified\": [\"v-ih1 l-ah f-ay-d\", \"vbn\"],\n  \"vilify\": [\"v-ih1-l-ih-f-ay\", \"vb\"],\n  \"villa\": [\"v-ih1 l-ah\", \"nn\"],\n  \"village\": [\"v-ih1 l-ah-jh\", \"nn\"],\n  \"villager\": [\"v-ih1 l-ih jh-er\", \"nn\"],\n  \"villain\": [\"v-ih1 l-ah-n\", \"nn\"],\n  \"villainous\": [\"v-ih1 l-ah n-ah-s\", \"jj\"],\n  \"vindicate\": [\"v-ih1-n d-ah k-ey-t\", \"vb\"],\n  \"vindication\": [\"v-ih-n d-ah k-ey1 sh-ah-n\", \"nn\"],\n  \"vindictive\": [\"v-ih-n d-ih1-k t-ih-v\", \"jj\"],\n  \"vine\": [\"v-ay1-n\", \"nn\"],\n  \"vinegar\": [\"v-ih1 n-ah g-er\", \"nn\"],\n  \"vineyard\": [\"v-ih1-n y-er-d\", \"nn\"],\n  \"vintage\": [\"v-ih1-n t-ih-jh\", \"jj nn\"],\n  \"vintner\": [\"v-ih1-n-t n-er\", \"nn\"],\n  \"vinyl\": [\"v-ay1 n-ah-l\", \"nn\"],\n  \"violate\": [\"v-ay1 ah l-ey-t\", \"vb vbp jj\"],\n  \"violation\": [\"v-ay ah l-ey1 sh-ah-n\", \"nn\"],\n  \"violator\": [\"v-ay1 ah l-ey t-er\", \"nn\"],\n  \"violence\": [\"v-ay1 ah l-ah-n-s\", \"nn\"],\n  \"violent\": [\"v-ay1 ah l-ah-n-t\", \"jj\"],\n  \"violently\": [\"v-ay1 ah l-ah-n-t l-iy\", \"rb\"],\n  \"violet\": [\"v-ay1 ah l-ih-t\", \"nn\"],\n  \"violin\": [\"v-ay ah l-ih1-n\", \"nn\"],\n  \"violinist\": [\"v-ay ah l-ih1 n-ah-s-t\", \"nn\"],\n  \"viper\": [\"v-ay1 p-er\", \"nn\"],\n  \"viral\": [\"v-ay1 r-ah-l\", \"jj\"],\n  \"virgin\": [\"v-er1 jh-ih-n\", \"jj nn\"],\n  \"virginity\": [\"v-er jh-ih1 n-ih t-iy\", \"nn\"],\n  \"virile\": [\"v-ih1 r-ah-l\", \"jj\"],\n  \"virility\": [\"v-er ih1 l-ah t-iy\", \"nn\"],\n  \"virtual\": [\"v-er1 ch-uw ah-l\", \"jj\"],\n  \"virtually\": [\"v-er1 ch-uw ah l-iy\", \"rb in jj\"],\n  \"virtue\": [\"v-er1 ch-uw\", \"nn\"],\n  \"virtuosity\": [\"v-er ch-uw aa1 s-ih t-iy\", \"nn\"],\n  \"virtuoso\": [\"v-er ch-uw ow1 s-ow\", \"jj nn\"],\n  \"virtuous\": [\"v-er1 ch-uw ah-s\", \"jj\"],\n  \"virulence\": [\"v-ih1 r-ah l-ah-n-s\", \"nn\"],\n  \"virulent\": [\"v-ih1 r-ah l-ah-n-t\", \"jj\"],\n  \"virus\": [\"v-ay1 r-ah-s\", \"nn\"],\n  \"visa\": [\"v-iy1 z-ah\", \"nn\"],\n  \"visage\": [\"v-ih1 z-ah-jh\", \"nn\"],\n  \"visceral\": [\"v-ih1 s-er ah-l\", \"jj\"],\n  \"viscosity\": [\"v-ih-s k-aa1 s-ah t-iy\", \"nn\"],\n  \"viscous\": [\"v-ih1-s k-ah-s\", \"jj\"],\n  \"vise\": [\"v-ay1-s\", \"nn\"],\n  \"visibility\": [\"v-ih z-ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"visible\": [\"v-ih1 z-ah b-ah-l\", \"jj\"],\n  \"visibly\": [\"v-ih1 z-ah b-l-iy\", \"rb\"],\n  \"vision\": [\"v-ih1 zh-ah-n\", \"nn\"],\n  \"visionary\": [\"v-ih1 zh-ah-n eh r-iy\", \"jj\"],\n  \"visit\": [\"v-ih1 z-ah-t\", \"nn vb vbp\"],\n  \"visitation\": [\"v-ih z-ah t-ey1 sh-ah-n\", \"nn\"],\n  \"visiting\": [\"v-ih1 z-ah t-ih-ng\", \"vbg jj\"],\n  \"visitor\": [\"v-ih1 z-ah t-er\", \"nn\"],\n  \"vista\": [\"v-ih1 s-t-ah\", \"nn\"],\n  \"visual\": [\"v-ih1 zh-ah w-ah-l\", \"jj\"],\n  \"visualization\": [\"v-ih zh-w-ah l-ah z-ey1 sh-ah-n\", \"nn\"],\n  \"visualize\": [\"v-ih1 zh-w-ah l-ay-z\", \"vb\"],\n  \"visually\": [\"v-ih1 zh-w-ah l-iy\", \"rb\"],\n  \"vital\": [\"v-ay1 t-ah-l\", \"jj\"],\n  \"vitality\": [\"v-ay t-ae1 l-ah t-iy\", \"nn\"],\n  \"vitally\": [\"v-ay1 t-ah l-iy\", \"rb\"],\n  \"vitamin\": [\"v-ay1 t-ah m-ah-n\", \"nn\"],\n  \"vitriol\": [\"v-ih1 t-r-iy ah-l\", \"nn\"],\n  \"vitriolic\": [\"v-ih t-r-iy aa1 l-ih-k\", \"jj\"],\n  \"vivacious\": [\"v-ah v-ey1 sh-ah-s\", \"jj\"],\n  \"vivid\": [\"v-ih1 v-ah-d\", \"jj\"],\n  \"vividly\": [\"v-ih1 v-ah-d l-iy\", \"rb\"],\n  \"vividness\": [\"v-ih1 v-ah-d n-ah-s\", \"nn\"],\n  \"vocabulary\": [\"v-ow k-ae1 b-y-ah l-eh r-iy\", \"nn\"],\n  \"vocal\": [\"v-ow1 k-ah-l\", \"jj nn\"],\n  \"vocalist\": [\"v-ow1 k-ah l-ih-s-t\", \"nn\"],\n  \"vocally\": [\"v-ow1 k-ah l-iy\", \"rb\"],\n  \"vocation\": [\"v-ow k-ey1 sh-ah-n\", \"nn\"],\n  \"vocational\": [\"v-ow k-ey1 sh-ah n-ah-l\", \"jj\"],\n  \"vociferous\": [\"v-ow s-ih1 f-er ah-s\", \"jj\"],\n  \"vociferously\": [\"v-ah s-ih1 f-er ah-s l-iy\", \"rb\"],\n  \"vodka\": [\"v-aa1-d k-ah\", \"nn\"],\n  \"vogue\": [\"v-ow1-g\", \"nn\"],\n  \"voice\": [\"v-oy1-s\", \"nn vbp vb\"],\n  \"voiced\": [\"v-oy1-s-t\", \"vbd jj vbn\"],\n  \"voiceless\": [\"v-oy1-s l-ah-s\", \"jj\"],\n  \"void\": [\"v-oy1-d\", \"nn jj vb\"],\n  \"volatile\": [\"v-aa1 l-ah t-ah-l\", \"jj\"],\n  \"volatility\": [\"v-aa l-ah t-ih1 l-ah t-iy\", \"nn\"],\n  \"volcanic\": [\"v-aa-l k-ae1 n-ih-k\", \"jj\"],\n  \"volcano\": [\"v-aa-l k-ey1 n-ow\", \"nn\"],\n  \"volition\": [\"v-ow l-ih1 sh-ah-n\", \"nn\"],\n  \"volley\": [\"v-aa1 l-iy\", \"nn\"],\n  \"volleyball\": [\"v-aa1 l-iy b-ao-l\", \"nn\"],\n  \"volt\": [\"v-ow1-l-t\", \"nn\"],\n  \"voltage\": [\"v-ow1-l t-ah-jh\", \"nn\"],\n  \"voluble\": [\"v-aa1 l-y-ah b-ah-l\", \"jj\"],\n  \"volume\": [\"v-aa1 l-y-uw-m\", \"nn\"],\n  \"voluminous\": [\"v-ah l-uw1 m-ah n-ah-s\", \"jj\"],\n  \"voluntarily\": [\"v-aa l-ah-n t-eh1 r-ah l-iy\", \"rb\"],\n  \"voluntary\": [\"v-aa1 l-ah-n t-eh r-iy\", \"jj\"],\n  \"volunteer\": [\"v-aa l-ah-n t-ih1-r\", \"nn vb vbp\"],\n  \"voluptuous\": [\"v-ah l-ah1-p ch-ah-w ah-s\", \"jj\"],\n  \"vomit\": [\"v-aa1 m-ah-t\", \"vb vbp\"],\n  \"voodoo\": [\"v-uw1 d-uw\", \"nn\"],\n  \"voracious\": [\"v-ao r-ey1 sh-ah-s\", \"jj\"],\n  \"vortex\": [\"v-ao1-r t-eh-k-s\", \"nn\"],\n  \"vote\": [\"v-ow1-t\", \"nn vb vbp\"],\n  \"voter\": [\"v-ow1 t-er\", \"nn\"],\n  \"voting\": [\"v-ow1 t-ih-ng\", \"nn jj vbg\"],\n  \"voucher\": [\"v-aw1 ch-er\", \"nn\"],\n  \"vow\": [\"v-aw1\", \"nn vb vbp\"],\n  \"vowel\": [\"v-aw1 ah-l\", \"nn jj\"],\n  \"voyage\": [\"v-oy1 ah-jh\", \"nn\"],\n  \"voyager\": [\"v-oy1 ah jh-er\", \"nn\"],\n  \"voyeurism\": [\"v-oy y-uw1 r-ih z-ah-m\", \"nn\"],\n  \"vulgar\": [\"v-ah1-l g-er\", \"jj\"],\n  \"vulnerability\": [\"v-ah-l n-er ah b-ih1 l-ih t-iy\", \"nn\"],\n  \"vulnerable\": [\"v-ah1-l n-er ah b-ah-l\", \"jj\"],\n  \"vulture\": [\"v-ah1-l ch-er\", \"nn\"],\n  \"wacky\": [\"w-ae1 k-iy\", \"jj\"],\n  \"wad\": [\"w-aa1-d\", \"nn vb\"],\n  \"wade\": [\"w-ey1-d\", \"vb\"],\n  \"wafer\": [\"w-ey1 f-er\", \"nn\"],\n  \"waffle\": [\"w-aa1 f-ah-l\", \"nn vb\"],\n  \"waffling\": [\"w-aa1 f-l-ih-ng\", \"vbg jj nn\"],\n  \"waft\": [\"w-aa1-f-t\", \"vb\"],\n  \"wag\": [\"w-ae1-g\", \"vb vbp\"],\n  \"wage\": [\"w-ey1-jh\", \"nn vb\"],\n  \"wager\": [\"w-ey1 jh-er\", \"nn vb\"],\n  \"waggle\": [\"w-ae1 g-ah-l\", \"vb\"],\n  \"wagon\": [\"w-ae1 g-ah-n\", \"nn\"],\n  \"waif\": [\"w-ey1-f\", \"nn\"],\n  \"wail\": [\"w-ey1-l\", \"nn vb\"],\n  \"waist\": [\"w-ey1-s-t\", \"nn\"],\n  \"wait\": [\"w-ey1-t\", \"vb vbp nn\"],\n  \"waiter\": [\"w-ey1 t-er\", \"nn\"],\n  \"waiting\": [\"w-ey1 t-ih-ng\", \"vbg jj\"],\n  \"waitress\": [\"w-ey1 t-r-ah-s\", \"nn\"],\n  \"waive\": [\"w-ey1-v\", \"vb\"],\n  \"waiver\": [\"w-ey1 v-er\", \"nn\"],\n  \"wake\": [\"w-ey1-k\", \"vbp vb\"],\n  \"waking\": [\"w-ey1 k-ih-ng\", \"vbg jj\"],\n  \"wale\": [\"w-ey1-l\", \"nn\"],\n  \"walk\": [\"w-ao1-k\", \"vb vbp nn\"],\n  \"walker\": [\"w-ao1 k-er\", \"nn\"],\n  \"walking\": [\"w-ao1 k-ih-ng\", \"vbg jj\"],\n  \"walkout\": [\"w-ao1-k aw-t\", \"nn\"],\n  \"walkway\": [\"w-ao1-k w-ey\", \"nn\"],\n  \"wall\": [\"w-ao1-l\", \"nn vbp vb\"],\n  \"wallboard\": [\"w-ao1-l b-ao-r-d\", \"nn\"],\n  \"walled\": [\"w-ao1-l-d\", \"jj vbn\"],\n  \"wallet\": [\"w-ao1 l-ah-t\", \"nn\"],\n  \"wallflower\": [\"w-ao1-l f-l-aw er\", \"nn\"],\n  \"wallop\": [\"w-aa1 l-ah-p\", \"nn vb\"],\n  \"walloping\": [\"w-ao1 l-ah p-ih-ng\", \"jj nn\"],\n  \"wallow\": [\"w-aa1 l-ow\", \"vb\"],\n  \"wallpaper\": [\"w-ao1-l p-ey p-er\", \"nn\"],\n  \"walnut\": [\"w-ao1-l n-ah-t\", \"nn\"],\n  \"walrus\": [\"w-ao1-l r-ah-s\", \"nn\"],\n  \"waltz\": [\"w-ao1-l-t-s\", \"nn vb\"],\n  \"wan\": [\"w-aa1-n\", \"jj\"],\n  \"wand\": [\"w-aa1-n-d\", \"nn\"],\n  \"wander\": [\"w-aa1-n d-er\", \"vb vbp\"],\n  \"wanderer\": [\"w-aa1-n d-er er\", \"nn\"],\n  \"wane\": [\"w-ey1-n\", \"vb vbp nn\"],\n  \"wangle\": [\"w-ae1-ng-g-ah-l\", \"vb\"],\n  \"want\": [\"w-aa1-n-t\", \"vbp vb nn\"],\n  \"wanted\": [\"w-aa1-n t-ah-d\", \"vbd jj vbn\"],\n  \"wanton\": [\"w-ao1-n t-ah-n\", \"jj\"],\n  \"war\": [\"w-ao1-r\", \"nn\"],\n  \"warble\": [\"w-ao1-r-b-ah-l\", \"vb\"],\n  \"ward\": [\"w-ao1-r-d\", \"nn vb\"],\n  \"warden\": [\"w-ao1-r d-ah-n\", \"nn\"],\n  \"wardrobe\": [\"w-ao1-r-d r-ow-b\", \"nn\"],\n  \"ware\": [\"w-eh1-r\", \"nn\"],\n  \"warehouse\": [\"w-eh1-r hh-aw-s\", \"nn vb\"],\n  \"warehousing\": [\"w-eh1-r hh-aw z-ih-ng\", \"nn\"],\n  \"warfare\": [\"w-ao1-r f-eh-r\", \"nn\"],\n  \"warhead\": [\"w-ao1-r hh-eh-d\", \"nn\"],\n  \"warily\": [\"w-eh1 r-ah l-iy\", \"rb\"],\n  \"wariness\": [\"w-eh1 r-iy n-ih-s\", \"nn\"],\n  \"warlike\": [\"w-ao1-r l-ay-k\", \"jj\"],\n  \"warlord\": [\"w-ao1-r l-ao-r-d\", \"nn\"],\n  \"warm\": [\"w-ao1-r-m\", \"jj vb\"],\n  \"warmer\": [\"w-ao1-r m-er\", \"jjr\"],\n  \"warmish\": [\"w-ao1-r m-ih-sh\", \"jj\"],\n  \"warmly\": [\"w-ao1-r-m l-iy\", \"rb\"],\n  \"warmth\": [\"w-ao1-r-m-th\", \"nn\"],\n  \"warmup\": [\"w-ao1-r m-ah-p\", \"nn\"],\n  \"warn\": [\"w-ao1-r-n\", \"vb vbp\"],\n  \"warning\": [\"w-ao1-r n-ih-ng\", \"nn vbg\"],\n  \"warningly\": [\"w-ao1-r n-ih-ng l-iy\", \"rb\"],\n  \"warp\": [\"w-ao1-r-p\", \"nn vb\"],\n  \"warped\": [\"w-ao1-r-p-t\", \"vbn jj\"],\n  \"warrant\": [\"w-ao1 r-ah-n-t\", \"nn vbp vb\"],\n  \"warranted\": [\"w-ao1 r-ah-n t-ih-d\", \"vbn jj vbd\"],\n  \"warrantless\": [\"w-ao1 r-ah-n-t l-ah-s\", \"jj\"],\n  \"warranty\": [\"w-ao1 r-ah-n t-iy\", \"nn\"],\n  \"warren\": [\"w-ao1 r-ah-n\", \"nn\"],\n  \"warrior\": [\"w-ao1 r-iy er\", \"nn\"],\n  \"warship\": [\"w-ao1-r sh-ih-p\", \"nn\"],\n  \"wart\": [\"w-ao1-r-t\", \"nn\"],\n  \"wartime\": [\"w-ao1-r t-ay-m\", \"nn\"],\n  \"wary\": [\"w-eh1 r-iy\", \"jj\"],\n  \"was\": [\"w-aa1-z\", \"vbd\"],\n  \"wasn't\": [\"w-aa1-z-ah-n-t\", \"vbd\"],\n  \"wash\": [\"w-aa1-sh\", \"nn vbp vb\"],\n  \"washable\": [\"w-aa1 sh-ah b-ah-l\", \"jj\"],\n  \"washbasin\": [\"w-aa1-sh b-ey s-ah-n\", \"nn\"],\n  \"washboard\": [\"w-aa1-sh b-ao-r-d\", \"nn\"],\n  \"washed\": [\"w-aa1-sh-t\", \"vbn vbd jj\"],\n  \"washer\": [\"w-aa1 sh-er\", \"nn\"],\n  \"washout\": [\"w-aa1-sh aw-t\", \"nn\"],\n  \"wasp\": [\"w-aa1-s-p\", \"nn\"],\n  \"waste\": [\"w-ey1-s-t\", \"nn vbp jj vb\"],\n  \"wastebasket\": [\"w-ey1-s-t b-ae s-k-ah-t\", \"nn\"],\n  \"wasted\": [\"w-ey1 s-t-ah-d\", \"vbn vbd jj\"],\n  \"wasteful\": [\"w-ey1-s-t f-ah-l\", \"jj\"],\n  \"wasteland\": [\"w-ey1-s-t l-ae-n-d\", \"nn\"],\n  \"wastepaper\": [\"w-ey1-s-t p-ey p-er\", \"nn\"],\n  \"wastewater\": [\"w-ey1-s-t w-ao t-er\", \"nn\"],\n  \"wasting\": [\"w-ey1 s-t-ih-ng\", \"vbg jj nn\"],\n  \"watch\": [\"w-aa1-ch\", \"vb jj nn vbp\"],\n  \"watchdog\": [\"w-aa1-ch d-ao-g\", \"nn jj\"],\n  \"watched\": [\"w-aa1-ch-t\", \"vbd vbn jj\"],\n  \"watcher\": [\"w-aa1 ch-er\", \"nn\"],\n  \"watchful\": [\"w-aa1-ch f-ah-l\", \"jj\"],\n  \"watchman\": [\"w-aa1-ch m-ah-n\", \"nn\"],\n  \"watchword\": [\"w-aa1-ch w-er-d\", \"nn\"],\n  \"water\": [\"w-ao1 t-er\", \"nn vb jj\"],\n  \"watercolor\": [\"w-ao1 t-er k-ah l-er\", \"nn\"],\n  \"waterfall\": [\"w-ao1 t-er f-ao-l\", \"nn\"],\n  \"waterfront\": [\"w-ao1 t-er f-r-ah-n-t\", \"nn\"],\n  \"waterlogged\": [\"w-ao1 t-er l-aa-g-d\", \"jj\"],\n  \"watermelon\": [\"w-ao1 t-er m-eh l-ah-n\", \"nn\"],\n  \"waterproof\": [\"w-ao1 t-er p-r-uw-f\", \"nn\"],\n  \"waterproofing\": [\"w-ao1 t-er p-r-uw f-ih-ng\", \"nn\"],\n  \"watershed\": [\"w-ao1 t-er sh-eh-d\", \"nn jj\"],\n  \"waterway\": [\"w-ao1 t-er w-ey\", \"nn\"],\n  \"waterworks\": [\"w-ao1 t-er w-er-k-s\", \"nn\"],\n  \"watery\": [\"w-ao1 t-er iy\", \"jj\"],\n  \"watt\": [\"w-aa1-t\", \"nn\"],\n  \"wattle\": [\"w-aa1 t-ah-l\", \"nn\"],\n  \"wave\": [\"w-ey1-v\", \"nn vb vbp\"],\n  \"wavelength\": [\"w-ey1-v l-eh-ng-th\", \"nn\"],\n  \"waver\": [\"w-ey1 v-er\", \"vbp nn vb\"],\n  \"wavy\": [\"w-ey1 v-iy\", \"jj\"],\n  \"wax\": [\"w-ae1-k-s\", \"nn vb\"],\n  \"waxed\": [\"w-ae1-k-s-t\", \"vbd jj vbn\"],\n  \"waxing\": [\"w-ae1-k s-ih-ng\", \"nn\"],\n  \"waxy\": [\"w-ae1-k s-iy\", \"jj\"],\n  \"way\": [\"w-ey1\", \"nn rb\"],\n  \"waylaid\": [\"w-ey1 l-ey-d\", \"vbn\"],\n  \"wayside\": [\"w-ey1 s-ay-d\", \"nn\"],\n  \"wayward\": [\"w-ey1 w-er-d\", \"jj\"],\n  \"we\": [\"w-iy1\", \"prp\"],\n  \"weak\": [\"w-iy1-k\", \"jj\"],\n  \"weaken\": [\"w-iy1 k-ah-n\", \"vb vbp\"],\n  \"weakened\": [\"w-iy1 k-ah-n-d\", \"vbn jj vbd\"],\n  \"weakening\": [\"w-iy1 k-ah n-ih-ng\", \"vbg jj\"],\n  \"weaker\": [\"w-iy1 k-er\", \"jjr rbr\"],\n  \"weakest\": [\"w-iy1 k-ah-s-t\", \"jjs\"],\n  \"weakly\": [\"w-iy1-k l-iy\", \"rb\"],\n  \"weakness\": [\"w-iy1-k n-ah-s\", \"nn\"],\n  \"wealth\": [\"w-eh1-l-th\", \"nn\"],\n  \"wealthier\": [\"w-eh1-l th-iy er\", \"jjr\"],\n  \"wealthiest\": [\"w-eh1-l th-iy ah-s-t\", \"jjs\"],\n  \"wealthy\": [\"w-eh1-l th-iy\", \"jj\"],\n  \"wean\": [\"w-iy1-n\", \"vb\"],\n  \"weapon\": [\"w-eh1 p-ah-n\", \"nn\"],\n  \"weaponry\": [\"w-eh1 p-ah-n r-iy\", \"nn\"],\n  \"wear\": [\"w-eh1-r\", \"vb jj nn vbp\"],\n  \"wearied\": [\"w-ih1 r-iy-d\", \"vbd\"],\n  \"wearily\": [\"w-eh1 r-ah l-iy\", \"rb\"],\n  \"weariness\": [\"w-ih1 r-iy n-ah-s\", \"nn\"],\n  \"wearisome\": [\"w-ih1 r-iy s-ah-m\", \"jj\"],\n  \"weary\": [\"w-ih1 r-iy\", \"jj vb\"],\n  \"weasel\": [\"w-iy1 z-ah-l\", \"nn\"],\n  \"weather\": [\"w-eh1 dh-er\", \"nn vb vbp\"],\n  \"weatherman\": [\"w-eh1 dh-er m-ae-n\", \"nn\"],\n  \"weatherproof\": [\"w-eh1 dh-er p-r-uw-f\", \"jj\"],\n  \"weave\": [\"w-iy1-v\", \"vb nn\"],\n  \"weaver\": [\"w-iy1 v-er\", \"nn\"],\n  \"web\": [\"w-eh1-b\", \"nn jj\"],\n  \"wed\": [\"w-eh1-d\", \"vbn vb\"],\n  \"wedded\": [\"w-eh1 d-ah-d\", \"vbn jj\"],\n  \"wedding\": [\"w-eh1 d-ih-ng\", \"nn\"],\n  \"wedge\": [\"w-eh1-jh\", \"nn vb\"],\n  \"wedlock\": [\"w-eh1-d l-aa-k\", \"nn\"],\n  \"wee\": [\"w-iy1\", \"jj prp\"],\n  \"weed\": [\"w-iy1-d\", \"nn vb\"],\n  \"week\": [\"w-iy1-k\", \"nn\"],\n  \"weekday\": [\"w-iy1-k d-ey\", \"nn jj\"],\n  \"weekend\": [\"w-iy1-k eh-n-d\", \"nn\"],\n  \"weeklong\": [\"w-iy1-k l-ao-ng\", \"jj nn\"],\n  \"weekly\": [\"w-iy1-k l-iy\", \"jj rb nn\"],\n  \"weep\": [\"w-iy1-p\", \"vb nn\"],\n  \"weevil\": [\"w-iy1 v-ah-l\", \"nn\"],\n  \"weigh\": [\"w-ey1\", \"vb vbp\"],\n  \"weight\": [\"w-ey1-t\", \"nn vb\"],\n  \"weighted\": [\"w-ey1 t-ih-d\", \"jj vbd vbn\"],\n  \"weighting\": [\"w-ey1 t-ih-ng\", \"nn\"],\n  \"weightlessness\": [\"w-ey1-t l-ah-s n-ah-s\", \"nn\"],\n  \"weighty\": [\"w-ey1 t-iy\", \"jj\"],\n  \"weir\": [\"w-iy1-r\", \"nn\"],\n  \"weird\": [\"w-ih1-r-d\", \"jj nn\"],\n  \"weirdest\": [\"w-ih1-r d-ah-s-t\", \"jjs\"],\n  \"weirdly\": [\"w-ih1-r-d l-iy\", \"rb\"],\n  \"weirdo\": [\"w-ih1-r d-ow\", \"nn\"],\n  \"welcome\": [\"w-eh1-l k-ah-m\", \"jj nn vb vbp\"],\n  \"welcoming\": [\"w-eh1-l k-ah m-ih-ng\", \"vbg jj\"],\n  \"weld\": [\"w-eh1-l-d\", \"vb nn\"],\n  \"welfare\": [\"w-eh1-l f-eh-r\", \"nn\"],\n  \"well\": [\"w-eh1-l\", \"rb vbp jj nn vb uh\"],\n  \"wellhead\": [\"w-eh1-l hh-eh-d\", \"nn\"],\n  \"wellness\": [\"w-eh1-l n-ah-s\", \"nn\"],\n  \"wellspring\": [\"w-eh1-l s-p-r-ih-ng\", \"nn\"],\n  \"welter\": [\"w-eh1-l t-er\", \"nn\"],\n  \"went\": [\"w-eh1-n-t\", \"vbd vbn\"],\n  \"wept\": [\"w-eh1-p-t\", \"vbd vbn\"],\n  \"were\": [\"w-er\", \"vbd\"],\n  \"weren't\": [\"w-er-ah-n-t\", \"vbd\"],\n  \"west\": [\"w-eh1-s-t\", \"nn jj rb jjs\"],\n  \"westbound\": [\"w-eh1-s-t b-aw-n-d\", \"jj\"],\n  \"westerly\": [\"w-eh1 s-t-er l-iy\", \"jj rb\"],\n  \"western\": [\"w-eh1 s-t-er-n\", \"jj\"],\n  \"westward\": [\"w-eh1-s-t w-er-d\", \"rb jj nn\"],\n  \"wet\": [\"w-eh1-t\", \"jj nn vbd vb vbp\"],\n  \"wetland\": [\"w-eh1-t l-ae-n-d\", \"nn\"],\n  \"wetness\": [\"w-eh1-t n-ah-s\", \"nn\"],\n  \"whack\": [\"w-ae1-k\", \"vb nn\"],\n  \"whale\": [\"w-ey1-l\", \"nn\"],\n  \"whaling\": [\"w-ey1 l-ih-ng\", \"nn\"],\n  \"whammy\": [\"w-ae1 m-iy\", \"nn\"],\n  \"wharf\": [\"w-ao1-r-f\", \"nn\"],\n  \"what\": [\"w-ah1-t\", \"wp wdt in\"],\n  \"whatever\": [\"w-ah-t eh1 v-er\", \"wdt rb wp\"],\n  \"whatsoever\": [\"w-ah-t s-ow eh1 v-er\", \"rb wp\"],\n  \"wheat\": [\"w-iy1-t\", \"nn jj\"],\n  \"wheel\": [\"w-iy1-l\", \"nn vb vbp\"],\n  \"wheelchair\": [\"w-iy1-l ch-eh-r\", \"nn\"],\n  \"wheeled\": [\"w-iy1-l-d\", \"vbd jj vbn\"],\n  \"wheeze\": [\"w-iy1-z\", \"vb nn\"],\n  \"wheezing\": [\"w-iy1 z-ih-ng\", \"vbg jj\"],\n  \"when\": [\"w-eh1-n\", \"wrb in\"],\n  \"whence\": [\"w-eh1-n-s\", \"wrb\"],\n  \"whenever\": [\"w-eh-n eh1 v-er\", \"wrb\"],\n  \"where\": [\"w-eh1-r\", \"wrb\"],\n  \"whereabouts\": [\"w-eh1 r-ah b-aw-t-s\", \"nn\"],\n  \"whereas\": [\"w-eh r-ae1-z\", \"in\"],\n  \"whereby\": [\"w-eh-r b-ay1\", \"wrb\"],\n  \"wherein\": [\"w-eh r-ih1-n\", \"wrb rb\"],\n  \"whereupon\": [\"w-eh1 r-ah p-aa1-n\", \"in\"],\n  \"wherever\": [\"w-eh r-eh1 v-er\", \"wrb\"],\n  \"wherewithal\": [\"w-eh1-r w-ih dh-ao-l\", \"nn jj\"],\n  \"whet\": [\"w-eh1-t\", \"vb\"],\n  \"whether\": [\"w-eh1 dh-er\", \"in cc\"],\n  \"which\": [\"w-ih1-ch\", \"wdt wp\"],\n  \"whichever\": [\"w-ih-ch eh1 v-er\", \"wdt\"],\n  \"whiff\": [\"w-ih1-f\", \"nn\"],\n  \"while\": [\"w-ay1-l\", \"in jj nn rb vb\"],\n  \"whim\": [\"w-ih1-m\", \"nn\"],\n  \"whimper\": [\"w-ih1-m p-er\", \"nn vb\"],\n  \"whimsical\": [\"w-ih1-m z-ih k-ah-l\", \"jj\"],\n  \"whimsy\": [\"w-ih1-m s-iy\", \"nn\"],\n  \"whine\": [\"w-ay1-n\", \"nn vb\"],\n  \"whip\": [\"w-ih1-p\", \"nn vb\"],\n  \"whiplash\": [\"w-ih1-p l-ae-sh\", \"nn\"],\n  \"whipped\": [\"w-ih1-p-t\", \"vbd vbn jj\"],\n  \"whipping\": [\"w-ih1 p-ih-ng\", \"vbg jj nn\"],\n  \"whirl\": [\"w-er1-l\", \"nn vb vbp\"],\n  \"whirling\": [\"w-er1 l-ih-ng\", \"vbg jj nn\"],\n  \"whirlpool\": [\"w-er1-l p-uw-l\", \"nn\"],\n  \"whirlwind\": [\"w-er1-l w-ih-n-d\", \"nn jj\"],\n  \"whisk\": [\"w-ih1-s-k\", \"vb\"],\n  \"whisker\": [\"w-ih1 s-k-er\", \"nn\"],\n  \"whiskey\": [\"w-ih1-s k-iy\", \"nn\"],\n  \"whisky\": [\"w-ih1-s k-iy\", \"nn\"],\n  \"whisper\": [\"w-ih1 s-p-er\", \"nn vb\"],\n  \"whispered\": [\"w-ih1 s-p-er-d\", \"vbd vbn jj\"],\n  \"whistle\": [\"w-ih1 s-ah-l\", \"nn vb vbp\"],\n  \"whistleblower\": [\"w-ih1 s-ah-l b-l-ow er\", \"nn\"],\n  \"white\": [\"w-ay1-t\", \"jj nn\"],\n  \"whitely\": [\"w-ay1-t l-iy\", \"rb\"],\n  \"whiteness\": [\"w-ay1-t n-ah-s\", \"nn\"],\n  \"whitetail\": [\"w-ay1-t t-ey-l\", \"nn\"],\n  \"whitewash\": [\"w-ay1-t w-aa-sh\", \"nn vb\"],\n  \"whitish\": [\"w-ay1 t-ih-sh\", \"jj\"],\n  \"whittle\": [\"w-ih1 t-ah-l\", \"vb vbp\"],\n  \"whiz\": [\"w-ih1-z\", \"nn vb uh\"],\n  \"who\": [\"hh-uw1\", \"wp nn\"],\n  \"whoever\": [\"hh-uw eh1 v-er\", \"wp\"],\n  \"whole\": [\"hh-ow1-l\", \"jj nn rp\"],\n  \"wholehearted\": [\"hh-ow1-l hh-aa-r t-ih-d\", \"jj\"],\n  \"wholeheartedly\": [\"hh-ow1-l hh-aa-r t-ih-d l-iy\", \"rb\"],\n  \"wholesale\": [\"hh-ow1-l s-ey-l\", \"jj nn vb\"],\n  \"wholesaler\": [\"hh-ow1-l s-ey l-er\", \"nn\"],\n  \"wholesome\": [\"hh-ow1-l s-ah-m\", \"jj\"],\n  \"wholly\": [\"hh-ow1 l-iy\", \"rb\"],\n  \"whom\": [\"hh-uw1-m\", \"wp\"],\n  \"whoop\": [\"w-uw1-p\", \"nn vb\"],\n  \"whoosh\": [\"w-uw1-sh\", \"vb vbp nn\"],\n  \"whopper\": [\"w-aa1 p-er\", \"nn\"],\n  \"whopping\": [\"w-aa1 p-ih-ng\", \"jj\"],\n  \"whore\": [\"hh-ao1-r\", \"nn\"],\n  \"whorl\": [\"w-er1-l\", \"nn\"],\n  \"whose\": [\"hh-uw1-z\", \"wp$\"],\n  \"whosoever\": [\"hh-uw s-ow eh1 v-er\", \"wp\"],\n  \"why\": [\"w-ay1\", \"wrb\"],\n  \"wick\": [\"w-ih1-k\", \"nn\"],\n  \"wicked\": [\"w-ih1 k-ah-d\", \"jj\"],\n  \"wickedly\": [\"w-ih1 k-ih-d l-iy\", \"rb\"],\n  \"wickedness\": [\"w-ih1 k-ah-d n-ah-s\", \"nn\"],\n  \"wicker\": [\"w-ih1 k-er\", \"nn\"],\n  \"wicket\": [\"w-ih1 k-ah-t\", \"nn\"],\n  \"wide\": [\"w-ay1-d\", \"jj rb\"],\n  \"widely\": [\"w-ay1-d l-iy\", \"rb\"],\n  \"widen\": [\"w-ay1 d-ah-n\", \"vb vbp\"],\n  \"wider\": [\"w-ay1 d-er\", \"jjr rbr\"],\n  \"widespread\": [\"w-ay1-d s-p-r-eh1-d\", \"jj\"],\n  \"widest\": [\"w-ay1 d-ah-s-t\", \"jjs\"],\n  \"widget\": [\"w-ih1 jh-ih-t\", \"nn\"],\n  \"widow\": [\"w-ih1 d-ow\", \"nn vb\"],\n  \"widowed\": [\"w-ih1 d-ow-d\", \"vbn jj\"],\n  \"widower\": [\"w-ih1 d-ow er\", \"nn\"],\n  \"width\": [\"w-ih1-d-th\", \"nn\"],\n  \"wield\": [\"w-iy1-l-d\", \"vb vbp\"],\n  \"wiener\": [\"w-iy1 n-er\", \"nn\"],\n  \"wife\": [\"w-ay1-f\", \"nn\"],\n  \"wig\": [\"w-ih1-g\", \"nn\"],\n  \"wiggle\": [\"w-ih1 g-ah-l\", \"nn jj vb vbp\"],\n  \"wild\": [\"w-ay1-l-d\", \"jj rb\"],\n  \"wildcat\": [\"w-ay1-l-d k-ae-t\", \"nn jj\"],\n  \"wildcatter\": [\"w-ay1-l-d k-ae t-er\", \"nn\"],\n  \"wilderness\": [\"w-ih1-l d-er n-ah-s\", \"nn\"],\n  \"wildest\": [\"w-ay1-l d-ih-s-t\", \"jjs\"],\n  \"wildflower\": [\"w-ay1-l-d f-l-aw-r\", \"nn\"],\n  \"wildlife\": [\"w-ay1-l-d l-ay-f\", \"nn\"],\n  \"wildly\": [\"w-ay1-l-d l-iy\", \"rb\"],\n  \"wildness\": [\"w-ay1-l-d n-ah-s\", \"nn\"],\n  \"wile\": [\"w-ay1-l\", \"nn\"],\n  \"will\": [\"w-ih1-l\", \"md vbp nn vb\"],\n  \"willful\": [\"w-ih1-l f-ah-l\", \"jj\"],\n  \"willfully\": [\"w-ih1-l f-ah l-iy\", \"rb\"],\n  \"william\": [\"w-ih1 l-y-ah-m\", \"nn\"],\n  \"willing\": [\"w-ih1 l-ih-ng\", \"jj vbg\"],\n  \"willingly\": [\"w-ih1 l-ih-ng l-iy\", \"rb\"],\n  \"willingness\": [\"w-ih1 l-ih-ng n-ah-s\", \"nn\"],\n  \"willow\": [\"w-ih1 l-ow\", \"nn\"],\n  \"willowy\": [\"w-ih1 l-ah-w iy\", \"jj\"],\n  \"willpower\": [\"w-ih1-l p-aw er\", \"nn\"],\n  \"willy\": [\"w-ih1 l-iy\", \"rb\"],\n  \"wilt\": [\"w-ih1-l-t\", \"vb\"],\n  \"wilted\": [\"w-ih1-l t-ih-d\", \"jj vbn\"],\n  \"wily\": [\"w-ay1 l-iy\", \"jj\"],\n  \"wimp\": [\"w-ih1-m-p\", \"nn vb\"],\n  \"win\": [\"w-ih1-n\", \"vb nn vbp\"],\n  \"wince\": [\"w-ih1-n-s\", \"nn vb\"],\n  \"wind\": [\"w-ay1-n-d\", \"nn vbp vb\"],\n  \"winded\": [\"w-ih1-n d-ih-d\", \"jj vbn\"],\n  \"winder\": [\"w-ih1-n d-er\", \"nn\"],\n  \"windfall\": [\"w-ih1-n-d f-ao-l\", \"nn\"],\n  \"winding\": [\"w-ay1-n d-ih-ng\", \"vbg jj nn\"],\n  \"windmill\": [\"w-ih1-n-d m-ih-l\", \"nn\"],\n  \"window\": [\"w-ih1-n d-ow\", \"nn\"],\n  \"windowless\": [\"w-ih1-n d-ow l-ah-s\", \"jj\"],\n  \"windowpane\": [\"w-ih1-n d-ow p-ey-n\", \"nn\"],\n  \"windshield\": [\"w-ih1-n-d sh-iy-l-d\", \"nn\"],\n  \"windstorm\": [\"w-ih1-n-d s-t-ao-r-m\", \"nn\"],\n  \"windswept\": [\"w-ih1-n s-w-eh-p-t\", \"jj\"],\n  \"windup\": [\"w-ay1-n d-ah-p\", \"nn\"],\n  \"windy\": [\"w-ih1-n d-iy\", \"jj\"],\n  \"wine\": [\"w-ay1-n\", \"nn jj\"],\n  \"winery\": [\"w-ay1 n-er iy\", \"nn\"],\n  \"wing\": [\"w-ih1-ng\", \"nn vb\"],\n  \"winged\": [\"w-ih1-ng-d\", \"vbd vbn jj\"],\n  \"winger\": [\"w-ih1 ng-er\", \"nn\"],\n  \"wingman\": [\"w-ih1-ng m-ah-n\", \"nn\"],\n  \"wink\": [\"w-ih1-ng-k\", \"nn vb\"],\n  \"winner\": [\"w-ih1 n-er\", \"nn\"],\n  \"winning\": [\"w-ih1 n-ih-ng\", \"vbg jj nn\"],\n  \"wino\": [\"w-iy1 n-ow\", \"nn\"],\n  \"winsome\": [\"w-ih1-n s-ah-m\", \"jj\"],\n  \"winter\": [\"w-ih1-n t-er\", \"nn vb\"],\n  \"wintertime\": [\"w-ih1-n t-er t-ay-m\", \"nn\"],\n  \"wintry\": [\"w-ih1-n t-r-iy\", \"jj\"],\n  \"wipe\": [\"w-ay1-p\", \"vb vbp\"],\n  \"wipeout\": [\"w-ay1-p aw-t\", \"nn\"],\n  \"wire\": [\"w-ay1 er\", \"nn vb\"],\n  \"wireless\": [\"w-ay1-r l-ih-s\", \"jj\"],\n  \"wireline\": [\"w-ay1-r l-ay-n\", \"jj\"],\n  \"wiretap\": [\"w-ay1 er t-ae-p\", \"nn\"],\n  \"wiry\": [\"w-ih1 r-iy\", \"jj\"],\n  \"wisdom\": [\"w-ih1-z d-ah-m\", \"nn\"],\n  \"wise\": [\"w-ay1-z\", \"jj\"],\n  \"wisecrack\": [\"w-ay1-z k-r-ae-k\", \"nn\"],\n  \"wisely\": [\"w-ay1-z l-iy\", \"rb\"],\n  \"wiser\": [\"w-ay1 z-er\", \"jjr rbr\"],\n  \"wisest\": [\"w-ay1 z-ah-s-t\", \"jjs\"],\n  \"wish\": [\"w-ih1-sh\", \"vbp nn vb\"],\n  \"wisher\": [\"w-ih1 sh-er\", \"nn\"],\n  \"wishful\": [\"w-ih1-sh f-ah-l\", \"jj\"],\n  \"wisp\": [\"w-ih1-s-p\", \"nn\"],\n  \"wispy\": [\"w-ih1 s-p-iy\", \"jj\"],\n  \"wistful\": [\"w-ih1-s-t f-ah-l\", \"jj\"],\n  \"wistfully\": [\"w-ih1-s-t f-ah l-iy\", \"rb\"],\n  \"wit\": [\"w-ih1-t\", \"nn\"],\n  \"witch\": [\"w-ih1-ch\", \"nn\"],\n  \"witchcraft\": [\"w-ih1-ch k-r-ae-f-t\", \"nn\"],\n  \"witching\": [\"w-ih1 ch-ih-ng\", \"jj nn\"],\n  \"with\": [\"w-ih1-dh\", \"in jj rb rp\"],\n  \"withdraw\": [\"w-ih-dh d-r-ao1\", \"vb vbp\"],\n  \"withdrawal\": [\"w-ih-dh d-r-ao1 ah-l\", \"nn\"],\n  \"withdrawn\": [\"w-ih-th d-r-ao1-n\", \"vbn\"],\n  \"withdrew\": [\"w-ih-th d-r-uw1\", \"vbd\"],\n  \"wither\": [\"w-ih1 dh-er\", \"vb vbp\"],\n  \"withered\": [\"w-ih1 dh-er-d\", \"jj vbn\"],\n  \"withering\": [\"w-ih1 dh-er ih-ng\", \"vbg jj\"],\n  \"withheld\": [\"w-ih-th hh-eh1-l-d\", \"vbn vbd\"],\n  \"withhold\": [\"w-ih-th hh-ow1-l-d\", \"vb vbp\"],\n  \"within\": [\"w-ih dh-ih1-n\", \"in rb\"],\n  \"without\": [\"w-ih th-aw1-t\", \"in\"],\n  \"withstand\": [\"w-ih-th s-t-ae1-n-d\", \"vb vbp\"],\n  \"withstood\": [\"w-ih-th s-t-uh1-d\", \"vbd vbn\"],\n  \"witness\": [\"w-ih1-t n-ah-s\", \"nn vb\"],\n  \"wittily\": [\"w-ih1 t-ah l-iy\", \"rb\"],\n  \"wittingly\": [\"w-ih1 t-ih-ng l-iy\", \"rb\"],\n  \"witty\": [\"w-ih1 t-iy\", \"jj\"],\n  \"wizard\": [\"w-ih1 z-er-d\", \"nn\"],\n  \"wobble\": [\"w-aa1 b-ah-l\", \"vb nn\"],\n  \"wobbly\": [\"w-aa1 b-ah-l iy\", \"jj\"],\n  \"woe\": [\"w-ow1\", \"nn\"],\n  \"woeful\": [\"w-ow1 f-ah-l\", \"jj\"],\n  \"woefully\": [\"w-ow1 f-ah l-iy\", \"rb\"],\n  \"woke\": [\"w-ow1-k\", \"vbd\"],\n  \"woken\": [\"w-ow1 k-ah-n\", \"vbn\"],\n  \"wolf\": [\"w-uh1-l-f\", \"nn\"],\n  \"woman\": [\"w-uh1 m-ah-n\", \"nn\"],\n  \"women\": [\"w-ih1 m-eh-n\", \"nns\"],\n  \"womanhood\": [\"w-uh1 m-ah-n hh-uh-d\", \"nn\"],\n  \"womanize\": [\"w-uh1-m-ah-n-ay-z\", \"vb\"],\n  \"womb\": [\"w-uw1-m\", \"nn\"],\n  \"won\": [\"w-ah1-n\", \"vbd nn vbn\"],\n  \"wonder\": [\"w-ah1-n d-er\", \"nn vbp jj vb\"],\n  \"wonderful\": [\"w-ah1-n d-er f-ah-l\", \"jj\"],\n  \"wonderfully\": [\"w-ah1-n d-er f-ah l-iy\", \"rb\"],\n  \"wonderfulness\": [\"w-ah1-n d-er f-ah-l n-ah-s\", \"nn\"],\n  \"wonderland\": [\"w-ah1-n d-er l-ae-n-d\", \"nn\"],\n  \"wondrous\": [\"w-ah1-n d-r-ah-s\", \"jj\"],\n  \"won't\": [\"w-ow1-n-t\", \"vbp\"],\n  \"woo\": [\"w-uw1\", \"vb vbp\"],\n  \"wood\": [\"w-uh1-d\", \"nn\"],\n  \"wooded\": [\"w-uh1 d-ih-d\", \"jj\"],\n  \"wooden\": [\"w-uh1 d-ah-n\", \"jj\"],\n  \"woodland\": [\"w-uh1-d l-ae-n-d\", \"jj\"],\n  \"woodpecker\": [\"w-uh1-d p-eh k-er\", \"nn\"],\n  \"woodwind\": [\"w-uh1-d w-ih-n-d\", \"nn\"],\n  \"woodwork\": [\"w-uh1-d w-er-k\", \"nn\"],\n  \"woodworking\": [\"w-uh1-d w-er k-ih-ng\", \"nn\"],\n  \"woof\": [\"w-uw1-f\", \"nn\"],\n  \"wool\": [\"w-uh1-l\", \"nn\"],\n  \"woolen\": [\"w-uh1 l-ah-n\", \"jj\"],\n  \"woolly\": [\"w-uh1 l-iy\", \"jj\"],\n  \"woozy\": [\"w-uw1 z-iy\", \"jj\"],\n  \"word\": [\"w-er1-d\", \"nn vb\"],\n  \"worded\": [\"w-er1 d-ih-d\", \"vbn jj vbd\"],\n  \"wording\": [\"w-er1 d-ih-ng\", \"nn\"],\n  \"wore\": [\"w-ao1-r\", \"vbd\"],\n  \"work\": [\"w-er1-k\", \"nn vb vbp\"],\n  \"workable\": [\"w-er1 k-ah b-ah-l\", \"jj\"],\n  \"workaholic\": [\"w-er1 k-ah hh-aa1 l-ih-k\", \"nn jj\"],\n  \"workbench\": [\"w-er1-k b-eh-n-ch\", \"nn\"],\n  \"workday\": [\"w-er1-k d-ey\", \"nn\"],\n  \"worker\": [\"w-er1 k-er\", \"nn\"],\n  \"workforce\": [\"w-er1-k f-ao-r-s\", \"nn\"],\n  \"workhorse\": [\"w-er1-k hh-ao-r-s\", \"nn\"],\n  \"working\": [\"w-er1 k-ih-ng\", \"vbg jj nn\"],\n  \"workload\": [\"w-er1-k l-ow-d\", \"nn\"],\n  \"workman\": [\"w-er1-k m-ah-n\", \"nn\"],\n  \"workmanlike\": [\"w-er1-k m-ae-n l-ay-k\", \"jj\"],\n  \"workmanship\": [\"w-er1-k m-ah-n sh-ih-p\", \"nn\"],\n  \"workout\": [\"w-er1-k aw-t\", \"nn\"],\n  \"workplace\": [\"w-er1-k p-l-ey-s\", \"nn jj\"],\n  \"workroom\": [\"w-er1-k r-uw-m\", \"nn\"],\n  \"worksheet\": [\"w-er1-k sh-iy-t\", \"nn\"],\n  \"workshop\": [\"w-er1-k sh-aa-p\", \"nn\"],\n  \"workstation\": [\"w-er1-k s-t-ey sh-ah-n\", \"nn\"],\n  \"workweek\": [\"w-er1-k w-iy-k\", \"nn\"],\n  \"world\": [\"w-er1-l-d\", \"nn rb\"],\n  \"worldly\": [\"w-er1-l-d l-iy\", \"jj\"],\n  \"worldwide\": [\"w-er1-l-d w-ay1-d\", \"jj rb\"],\n  \"worm\": [\"w-er1-m\", \"nn\"],\n  \"worn\": [\"w-ao1-r-n\", \"vbn jj\"],\n  \"worried\": [\"w-er1 iy-d\", \"vbn vbd jj\"],\n  \"worrier\": [\"w-er1 iy er\", \"nn\"],\n  \"worrisome\": [\"w-er1 iy s-ah-m\", \"jj\"],\n  \"worry\": [\"w-er1 iy\", \"vb nn vbp\"],\n  \"worrying\": [\"w-er1 iy ih-ng\", \"vbg jj\"],\n  \"worse\": [\"w-er1-s\", \"jj\"],\n  \"worsen\": [\"w-er1 s-ah-n\", \"vb\"],\n  \"worsening\": [\"w-er1 s-ah-n ih-ng\", \"vbg jj\"],\n  \"worship\": [\"w-er1 sh-ah-p\", \"nn vb vbp\"],\n  \"worshipful\": [\"w-er1 sh-ah-p f-ah-l\", \"jj\"],\n  \"worshipper\": [\"w-er1 sh-ih p-er\", \"nn\"],\n  \"worst\": [\"w-er1-s-t\", \"jjs rbs jj\"],\n  \"worsted\": [\"w-er1 s-t-ih-d\", \"jj nn\"],\n  \"worth\": [\"w-er1-th\", \"jj in nn rb vbn\"],\n  \"worthier\": [\"w-er1 dh-iy er\", \"jjr\"],\n  \"worthiest\": [\"w-er1 dh-iy ah-s-t\", \"jjs\"],\n  \"worthiness\": [\"w-er1 dh-iy n-ih-s\", \"nn\"],\n  \"worthless\": [\"w-er1-th l-ah-s\", \"jj\"],\n  \"worthwhile\": [\"w-er1-th w-ay1-l\", \"jj\"],\n  \"worthy\": [\"w-er1 dh-iy\", \"jj\"],\n  \"would\": [\"w-uh1-d\", \"md vbd\"],\n  \"wouldn't\": [\"w-uh1-d-ah-n-t\", \"md\"],\n  \"wound\": [\"w-aw1-n-d\", \"nn vbd vbn vb\"],\n  \"wounded\": [\"w-uw1-n d-ah-d\", \"vbn jj\"],\n  \"wove\": [\"w-ow1-v\", \"vbd\"],\n  \"woven\": [\"w-ow1 v-ah-n\", \"vbn jj\"],\n  \"wow\": [\"w-aw1\", \"vb\"],\n  \"wrack\": [\"r-ae1-k\", \"vb vbp\"],\n  \"wrangle\": [\"r-ae1-ng-g-ah-l\", \"vb\"],\n  \"wrangler\": [\"r-ae1-ng g-ah l-er\", \"nn\"],\n  \"wrap\": [\"r-ae1-p\", \"vb nn vbp\"],\n  \"wrapper\": [\"r-ae1 p-er\", \"nn\"],\n  \"wrath\": [\"r-ae1-th\", \"nn\"],\n  \"wreak\": [\"r-iy1-k\", \"vb\"],\n  \"wreath\": [\"r-iy1-th\", \"nn\"],\n  \"wreck\": [\"r-eh1-k\", \"nn vb\"],\n  \"wreckage\": [\"r-eh1 k-ah-jh\", \"nn\"],\n  \"wrecked\": [\"r-eh1-k-t\", \"vbd jj vbn\"],\n  \"wrecker\": [\"r-eh1 k-er\", \"nn\"],\n  \"wrench\": [\"r-eh1-n-ch\", \"vb nn\"],\n  \"wrenching\": [\"r-eh1-n ch-ih-ng\", \"jj vbg\"],\n  \"wrest\": [\"r-eh1-s-t\", \"vb\"],\n  \"wrestle\": [\"r-eh1 s-ah-l\", \"vb\"],\n  \"wrestler\": [\"r-eh1 s-ah l-er\", \"nn\"],\n  \"wretched\": [\"r-eh1 ch-ih-d\", \"jj\"],\n  \"wring\": [\"r-ih1-ng\", \"vb\"],\n  \"wrinkle\": [\"r-ih1-ng k-ah-l\", \"nn vb\"],\n  \"wrinkled\": [\"r-ih1-ng k-ah-l-d\", \"jj vbd vbn\"],\n  \"wrist\": [\"r-ih1-s-t\", \"nn\"],\n  \"wristwatch\": [\"r-ih1-s-t w-aa-ch\", \"nn\"],\n  \"writ\": [\"r-ih1-t\", \"nn vbn\"],\n  \"write\": [\"r-ay1-t\", \"vb vbp\"],\n  \"writedown\": [\"r-ay1-t d-aw-n\", \"nn\"],\n  \"writeoff\": [\"r-ay1 t-ao-f\", \"nn\"],\n  \"writer\": [\"r-ay1 t-er\", \"nn\"],\n  \"writhe\": [\"r-ih1-th\", \"vb\"],\n  \"writhing\": [\"r-ay1 dh-ih-ng\", \"vbg jj nn\"],\n  \"written\": [\"r-ih1 t-ah-n\", \"vbn jj\"],\n  \"wrong\": [\"r-ao1-ng\", \"jj nn rb vb\"],\n  \"wrongdoer\": [\"r-ao1-ng d-uw1 er\", \"nn\"],\n  \"wrongdoing\": [\"r-ao1-ng d-uw ih-ng\", \"nn\"],\n  \"wronged\": [\"r-ao1-ng-d\", \"vbn jj\"],\n  \"wrongful\": [\"r-ao1-ng f-ah-l\", \"jj\"],\n  \"wrongfully\": [\"r-ao1-ng f-ah l-iy\", \"rb\"],\n  \"wrongly\": [\"r-ao1-ng l-iy\", \"rb\"],\n  \"wrote\": [\"r-ow1-t\", \"vbd\"],\n  \"wrought\": [\"r-ao1-t\", \"vbn vbd jj\"],\n  \"wrung\": [\"r-ah1-ng\", \"vbd vbn\"],\n  \"wry\": [\"r-ay1\", \"jj\"],\n  \"wryly\": [\"r-ay1 l-iy\", \"rb\"],\n  \"xenon\": [\"z-iy1 n-aa-n\", \"nn\"],\n  \"xenophobia\": [\"z-eh n-ah f-ow1 b-iy ah\", \"nn\"],\n  \"xenophobic\": [\"z-eh n-ah f-aa1 b-ih-k\", \"jj\"],\n  \"yacht\": [\"y-aa1-t\", \"nn\"],\n  \"yachting\": [\"y-aa1 t-ih-ng\", \"nn\"],\n  \"yachtsman\": [\"y-aa1-t-s m-ah-n\", \"nn\"],\n  \"yank\": [\"y-ae1-ng-k\", \"vb\"],\n  \"yard\": [\"y-aa1-r-d\", \"nn\"],\n  \"yardage\": [\"y-aa1-r d-ih-jh\", \"nn\"],\n  \"yardstick\": [\"y-aa1-r-d s-t-ih-k\", \"nn\"],\n  \"yarn\": [\"y-aa1-r-n\", \"nn\"],\n  \"yawn\": [\"y-ao1-n\", \"nn vb\"],\n  \"yawning\": [\"y-ao1 n-ih-ng\", \"vbg jj\"],\n  \"yeah\": [\"y-ae1\", \"uh nn\"],\n  \"year\": [\"y-ih1-r\", \"nn jj\"],\n  \"yearbook\": [\"y-ih1-r b-uh-k\", \"nn\"],\n  \"yearling\": [\"y-er1 l-ih-ng\", \"jj\"],\n  \"yearly\": [\"y-ih1-r l-iy\", \"jj rb\"],\n  \"yearn\": [\"y-er1-n\", \"vb vbp nn\"],\n  \"yearning\": [\"y-er1 n-ih-ng\", \"nn vbg\"],\n  \"yeast\": [\"y-iy1-s-t\", \"nn\"],\n  \"yell\": [\"y-eh1-l\", \"nn vb\"],\n  \"yellow\": [\"y-eh1 l-ow\", \"jj nn vb\"],\n  \"yellowish\": [\"y-eh1 l-ow ih-sh\", \"jj\"],\n  \"yes\": [\"y-eh1-s\", \"uh rb\"],\n  \"yesterday\": [\"y-eh1 s-t-er d-ey\", \"nn rb\"],\n  \"yet\": [\"y-eh1-t\", \"rb cc\"],\n  \"yield\": [\"y-iy1-l-d\", \"vb vbp\"],\n  \"yielding\": [\"y-iy1-l d-ih-ng\", \"vbg jj nn\"],\n  \"yodel\": [\"y-ow1 d-ah-l\", \"nn vb\"],\n  \"yoga\": [\"y-ow1 g-ah\", \"nn\"],\n  \"yogurt\": [\"y-ow1 g-er-t\", \"nn\"],\n  \"yoke\": [\"y-ow1-k\", \"nn\"],\n  \"yolk\": [\"y-ow1-k\", \"nn\"],\n  \"yonder\": [\"y-aa1-n d-er\", \"nn\"],\n  \"you\": [\"y-uw1\", \"prp rp\"],\n  \"young\": [\"y-ah1-ng\", \"jj\"],\n  \"younger\": [\"y-ah1-ng g-er\", \"jjr\"],\n  \"youngest\": [\"y-ah1-ng g-ah-s-t\", \"jjs\"],\n  \"youngster\": [\"y-ah1-ng s-t-er\", \"nn\"],\n  \"your\": [\"y-ao1-r\", \"prp$\"],\n  \"yours\": [\"y-uh1-r-z\", \"prp jj\"],\n  \"yourself\": [\"y-er s-eh1-l-f\", \"prp\"],\n  \"yourselves\": [\"y-uh-r s-eh1-l-v-z\", \"prp\"],\n  \"youth\": [\"y-uw1-th\", \"nn\"],\n  \"youthful\": [\"y-uw1-th f-ah-l\", \"jj\"],\n  \"yoyo\": [\"y-ow1 y-ow\", \"nn\"],\n  \"yummy\": [\"y-ah1 m-iy\", \"jj nn\"],\n  \"yuppie\": [\"y-ah1 p-iy\", \"nn\"],\n  \"zany\": [\"z-ey1 n-iy\", \"jj\"],\n  \"zap\": [\"z-ae1-p\", \"vb vbp\"],\n  \"zeal\": [\"z-iy1-l\", \"nn\"],\n  \"zealot\": [\"z-eh1 l-ah-t\", \"nn\"],\n  \"zealous\": [\"z-eh1 l-ah-s\", \"jj\"],\n  \"zealously\": [\"z-iy1 l-ah-s l-iy\", \"rb\"],\n  \"zebra\": [\"z-iy1 b-r-ah\", \"nn\"],\n  \"zenith\": [\"z-iy1 n-ah-th\", \"nn\"],\n  \"zero\": [\"z-ih1 r-ow\", \"cd\"],\n  \"zest\": [\"z-eh1-s-t\", \"nn\"],\n  \"zigzag\": [\"z-ih1-g z-ae-g\", \"vb\"],\n  \"zilch\": [\"z-ih1-l-ch\", \"nn jj\"],\n  \"zinc\": [\"z-ih1-ng-k\", \"nn\"],\n  \"zip\": [\"z-ih1-p\", \"vbp vb\"],\n  \"zipper\": [\"z-ih1 p-er\", \"nn\"],\n  \"zippo\": [\"z-ih1 p-ow\", \"nn\"],\n  \"zombie\": [\"z-aa1-m b-iy\", \"nn\"],\n  \"zone\": [\"z-ow1-n\", \"nn\"],\n  \"zoo\": [\"z-uw1\", \"nn\"],\n  \"zoologist\": [\"z-ow aa1 l-ah jh-ah-s-t\", \"nn\"],\n  \"zoology\": [\"z-ow aa1 l-ah jh-iy\", \"nn\"],\n  \"zoom\": [\"z-uw1-m\", \"vb\"],\n  \"twelve\": [\"t-w-eh1-l-v\", \"cd\"],\n  \"thirteen\": [\"th-er1 t-iy-n\", \"cd\"],\n  \"fourteen\": [\"f-ao1-r t-iy-n\", \"cd\"],\n  \"fifteen\": [\"f-ih1-f t-iy-n\", \"cd\"],\n  \"sixteen\": [\"s-ih1-k-s t-iy-n\", \"cd\"],\n  \"seventeen\": [\"s-eh1-v-ah-n t-iy-n\", \"cd\"],\n  \"eighteen\": [\"ey1 t-iy-n\", \"cd\"],\n  \"nineteen\": [\"n-ay1-n t-iy-n\", \"cd\"],\n  \"forty\": [\"f-ao1-r t-iy\", \"cd\"],\n  \"fifty\": [\"f-ih1-f t-iy\", \"cd\"],\n  \"sixty\": [\"s-ih1-k-s t-iy\", \"cd\"]\n};\n","import Util from './util.js';\nimport dict from './rita_dict.js';\n\n/**\n * @class Lexicon\n * @memberof module:rita\n */\nclass Lexicon {\n\n  constructor(parent, custom) {\n\n    this.RiTa = parent;\n    this.data = custom || dict;\n    this.analyzer = parent.analyzer;\n    this.lexWarned = false;\n  }\n\n  hasWord(word, opts = {}) {\n\n    if (!word || !word.length) return false;\n\n    let token = word.toLowerCase();\n    let exists = this.data.hasOwnProperty(token);\n    let noDerivations = opts.noDerivations;\n\n    if (noDerivations || exists) return exists;\n\n    // Not strict - check for plurals forms and conjugations\n\n    // 1) Check if word might be a plural form of a noun\n    // in the lexicon - for example, 'dogs' or 'oxen'\n    let sing = this.RiTa.singularize(token);\n    if (this.data.hasOwnProperty(sing)) {\n      let tags = this.RiTa.tagger.allTags(sing);\n      if (tags.includes('nn')) return true;\n    }\n\n    // 2) Check if word might be a conjugated form of a verb \n    // in the lexicon - for example, 'changed' or 'changes'\n    let vlemma = this.RiTa.conjugator.unconjugate(token, opts);\n    if (vlemma && this.data.hasOwnProperty(vlemma)) {\n      let tags = this.RiTa.tagger.allTags(vlemma);\n      if (tags.includes('vb')) return true;\n    }\n\n    return false;\n  }\n\n  async alliterations(word, options = {}) {\n    return this._promise(this.alliterationsSync, [word, options]);\n  }\n\n  alliterationsSync(theWord, opts = {}) {\n\n    this._parseArgs(opts);\n    if (!theWord || typeof theWord !== 'string' || theWord.length < 2) {\n      return [];\n    }\n\n    // only allow consonant inputs\n    if (this.RiTa.isVowel(theWord.charAt(0))) {\n      if (!opts.silent && !this.RiTa.SILENT) console.warn\n        ('Expects a word starting with a consonant, got: ' + theWord);\n      return [];\n    }\n\n    const dict = this.data;\n    const fss = this._firstStressedSyl(theWord);\n    if (!fss) return [];\n\n    let phone = this._firstPhone(fss);\n    let words = Object.keys(dict);\n\n    // make sure we parsed first phoneme\n    if (!phone) {\n      if (!opts.silent && !this.RiTa.SILENT) console.warn\n        ('Failed parsing first phone in \"' + theWord + '\"');\n      return [];\n    }\n\n    // randomize list order if shuffle is true\n    if (opts.shuffle) words = this.RiTa.randomizer.shuffle(words);\n\n    let result = [];\n    for (let i = 0; i < words.length; i++) {\n\n      let word = words[i];\n      // check word length and syllables\n      if (word === theWord || !this._checkCriteria(word, dict[word], opts)) {\n        continue;\n      }\n\n      let data = dict[word];\n      if (opts.targetPos) {\n        word = this._matchPos(word, data, opts);\n        if (!word) continue;\n        // Note: we may have changed the word here (e.g. via conjugation)\n        //       and it is also may no longer be in the dictionary\n        if (word !== words[i]) data = dict[word];\n      }\n\n      // TODO: use 'data' here unless we've changed \n      // to a new word not in dict\n      let c2 = this._firstPhone(this._firstStressedSyl(word));\n      if (phone === c2) result.push(word);\n\n      if (result.length === opts.limit) break;\n    }\n\n    return result;\n  }\n\n  async rhymes(word, options = {}) {\n    return this._promise(this.rhymesSync, [word, options]);\n\n  }\n\n  rhymesSync(theWord, opts = {}) {\n\n    this._parseArgs(opts);\n\n    if (!theWord || !theWord.length || theWord.length < 2) return [];\n\n    const dict = this.data;\n    let phone = this._lastStressedPhoneToEnd(theWord);\n    let words = Object.keys(dict);\n\n    if (!phone) return [];\n\n    // randomize list order if 'shuffle' is true\n    if (opts.shuffle) words = this.RiTa.randomizer.shuffle(words);\n\n    let result = []; let i = 0\n    for (; i < words.length; i++) {\n\n      let word = words[i], data = dict[word];\n\n      // check word length and syllables\n      if (word === theWord || !this._checkCriteria(word, data, opts)) {\n        continue;\n      }\n\n      if (opts.targetPos) {\n        word = this._matchPos(word, data, opts);\n        if (!word) continue;\n        // Note: we may have changed the word here (e.g. via conjugation)\n        // and it is also may no longer be in the dictionary\n        if (word !== words[i]) data = dict[word];\n      }\n\n      // recompute phones if not in dict (see note above)\n      let phones = data ? data[0] : this.rawPhones(word);\n\n      // check for the rhyme\n      if (phones.endsWith(phone)) {\n        result.push(word);\n      }\n\n      if (result.length === opts.limit) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  async spellsLike(word, options = {}) {\n    return this._promise(this.spellsLikeSync, [word, options]);\n  }\n\n  spellsLikeSync(word, options = {}) {\n    if (!word || !word.length) return [];\n    options.type = 'letter';\n    return this._byTypeSync(word, options);\n  }\n\n  async soundsLike(word, options = {}) {\n    return this._promise(this.soundsLikeSync, [word, options]);\n  }\n\n  /**\n   * A synchronous version of RiTa.lexicon.soundsLike().\n   * @param {string} word \n   * @param {object} [opts]\n   * @returns {string[]} An array of words that sound like the input word\n   */\n  soundsLikeSync(word, opts = {}) {\n    if (!word || !word.length) return [];\n    return (opts.matchSpelling)\n      ? this._bySoundAndLetterSync(word, opts)\n      : this._byTypeSync(word, { ...opts, type: 'sound' });\n  }\n\n  randomWord(pattern, opts) {\n\n    // no arguments, just return\n    if (!pattern && !opts) {\n      return this.RiTa.random(Object.keys(this.data));\n    }\n\n    // handle different parameter options\n    if (!(pattern instanceof RegExp)) {\n      if (typeof pattern === 'object' && !opts) {\n        opts = pattern;  // single argument which is opts\n        pattern = undefined;\n      }\n    }\n\n    // delegate to search {limit=1, shuffle=true, strictPos=true, minLength=4}  \n    opts = opts || {}; // keep\n    opts.limit = 1;\n    opts.shuffle = true;\n    opts.strictPos = true;\n    opts.minLength = Util.numOpt(opts, 'minLength', 4);\n\n    let result = this.searchSync(pattern, opts);\n\n    // relax our pos constraints if we got nothing\n    if (result.length < 1 && opts.hasOwnProperty('pos')) {\n      opts.strictPos = false;\n      result = this.searchSync(pattern, opts);\n    }\n\n    // we've still got nothing, throw\n    if (result.length < 1) {\n      ['strictPos', 'shuffle', 'targetPos'].forEach(k => delete opts[k]);\n      throw Error(\"No words matching constraints:\\n\" + JSON.stringify(opts, undefined, 2));\n    }\n\n    return result[0];\n  }\n\n  async search(pattern, options) {\n    return this._promise(this.searchSync, [pattern, options]);\n  }\n\n  searchSync(pattern, options) {\n\n    let words = Object.keys(this.data);\n\n    // no arguments, just return\n    if (!pattern && !options) return words;\n\n    let { regex, opts } = this._parseRegex(pattern, options);\n    this._parseArgs(opts);\n\n    // randomize list order if shuffle is true\n    if (opts.shuffle) words = this.RiTa.randomizer.shuffle(words);\n\n    let result = [];\n    //console.time('search: '+pattern);\n    for (let i = 0; i < words.length; i++) {\n\n      let word = words[i], data = this.data[word];\n      if (!this._checkCriteria(word, data, opts)) continue;\n\n      if (opts.targetPos) {\n        word = this._matchPos(word, data, opts, opts.strictPos);\n        if (!word) continue;\n        if (word !== words[i]) data = this.data[word];\n        /* Note: a) may have changed the word here via conjugation\n                 and b) it may no longer be in the dictionary  */\n      }\n\n      if (!regex || this._regexMatch(word, data, regex, opts.type)) {\n        result.push(word);\n        if (result.length === opts.limit) break;\n      }\n    }\n    //console.timeEnd('search: '+pattern);\n\n    return result;\n  }\n\n  isAlliteration(word1, word2) {\n    if (!word1 || !word2 || !word1.length) return false;\n    let c1 = this._firstPhone(this._firstStressedSyl(word1)),\n      c2 = this._firstPhone(this._firstStressedSyl(word2));\n    return c1 && c2 && !this.RiTa.isVowel(c1.charAt(0)) && c1 === c2;\n  }\n\n  isRhyme(word1, word2) {\n    if (!word1 || !word2 || word1.toUpperCase() === word2.toUpperCase()) {\n      return false;\n    }\n    if (this.rawPhones(word1) === this.rawPhones(word2)) {\n      return false;\n    }\n    let p1 = this._lastStressedVowelPhonemeToEnd(word1),\n      p2 = this._lastStressedVowelPhonemeToEnd(word2);\n    return p1 && p2 && p1 === p2;\n  }\n\n  size() {\n    let dict = this.data;\n    return dict ? Object.keys(dict).length : 0;\n  }\n\n  //////////////////////////// helpers /////////////////////////////////\n\n  _byTypeSync(theWord, opts) {\n\n    this._parseArgs(opts); // TODO: add minLimit (minResultCount) ?\n\n    const dict = this.data;\n    const input = theWord.toLowerCase();\n    const matchSound = opts.type === 'sound'; // default: letter\n    const variations = [input, input + 's', input + 'es'];\n    const phonesA = matchSound ? this._toPhoneArray(this.rawPhones(input)) : input;\n\n    if (!phonesA) return [];\n\n    let minVal = Number.MAX_VALUE, words = Object.keys(dict);\n\n    // randomize list order if shuffle is true\n    if (opts.shuffle) words = this.RiTa.randomizer.shuffle(words);\n\n    let result = [];\n    for (let i = 0; i < words.length; i++) {\n\n      let word = words[i], data = dict[word];\n\n      if (variations.includes(word)) continue;\n\n      if (!this._checkCriteria(word, data, opts)) continue;\n\n      if (opts.targetPos) {\n        word = this._matchPos(word, data, opts);\n        if (!word) continue;\n        // Note: we may have changed the word here (e.g. via conjugation)\n        // and it is also may no longer be in the dictionary\n        if (word !== words[i]) data = dict[word];\n      }\n\n      let phonesB = word;\n      if (matchSound) {\n        let phones = data ? data[0] : this.rawPhones(word);\n        phonesB = phones.replace(/1/g, '').replace(/ /g, '-').split('-');\n      }\n\n      let med = this.minEditDist(phonesA, phonesB);\n\n      // found something even closer\n      if (med >= opts.minDistance && med < minVal) {\n        minVal = med;\n        result = [word];\n      }\n      // another best to add\n      else if (med === minVal && result.length < opts.limit) {\n        result.push(word);\n      }\n    }\n\n    return result.slice(0, opts.limit);\n  }\n\n  _matchPos(word, rdata, opts, strict) {\n\n    let posArr = rdata[1].split(' ');\n\n    // check the pos here (based on strict flag)\n    if (!posArr.includes(opts.targetPos) || (strict && opts.targetPos !== posArr[0])) {\n      return;\n    }\n\n    // we've matched our pos, pluralize or inflect if needed\n    let result = word;\n    if (opts.pluralize) { // looking for an 'nns'\n      if (word.endsWith(\"ness\") || word.endsWith(\"ism\")) return;\n\n      result = this.RiTa.pluralize(word);\n      if (!this.RiTa.isNoun(result)) return; // make sure its still a noun\n    }\n    else if (opts.conjugate) { // inflect\n      result = this._reconjugate(word, opts.pos);\n    }\n\n    // verify we haven't changed syllable count\n    if (result !== word) {\n      if (opts.numSyllables) {\n\n        // TODO: use rdata here if possible\n        let syls = this.analyzer.analyzeWord(result, { silent: true }).syllables;\n        let num = syls.split(this.RiTa.SYLLABLE_BOUNDARY).length;\n\n        // reject if syllable count has changed\n        if (num !== opts.numSyllables) return;\n      }\n      // reject if length no longer matches\n      if (result.length < opts.minLength || result.length > opts.maxLength) {\n        return;\n      }\n    }\n\n    return result;\n  }\n\n  _checkCriteria(word, rdata, opts) {\n\n    // check word length\n    if (word.length > opts.maxLength) return false;\n    if (word.length < opts.minLength) return false;\n\n    // match numSyllables if supplied\n    if (opts.numSyllables) {\n      let syls = rdata[0].split(' ').length;\n      if (opts.numSyllables !== syls) return false;\n    }\n    return true;\n  }\n\n  // Handles: pos, limit, numSyllables, minLength, maxLength\n  // potentially appends pluralize, conjugate, targetPos\n  _parseArgs(opts) {\n\n    opts.limit = Util.numOpt(opts, 'limit', 10);\n    opts.minDistance = Util.numOpt(opts, 'minDistance', 1);\n    opts.numSyllables = Util.numOpt(opts, 'numSyllables', 0);\n    opts.maxLength = Util.numOpt(opts, 'maxLength', Number.MAX_SAFE_INTEGER);\n    opts.minLength = Util.numOpt(opts, 'minLength', 3);\n\n    if (opts.limit < 1) opts.limit = Number.MAX_SAFE_INTEGER;\n\n    let tpos = opts.pos || false;\n    if (tpos && tpos.length) {\n      opts.pluralize = (tpos === \"nns\");\n      opts.conjugate = (tpos[0] === \"v\" && tpos.length > 2);\n      if (tpos[0] === \"n\") tpos = \"nn\";\n      else if (tpos[0] === \"v\") tpos = \"vb\";\n      else if (tpos === \"r\") tpos = \"rb\";\n      else if (tpos === \"a\") tpos = \"jj\";\n    }\n\n    opts.targetPos = tpos;\n  }\n\n  _reconjugate(word, pos) {\n    const RiTa = this.RiTa;\n    switch (pos) {\n      /*  VBD \tVerb, past tense\n          VBG \tVerb, gerund or present participle\n          VBN \tVerb, past participle\n          VBP \tVerb, non-3rd person singular present\n          VBZ \tVerb, 3rd person singular present */\n      case 'vbd':\n        return RiTa.conjugate(word, {\n          number: RiTa.SINGULAR,\n          person: RiTa.FIRST,\n          tense: RiTa.PAST\n        });\n      case 'vbg':\n        return RiTa.presentPart(word);\n      case 'vbn':\n        return RiTa.pastPart(word);\n      case 'vbp':\n        return word;\n      case 'vbz':\n        return RiTa.conjugate(word, {\n          number: RiTa.SINGULAR,\n          person: RiTa.THIRD,\n          tense: RiTa.PRESENT\n        });\n      default: throw Error('Unexpected pos: ' + pos);\n    }\n  }\n\n  _bySoundAndLetterSync(word, opts) {\n    let bySound = this._byTypeSync(word, { ...opts, type: 'sound' });\n    let byLetter = this._byTypeSync(word, { ...opts, type: 'letter' });\n    if (bySound.length < 1 || byLetter.length < 1) return [];\n    return this._intersect(bySound, byLetter).slice(0, opts.limit);\n  }\n\n  async _bySoundAndLetter(word, opts) {\n    let types = ['sound', 'letter']; // in parallel\n    let promises = types.map(type => this._promise\n      (this._byTypeSync, [word, { ...opts, type }]));\n\n    let results = await Promise.allSettled(promises);\n    // @ts-ignore\n    let [bySound, byLetter] = results.map(r => r.value);\n    if (bySound.length < 1 || byLetter.length < 1) return [];\n\n    return this._intersect(bySound, byLetter).slice(0, opts.limit);\n  }\n\n\n  rawPhones(word, opts) {\n\n    let noLts = opts && opts.noLts;\n    let fatal = opts && opts.fatal;\n    let rdata = this._lookupRaw(word, fatal);\n    if (rdata && rdata.length) return rdata[0];\n\n    if (!noLts) {\n      let phones = this.RiTa.analyzer.computePhones(word);\n      return Util.syllablesFromPhones(phones); // TODO: bad name\n    }\n  }\n\n  // med for 2 strings (or 2 arrays)\n  minEditDist(source, target) {\n\n    let cost; // cost\n    let i, j;\n    /**\n     * @type {number[][]}\n     */\n    let matrix = []; // matrix\n    let sI; // ith character of s\n    let tJ; // jth character of t\n\n    // Step 1 ----------------------------------------------\n\n    for (i = 0; i <= source.length; i++) {\n      matrix[i] = [];\n      matrix[i][0] = i;\n    }\n\n    for (j = 0; j <= target.length; j++) {\n      matrix[0][j] = j;\n    }\n\n    // Step 2 ----------------------------------------------\n\n    for (i = 1; i <= source.length; i++) {\n      sI = source[i - 1];\n\n      // Step 3 --------------------------------------------\n\n      for (j = 1; j <= target.length; j++) {\n        tJ = target[j - 1];\n\n        // Step 4 ------------------------------------------\n\n        cost = (sI == tJ) ? 0 : 1;\n\n        // Step 5 ------------------------------------------\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j] + 1,\n          matrix[i][j - 1] + 1,\n          matrix[i - 1][j - 1] + cost\n        );\n      }\n    }\n\n    // Step 6 ----------------------------------------------\n\n    return matrix[source.length][target.length];\n  }\n\n  isMassNoun(w) {\n    return w.endsWith(\"ness\")\n      || w.endsWith(\"ism\")\n      || this.RiTa.MASS_NOUNS.includes(w);\n  }\n\n  // helpers ---------------------------------------------------------------\n\n  _promise(fun, args) {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fun.apply(this, args));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  _parseRegex(regex, opts) {\n    // handle regex passed as part of opts\n    if (typeof regex === 'string') {\n      if (opts && opts.type === 'stresses') {\n        if (/^\\^?[01]+\\$?$/.test(regex)) { // keep ^ and $ in regex like \"^101$\"\n          /* if we have a stress string without slashes, add them\n             010 -> 0/1/0, ^010$ -> ^0/1/0$, etc. */\n          regex = regex.replace(/([01])(?=([01]))/g, \"$1/\");\n        }\n      }\n      regex = new RegExp(regex);\n    }\n    else if (regex instanceof RegExp) {\n      // RegExp object;\n    }\n    else if (typeof regex === 'object' || (regex === undefined && typeof opts === 'object')) {\n      if (!opts) {\n        opts = regex;  // have one argument that is opts\n      }\n      regex = opts.regex; // do we have regex in opts?\n      if (typeof regex === 'string') {\n        if (opts && opts.type === 'stresses') {\n          if (/^\\^?[01]+\\$?$/.test(regex)) {\n            regex = regex.replace(/([01])(?=([01]))/g, \"$1/\");\n          }\n        }\n        regex = new RegExp(regex);\n      }\n    }\n    return { regex, opts: opts || {} };\n  }\n\n  _regexMatch(word, data, regex, type) {\n\n    if (type === 'stresses') {\n      let phones = data ? data[0] : this.rawPhones(word);\n      let stresses = this.analyzer.phonesToStress(phones);\n      if (regex.test(stresses)) return true;\n    }\n    else if (type === 'phones') {\n      let phones = data ? data[0] : this.rawPhones(word);\n      phones = phones.replace(/1/g, '').replace(/ /g, '-');// + ' ';\n      if (regex.test(phones)) return true;\n    }\n    else {\n      if (regex.test(word)) return true;\n    }\n  }\n\n  _toPhoneArray(raw) {\n    return raw.replace(/[01]/g, '').replace(/ /g, '-').split('-');\n  }\n\n  _firstPhone(rawPhones) {\n    if (rawPhones && rawPhones.length) {\n      let phones = rawPhones.split(this.RiTa.PHONE_BOUNDARY);\n      if (phones) return phones[0];\n    }\n  }\n\n  _intersect(a1, a2) {\n    return [a1, a2].reduce((a, b) => a.filter(e => b.includes(e)))\n  }\n\n  _lastStressedPhoneToEnd(word) {\n    if (word && word.length) {\n      let raw = this.rawPhones(word);\n      if (raw) {\n        let idx = raw.lastIndexOf(this.RiTa.STRESS);\n        if (idx >= 0) {\n          let c = raw.charAt(--idx);\n          while (c != '-' && c != ' ') {\n            if (--idx < 0) return raw; // single-stressed syllable\n            c = raw.charAt(idx);\n          }\n        }\n        return raw.substring(idx + 1);\n      }\n    }\n  }\n\n  _lastStressedVowelPhonemeToEnd(word) {\n    if (word && word.length) {\n      let raw = this._lastStressedPhoneToEnd(word);\n      if (raw) {\n        let idx = -1, syllables = raw.split(' ');\n        let lastSyllable = syllables[syllables.length - 1];\n        lastSyllable = lastSyllable.replace('[^a-z-1 ]', '');\n        for (let i = 0; i < lastSyllable.length; i++) {\n          let c = lastSyllable.charAt(i);\n          if (this.RiTa.VOWELS.includes(c)) {\n            idx = i;\n            break;\n          }\n        }\n        return lastSyllable.substring(idx);\n      }\n    }\n  }\n\n  _firstStressedSyl(word) {\n    let raw = this.rawPhones(word);\n    if (raw) {\n      let idx = raw.indexOf(this.RiTa.STRESS);\n      if (idx >= 0) {\n        let c = raw.charAt(--idx);\n        while (c != ' ') {\n          if (--idx < 0) {  // single-stressed syllable\n            idx = 0;\n            break;\n          }\n          c = raw.charAt(idx);\n        }\n        let firstToEnd = idx === 0 ? raw : raw.substring(idx).trim();\n        idx = firstToEnd.indexOf(' ');\n        return idx < 0 ? firstToEnd : firstToEnd.substring(0, idx);\n      }\n    }\n  }\n\n  _posData(word, fatal) {\n    let rdata = this._lookupRaw(word, fatal);\n    if (rdata && rdata.length === 2) return rdata[1];\n  }\n\n  _posArr(word, fatal) {\n    let rdata = this._lookupRaw(word, fatal);\n    if (rdata && rdata.length === 2) return rdata[1].split(' ');\n  }\n\n  _lookupRaw(word, fatal) {\n    word = word && word.toLowerCase();\n    return this.data[word];\n  }\n}\n\n\n\nexport default Lexicon;\n","import Util from './util.js';\n\n/**\n * @class Tagger\n * @memberof module:rita\n */\nclass Tagger {\n\n  /**\n   * Create a Tagger.\n   * @param {any} parent - RiTa parent class.\n   */\n  constructor(parent) {\n    this.RiTa = parent;\n  }\n\n  isVerb(word, opts) {\n\n    let conj = this.RiTa.conjugator;\n\n    // check irregular verbs (added 7/31/21) \n    if (this._isNoLexIrregularVerb(word)) return true;\n    if (conj.IRREG_VERBS_LEX_VB.hasOwnProperty(word)) return true;\n    if (conj.IRREG_VERBS_NOLEX.hasOwnProperty(word)) return true;\n\n    // any verbs (vb*) in lexicon\n    let pos = this.allTags(word, opts);\n    return pos.some(p => VERBS.includes(p));\n  }\n\n  isNoun(word) {\n    // see https://github.com/dhowe/rita/issues/130\n    let pos = this.allTags(word, { noGuessing: true });\n    return pos.some(p => NOUNS.includes(p));\n  }\n\n  isAdverb(word) {\n    let pos = this.allTags(word);\n    return pos.some(p => ADVS.includes(p));\n  }\n\n  isAdjective(word) {\n    let pos = this.allTags(word);\n    return pos.some(p => ADJS.includes(p));\n  }\n\n  hasTag(choices, tag) {\n    if (!Array.isArray(choices)) return false;\n    let choiceStr = choices.join();\n    return (choiceStr.indexOf(tag) > -1);\n  }\n\n  /* convert from array of tags to a string with tags inline */\n  inlineTags(words, tags, delimiter) {\n\n    if (!words || !words.length) return '';\n\n    if (words.length !== tags.length) {\n      throw Error('Tagger: invalid state: words(' + words.length\n        + ')=' + words + ' tags(' + tags.length + ')=' + tags);\n    }\n\n    delimiter = delimiter || '/';\n\n    let sb = '';\n    for (let i = 0; i < words.length; i++) {\n      sb += words[i];\n      if (!this.RiTa.isPunct(words[i])) {\n        sb += delimiter + tags[i];\n      }\n      sb += ' ';\n    }\n    return sb.trim();\n  }\n\n  allTags(word, opts = {}) { // returns an array of choices\n\n    let noGuessing = opts.noGuessing || false;\n    let noDerivations = opts.noDerivations || false;\n\n    if (word && typeof word === 'string' && word.length) {\n      let posData = this.RiTa.lexicon._posArr(word);\n      if (posData && posData.length > 0) return posData;\n      if (word.includes(\"-\") && opts.noGuessingOnHyphenated) return [];  //#HWF\n      if (!noDerivations) return this._derivePosData(word, noGuessing);\n    }\n\n    return []; // empty array\n  }\n\n  /**\n   * Tags an array of words with their part-of-speech\n   * @param {(string|string[])} input - The input containing a word or words\n   * @param {object} [opts] - options for the tagging {inline, simple}\n   * @param {boolean} [opts.inline] - tags are returned inline with words\n   * @param {boolean} [opts.simple] - use simple tags (noun=n,verb=v,adverb=a,adjective=r)\n   * @returns {any} the pos tag(s) or string with tags inline\n   */\n  tag(input, opts = {\n    inline: false,\n    simple: false,\n  }) {\n\n    let result = [], choices2d = [];\n    // @ts-ignore\n    let dbug = opts?.dbug || false;\n\n    if (!input || !input.length) return opts.inline ? '' : [];\n\n    /** @type {string[]} */\n    let words;\n    if (!Array.isArray(input)) {\n\n      // likely a string\n      if (!input.trim().length) { // empty string\n        return opts.inline ? '' : [];\n      }\n      // else tokenize to array\n      words = this.RiTa.tokenizer.tokenize(input);\n    }\n    else {\n      words = input;\n    }\n\n    for (let i = 0, l = words.length; i < l; i++) {\n\n      let word = words[i];\n      if (!word || !word.length) continue;\n\n      if (this.RiTa.isPunct(word)) {\n        result[i] = word;\n      }\n      else if (word.length === 1) {\n        result[i] = this._handleSingleLetter(word);\n      }\n      else {\n        //#HWF: skip guessing for not-in-dict hyphenated words as we deal with these later \n        let opts = this.allTags(word, { noGuessingOnHyphenated: true });\n        choices2d[i] = opts;// || []; // all options\n        result[i] = opts.length ? opts[0] : '__HYPH__'; // first option\n      }\n    }\n\n    // Adjust pos according to transformation rules\n    let tags = this._applyContext(words, result, choices2d, dbug);\n\n    if (opts.simple) { // convert to simple tags\n      for (let i = 0; i < tags.length; i++) {\n        if (NOUNS.includes(tags[i])) tags[i] = 'n';\n        else if (VERBS.includes(tags[i])) tags[i] = 'v';\n        else if (ADJS.includes(tags[i])) tags[i] = 'a';\n        else if (ADVS.includes(tags[i])) tags[i] = 'r';\n        else tags[i] = '-'; // default: other\n      }\n    }\n\n    return opts.inline ? this.inlineTags(words, tags) : tags;\n  }\n\n  //////////////////////////////////////////////////////////////////\n\n  _isNoLexIrregularVerb(stem) {\n    return Object.values(this.RiTa.conjugator.IRREG_VERBS_NOLEX).includes(stem);\n  }\n\n  _checkPluralNounOrVerb(stem, result) {\n    let pos = this.RiTa.lexicon._posArr(stem);\n    if (pos) {\n      if (pos.includes('nn')) result.push('nns'); // ?? any case\n      if (pos.includes('vb')) result.push('vbz');\n    }\n\n    // finally check irregular verb list\n    if (!pos || !pos.includes(\"vbz\")) {\n      if (this._isNoLexIrregularVerb(stem)) result.push('vbz');\n    }\n  }\n\n  _safeConcat(a, b) {\n    if (a && b) return a.concat(b);\n    if (a) return a;\n    if (b) return b;\n  } // ! this function is never used\n\n  _derivePosData(word, noGuessing) {\n\n    // noGuessing arg disables the final guess when true, \n    // and instead returns an empty array if no rules match\n\n    if (word === 'the' || word === 'a') return ['dt'];\n\n    /*\n      Try for a verb or noun inflection \n      VBD \tVerb, past tense\n      VBG \tVerb, gerund or present participle\n      VBN \tVerb, past participle\n      VBP \tVerb, non-3rd person singular present\n      VBZ \tVerb, 3rd person singular present\n      NNS   Noun, plural\n    */\n    const lex = this.RiTa.lexicon, tags = lex._posArr(word);\n\n    if (word.endsWith(\"ress\")) {\n      let pos = lex._posArr(word.substring(0, word.length - 3)); // murderess\n      if (pos && pos.includes(\"vb\")) {\n        //murderess - murder\n        return [\"nn\"];\n      }\n      pos = lex._posArr(word.substring(0, word.length - 4)) // actress, waitress\n      if (pos && pos.includes(\"vb\")) {\n        //actress - act\n        return [\"nn\"];\n      }\n    }\n\n    if (word.endsWith(\"or\")) {\n      let pos = lex._posArr(word.substring(0, word.length - 2)); // actor, motor, editor\n      if (pos && pos.includes(\"vb\")) {\n        //actress - act\n        return [\"nn\"];\n      }\n      pos = lex._posArr(word.substring(0, word.length - 2) + \"e\"); // investigator, creator\n      if (pos && pos.includes(\"vb\")) {\n        return [\"nn\"];\n      }\n    }\n\n    if (word.endsWith(\"er\")) {\n      let pos = lex._posArr(word.substring(0, word.length - 2)); // builder\n\n      if (pos && pos.includes(\"vb\")) return [\"nn\"];\n\n      pos = lex._posArr(word.substring(0, word.length - 1)); // dancer \n      if (pos && pos.includes(\"vb\")) return [\"nn\"];\n\n      if (word.charAt(word.length - 3) === word.charAt(word.length - 4)) {\n        pos = lex._posArr(word.substring(0, word.length - 3)); // programmer\n        if (pos && pos.includes(\"vb\")) return [\"nn\"];\n      }\n    }\n\n    if (word.endsWith('ies')) { // 3rd-person sing. present (satisfies, falsifies)\n      let check = word.substring(0, word.length - 3) + \"y\";\n      let pos = lex._posArr(check);\n      if (pos && pos.includes('vb')) return ['vbz'];\n    }\n    else if (word.endsWith('s')) {  // singular noun ('bonus', 'census'), plural noun or vbz\n\n      let result = [];\n\n      // remove suffix (s) and test (eg 'hates', 'cakes')\n      this._checkPluralNounOrVerb(word.substring(0, word.length - 1), result);\n\n      if (word.endsWith('es')) {\n\n        // remove suffix (es) and test (eg 'repossesses')\n        this._checkPluralNounOrVerb(word.substring(0, word.length - 2), result);\n\n        // singularize and test (eg 'thieves')\n        this._checkPluralNounOrVerb(this.RiTa.singularize(word), result);\n      }\n\n      if (result.length) return result;\n    }\n\n    if (word.endsWith('ed')) { // simple past or past participle\n      let pos = lex._posArr(word.substring(0, word.length - 1))\n        || lex._posArr(word.substring(0, word.length - 2))\n        || lex._posArr(word.substring(0, word.length - 3)); //e.g deterred\n      if (pos && pos.includes('vb')) {\n        return ['vbd', 'vbn']; // hate-> hated || row->rowed || deter -> deterred\n      }\n    }\n\n    if (word.endsWith('ing')) {\n      let stem = word.substring(0, word.length - 3);\n      if (stem) {\n        let pos = lex._posArr(stem);\n        if (pos && pos.includes('vb')) {\n          // vbg can be noun (in some contexts), for example: 'His acting is good'\n          // this is more for getting all 'possible' labels in tag() function as\n          // elsewhere tags are analyzed by context according to ruleset.\n          return ['vbg', 'nn']; // assenting \n        }\n        else {\n          pos = lex._posArr(stem + 'e'); // hate\n          if (pos && pos.includes('vb')) {\n            return ['vbg', 'nn'];  //  e.g: let's go hiking\n          }\n        }\n        // else\n        if (word.charAt(word.length - 4) === word.charAt(word.length - 5)) {\n          pos = lex._posArr(stem.substring(0, stem.length - 1)); // e.g running\n          if (pos && pos.includes('vb')) {\n            return ['vbg', 'nn'];  //  e.g. the tripping of an opponent is a foul in football\n          }\n        }\n      }\n    }\n\n    if (word.endsWith('ly')) {\n      let stem = word.substring(0, word.length - 2);\n      if (stem) {\n        let pos = lex._posArr(stem);\n        if (pos && pos.includes(\"jj\")) {\n          // beautifully - beautiful\n          return ['rb'];\n        }\n        if (stem.charAt(stem.length - 1) === 'i') {\n          pos = lex._posArr(stem.substring(0, stem.length - 1) + \"y\");\n          if (pos && pos.includes(\"jj\")) {\n            // happily - happy\n            return ['rb'];\n          }\n        }\n      }\n    }\n\n    // Check if this could be a plural noun form\n    if (this.isLikelyPlural(word)) return ['nns'];\n\n    // Check if is irregular past part of a verb\n    let conj = this.RiTa.conjugator;\n    if (conj.IRREG_PAST_PART.includes(word)) return ['vbd'];\n\n    // Give up \n    return noGuessing ? [] : word.endsWith('ly') ? ['rb'] :\n      (word.endsWith('s') ? ['nns'] : ['nn']);\n  }\n\n  isLikelyPlural(word) {\n    return this._lexHas(\"n\", this.RiTa.singularize(word))\n    //|| this.RiTa.inflector.isPlural(word);\n  }\n\n  _handleSingleLetter(c) {\n    if (c === 'a' || c === 'A') return 'dt';\n    if (c >= '0' && c <= '9') return 'cd';\n    return (c === 'I') ? 'prp' : c;\n  }\n\n  _log(i, frm, to) { // log custom tag\n    console.log(\"\\n  Custom(\" + i + \") tagged '\" + frm + \"' -> '\" + to + \"'\\n\\n\");\n  }// debug only: not available in built version since 'dbug' in tag() is 0\n\n  /**\n   * Applies a customized subset of the Brill transformations\n   * @param {string[]} words \n   * @param {string[]} result \n   * @param {string[]} choices \n   * @param {boolean} dbug \n   * @returns \n   */\n  _applyContext(words, result, choices, dbug) {\n\n    // Apply transformations\n    for (let i = 0, l = words.length; i < l; i++) {\n\n      let word = words[i], tag = result[i];\n      if (!word || !word.length) continue;\n\n      if (typeof tag === 'undefined') {\n        tag = '';\n        if (!this.RiTa.SILENT) console.warn\n          ('\\n[WARN] Unexpected state in _applyContext for idx=' + i, words, '\\n');\n      }\n\n      // transform 1a: DT, {VBD | VBP | VB} --> DT, NN\n      if (i > 0 && (result[i - 1] === \"dt\")) {\n\n        if (tag.startsWith(\"vb\")) {\n          tag = \"nn\";\n          // transform 7: if a word has been categorized as a common noun \n          // and it ends with \"s\", then set its type to plural noun (NNS)\n          if (word.match(/^.*[^s]s$/)) {\n            if (!this.RiTa.MASS_NOUNS.includes(word)) {\n              tag = \"nns\";\n            }\n          }\n          //dbug && this._log(\"1a\", word, tag);\n        }\n\n        // transform 1b: DT, {RB | RBR | RBS} --> DT, {JJ | JJR | JJS}\n        else if (tag.startsWith(\"rb\")) {\n          tag = (tag.length > 2) ? \"jj\" + tag.charAt(2) : \"jj\";\n          //dbug && this._log(\"1b\", word, tag);\n        }\n      }\n\n      // transform 2: convert a noun to a number (cd) if it is\n      // all digits and/or a decimal \".\"\n      if (tag.startsWith(\"n\")) { //choices[i] always exist (from allTags())\n        if (Util.isNum(word)) {\n          tag = \"cd\";\n          //dbug && this._log(2, word, tag);\n        } // mods: dch (add choice check above) <---- ? >\n      }\n\n      // transform 3: convert a noun to a past participle if\n      // word ends with \"ed\" and (following any nn or prp?)\n      if (i > 0 && tag.startsWith(\"n\") && word.endsWith(\"ed\") && result[i - 1].match(/^(nn|prp)$/)) {\n        if (!word.endsWith(\"eed\")) {\n          //dbug && this._log(3, word, tag);\n          tag = \"vbn\";\n        }\n      }\n\n      // transform 4: convert any type to adverb if it ends in \"ly\";\n      if (word.endsWith(\"ly\")) {\n        tag = \"rb\";\n        //dbug && this._log(4, word, tag);\n      }\n\n      // transform 5: convert a common noun (NN or NNS) to a (only if longer than 4 letters)\n      // adjective if it ends with \"al\", special-case for mammal\n      if (word.length > 4 && tag.startsWith(\"nn\") && word.endsWith(\"al\") && word != 'mammal') {\n        tag = \"jj\";\n        //dbug && this._log(5, word, tag);\n      }\n\n      // transform 6: convert a noun to a verb if the\n      // preceeding word is modal\n      if (i > 0 && tag.startsWith(\"nn\") && result[i - 1].startsWith(\"md\")) {\n        tag = \"vb\";\n        //dbug && this._log(6, word, tag);\n      }\n\n      //transform 7(dch): convert a vb to vbn when following vbz/'has'  \n      // (She has ridden, He has rode)\n      if (tag === \"vbd\" && i > 0 && result[i - 1].match(/^(vbz)$/)) {\n        tag = \"vbn\";\n        //dbug && this._log(7, word, tag);\n      }\n\n      // transform 8: convert a common noun to a present\n      // participle verb (i.e., a gerund)\n      if (tag.startsWith(\"nn\") && word.endsWith(\"ing\")) {\n\n        // DH: fixed here -- add check on choices for any verb: eg. // 'morning'\n        if (this.hasTag(choices[i], \"vbg\")) { // fixed for 'fishing' and etc\n          tag = \"vbg\";\n          //dbug && this._log(8, word, tag);\n        }\n      }\n\n      // transform 9(dch): convert plural nouns (which are also 3sg-verbs) to\n      // 3sg-verbs when following a singular noun (the dog dances, Dave dances, he dances)\n      if (i > 0 && tag === \"nns\" && this.hasTag(choices[i], \"vbz\")\n        && result[i - 1].match(/^(nn|prp|nnp)$/)) {\n        tag = \"vbz\";\n        //dbug && this._log(9, word, tag);\n      }\n\n      // transform 10(dch): convert common nouns to proper\n      // nouns when they start w' a capital\n      if (tag.startsWith(\"nn\") && /^[A-Z]/.test(word)) {\n\n        //if it is not at the start of a sentence or it is the only word\n        // or when it is at the start of a sentence but can't be found in the dictionary\n        let sing = this.RiTa.singularize(word.toLowerCase());\n        if (words.length === 1 || i > 0 || (i == 0 && !this._lexHas('nn', sing))) {\n          tag = tag.endsWith(\"s\") ? \"nnps\" : \"nnp\";\n          //dbug && this._log(10, word, tag);\n        }\n      }\n\n      // transform 11(dch): convert plural nouns (which are also 3sg-verbs) \n      // to 3sg-verbs when followed by adverb\n      if (i < result.length - 1 && tag == \"nns\" && result[i + 1].startsWith(\"rb\") &&\n        this.hasTag(choices[i], \"vbz\")) {\n        tag = \"vbz\";\n        //dbug && this._log(11, word, tag);\n      }\n\n      // transform 12(dch): convert plural nouns which have an entry\n      // for their base form to vbz\n      if (tag === \"nns\") {\n\n        // is preceded by one of the following\n        if (i > 0 && [\"nn\", \"prp\", \"cc\", \"nnp\"].indexOf(result[i - 1]) > -1) {\n          // if word is ends with s or es and is 'nns' and has a vb\n          if (this._lexHas('vb', this.RiTa.singularize(word))) {\n            tag = \"vbz\";\n            //dbug && this._log(12, word, tag);\n          }\n        } // if only word and not in lexicon\n        else if (words.length === 1 && choices[i].length < 2) {\n          // there is always choices[i][0] which is result[i] \n          // (when the word is not in lexicon, generated by _derivePosData())\n          // if the stem of a single word could be both nn and vb, return nns\n          // only return vbz when the stem is vb but not nn\n          let sing = this.RiTa.singularize(word.toLowerCase());\n          if (!this._lexHas('nn', sing) && this._lexHas('vb', sing)) { //hmm any example?\n            tag = \"vbz\";\n            //dbug && this._log(12, word, tag);\n          }\n        }\n      }\n\n      // transform 13(cqx): convert a vb/ potential vb to vbp \n      // when following nns (Elephants dance, they dance)\n      if (tag === \"vb\" || (tag === \"nn\" && this.hasTag(choices[i], \"vb\"))) {\n        if (i > 0 && result[i - 1].match(/^(nns|nnps|prp)$/)) {\n          tag = \"vbp\";\n          //dbug && this._log(13, word, tag);\n        }\n      }\n\n      // issue#83 sequential adjectives(jc): (?:dt)? (?:jj)* (nn) (?:jj)* nn \n      // && $1 can be tagged as jj-> $1 convert to jj (e.g a light blue sky)\n      if (tag === \"nn\" && result.slice(i + 1).includes(\"nn\")) {\n        let idx = result.slice(i + 1).indexOf(\"nn\");\n        let allJJ = true; // between nn and nn are all jj\n        for (let k = 0; k < idx; k++) {\n          if (result[i + 1 + k] !== \"jj\") {\n            allJJ = false;\n            break;\n          }\n        }\n        if (allJJ && this.allTags(word).includes('jj')) {\n          tag = \"jj\";\n        }\n      }\n\n      // https://github.com/dhowe/rita/issues/148 \n      // \"there\"\n      if (word.toLowerCase() === \"there\") {\n        if (words[i + 1] && EX_BE.includes(words[i + 1])) {\n          tag = \"ex\";\n        }\n        if (i > 0 && result[i - 1] === \"in\") {\n          tag = \"nn\"\n        }\n      }\n\n      // https://github.com/dhowe/rita/issues/65 #HWF\n      if (word.includes(\"-\")) {\n        if (result[i] !== '__HYPH__') continue; // in dict\n        if (word === '--') continue; // double hyphen treated as dash\n        if (HYPHENATEDS.hasOwnProperty(word)) {\n          result[i] = HYPHENATEDS[word];\n          if (dbug) console.log(word + \": \" + HYPHENATEDS[word] + \" ACC: special\");\n          continue;\n        }\n        tag = this._tagCompoundWord(word, tag, result, words, i, dbug);\n      }\n\n      result[i] = tag;\n    }\n\n    return result;\n  }\n\n  // determine tag for compound (hyphenated) word\n  _tagCompoundWord(word, tag, result, context, i, dbug) { // #HWF\n\n    let words = word.split(\"-\");\n    let firstPart = words[0], lastPart = words[words.length - 1];\n    let firstPartAllTags = this.allTags(firstPart);\n    let lastPartAllTags = this.allTags(lastPart);\n\n    if (words.length === 2 && VERB_PREFIX.includes(words[0])\n      && lastPartAllTags.some(t => /^vb/.test(t))) {\n\n      tag = lastPartAllTags.find(t => /^vb/.test(t));\n      if (dbug) console.log(word + \": \" + tag + \" ACC: prefix-vb\");\n    }\n    else if (words.length === 2 && NOUN_PREFIX.includes(words[0])\n      && lastPartAllTags.some(t => /^nn/.test(t))) {\n\n      tag = lastPartAllTags.find(t => /^nn/.test(t));\n      if (dbug) console.log(word + \": \" + tag + \" ACC: prefix-nn\");\n    }\n    else if (firstPartAllTags.some(t => /^cd/.test(t))) {\n\n      // numbers\n      let allCD = true;\n      for (let z = 1; z < words.length; z++) {\n        let part = words[z];\n        if (!(this.allTags(part).some(t => /^cd/.test(t)))) {\n          allCD = false;\n          break;\n        }\n      }\n      if (allCD) {\n        tag = \"cd\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: cd(-cd)+ \");\n      }\n      else {\n        //ordinal number like twenty-first\n        tag = \"jj\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: cd(-jj/nn)+ \");\n      }\n    }\n    else if (firstPartAllTags.some(t => t.startsWith('jj'))\n      && words.length === 2 && lastPartAllTags.some(t => t.startsWith('nn'))) {\n\n      tag = 'jj'\n      if (dbug) console.log(word + \": \" + tag + \" ACC: jj-nn\");\n    }\n    else if (firstPartAllTags.some(t => t === 'vb')\n      && !firstPartAllTags.some(t => t.startsWith('jj'))) {\n\n      // first part is vb\n      if (words.length === 2\n        && lastPartAllTags.some(t => t === 'in')) {\n\n        // verb phrase with in, e.g. blush-on tip-off get-together run-in\n        tag = \"nn\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: vb-in\");\n      }\n      else if (words.length === 2\n        && lastPartAllTags.some(t => /^(vb[gdp])/.test(t))\n        && !lastPartAllTags.some(t => /^vb$/.test(t))) {\n\n        // man-eating\n        tag = \"jj\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: vb-vbg/vbd/vbp\");\n      }\n      else if (words.length === 2 && lastPartAllTags.some(t => t.startsWith('jj'))) {\n        tag = 'jj'\n        if (dbug) console.log(word + \": \" + tag + \" ACC: vb-jj\");\n      }\n      else {\n        tag = \"nn\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: vb(-.)+ general\");\n      }\n    }\n    else if (((lastPartAllTags.some(t => /^(jj[rs]?)/.test(t))\n      && !lastPartAllTags.some(t => t.startsWith('nn')))\n      || lastPartAllTags.some(t => /^vb[dgn]/.test(t)))) {\n\n      // last part is jj or vbd/vbn/vbg\n      tag = \"jj\"\n      if (dbug) console.log(word + \": \" + tag + \" ACC: last part jj or vbd/vbg\");\n    }\n    else if (lastPartAllTags.some(t => /^[n]/.test(t))) {\n\n      // last part is a noun\n      if (firstPartAllTags.some(t => /^(in|rb)/.test(t))) {\n        // over-the-counter; before-hand etc\n        tag = \"jj\"\n        if (dbug) console.log(word + \": \" + tag + \" ACC: in/rb(-.)*-nn\");\n      }\n      else {\n        let lastNounIsMajor = true;\n        for (let z = 0; z < words.length - 1; z++) {\n          let part = words[z];\n          if (!(this.allTags(part).some(t => /^([jn]|dt|in)/.test(t)))) {\n            lastNounIsMajor = false;\n            break;\n          }\n        }\n        if (lastNounIsMajor) {\n          tag = \"nn\"\n          if (dbug) console.log(word + \": \" + tag + \" ACC: all nn\");\n        }\n        else {\n          tag = \"jj\"\n          if (dbug) console.log(word + \": \" + tag + \" ACC: (.-)+nn\");\n        }\n      }\n    }\n    else if (firstPartAllTags.some(t => t.startsWith('n'))) {\n      // first part can be a noun: father-in-law etc.\n      // numbers depend on this noun\n      tag = this.RiTa.inflector.isPlural(words[0]) ? \"nns\" : \"nn\";\n      if (dbug) console.log(word + \": \" + tag + \" ACC: nn(-.)+\");\n    }\n    else {\n      tag = \"nn\"; //generually it should be nn\n      if (dbug) console.log(word + \": \" + tag + \" ACC: no rule hit\");\n    }\n\n    // change according to context\n    if (result[i + 1] && result[i + 1].startsWith(\"n\") && tag.startsWith(\"n\")) {\n      //next word is a noun\n      tag = \"jj\";\n    }\n    else if (tag === 'jj' && result[i + 1] && result[i + 1].startsWith(\"v\")) {\n      //next word is a verb, last part is rb/verb\n      tag = \"rb\";\n    }\n    else if (result[i + 1] && result[i + 1].startsWith(\"v\") && tag === 'jj') {\n      tag = \"rb\"\n    }\n    else if (tag === 'jj' && context[i - 1] && ARTICLES.includes(context[i - 1].toLowerCase().trim())) {\n      if (!context[i + 1] || (result[i + 1] && /^(v|cc|in|md|w)/.test(result[i + 1])) || this.RiTa.isPunct(context[i + 1])) {\n        tag = 'nn';\n      }\n    }\n    return tag;\n  }\n\n  _lexHas(pos, word) { // takes ([n|v|a|r] or a full tag\n    if (typeof word === 'string') {\n      let tags = this.RiTa.lexicon._posArr(word);\n      if (!tags) return false;\n      for (let j = 0; j < tags.length; j++) {\n        if (pos === tags[j]) return true;\n        if (pos === 'n' && NOUNS.includes(tags[j]) ||\n          pos === 'v' && VERBS.includes(tags[j]) ||\n          pos === 'r' && ADVS.includes(tags[j]) ||\n          pos === 'a' && ADJS.includes/*.isAdjTag*/(tags[j])) {\n          return true;\n        }\n      }\n    }\n  }\n}\n\nconst ADJS = ['jj', 'jjr', 'jjs'];\nconst ADVS = ['rb', 'rbr', 'rbs', 'rp'];\nconst NOUNS = ['nn', 'nns', 'nnp', 'nnps'];\nconst VERBS = ['vb', 'vbd', 'vbg', 'vbn', 'vbp', 'vbz'];\nconst EX_BE = [\"is\", \"are\", \"was\", \"were\", \"isn't\", \"aren't\", \"wasn't\", \"weren't\"];\n\n//#HWF\nconst HYPHENATEDS = {\n  \"well-being\": \"nn\", // by rules should be jj, like 'good-looking'\n  \"knee-length\": \"jj\", // by rules should be nn, coz all parts are noun, like 'gift-wrap'\n  \"king-size\": 'jj', // by rules should be nn, coz all parts are noun\n  \"ho-hum\": 'uh', // by rules should be nn, coz all parts are noun as ho will be recognise as nn in the algorithm\n  \"roly-poly\": 'jj', // by rules should be nn, coz all parts are recognise as nn in the algorithm\n  \"nitty-gritty\": 'nn', // by rules should be jj, coz gritty is jj\n  \"topsy-turvy\": 'jj', // by rules should be nn, coz all parts are recognise as nn in the algorithm\n};\nconst VERB_PREFIX = [\"de\", \"over\", \"re\", \"dis\", \"un\", \"mis\", \"out\", \"pre\", \"post\", \"co\", \"fore\", \"inter\", \"sub\", \"trans\", \"under\"];\nconst NOUN_PREFIX = [\"anti\", \"auto\", \"de\", \"dis\", \"un\", \"non\", \"co\", \"over\", \"under\", \"up\", \"down\", \"hyper\", \"mono\", \"bi\", \"uni\", \"di\", \"semi\", \"omni\", \"mega\", \"mini\", \"macro\", \"micro\", \"counter\", \"ex\", \"mal\", \"neo\", \"out\", \"poly\", \"pseudo\", \"super\", \"sub\", \"sur\", \"tele\", \"tri\", \"ultra\", \"vice\"];\n//const ADJECTIVE_PREFIX = [\"dis\", \"non\", \"semi\", \"un\"]; // JC: not used?\nconst ARTICLES = ['the', 'a', 'an', 'some'];\n\nexport default Tagger;\n","import Util from './util.js';\n\n/**\n * @class Inflector\n * @memberof module:rita\n */\nclass Inflector {\n\n  constructor(parent) {\n    this.RiTa = parent;\n  }\n\n  adjustNumber(word, type, dbug) {\n\n    if (word && typeof word !== 'string') {\n\n      // TODO: fix for singularize([1]) and similar calls\n      throw Error(`${type === SING ? 'singularize()' : 'pluralize()'}`\n        + ' requires a string as input');\n    }\n\n    if (!word) return '';\n    word = word.trim();\n    if (!word.length) return '';\n\n    let check = word.toLowerCase();\n    \n    if (this.RiTa.lexicon.isMassNoun(check)) {\n    //if (this.RiTa.MASS_NOUNS.includes(check)) { // 12/6/23\n      dbug && console.log(word + ' hit MASS_NOUNS');\n      return word;\n    }\n\n    let rules = type === SING ? SING_RULES : PLUR_RULES;\n    for (let i = 0; i < rules.length; i++) {\n      let rule = rules[i];\n      if (rule.applies(check)) {\n        dbug && console.log(word + ' (' + (type === SING ? 'singularize' : 'pluralize')\n          + ') hit ' + (type === SING ? 'singular' : 'plural')\n          + (i < rules.length - 1 ? ' rule #' + i : ' DEFAULT rule'), rule);\n        return rules[i].fire(word);\n      }\n    }\n\n    return word;\n  }\n\n  singularize(word, opts) {\n    // if (this.isSingular(word, opts)) {   // 12/6/23\n    //   if (opts && opts.debug) console.log(\"pluralize returning via isPlural()\");\n    //   return word;\n    // }\n    return this.adjustNumber(word, SING, (opts && opts.dbug));\n  }\n\n  pluralize(word, opts) {\n    if (this.isPlural(word, opts)) {\n      if (opts && opts.debug) console.log(\"pluralize returning via isPlural()\");\n      return word;\n    }\n    return this.adjustNumber(word, PLUR, (opts && opts.dbug));\n  }\n\n  /*isSingular(word, opts) { \n    // return false;\n    // if (word && typeof word !== 'string') {\n    //   throw Error(`isSingular() takes string`);\n    // }\n    if (!word || !word.length) return false;\n\n    let dbug = opts && opts.dbug;\n\n    word = word.toLowerCase();\n\n    if (this.RiTa.MASS_NOUNS.includes(word)) {\n      dbug && console.log(word + \" is mass noun\");\n      return true;\n    }\n\n    return NOUNS_ENDING_IN_S.includes(word);\n  }*/\n\n  isPlural(word, opts) { // add to API?\n\n    // if (word && typeof word !== 'string') {\n    //   throw Error(`isPlural() takes string`);\n    // }\n    if (!word || !word.length) return false;\n\n    let dbug = opts && opts.dbug;\n\n    word = word.toLowerCase();\n\n    if (this.RiTa.lexicon.isMassNoun(word)) { // 12/6/23\n      dbug && console.log(word + \" is mass noun\");\n      return true;\n    }\n\n    for (let i = 0; i < IS_PLURAL_RULES.length; i++) {\n      let rule = IS_PLURAL_RULES[i];\n      if (rule.test(word)) {\n        dbug && console.log(word + ' (isPlural) hit plural'\n          + (i < IS_PLURAL_RULES.length - 1 ? ' rule #' + i : ' DEFAULT rule'), rule);\n        return true;\n      }\n    }\n    dbug && console.log(word + \" (isPlural) hit no plural rules\");\n\n    // A general modal form? (for example, ends in 'ness')\n    if (/([a-z]+ness)$/.test(word)) {\n      if (!this.RiTa.MODAL_EXCEPTIONS.includes(word)) {\n        dbug && console.log(word + \" is general modal form\");\n        return true;\n      }\n      else {\n        dbug && console.log(word + \" is modal exception\");\n        // return false; QUESTION: return here?\n      }\n    }\n\n    let sing = this.singularize(word, opts);\n\n    // Is singularized form different \n    if (sing !== word) {\n\n      if (word.endsWith(\"ae\") && word === sing + \"e\") {\n        dbug && console.log(word + \": latin rule -a to -ae\");\n        return true;\n      }\n\n      //if (this.RiTa.HAS_LEXICON) {\n        // It it in lexicon as 'nn' (with noGuessing)?\n        let tags = this.RiTa.tagger.allTags(sing, { noGuessing: true });\n        if (tags.includes(\"nn\")) { // fix for words like 'child' ?\n          // mass nouns should have been detected above\n          dbug && console.log(word + \"'s singular form \" + sing + \" is nn\");\n          return true;\n        }\n      // }\n      // else { // no lexicon and a singular form that is different\n      //   return true;\n      // }\n    }\n\n    dbug && console.log(word + ' (isPlural) no matches, return false');\n\n    return false;\n  }\n}\n\nconst RE = Util.RE;\nconst PLUR = 1, SING = 2;\nconst DEFAULT_SING = RE(\"^.*[^s]s$\", 1);\nconst DEFAULT_PLUR = RE(\"^((\\\\w+)(-\\\\w+)*)(\\\\s((\\\\w+)(-\\\\w+)*))*$\", 0, \"s\");\n\n//const DEFAULT_IS_PLUR_RE = /(ae|ia|s)$/; // NOT USED?\nconst NOUNS_ENDING_IN_E = \"abeyance|abode|aborigine|abrasive|absence|absentee|absolute|abstinence|abundance|abuse|acceptance|accolade|accomplice|accordance|ace|acetate|acetone|acetylene|ache|acolyte|acquaintance|acquiescence|acquire|acre|acreage|active|acupuncture|acute|adage|additive|addressee|adherence|adhesive|adjective|admittance|adobe|adolescence|adoptee|adrenaline|advance|advantage|adventure|advocate|aerospace|affiliate|affirmative|affluence|agate|age|aggregate|agriculture|aide|airfare|airframe|airline|airplane|airtime|airwave|aisle|alcove|ale|algae|allegiance|alliance|allowance|allure|alternate|alternative|altitude|ambiance|ambivalence|ambulance|amphetamine|amplitude|analogue|anchorage|anecdote|angle|ankle|annoyance|anode|ante|antelope|antidote|antihistamine|antique|anyone|ape|aperture|apocalypse|apogee|apostle|appearance|appellate|appendage|appetite|apple|appliance|appointee|apprentice|approximate|aptitude|aquamarine|arbitrage|arcade|archetype|architecture|archive|armistice|arrearage|arrogance|artichoke|article|artifice|assemblage|associate|assurance|athlete|atmosphere|attache|attendance|attendee|attire|attitude|attribute|audience|audiophile|auspice|autoclave|automobile|avalanche|avarice|avenue|average|avoidance|awe|axe|axle|babble|babe|backbone|backhoe|backside|badge|bagpipe|bakeware|balance|bale|bandage|bane|banshee|barbecue|barge|baritone|barnacle|baroque|barrage|barricade|base|baseline|bathrobe|battle|bauble|beadle|bedside|bedtime|bee|beehive|beetle|belligerence|beneficence|benevolence|benzene|beverage|bible|bicarbonate|bicycle|biggie|bike|bile|billionaire|binge|biplane|birdie|birthplace|birthrate|bisque|bite|blade|blame|blanche|blase|blaze|blockade|blockage|bloke|blonde|blouse|blue|boardinghouse|boilerplate|bondage|bone|bonfire|boogie|bookcase|bookie|bookstore|boondoggle|borderline|bore|bottle|bounce|bourgeoisie|boutique|bovine|brace|brake|bramble|breakage|breeze|bribe|bride|bridge|bridle|brie|briefcase|brigade|brilliance|brindle|brine|bristle|broadside|brocade|brochure|brokerage|bromide|bronze|brownie|bruise|brunette|brute|bubble|buckle|bugle|bulge|bundle|bustle|butane|buttonhole|byline|byte|cabbage|cable|cache|cadence|cadre|cafe|caffeine|cage|cake|calorie|camaraderie|camouflage|campfire|campsite|candidate|candle|cane|canine|canoe|cantaloupe|capacitance|cape|capsule|captive|capture|carbide|carbine|carbohydrate|carbonate|care|caricature|carnage|carnivore|carriage|cartilage|cartridge|cascade|case|cashmere|cassette|caste|castle|catalogue|catastrophe|cathode|cattle|cause|cave|cayenne|ceasefire|cellophane|censure|centerpiece|centre|centrifuge|certificate|chaise|challenge|champagne|chance|change|chaperone|charge|charlotte|chase|cheekbone|cheese|cheesecake|chemise|childcare|chimpanzee|chive|chloride|chlorine|chocolate|choice|choke|chore|chrome|chromosome|chronicle|chuckle|chute|cigarette|ciliate|circle|circumference|circumstance|clairvoyance|classmate|clause|clearance|clearinghouse|cleavage|cliche|clientele|climate|clime|clique|closure|cloture|clove|clozapine|clubhouse|clue|coastline|cobblestone|cocaine|code|coexistence|coffee|cognizance|coherence|coincidence|coke|collage|collapse|collarbone|colleague|collective|college|collie|cologne|colonnade|columbine|combine|comeuppance|comfortable|commemorative|commerce|committee|commonplace|commune|communique|commute|comparative|compare|competence|composite|composure|compote|compromise|comrade|concentrate|concessionaire|concierge|conclave|concrete|concurrence|condensate|condolence|cone|conferee|conference|confidante|confidence|confluence|conformance|conglomerate|congruence|conjecture|connivance|conscience|consequence|conservative|consistence|constable|consulate|continuance|contraceptive|contrivance|convalescence|convenience|converse|convertible|conveyance|cookie|cookware|cooperative|coordinate|cope|core|cornerstone|corpse|correspondence|corsage|cortisone|corvette|costume|coterie|cottage|countenance|counterbalance|counterforce|countermeasure|countryside|coupe|couple|courage|course|courthouse|couture|cove|coverage|cowardice|coyote|crackle|cradle|crane|crate|craze|crease|creature|credence|creole|crevice|crime|cripple|critique|crocodile|crone|crossfire|crucible|crude|cruise|crusade|cubbyhole|cube|cue|cuisine|culture|curbside|cure|curse|curve|cyanide|cycle|dale|damage|dame|daminozide|dance|dare|database|date|daytime|daze|deadline|debacle|debate|debutante|decade|decadence|decline|decrease|decree|defense|defensive|deference|defiance|degree|delegate|deliverance|deluge|demagogue|demise|denture|departure|dependence|deportee|deregulate|derivative|designate|designee|desire|detective|detente|deterrence|deviance|device|devotee|dialogue|diatribe|die|difference|dike|dime|dinnertime|dinnerware|dioxide|dipole|directive|directorate|dirge|disadvantage|disallowance|disappearance|discharge|disciple|discipline|disclosure|discontinuance|discotheque|discourse|disease|disgrace|disguise|disincentive|diskette|dislike|disobedience|displeasure|disposable|dispute|disrepute|disservice|dissolve|dissonance|distance|distaste|distillate|disturbance|dive|divergence|divestiture|divide|divine|divorce|divorcee|dockside|doctorate|doctrinaire|doctrine|dodge|doe|doghouse|dole|dome|dominance|dope|dosage|dose|double|dove|downgrade|downside|downtime|draftee|drainage|drape|drawbridge|dribble|drive|drizzle|drone|drove|drugstore|due|duke|dune|dye|dyke|dynamite|eagle|earphone|earthenware|earthquake|ease|eave|eclipse|edge|edifice|effective|electorate|electrode|elegance|eligible|elite|eloquence|else|elsewhere|embrace|emcee|emergence|emigre|eminence|empire|employee|enclave|enclosure|encore|endurance|engine|enrage|enrollee|ensemble|enterprise|entire|entourage|entrance|entre|envelope|enzyme|epicure|epilogue|episode|epitome|equine|equivalence|escapade|escape|escapee|espionage|esplanade|essence|estate|estimate|ethane|ethylene|etiquette|eve|everyone|example|excellence|exchange|excise|exclusive|excuse|executive|exercise|exile|existence|expanse|expatriate|expenditure|expense|experience|expletive|explosive|expose|exposure|extravagance|extreme|exuberance|eye|eyepiece|eyesore|fable|facade|face|facsimile|fade|failure|faire|fake|fame|famine|fanfare|farce|fare|farmhouse|fashionable|fate|fatigue|favorite|feature|fee|female|feminine|fence|fiance|fiancee|fiddle|figure|file|filigree|finale|finance|fine|finesse|finite|fire|firehouse|fireplace|fixture|flagpole|flake|flame|flange|flare|flatware|fleece|flextime|floe|flue|fluke|fluoride|flute|foe|foible|folklore|foodservice|footage|footnote|forage|forbearance|force|fore|foreclosure|forfeiture|forge|formaldehyde|formative|fortitude|fortune|foursome|foxhole|fracture|fragrance|frame|franchise|franchisee|freebie|freeze|fridge|frieze|frigate|fringe|frontage|frostbite|fudge|fugitive|fumble|fungicide|furnace|fuse|fuselage|fusillade|future|gabardine|gable|gaffe|gage|gaggle|gale|gallstone|gamble|game|garage|gasoline|gate|gauge|gaze|gazelle|gemstone|gendarme|gene|genie|genocide|genome|genre|gentile|gesture|giggle|girdle|girlie|glade|glance|glare|glassware|glaze|glee|glimpse|globe|glove|glue|glutamate|gnome|goatee|gobble|goggle|goodbye|google|goose|gorge|governance|grace|grade|graduate|granite|grape|grapevine|graphite|grate|grave|greenhouse|grenade|grievance|grille|grime|grindstone|gripe|groove|grouse|grove|grudge|guarantee|guesstimate|guidance|guide|guideline|guile|guillotine|guise|gunfire|gurgle|gyroscope|habitue|hackle|haggle|hairline|halftime|handle|handshake|happenstance|harborside|hardcore|hardline|hare|hassle|haste|have|headache|headline|headphone|healthcare|hearse|heave|hectare|hedge|heliotrope|hellfire|hemisphere|hemline|hemorrhage|herbicide|heritage|heroine|hide|hike|hillside|hindrance|hinge|hippie|hire|hive|hodgepodge|hoe|hole|homage|home|homicide|hone|honeybee|honorable|hope|horde|hormone|horoscope|horrible|horse|horticulture|hose|hospice|hostage|hostile|hotline|house|houseware|housewife|huddle|hue|hurdle|hurricane|hustle|hydride|hygiene|hype|hyperbole|hypocrite|ideologue|ignorance|image|imbalance|immense|immune|impasse|impatience|imperative|imponderable|importance|impotence|imprudence|impulse|incapable|incentive|incidence|incline|incoherence|income|incompetence|incomprehensible|inconvenience|increase|indefinite|indenture|indifference|indispensable|inductee|indulgence|ineptitude|inexperience|infallible|inference|infinite|influence|infrastructure|inheritance|initiate|initiative|injustice|inmate|innocence|insecticide|inside|insignificance|insistence|insolence|insoluble|instance|institute|insurance|intake|intangible|intelligence|intelligible|intensive|interchange|intercourse|interdependence|interestrate|interface|interference|interlude|interstate|interviewee|intestine|intimate|intolerance|intransigence|intrigue|invective|inverse|invertebrate|invite|invoice|iodide|iodine|ire|irresponsible|irreverence|isle|issuance|issue|jade|jailhouse|jasmine|jawbone|jibe|jingle|joke|joyride|judge|juice|jumble|juncture|jungle|junkie|jute|juvenile|kale|kaleidoscope|kamikaze|karaoke|keepsake|kerosene|kettle|keyhole|keynote|keystone|kiddie|kilobyte|kitchenette|kitchenware|kite|knee|knife|knuckle|lace|ladle|lake|lance|landscape|landslide|lane|language|lapse|largesse|lathe|latitude|lattice|laureate|laxative|league|leakage|lease|leave|lecture|ledge|legislature|legume|leisure|lemonade|lettuce|levamisole|levee|leverage|libertine|license|licensee|lie|life|lifeline|lifestyle|lifetime|lighthouse|lignite|lime|limestone|limousine|linage|line|lineage|lingerie|linkage|liposome|literature|litle|loave|lobe|lobule|locale|locomotive|lodge|longitude|longtime|loophole|lope|lore|lounge|louse|love|lube|luminescence|lunchtime|lure|lustre|lute|lye|lymphocyte|machete|machine|madhouse|madstone|magazine|magistrate|magnate|magnitude|mainframe|mainline|maintenance|make|male|malice|malpractice|mandate|mane|manganese|manhole|manmade|mantle|manufacture|manure|maple|marble|mare|margarine|marine|marketplace|marmalade|marque|marquee|marriage|martingale|masculine|masquerade|massacre|massage|masterpiece|mate|matte|maze|mealtime|meantime|meanwhile|measure|medicare|medicine|megabyte|melamine|melange|melee|membrane|menace|merge|message|methadone|methane|methylene|mettle|microbe|micromanage|microphone|microscope|microwave|middle|midrange|midwife|migraine|mile|mileage|milestone|millionaire|mine|miniature|miniscule|minute|miracle|mire|misadventure|misanthrope|miscarriage|miscue|misfortune|missile|missive|mistake|mistletoe|misuse|mite|mitre|mixture|mode|module|moisture|mole|molecule|mollycoddle|monologue|monotone|montage|moraine|more|morgue|morphine|mortgage|mosque|motive|motorbike|motorcade|motorcycle|mottle|mountainside|mouse|mousse|moustache|mouthpiece|movable|move|movie|moxie|muddle|mule|multiple|multistate|multitude|mumble|muscle|musculature|muse|mustache|muzzle|myrtle|mystique|naive|naivete|name|nameplate|namesake|narrative|native|nature|necklace|necktie|needle|negative|negligence|neophyte|nerve|newswire|nibble|niche|nickname|nicotine|niece|nightingale|nightmare|nighttime|nitrate|node|nodule|noise|nomenclature|nominee|noncompliance|none|nonviolence|noodle|noose|nose|nosedive|note|notice|novice|nowhere|nozzle|nuance|nude|nudge|nuisance|nuke|nurse|nurture|obedience|objective|oblige|observance|obsessive|obstacle|obverse|occurrence|ochre|octane|ode|offense|offensive|office|ogre|ole|olive|omnipotence|omnipresence|onstage|operative|opposite|opulence|oracle|orange|ordinance|ordnance|ore|orifice|orphanage|ounce|outage|outcome|outhouse|outline|outrage|outshone|outside|overdose|overdrive|override|oversize|overtime|overtone|overture|oxide|ozone|pace|package|paddle|page|palace|palate|pale|palette|palisade|panache|pancake|pane|panhandle|pantie|pantomime|parable|parachute|parade|paraphrase|parasite|parentage|parlance|parole|parolee|parsonage|particle|passage|passive|paste|pastime|pasture|pate|patience|patronage|pause|peacetime|pebble|pedigree|penance|pence|penthouse|people|percentage|perchlorate|performance|perfume|permanence|permissible|peroxide|perquisite|persistence|perspective|pesticide|pestilence|petulance|phase|phone|phosphate|phrase|physique|pickle|picture|picturesque|pie|piece|pile|pilgrimage|pimple|pine|pineapple|pinhole|pinnacle|pipe|pipeline|pique|pirate|pittance|place|plague|plane|plaque|plate|platitude|plausible|playhouse|playmate|pleasure|pledge|plumage|plume|plunge|poke|pole|polyurethane|poodle|poolside|pope|populace|porcupine|pore|porpoise|porridge|portable|pose|positive|posse|postage|posture|potentate|pothole|poultice|powerhouse|practice|prairie|praise|prattle|preamble|precedence|precipice|precipitate|predominance|preface|prefecture|preference|prejudice|prelude|premiere|premise|preponderance|preppie|prerequisite|prerogative|presale|presence|preserve|pressure|prestige|pretense|prevalence|preventive|price|primate|prime|primetime|prince|principle|private|privilege|prize|probate|probe|procedure|produce|profile|progressive|projectile|promenade|prominence|promise|propane|propylene|prostate|prostitute|protective|protege|prototype|provenance|providence|province|prude|prudence|prune|psyche|puddle|pulse|purchase|purge|purple|purpose|purse|puzzle|quagmire|quake|questionnaire|queue|quiche|quickie|quince|quinine|quote|rabble|race|racehorse|radiance|rage|ragtime|railbike|raise|rake|rampage|range|rape|rapture|rate|rationale|rattle|rattlesnake|rawhide|realestate|reappearance|reassurance|rebate|rebuke|receivable|receptacle|recharge|recipe|recluse|recognizance|reconfigure|reconnaissance|recourse|rectangle|rectitude|recurrence|redone|referee|reference|refuge|refugee|refuse|reggae|regime|reignite|reinsurance|reissue|relapse|relative|release|relevance|reliance|relocate|reluctance|remade|remembrance|reminiscence|remittance|renaissance|renegade|repartee|repentance|repertoire|reportage|representative|reprieve|reptile|repurchase|repute|resale|rescue|resemblance|reserve|reshuffle|residence|residue|resilience|resistance|resolve|resonance|resource|respite|response|restructure|resume|resurgence|reticence|retinue|retiree|retrospective|revenge|revenue|reverence|reverie|reverse|rewrite|rhinestone|rhyme|riddance|riddle|ride|ridge|ridicule|rifle|ringside|rinse|ripple|rite|riverside|roadside|robe|role|romance|rooftree|rookie|roommate|rope|rose|rosette|rote|rouge|roulette|roundhouse|route|routine|rubble|ruble|rue|rule|rumble|rupee|rupture|ruse|russe|rye|sable|sabotage|sabre|sacrifice|sacrilege|saddle|safe|sage|sake|sale|saline|salute|salvage|salve|sample|sanguine|sardine|satellite|satire|sauce|sausage|savage|saxophone|scale|scare|scene|schedule|scheme|schoolhouse|schoolmate|science|scope|score|scourge|scramble|scrape|scribe|scrimmage|scripture|scuffle|sculpture|seashore|seaside|sedative|seepage|seizure|semblance|senate|sense|sensible|sensitive|sentence|sequence|serenade|serene|serve|service|servitude|sesame|severance|sewage|shade|shake|shape|share|shave|shinbone|shine|shingle|shipmate|shirtsleeve|shoe|shoelace|shore|shoreline|shortage|shortcake|shove|showcase|showpiece|shrine|shrinkage|shuffle|shuttle|side|sideline|siege|sieve|signature|significance|silence|silhouette|silicate|silicone|silverware|simile|simple|sine|single|sinkhole|site|size|sizzle|skyline|skywave|slate|slaughterhouse|slave|sleeve|slice|slide|slime|slippage|slope|sludge|sluice|smile|smoke|smudge|snake|snare|snowflake|socialite|solace|sole|solicitude|solitude|some|someone|someplace|somewhere|sophisticate|sophomore|sore|souffle|source|space|spade|spangle|spate|spectacle|spectre|sphere|spice|spike|spindle|spine|spire|spite|spittle|splice|splurge|spoilage|spoke|sponge|spore|spouse|spree|springtime|sprinkle|spruce|squabble|square|squeegee|squeeze|squire|stable|stage|staircase|stake|stalemate|stampede|stance|staple|stare|state|statue|stature|statute|steakhouse|steppe|stereotype|stethoscope|stockpile|stone|stoneware|stooge|stoppage|storage|store|storehouse|storyline|stove|stratosphere|stricture|stride|strife|strike|stripe|striptease|strobe|stroke|structure|struggle|strychnine|stubble|stumble|stumpage|style|styrene|subcommittee|sublease|sublime|submarine|subordinate|subservience|subsidence|subsistence|substance|substantive|substitute|substrate|subterfuge|subtitle|suburbanite|suede|suffrage|suffragette|sugarcane|suicide|suitcase|suite|sulfide|summertime|sunrise|sunshine|superstore|superstructure|supine|supreme|surcharge|surface|surge|surname|surprise|surrogate|surveillance|susceptible|sustenance|suture|swerve|swipe|sycamore|syllable|synagogue|syndicate|syndrome|syringe|table|tableware|tackle|tadpole|tagline|tailgate|tailpipe|take|tale|tambourine|tangle|tape|taste|teammate|tease|technique|tee|telephone|telescope|teletype|telltale|temperance|temperature|template|temple|tempore|tense|tentacle|tentative|tenure|termite|terrace|testicle|testosterone|textile|texture|theme|thimble|thistle|thoroughfare|threesome|throne|throttle|tide|tie|tightrope|tile|timbre|time|timepiece|timetable|tincture|tine|tintype|tirade|tire|tissue|titanate|title|toe|toffee|tole|tolerance|tombstone|tome|tone|tongue|tonnage|toothpaste|torque|tortoise|torture|touchstone|townhouse|trace|trackage|trade|trance|tranche|transcendence|transience|transverse|trapeze|travelogue|treasure|treatise|treble|tree|tremble|trestle|triage|triangle|tribe|tribute|trickle|trifle|triglyceride|tripe|triple|triumvirate|trombone|trouble|troupe|trove|truce|trudge|trundle|trustee|tube|tumble|tune|turbine|turbulence|turnpike|turntable|turpentine|turquoise|turtle|tussle|tutelage|twaddle|twine|twinge|twinkle|twosome|tyke|type|typeface|umbrage|umpire|unattainable|uncle|undergraduate|underperformance|underscore|underside|undertone|underwrote|undesirable|unfortunate|unique|universe|unlike|unthinkable|update|upgrade|upscale|upside|upsurge|urethane|urge|urine|usage|use|utterance|vaccine|value|valve|vampire|vane|vantage|variable|variance|vase|vaudeville|vegetable|vehicle|venerable|vengeance|venture|venue|verbiage|verge|verisimilitude|verse|vertebrate|verve|vestige|vibe|vice|vicissitude|videocassette|videotape|vigilance|vignette|village|vine|vintage|virtue|virulence|visage|vise|vogue|voice|voltage|volume|vote|voyage|vulture|waffle|wage|waggle|wale|wane|wardrobe|ware|warehouse|warfare|wartime|wattle|wave|wayside|weave|wedge|welcome|welfare|whale|wheeze|while|whine|whistle|white|whole|wholesale|whore|wife|wiggle|wile|wince|windowpane|wine|wintertime|wire|wobble|woe|workforce|workhorse|workplace|wreckage|wrinkle|yardage|yoke|yuppie|zombie|zone\";\n\n// TODO: divide into NOUNS_ENDING_IN_S (singular) and NNS_ENDS_IN_S (plural)\nconst NOUNS_ENDING_IN_S = \"abruptness|abscess|absoluteness|abyss|access|actress|address|aegis|aerobics|aggressiveness|albatross|alertness|alias|aloofness|alumnus|amicus|analysis|annals|antithesis|apotheosis|apparatus|appropriateness|arrears|arthritis|asbestos|asparagus|ass|assertiveness|astuteness|attractiveness|avionics|awareness|awfulness|awkwardness|axis|backwardness|backwoods|badness|baldness|basis|bass|bearishness|bellows|bias|bigness|billiards|bitterness|blackness|blandness|blindness|bliss|bluntness|boldness|bonus|boss|brashness|brass|brightness|bronchitis|bullishness|bus|business|bypass|cactus|calculus|calisthenics|callousness|calmness|campus|canvas|carcass|carelessness|catharsis|caucus|cautiousness|census|chaos|chassis|chess|chorus|circus|cirrhosis|citrus|class|cleanliness|cleverness|clones|closeness|cockiness|cohesiveness|coldness|colossus|commons|compass|competitiveness|completeness|congress|conscious|consciousness|consensus|contretemps|coolness|corpus|correctness|cosmos|countess|coziness|craziness|creativeness|crisis|crispness|cross|crossroads|cuteness|cutlass|cypress|dais|darkness|deadliness|deafness|debris|decisiveness|defensiveness|deliveries|diabetes|diagnosis|dialysis|dibs|digitalis|directness|discus|distinctiveness|distress|divisiveness|dizziness|doldrums|dominoes|downstairs|dramas|draughts|dreariness|dress|dross|drunkenness|dryness|dullness|duress|eagerness|earnestness|economics|edginess|effectiveness|electrodynamics|electrolysis|electronics|elusiveness|emeritus|emphasis|emptiness|encephalitis|epidermis|esophagus|ethics|ethos|eucalyptus|excess|exodus|express|eyeglasses|eyewitness|fairness|fastness|fetus|fiberglass|fibrosis|fickleness|firmness|fitness|flatness|focus|fondness|foolishness|forcefulness|forgiveness|forthrightness|fortress|fracas|frankness|freshness|friendliness|fullness|fungus|fuss|gallows|gas|gass|gauss|genesis|genius|gentleness|genus|givenness|glass|gloss|goddess|goodness|governess|grass|greatness|grimness|gross|guess|happiness|hardness|harness|harshness|headdress|headquarters|headwaters|heaves|heiress|helplessness|hepatitis|hiatus|highness|hoarseness|homeless|homelessness|homesickness|hopelessness|hoss|hostess|hubris|humanness|hustings|hydraulics|hydrolysis|hypnosis|hypothesis|idleness|ignoramus|illness|impatiens|impetus|impress|inches|indebtedness|indecisiveness|indoors|ineffectiveness|innards|institutes|inventiveness|isthmus|jackass|jeans|jitters|joblessness|joss|kindness|kiss|landes|largess|lass|lawlessness|leggings|lens|lightness|likeness|litmus|liveliness|locus|loneliness|loss|lotus|madness|mandamus|mass|mathematics|mattress|meanness|means|measles|mess|metamorphosis|metaphysics|metropolis|microeconomics|miniseries|minus|miss|mistress|molasses|morass|mortis|moss|mucus|narrowness|neatness|necrosis|nemesis|nervousness|news|nexus|nitrous|nothingness|nucleus|numbness|oasis|octopus|ogress|omnibus|oneness|onus|oodles|openness|opus|orderliness|outdoors|overpass|overseas|pancreas|pandanus|paralysis|parenthesis|pass|pathos|pediatrics|pelvis|persuasiveness|pervasiveness|pettiness|photosynthesis|physics|piles|playfulness|plus|pneumocystis|polis|politeness|politics|pompousness|powerlessness|preparedness|press|princess|proboscis|process|prognosis|progress|prospectus|prowess|psoriasis|psychoanalysis|quadriceps|queasiness|quickness|quietness|radius|randomness|readiness|reassess|recess|recklessness|redress|religious|remoteness|rendezvous|resourcefulness|responsiveness|restlessness|retrovirus|rhinoceros|riches|richness|righteousness|rightness|riskiness|robustness|roominess|rowdiness|ruckus|rudeness|ruthlessness|sadness|sameness|sassafras|scarves|schnapps|sclerosis|seamstress|selfishness|separateness|sepsis|series|seriousness|shallowness|shambles|sharpness|shortness|shortsightedness|sickness|silliness|sinus|skittishness|sloppiness|slovenliness|slowness|sluggishness|slyness|smallness|smithereens|smoothness|softness|soundness|species|spyglass|squeamishness|status|steadfastness|steadiness|steepness|stewardess|stiffness|stillness|stimulus|strangeness|stress|stubbornness|subconscious|success|suddenness|suds|summons|sunglasses|surfaceness|surplus|sweepstakes|sweetness|swiftness|swoops|synopsis|synthesis|tardiness|telecommunications|tenderness|tennis|terminus|tetanus|thermos|thesaurus|thesis|thickness|thinness|thoroughness|thrips|thrombosis|tidings|tightness|timeliness|togetherness|tongs|toss|toughness|trespass|tress|truss|truthfulness|tuberculosis|typhus|ugliness|unconscious|undress|uneasiness|unfairness|unhappiness|uniqueness|unpleasantness|unwillingness|upstairs|usefulness|uterus|vagueness|virus|vividness|waitress|walrus|wariness|waterworks|weakness|weariness|weightlessness|wellness|wetness|whereabouts|whiteness|wickedness|wilderness|wildness|willingness|witness|wonderfulness|worthiness\";\n\nconst IS_PLURAL_RULES = [\n  // a subset of SING_RULES, delete the rules that might cause false positive\n  /(houses|pluses|cases)$/,\n  /^(apices|cortices)$/,\n  /^(meninges|phalanges)$/,\n  /^(octopus|pinch|fetus|genus|sinus|tomato|kiss|pelvis)es$/,\n  /^(whizzes)$/,\n  /(l|w)ives$/,\n  /^(appendices|matrices)$/,\n  /^(indices|apices|cortices)$/,\n  /^(media|millennia|consortia|septa|memorabilia|data|femora)$/,\n  /^(memoranda|bacteria|curricula|minima|maxima|referenda|spectra|phenomena|criteria)$/,\n  /^[lm]ice$/,\n  /feet$/,\n  /teeth$/,\n  /children$/,\n  /geese$/,\n  /^concerti$/,\n  /people$/,\n  /^oxen/,\n  /(treatises|chemises)$/,\n  // other rules\n  /(human|german|roman|femur)s/,\n];\n\nconst SING_RULES = [\n  RE(\"^(stimul|alumn|termin|emerit)i$\", 1, \"us\"),\n  RE(\"(houses|pluses|cases)$\", 1, \"\"),\n  RE(\"^(apices|cortices)$\", 4, \"ex\"),\n  RE(\"^(meninges|phalanges)$\", 3, \"x\"), // x -> ges\n  RE(\"^(octopus|pinch|fetus|genus|sinus|tomato|kiss|pelvis)es$\", 2),\n  RE(\"^(whizzes)$\", 3),\n  RE(\"^(\" + NOUNS_ENDING_IN_E + \")s$\", 1, \"\"),\n  RE(\"^(\" + NOUNS_ENDING_IN_S + \")es$\", 2, \"\"),\n  RE(\"(l|w|kn)ives$\", 3, \"fe\"),\n  RE(\"(men|women)$\", 2, \"an\"),\n  RE(\"ves$\", 3, \"f\"),\n  RE(\"^(appendices|matrices)$\", 3, \"x\"),\n  RE(\"^(indices|apices|cortices)$\", 4, \"ex\"),\n  RE(\"^(gas|bus)es$\", 2),\n  RE(\"([a-z]+osis|[a-z]+itis|[a-z]+ness)$\", 0),\n  RE(\"^(stimul|alumn|termin)i$\", 1, \"us\"),\n  RE(\"^(media|millennia|consortia|septa|memorabilia|data)$\", 1, \"um\"),\n  RE(\"^(memoranda|bacteria|curricula|minima|maxima|referenda|spectra|phenomena|criteria)$\", 1, \"um\"), // Latin stems\n  RE(\"ora$\", 3, \"us\"),\n  RE(\"^[lm]ice$\", 3, \"ouse\"),\n  RE(\"[bcdfghjklmnpqrstvwxyz]ies$\", 3, \"y\"),\n  RE(\"(ces)$\", 1), // accomplices\n  RE(\"^feet$\", 3, \"oot\"),\n  RE(\"^teeth$\", 4, \"ooth\"),\n  RE(\"children$\", 3),\n  RE(\"geese$\", 4, \"oose\"),\n  RE(\"^concerti$\", 1, \"o\"),\n  RE(\"people$\", 4, \"rson\"),\n  RE(\"^(vertebr|larv|minuti)ae$\", 1),\n  RE(\"^oxen\", 2),\n  RE(\"esses$\", 2),\n  RE(\"(treatises|chemises)$\", 1),\n  RE(\"(sh|ch|o|ss|x|z|us)es$\", 2),\n  RE(\"ses$\", 2, \"is\"), // catharses, prognoses\n\n  // singulars ending in s, TODO: replace with NOUNS_ENDING_IN_S list\n  RE(\"([vs]is|gas|[im]nus|genus|[ptbl]us|[ai]ss|[dr]ess)$\", 0), // octopus, thesis, alumnus, gas, bus (singulars)\n\n  DEFAULT_SING\n];\n\nconst PLUR_RULES = [\n  RE(\"(human|german|roman)$\", 0, \"s\"),\n  RE(\"^(monarch|loch|stomach|epoch|ranch)$\", 0, \"s\"),\n  RE(\"^(piano|photo|solo|ego|tobacco|cargo|taxi)$\", 0, \"s\"),\n  RE(\"(chief|proof|ref|relief|roof|belief|spoof|golf|grief)$\", 0, \"s\"),\n  RE(\"^(appendix|index|matrix|apex|cortex)$\", 2, \"ices\"),\n  RE(\"^concerto$\", 1, \"i\"),\n  RE(\"^prognosis\", 2, \"es\"),\n  RE(\"[bcdfghjklmnpqrstvwxyz]o$\", 0, \"es\"),\n  RE(\"[bcdfghjklmnpqrstvwxyz]y$\", 1, \"ies\"),\n  RE(\"^ox$\", 0, \"en\"),\n  RE(\"^(stimul|alumn|termin|emerit)us$\", 2, \"i\"), \n  RE(\"^corpus$\", 2, \"ora\"),\n  RE(\"(xis|sis)$\", 2, \"es\"),\n  //RE(\"(ness)$\", 0, \"es\"),\n  RE(\"whiz$\", 0, \"zes\"),\n  RE(\"motif$\", 0, \"s\"),\n  RE(\"[lraeiou]fe$\", 2, \"ves\"),\n  RE(\"[lraeiou]f$\", 1, \"ves\"),\n  RE(\"(eu|eau)$\", 0, \"x\"),\n  RE(\"(man|woman)$\", 2, \"en\"),\n  RE(\"person$\", 4, \"ople\"),\n  RE(\"^meninx|phalanx$\", 1, \"ges\"),\n  RE(\"schema$\", 0, \"ta\"),\n  RE(\"^(bus|gas)$\", 0, \"es\"),\n  RE(\"child$\", 0, \"ren\"),\n  RE(\"^(vertebr|larv|minuti)a$\", 0, \"e\"),\n  RE(\"^(maharaj|raj|myn|mull)a$\", 0, \"hs\"),\n  RE(\"^aide-de-camp$\", 8, \"s-de-camp\"),\n  RE(\"^weltanschauung$\", 0, \"en\"),\n  RE(\"^lied$\", 0, \"er\"),\n  RE(\"^tooth$\", 4, \"eeth\"),\n  RE(\"^[lm]ouse$\", 4, \"ice\"),\n  RE(\"^foot$\", 3, \"eet\"),\n  RE(\"goose\", 4, \"eese\"),\n  RE(\"^(co|no)$\", 0, \"'s\"),\n  RE(\"^blond$\", 0, \"es\"),\n  RE(\"^datum\", 2, \"a\"),\n  RE(\"([a-z]+osis|[a-z]+itis)$\", 0),\n  RE(\"([zsx]|ch|sh)$\", 0, \"es\"), // note: words ending in 's' often hit here, add 'es'\n  RE(\"^(medi|millenni|consorti|sept|memorabili)um$\", 2, \"a\"),\n  RE(\"^(memorandum|bacterium|curriculum|minimum|maximum|referendum|spectrum|phenomenon|criterion)$\", 2, \"a\"), // Latin stems\n  DEFAULT_PLUR\n];\n\nexport default Inflector;","import Util from './util.js';\n\n\n/**\n * Provides the phone list for words using the CMU6 letter-to-sound (LTS) rules,\n * which are based on the Black, Lenzo, and Pagel paper, \"Issues in Building\n * General Letter-to-Sound Rules.\" Proceedings of ECSA Workshop on Speech\n * Synthesis, pages 77-80, Australia, 1998.\n * @class LetterToSound\n * @memberof module:rita\n */\nclass LetterToSound {\n\n  constructor(parent) {\n    this.RiTa = parent;\n    this.cache = {}; // TODO: lts cache\n    this.letterIndex = {};\n    this.fval_buff = [];\n    this.numStates = 0;\n    this.stateMachine = null;\n    this.warnedForNoLTS = false;\n    this.tokenizer = new LtsTokenizer();\n    LetterToSound.RULES.forEach(r => this.parseAndAdd(r));\n  }\n\n  createState(type) {\n\n    if (type === \"S\") {\n      let index = parseInt(this.tokenizer.nextToken());\n      let c = this.tokenizer.nextToken();\n      let qtrue = parseInt(this.tokenizer.nextToken());\n      let qfalse = parseInt(this.tokenizer.nextToken());\n      return new DecisionState(index, c.charAt(0), qtrue, qfalse);\n    } else if (type === \"P\") {\n      return new FinalState(this.tokenizer.nextToken());\n    }\n    throw Error(\"Unexpected type: \" + type);\n  }\n\n  // Creates a word from an input line and adds it to the state machine\n  parseAndAdd(line) {\n\n    this.tokenizer.tokenize(line, ' ');\n    let type = this.tokenizer.nextToken();\n    if (type === \"S\" || type === \"P\") {\n      this.stateMachine[this.numStates++] = this.createState(type/*, this.tokenizer*/);\n    } else if (type === \"I\") {\n      let index = parseInt(this.tokenizer.nextToken());\n      if (index != this.numStates) {\n        throw Error(\"Bad index in file.\");\n      } else {\n        this.letterIndex[this.tokenizer.nextToken()] = index;\n      }\n    } else if (type == \"T\") {\n      this.stateMachine = [];\n      this.stateMachineSize = parseInt(this.tokenizer.nextToken());\n    }\n  }\n\n  buildPhones(word, opts) {\n\n    const RiTa = this.RiTa;\n\n    if (!word || !word.length || RiTa.isPunct(word)) return;\n\n    let phoneList = [], windowSize = 4;\n    let fullBuff, tmp, currentState, startIndex, stateIndex, c;\n\n    let silent = RiTa.SILENT || RiTa.SILENCE_LTS || (opts && opts.silent);\n    if (!LetterToSound.RULES) {\n      if (!this.warnedForNoLTS) {\n        this.warnedForNoLTS = true;\n        if (!silent) console.warn(\"[WARN] No LTS-rules: for \"\n          + \"words not in lexicon, use a full version of RiTa\");\n      }\n      return;\n    }\n\n    word = word.toLowerCase();\n\n    if (Util.isNum(word)) {\n      if (/^[0-9]+$/.test(word)) {\n        //if (RiTa.HAS_LEXICON) {\n          word = (word.length > 1) ? word.split('') : [word];\n          for (let k = 0; k < word.length; k++) {\n            let asWord = Util.Numbers.toWords[parseInt(word[k])];\n            let phs = RiTa.lexicon.rawPhones(asWord, { noLts: true });\n            phs = phs.replace(/1/g, '').replace(/ /g, '-');\n            phoneList.push(...phs.split('-'));\n          }\n          return phoneList;\n        //}\n      }\n      // else use Util.numbToWords()\n    }\n\n    // Create \"000#word#000\", uggh\n    tmp = \"000#\" + word.trim() + \"#000\", fullBuff = tmp.split('');\n\n    for (let pos = 0; pos < word.length; pos++) {\n      for (let i = 0; i < windowSize; i++) {\n        this.fval_buff[i] = fullBuff[pos + i];\n        this.fval_buff[i + windowSize] =\n          fullBuff[i + pos + 1 + windowSize];\n      }\n\n      c = word[pos];\n      if (c == \"'\") continue;\n      startIndex = this.letterIndex[c];\n\n      if (isNaN(parseFloat(startIndex)) || !isFinite(startIndex)) { // isNum\n        if (!silent) {\n          console.warn(\"Unable to generate LTS for '\" + word + \"', no index for '\" +\n            c + \"', isDigit=\" + Util.isNum(c) + \", isPunct=\" + RiTa.isPunct(c));\n        }\n        return;\n      }\n\n      stateIndex = parseInt(startIndex);\n      currentState = this.getState(stateIndex);\n      while (!(currentState instanceof FinalState)) {\n        stateIndex = currentState.getNextState(this.fval_buff);\n        currentState = this.getState(stateIndex);\n      }\n      currentState.append(phoneList);\n    }\n    return phoneList;\n  }\n\n  getState(i) {\n    if (typeof i === 'number') {\n      let state = null;\n      if (this.stateMachine[i] === ' ') {\n        state = this.getState(this.stateMachine[i]);\n      } else {\n        state = this.stateMachine[i];\n      }\n      return state;\n    } else {\n      this.tokenizer.tokenize(i);\n      return this.getState(this.tokenizer.nextToken())//, this.tokenizer);\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**  @memberof module:rita */\nclass LtsTokenizer {\n  tokenize(str, delim) {\n    this.idx = 0;\n    this.tokens = str.split(delim || ' ');\n  }\n  nextToken() {\n    return (this.idx < this.tokens.length) ? this.tokens[this.idx++] : null;\n  }\n}\n\n/**  @memberof module:rita */\nclass DecisionState {\n  constructor(index, c, qtrue, qfalse) {\n    this.c = c;\n    this.index = index;\n    this.qtrue = qtrue;\n    this.qfalse = qfalse;\n  }\n  getNextState(chars) {\n    return (chars[this.index] == this.c) ? this.qtrue : this.qfalse;\n  }\n}\nDecisionState.TYPE = 1;\n\n/**  @memberof module:rita */\nclass FinalState {\n\n  // \"epsilon\" is used to indicate an empty list.\n  constructor(phones) {\n    this.phoneList = [];\n    if (phones !== (\"epsilon\")) {\n      if (Array.isArray(phones)) {\n        this.phoneList = phones;\n      } else {\n        let i = phones.indexOf('-');\n        if (i != -1) {\n          this.phoneList[0] = phones.substring(0, i);\n          this.phoneList[1] = phones.substring(i + 1);\n        } else {\n          this.phoneList[0] = phones;\n        }\n      }\n    }\n  }\n\n  append(array) {\n    if (!this.phoneList) return;\n    for (let i = 0; i < this.phoneList.length; i++)\n      array.push(this.phoneList[i]);\n  }\n}\nFinalState.TYPE = 2;\n\nLetterToSound.RULES = [\n  'T 13100',\n  'I 0 a',\n  'S 4 r 2 1',\n  'S 6 0 4 3',\n  'S 3 e 6 5',\n  'S 4 u 8 7',\n  'S 4 y 10 9',\n  'S 3 w 12 11',\n  'S 5 t 14 13',\n  'S 3 e 16 15',\n  'S 3 e 18 17',\n  'S 4 # 20 19',\n  'S 3 w 22 21',\n  'S 1 0 24 23',\n  'S 5 e 26 25',\n  'S 5 n 28 27',\n  'S 2 h 29 28',\n  'S 5 e 31 30',\n  'S 2 r 33 32',\n  'S 5 e 35 34',\n  'S 5 t 28 36',\n  'S 3 e 38 37',\n  'S 3 e 40 39',\n  'S 2 c 42 41',\n  'S 2 a 43 42',\n  'S 5 y 45 44',\n  'S 5 r 47 46',\n  'S 5 d 49 48',\n  'P eh1',\n  'S 5 m 51 50',\n  'P epsilon',\n  'P aa1',\n  'S 4 i 53 52',\n  'S 4 g 55 54',\n  'S 4 n 57 56',\n  'S 1 # 59 58',\n  'S 5 g 61 60',\n  'S 1 0 63 62',\n  'S 1 u 29 64',\n  'S 3 o 28 65',\n  'S 4 u 67 66',\n  'S 3 a 29 68',\n  'S 2 l 68 69',\n  'S 1 # 42 70',\n  'P ey1',\n  'S 1 l 72 71',\n  'S 5 i 74 73',\n  'S 3 n 26 75',\n  'S 5 a 77 76',\n  'S 2 # 79 78',\n  'S 5 i 26 80',\n  'S 1 0 82 81',\n  'S 2 w 28 83',\n  'S 2 r 29 84',\n  'S 5 i 86 85',\n  'S 5 r 88 87',\n  'S 6 # 90 89',\n  'S 1 0 92 91',\n  'S 4 b 94 93',\n  'S 1 # 96 95',\n  'S 4 k 98 97',\n  'S 5 t 100 99',\n  'S 1 0 102 101',\n  'S 2 # 104 103',\n  'S 1 # 63 105',\n  'P aw1',\n  'S 6 e 107 106',\n  'S 4 w 109 108',\n  'S 4 d 28 110',\n  'S 1 o 111 107',\n  'P ah',\n  'S 2 y 68 112',\n  'S 2 p 42 113',\n  'S 1 t 72 42',\n  'P ey',\n  'S 5 e 115 114',\n  'S 6 # 29 116',\n  'S 2 c 26 117',\n  'S 5 i 119 118',\n  'S 3 p 26 120',\n  'S 6 o 100 28',\n  'S 3 n 26 121',\n  'S 1 0 82 122',\n  'S 1 # 82 123',\n  'P ao1',\n  'S 1 s 125 124',\n  'S 1 # 28 126',\n  'S 4 y 128 127',\n  'S 6 o 130 129',\n  'S 5 n 132 131',\n  'S 3 z 133 26',\n  'S 3 w 135 134',\n  'S 4 t 137 136',\n  'S 1 # 139 138',\n  'S 3 m 100 140',\n  'S 1 i 142 141',\n  'S 1 # 28 68',\n  'S 1 c 28 143',\n  'S 5 d 100 144',\n  'S 4 t 146 145',\n  'S 1 b 42 28',\n  'S 6 n 148 147',\n  'P ae1',\n  'S 1 # 150 149',\n  'S 3 c 152 151',\n  'S 2 n 154 153',\n  'S 3 l 100 82',\n  'P aw',\n  'S 1 o 111 155',\n  'P ow1',\n  'S 1 # 157 156',\n  'S 3 l 82 158',\n  'S 4 n 160 159',\n  'P ow',\n  'S 1 c 28 68',\n  'S 1 l 162 161',\n  'S 5 r 164 163',\n  'S 6 l 166 165',\n  'S 6 z 28 167',\n  'S 2 e 26 168',\n  'S 5 e 170 169',\n  'S 6 s 172 171',\n  'S 6 # 29 173',\n  'S 3 h 175 174',\n  'S 5 # 28 176',\n  'S 1 r 82 28',\n  'S 5 l 178 177',\n  'S 6 # 179 126',\n  'P ih1',\n  'S 2 # 181 180',\n  'S 5 a 183 182',\n  'S 6 # 29 184',\n  'S 4 t 186 185',\n  'S 5 l 188 187',\n  'S 3 t 190 189',\n  'P ay',\n  'S 6 d 192 191',\n  'S 4 t 194 193',\n  'S 3 i 196 195',\n  'S 3 u 198 197',\n  'S 3 i 28 199',\n  'S 2 s 42 200',\n  'S 6 r 42 201',\n  'S 1 t 203 202',\n  'S 2 n 42 204',\n  'S 1 r 68 205',\n  'S 2 d 100 28',\n  'S 5 o 28 206',\n  'S 1 c 42 207',\n  'S 5 e 28 208',\n  'S 4 g 42 28',\n  'S 5 l 210 209',\n  'S 3 h 82 211',\n  'S 2 # 213 212',\n  'S 6 a 82 214',\n  'S 1 # 82 215',\n  'P ao',\n  'S 2 b 217 216',\n  'S 4 n 219 218',\n  'S 3 a 29 220',\n  'S 1 e 154 82',\n  'S 2 n 222 221',\n  'S 1 c 28 223',\n  'S 3 d 42 224',\n  'S 3 d 225 72',\n  'S 5 t 227 226',\n  'S 2 q 82 228',\n  'S 6 t 28 229',\n  'S 2 c 28 230',\n  'S 6 o 232 231',\n  'S 3 u 26 233',\n  'S 5 o 235 234',\n  'S 6 e 28 236',\n  'S 6 # 29 237',\n  'S 2 # 238 28',\n  'S 6 s 240 239',\n  'S 6 y 26 241',\n  'S 6 e 100 242',\n  'S 2 e 28 243',\n  'S 2 b 245 244',\n  'S 2 p 28 246',\n  'S 2 h 247 28',\n  'S 1 # 249 248',\n  'S 3 w 251 250',\n  'S 5 o 253 252',\n  'S 6 s 230 254',\n  'S 6 z 256 255',\n  'S 4 n 100 257',\n  'S 1 0 100 258',\n  'S 6 # 260 259',\n  'S 3 m 261 42',\n  'S 1 a 263 262',\n  'S 2 s 42 264',\n  'S 6 s 266 265',\n  'S 4 t 268 267',\n  'S 4 l 68 42',\n  'S 2 t 29 82',\n  'S 3 o 28 269',\n  'S 4 l 29 100',\n  'S 3 t 42 270',\n  'S 2 t 42 271',\n  'S 6 n 68 272',\n  'S 3 r 42 273',\n  'S 6 # 42 274',\n  'S 1 # 28 275',\n  'S 4 t 276 28',\n  'S 4 s 28 277',\n  'S 2 c 68 278',\n  'S 4 n 68 279',\n  'S 1 t 28 280',\n  'S 5 s 68 281',\n  'S 6 # 283 282',\n  'S 3 n 107 284',\n  'S 2 c 82 285',\n  'S 5 t 82 286',\n  'S 5 n 82 287',\n  'S 5 s 29 288',\n  'S 2 e 154 289',\n  'S 1 e 111 107',\n  'S 5 c 107 290',\n  'S 4 l 292 291',\n  'S 3 m 68 293',\n  'S 4 u 63 294',\n  'S 1 a 28 295',\n  'S 1 i 68 28',\n  'S 1 # 28 296',\n  'S 2 t 42 297',\n  'S 2 i 72 42',\n  'S 3 o 28 298',\n  'S 2 q 82 299',\n  'S 1 r 26 300',\n  'S 1 c 302 301',\n  'P aa',\n  'S 6 a 26 303',\n  'S 3 s 29 304',\n  'S 3 r 26 305',\n  'S 5 y 307 306',\n  'S 6 l 309 308',\n  'S 2 # 311 310',\n  'S 3 v 313 312',\n  'S 3 p 28 26',\n  'S 6 b 100 314',\n  'S 3 h 28 29',\n  'S 6 i 316 315',\n  'S 6 o 26 100',\n  'S 1 # 82 317',\n  'S 5 c 28 318',\n  'S 5 d 126 28',\n  'S 1 # 319 28',\n  'P ih',\n  'S 5 o 321 320',\n  'S 3 o 323 322',\n  'S 4 w 325 324',\n  'S 4 l 327 326',\n  'S 5 r 328 42',\n  'S 2 # 42 329',\n  'S 2 a 331 330',\n  'S 6 n 333 332',\n  'S 1 0 100 68',\n  'S 1 0 335 334',\n  'S 3 n 337 336',\n  'S 5 o 28 338',\n  'S 5 a 29 42',\n  'S 2 e 72 42',\n  'S 6 g 29 339',\n  'S 3 r 42 340',\n  'S 6 e 42 341',\n  'S 4 k 343 342',\n  'S 4 t 345 344',\n  'S 3 o 28 346',\n  'S 3 o 28 42',\n  'S 2 a 348 347',\n  'S 2 i 350 349',\n  'S 1 a 42 68',\n  'S 6 r 352 351',\n  'S 3 l 100 68',\n  'S 2 # 354 353',\n  'S 2 m 42 355',\n  'S 5 r 100 68',\n  'S 4 l 28 68',\n  'S 2 g 68 356',\n  'S 4 l 28 357',\n  'S 5 h 28 358',\n  'S 4 p 68 359',\n  'S 5 s 361 360',\n  'S 5 d 107 362',\n  'S 3 s 82 363',\n  'S 6 e 365 364',\n  'S 5 d 82 366',\n  'S 5 r 368 367',\n  'S 5 l 29 82',\n  'S 2 o 154 369',\n  'S 6 o 107 370',\n  'S 4 s 372 371',\n  'S 3 h 373 68',\n  'S 3 i 68 374',\n  'S 4 i 28 375',\n  'S 4 k 28 376',\n  'S 1 o 68 377',\n  'S 1 c 42 378',\n  'S 1 # 380 379',\n  'S 1 # 29 381',\n  'S 1 e 383 382',\n  'S 6 # 385 384',\n  'S 3 s 29 230',\n  'S 6 c 387 386',\n  'S 3 c 26 388',\n  'S 2 i 26 389',\n  'S 5 u 391 390',\n  'S 6 # 26 392',\n  'S 6 # 29 393',\n  'S 3 p 28 394',\n  'S 6 n 28 230',\n  'S 3 m 230 395',\n  'S 6 t 26 396',\n  'S 6 e 28 26',\n  'S 2 # 398 397',\n  'S 3 m 400 399',\n  'S 3 m 26 401',\n  'S 2 h 82 402',\n  'S 5 s 404 403',\n  'S 6 e 28 126',\n  'S 5 l 406 405',\n  'S 6 # 29 407',\n  'S 4 w 409 408',\n  'S 2 j 29 28',\n  'S 4 l 411 410',\n  'S 5 a 413 412',\n  'S 4 g 100 414',\n  'S 6 o 288 82',\n  'S 6 e 26 42',\n  'S 6 # 42 415',\n  'S 3 r 42 416',\n  'S 6 # 29 68',\n  'S 6 a 418 417',\n  'S 4 t 420 419',\n  'S 2 t 100 421',\n  'S 4 d 42 422',\n  'S 3 u 42 423',\n  'S 2 i 42 424',\n  'S 6 a 426 425',\n  'S 2 a 26 427',\n  'S 3 g 68 42',\n  'S 1 u 68 428',\n  'S 4 y 42 429',\n  'S 3 m 42 430',\n  'S 4 w 82 431',\n  'S 3 u 42 432',\n  'S 4 w 82 433',\n  'S 1 0 42 434',\n  'S 1 l 29 435',\n  'S 3 n 437 436',\n  'S 3 d 42 438',\n  'S 6 o 42 439',\n  'S 2 l 247 440',\n  'S 6 n 68 42',\n  'S 6 n 442 441',\n  'S 1 a 444 443',\n  'S 5 s 68 28',\n  'S 5 t 445 28',\n  'S 1 h 28 68',\n  'S 4 f 68 446',\n  'S 2 s 28 447',\n  'S 6 t 82 448',\n  'S 3 n 82 449',\n  'S 6 t 450 82',\n  'S 5 s 452 451',\n  'S 5 b 63 453',\n  'S 6 t 455 454',\n  'S 5 l 457 456',\n  'S 3 l 82 458',\n  'S 1 0 460 459',\n  'S 1 # 111 107',\n  'S 4 u 105 461',\n  'S 3 a 230 462',\n  'S 2 t 463 68',\n  'S 1 n 465 464',\n  'S 4 o 28 466',\n  'S 4 t 28 467',\n  'S 2 r 28 468',\n  'S 1 e 42 469',\n  'S 6 e 471 470',\n  'S 5 a 473 472',\n  'S 3 p 29 474',\n  'S 2 c 476 475',\n  'S 2 r 100 26',\n  'S 3 v 29 477',\n  'S 3 c 26 478',\n  'S 1 i 26 479',\n  'S 2 a 28 100',\n  'S 3 l 29 26',\n  'S 2 s 26 480',\n  'S 3 h 482 481',\n  'S 6 s 230 28',\n  'S 3 m 100 26',\n  'S 6 s 230 483',\n  'S 3 c 26 484',\n  'S 6 l 230 485',\n  'S 6 b 100 486',\n  'S 6 m 26 28',\n  'S 3 n 230 487',\n  'S 3 g 100 488',\n  'S 6 o 230 29',\n  'S 3 p 29 100',\n  'S 5 t 28 29',\n  'S 5 r 28 489',\n  'S 6 # 126 28',\n  'S 1 0 491 490',\n  'S 4 b 493 492',\n  'S 4 t 495 494',\n  'S 4 l 497 496',\n  'S 5 a 68 498',\n  'S 5 a 500 499',\n  'S 5 a 502 501',\n  'S 6 r 68 503',\n  'S 3 k 29 68',\n  'S 5 t 505 504',\n  'S 1 # 42 72',\n  'S 3 p 42 28',\n  'S 6 v 507 506',\n  'S 2 # 509 508',\n  'S 3 o 28 510',\n  'S 1 0 512 511',\n  'S 3 n 29 513',\n  'S 4 v 42 514',\n  'S 1 i 515 42',\n  'S 1 e 100 516',\n  'S 5 s 518 517',\n  'S 3 m 42 519',\n  'S 3 m 42 520',\n  'S 1 0 42 521',\n  'S 2 # 523 522',\n  'S 2 # 525 524',\n  'S 4 l 527 526',\n  'S 1 t 529 528',\n  'S 4 x 100 530',\n  'S 2 i 532 531',\n  'S 4 l 29 533',\n  'S 3 r 535 534',\n  'S 2 e 42 536',\n  'S 1 c 42 537',\n  'S 2 s 539 538',\n  'S 3 l 72 540',\n  'S 3 h 100 541',\n  'S 3 h 42 100',\n  'S 4 d 28 542',\n  'S 4 t 68 28',\n  'S 1 b 28 100',\n  'S 5 l 100 543',\n  'S 6 h 105 544',\n  'S 3 h 63 545',\n  'S 3 b 63 546',\n  'S 3 f 82 107',\n  'S 5 t 547 82',\n  'S 2 k 63 82',\n  'S 2 k 63 548',\n  'S 5 r 82 549',\n  'S 5 s 82 498',\n  'S 3 g 551 550',\n  'S 6 i 82 552',\n  'S 6 e 105 82',\n  'S 2 c 82 553',\n  'S 6 u 82 554',\n  'S 4 i 556 555',\n  'S 3 v 558 557',\n  'S 1 n 29 82',\n  'S 2 s 560 559',\n  'S 3 h 562 561',\n  'S 3 i 68 563',\n  'S 1 e 68 564',\n  'S 1 a 68 565',\n  'S 1 t 42 566',\n  'S 3 l 568 567',\n  'S 3 b 569 29',\n  'S 5 o 571 570',\n  'S 6 # 29 572',\n  'S 3 c 29 573',\n  'S 3 h 100 574',\n  'S 6 i 100 575',\n  'S 3 p 26 576',\n  'S 3 f 26 577',\n  'S 3 l 579 578',\n  'S 2 u 26 580',\n  'S 5 k 29 581',\n  'S 6 o 582 29',\n  'S 6 u 28 583',\n  'S 3 k 26 100',\n  'S 6 # 26 584',\n  'S 6 e 26 585',\n  'S 6 c 230 586',\n  'S 6 # 29 587',\n  'S 2 l 589 588',\n  'S 3 o 591 590',\n  'S 4 l 593 592',\n  'S 6 y 595 594',\n  'S 6 i 100 596',\n  'S 6 s 598 597',\n  'S 6 r 600 599',\n  'S 2 t 602 601',\n  'S 2 s 604 603',\n  'S 5 c 29 82',\n  'S 5 o 606 605',\n  'S 6 # 608 607',\n  'S 5 o 610 609',\n  'S 6 # 29 611',\n  'S 5 h 82 612',\n  'S 4 c 614 613',\n  'S 4 s 42 29',\n  'S 6 e 616 615',\n  'S 4 t 618 617',\n  'S 4 z 29 619',\n  'S 3 r 42 620',\n  'S 4 g 622 621',\n  'S 3 u 623 42',\n  'S 3 l 230 42',\n  'S 4 z 100 624',\n  'S 2 # 230 29',\n  'S 2 r 625 42',\n  'S 1 d 100 42',\n  'S 5 a 28 626',\n  'S 6 t 29 627',\n  'S 1 # 42 628',\n  'S 3 l 629 42',\n  'S 6 t 68 630',\n  'S 1 # 632 631',\n  'S 6 k 634 633',\n  'S 1 # 42 635',\n  'S 3 t 42 636',\n  'S 4 n 638 637',\n  'S 1 0 640 639',\n  'S 3 g 642 641',\n  'S 3 m 68 42',\n  'S 1 0 644 643',\n  'S 3 a 29 645',\n  'S 4 l 29 42',\n  'S 4 c 29 646',\n  'S 3 l 42 647',\n  'S 2 a 68 648',\n  'S 1 i 68 649',\n  'S 3 m 68 650',\n  'S 1 e 652 651',\n  'S 3 s 331 42',\n  'S 3 r 29 653',\n  'S 3 p 100 42',\n  'S 6 o 28 654',\n  'S 6 g 68 655',\n  'S 2 e 657 656',\n  'S 3 r 63 82',\n  'S 5 s 659 658',\n  'S 2 t 63 82',\n  'S 3 r 82 63',\n  'S 5 b 82 660',\n  'S 3 s 662 661',\n  'S 5 c 63 663',\n  'S 6 t 82 664',\n  'S 1 o 154 665',\n  'S 6 m 230 82',\n  'S 4 o 667 666',\n  'S 2 a 29 28',\n  'S 3 j 230 68',\n  'S 2 i 230 68',\n  'S 3 h 669 668',\n  'S 3 s 68 670',\n  'S 3 g 672 671',\n  'P ae',\n  'S 3 u 29 673',\n  'S 4 m 28 674',\n  'S 1 e 28 68',\n  'S 2 o 42 675',\n  'S 3 p 677 676',\n  'S 2 u 28 678',\n  'S 1 e 230 29',\n  'S 2 s 680 679',\n  'S 3 h 26 29',\n  'S 3 h 682 681',\n  'S 2 g 28 683',\n  'S 6 # 100 684',\n  'S 6 e 26 100',\n  'S 1 # 686 685',\n  'S 1 # 26 687',\n  'S 6 e 26 688',\n  'S 6 t 26 689',\n  'S 3 i 28 690',\n  'S 6 s 29 691',\n  'S 5 b 29 692',\n  'S 3 m 28 693',\n  'S 3 l 28 694',\n  'S 6 c 100 695',\n  'S 3 c 100 696',\n  'S 6 e 698 697',\n  'S 1 n 28 699',\n  'S 1 c 126 700',\n  'S 4 n 702 701',\n  'S 5 t 704 703',\n  'S 4 e 28 705',\n  'S 5 a 707 706',\n  'S 4 l 709 708',\n  'S 3 c 28 68',\n  'S 1 0 42 68',\n  'S 4 g 711 710',\n  'S 4 g 230 712',\n  'S 2 e 68 713',\n  'S 1 d 42 714',\n  'S 4 a 28 715',\n  'S 5 s 717 716',\n  'S 6 # 719 718',\n  'S 3 t 82 720',\n  'S 4 a 28 721',\n  'S 6 # 29 722',\n  'S 3 v 724 723',\n  'S 4 n 100 29',\n  'S 5 m 726 725',\n  'S 6 # 29 727',\n  'S 3 b 100 728',\n  'S 3 p 729 82',\n  'S 4 a 28 730',\n  'S 5 h 82 100',\n  'S 6 c 732 731',\n  'S 4 n 734 733',\n  'S 4 s 42 735',\n  'S 2 r 68 736',\n  'S 3 t 738 737',\n  'S 3 m 740 739',\n  'S 4 w 82 741',\n  'S 2 i 100 742',\n  'P w-ey1',\n  'S 1 o 42 743',\n  'S 3 m 42 100',\n  'S 6 s 42 744',\n  'S 3 m 42 745',\n  'S 3 r 42 28',\n  'S 2 p 42 746',\n  'S 1 o 42 747',\n  'S 1 0 749 748',\n  'S 6 r 751 750',\n  'S 3 v 753 752',\n  'S 4 c 29 754',\n  'S 6 n 42 755',\n  'S 3 l 42 756',\n  'S 4 x 100 757',\n  'S 2 0 100 758',\n  'S 2 o 29 759',\n  'S 2 # 42 230',\n  'S 2 c 42 760',\n  'S 2 e 68 42',\n  'S 4 l 68 761',\n  'S 3 m 100 762',\n  'S 1 # 42 763',\n  'S 4 d 42 740',\n  'S 3 i 765 764',\n  'S 2 u 68 766',\n  'S 1 t 68 42',\n  'S 1 t 42 767',\n  'S 2 e 247 768',\n  'S 3 g 42 247',\n  'S 3 n 68 247',\n  'S 5 h 28 769',\n  'S 6 u 68 28',\n  'S 2 t 105 770',\n  'S 6 e 771 82',\n  'S 3 h 107 772',\n  'S 3 h 63 105',\n  'S 6 i 63 773',\n  'S 6 # 82 774',\n  'S 5 t 154 82',\n  'S 5 d 111 775',\n  'S 6 e 82 776',\n  'S 2 a 154 777',\n  'S 4 e 628 778',\n  'S 2 a 28 105',\n  'S 3 w 780 779',\n  'S 1 l 562 781',\n  'S 3 t 100 782',\n  'S 2 a 100 68',\n  'S 2 i 68 562',\n  'S 3 h 100 783',\n  'S 1 # 28 784',\n  'S 3 l 786 785',\n  'S 5 k 788 787',\n  'S 5 a 790 789',\n  'S 2 c 28 791',\n  'S 3 h 29 792',\n  'S 3 c 793 29',\n  'S 2 g 26 28',\n  'S 6 c 26 28',\n  'S 6 y 29 794',\n  'S 2 a 795 29',\n  'S 1 e 26 796',\n  'S 3 h 26 797',\n  'S 3 m 26 798',\n  'S 6 u 26 799',\n  'S 1 # 26 28',\n  'S 1 a 28 800',\n  'S 5 c 802 801',\n  'S 5 p 230 29',\n  'S 3 l 100 803',\n  'S 3 p 804 26',\n  'S 3 c 230 805',\n  'S 3 t 230 806',\n  'S 3 d 100 807',\n  'S 3 f 26 808',\n  'S 2 t 28 809',\n  'S 1 # 126 28',\n  'S 5 a 811 810',\n  'S 5 g 813 812',\n  'S 4 n 68 28',\n  'S 2 c 28 100',\n  'S 4 n 815 814',\n  'S 5 t 817 816',\n  'S 6 r 68 818',\n  'S 4 h 820 819',\n  'S 6 # 822 821',\n  'S 2 a 824 823',\n  'S 6 n 100 68',\n  'S 1 o 100 825',\n  'S 2 u 68 826',\n  'S 2 t 42 827',\n  'S 3 i 829 828',\n  'S 5 a 230 830',\n  'S 6 o 100 831',\n  'S 5 t 82 832',\n  'S 5 a 29 833',\n  'S 3 m 82 834',\n  'S 4 e 836 835',\n  'S 6 r 838 837',\n  'S 6 n 840 839',\n  'S 4 c 72 841',\n  'S 5 d 843 842',\n  'S 6 a 100 844',\n  'S 6 s 68 845',\n  'S 6 s 29 846',\n  'S 5 l 230 82',\n  'S 5 g 100 847',\n  'S 6 t 849 848',\n  'S 4 t 100 850',\n  'S 1 0 852 851',\n  'S 1 0 853 68',\n  'S 4 l 68 230',\n  'S 2 e 68 854',\n  'S 4 n 856 855',\n  'S 4 l 858 857',\n  'S 3 d 42 859',\n  'S 4 n 42 29',\n  'S 4 y 42 860',\n  'S 1 0 100 247',\n  'S 4 c 42 861',\n  'S 6 n 42 862',\n  'S 3 n 42 863',\n  'S 6 e 42 68',\n  'S 6 i 42 864',\n  'S 3 o 28 865',\n  'S 4 m 867 866',\n  'S 2 s 869 868',\n  'S 3 o 28 870',\n  'S 6 l 872 871',\n  'S 4 l 873 562',\n  'S 4 s 29 100',\n  'S 3 b 42 68',\n  'S 3 b 42 100',\n  'S 4 j 68 874',\n  'S 2 e 68 875',\n  'S 1 # 68 876',\n  'S 3 l 878 877',\n  'S 4 h 68 879',\n  'S 4 l 100 880',\n  'S 4 c 882 881',\n  'S 2 e 42 883',\n  'S 2 c 42 884',\n  'S 1 t 68 885',\n  'S 1 d 42 886',\n  'S 3 p 42 887',\n  'S 1 u 28 888',\n  'S 1 r 29 889',\n  'S 3 l 105 82',\n  'S 3 r 63 771',\n  'S 5 s 63 890',\n  'S 5 m 63 891',\n  'S 5 t 82 63',\n  'S 6 # 82 892',\n  'S 2 r 154 82',\n  'S 4 k 894 893',\n  'S 3 g 68 895',\n  'S 2 o 68 896',\n  'S 1 u 68 897',\n  'S 3 c 100 68',\n  'S 3 w 29 898',\n  'S 4 f 28 899',\n  'S 1 u 901 900',\n  'S 1 i 42 902',\n  'S 5 a 904 903',\n  'S 3 m 29 905',\n  'S 2 p 28 906',\n  'S 6 g 26 28',\n  'S 1 o 28 907',\n  'S 3 u 29 908',\n  'S 6 e 29 909',\n  'S 1 n 29 910',\n  'S 3 v 28 230',\n  'S 6 s 29 28',\n  'S 3 l 26 911',\n  'S 2 s 26 29',\n  'S 6 l 26 912',\n  'S 2 a 28 913',\n  'S 6 a 915 914',\n  'S 3 m 917 916',\n  'S 6 t 100 918',\n  'S 6 n 28 26',\n  'S 6 m 28 919',\n  'S 6 h 100 920',\n  'S 3 p 26 921',\n  'S 3 c 230 922',\n  'S 6 n 126 923',\n  'S 4 l 925 924',\n  'S 6 # 927 926',\n  'S 6 # 929 928',\n  'S 6 e 931 930',\n  'S 4 a 28 932',\n  'S 5 y 26 933',\n  'S 5 d 935 934',\n  'S 6 e 82 936',\n  'S 6 n 230 937',\n  'S 4 e 939 938',\n  'S 6 # 940 29',\n  'S 6 s 82 941',\n  'S 3 b 82 942',\n  'S 1 0 944 943',\n  'S 1 p 68 945',\n  'S 4 p 68 946',\n  'S 2 o 68 947',\n  'S 2 i 949 948',\n  'S 4 e 951 950',\n  'S 2 d 953 952',\n  'S 5 o 29 954',\n  'S 6 l 562 955',\n  'S 3 n 68 956',\n  'S 5 l 82 68',\n  'S 5 a 29 957',\n  'S 4 h 959 958',\n  'S 3 m 28 960',\n  'S 6 s 962 961',\n  'S 4 n 100 963',\n  'S 6 s 965 964',\n  'S 3 p 230 966',\n  'S 4 n 562 100',\n  'S 5 v 968 967',\n  'S 6 a 230 969',\n  'S 3 c 29 970',\n  'S 6 m 230 971',\n  'S 3 t 230 972',\n  'S 6 # 29 973',\n  'S 1 0 975 974',\n  'S 2 q 29 976',\n  'S 4 s 756 977',\n  'S 1 # 979 978',\n  'S 4 v 42 980',\n  'S 3 d 100 562',\n  'S 1 c 68 981',\n  'S 2 o 29 982',\n  'S 3 m 42 983',\n  'S 2 s 29 42',\n  'S 1 r 100 29',\n  'S 3 f 230 984',\n  'S 4 k 42 985',\n  'S 2 e 42 986',\n  'S 3 b 28 987',\n  'S 3 c 42 988',\n  'S 2 t 42 989',\n  'S 4 i 28 990',\n  'S 4 d 100 991',\n  'S 6 l 68 992',\n  'S 3 r 994 993',\n  'S 3 p 42 995',\n  'S 3 x 100 996',\n  'S 3 m 998 997',\n  'S 3 l 1000 999',\n  'S 6 r 68 100',\n  'S 3 r 42 1001',\n  'S 3 r 42 1002',\n  'S 2 n 68 29',\n  'S 2 i 529 42',\n  'S 1 m 42 1003',\n  'S 4 m 1005 1004',\n  'S 2 # 42 68',\n  'S 3 d 42 1006',\n  'S 2 p 42 1007',\n  'S 1 l 72 1008',\n  'S 1 e 68 42',\n  'S 1 d 68 42',\n  'S 3 n 42 1009',\n  'S 3 r 1011 1010',\n  'S 2 n 1012 28',\n  'S 5 d 82 1013',\n  'S 6 e 63 82',\n  'S 6 u 29 1014',\n  'S 6 k 82 1015',\n  'S 4 h 1017 1016',\n  'S 3 i 562 1018',\n  'S 3 f 100 1019',\n  'S 2 e 68 230',\n  'S 1 e 68 1020',\n  'S 2 o 68 1021',\n  'S 4 l 28 1022',\n  'S 2 r 42 1023',\n  'S 2 r 28 42',\n  'S 1 a 72 42',\n  'S 5 o 1025 1024',\n  'S 6 # 29 1026',\n  'S 2 m 29 230',\n  'S 5 o 28 1027',\n  'S 6 o 29 1028',\n  'S 3 l 29 1029',\n  'S 6 i 230 29',\n  'S 2 i 230 1030',\n  'S 6 d 26 28',\n  'S 6 t 1032 1031',\n  'S 1 u 28 1033',\n  'S 6 o 1035 1034',\n  'S 5 j 29 1036',\n  'S 3 s 230 909',\n  'S 6 e 230 1037',\n  'S 3 g 230 1038',\n  'S 6 z 28 1039',\n  'S 3 s 26 1040',\n  'S 6 u 230 1041',\n  'S 3 b 100 29',\n  'S 6 # 1042 126',\n  'S 4 a 28 1043',\n  'S 5 s 1045 1044',\n  'S 6 b 1047 1046',\n  'S 4 h 230 29',\n  'S 5 c 1049 1048',\n  'S 5 a 1051 1050',\n  'S 6 # 100 1052',\n  'S 3 l 100 1053',\n  'S 4 m 1055 1054',\n  'S 5 t 1057 1056',\n  'S 5 m 1059 1058',\n  'S 6 e 82 1060',\n  'S 6 a 82 1061',\n  'S 6 m 100 68',\n  'S 4 w 82 1062',\n  'S 2 c 68 1063',\n  'S 2 r 230 1064',\n  'S 2 h 82 1065',\n  'S 3 f 82 1066',\n  'S 4 b 1068 1067',\n  'S 6 i 1070 1069',\n  'S 6 t 230 1071',\n  'S 4 d 29 1072',\n  'S 1 o 68 1073',\n  'S 3 l 1075 1074',\n  'S 1 p 68 1076',\n  'S 3 w 1078 1077',\n  'S 3 r 28 1079',\n  'S 2 c 82 1080',\n  'S 6 n 1082 1081',\n  'S 4 c 1084 1083',\n  'S 6 c 562 1085',\n  'S 6 n 68 1086',\n  'S 3 c 1088 1087',\n  'S 4 n 1090 1089',\n  'S 6 a 1092 1091',\n  'S 3 h 28 1093',\n  'S 6 o 1095 1094',\n  'S 4 n 1097 1096',\n  'S 3 f 42 1098',\n  'S 4 t 1100 1099',\n  'S 4 n 100 1101',\n  'S 4 v 68 1102',\n  'S 6 e 1104 1103',\n  'S 3 m 29 1105',\n  'S 3 v 230 1106',\n  'S 3 b 29 1107',\n  'S 3 s 68 1108',\n  'S 3 s 100 1109',\n  'S 4 n 29 1110',\n  'S 6 u 42 1111',\n  'S 6 s 1113 1112',\n  'S 4 d 68 1114',\n  'S 2 t 68 1115',\n  'S 4 t 42 1116',\n  'S 4 z 42 193',\n  'S 4 l 1118 1117',\n  'S 2 i 1120 1119',\n  'S 2 s 29 1121',\n  'S 2 l 42 1122',\n  'S 4 n 29 100',\n  'S 1 # 1124 1123',\n  'S 2 b 29 1125',\n  'S 3 n 42 1126',\n  'S 1 0 1127 42',\n  'S 2 r 42 68',\n  'S 6 z 29 1128',\n  'S 4 n 100 1129',\n  'S 6 n 68 873',\n  'S 6 n 1131 1130',\n  'S 6 l 1133 1132',\n  'S 4 d 100 1134',\n  'S 2 d 42 1135',\n  'S 6 t 1137 1136',\n  'S 6 y 42 1138',\n  'S 3 h 1140 1139',\n  'S 4 b 42 68',\n  'S 2 # 1142 1141',\n  'S 1 0 42 1143',\n  'S 1 c 68 42',\n  'S 4 d 42 1144',\n  'S 1 # 42 68',\n  'S 4 l 1146 1145',\n  'S 2 s 42 1147',\n  'S 3 g 1148 42',\n  'S 3 g 42 1149',\n  'S 6 l 68 1150',\n  'S 2 t 42 1151',\n  'S 4 l 68 28',\n  'S 5 r 82 1152',\n  'S 6 i 82 1153',\n  'S 6 l 82 1154',\n  'S 4 m 1156 1155',\n  'S 2 r 1157 68',\n  'S 2 c 1159 1158',\n  'S 3 l 68 1160',\n  'S 2 t 68 1161',\n  'S 2 a 68 1162',\n  'S 2 r 68 28',\n  'S 3 s 28 1163',\n  'S 6 # 1165 1164',\n  'S 6 # 1166 28',\n  'S 3 h 1168 1167',\n  'S 1 e 28 1169',\n  'S 5 # 28 1170',\n  'S 3 i 28 1171',\n  'S 1 s 29 1172',\n  'S 1 m 29 1173',\n  'S 1 a 28 26',\n  'S 3 t 28 1174',\n  'S 5 q 1176 1175',\n  'S 5 t 1178 1177',\n  'S 3 f 29 1179',\n  'S 6 i 29 1180',\n  'S 6 c 28 1181',\n  'S 2 # 1182 100',\n  'S 3 k 26 1183',\n  'S 3 c 1185 1184',\n  'S 5 y 126 28',\n  'S 4 w 1187 1186',\n  'S 3 w 1189 1188',\n  'S 6 k 29 68',\n  'S 3 b 711 1190',\n  'S 3 l 100 42',\n  'S 6 s 1192 1191',\n  'S 6 e 1194 1193',\n  'S 5 k 100 1195',\n  'S 2 u 29 1196',\n  'S 6 i 42 1197',\n  'S 3 r 1198 42',\n  'S 5 r 1200 1199',\n  'S 5 a 1202 1201',\n  'S 5 n 1204 1203',\n  'S 6 o 100 1205',\n  'S 5 u 68 1206',\n  'S 6 o 29 230',\n  'S 6 r 82 29',\n  'S 6 o 100 1207',\n  'S 4 o 28 1208',\n  'S 1 a 133 42',\n  'S 2 n 29 1209',\n  'S 2 s 1211 1210',\n  'S 3 c 82 1212',\n  'S 3 h 1214 1213',\n  'S 1 b 42 1215',\n  'S 6 r 1217 1216',\n  'S 4 l 230 68',\n  'S 4 m 68 1218',\n  'S 4 n 29 68',\n  'S 2 a 68 937',\n  'S 1 n 42 1219',\n  'S 1 g 72 42',\n  'S 3 c 42 1220',\n  'S 2 a 1222 1221',\n  'S 5 g 100 1223',\n  'S 2 s 42 28',\n  'S 2 g 1225 1224',\n  'S 4 g 68 1226',\n  'S 4 m 68 100',\n  'S 3 h 100 1227',\n  'S 5 k 100 1228',\n  'S 6 a 100 1229',\n  'S 3 h 100 1230',\n  'S 5 l 1231 29',\n  'S 5 p 100 1232',\n  'S 3 o 28 1233',\n  'S 5 g 1235 1234',\n  'S 6 e 29 1236',\n  'S 5 r 28 29',\n  'S 5 n 28 1237',\n  'S 6 n 1239 1238',\n  'S 4 b 562 1240',\n  'S 3 l 68 29',\n  'S 3 j 68 562',\n  'S 4 b 1242 1241',\n  'S 4 n 1244 1243',\n  'S 3 d 42 1245',\n  'S 4 t 68 29',\n  'S 4 h 68 1246',\n  'S 6 # 82 1247',\n  'S 5 t 82 1248',\n  'S 6 o 29 1249',\n  'S 6 o 1251 1250',\n  'S 6 e 230 1252',\n  'S 6 g 100 1253',\n  'S 6 y 68 1254',\n  'S 5 m 82 1255',\n  'S 1 # 1257 1256',\n  'S 6 k 608 1258',\n  'S 4 o 28 1259',\n  'S 3 b 68 1260',\n  'S 4 n 100 1261',\n  'S 3 v 230 68',\n  'S 2 # 1262 100',\n  'S 2 # 230 42',\n  'S 3 l 42 1263',\n  'S 3 t 42 68',\n  'S 2 g 1265 1264',\n  'S 1 # 29 1266',\n  'S 2 # 1268 1267',\n  'S 3 t 29 1269',\n  'S 4 s 29 42',\n  'S 5 c 42 1270',\n  'S 3 d 42 1271',\n  'S 6 o 1273 1272',\n  'S 4 b 1275 1274',\n  'S 4 t 1277 1276',\n  'S 2 p 230 1278',\n  'S 2 g 42 1279',\n  'S 4 v 1280 100',\n  'S 3 h 42 1281',\n  'S 2 f 42 1282',\n  'S 6 i 68 1283',\n  'S 4 n 68 1284',\n  'S 4 t 68 1285',\n  'S 4 n 1287 1286',\n  'S 4 z 42 100',\n  'S 4 k 42 1288',\n  'S 3 t 100 42',\n  'S 3 l 42 271',\n  'S 4 y 42 1289',\n  'S 3 g 42 1290',\n  'S 1 e 42 1291',\n  'S 3 f 42 1096',\n  'S 2 n 72 42',\n  'S 3 c 42 68',\n  'S 1 i 247 1292',\n  'S 1 o 247 331',\n  'S 2 a 29 82',\n  'S 3 f 1294 1293',\n  'S 6 s 82 1295',\n  'S 4 a 28 1296',\n  'S 2 g 100 1297',\n  'S 1 a 68 29',\n  'S 3 y 562 1298',\n  'S 3 h 68 562',\n  'S 3 n 68 1299',\n  'S 2 o 230 1300',\n  'S 2 i 29 1301',\n  'S 2 s 42 72',\n  'S 5 # 1303 1302',\n  'S 3 y 29 1304',\n  'S 2 i 230 29',\n  'S 1 d 28 1305',\n  'S 1 s 100 28',\n  'S 6 # 28 1306',\n  'S 1 h 28 1307',\n  'S 2 a 1308 29',\n  'S 2 e 230 1309',\n  'S 3 u 230 1310',\n  'S 1 e 26 28',\n  'S 6 i 1312 1311',\n  'S 3 m 29 230',\n  'S 5 d 1314 1313',\n  'S 3 m 230 1315',\n  'S 5 t 230 1316',\n  'S 6 h 29 400',\n  'S 6 m 28 1317',\n  'S 6 n 1319 1318',\n  'S 6 l 230 1320',\n  'S 3 f 29 1321',\n  'S 6 a 230 100',\n  'S 5 t 1323 1322',\n  'S 6 k 29 82',\n  'S 6 # 1325 1324',\n  'S 5 k 1327 1326',\n  'S 6 y 68 1328',\n  'S 3 w 1330 1329',\n  'S 5 t 68 1331',\n  'S 6 y 68 1332',\n  'S 2 f 230 1333',\n  'S 5 d 1335 1334',\n  'S 1 t 29 1336',\n  'S 6 l 100 1337',\n  'S 1 a 42 1338',\n  'S 4 w 1340 1339',\n  'S 6 o 100 1341',\n  'S 5 u 68 1342',\n  'S 6 n 68 1343',\n  'S 6 l 100 1344',\n  'S 6 o 68 100',\n  'S 6 a 562 100',\n  'S 5 p 100 1345',\n  'S 6 i 29 100',\n  'S 4 g 1347 1346',\n  'S 3 d 29 230',\n  'S 3 w 82 1348',\n  'S 1 n 82 1349',\n  'S 2 e 1351 1350',\n  'S 4 v 1353 1352',\n  'S 2 s 100 1354',\n  'S 1 o 100 68',\n  'S 6 u 68 1355',\n  'S 4 m 100 1226',\n  'S 6 g 68 1356',\n  'S 3 i 42 1357',\n  'S 3 t 42 1358',\n  'S 3 u 1360 1359',\n  'S 3 v 29 1361',\n  'S 5 k 82 29',\n  'S 4 n 1363 1362',\n  'S 6 a 68 1364',\n  'S 4 n 100 68',\n  'S 3 r 100 29',\n  'S 5 t 100 1365',\n  'S 6 m 562 1366',\n  'S 6 e 29 1367',\n  'S 3 h 100 29',\n  'S 5 l 100 82',\n  'S 4 o 1369 1368',\n  'S 3 v 1371 1370',\n  'S 6 e 1373 1372',\n  'S 5 l 29 1374',\n  'S 5 t 28 1375',\n  'S 4 k 68 1376',\n  'S 4 x 100 1377',\n  'S 4 h 29 68',\n  'S 3 l 230 1378',\n  'S 3 l 42 100',\n  'S 4 k 1380 1379',\n  'S 3 m 100 1381',\n  'S 3 f 42 1382',\n  'S 4 p 68 1383',\n  'S 5 u 1385 1384',\n  'S 5 k 82 1386',\n  'S 3 s 1388 1387',\n  'S 6 e 1389 82',\n  'S 3 b 230 29',\n  'S 6 o 100 1390',\n  'S 6 r 100 1391',\n  'S 3 c 68 1392',\n  'S 5 r 29 1393',\n  'S 6 s 1395 1394',\n  'S 2 q 29 1396',\n  'S 6 m 1398 1397',\n  'S 4 n 100 1399',\n  'S 4 l 1401 1400',\n  'S 4 l 1403 1402',\n  'S 4 t 42 1404',\n  'S 3 n 42 68',\n  'S 4 l 1405 42',\n  'S 4 c 42 100',\n  'S 1 o 42 100',\n  'S 4 m 1407 1406',\n  'S 3 m 1409 1408',\n  'S 3 x 100 1410',\n  'S 1 t 42 1411',\n  'S 3 r 42 1412',\n  'S 4 m 1414 1413',\n  'S 2 n 100 42',\n  'S 6 l 230 1415',\n  'S 6 r 100 1416',\n  'S 3 i 68 1417',\n  'S 6 a 562 1418',\n  'S 4 m 68 42',\n  'S 2 t 42 1419',\n  'S 2 t 100 42',\n  'S 6 n 100 42',\n  'S 4 t 42 1420',\n  'S 6 y 1422 1421',\n  'S 4 m 100 1423',\n  'S 4 n 68 100',\n  'S 3 m 1425 1424',\n  'S 3 p 100 68',\n  'S 4 d 42 1426',\n  'S 1 r 68 42',\n  'S 4 k 42 1427',\n  'S 3 g 29 1428',\n  'S 3 l 29 1429',\n  'S 6 h 82 1430',\n  'S 5 s 82 63',\n  'S 3 p 82 63',\n  'S 4 z 230 1431',\n  'S 3 h 671 1432',\n  'S 1 t 230 1433',\n  'S 3 y 68 1434',\n  'S 2 g 68 1435',\n  'S 2 e 68 1436',\n  'S 6 s 1438 1437',\n  'S 3 g 28 1439',\n  'S 3 c 29 1440',\n  'S 1 m 29 1441',\n  'S 5 # 28 29',\n  'S 2 l 28 1442',\n  'S 5 # 29 28',\n  'S 1 t 29 1443',\n  'S 1 a 28 1444',\n  'S 6 e 1445 29',\n  'S 5 t 29 1446',\n  'S 3 k 29 1447',\n  'S 3 c 230 29',\n  'S 3 c 230 1251',\n  'S 3 k 29 1448',\n  'S 3 b 1450 1449',\n  'S 3 p 28 1451',\n  'S 3 m 28 26',\n  'S 3 h 28 1452',\n  'S 3 b 1453 29',\n  'S 3 b 1455 1454',\n  'S 4 t 1457 1456',\n  'S 5 d 1459 1458',\n  'S 5 d 68 1460',\n  'S 5 d 1461 68',\n  'S 6 # 29 82',\n  'S 1 r 68 1462',\n  'S 5 a 1464 1463',\n  'S 5 d 29 82',\n  'S 5 d 1466 1465',\n  'S 6 i 1468 1467',\n  'S 3 h 100 1469',\n  'S 3 m 68 1470',\n  'S 3 l 1472 1471',\n  'S 3 t 100 1473',\n  'S 6 u 100 1474',\n  'S 2 t 42 72',\n  'S 5 a 1476 1475',\n  'S 5 a 68 29',\n  'S 6 i 1478 1477',\n  'S 6 r 100 1479',\n  'S 6 z 100 1480',\n  'S 5 g 1482 1481',\n  'S 6 i 1484 1483',\n  'S 4 c 68 1485',\n  'S 3 t 562 1486',\n  'S 3 c 82 1487',\n  'S 1 y 68 29',\n  'S 3 d 68 1488',\n  'S 3 r 82 1489',\n  'S 3 r 1491 1490',\n  'S 6 r 42 230',\n  'S 2 c 28 68',\n  'S 6 l 1493 1492',\n  'S 6 m 68 1070',\n  'S 2 o 1495 1494',\n  'S 1 t 1496 42',\n  'S 2 u 1498 1497',\n  'S 6 r 230 1499',\n  'S 5 o 331 1500',\n  'S 2 v 68 1501',\n  'S 5 c 230 29',\n  'S 4 c 68 1502',\n  'S 6 e 42 100',\n  'S 6 p 562 1503',\n  'S 6 a 100 1504',\n  'S 6 e 1506 1505',\n  'S 6 i 1507 230',\n  'S 3 i 68 1508',\n  'S 5 d 100 1509',\n  'S 6 i 1511 1510',\n  'S 3 t 100 1512',\n  'S 5 r 29 1513',\n  'S 3 b 28 1514',\n  'S 3 c 1516 1515',\n  'S 3 l 1518 1517',\n  'S 4 p 230 1519',\n  'S 6 l 1521 1520',\n  'S 3 n 230 1522',\n  'S 3 c 68 1523',\n  'S 3 c 100 1524',\n  'S 3 b 42 1525',\n  'S 3 m 1527 1526',\n  'S 3 v 562 1528',\n  'S 3 b 1530 1529',\n  'S 6 e 100 1531',\n  'S 6 a 100 1532',\n  'S 3 b 230 82',\n  'S 6 i 82 100',\n  'S 3 m 100 1533',\n  'S 3 k 100 1534',\n  'S 4 h 29 1535',\n  'S 4 b 1537 1536',\n  'S 4 l 68 1538',\n  'S 3 t 1540 1539',\n  'S 6 f 100 1541',\n  'S 3 m 100 1542',\n  'S 4 l 100 1543',\n  'S 4 c 100 1544',\n  'S 1 0 68 1545',\n  'S 3 r 100 1546',\n  'S 1 0 68 100',\n  'S 4 m 42 1547',\n  'S 2 a 29 42',\n  'S 3 r 1549 1548',\n  'S 1 o 100 1550',\n  'S 3 j 68 1551',\n  'S 4 c 100 1552',\n  'S 2 c 1554 1553',\n  'S 6 h 42 1555',\n  'S 6 e 28 42',\n  'S 6 r 1557 1556',\n  'S 6 n 68 1558',\n  'S 6 x 68 1559',\n  'S 6 l 100 68',\n  'S 6 t 100 1560',\n  'S 2 a 68 29',\n  'S 2 c 42 1561',\n  'S 4 m 42 1562',\n  'S 4 p 42 1563',\n  'S 3 r 100 42',\n  'S 4 c 100 68',\n  'S 3 p 68 1564',\n  'S 4 d 100 68',\n  'S 1 # 42 1565',\n  'S 3 c 42 1566',\n  'S 3 v 42 1567',\n  'S 1 d 68 1568',\n  'S 5 t 1570 1569',\n  'S 4 x 1572 1571',\n  'S 3 r 100 1573',\n  'S 1 b 68 1574',\n  'S 3 a 29 1575',\n  'S 2 a 1576 68',\n  'S 3 y 68 100',\n  'S 6 z 28 1577',\n  'S 3 y 29 1578',\n  'S 2 s 1580 1579',\n  'S 5 z 230 1581',\n  'S 3 c 28 1582',\n  'S 5 d 29 1583',\n  'S 1 c 29 1584',\n  'S 3 p 26 1585',\n  'S 5 m 1587 1586',\n  'S 5 p 230 1588',\n  'S 3 g 29 1589',\n  'S 3 p 29 1590',\n  'S 3 c 28 26',\n  'S 6 n 100 28',\n  'S 6 o 230 26',\n  'S 3 m 28 1591',\n  'S 6 a 100 29',\n  'S 4 e 1593 1592',\n  'S 5 h 1595 1594',\n  'S 2 a 1597 1596',\n  'S 6 # 68 1598',\n  'S 5 y 68 1599',\n  'S 2 e 68 1600',\n  'S 5 t 82 1601',\n  'S 1 e 1603 1602',\n  'S 2 d 82 1604',\n  'S 5 s 1606 1605',\n  'S 3 m 100 1607',\n  'S 3 b 100 1608',\n  'S 1 r 100 1609',\n  'S 2 r 29 1610',\n  'S 1 f 100 68',\n  'S 1 f 100 1611',\n  'S 5 y 1613 1612',\n  'S 3 h 100 1614',\n  'S 2 l 68 1615',\n  'S 3 i 100 1616',\n  'S 6 o 100 29',\n  'S 5 u 1618 1617',\n  'S 6 l 230 1619',\n  'S 6 e 1621 1620',\n  'S 4 d 230 100',\n  'S 5 m 100 1622',\n  'S 6 l 68 1623',\n  'S 6 r 100 1624',\n  'S 6 e 100 1625',\n  'S 5 k 100 1626',\n  'S 5 b 230 1627',\n  'S 4 d 100 1628',\n  'S 6 i 29 68',\n  'S 1 p 68 1629',\n  'S 2 o 68 1630',\n  'S 3 w 68 82',\n  'S 4 n 1631 68',\n  'S 2 t 68 1632',\n  'S 4 v 100 1633',\n  'S 4 p 68 100',\n  'S 3 r 1634 1120',\n  'S 3 r 68 1289',\n  'S 3 g 42 68',\n  'S 5 a 1636 1635',\n  'S 3 n 68 100',\n  'S 4 d 29 1637',\n  'S 6 o 100 1638',\n  'S 4 s 100 1101',\n  'S 5 n 68 29',\n  'S 6 f 562 1639',\n  'S 6 s 29 1640',\n  'S 5 y 1642 1641',\n  'S 5 l 1644 1643',\n  'S 5 l 230 72',\n  'S 5 t 1646 1645',\n  'S 6 l 100 1647',\n  'S 6 a 1511 100',\n  'S 3 m 230 100',\n  'S 3 l 42 1648',\n  'S 6 i 29 1649',\n  'S 6 e 28 1650',\n  'S 3 i 29 1651',\n  'S 4 n 68 1493',\n  'S 4 n 100 1652',\n  'S 4 m 230 1653',\n  'S 3 c 68 529',\n  'S 6 r 1655 1654',\n  'S 3 m 100 1656',\n  'S 6 r 68 230',\n  'S 3 f 68 1657',\n  'S 3 n 230 1511',\n  'S 3 l 230 1658',\n  'S 5 t 1660 1659',\n  'S 6 i 100 1661',\n  'S 6 t 68 100',\n  'S 5 l 1663 1662',\n  'S 5 l 100 42',\n  'S 3 g 100 1185',\n  'S 6 i 100 230',\n  'S 6 n 68 100',\n  'S 6 d 100 1664',\n  'S 5 l 29 1665',\n  'S 2 q 29 1666',\n  'S 2 s 42 68',\n  'S 3 s 100 1667',\n  'S 6 k 29 1668',\n  'S 4 b 42 1669',\n  'S 3 w 230 1670',\n  'S 2 # 230 100',\n  'S 3 n 29 1671',\n  'S 2 a 68 1672',\n  'S 2 c 68 100',\n  'S 1 d 100 1673',\n  'S 3 m 100 1674',\n  'S 2 o 1676 1675',\n  'S 2 g 42 1677',\n  'S 1 e 100 68',\n  'S 4 n 42 1678',\n  'S 4 l 100 230',\n  'S 2 g 68 1679',\n  'S 4 v 42 100',\n  'S 2 c 42 1680',\n  'S 2 s 42 1681',\n  'S 4 t 273 1682',\n  'S 6 r 68 1683',\n  'S 4 v 1685 1684',\n  'S 3 n 100 1686',\n  'S 4 d 68 1687',\n  'S 2 t 1688 42',\n  'S 3 h 1690 1689',\n  'S 3 c 68 1691',\n  'S 1 e 42 1692',\n  'S 2 o 42 1693',\n  'S 2 e 42 1694',\n  'S 3 d 247 1695',\n  'S 3 t 63 1696',\n  'S 6 z 82 63',\n  'S 4 v 230 1697',\n  'S 3 n 562 1698',\n  'S 2 t 68 1699',\n  'S 2 r 68 1700',\n  'S 3 u 230 1701',\n  'S 1 r 562 68',\n  'S 2 a 1703 1702',\n  'S 3 z 28 1704',\n  'S 3 a 29 1705',\n  'S 3 s 28 29',\n  'S 3 a 29 1706',\n  'S 2 a 28 230',\n  'S 1 m 28 29',\n  'S 3 t 29 1707',\n  'S 2 s 26 1708',\n  'S 3 f 29 1709',\n  'S 3 p 29 1710',\n  'S 3 s 29 1711',\n  'S 3 t 29 1712',\n  'S 5 l 29 1713',\n  'S 6 n 28 1714',\n  'S 2 a 1716 1715',\n  'S 6 # 42 28',\n  'S 5 k 100 1717',\n  'S 4 c 1719 1718',\n  'S 4 c 1721 1720',\n  'S 1 h 68 100',\n  'S 2 a 29 1722',\n  'S 5 t 68 1723',\n  'S 3 n 29 1724',\n  'S 5 k 82 100',\n  'S 2 e 154 68',\n  'S 2 n 82 154',\n  'S 2 a 1726 1725',\n  'S 6 l 1728 1727',\n  'S 6 k 100 1729',\n  'S 6 r 230 1730',\n  'S 5 n 68 1731',\n  'S 2 s 100 1732',\n  'S 3 i 29 1733',\n  'S 2 d 1735 1734',\n  'S 3 i 68 1736',\n  'S 2 l 42 68',\n  'S 3 r 1738 1737',\n  'S 1 g 68 1739',\n  'S 1 i 29 100',\n  'S 5 h 1741 1740',\n  'S 4 b 68 1742',\n  'S 4 g 100 1743',\n  'S 6 a 68 1744',\n  'S 4 g 68 29',\n  'S 5 b 1745 100',\n  'S 6 s 68 1746',\n  'S 5 a 100 1747',\n  'S 6 o 562 100',\n  'S 6 e 1749 1748',\n  'S 5 v 230 100',\n  'S 4 t 100 1750',\n  'S 6 o 1752 1751',\n  'S 2 r 68 1753',\n  'S 6 v 100 1754',\n  'S 6 n 68 29',\n  'S 4 d 68 1755',\n  'S 2 e 42 68',\n  'S 5 o 1757 1756',\n  'S 6 # 608 1758',\n  'S 5 t 29 1759',\n  'S 4 p 100 1760',\n  'S 6 g 562 1761',\n  'S 6 i 100 68',\n  'S 5 u 1763 1762',\n  'S 6 # 42 1764',\n  'S 3 c 1766 1765',\n  'S 4 c 68 1767',\n  'S 5 u 1769 1768',\n  'S 3 s 1770 100',\n  'S 6 i 100 1771',\n  'S 3 d 42 625',\n  'S 5 u 100 1772',\n  'S 3 k 28 1773',\n  'S 3 z 68 1774',\n  'S 4 g 230 1775',\n  'S 4 f 100 230',\n  'S 3 c 1777 1776',\n  'S 4 d 42 1778',\n  'S 4 m 68 1779',\n  'S 3 p 100 1780',\n  'S 4 t 42 1781',\n  'S 5 k 1783 1782',\n  'S 3 s 82 1784',\n  'S 6 r 562 1785',\n  'S 3 f 82 1786',\n  'S 3 c 82 1787',\n  'S 6 m 100 1788',\n  'S 5 d 29 1789',\n  'S 6 m 1791 1790',\n  'S 4 k 29 1792',\n  'S 6 l 1794 1793',\n  'S 4 t 68 100',\n  'S 3 d 1796 1795',\n  'S 4 t 100 1797',\n  'S 3 h 100 1798',\n  'S 1 0 100 1799',\n  'S 4 p 42 100',\n  'S 4 d 512 1800',\n  'S 3 m 230 68',\n  'S 1 p 42 1801',\n  'S 3 r 1803 1802',\n  'S 2 h 68 1804',\n  'S 5 g 1806 1805',\n  'S 6 k 1808 1807',\n  'S 4 p 42 1809',\n  'S 2 a 68 1810',\n  'S 6 t 68 1811',\n  'S 6 n 230 100',\n  'S 3 c 68 1812',\n  'S 2 d 68 1813',\n  'S 4 v 100 42',\n  'S 6 e 100 1814',\n  'S 4 b 100 1815',\n  'S 3 g 68 1816',\n  'S 4 m 42 1817',\n  'S 1 o 42 1818',\n  'S 3 c 42 29',\n  'S 2 a 247 1819',\n  'S 3 h 773 1820',\n  'S 3 a 29 1821',\n  'S 3 r 562 100',\n  'S 3 d 68 1822',\n  'S 2 s 68 1823',\n  'S 2 t 1825 1824',\n  'S 6 l 28 1826',\n  'S 6 a 29 1827',\n  'S 1 r 29 28',\n  'S 3 n 1829 1828',\n  'S 5 d 1831 1830',\n  'S 2 l 29 1832',\n  'S 2 e 28 1833',\n  'S 3 l 29 1834',\n  'S 2 # 1314 230',\n  'S 3 d 29 1835',\n  'S 3 p 29 1836',\n  'S 3 v 230 1837',\n  'S 3 g 28 1838',\n  'S 5 y 1840 1839',\n  'S 4 o 28 1841',\n  'S 4 b 29 1842',\n  'S 6 # 68 29',\n  'S 1 e 1844 1843',\n  'S 6 e 100 1845',\n  'S 2 m 1846 100',\n  'S 6 a 29 100',\n  'S 5 v 29 1847',\n  'S 6 i 29 1059',\n  'S 2 i 1849 1848',\n  'S 6 n 1851 1850',\n  'S 2 c 1853 1852',\n  'S 5 t 1854 100',\n  'S 2 x 100 1855',\n  'S 6 n 100 1856',\n  'S 1 a 100 29',\n  'S 1 e 100 1857',\n  'S 1 n 100 1858',\n  'S 1 n 68 1859',\n  'S 3 v 100 68',\n  'S 5 t 1861 1860',\n  'S 3 i 68 1862',\n  'S 1 e 562 1863',\n  'S 1 c 68 1864',\n  'S 4 s 1866 1865',\n  'S 4 s 100 1867',\n  'S 6 l 68 1868',\n  'S 6 i 68 1869',\n  'S 6 u 230 68',\n  'S 6 i 562 1205',\n  'S 6 r 100 1870',\n  'S 5 c 1871 100',\n  'S 6 a 1873 1872',\n  'S 5 v 230 1874',\n  'S 4 p 68 1875',\n  'S 6 u 68 1876',\n  'S 2 e 29 1877',\n  'S 3 h 1879 1878',\n  'S 1 r 230 68',\n  'S 4 b 68 1880',\n  'S 3 a 29 1881',\n  'S 6 # 29 1882',\n  'S 4 h 28 1883',\n  'S 2 q 100 1884',\n  'S 4 c 100 1885',\n  'S 6 i 562 100',\n  'S 6 a 1887 1886',\n  'S 6 # 29 1888',\n  'S 4 t 29 1889',\n  'S 5 u 1891 1890',\n  'S 5 t 230 1892',\n  'S 4 b 42 1893',\n  'S 5 y 100 1894',\n  'S 6 s 42 1895',\n  'S 6 o 230 1185',\n  'S 5 n 562 1896',\n  'S 3 m 100 1897',\n  'S 6 # 28 42',\n  'S 6 b 100 1898',\n  'S 4 t 68 1899',\n  'S 4 j 68 1900',\n  'S 4 p 68 1901',\n  'S 3 c 230 1902',\n  'S 3 c 1904 1903',\n  'S 3 h 100 1905',\n  'S 3 c 42 1906',\n  'S 5 l 1908 1907',\n  'S 6 o 100 1909',\n  'S 6 o 29 1910',\n  'S 6 u 562 100',\n  'S 3 s 42 100',\n  'S 3 v 100 1911',\n  'S 3 m 68 1685',\n  'S 5 a 29 1912',\n  'S 6 l 1914 1913',\n  'S 2 a 68 28',\n  'S 2 r 68 1915',\n  'S 2 d 68 1916',\n  'S 3 r 1917 68',\n  'S 3 t 100 1918',\n  'S 6 d 42 68',\n  'S 3 l 100 1554',\n  'S 2 o 230 1919',\n  'S 4 v 100 29',\n  'S 4 l 68 1920',\n  'S 4 f 230 1921',\n  'S 3 k 1923 1922',\n  'S 4 b 68 42',\n  'S 3 r 42 1924',\n  'S 6 e 42 1925',\n  'S 3 d 42 28',\n  'S 6 l 1927 1926',\n  'S 4 c 68 1928',\n  'S 2 a 68 1929',\n  'S 3 h 68 100',\n  'S 4 l 68 1930',\n  'S 4 b 68 1931',\n  'S 2 b 100 29',\n  'S 4 c 1047 1932',\n  'S 6 r 100 1281',\n  'S 3 r 100 1933',\n  'S 4 s 68 42',\n  'S 2 p 42 1934',\n  'S 1 r 247 1935',\n  'S 3 b 63 1936',\n  'S 3 c 100 1937',\n  'S 2 l 68 1938',\n  'S 3 l 68 1939',\n  'S 3 p 100 1940',\n  'S 3 r 100 68',\n  'S 6 t 1942 1941',\n  'S 6 i 28 29',\n  'S 2 l 1944 1943',\n  'S 1 o 29 28',\n  'S 5 s 28 29',\n  'S 3 i 28 1945',\n  'S 6 e 29 1946',\n  'S 3 h 28 1947',\n  'S 3 t 29 1948',\n  'S 3 j 29 1949',\n  'S 2 # 1950 29',\n  'S 3 c 29 1951',\n  'S 3 l 100 230',\n  'S 3 w 1953 1952',\n  'S 4 c 68 1954',\n  'S 6 i 1956 1955',\n  'S 4 g 100 1957',\n  'S 2 r 230 1958',\n  'S 2 n 230 1959',\n  'S 6 a 1961 1960',\n  'S 6 # 562 100',\n  'S 1 d 100 1962',\n  'S 6 g 100 1963',\n  'S 3 y 230 68',\n  'S 6 k 230 1964',\n  'S 3 t 230 68',\n  'S 1 r 100 1965',\n  'S 1 r 68 100',\n  'S 1 i 100 68',\n  'S 3 m 68 1966',\n  'S 6 h 100 68',\n  'S 1 o 100 1967',\n  'S 3 r 29 1968',\n  'S 1 r 68 1969',\n  'S 5 s 68 100',\n  'S 2 p 100 1970',\n  'S 2 e 100 1971',\n  'S 1 s 68 1972',\n  'S 2 o 68 1973',\n  'S 6 r 1975 1974',\n  'S 5 s 68 1976',\n  'S 6 i 68 1977',\n  'S 6 n 68 1978',\n  'S 4 b 68 1979',\n  'S 6 d 230 100',\n  'S 6 h 100 1980',\n  'S 5 g 562 100',\n  'S 5 v 100 1981',\n  'S 5 g 100 1982',\n  'S 4 s 68 1983',\n  'S 6 a 1985 1984',\n  'S 1 0 100 1986',\n  'S 3 g 68 1987',\n  'S 2 s 68 1988',\n  'S 4 m 68 1989',\n  'S 5 y 1991 1990',\n  'S 2 o 68 1992',\n  'S 3 p 230 1993',\n  'S 2 g 29 1994',\n  'S 4 s 1996 1995',\n  'S 5 r 1998 1997',\n  'S 4 j 2000 1999',\n  'S 3 m 2002 2001',\n  'S 3 b 42 2003',\n  'S 5 h 2005 2004',\n  'S 4 g 42 100',\n  'S 4 p 230 100',\n  'S 3 l 42 1674',\n  'S 3 h 100 2006',\n  'S 6 e 230 100',\n  'S 5 v 562 2007',\n  'S 6 # 100 29',\n  'S 4 n 2009 2008',\n  'S 4 m 68 2010',\n  'S 6 t 2012 2011',\n  'S 4 s 1870 68',\n  'S 3 h 100 2013',\n  'S 4 b 230 2014',\n  'S 4 v 100 230',\n  'S 3 k 100 2015',\n  'S 3 h 42 2016',\n  'S 5 s 2018 2017',\n  'S 6 a 100 2019',\n  'S 3 t 82 2020',\n  'S 6 h 100 2021',\n  'S 3 g 100 2022',\n  'S 4 f 29 2023',\n  'S 2 a 68 2024',\n  'S 3 f 100 68',\n  'S 4 t 68 2025',\n  'S 6 r 68 2026',\n  'S 4 z 68 100',\n  'S 4 s 2028 2027',\n  'S 3 d 100 2029',\n  'S 1 o 68 2030',\n  'S 2 a 230 68',\n  'S 4 s 42 2031',\n  'S 4 l 68 100',\n  'S 2 s 42 2032',\n  'S 2 # 2034 2033',\n  'S 4 d 68 2035',\n  'S 4 n 2037 2036',\n  'S 4 n 68 29',\n  'S 3 s 42 2038',\n  'S 4 c 68 2039',\n  'S 2 c 68 2040',\n  'S 4 x 100 2041',\n  'S 3 s 68 2042',\n  'S 3 s 42 2043',\n  'S 1 a 2045 2044',\n  'S 5 b 63 2046',\n  'S 3 t 2048 2047',\n  'S 3 n 68 2049',\n  'S 1 p 68 2050',\n  'S 3 b 68 2051',\n  'S 2 c 29 2052',\n  'S 3 h 2053 29',\n  'S 2 h 28 2054',\n  'S 1 a 230 28',\n  'S 3 k 28 2055',\n  'S 3 b 29 2056',\n  'S 6 n 28 2057',\n  'S 3 k 29 2058',\n  'S 3 t 29 2059',\n  'S 3 c 29 2060',\n  'S 5 b 29 2061',\n  'S 5 u 2063 2062',\n  'S 2 o 68 2064',\n  'S 6 # 2065 68',\n  'S 4 s 2067 2066',\n  'S 1 p 42 2068',\n  'S 2 m 100 2069',\n  'S 1 i 29 2070',\n  'S 2 r 29 230',\n  'S 3 c 100 2071',\n  'S 1 d 68 100',\n  'S 6 a 2073 2072',\n  'S 4 f 230 2074',\n  'S 3 k 230 2075',\n  'S 5 d 2077 2076',\n  'S 2 t 100 68',\n  'S 3 l 68 100',\n  'S 3 l 2078 100',\n  'S 3 d 68 2079',\n  'S 2 u 68 2080',\n  'S 1 o 68 1986',\n  'S 2 b 100 68',\n  'S 1 s 100 1854',\n  'S 4 h 29 2081',\n  'S 4 g 68 2082',\n  'S 5 y 42 2083',\n  'S 4 c 100 2084',\n  'S 4 c 68 2085',\n  'S 6 t 100 2086',\n  'S 6 e 100 230',\n  'S 5 b 100 2087',\n  'S 5 b 100 562',\n  'S 4 f 68 1285',\n  'S 6 e 2089 2088',\n  'S 1 a 100 1403',\n  'S 2 i 68 100',\n  'S 3 w 82 2090',\n  'S 2 c 68 82',\n  'S 4 n 68 2091',\n  'S 6 e 2093 2092',\n  'S 6 # 42 100',\n  'S 4 v 2095 2094',\n  'S 3 m 68 2096',\n  'S 6 # 29 230',\n  'S 3 r 68 2097',\n  'S 3 n 230 100',\n  'S 3 m 2099 2098',\n  'S 4 t 2101 2100',\n  'S 3 m 2103 2102',\n  'P ay1',\n  'S 4 k 68 2104',\n  'S 4 t 68 1917',\n  'S 4 d 42 100',\n  'S 5 r 1786 2105',\n  'S 3 f 29 2106',\n  'S 6 o 2108 2107',\n  'S 5 c 100 2109',\n  'S 3 n 2028 2110',\n  'S 3 j 68 100',\n  'S 4 p 230 2111',\n  'S 4 c 2113 2112',\n  'S 4 b 29 1838',\n  'S 4 h 29 2114',\n  'S 4 s 68 230',\n  'S 3 b 68 100',\n  'S 3 m 68 2115',\n  'S 5 z 2117 2116',\n  'S 3 f 82 2020',\n  'S 6 u 2119 2118',\n  'S 3 b 82 100',\n  'S 3 b 100 82',\n  'S 3 t 82 100',\n  'S 5 h 29 2120',\n  'S 4 v 230 2121',\n  'S 3 t 1285 2122',\n  'S 2 s 230 100',\n  'S 3 f 68 2123',\n  'S 6 l 230 68',\n  'S 2 # 2125 2124',\n  'S 2 a 68 2126',\n  'S 3 s 2128 2127',\n  'S 2 b 42 2129',\n  'S 1 # 42 2130',\n  'S 6 l 42 2131',\n  'S 6 m 42 2132',\n  'S 2 n 68 2133',\n  'S 2 m 100 230',\n  'S 4 v 230 2134',\n  'S 6 r 29 68',\n  'S 2 a 2136 2135',\n  'S 3 c 2138 2137',\n  'S 3 n 42 2139',\n  'S 3 r 42 2140',\n  'S 2 i 247 68',\n  'S 2 n 247 2141',\n  'S 6 c 63 2142',\n  'S 2 a 2144 2143',\n  'S 4 d 68 2145',\n  'S 2 i 68 2146',\n  'S 1 h 68 2147',\n  'S 1 r 68 2148',\n  'S 3 n 2150 2149',\n  'S 1 e 230 2151',\n  'S 3 y 29 2152',\n  'S 1 r 2154 2153',\n  'S 3 h 2156 2155',\n  'S 3 t 28 29',\n  'S 3 m 2157 29',\n  'S 3 f 29 2158',\n  'S 5 g 230 29',\n  'S 2 # 29 2159',\n  'S 1 s 2161 2160',\n  'S 6 l 2163 2162',\n  'S 5 h 29 2164',\n  'S 4 d 42 68',\n  'S 6 e 68 2165',\n  'S 6 # 2167 2166',\n  'S 4 s 29 2168',\n  'S 4 s 68 100',\n  'S 2 h 29 2169',\n  'S 2 c 100 2170',\n  'S 5 u 1735 2171',\n  'S 5 c 230 100',\n  'S 1 s 29 2172',\n  'S 6 s 29 68',\n  'S 2 i 100 2173',\n  'S 3 l 2175 2174',\n  'S 6 h 68 29',\n  'S 1 m 2176 68',\n  'S 3 n 68 2177',\n  'S 4 p 2179 2178',\n  'S 4 b 68 2180',\n  'S 6 h 100 2181',\n  'S 6 a 2183 2182',\n  'S 6 a 29 2184',\n  'S 6 p 68 2185',\n  'S 5 c 100 562',\n  'S 6 i 100 2186',\n  'S 1 0 100 2187',\n  'S 3 n 68 2188',\n  'S 4 l 68 1493',\n  'S 5 r 2190 2189',\n  'S 2 i 68 2191',\n  'S 6 s 42 2192',\n  'S 2 f 42 68',\n  'S 2 g 2194 2193',\n  'S 4 n 2195 68',\n  'S 6 u 2197 2196',\n  'S 4 c 2199 2198',\n  'S 4 v 100 2200',\n  'S 3 m 42 2201',\n  'S 3 c 2203 2202',\n  'S 4 c 2205 2204',\n  'S 3 y 29 2206',\n  'S 4 s 2208 2207',\n  'S 4 c 2210 2209',\n  'S 3 m 2212 2211',\n  'S 5 k 100 2213',\n  'S 5 m 562 2214',\n  'S 6 t 100 2215',\n  'S 3 m 42 2216',\n  'S 3 y 29 2217',\n  'S 3 m 68 230',\n  'S 4 z 2219 2218',\n  'S 4 g 42 230',\n  'S 5 h 562 100',\n  'S 3 s 82 230',\n  'S 3 b 2221 2220',\n  'S 3 h 68 2222',\n  'S 4 m 29 2223',\n  'S 2 o 68 2224',\n  'S 1 e 68 2225',\n  'S 3 m 68 2226',\n  'S 3 c 100 2227',\n  'S 4 n 100 2228',\n  'S 4 n 100 2229',\n  'S 4 b 100 2230',\n  'S 4 v 230 68',\n  'S 4 m 68 193',\n  'S 6 i 28 42',\n  'S 3 r 42 2231',\n  'S 6 g 100 2232',\n  'S 2 a 68 2233',\n  'S 1 r 29 2234',\n  'S 4 n 100 2235',\n  'S 3 m 29 68',\n  'S 3 t 2237 2236',\n  'S 6 g 100 2238',\n  'S 3 f 42 100',\n  'S 4 v 42 2239',\n  'S 2 c 247 2240',\n  'S 3 k 82 2241',\n  'S 1 a 2243 2242',\n  'S 3 b 230 1423',\n  'S 4 g 100 2244',\n  'S 1 i 68 2245',\n  'S 1 k 68 2246',\n  'S 2 u 68 2247',\n  'S 1 a 2249 2248',\n  'S 5 d 909 230',\n  'S 2 c 230 2250',\n  'S 3 f 230 2251',\n  'S 1 b 29 2252',\n  'S 2 e 29 28',\n  'S 2 c 29 230',\n  'S 1 o 230 2253',\n  'S 5 s 230 29',\n  'S 5 s 29 2254',\n  'S 5 n 230 29',\n  'S 6 # 2256 2255',\n  'S 3 i 247 2257',\n  'S 4 t 2259 2258',\n  'S 4 c 100 2260',\n  'S 4 t 29 154',\n  'S 4 g 2262 2261',\n  'S 6 e 100 2263',\n  'S 5 h 247 100',\n  'S 3 r 29 100',\n  'S 6 # 905 29',\n  'S 6 i 100 2264',\n  'S 2 n 100 2265',\n  'S 4 d 2267 2266',\n  'S 2 o 2269 2268',\n  'S 2 g 562 2270',\n  'S 2 e 68 2271',\n  'S 2 b 68 100',\n  'S 2 i 68 782',\n  'S 5 t 2273 2272',\n  'S 5 p 2274 100',\n  'S 5 c 68 2275',\n  'S 6 o 68 2276',\n  'S 4 d 68 2277',\n  'S 4 t 100 68',\n  'S 4 q 100 1532',\n  'S 6 d 100 2278',\n  'S 6 g 100 82',\n  'S 3 v 68 2279',\n  'S 1 a 68 2280',\n  'S 3 h 2282 2281',\n  'S 4 g 42 2283',\n  'S 5 l 2285 2284',\n  'S 4 t 2287 2286',\n  'S 4 n 2289 2288',\n  'S 4 n 230 100',\n  'S 5 d 68 29',\n  'S 6 o 2291 2290',\n  'S 5 q 2293 2292',\n  'S 5 h 100 2294',\n  'S 5 h 2296 2295',\n  'S 3 l 230 2297',\n  'S 3 p 1204 100',\n  'S 5 k 2299 2298',\n  'S 4 m 230 2300',\n  'S 4 s 100 2301',\n  'S 5 c 100 2302',\n  'S 3 k 29 2303',\n  'S 3 m 2304 100',\n  'S 5 s 100 2305',\n  'S 4 t 2306 100',\n  'S 3 b 29 100',\n  'S 3 l 100 2307',\n  'S 5 c 2308 100',\n  'S 3 p 230 100',\n  'S 6 a 100 2309',\n  'S 6 d 230 2310',\n  'S 4 s 100 68',\n  'S 6 g 100 2311',\n  'S 3 s 2313 2312',\n  'S 3 n 230 68',\n  'S 6 s 82 2314',\n  'S 6 o 68 2315',\n  'S 3 g 230 100',\n  'S 6 o 82 2316',\n  'S 6 r 100 2317',\n  'S 2 u 68 2318',\n  'S 4 m 2320 2319',\n  'S 4 g 100 2321',\n  'S 3 c 100 2322',\n  'S 4 c 68 596',\n  'S 4 l 100 2323',\n  'S 5 t 42 2324',\n  'S 2 c 100 2325',\n  'S 2 o 68 2326',\n  'S 2 t 68 2327',\n  'S 3 l 2287 29',\n  'S 3 l 2329 2328',\n  'S 6 r 2330 100',\n  'S 4 m 100 2331',\n  'S 3 t 42 2332',\n  'S 6 # 247 68',\n  'S 3 l 2334 2333',\n  'S 4 f 68 2335',\n  'S 4 d 29 2336',\n  'S 4 t 100 562',\n  'S 2 s 562 2337',\n  'S 1 r 68 2338',\n  'S 3 d 68 2339',\n  'S 6 h 29 2340',\n  'S 2 n 28 29',\n  'S 1 r 230 29',\n  'S 3 b 29 2341',\n  'S 1 h 28 2342',\n  'S 2 n 29 2343',\n  'S 3 m 29 2344',\n  'S 4 p 2346 2345',\n  'S 4 h 68 2347',\n  'S 2 q 29 2348',\n  'S 6 a 29 2349',\n  'S 2 n 100 2350',\n  'S 1 n 100 230',\n  'S 4 z 29 2351',\n  'S 1 p 68 2352',\n  'S 6 o 29 1722',\n  'S 2 s 2354 2353',\n  'S 3 v 68 2355',\n  'S 1 m 2357 2356',\n  'S 3 r 68 230',\n  'S 6 r 68 2358',\n  'S 1 i 29 2359',\n  'S 6 t 68 2360',\n  'S 6 i 100 2361',\n  'S 6 e 2363 2362',\n  'S 4 t 2364 100',\n  'S 6 o 68 2365',\n  'S 4 p 68 2366',\n  'S 5 c 2365 2367',\n  'S 6 e 100 2368',\n  'S 4 p 68 2369',\n  'S 2 c 100 82',\n  'S 3 t 68 82',\n  'S 3 y 2371 2370',\n  'S 5 u 29 2372',\n  'S 4 h 29 100',\n  'S 3 h 2374 2373',\n  'S 4 b 42 2375',\n  'S 3 r 2377 2376',\n  'S 2 p 68 100',\n  'S 4 c 42 2378',\n  'S 2 b 100 2379',\n  'S 6 i 2381 2380',\n  'S 5 k 2299 2382',\n  'S 5 s 100 2383',\n  'S 3 p 230 2384',\n  'S 4 z 230 2385',\n  'S 5 k 100 68',\n  'S 6 i 247 68',\n  'S 3 g 230 2386',\n  'S 5 h 2388 2387',\n  'S 4 c 100 29',\n  'S 5 c 562 2389',\n  'S 4 m 29 2390',\n  'S 5 h 100 68',\n  'S 3 n 100 2391',\n  'S 4 c 68 2392',\n  'S 3 h 42 2393',\n  'S 3 m 100 2394',\n  'S 3 c 2396 2395',\n  'S 6 i 230 100',\n  'S 6 e 562 2397',\n  'S 4 v 230 2398',\n  'S 6 d 100 2399',\n  'S 3 m 68 2400',\n  'S 4 m 100 230',\n  'S 6 m 82 2401',\n  'S 6 i 100 82',\n  'S 6 e 82 29',\n  'S 1 m 68 100',\n  'S 4 m 29 2402',\n  'S 4 l 2404 2403',\n  'S 3 c 68 2405',\n  'S 2 g 100 2406',\n  'S 4 v 100 273',\n  'S 3 l 2408 2407',\n  'S 6 i 42 2409',\n  'S 6 a 2411 2410',\n  'S 4 b 230 68',\n  'S 2 e 68 2412',\n  'S 4 f 42 2413',\n  'S 6 r 2330 2414',\n  'S 4 v 230 42',\n  'S 6 b 42 2415',\n  'S 1 h 42 2416',\n  'S 5 s 82 2417',\n  'S 5 d 82 63',\n  'S 4 b 100 2418',\n  'S 4 t 562 2419',\n  'S 1 a 562 68',\n  'S 2 o 562 68',\n  'S 1 l 68 2420',\n  'S 3 i 29 2421',\n  'S 3 m 2423 2422',\n  'S 2 r 2425 2424',\n  'S 1 i 230 2426',\n  'S 3 b 2427 29',\n  'S 5 r 2429 2428',\n  'S 6 i 100 2430',\n  'S 5 z 1669 2431',\n  'S 3 r 100 2432',\n  'S 6 # 29 558',\n  'S 3 r 68 2433',\n  'S 1 p 68 2434',\n  'S 6 a 29 230',\n  'S 2 d 100 2435',\n  'S 3 t 562 100',\n  'S 6 u 100 2436',\n  'S 4 z 100 68',\n  'S 2 c 100 896',\n  'S 3 l 2438 2437',\n  'S 6 o 29 2439',\n  'S 1 a 100 2440',\n  'S 6 e 1854 29',\n  'S 4 c 2442 2441',\n  'S 5 c 562 2443',\n  'S 6 i 100 2444',\n  'S 6 e 68 100',\n  'S 4 t 68 2445',\n  'S 6 a 100 2446',\n  'S 6 l 562 100',\n  'S 4 h 68 2447',\n  'S 2 o 1825 2448',\n  'S 5 t 68 100',\n  'S 2 b 29 2449',\n  'S 5 c 2451 2450',\n  'S 5 g 42 2452',\n  'S 3 h 100 2453',\n  'S 3 l 100 2454',\n  'S 6 n 100 2455',\n  'S 6 n 42 2456',\n  'S 2 s 100 273',\n  'S 6 r 2458 2457',\n  'S 5 t 2460 2459',\n  'S 5 h 100 2461',\n  'S 3 t 230 2462',\n  'S 4 c 100 562',\n  'S 6 r 562 2463',\n  'S 4 p 100 2464',\n  'S 5 r 2466 2465',\n  'S 4 s 100 2467',\n  'S 5 h 100 2468',\n  'S 4 t 100 2469',\n  'S 6 n 68 2470',\n  'S 4 g 100 2471',\n  'S 3 t 42 100',\n  'S 3 g 100 756',\n  'S 6 a 100 2472',\n  'S 5 c 1980 100',\n  'S 6 o 2473 100',\n  'S 6 v 230 2474',\n  'S 4 p 68 2475',\n  'S 3 b 68 2476',\n  'S 3 h 2477 100',\n  'S 4 n 2478 1425',\n  'S 6 g 100 2479',\n  'S 6 g 68 2480',\n  'S 2 # 68 2481',\n  'S 4 n 100 256',\n  'S 3 f 42 2482',\n  'S 4 m 100 68',\n  'S 6 o 42 28',\n  'S 6 y 2484 2483',\n  'S 3 r 42 68',\n  'S 2 s 68 2485',\n  'S 6 n 2487 2486',\n  'S 4 t 42 68',\n  'S 4 v 42 2488',\n  'S 1 c 42 2489',\n  'S 3 m 82 2490',\n  'S 2 i 562 2491',\n  'S 3 i 100 2492',\n  'S 2 e 68 2493',\n  'S 1 r 29 2494',\n  'S 1 l 28 2495',\n  'S 1 a 29 2496',\n  'S 1 o 28 2497',\n  'S 3 g 28 29',\n  'S 2 r 230 29',\n  'S 5 b 230 29',\n  'S 5 h 2499 2498',\n  'S 3 p 42 2500',\n  'S 5 s 100 2501',\n  'S 4 s 2503 2502',\n  'S 3 h 100 2504',\n  'S 3 l 42 68',\n  'S 4 k 562 2505',\n  'S 1 e 100 2506',\n  'S 6 i 100 2507',\n  'S 5 n 1207 2508',\n  'S 6 e 2509 100',\n  'S 5 n 100 29',\n  'S 3 s 29 2510',\n  'S 4 z 230 2511',\n  'S 5 k 2513 2512',\n  'S 5 v 100 2514',\n  'S 6 e 68 2515',\n  'S 4 d 68 100',\n  'S 6 u 68 2516',\n  'S 4 d 100 2517',\n  'S 4 h 2519 2518',\n  'S 4 t 100 2520',\n  'S 2 o 68 2521',\n  'S 2 f 230 100',\n  'S 5 b 42 2069',\n  'S 2 b 100 2522',\n  'S 2 s 100 2523',\n  'S 2 g 42 29',\n  'S 6 s 29 2524',\n  'S 5 z 2526 2525',\n  'S 5 t 100 2527',\n  'S 5 h 100 2528',\n  'S 4 s 100 2529',\n  'S 4 b 68 2530',\n  'S 3 h 100 2213',\n  'S 6 u 2532 2531',\n  'S 3 f 100 2533',\n  'S 4 b 100 2534',\n  'S 4 g 42 2535',\n  'S 4 t 100 2536',\n  'S 5 t 2538 2537',\n  'S 5 n 100 2539',\n  'S 4 b 1416 2540',\n  'S 5 z 230 100',\n  'S 3 b 100 2541',\n  'S 5 h 100 562',\n  'S 4 g 230 2542',\n  'S 3 j 68 2543',\n  'S 4 v 2545 2544',\n  'S 6 o 100 2315',\n  'S 2 a 68 2546',\n  'S 4 p 100 2547',\n  'S 6 l 68 2548',\n  'S 6 r 100 68',\n  'S 4 v 100 2549',\n  'S 4 n 68 2550',\n  'S 3 l 68 42',\n  'S 3 h 42 2551',\n  'S 4 b 42 2552',\n  'S 3 g 42 2553',\n  'S 4 s 42 2554',\n  'S 2 l 68 2555',\n  'S 5 p 82 63',\n  'S 3 u 562 2556',\n  'S 4 c 562 100',\n  'S 3 k 68 2557',\n  'S 1 b 230 2558',\n  'S 1 u 29 2559',\n  'S 2 a 29 2560',\n  'S 3 u 29 2561',\n  'S 6 e 2563 2562',\n  'S 3 t 100 2564',\n  'S 6 e 2566 2565',\n  'S 6 s 100 2567',\n  'S 5 p 2569 2568',\n  'S 5 s 2570 100',\n  'S 4 s 100 29',\n  'S 4 d 29 2571',\n  'S 2 t 100 2572',\n  'S 3 c 29 2573',\n  'S 3 s 29 2574',\n  'S 2 p 100 29',\n  'S 1 d 100 2575',\n  'S 5 j 68 2576',\n  'S 6 i 100 2577',\n  'S 6 n 562 100',\n  'S 4 f 68 2578',\n  'S 6 a 68 100',\n  'S 6 i 2579 100',\n  'S 6 n 230 2580',\n  'S 2 i 2582 2581',\n  'S 5 l 29 100',\n  'S 5 p 1625 2583',\n  'S 5 g 2585 2584',\n  'S 2 s 1674 2586',\n  'S 4 p 100 2587',\n  'S 4 v 68 100',\n  'S 5 h 2588 100',\n  'S 4 c 68 100',\n  'S 5 b 100 2589',\n  'S 5 s 2591 2590',\n  'S 4 t 2592 100',\n  'S 4 s 100 2593',\n  'S 6 o 2073 100',\n  'S 5 s 230 100',\n  'S 4 c 100 2594',\n  'S 3 h 100 2595',\n  'S 3 l 230 100',\n  'S 4 p 562 100',\n  'S 5 s 100 2596',\n  'S 4 s 230 100',\n  'S 4 g 100 230',\n  'S 3 r 230 2597',\n  'S 6 u 100 2598',\n  'S 4 f 29 2599',\n  'S 3 r 29 2600',\n  'S 4 b 230 2601',\n  'S 3 n 100 230',\n  'S 2 i 68 29',\n  'S 4 c 1416 2602',\n  'S 6 p 100 2603',\n  'S 4 m 42 2604',\n  'S 6 n 2605 68',\n  'S 1 a 68 42',\n  'S 6 c 100 2606',\n  'S 4 d 42 2607',\n  'S 6 n 100 1353',\n  'S 2 r 68 2608',\n  'S 3 h 100 2609',\n  'S 2 h 68 2610',\n  'S 2 n 230 2611',\n  'S 1 k 28 2612',\n  'S 1 d 29 230',\n  'S 3 t 28 2613',\n  'S 6 o 2615 2614',\n  'S 4 g 2617 2616',\n  'S 3 f 29 2618',\n  'S 6 i 2620 2619',\n  'S 2 i 68 2621',\n  'S 5 h 68 2622',\n  'S 4 p 100 2623',\n  'S 3 k 2624 100',\n  'S 2 g 100 2625',\n  'S 5 u 68 2626',\n  'S 3 r 68 2627',\n  'S 6 o 2317 68',\n  'S 1 u 68 2628',\n  'S 1 m 100 2629',\n  'S 4 t 100 2630',\n  'S 6 o 68 2631',\n  'S 5 n 100 2632',\n  'S 5 p 100 68',\n  'S 6 r 100 2216',\n  'S 6 i 2634 2633',\n  'S 5 c 100 2635',\n  'S 2 s 100 2636',\n  'S 5 u 1891 100',\n  'S 4 g 100 2637',\n  'S 2 c 42 100',\n  'S 3 h 100 68',\n  'S 4 c 2638 100',\n  'S 4 t 100 2639',\n  'S 5 l 100 2640',\n  'S 4 s 100 562',\n  'S 3 b 230 100',\n  'S 3 k 29 2641',\n  'S 4 m 100 2642',\n  'S 5 z 230 2643',\n  'S 5 r 230 100',\n  'S 3 l 230 2644',\n  'S 6 i 1996 100',\n  'S 3 l 100 2645',\n  'S 4 g 100 2646',\n  'S 3 t 100 230',\n  'S 3 p 68 2647',\n  'S 3 v 100 2648',\n  'S 4 p 230 42',\n  'S 4 t 100 2649',\n  'S 3 p 2651 2650',\n  'S 3 p 100 1825',\n  'S 1 e 42 2652',\n  'S 2 t 100 2653',\n  'S 1 e 68 2654',\n  'S 5 s 29 2655',\n  'S 3 t 28 2656',\n  'S 1 a 28 2657',\n  'S 6 h 100 2658',\n  'S 5 n 230 2659',\n  'S 3 m 68 2660',\n  'S 1 r 100 42',\n  'S 4 t 2662 2661',\n  'S 3 l 29 2663',\n  'S 3 i 68 100',\n  'S 3 s 68 42',\n  'S 3 s 68 100',\n  'S 3 v 562 2664',\n  'S 2 n 562 100',\n  'S 1 a 68 100',\n  'S 5 h 68 2665',\n  'S 1 o 100 2666',\n  'S 6 e 2668 2667',\n  'S 6 r 2670 2669',\n  'S 5 f 2672 2671',\n  'S 6 u 68 100',\n  'S 4 d 2673 100',\n  'S 6 o 2675 2674',\n  'S 3 r 2676 100',\n  'S 3 n 1423 2677',\n  'S 5 t 2678 100',\n  'S 3 r 42 100',\n  'S 3 b 29 2679',\n  'S 4 f 100 2680',\n  'S 3 c 2073 2681',\n  'S 5 b 2683 2682',\n  'S 6 i 100 2684',\n  'S 5 l 100 2685',\n  'S 4 c 100 2686',\n  'S 6 m 68 2687',\n  'S 6 y 2689 2688',\n  'S 4 t 100 2690',\n  'S 6 b 100 230',\n  'S 2 t 68 2691',\n  'S 3 n 2693 2692',\n  'S 6 r 68 2694',\n  'S 2 n 68 42',\n  'S 1 d 68 2695',\n  'S 1 m 100 2696',\n  'S 6 o 29 2697',\n  'S 1 o 29 2698',\n  'S 1 i 28 2699',\n  'S 5 k 2701 2700',\n  'S 5 z 29 2702',\n  'S 3 s 68 2703',\n  'S 2 h 100 2704',\n  'S 2 m 68 2705',\n  'S 3 r 28 68',\n  'S 2 t 100 2706',\n  'S 6 # 68 2707',\n  'S 6 # 100 68',\n  'S 5 t 2709 2708',\n  'S 5 t 29 100',\n  'S 3 h 100 2710',\n  'S 3 x 100 29',\n  'S 5 s 2712 2711',\n  'S 6 o 68 2713',\n  'S 5 d 68 100',\n  'S 6 a 2715 2714',\n  'S 3 l 2717 2716',\n  'S 4 n 2719 2718',\n  'S 4 n 29 230',\n  'S 4 n 100 562',\n  'S 6 t 29 100',\n  'S 4 m 100 2299',\n  'S 3 z 230 2720',\n  'S 3 c 100 2721',\n  'S 3 r 68 100',\n  'S 3 m 100 2722',\n  'S 4 m 100 2723',\n  'S 6 l 230 2724',\n  'S 6 u 68 2725',\n  'S 3 t 100 2726',\n  'S 3 m 29 100',\n  'S 3 c 230 2727',\n  'S 3 v 68 2728',\n  'S 4 t 42 2729',\n  'S 6 r 42 68',\n  'S 4 l 42 230',\n  'S 3 v 68 2730',\n  'S 3 c 68 2731',\n  'S 3 c 29 2732',\n  'S 1 a 29 2733',\n  'S 3 r 29 2734',\n  'S 3 l 100 2735',\n  'S 6 s 100 2736',\n  'S 4 s 29 1860',\n  'S 3 n 562 2737',\n  'S 6 i 2739 2738',\n  'S 3 n 68 2740',\n  'S 5 h 2742 2741',\n  'S 6 o 68 1722',\n  'S 5 z 29 2743',\n  'S 1 n 68 2744',\n  'S 6 i 100 2745',\n  'S 6 u 562 2746',\n  'S 4 b 2747 100',\n  'S 6 i 68 2748',\n  'S 3 v 68 2749',\n  'S 5 c 2194 2750',\n  'S 5 k 100 2751',\n  'S 5 b 562 100',\n  'S 2 g 100 2752',\n  'S 5 c 562 100',\n  'S 3 v 100 2753',\n  'S 3 t 2754 100',\n  'S 6 o 68 29',\n  'S 5 m 100 2755',\n  'S 4 t 100 2756',\n  'S 4 s 100 2757',\n  'S 6 h 29 2758',\n  'S 4 k 68 2759',\n  'S 4 l 68 2760',\n  'S 4 s 42 2761',\n  'S 2 r 2763 2762',\n  'S 3 s 68 2764',\n  'S 2 e 230 29',\n  'S 3 i 28 2765',\n  'S 2 t 28 2766',\n  'S 4 c 29 2767',\n  'S 2 e 100 2768',\n  'S 2 o 2216 2769',\n  'S 4 c 2771 2770',\n  'S 3 h 29 68',\n  'S 2 o 100 2772',\n  'S 2 l 2774 2773',\n  'S 4 t 1287 68',\n  'S 5 j 29 2295',\n  'S 1 o 230 2775',\n  'S 1 s 100 2776',\n  'S 5 d 2778 2777',\n  'S 6 t 68 1204',\n  'S 6 l 68 100',\n  'S 5 u 2779 100',\n  'S 4 g 100 2780',\n  'S 5 n 230 2781',\n  'S 5 h 42 100',\n  'S 5 c 2782 100',\n  'S 5 p 100 562',\n  'S 3 z 230 2783',\n  'S 4 m 100 2784',\n  'S 6 w 68 2785',\n  'S 4 v 29 2786',\n  'S 2 # 2788 2787',\n  'S 4 c 42 2789',\n  'S 4 v 42 2790',\n  'S 2 u 562 2791',\n  'S 1 e 100 1425',\n  'S 3 t 68 2792',\n  'S 1 m 28 2793',\n  'S 2 i 28 2794',\n  'S 1 i 100 2795',\n  'S 2 u 29 2796',\n  'S 3 h 2798 2797',\n  'S 6 e 100 68',\n  'S 2 e 29 2799',\n  'S 2 e 100 68',\n  'S 5 k 2801 2800',\n  'S 4 m 68 2802',\n  'S 2 r 100 2803',\n  'S 6 o 100 2804',\n  'S 6 a 2806 2805',\n  'S 4 b 100 2807',\n  'S 2 s 2601 100',\n  'S 4 m 100 2808',\n  'S 2 f 100 2809',\n  'S 3 f 100 230',\n  'S 3 p 2811 2810',\n  'S 3 c 100 2812',\n  'S 4 d 100 2813',\n  'S 6 k 29 2814',\n  'S 4 v 230 2815',\n  'S 6 r 68 2816',\n  'S 4 v 68 230',\n  'S 3 d 42 2817',\n  'S 2 c 100 2818',\n  'S 2 a 68 2819',\n  'S 2 o 29 2820',\n  'S 3 b 28 2821',\n  'S 5 p 100 2822',\n  'S 4 s 29 2823',\n  'S 4 s 2824 100',\n  'S 5 m 100 68',\n  'S 1 t 29 68',\n  'S 1 o 100 2825',\n  'S 1 o 68 2826',\n  'S 5 s 562 68',\n  'S 2 n 100 2827',\n  'S 1 l 100 2828',\n  'S 5 k 562 2829',\n  'S 5 v 68 100',\n  'S 6 i 68 100',\n  'S 4 n 100 2830',\n  'S 5 h 29 100',\n  'S 5 t 2832 2831',\n  'S 5 s 230 2538',\n  'S 3 p 100 230',\n  'S 3 s 100 2748',\n  'S 4 z 68 2833',\n  'S 4 b 68 2834',\n  'S 4 n 68 1799',\n  'S 6 a 42 2835',\n  'S 3 b 100 2836',\n  'S 1 a 68 2837',\n  'S 2 a 29 2838',\n  'S 3 n 28 2839',\n  'S 2 s 100 2840',\n  'S 1 a 100 2841',\n  'S 3 p 100 2625',\n  'S 2 s 100 2842',\n  'S 3 s 68 2843',\n  'S 6 a 100 2844',\n  'S 3 m 2770 100',\n  'S 6 i 562 2845',\n  'S 2 f 100 2846',\n  'S 3 k 100 2847',\n  'S 4 t 230 100',\n  'S 3 l 68 2848',\n  'S 4 g 68 100',\n  'S 6 r 2850 2849',\n  'S 3 p 100 2851',\n  'S 2 o 2852 68',\n  'S 2 i 29 28',\n  'S 2 s 28 2853',\n  'S 1 m 100 2854',\n  'S 2 c 100 29',\n  'S 3 c 100 2855',\n  'S 1 a 68 1853',\n  'S 2 s 100 2856',\n  'S 5 v 100 2857',\n  'S 5 u 100 2858',\n  'S 5 g 100 2859',\n  'S 4 h 68 2860',\n  'S 4 n 100 1552',\n  'S 4 m 42 2861',\n  'S 2 g 100 2862',\n  'S 1 d 29 68',\n  'S 3 g 28 2863',\n  'S 5 m 2865 2864',\n  'S 2 g 68 2866',\n  'S 3 r 100 2867',\n  'S 5 n 100 2868',\n  'S 3 l 100 1227',\n  'S 3 r 100 2869',\n  'S 6 m 230 100',\n  'S 4 d 100 2870',\n  'S 2 e 2183 2871',\n  'S 2 c 28 240',\n  'S 5 b 100 2872',\n  'S 6 a 100 562',\n  'S 4 m 68 2873',\n  'S 2 a 100 2874',\n  'S 4 b 100 2875',\n  'S 5 c 2876 100',\n  'S 3 g 100 42',\n  'S 4 p 100 2877',\n  'S 2 l 2879 2878',\n  'S 3 r 100 2880',\n  'S 6 i 100 29',\n  'S 5 m 562 68',\n  'S 4 c 100 230',\n  'S 3 i 100 2881',\n  'S 5 s 2883 2882',\n  'S 1 a 230 68',\n  'S 5 s 100 68',\n  'S 1 c 68 2884',\n  'S 3 p 230 2885',\n  'S 1 a 68 2886',\n  'S 3 r 2183 2887',\n  'S 4 g 100 2888',\n  'S 4 s 2889 29',\n  'S 4 d 562 2890',\n  'S 4 d 100 2891',\n  'S 2 o 29 100',\n  'S 4 t 100 2892',\n  'S 5 c 100 68',\n  'S 3 m 562 2893',\n  'S 2 s 562 100',\n  'I 2894 b',\n  'S 4 b 2896 2895',\n  'S 3 m 2898 2897',\n  'S 1 c 2900 2899',\n  'S 4 t 2902 2901',\n  'S 4 # 2899 2903',\n  'P epsilon',\n  'S 2 r 2904 2899',\n  'P b',\n  'S 1 d 2899 2905',\n  'S 4 s 2899 2906',\n  'S 3 a 2899 2901',\n  'S 2 d 2899 2901',\n  'S 2 o 2908 2907',\n  'S 1 l 2910 2909',\n  'S 4 a 2901 2911',\n  'S 2 u 2912 2901',\n  'S 2 i 2913 2901',\n  'S 1 b 2899 2914',\n  'S 1 d 2899 2901',\n  'S 4 e 2899 2901',\n  'S 1 c 2913 2901',\n  'I 2915 c',\n  'S 4 k 2917 2916',\n  'S 4 h 2919 2918',\n  'S 5 i 2921 2920',\n  'S 4 e 2923 2922',\n  'S 3 s 2925 2924',\n  'P epsilon',\n  'S 6 # 2926 2920',\n  'S 4 i 2928 2927',\n  'S 3 s 2920 2929',\n  'S 3 t 2931 2930',\n  'S 2 t 2931 2932',\n  'S 1 # 2920 2933',\n  'S 4 c 2935 2934',\n  'S 3 s 2937 2936',\n  'S 3 m 2939 2938',\n  'S 2 0 2941 2940',\n  'P ch',\n  'S 5 o 2943 2942',\n  'S 1 o 2945 2944',\n  'S 4 y 2947 2946',\n  'S 5 e 2949 2948',\n  'S 5 a 2951 2950',\n  'S 5 a 2953 2952',\n  'S 3 x 2920 2954',\n  'P k',\n  'S 3 n 2956 2955',\n  'S 5 r 2939 2957',\n  'S 5 i 2959 2958',\n  'S 6 o 2939 2920',\n  'S 1 a 2961 2960',\n  'P t-s',\n  'S 4 z 2963 2962',\n  'S 5 r 2939 2964',\n  'S 5 i 2965 2920',\n  'S 3 a 2939 2966',\n  'S 3 c 2968 2967',\n  'S 6 l 2970 2969',\n  'S 1 p 2931 2920',\n  'S 1 0 2920 2931',\n  'S 5 k 2972 2971',\n  'S 2 v 2931 2973',\n  'S 5 o 2975 2974',\n  'S 5 l 2939 2976',\n  'S 6 d 2978 2977',\n  'S 1 0 2920 2939',\n  'S 3 i 2945 2979',\n  'S 2 l 2920 2945',\n  'S 4 g 2920 2980',\n  'S 2 s 2920 2931',\n  'P s',\n  'S 6 # 2920 2981',\n  'S 2 s 2939 2920',\n  'S 6 u 2983 2982',\n  'S 5 # 2931 2984',\n  'S 3 i 2970 2985',\n  'P sh',\n  'S 6 n 2987 2986',\n  'S 3 i 2931 2988',\n  'S 2 e 2990 2989',\n  'S 6 l 2992 2991',\n  'S 6 r 2939 2993',\n  'S 5 a 2995 2994',\n  'S 1 0 2997 2996',\n  'S 5 a 2920 2939',\n  'S 1 r 2945 2998',\n  'S 4 q 2920 2999',\n  'S 6 d 2939 3000',\n  'S 3 x 2920 3001',\n  'S 5 o 2970 2964',\n  'S 5 o 2931 3002',\n  'S 6 t 3004 3003',\n  'S 2 0 3006 3005',\n  'S 5 a 2970 2964',\n  'S 1 # 2931 3007',\n  'S 5 e 3009 3008',\n  'S 3 i 2939 3010',\n  'S 5 e 2931 3011',\n  'S 2 i 2931 2970',\n  'S 6 # 2931 2939',\n  'S 6 v 2931 3012',\n  'S 6 r 2931 3013',\n  'S 5 a 3014 2920',\n  'S 6 m 3015 2920',\n  'S 2 r 2945 3016',\n  'S 3 k 2920 3017',\n  'S 6 a 2920 3018',\n  'S 6 n 3020 3019',\n  'S 1 # 2964 3021',\n  'S 3 c 2931 3022',\n  'S 1 p 2970 2964',\n  'S 5 o 2970 3023',\n  'S 5 n 2964 3024',\n  'S 1 o 2931 3025',\n  'S 3 e 3027 3026',\n  'S 6 r 3029 3028',\n  'S 3 c 2939 3030',\n  'S 1 s 2939 3031',\n  'S 6 r 3033 3032',\n  'S 6 u 2970 2931',\n  'S 6 r 3034 2920',\n  'S 5 e 2939 2920',\n  'S 3 a 2945 3035',\n  'S 3 n 3037 3036',\n  'S 3 a 3038 2920',\n  'S 3 m 2939 3039',\n  'S 2 f 2970 3040',\n  'S 1 v 2964 2931',\n  'S 1 0 2931 3041',\n  'S 6 c 3043 3042',\n  'S 6 s 2964 3044',\n  'S 1 a 2931 3045',\n  'S 2 b 3047 3046',\n  'S 2 i 3049 3048',\n  'S 6 n 3051 3050',\n  'S 3 a 2939 3052',\n  'S 3 u 2939 3053',\n  'S 5 # 2931 3054',\n  'S 6 a 3056 3055',\n  'S 5 o 2939 2931',\n  'S 1 d 2931 2939',\n  'S 3 o 2945 2920',\n  'S 2 u 3058 3057',\n  'S 1 r 3059 2939',\n  'S 1 # 2939 2920',\n  'S 5 e 3061 3060',\n  'S 5 n 2964 3062',\n  'S 3 n 2931 3063',\n  'S 3 n 3065 3064',\n  'S 2 a 2931 2964',\n  'S 5 m 2964 3066',\n  'S 3 a 2964 2931',\n  'S 3 c 2939 3067',\n  'S 5 # 2939 3068',\n  'S 5 a 3070 3069',\n  'S 5 # 2931 2939',\n  'S 6 l 3072 3071',\n  'S 3 r 2931 2939',\n  'S 1 r 2931 3073',\n  'S 3 r 3074 2931',\n  'S 6 s 2931 3075',\n  'S 6 m 3076 2931',\n  'S 5 i 2939 2931',\n  'S 4 # 2939 3077',\n  'S 4 l 2920 2939',\n  'S 5 i 2964 2939',\n  'S 5 # 3079 3078',\n  'S 6 # 2939 3080',\n  'S 3 n 2931 2964',\n  'S 6 n 2970 3081',\n  'S 5 l 3083 3082',\n  'S 5 n 3084 2964',\n  'S 6 u 2931 3085',\n  'S 2 o 3087 3086',\n  'S 1 # 3088 2931',\n  'S 5 i 3090 3089',\n  'S 2 m 2939 2931',\n  'S 6 t 3092 3091',\n  'S 2 r 2970 3093',\n  'S 3 e 2939 3094',\n  'S 5 a 2931 3095',\n  'S 1 r 2931 3096',\n  'S 5 e 2939 2931',\n  'S 1 n 3097 2939',\n  'S 6 g 2964 3098',\n  'S 3 i 2931 3099',\n  'S 3 n 2964 3100',\n  'S 3 r 2964 3101',\n  'S 1 a 3103 3102',\n  'S 6 e 2964 3104',\n  'S 1 v 2931 2964',\n  'S 5 p 2964 3105',\n  'S 2 u 3107 3106',\n  'S 3 r 3108 2931',\n  'S 6 e 2939 3109',\n  'S 1 c 3110 2939',\n  'S 6 n 2931 2939',\n  'S 6 m 3112 3111',\n  'S 2 a 2939 3113',\n  'S 3 a 2931 2939',\n  'S 1 # 2931 3114',\n  'S 1 k 2931 3115',\n  'S 6 n 2931 3116',\n  'S 4 t 3117 2939',\n  'S 5 n 3119 3118',\n  'S 3 a 2931 2964',\n  'S 3 r 2939 3120',\n  'S 3 a 2931 2970',\n  'S 5 s 3122 3121',\n  'S 3 i 2964 3099',\n  'S 3 a 2964 3123',\n  'S 6 t 2964 3124',\n  'S 5 i 3126 3125',\n  'S 5 a 3127 2931',\n  'S 5 a 2931 3056',\n  'S 6 n 2939 3128',\n  'S 2 h 2931 2939',\n  'S 2 s 2939 3129',\n  'S 3 o 2939 3130',\n  'S 1 # 2970 3131',\n  'S 3 r 3133 3132',\n  'S 5 e 2931 2939',\n  'S 2 i 2931 3134',\n  'S 3 i 3135 2939',\n  'S 3 i 2964 3136',\n  'S 2 m 2939 3137',\n  'S 2 0 2931 3138',\n  'S 6 # 2964 3139',\n  'S 6 t 2920 2964',\n  'S 6 y 2964 3140',\n  'S 5 r 3141 2964',\n  'S 5 a 3143 3142',\n  'S 3 a 3145 3144',\n  'S 1 p 2931 2970',\n  'S 6 a 2939 3146',\n  'S 6 d 2931 3147',\n  'S 1 # 2931 2939',\n  'S 3 o 2970 2931',\n  'S 2 o 2931 2939',\n  'S 2 a 2931 2939',\n  'S 5 a 3148 2931',\n  'S 2 d 2920 2939',\n  'S 5 c 3150 3149',\n  'S 6 s 2931 3151',\n  'S 6 s 2964 3152',\n  'S 6 o 2964 3153',\n  'S 1 m 3155 3154',\n  'S 6 e 2964 3156',\n  'S 6 w 3158 3157',\n  'S 6 e 2939 3159',\n  'S 3 r 2939 3160',\n  'S 6 e 2931 3161',\n  'S 3 u 2939 2931',\n  'S 6 v 2931 3162',\n  'S 6 r 2931 2939',\n  'S 5 o 3164 3163',\n  'S 1 0 2964 2931',\n  'S 1 m 2931 3165',\n  'S 3 a 2970 2964',\n  'S 3 i 2964 3166',\n  'S 2 a 2964 3167',\n  'S 6 l 2964 2931',\n  'S 6 a 2964 3168',\n  'S 3 o 3170 3169',\n  'S 3 a 2920 2931',\n  'S 1 0 2939 3171',\n  'S 2 s 2939 3172',\n  'S 2 m 2970 3173',\n  'S 1 l 2931 3174',\n  'S 5 u 2964 3175',\n  'S 3 o 2964 3176',\n  'S 6 o 2931 3177',\n  'S 2 e 2964 3178',\n  'S 6 l 3179 2964',\n  'S 6 v 2964 2931',\n  'S 2 r 3181 3180',\n  'S 5 u 2931 2939',\n  'S 3 r 3183 3182',\n  'S 2 a 2931 3184',\n  'S 1 s 2970 2993',\n  'S 6 c 2931 3185',\n  'S 5 k 2931 3186',\n  'S 6 # 3187 2931',\n  'S 3 l 2931 3188',\n  'S 2 d 2964 3189',\n  'S 3 i 2964 3190',\n  'S 2 l 3192 3191',\n  'S 1 # 2931 3193',\n  'S 6 u 2970 3194',\n  'S 1 # 2970 2939',\n  'S 2 m 2931 3195',\n  'S 3 u 3197 3196',\n  'S 5 m 3199 3198',\n  'S 3 a 2964 3200',\n  'S 6 a 3201 2964',\n  'S 5 r 3203 3202',\n  'S 1 p 2964 2931',\n  'S 2 y 2920 3204',\n  'S 5 # 2939 3205',\n  'S 3 a 3049 2939',\n  'S 3 u 3207 3206',\n  'S 3 o 3208 2931',\n  'S 2 o 3210 3209',\n  'S 6 # 2970 2931',\n  'S 3 e 2964 3211',\n  'S 1 0 2931 2964',\n  'S 1 c 2931 2964',\n  'S 1 l 2964 2931',\n  'S 3 e 2964 3212',\n  'S 2 r 2964 3213',\n  'S 5 # 3215 3214',\n  'S 5 l 2939 3216',\n  'S 3 a 3218 3217',\n  'S 6 r 2939 2931',\n  'S 2 r 2939 2931',\n  'S 1 c 2939 3219',\n  'S 1 # 2939 2931',\n  'S 1 # 3220 2964',\n  'S 2 l 2964 3221',\n  'S 1 # 3045 2964',\n  'S 3 y 2939 3222',\n  'S 1 # 2931 3223',\n  'S 6 e 2939 3224',\n  'S 3 i 2931 3225',\n  'S 1 # 3207 2931',\n  'S 2 r 3227 3226',\n  'S 6 a 2931 2964',\n  'S 1 s 2964 3228',\n  'S 6 l 2939 3229',\n  'S 1 t 2931 3230',\n  'S 5 t 2931 2939',\n  'S 3 o 2939 2931',\n  'S 1 a 2931 3231',\n  'S 3 i 2931 3232',\n  'S 1 f 2964 3233',\n  'S 5 u 2931 3234',\n  'S 1 a 2920 3235',\n  'S 2 a 2931 3236',\n  'S 3 o 2931 2939',\n  'S 6 e 2964 3237',\n  'S 5 o 3239 3238',\n  'S 1 o 2939 3240',\n  'S 1 # 2931 3197',\n  'S 1 t 2964 3241',\n  'S 6 i 3051 3242',\n  'S 6 # 2931 3243',\n  'S 1 u 2939 3244',\n  'S 3 a 3245 2964',\n  'S 2 n 2939 3246',\n  'S 1 0 2939 2931',\n  'S 3 a 2939 3247',\n  'S 2 f 2964 3248',\n  'S 1 # 3250 3249',\n  'S 1 r 2939 3251',\n  'S 5 t 2964 3252',\n  'S 5 m 2931 2939',\n  'S 5 y 2931 3253',\n  'S 3 i 2931 3254',\n  'S 1 # 2964 3255',\n  'S 2 m 2931 3256',\n  'S 2 a 2931 3257',\n  'S 1 g 2964 3258',\n  'S 6 a 2931 2939',\n  'S 2 i 2931 2939',\n  'S 1 r 2964 3259',\n  'S 5 # 2964 2931',\n  'I 3260 d',\n  'S 4 # 3262 3261',\n  'S 4 d 3264 3263',\n  'S 3 e 3266 3265',\n  'S 4 g 3268 3267',\n  'S 2 g 3270 3269',\n  'P d',\n  'S 2 k 3272 3271',\n  'S 4 t 3274 3273',\n  'S 5 e 3276 3275',\n  'S 3 o 3276 3277',\n  'S 3 o 3265 3276',\n  'S 2 h 3279 3278',\n  'P t',\n  'S 4 j 3276 3280',\n  'S 5 # 3282 3281',\n  'S 5 r 3265 3283',\n  'P epsilon',\n  'S 2 b 3276 3284',\n  'S 2 p 3272 3285',\n  'S 1 t 3265 3286',\n  'S 3 d 3288 3287',\n  'S 1 # 3265 3289',\n  'S 3 u 3265 3270',\n  'S 5 a 3265 3290',\n  'S 3 e 3292 3291',\n  'S 2 c 3272 3293',\n  'S 1 g 3265 3272',\n  'S 4 u 3295 3294',\n  'S 2 e 3297 3296',\n  'S 5 h 3265 3298',\n  'S 5 o 3265 3276',\n  'S 5 y 3276 3299',\n  'S 5 y 3265 3300',\n  'S 2 s 3302 3301',\n  'S 4 z 3303 3265',\n  'S 2 0 3265 3304',\n  'S 4 e 3306 3305',\n  'S 4 y 3276 3307',\n  'S 1 o 3265 3308',\n  'S 5 i 3276 3309',\n  'S 6 r 3276 3310',\n  'S 2 f 3272 3311',\n  'S 1 s 3272 3312',\n  'S 6 # 3265 3313',\n  'S 5 a 3315 3314',\n  'S 1 # 3265 3316',\n  'S 1 b 3265 3317',\n  'S 6 # 3265 3318',\n  'S 5 k 3265 3276',\n  'S 2 m 3276 3319',\n  'S 2 p 3265 3276',\n  'S 2 x 3272 3265',\n  'S 1 r 3272 3320',\n  'S 6 k 3265 3321',\n  'S 5 l 3323 3322',\n  'S 1 g 3321 3324',\n  'S 1 w 3265 3325',\n  'S 1 l 3265 3326',\n  'S 1 p 3276 3327',\n  'S 6 d 3276 3328',\n  'S 1 a 3272 3329',\n  'P jh',\n  'S 3 e 3330 3265',\n  'S 3 o 3321 3331',\n  'S 3 i 3321 3265',\n  'S 6 d 3265 3332',\n  'S 5 d 3265 3333',\n  'S 5 r 3265 3334',\n  'S 2 w 3265 3335',\n  'S 1 n 3272 3336',\n  'S 1 # 3265 3337',\n  'S 2 h 3321 3338',\n  'S 2 a 3340 3339',\n  'S 1 m 3265 3341',\n  'S 4 i 3265 3342',\n  'S 1 s 3344 3343',\n  'S 1 i 3265 3345',\n  'S 1 0 3321 3346',\n  'S 6 t 3265 3347',\n  'S 1 r 3348 3265',\n  'S 6 # 3265 3349',\n  'S 1 s 3265 3350',\n  'S 5 # 3276 3265',\n  'S 2 p 3276 3351',\n  'S 2 h 3265 3276',\n  'S 1 o 3265 3352',\n  'S 5 c 3265 3321',\n  'S 2 i 3265 3353',\n  'S 2 i 3276 3265',\n  'S 1 h 3276 3265',\n  'S 6 # 3265 3354',\n  'S 1 c 3276 3355',\n  'S 1 u 3265 3272',\n  'S 3 n 3321 3265',\n  'S 2 a 3276 3356',\n  'S 2 l 3276 3357',\n  'S 5 r 3276 3265',\n  'S 2 f 3276 3358',\n  'S 3 i 3360 3359',\n  'S 2 r 3276 3361',\n  'S 2 r 3265 3276',\n  'S 5 e 3362 3276',\n  'S 1 # 3276 3265',\n  'I 3363 e',\n  'S 6 0 3365 3364',\n  'S 4 r 3367 3366',\n  'S 4 # 3369 3368',\n  'S 4 a 3371 3370',\n  'S 5 r 3373 3372',\n  'S 4 r 3375 3374',\n  'S 3 e 3377 3376',\n  'S 3 e 3379 3378',\n  'S 5 r 3381 3380',\n  'S 5 i 3383 3382',\n  'S 3 b 3385 3384',\n  'S 4 n 3387 3386',\n  'S 3 e 3389 3388',\n  'S 3 n 3391 3390',\n  'S 2 r 3393 3392',\n  'S 4 e 3395 3394',\n  'S 2 r 3397 3396',\n  'S 5 u 3399 3398',\n  'S 3 w 3385 3400',\n  'S 3 e 3389 3401',\n  'S 6 n 3403 3402',\n  'S 1 0 3405 3404',\n  'P eh1',\n  'S 3 e 3407 3406',\n  'S 3 e 3393 3408',\n  'S 2 e 3409 3399',\n  'P ih1',\n  'S 3 r 3411 3410',\n  'S 2 o 3413 3412',\n  'S 2 p 3393 3414',\n  'P iy1',\n  'S 4 i 3416 3415',\n  'S 3 r 3417 3399',\n  'S 2 f 3418 3393',\n  'S 1 # 3420 3419',\n  'S 5 d 3422 3421',\n  'P epsilon',\n  'S 3 b 3424 3423',\n  'S 5 o 3426 3425',\n  'S 6 a 3428 3427',\n  'S 3 e 3389 3399',\n  'S 3 h 3385 3429',\n  'S 3 p 3399 3430',\n  'S 4 l 3432 3431',\n  'S 1 # 3393 3433',\n  'S 3 m 3435 3434',\n  'S 3 w 3437 3436',\n  'S 3 k 3439 3438',\n  'S 2 d 3441 3440',\n  'S 2 i 3399 3442',\n  'S 1 i 3444 3443',\n  'S 2 n 3393 3445',\n  'S 1 0 3447 3446',\n  'S 5 r 3449 3448',\n  'S 1 0 3451 3450',\n  'S 1 # 3393 3452',\n  'S 1 p 3453 3393',\n  'S 5 a 3455 3454',\n  'S 6 h 3457 3456',\n  'S 3 h 3385 3458',\n  'S 1 u 3444 3459',\n  'S 6 d 3399 3385',\n  'S 5 e 3461 3460',\n  'S 1 0 3463 3462',\n  'S 6 o 3465 3464',\n  'S 3 l 3399 3466',\n  'S 2 o 3399 3467',\n  'S 6 a 3468 3385',\n  'S 4 k 3470 3469',\n  'S 3 i 3472 3471',\n  'S 2 r 3393 3473',\n  'S 2 g 3475 3474',\n  'S 1 a 3455 3476',\n  'S 3 y 3477 3399',\n  'P y-uw1',\n  'S 2 n 3479 3478',\n  'S 2 t 3444 3480',\n  'S 2 b 3399 3481',\n  'S 1 n 3399 3455',\n  'S 2 a 3399 3482',\n  'S 1 t 3399 3483',\n  'P iy',\n  'S 1 d 3393 3484',\n  'S 3 i 3486 3485',\n  'S 3 r 3488 3487',\n  'S 5 g 3490 3489',\n  'S 6 a 3385 3491',\n  'S 2 p 3492 3399',\n  'S 6 a 3444 3493',\n  'S 4 d 3444 3393',\n  'S 4 m 3385 3494',\n  'S 4 n 3389 3495',\n  'P ah',\n  'S 1 0 3497 3496',\n  'S 5 t 3498 3393',\n  'S 3 t 3500 3499',\n  'S 6 r 3393 3399',\n  'S 5 a 3502 3501',\n  'S 6 d 3399 3503',\n  'S 6 # 3505 3504',\n  'S 3 a 3385 3506',\n  'S 6 e 3508 3507',\n  'S 3 t 3389 3509',\n  'S 2 a 3389 3510',\n  'S 6 y 3385 3511',\n  'S 3 s 3385 3512',\n  'S 3 t 3514 3513',\n  'S 1 # 3385 3515',\n  'S 3 t 3517 3516',\n  'S 1 # 3399 3518',\n  'S 4 d 3393 3519',\n  'S 3 i 3521 3520',\n  'S 3 r 3522 3455',\n  'S 2 l 3522 3523',\n  'S 1 m 3399 3524',\n  'S 3 h 3399 3525',\n  'S 3 t 3526 3399',\n  'S 2 z 3444 3527',\n  'S 1 i 3529 3528',\n  'S 2 e 3399 3530',\n  'S 1 h 3399 3531',\n  'S 2 s 3533 3532',\n  'S 5 t 3535 3534',\n  'S 5 t 3537 3536',\n  'S 4 w 3539 3538',\n  'S 4 v 3541 3540',\n  'S 3 r 3543 3542',\n  'S 6 h 3545 3544',\n  'S 6 o 3385 3546',\n  'S 5 m 3444 3399',\n  'S 6 t 3444 3399',\n  'P ih',\n  'S 6 # 3393 3547',\n  'S 5 s 3549 3548',\n  'S 3 r 3551 3550',\n  'S 2 # 3385 3552',\n  'S 3 d 3385 3553',\n  'S 1 # 3385 3554',\n  'S 5 u 3556 3555',\n  'S 6 # 3558 3557',\n  'S 1 0 3560 3559',\n  'S 1 # 3546 3399',\n  'S 3 i 3399 3385',\n  'S 6 u 3399 3561',\n  'S 3 d 3563 3562',\n  'S 1 0 3385 3564',\n  'S 1 i 3385 3565',\n  'S 2 i 3389 3566',\n  'S 1 m 3385 3567',\n  'S 3 t 3399 3568',\n  'S 4 t 3570 3569',\n  'S 4 d 3455 3571',\n  'S 3 t 3573 3572',\n  'S 3 a 3399 3574',\n  'S 2 s 3455 3575',\n  'S 1 a 3576 3399',\n  'S 1 s 3393 3577',\n  'S 1 # 3578 3455',\n  'S 2 t 3399 3579',\n  'P eh',\n  'S 1 o 3455 3580',\n  'P ey1',\n  'S 2 e 3582 3581',\n  'S 1 a 3444 3583',\n  'S 2 d 3444 3584',\n  'S 1 d 3399 3585',\n  'S 2 o 3444 3399',\n  'S 2 y 3399 3586',\n  'S 1 b 3399 3587',\n  'S 1 e 3444 3588',\n  'S 1 s 3444 3393',\n  'S 5 s 3590 3589',\n  'S 6 # 3592 3591',\n  'S 4 n 3594 3593',\n  'S 4 s 3596 3595',\n  'S 4 u 3598 3597',\n  'S 3 n 3600 3599',\n  'S 4 u 3602 3601',\n  'S 5 i 3604 3603',\n  'S 3 v 3606 3605',\n  'S 5 n 3608 3607',\n  'S 6 n 3609 3399',\n  'S 3 l 3399 3610',\n  'S 3 h 3385 3399',\n  'S 5 e 3611 3393',\n  'S 5 b 3613 3612',\n  'S 6 u 3385 3614',\n  'S 3 h 3616 3615',\n  'S 5 g 3618 3617',\n  'S 3 h 3393 3385',\n  'S 3 r 3620 3619',\n  'S 1 m 3385 3621',\n  'S 2 e 3623 3622',\n  'S 1 0 3624 3399',\n  'S 1 0 3626 3625',\n  'S 3 i 3399 3627',\n  'S 6 # 3629 3628',\n  'S 6 g 3631 3630',\n  'S 3 p 3399 3632',\n  'S 6 z 3399 3633',\n  'S 1 0 3634 3399',\n  'S 2 x 3389 3399',\n  'S 3 p 3389 3385',\n  'S 2 m 3389 3635',\n  'S 6 o 3637 3636',\n  'S 3 f 3399 3385',\n  'S 4 w 3639 3638',\n  'S 3 k 3455 3640',\n  'S 4 s 3642 3641',\n  'S 3 c 3644 3643',\n  'S 2 a 3522 3645',\n  'S 3 u 3647 3646',\n  'S 2 t 3455 3648',\n  'S 2 n 3455 3399',\n  'S 2 s 3393 3649',\n  'S 3 o 3399 3650',\n  'S 2 r 3455 3399',\n  'S 2 r 3522 3651',\n  'S 3 b 3399 3652',\n  'S 3 s 3399 3653',\n  'S 1 o 3444 3654',\n  'S 2 m 3444 3399',\n  'S 2 u 3399 3655',\n  'S 1 e 3399 3656',\n  'S 1 d 3399 3657',\n  'S 1 u 3444 3658',\n  'S 4 n 3660 3659',\n  'S 6 # 3662 3661',\n  'S 4 n 3664 3663',\n  'S 4 n 3666 3665',\n  'S 4 t 3668 3667',\n  'S 5 c 3670 3669',\n  'S 1 o 3672 3671',\n  'S 6 # 3455 3399',\n  'S 3 d 3674 3673',\n  'S 3 d 3676 3675',\n  'S 5 e 3678 3677',\n  'P uw1',\n  'S 4 n 3680 3679',\n  'S 6 i 3444 3681',\n  'S 5 a 3444 3682',\n  'S 6 e 3444 3683',\n  'S 2 t 3493 3684',\n  'S 5 t 3399 3685',\n  'S 5 m 3686 3399',\n  'S 1 0 3687 3399',\n  'S 2 # 3524 3399',\n  'S 3 h 3399 3688',\n  'S 4 l 3455 3393',\n  'S 2 b 3690 3689',\n  'S 2 a 3399 3691',\n  'S 6 a 3385 3692',\n  'S 5 n 3694 3693',\n  'S 6 t 3385 3695',\n  'S 5 c 3444 3696',\n  'S 6 a 3399 3393',\n  'S 1 0 3697 3393',\n  'S 1 0 3699 3698',\n  'S 6 # 3385 3399',\n  'S 6 # 3399 3700',\n  'S 3 w 3600 3701',\n  'S 6 p 3494 3702',\n  'S 3 h 3703 3399',\n  'S 2 # 3705 3704',\n  'S 3 h 3399 3706',\n  'S 3 h 3708 3707',\n  'S 3 i 3710 3709',\n  'S 6 c 3494 3711',\n  'S 3 d 3444 3399',\n  'S 3 s 3522 3712',\n  'S 3 i 3399 3713',\n  'S 6 v 3399 3714',\n  'S 1 0 3385 3389',\n  'S 1 a 3399 3715',\n  'S 2 n 3385 3399',\n  'S 4 s 3717 3716',\n  'S 2 v 3437 3718',\n  'S 3 u 3720 3719',\n  'S 4 e 3399 3721',\n  'S 2 n 3722 3399',\n  'S 3 z 3522 3723',\n  'S 2 i 3522 3724',\n  'S 1 o 3522 3725',\n  'S 1 e 3455 3726',\n  'S 1 # 3399 3455',\n  'S 2 r 3728 3727',\n  'S 2 l 3393 3729',\n  'S 2 o 3455 3730',\n  'S 1 e 3522 3731',\n  'S 2 b 3399 3732',\n  'S 3 w 3600 3399',\n  'S 1 e 3444 3399',\n  'S 1 t 3399 3733',\n  'S 1 y 3399 3734',\n  'S 1 e 3399 3735',\n  'S 2 f 3444 3736',\n  'S 4 l 3738 3737',\n  'S 5 e 3740 3739',\n  'S 6 i 3385 3741',\n  'S 4 y 3399 3742',\n  'S 4 s 3744 3743',\n  'S 6 s 3746 3745',\n  'S 4 t 3748 3747',\n  'S 1 # 3385 3749',\n  'S 5 l 3751 3750',\n  'S 1 # 3753 3752',\n  'S 1 f 3385 3754',\n  'S 1 e 3455 3755',\n  'S 4 n 3757 3756',\n  'S 6 a 3455 3385',\n  'S 4 x 3759 3758',\n  'S 4 m 3761 3760',\n  'S 3 t 3762 3399',\n  'S 5 t 3762 3399',\n  'S 3 b 3455 3763',\n  'S 6 l 3764 3399',\n  'S 4 y 3524 3765',\n  'S 6 w 3455 3766',\n  'S 5 s 3399 3762',\n  'S 6 l 3385 3767',\n  'S 6 v 3494 3444',\n  'S 3 d 3399 3768',\n  'S 6 l 3399 3524',\n  'S 6 b 3393 3399',\n  'S 6 t 3444 3769',\n  'S 2 0 3524 3770',\n  'S 5 m 3393 3771',\n  'S 3 r 3399 3393',\n  'S 3 g 3399 3772',\n  'S 2 b 3385 3773',\n  'S 5 t 3393 3774',\n  'S 6 d 3444 3393',\n  'S 5 v 3385 3393',\n  'S 5 l 3776 3775',\n  'S 3 b 3393 3777',\n  'S 2 b 3385 3778',\n  'S 6 i 3385 3393',\n  'S 3 z 3780 3779',\n  'S 3 u 3762 3399',\n  'S 3 p 3399 3385',\n  'S 6 p 3385 3781',\n  'S 6 s 3494 3522',\n  'S 3 d 3494 3782',\n  'S 2 e 3399 3385',\n  'S 6 o 3385 3783',\n  'S 1 # 3785 3784',\n  'S 2 w 3385 3786',\n  'S 2 r 3399 3522',\n  'S 3 p 3399 3787',\n  'S 3 v 3399 3788',\n  'S 1 a 3790 3789',\n  'S 6 s 3399 3385',\n  'S 1 # 3792 3791',\n  'S 3 d 3794 3793',\n  'S 3 s 3455 3795',\n  'S 1 # 3600 3796',\n  'S 3 l 3455 3797',\n  'S 2 q 3524 3399',\n  'S 4 y 3399 3798',\n  'S 1 e 3522 3799',\n  'S 3 s 3522 3800',\n  'S 2 e 3522 3801',\n  'S 2 i 3522 3385',\n  'S 1 i 3455 3802',\n  'S 2 h 3455 3385',\n  'S 1 e 3455 3385',\n  'S 4 s 3803 3393',\n  'S 3 r 3385 3455',\n  'S 2 s 3522 3804',\n  'S 3 j 3399 3805',\n  'S 1 s 3806 3399',\n  'S 2 u 3399 3807',\n  'S 1 m 3399 3808',\n  'S 1 n 3444 3809',\n  'S 4 w 3811 3810',\n  'S 5 y 3813 3812',\n  'S 5 d 3815 3814',\n  'S 6 # 3817 3816',\n  'S 1 # 3819 3818',\n  'S 4 w 3600 3820',\n  'S 4 u 3822 3821',\n  'S 6 o 3824 3823',\n  'S 6 l 3455 3825',\n  'S 3 m 3455 3826',\n  'S 4 s 3828 3827',\n  'S 3 u 3399 3829',\n  'S 3 m 3455 3830',\n  'S 4 w 3832 3831',\n  'S 6 o 3385 3833',\n  'S 2 p 3399 3834',\n  'S 2 d 3835 3399',\n  'S 5 n 3385 3836',\n  'S 6 e 3455 3399',\n  'S 4 t 3837 3399',\n  'S 6 i 3455 3838',\n  'S 4 y 3840 3839',\n  'S 2 # 3385 3841',\n  'S 4 l 3843 3842',\n  'S 6 g 3385 3844',\n  'P oy1',\n  'S 3 d 3600 3845',\n  'S 3 j 3600 3385',\n  'S 5 a 3847 3846',\n  'S 5 a 3455 3848',\n  'S 5 e 3494 3849',\n  'S 5 j 3524 3850',\n  'S 6 v 3393 3851',\n  'S 3 r 3852 3524',\n  'S 3 w 3854 3853',\n  'S 3 c 3399 3855',\n  'S 6 # 3856 3393',\n  'S 6 u 3858 3857',\n  'S 6 a 3444 3393',\n  'S 6 i 3393 3859',\n  'S 6 o 3385 3860',\n  'S 2 t 3385 3861',\n  'S 3 a 3385 3862',\n  'S 1 0 3389 3399',\n  'S 1 # 3385 3399',\n  'S 6 r 3399 3863',\n  'S 3 r 3393 3864',\n  'S 2 t 3399 3389',\n  'S 2 t 3385 3522',\n  'S 1 l 3399 3389',\n  'S 6 # 3389 3865',\n  'S 3 z 3389 3866',\n  'S 6 d 3399 3867',\n  'S 2 r 3385 3399',\n  'S 2 n 3399 3868',\n  'S 2 s 3385 3399',\n  'S 4 d 3870 3869',\n  'S 4 d 3455 3871',\n  'S 3 c 3455 3872',\n  'S 3 h 3874 3873',\n  'S 3 i 3876 3875',\n  'S 4 m 3455 3877',\n  'S 1 a 3399 3522',\n  'S 3 l 3879 3878',\n  'S 2 a 3522 3880',\n  'S 2 p 3455 3881',\n  'S 2 n 3393 3882',\n  'S 2 h 3522 3883',\n  'S 3 i 3399 3884',\n  'S 2 a 3444 3399',\n  'S 2 r 3399 3885',\n  'S 1 o 3399 3886',\n  'S 1 a 3444 3887',\n  'S 4 o 3889 3888',\n  'S 1 # 3891 3890',\n  'S 5 l 3893 3892',\n  'S 6 # 3399 3455',\n  'S 5 b 3455 3894',\n  'S 6 o 3896 3895',\n  'S 6 s 3399 3897',\n  'S 2 y 3393 3898',\n  'S 4 w 3900 3899',\n  'S 4 s 3902 3901',\n  'S 1 # 3904 3903',\n  'S 4 o 3444 3905',\n  'S 3 r 3762 3399',\n  'S 3 n 3455 3906',\n  'S 2 i 3399 3907',\n  'S 6 h 3730 3908',\n  'S 1 r 3385 3909',\n  'S 4 c 3385 3910',\n  'S 1 # 3385 3911',\n  'S 1 # 3385 3912',\n  'S 3 s 3914 3913',\n  'S 1 a 3576 3915',\n  'S 5 s 3917 3916',\n  'S 4 l 3790 3399',\n  'S 1 o 3455 3918',\n  'S 5 z 3399 3919',\n  'S 1 a 3920 3399',\n  'S 6 # 3399 3385',\n  'S 1 e 3455 3921',\n  'S 2 # 3923 3922',\n  'S 5 e 3399 3924',\n  'S 5 a 3494 3925',\n  'S 4 v 3927 3926',\n  'S 5 i 3929 3928',\n  'S 5 i 3931 3930',\n  'S 3 l 3933 3932',\n  'S 4 j 3494 3934',\n  'S 6 l 3936 3935',\n  'S 5 e 3393 3937',\n  'S 5 o 3494 3385',\n  'S 6 o 3399 3938',\n  'S 6 f 3393 3939',\n  'S 2 f 3524 3399',\n  'S 6 i 3941 3940',\n  'S 5 t 3385 3393',\n  'S 6 l 3393 3399',\n  'S 1 # 3393 3444',\n  'S 6 o 3943 3942',\n  'S 5 s 3385 3393',\n  'S 6 l 3444 3393',\n  'S 3 l 3944 3393',\n  'S 1 s 3385 3945',\n  'S 1 l 3947 3946',\n  'S 3 p 3399 3948',\n  'S 1 # 3399 3949',\n  'S 3 j 3385 3950',\n  'S 2 # 3568 3494',\n  'S 6 s 3952 3951',\n  'S 1 d 3399 3953',\n  'S 4 y 3955 3954',\n  'S 3 w 3957 3956',\n  'S 4 z 3522 3958',\n  'S 3 g 3455 3959',\n  'S 3 r 3961 3960',\n  'P y-uw',\n  'S 2 o 3963 3962',\n  'S 2 l 3399 3455',\n  'S 2 t 3399 3964',\n  'S 1 z 3522 3965',\n  'S 2 a 3522 3966',\n  'S 2 u 3522 3385',\n  'S 3 p 3968 3967',\n  'S 2 t 3393 3444',\n  'S 1 w 3522 3969',\n  'S 2 i 3399 3970',\n  'S 2 n 3399 3971',\n  'S 1 r 3399 3972',\n  'S 2 b 3533 3973',\n  'S 6 # 3975 3974',\n  'S 3 g 3399 3976',\n  'S 6 # 3600 3977',\n  'S 5 e 3979 3978',\n  'S 5 d 3981 3980',\n  'S 6 # 3983 3982',\n  'S 6 # 3985 3984',\n  'S 3 t 3385 3986',\n  'S 3 u 3385 3987',\n  'S 6 d 3455 3988',\n  'S 2 l 3393 3989',\n  'S 4 s 3991 3990',\n  'S 2 s 3385 3992',\n  'S 3 o 3399 3993',\n  'S 3 r 3385 3994',\n  'S 3 n 3455 3995',\n  'S 4 n 3455 3996',\n  'S 3 o 3399 3997',\n  'S 2 n 3385 3998',\n  'S 3 l 3399 3999',\n  'S 1 # 3385 4000',\n  'S 3 c 3455 4001',\n  'S 1 # 3385 4002',\n  'S 3 u 3385 4003',\n  'S 3 g 4005 4004',\n  'S 3 v 3385 4006',\n  'S 1 r 3385 3455',\n  'S 5 c 3385 3399',\n  'S 2 v 4007 3399',\n  'S 2 n 3385 3437',\n  'S 2 t 3455 4008',\n  'S 5 e 3399 3455',\n  'S 5 a 3455 3399',\n  'S 2 t 3399 4009',\n  'S 4 n 4011 4010',\n  'S 4 o 4013 4012',\n  'S 3 k 4015 4014',\n  'S 5 i 4017 4016',\n  'S 4 c 4019 4018',\n  'S 6 a 3393 4020',\n  'S 5 u 4022 4021',\n  'S 6 c 3385 4023',\n  'S 6 r 4025 4024',\n  'S 6 l 3444 3385',\n  'S 3 s 3600 4026',\n  'S 5 a 4027 3600',\n  'S 5 e 4029 4028',\n  'S 6 i 3455 4030',\n  'S 4 c 3494 4031',\n  'S 6 i 3522 4032',\n  'S 6 u 3399 4033',\n  'S 6 s 3393 4034',\n  'S 6 t 4036 4035',\n  'S 2 c 3444 4037',\n  'S 5 f 4039 4038',\n  'S 5 l 3385 3393',\n  'S 6 e 3393 3385',\n  'S 2 d 3385 4040',\n  'S 5 y 4042 4041',\n  'S 5 t 4043 3399',\n  'S 6 l 4045 4044',\n  'S 6 r 3399 4046',\n  'S 6 a 3399 4047',\n  'S 2 p 3385 4048',\n  'S 1 0 3385 3399',\n  'S 3 f 3399 4049',\n  'S 4 e 3399 4050',\n  'S 3 k 4052 4051',\n  'S 1 # 3399 4053',\n  'S 2 e 3600 3399',\n  'S 4 a 3444 4054',\n  'S 3 h 4056 4055',\n  'S 1 e 3600 4027',\n  'S 2 b 4027 3600',\n  'S 2 c 4058 4057',\n  'S 3 n 3522 3455',\n  'S 2 s 4060 4059',\n  'S 1 p 3494 4061',\n  'S 2 o 3522 3494',\n  'S 3 g 3455 4062',\n  'S 2 a 3455 4063',\n  'S 1 r 3455 4064',\n  'S 1 a 3399 4065',\n  'S 1 o 3399 4066',\n  'S 1 c 3444 4067',\n  'S 1 i 3444 4068',\n  'S 1 # 4070 4069',\n  'S 5 e 4072 4071',\n  'S 1 # 4074 4073',\n  'S 2 c 3600 4075',\n  'S 3 r 3600 4076',\n  'S 6 l 3600 3399',\n  'S 6 # 4078 4077',\n  'S 3 f 4080 4079',\n  'S 3 o 3399 4081',\n  'S 3 w 4083 4082',\n  'S 1 # 4085 4084',\n  'S 5 y 3455 4086',\n  'S 2 l 4088 4087',\n  'S 3 l 3385 3455',\n  'S 3 g 4090 4089',\n  'S 2 i 3393 4091',\n  'S 6 k 3385 4092',\n  'S 6 l 4094 4093',\n  'S 3 l 3385 4095',\n  'S 4 u 3399 4096',\n  'S 6 a 3522 4097',\n  'S 4 n 3455 4098',\n  'S 3 r 3385 4099',\n  'S 3 u 4101 4100',\n  'S 1 # 4103 4102',\n  'S 2 o 3399 4104',\n  'S 2 i 3385 4105',\n  'S 1 i 3385 3455',\n  'S 4 d 3522 4106',\n  'S 1 d 3385 4107',\n  'S 3 k 4109 4108',\n  'S 2 d 3455 4110',\n  'S 3 r 3455 4111',\n  'S 5 e 3399 3437',\n  'S 1 q 3455 4112',\n  'S 2 c 4113 3596',\n  'S 6 c 4115 4114',\n  'S 5 g 4117 4116',\n  'S 5 t 4119 4118',\n  'S 5 r 3399 4120',\n  'S 5 r 3385 3524',\n  'S 6 e 3524 3393',\n  'S 6 c 3385 4121',\n  'S 6 s 3494 3385',\n  'S 4 g 4123 4122',\n  'S 5 e 3455 4124',\n  'S 6 r 3385 4125',\n  'S 6 o 4127 4126',\n  'S 6 c 3522 3455',\n  'S 6 s 3393 3455',\n  'S 5 e 3389 4128',\n  'S 5 e 3444 4129',\n  'S 3 j 3600 3437',\n  'P uw',\n  'S 4 c 4131 4130',\n  'S 6 r 4133 4132',\n  'S 6 r 4135 4134',\n  'S 4 g 3494 3455',\n  'S 6 u 3389 3385',\n  'S 3 s 4136 3399',\n  'S 6 c 3444 3399',\n  'S 1 t 3385 4137',\n  'S 3 r 3444 4138',\n  'S 3 d 3393 4139',\n  'S 3 l 3393 4140',\n  'S 3 l 3393 3385',\n  'S 1 t 3385 3393',\n  'S 1 0 4142 4141',\n  'S 6 l 3385 3399',\n  'S 6 y 3399 4143',\n  'S 6 t 3385 4144',\n  'S 3 g 3522 3385',\n  'S 2 r 3389 3399',\n  'S 6 s 4146 4145',\n  'S 6 # 3385 4147',\n  'S 6 e 3399 3385',\n  'S 4 a 4149 4148',\n  'S 3 v 4151 4150',\n  'S 2 c 3399 4152',\n  'S 3 m 3399 4153',\n  'S 4 o 3444 4154',\n  'S 3 z 3455 4155',\n  'S 2 t 3399 3455',\n  'S 3 p 3455 4156',\n  'S 1 o 3524 3455',\n  'S 2 a 3385 4157',\n  'S 4 p 3385 3522',\n  'S 3 r 4159 4158',\n  'S 3 h 3455 4160',\n  'S 1 a 3455 3385',\n  'S 1 i 3522 3455',\n  'S 3 a 3399 4161',\n  'S 2 g 3399 3444',\n  'S 1 z 3444 4162',\n  'S 1 r 3882 4163',\n  'S 5 i 4165 4164',\n  'S 3 o 3399 4166',\n  'S 4 u 4168 4167',\n  'S 4 k 3494 4169',\n  'S 6 l 3393 4170',\n  'S 3 d 3444 4171',\n  'S 6 c 3399 4172',\n  'S 2 s 3600 4173',\n  'S 2 n 4175 4174',\n  'S 3 a 3399 4176',\n  'S 3 h 3385 4177',\n  'S 6 t 3522 4178',\n  'S 3 u 4049 4179',\n  'S 1 # 3385 4180',\n  'S 2 o 3522 4181',\n  'S 5 c 4183 4182',\n  'S 3 u 4185 4184',\n  'S 5 a 4187 4186',\n  'S 1 l 3455 4188',\n  'S 1 a 3385 3522',\n  'S 1 # 4190 4189',\n  'S 6 r 3385 3455',\n  'S 3 c 3393 4191',\n  'S 6 e 4193 4192',\n  'S 3 n 3455 4194',\n  'S 3 l 3455 3399',\n  'S 3 j 3385 4195',\n  'S 3 u 3399 4196',\n  'S 6 n 3399 3385',\n  'S 3 l 3455 4197',\n  'S 2 s 3385 4198',\n  'S 4 l 4200 4199',\n  'S 2 q 3385 4201',\n  'S 6 a 4203 4202',\n  'S 2 p 3385 4204',\n  'S 3 r 3385 4205',\n  'S 1 d 3385 4206',\n  'S 1 o 3522 4207',\n  'S 3 w 3385 4208',\n  'S 3 v 3455 4209',\n  'S 1 o 3455 3522',\n  'S 2 g 3522 3455',\n  'S 3 g 3455 4210',\n  'S 6 r 3455 4211',\n  'S 1 s 3455 3399',\n  'S 4 m 4213 4212',\n  'S 4 l 3455 4214',\n  'S 6 e 4216 4215',\n  'S 6 l 3389 4217',\n  'S 6 # 4219 4218',\n  'S 3 o 3399 4220',\n  'S 3 l 4222 4221',\n  'S 6 m 3494 4223',\n  'S 5 p 4225 4224',\n  'S 6 o 3385 3494',\n  'S 5 i 4227 4226',\n  'S 6 n 3385 4228',\n  'S 6 y 3455 4229',\n  'S 5 m 3522 3385',\n  'S 5 a 3389 4230',\n  'S 5 a 3385 3389',\n  'S 4 g 4232 4231',\n  'S 5 u 3494 4233',\n  'S 4 s 4235 4234',\n  'S 4 f 3385 4236',\n  'S 4 m 3393 4237',\n  'S 4 m 3444 3455',\n  'S 5 n 3524 3399',\n  'S 1 l 4239 4238',\n  'S 5 n 3399 3385',\n  'S 3 p 3393 4240',\n  'S 6 a 3393 4241',\n  'S 5 t 4243 4242',\n  'S 5 d 4245 4244',\n  'S 6 i 3399 3385',\n  'S 3 s 3399 4246',\n  'S 3 d 3385 4247',\n  'S 3 t 3399 3385',\n  'S 3 t 3792 4248',\n  'S 4 o 3444 4249',\n  'S 3 y 3399 4250',\n  'S 1 # 4251 3399',\n  'S 1 u 3524 3399',\n  'S 1 a 4252 3399',\n  'S 3 y 3399 4253',\n  'S 4 e 3399 4254',\n  'S 3 x 3455 4255',\n  'S 3 g 3455 4256',\n  'S 4 c 3385 4257',\n  'S 1 b 3522 4258',\n  'S 2 o 3494 3522',\n  'S 1 u 3455 4259',\n  'S 3 l 4260 3399',\n  'S 1 s 3444 4261',\n  'S 1 t 3393 4262',\n  'S 4 y 3399 4263',\n  'S 6 a 4265 4264',\n  'S 2 p 4267 4266',\n  'S 4 c 4269 4268',\n  'S 5 m 3393 4270',\n  'S 3 o 3399 4271',\n  'S 3 k 3399 4272',\n  'S 5 r 3393 4273',\n  'S 6 l 4274 3399',\n  'S 3 l 3600 3399',\n  'S 6 s 4276 4275',\n  'S 6 a 3455 4277',\n  'S 3 u 3399 4278',\n  'S 6 # 3522 4279',\n  'S 1 r 3522 3385',\n  'S 2 n 4281 4280',\n  'S 3 b 4283 4282',\n  'S 2 e 3522 3385',\n  'S 3 o 4285 4284',\n  'S 6 e 4287 4286',\n  'S 3 o 3399 4288',\n  'S 2 q 3385 3399',\n  'S 5 o 3385 4289',\n  'S 2 e 3385 4290',\n  'S 1 b 3522 4291',\n  'S 3 m 3385 4292',\n  'S 6 l 3385 4293',\n  'S 1 o 3393 4294',\n  'S 4 n 4296 4295',\n  'S 4 n 4298 4297',\n  'S 6 n 3455 4299',\n  'S 3 z 3385 3600',\n  'S 2 s 3385 4300',\n  'S 4 s 4302 4301',\n  'S 4 s 3385 3455',\n  'S 6 i 3385 4303',\n  'S 3 f 3522 4304',\n  'S 2 h 3399 4305',\n  'S 1 d 3385 4306',\n  'S 2 o 3399 4307',\n  'S 2 c 3385 4308',\n  'S 1 a 3385 3399',\n  'S 6 r 4310 4309',\n  'S 4 l 4311 3385',\n  'S 3 v 3455 4312',\n  'S 3 m 3389 4313',\n  'S 2 r 3385 4314',\n  'S 5 a 3399 3579',\n  'S 4 q 4316 4315',\n  'S 5 b 4318 4317',\n  'S 4 v 3494 4319',\n  'S 5 e 3385 4320',\n  'S 5 t 3385 4321',\n  'S 6 r 3455 4322',\n  'S 5 u 4324 4323',\n  'S 5 e 3393 4325',\n  'S 6 a 4327 4326',\n  'S 5 l 3444 4328',\n  'S 6 e 3522 4329',\n  'S 6 l 3494 4330',\n  'S 4 p 4332 4331',\n  'S 6 e 3385 3389',\n  'S 6 m 3393 4333',\n  'S 6 m 3385 3455',\n  'S 5 e 3494 4334',\n  'S 6 t 3455 4335',\n  'S 5 o 4336 3385',\n  'S 4 q 4338 4337',\n  'S 5 r 3494 4339',\n  'S 5 i 3455 4340',\n  'S 4 c 3455 4341',\n  'S 6 n 3455 4342',\n  'S 4 s 3385 4343',\n  'S 4 l 4345 4344',\n  'S 3 c 4347 4346',\n  'S 3 n 3444 3393',\n  'S 2 t 3393 4348',\n  'S 6 t 3943 3393',\n  'S 2 a 4349 3399',\n  'S 3 b 4350 3399',\n  'S 3 p 3399 4351',\n  'S 6 a 3385 3399',\n  'S 3 c 3399 4352',\n  'S 3 s 3385 4353',\n  'S 6 l 4355 4354',\n  'S 3 i 3399 4356',\n  'S 1 a 3444 4357',\n  'S 3 r 3524 3399',\n  'S 2 n 3393 3399',\n  'S 3 f 3399 4358',\n  'S 4 y 3399 4359',\n  'S 3 i 3399 4360',\n  'S 3 c 3455 4361',\n  'S 4 x 3385 4362',\n  'S 3 p 3494 4363',\n  'S 1 a 4365 4364',\n  'S 2 a 4366 3399',\n  'S 1 n 3444 4367',\n  'S 1 l 3444 4368',\n  'S 6 n 4370 4369',\n  'S 6 c 4372 4371',\n  'S 2 s 3385 4373',\n  'S 3 u 4375 4374',\n  'S 4 u 3399 4376',\n  'S 5 h 4378 4377',\n  'S 5 k 4379 3385',\n  'S 5 x 4380 3399',\n  'S 4 s 4382 4381',\n  'S 5 l 3444 4383',\n  'S 5 d 3393 4384',\n  'S 3 n 3455 3399',\n  'S 5 i 4386 4385',\n  'S 5 e 3399 4387',\n  'S 3 g 4389 4388',\n  'S 5 e 4391 4390',\n  'S 6 e 3385 3455',\n  'S 6 e 4393 4392',\n  'S 6 e 3455 4394',\n  'S 2 r 4396 4395',\n  'S 1 a 3522 3385',\n  'S 5 z 4398 4397',\n  'S 1 b 3393 3399',\n  'S 6 y 3455 4399',\n  'S 1 o 3385 3455',\n  'S 2 e 3455 4400',\n  'S 1 # 3385 4401',\n  'S 3 l 3524 4402',\n  'S 2 e 3385 4403',\n  'S 1 e 3455 4404',\n  'S 3 h 3522 3459',\n  'S 1 a 3393 4405',\n  'S 4 l 3455 4406',\n  'S 1 i 4408 4407',\n  'S 4 l 3455 3385',\n  'S 1 l 3455 4409',\n  'S 1 n 3455 4410',\n  'S 4 t 3385 4411',\n  'S 4 u 3444 4412',\n  'S 3 s 3385 4413',\n  'S 2 d 3385 4414',\n  'S 6 i 3455 3385',\n  'S 6 e 3385 3399',\n  'S 2 i 3399 4415',\n  'S 2 i 3522 4359',\n  'S 2 q 3385 4416',\n  'S 2 n 4418 4417',\n  'S 3 c 4419 3455',\n  'S 3 f 3385 3522',\n  'S 3 r 4421 4420',\n  'S 2 b 3522 4422',\n  'S 2 n 4424 4423',\n  'S 4 v 4426 4425',\n  'S 6 a 3393 3494',\n  'S 5 a 4428 4427',\n  'S 6 l 3385 3522',\n  'S 4 d 3385 4429',\n  'S 5 u 3455 4430',\n  'S 5 d 3522 4431',\n  'S 6 a 3522 3385',\n  'S 5 i 4433 4432',\n  'S 4 g 4435 4434',\n  'S 5 a 4437 4436',\n  'S 3 b 3385 4438',\n  'S 3 t 3385 4439',\n  'S 6 a 3385 3393',\n  'S 6 o 3393 4440',\n  'S 5 p 4442 4441',\n  'S 4 f 3455 4443',\n  'S 5 r 4445 4444',\n  'S 5 h 3385 4446',\n  'S 6 l 4448 4447',\n  'S 6 r 4450 4449',\n  'S 6 n 3385 3389',\n  'S 4 f 4452 4451',\n  'S 6 i 3385 3494',\n  'S 6 o 3393 3385',\n  'S 6 n 3444 4453',\n  'S 6 a 4455 4454',\n  'S 6 m 3455 3444',\n  'S 4 p 3385 3444',\n  'S 6 # 3393 4456',\n  'S 6 t 3385 3455',\n  'S 3 h 3393 4457',\n  'S 1 # 3399 3393',\n  'S 5 l 3393 4458',\n  'S 1 c 3399 4459',\n  'S 6 a 3385 4460',\n  'S 6 a 4461 3399',\n  'S 3 g 3399 4097',\n  'S 3 c 3385 4462',\n  'S 3 p 4464 4463',\n  'S 3 p 3385 3399',\n  'S 4 i 3524 4465',\n  'S 2 d 3444 4466',\n  'S 3 b 4464 4467',\n  'S 2 a 3385 3455',\n  'S 2 e 3653 4468',\n  'S 1 b 3455 4469',\n  'S 4 z 3522 3385',\n  'S 1 h 3494 4470',\n  'S 1 # 4359 4471',\n  'S 3 c 3385 3455',\n  'S 1 d 3399 4472',\n  'S 1 p 3444 3399',\n  'S 1 y 3444 4473',\n  'S 5 k 4475 4474',\n  'S 4 m 4477 4476',\n  'S 6 o 4479 4478',\n  'S 4 t 3385 4480',\n  'S 2 e 4481 3393',\n  'S 4 u 3399 4482',\n  'S 2 q 4483 3399',\n  'S 4 v 4485 4484',\n  'S 5 y 4487 4486',\n  'S 4 s 3385 4488',\n  'S 3 b 4490 4489',\n  'P ow1',\n  'S 4 t 4492 4491',\n  'S 2 a 4494 4493',\n  'S 5 w 3399 4495',\n  'S 2 c 3393 3882',\n  'S 6 n 4497 4496',\n  'S 6 a 4499 4498',\n  'S 3 h 3385 4500',\n  'S 5 e 3455 4501',\n  'S 6 c 3385 4502',\n  'S 5 a 4503 3385',\n  'S 2 e 3455 4504',\n  'S 2 s 4506 4505',\n  'S 3 c 3455 4507',\n  'S 6 y 3455 4508',\n  'S 2 a 4510 4509',\n  'S 3 d 3385 4511',\n  'S 5 i 4513 4512',\n  'S 6 o 3385 4514',\n  'S 2 e 3455 4515',\n  'S 3 c 3455 4516',\n  'S 5 z 3522 3385',\n  'S 3 r 3385 4517',\n  'S 3 s 3455 4518',\n  'S 1 a 3455 4519',\n  'S 2 a 3393 4520',\n  'S 6 o 3455 3399',\n  'S 6 u 3385 3455',\n  'S 2 s 3385 3455',\n  'S 2 n 3385 4521',\n  'S 2 t 4523 4522',\n  'S 3 r 3385 4297',\n  'S 3 k 3455 4524',\n  'S 3 c 3385 4525',\n  'S 1 v 4527 4526',\n  'S 3 v 4529 4528',\n  'S 3 r 3385 3399',\n  'S 2 t 3385 4530',\n  'S 6 o 3455 3385',\n  'S 1 o 3455 3385',\n  'S 3 f 3385 3455',\n  'S 1 e 3389 4531',\n  'S 3 r 3522 4532',\n  'S 1 a 3455 4533',\n  'S 3 t 3385 3455',\n  'S 4 c 4535 4534',\n  'S 6 r 3385 4536',\n  'S 6 l 4538 4537',\n  'S 6 n 3385 3393',\n  'S 4 p 3385 3494',\n  'S 5 i 3385 4539',\n  'S 5 v 3522 3385',\n  'S 5 a 4541 4540',\n  'S 6 o 3393 4542',\n  'S 4 c 4544 4543',\n  'S 3 b 3494 4545',\n  'S 5 o 4546 3385',\n  'S 4 n 3393 4547',\n  'S 6 u 4548 3385',\n  'S 3 p 3385 4549',\n  'S 5 n 4322 3385',\n  'S 5 h 4551 4550',\n  'S 6 a 3494 4552',\n  'S 6 r 4554 4553',\n  'S 5 a 3455 4555',\n  'S 6 e 3455 4556',\n  'S 5 k 3385 4557',\n  'S 5 a 3385 3494',\n  'S 5 a 3494 3385',\n  'S 5 g 3522 4558',\n  'S 5 o 3455 3522',\n  'S 5 u 4560 4559',\n  'S 5 r 3455 4561',\n  'S 6 a 3444 4562',\n  'S 4 b 3455 4563',\n  'S 4 p 3455 3444',\n  'S 6 b 3393 4564',\n  'S 5 k 4566 4565',\n  'S 1 # 3393 4567',\n  'S 3 l 3399 4568',\n  'S 6 o 4569 3399',\n  'S 5 s 3399 4570',\n  'S 6 t 3385 4571',\n  'S 1 0 3385 4572',\n  'S 1 e 3385 3399',\n  'S 4 z 4574 4573',\n  'S 1 c 3399 4575',\n  'S 2 s 3399 4576',\n  'S 3 j 3455 4577',\n  'S 3 r 4579 4578',\n  'S 2 a 3494 4580',\n  'S 3 k 3455 4581',\n  'S 1 n 3444 4582',\n  'S 2 h 4584 4583',\n  'S 2 e 4586 4585',\n  'S 6 e 4587 3385',\n  'S 5 e 4589 4588',\n  'S 2 p 3455 4590',\n  'S 4 d 4592 4591',\n  'S 2 i 3444 4593',\n  'S 4 v 3494 4594',\n  'S 4 d 3393 3455',\n  'S 4 y 4596 4595',\n  'S 4 b 3455 4597',\n  'S 6 m 3455 4598',\n  'S 5 i 3393 3494',\n  'S 3 o 3399 4599',\n  'S 3 l 3399 4600',\n  'S 1 # 3393 4601',\n  'S 2 l 3494 4602',\n  'S 2 e 3522 4603',\n  'S 4 y 3399 4604',\n  'S 3 l 3393 4605',\n  'S 1 a 3524 4606',\n  'S 3 n 3524 3393',\n  'S 3 c 3399 4607',\n  'S 3 o 4609 4608',\n  'S 2 i 3399 4610',\n  'S 2 i 4612 4611',\n  'S 2 o 3385 3393',\n  'S 1 # 3399 4613',\n  'S 5 a 3455 4614',\n  'S 5 o 3522 4615',\n  'S 2 r 3385 4616',\n  'S 2 a 3455 4001',\n  'S 6 s 3385 4617',\n  'S 1 # 3385 4618',\n  'S 3 b 3455 4619',\n  'S 3 c 3455 3385',\n  'S 1 i 3455 4620',\n  'S 3 v 3455 3385',\n  'S 3 r 4622 4621',\n  'S 5 n 4624 4623',\n  'S 6 n 3455 4625',\n  'S 1 l 3522 4626',\n  'S 3 r 3385 4627',\n  'S 2 o 3455 4628',\n  'S 3 h 3455 3393',\n  'S 2 r 3385 4629',\n  'S 6 r 4631 4630',\n  'S 1 e 3393 4632',\n  'S 3 p 3385 4420',\n  'S 3 c 4178 4633',\n  'S 1 s 3385 3455',\n  'S 4 l 4635 4634',\n  'S 3 r 4636 3455',\n  'S 2 s 4638 4637',\n  'S 4 t 3385 3494',\n  'S 1 f 3455 4639',\n  'S 2 l 3385 3455',\n  'S 1 s 3455 4640',\n  'S 2 e 3455 4641',\n  'S 2 l 3522 4642',\n  'S 1 r 4643 3455',\n  'S 4 g 4645 4644',\n  'S 5 o 3494 4646',\n  'S 5 e 4648 4647',\n  'S 5 e 3385 4649',\n  'S 5 p 3522 4650',\n  'S 5 c 4652 4651',\n  'S 5 e 4654 4653',\n  'S 3 m 4656 4655',\n  'S 6 a 4658 4657',\n  'S 4 q 4660 4659',\n  'S 6 r 3494 3385',\n  'P ey',\n  'S 4 n 3524 3385',\n  'S 3 l 3393 4661',\n  'S 4 n 4662 3385',\n  'S 3 c 3522 4663',\n  'S 6 a 3385 4664',\n  'S 6 i 3494 4665',\n  'S 6 r 3494 4338',\n  'S 5 t 4667 4666',\n  'S 4 t 3455 4668',\n  'S 5 o 3455 4669',\n  'S 6 i 3455 3444',\n  'S 6 d 3494 4670',\n  'S 5 a 3385 4671',\n  'S 5 o 4673 4672',\n  'S 6 s 3393 4674',\n  'S 6 s 3455 4675',\n  'S 5 y 3444 4676',\n  'S 4 p 3455 4677',\n  'S 6 p 3393 4678',\n  'S 5 v 4680 4679',\n  'S 3 p 3393 4681',\n  'S 5 t 3444 3393',\n  'S 3 v 4245 3399',\n  'S 2 m 3399 3385',\n  'S 5 v 3399 4682',\n  'S 6 n 4683 3385',\n  'S 3 m 3385 4684',\n  'S 4 m 4686 4685',\n  'S 1 # 3385 4687',\n  'S 2 a 3393 4688',\n  'S 3 r 4689 3399',\n  'S 3 r 4691 4690',\n  'S 2 r 4693 4692',\n  'S 2 r 3455 3385',\n  'S 1 o 3494 4694',\n  'S 1 k 3455 4695',\n  'S 1 i 3444 3399',\n  'S 1 o 3444 4696',\n  'S 1 s 3444 4697',\n  'S 2 n 4699 4698',\n  'S 3 l 4701 4700',\n  'S 3 n 4703 4702',\n  'S 4 c 4705 4704',\n  'S 2 p 3455 4706',\n  'S 2 c 4708 4707',\n  'S 2 i 3399 4709',\n  'S 6 t 3728 4710',\n  'S 1 s 3385 3393',\n  'S 3 n 3455 4711',\n  'S 3 y 3399 4712',\n  'S 5 e 3399 3524',\n  'S 4 s 4545 3399',\n  'S 5 i 4714 4713',\n  'S 3 u 4716 4715',\n  'S 1 s 3399 3455',\n  'S 2 a 3455 3522',\n  'S 1 # 3385 4717',\n  'S 2 r 3522 3385',\n  'S 3 u 3399 3393',\n  'S 2 c 3393 4718',\n  'S 1 u 3524 3393',\n  'S 2 c 4720 4719',\n  'S 6 p 3385 4721',\n  'S 5 e 3455 3399',\n  'S 3 v 3399 4722',\n  'S 6 o 3393 4723',\n  'S 1 l 3399 4724',\n  'S 3 n 3455 3385',\n  'S 6 e 3455 4725',\n  'S 6 s 3455 4726',\n  'S 2 a 3385 4727',\n  'S 6 y 3455 3385',\n  'S 6 i 3385 4728',\n  'S 1 # 3385 4729',\n  'S 1 k 3455 4730',\n  'S 3 t 3524 3455',\n  'S 1 u 3455 4731',\n  'S 5 k 4733 4732',\n  'S 6 e 3475 3385',\n  'S 6 c 3385 4734',\n  'S 6 i 3385 4735',\n  'S 1 e 3455 4736',\n  'S 5 o 3455 4737',\n  'S 2 h 3522 4738',\n  'S 3 o 3399 4739',\n  'S 1 i 3455 3444',\n  'S 3 l 3393 4740',\n  'S 3 r 3385 4741',\n  'S 4 m 3455 4742',\n  'S 3 t 3455 4743',\n  'S 2 t 3455 4744',\n  'S 6 s 4746 4745',\n  'S 3 t 4747 3385',\n  'S 1 h 3399 4748',\n  'S 3 v 3385 4749',\n  'S 2 o 3455 3385',\n  'S 1 o 3522 4750',\n  'S 3 d 3455 3385',\n  'S 5 a 4297 4751',\n  'S 5 g 3385 4752',\n  'S 5 l 3494 4753',\n  'S 5 i 4755 4754',\n  'S 6 n 3393 3385',\n  'S 5 o 3389 4756',\n  'S 5 u 3385 4757',\n  'S 5 t 4759 4758',\n  'S 6 y 3455 3522',\n  'S 5 o 4761 4760',\n  'S 6 r 4763 4762',\n  'S 4 l 4765 4764',\n  'S 6 r 3455 4766',\n  'S 6 u 3393 4767',\n  'S 4 d 3393 4768',\n  'S 6 c 3455 4769',\n  'S 3 s 3393 4435',\n  'S 4 d 3524 4770',\n  'S 3 v 3522 3385',\n  'S 4 s 3385 4771',\n  'S 6 o 4773 4772',\n  'S 6 a 3494 3522',\n  'S 4 s 4775 4774',\n  'S 6 a 3444 3385',\n  'S 4 s 3455 4776',\n  'S 5 u 3385 3455',\n  'S 5 l 3494 4777',\n  'S 5 l 3385 4778',\n  'S 5 r 4780 4779',\n  'S 6 s 3393 4781',\n  'S 6 b 3444 4782',\n  'S 5 i 4784 4783',\n  'S 6 u 4786 4785',\n  'S 6 e 3455 4787',\n  'S 4 p 4789 4788',\n  'S 2 c 4791 4790',\n  'S 1 e 3385 3393',\n  'S 3 r 3393 4792',\n  'S 3 v 3399 4793',\n  'S 3 b 3385 3389',\n  'S 3 h 3385 4794',\n  'S 4 u 3399 4795',\n  'S 1 # 3385 3455',\n  'S 1 i 3522 4796',\n  'S 1 # 3393 4797',\n  'S 2 f 3455 4798',\n  'S 2 l 3399 4799',\n  'S 2 a 3399 4800',\n  'S 1 e 3455 4801',\n  'S 3 n 3385 3522',\n  'S 2 i 3494 4802',\n  'S 2 u 4803 3455',\n  'S 1 s 4804 3393',\n  'S 1 c 3444 3393',\n  'S 4 t 4806 4805',\n  'S 5 r 3455 4807',\n  'S 5 e 4809 4808',\n  'S 6 i 3385 3455',\n  'S 3 d 3494 3385',\n  'S 1 e 3494 3522',\n  'S 4 t 4811 4810',\n  'S 2 o 3385 4812',\n  'S 4 s 3444 3455',\n  'S 2 e 4813 3399',\n  'S 3 r 3455 3399',\n  'S 2 a 4815 4814',\n  'S 1 n 3399 4816',\n  'S 4 m 3385 4817',\n  'S 4 x 4819 4818',\n  'S 4 c 4821 4820',\n  'S 6 e 3522 4822',\n  'S 5 z 4824 4823',\n  'S 5 a 3385 3399',\n  'S 1 e 3385 4825',\n  'S 3 r 3444 3393',\n  'S 6 t 3399 4826',\n  'S 1 n 3399 3444',\n  'S 2 s 4686 4827',\n  'S 1 # 3385 4828',\n  'S 1 f 3399 4829',\n  'S 6 n 3399 4830',\n  'S 6 n 3455 4831',\n  'S 5 i 3522 4832',\n  'S 2 n 3385 3455',\n  'S 1 a 4833 3385',\n  'S 3 v 4803 3385',\n  'S 2 o 3455 4834',\n  'S 1 o 3455 4835',\n  'S 5 g 4837 4836',\n  'S 1 o 3455 4838',\n  'S 6 e 3393 4839',\n  'S 3 l 3522 3385',\n  'S 1 n 3455 4840',\n  'S 2 a 4701 4841',\n  'S 2 a 4842 3385',\n  'S 1 o 3455 4843',\n  'S 3 r 3393 3444',\n  'S 3 s 3385 4844',\n  'S 4 t 4846 4845',\n  'S 3 p 3385 3455',\n  'S 2 p 3385 4847',\n  'S 1 t 3455 3385',\n  'S 4 t 3455 3385',\n  'S 6 e 3522 3385',\n  'S 6 r 4849 4848',\n  'S 1 a 4851 4850',\n  'S 2 p 3522 4852',\n  'S 4 s 4854 4853',\n  'S 5 l 3385 4855',\n  'S 5 c 3494 3385',\n  'S 6 n 3385 4856',\n  'S 6 l 3393 3385',\n  'S 6 o 3389 4857',\n  'S 5 i 3522 3385',\n  'S 5 d 4859 4858',\n  'S 6 a 3522 4860',\n  'S 5 r 4862 4861',\n  'S 4 g 4274 4863',\n  'S 3 t 4865 4864',\n  'S 3 g 3385 4866',\n  'S 3 p 3385 4867',\n  'S 6 n 3385 4868',\n  'S 4 g 3385 4869',\n  'S 3 b 4871 4870',\n  'S 4 n 3393 3385',\n  'S 3 s 3385 4872',\n  'S 3 m 3385 4873',\n  'S 4 t 3385 3522',\n  'S 6 r 4773 4874',\n  'S 5 t 3494 3385',\n  'S 5 u 4876 4875',\n  'S 5 e 3522 4877',\n  'S 5 a 3455 3385',\n  'S 5 r 3494 4878',\n  'S 5 o 3385 4879',\n  'S 4 d 4881 4880',\n  'S 6 o 4883 4882',\n  'S 4 s 4885 4884',\n  'S 4 d 3455 4886',\n  'S 5 l 3455 4887',\n  'S 6 n 3455 3444',\n  'S 6 v 3494 4888',\n  'S 5 o 3494 3455',\n  'S 6 m 3455 4889',\n  'S 6 c 3455 4890',\n  'S 6 c 3393 3444',\n  'S 2 r 4892 4891',\n  'S 5 t 3444 4893',\n  'S 3 n 3393 4894',\n  'S 3 h 3399 4895',\n  'S 1 # 3385 4896',\n  'S 3 o 3399 4897',\n  'S 3 u 3385 3522',\n  'S 3 n 3444 4898',\n  'S 2 d 3455 3399',\n  'S 1 i 3399 4899',\n  'S 2 d 3524 3399',\n  'S 1 i 3385 4900',\n  'S 2 u 3494 4901',\n  'S 1 r 3455 3385',\n  'S 2 l 3393 3444',\n  'S 4 d 4903 4902',\n  'S 5 e 4905 4904',\n  'S 3 t 4907 4906',\n  'S 4 u 3399 4908',\n  'S 4 v 3494 4909',\n  'S 3 t 4911 4910',\n  'S 5 a 3522 3399',\n  'S 5 o 4913 4912',\n  'S 5 a 3399 3455',\n  'S 6 l 4915 4914',\n  'S 3 t 3455 3399',\n  'S 2 m 3385 4916',\n  'S 3 m 3385 4917',\n  'S 5 e 4919 4918',\n  'S 3 n 3494 4776',\n  'S 3 r 4920 3385',\n  'S 5 e 3455 4921',\n  'S 6 c 3455 4922',\n  'S 4 d 4924 4923',\n  'S 1 # 3385 3522',\n  'S 2 h 3385 4925',\n  'S 5 n 3444 4926',\n  'S 6 h 3385 4927',\n  'S 5 a 4928 3455',\n  'S 6 c 4930 4929',\n  'S 3 d 3385 3399',\n  'S 1 i 3385 4931',\n  'S 1 e 3522 3455',\n  'S 6 a 3385 3455',\n  'S 2 e 3455 4932',\n  'S 1 e 3455 3524',\n  'S 5 u 4934 4933',\n  'S 6 t 3385 4935',\n  'S 6 e 3385 4936',\n  'S 6 a 3393 4937',\n  'S 2 i 3455 4938',\n  'S 5 a 3455 4939',\n  'S 3 m 3385 4686',\n  'S 3 v 3455 3399',\n  'S 3 l 3385 4420',\n  'S 4 d 4930 4343',\n  'S 3 s 3385 3455',\n  'S 1 n 3455 4940',\n  'S 1 c 3522 4941',\n  'S 1 e 3385 4942',\n  'S 1 l 4944 4943',\n  'S 2 c 3385 4945',\n  'S 1 e 3522 4946',\n  'S 4 l 4948 4947',\n  'S 6 a 4950 4949',\n  'S 6 e 3385 4951',\n  'S 5 a 3494 4952',\n  'S 6 s 3385 4953',\n  'S 5 o 3455 4954',\n  'S 6 a 3522 4955',\n  'S 6 h 3522 4956',\n  'S 3 o 3399 4957',\n  'S 4 t 4959 4958',\n  'S 4 c 4961 4960',\n  'S 4 v 4963 4962',\n  'S 4 l 3385 4964',\n  'S 3 p 4966 4965',\n  'S 4 c 3494 4967',\n  'S 3 v 3522 4968',\n  'S 6 n 3385 4969',\n  'S 4 v 3385 4970',\n  'S 6 e 3455 4971',\n  'S 3 l 3522 4972',\n  'S 4 t 3385 3524',\n  'S 5 t 3494 4973',\n  'S 5 a 4975 4974',\n  'S 4 b 3385 3455',\n  'S 6 e 3455 4976',\n  'S 5 a 3494 4977',\n  'S 5 e 3385 4978',\n  'S 4 m 4881 4979',\n  'S 5 i 4980 3385',\n  'S 4 p 4981 3444',\n  'S 4 t 3385 4982',\n  'S 4 b 3444 4983',\n  'S 6 u 3444 4984',\n  'S 6 m 3455 4985',\n  'S 6 r 3455 4986',\n  'S 6 r 3455 4987',\n  'S 4 l 4989 4988',\n  'S 4 c 3444 4990',\n  'S 2 l 3399 4991',\n  'S 5 l 3393 3444',\n  'S 1 a 3399 4992',\n  'S 6 # 3399 3393',\n  'S 3 g 3399 4993',\n  'S 6 c 3399 3385',\n  'S 3 u 3399 4994',\n  'S 2 r 3393 4995',\n  'S 2 n 3399 4996',\n  'S 2 m 3455 4997',\n  'S 1 r 3494 4998',\n  'S 5 c 3385 4999',\n  'S 5 g 5001 5000',\n  'S 6 r 3455 5002',\n  'S 3 m 3455 5003',\n  'S 4 b 4274 5004',\n  'S 5 p 3385 5005',\n  'S 3 n 5007 5006',\n  'S 6 r 3444 5008',\n  'S 2 e 3455 5009',\n  'S 5 a 3522 3455',\n  'S 5 h 3455 3399',\n  'S 1 c 3385 3455',\n  'S 4 f 5011 5010',\n  'S 2 e 3385 4274',\n  'S 3 p 3393 5012',\n  'S 3 d 3385 5013',\n  'S 2 a 5015 5014',\n  'S 4 s 3399 5016',\n  'S 6 r 5018 5017',\n  'S 6 n 3393 5019',\n  'S 4 s 3455 5020',\n  'S 4 j 3524 5021',\n  'S 5 i 3385 5022',\n  'S 3 n 3385 5023',\n  'S 1 g 3399 3444',\n  'S 6 d 3455 5024',\n  'S 2 o 3399 3455',\n  'S 1 # 5026 5025',\n  'S 3 r 3455 3385',\n  'S 1 e 3385 5027',\n  'S 1 r 3455 5028',\n  'S 5 o 3455 5029',\n  'S 3 t 3385 4727',\n  'S 1 e 3494 5030',\n  'S 2 o 3385 5027',\n  'S 2 u 3455 5031',\n  'S 1 i 3455 3385',\n  'S 2 u 3522 5032',\n  'S 2 g 3385 5033',\n  'S 2 l 3399 5034',\n  'S 2 c 3455 5035',\n  'S 2 m 3522 5036',\n  'S 3 m 3385 3522',\n  'S 6 i 4579 5037',\n  'S 3 h 3522 5038',\n  'S 5 f 5037 5039',\n  'S 5 i 5041 5040',\n  'S 5 c 5043 5042',\n  'S 5 t 3455 5044',\n  'S 5 e 3385 3393',\n  'S 6 l 3494 3385',\n  'S 6 g 3385 5045',\n  'S 5 a 3522 5046',\n  'S 6 o 3522 3385',\n  'S 6 i 3522 5047',\n  'S 6 a 5049 5048',\n  'S 4 h 5051 5050',\n  'S 3 b 3455 5052',\n  'S 3 h 5054 5053',\n  'S 6 m 3494 3385',\n  'S 4 g 5056 5055',\n  'S 6 n 3385 5057',\n  'S 4 n 3385 3455',\n  'S 4 d 3385 5058',\n  'S 4 t 3393 3385',\n  'S 6 l 5060 5059',\n  'S 6 g 3455 5061',\n  'S 6 m 3385 5062',\n  'S 4 t 5064 5063',\n  'S 6 n 3385 5065',\n  'S 6 s 3455 5066',\n  'S 6 h 3494 5067',\n  'S 5 e 5069 5068',\n  'S 6 t 3455 5070',\n  'S 5 i 5071 4776',\n  'S 6 n 3444 3385',\n  'S 5 b 3522 3385',\n  'S 5 i 5073 5072',\n  'S 6 s 3444 3385',\n  'S 6 e 3385 3444',\n  'S 4 p 3444 3385',\n  'S 4 p 3455 5074',\n  'S 6 l 3444 3455',\n  'S 6 i 3444 5075',\n  'S 5 u 3455 3385',\n  'S 6 i 5076 3385',\n  'S 4 m 3385 5077',\n  'S 6 n 3455 3385',\n  'S 6 t 3393 3444',\n  'S 3 n 3399 5078',\n  'S 6 s 3385 3393',\n  'S 3 b 3399 5079',\n  'S 4 c 5081 5080',\n  'S 1 n 3444 5082',\n  'S 2 a 5083 3399',\n  'S 2 a 3385 5084',\n  'S 3 b 3494 3522',\n  'S 6 t 5086 5085',\n  'S 6 y 3455 5087',\n  'S 1 o 3494 3385',\n  'S 3 k 3455 5088',\n  'S 3 k 3455 5089',\n  'S 3 d 5091 5090',\n  'S 1 o 3522 3455',\n  'S 1 r 5093 5092',\n  'S 6 t 3494 5094',\n  'S 6 d 3393 3455',\n  'S 4 s 5096 5095',\n  'S 3 s 3385 5097',\n  'S 2 e 3455 5098',\n  'S 3 c 3393 3455',\n  'S 3 l 3455 3393',\n  'S 2 i 5100 5099',\n  'S 5 o 3399 5101',\n  'S 6 s 3393 5102',\n  'S 6 n 5104 5103',\n  'S 4 p 3444 5105',\n  'S 6 u 3494 3444',\n  'S 4 c 3455 5106',\n  'S 5 a 5108 5107',\n  'S 5 o 3524 5109',\n  'S 2 c 3385 3494',\n  'S 5 e 5111 5110',\n  'S 6 n 5113 5112',\n  'S 3 m 3522 5114',\n  'S 6 o 3385 3455',\n  'S 3 s 3455 5115',\n  'S 3 u 3399 5116',\n  'S 6 e 3455 5117',\n  'S 2 l 3455 5118',\n  'S 5 h 3455 3385',\n  'S 2 d 3385 3455',\n  'S 2 q 3385 5119',\n  'S 2 e 3455 3399',\n  'S 2 a 5121 5120',\n  'S 6 e 3455 3385',\n  'S 1 u 3455 5122',\n  'S 6 l 3385 5123',\n  'S 5 u 3455 5124',\n  'S 6 a 3455 5125',\n  'S 6 o 3385 5126',\n  'S 6 h 3385 5127',\n  'S 5 c 3385 5128',\n  'S 5 m 3385 5129',\n  'S 6 o 5131 5130',\n  'S 6 r 3522 4955',\n  'S 4 n 5133 5132',\n  'S 3 s 5134 3385',\n  'S 4 d 5136 5135',\n  'S 6 a 3524 3385',\n  'S 6 o 3385 5137',\n  'S 6 s 5139 5138',\n  'S 6 r 3385 5140',\n  'S 6 o 3393 5141',\n  'S 3 b 3494 3385',\n  'S 6 l 3385 5142',\n  'S 3 f 3393 5143',\n  'S 4 p 3385 5144',\n  'S 4 g 3393 5145',\n  'S 3 b 3455 4045',\n  'S 6 c 3385 5146',\n  'S 4 g 5064 5147',\n  'S 6 t 3455 3385',\n  'S 6 s 3385 5148',\n  'S 6 d 3455 3385',\n  'S 5 c 3494 5149',\n  'S 5 o 5151 5150',\n  'S 4 t 3455 5152',\n  'S 4 t 3455 5153',\n  'S 6 g 3455 3385',\n  'S 4 s 5155 5154',\n  'S 4 s 5157 5156',\n  'S 4 m 3455 5158',\n  'S 4 p 5160 5159',\n  'S 5 t 3385 3494',\n  'S 6 p 3393 5161',\n  'S 1 r 3393 5162',\n  'S 3 f 3399 5163',\n  'S 2 r 3385 5164',\n  'S 2 a 3494 4824',\n  'S 2 o 3444 5165',\n  'S 3 l 5166 3399',\n  'S 2 i 3963 5167',\n  'S 4 g 5169 5168',\n  'S 5 h 5171 5170',\n  'S 1 s 3385 5172',\n  'S 6 e 5174 5173',\n  'S 2 p 5176 5175',\n  'S 1 u 5178 5177',\n  'S 1 a 3455 4701',\n  'S 3 g 3455 5179',\n  'S 4 m 3385 5180',\n  'S 5 r 3455 4776',\n  'S 4 b 3399 5181',\n  'S 3 l 3399 3455',\n  'S 3 r 5183 5182',\n  'S 6 n 3399 5096',\n  'S 4 q 5185 5184',\n  'S 3 n 5186 5113',\n  'S 3 r 3522 5187',\n  'S 6 r 5189 5188',\n  'S 4 p 5191 5190',\n  'S 4 s 3385 3444',\n  'S 4 f 3385 5192',\n  'S 4 d 3393 4992',\n  'S 5 o 5194 5193',\n  'S 4 m 5196 5195',\n  'S 3 r 3385 5197',\n  'S 5 o 3455 5198',\n  'S 3 c 3385 5199',\n  'S 2 a 3455 3579',\n  'S 3 c 3399 3455',\n  'S 3 r 3455 5200',\n  'S 2 n 3455 5201',\n  'S 5 h 3455 5202',\n  'S 3 s 3455 5203',\n  'S 6 t 3385 5204',\n  'S 3 t 3385 5205',\n  'S 6 a 5207 5206',\n  'S 6 i 5209 5208',\n  'S 1 r 3455 3522',\n  'S 5 h 3385 5210',\n  'S 5 o 3455 5211',\n  'S 6 m 3455 5212',\n  'S 5 s 3385 5213',\n  'S 6 o 3385 3522',\n  'S 5 p 3522 3385',\n  'S 5 i 5215 5214',\n  'S 5 l 5217 5216',\n  'S 5 f 3522 5218',\n  'S 6 u 5219 3385',\n  'S 3 m 5221 5220',\n  'S 5 s 3522 3385',\n  'S 4 n 3385 5222',\n  'S 3 p 4545 4701',\n  'S 6 u 3522 3385',\n  'S 6 l 3385 5223',\n  'S 4 l 3522 3393',\n  'S 6 t 3385 3393',\n  'S 3 b 5225 5224',\n  'S 3 l 3385 3494',\n  'S 4 v 3385 5226',\n  'S 6 v 5228 5227',\n  'S 4 f 3455 5229',\n  'S 6 p 3385 5230',\n  'S 3 v 3385 5231',\n  'S 6 t 3455 5232',\n  'S 6 n 3494 3385',\n  'S 4 n 3385 5233',\n  'S 4 n 3455 5234',\n  'S 4 n 3389 4876',\n  'S 4 b 3455 3385',\n  'S 4 o 3444 5235',\n  'S 6 o 3455 5236',\n  'S 4 w 3444 5237',\n  'S 6 s 3455 5238',\n  'S 4 d 3455 3444',\n  'S 4 s 4090 3455',\n  'S 6 t 3385 3444',\n  'S 6 s 3393 5239',\n  'S 2 i 3399 5240',\n  'S 5 n 3385 3399',\n  'S 2 p 3385 5241',\n  'S 3 h 3393 3444',\n  'S 1 r 3522 3399',\n  'S 3 d 3385 5242',\n  'S 4 v 5244 5243',\n  'S 5 a 5246 5245',\n  'S 3 s 5248 5247',\n  'S 2 b 3494 5249',\n  'S 6 w 3399 5250',\n  'S 1 e 5252 5251',\n  'S 5 h 3385 5253',\n  'S 6 r 5255 5254',\n  'S 3 l 3393 3455',\n  'S 4 f 3399 5256',\n  'S 6 r 3455 5257',\n  'S 1 v 3494 5258',\n  'S 5 o 3385 3455',\n  'S 4 h 3399 5259',\n  'S 6 n 5261 5260',\n  'S 2 t 3385 4727',\n  'S 5 a 5263 5262',\n  'S 2 f 3393 3494',\n  'S 4 f 3455 3385',\n  'S 3 l 4545 5264',\n  'S 4 v 5266 5265',\n  'S 2 f 3385 5267',\n  'S 6 d 5269 5268',\n  'S 5 a 3444 3385',\n  'S 4 s 3455 3444',\n  'S 5 i 3385 5270',\n  'S 3 r 3385 5271',\n  'S 4 b 3393 5272',\n  'S 3 n 3455 5273',\n  'S 2 a 3524 5271',\n  'S 5 k 3385 5274',\n  'S 2 r 3385 5275',\n  'S 6 n 5276 3399',\n  'S 2 p 3455 5277',\n  'S 2 o 3455 5278',\n  'S 6 a 3524 3455',\n  'S 6 s 3385 3455',\n  'S 3 d 3455 5279',\n  'S 2 o 5280 3385',\n  'S 3 t 3455 5281',\n  'S 3 m 3385 5282',\n  'S 1 v 3455 3522',\n  'S 4 d 3385 5283',\n  'S 5 l 3385 5284',\n  'S 6 z 3389 5285',\n  'S 5 t 3385 5286',\n  'S 6 t 3385 5287',\n  'S 6 n 3385 3522',\n  'S 5 r 3522 5288',\n  'S 6 a 3455 3522',\n  'S 5 j 3522 5289',\n  'S 3 s 3494 3385',\n  'S 3 z 3385 5290',\n  'S 6 e 3385 5291',\n  'S 3 b 3455 5292',\n  'S 4 m 5294 5293',\n  'S 4 h 3393 5295',\n  'S 4 n 3385 5296',\n  'S 4 m 3385 5297',\n  'S 4 m 5299 5298',\n  'S 4 h 3455 4545',\n  'S 4 v 4545 3455',\n  'S 4 t 5301 5300',\n  'S 6 l 3522 5302',\n  'S 4 n 3455 3385',\n  'S 4 d 3385 5303',\n  'S 6 n 5304 4746',\n  'S 5 l 5306 5305',\n  'S 6 i 5308 5307',\n  'S 4 t 5310 5309',\n  'S 6 g 3385 3455',\n  'S 6 n 5311 3444',\n  'S 1 o 3399 5312',\n  'S 1 n 5314 5313',\n  'S 1 a 3455 5315',\n  'S 4 m 5317 5316',\n  'S 5 a 4545 5318',\n  'S 3 r 5320 5319',\n  'S 6 l 3393 3494',\n  'S 2 g 3455 5321',\n  'S 1 e 3455 3494',\n  'S 2 k 3494 3385',\n  'S 6 s 3393 5322',\n  'S 5 c 3385 5323',\n  'S 5 r 3455 3385',\n  'S 3 t 3522 3399',\n  'S 6 d 3455 3399',\n  'S 2 a 3455 3399',\n  'S 5 u 3455 5324',\n  'S 4 c 3385 3444',\n  'S 4 g 5326 5325',\n  'S 2 c 3455 5327',\n  'S 4 s 5329 5328',\n  'S 4 t 3455 5330',\n  'S 2 o 5332 5331',\n  'S 3 a 3399 5333',\n  'S 3 n 3455 5334',\n  'S 4 d 4648 3385',\n  'S 6 n 5335 3393',\n  'S 4 v 3385 5336',\n  'S 5 e 3393 5337',\n  'S 4 j 3385 3444',\n  'S 5 r 3385 5338',\n  'S 1 # 3393 3524',\n  'S 1 a 3385 5339',\n  'S 3 d 3385 3393',\n  'S 6 a 3455 5340',\n  'S 2 c 3455 5341',\n  'S 2 e 3455 3385',\n  'S 1 t 3455 5342',\n  'S 1 h 3455 5343',\n  'S 2 e 4745 3385',\n  'S 1 p 3385 5344',\n  'S 2 u 3385 5345',\n  'S 1 p 3455 3385',\n  'S 5 i 5347 5346',\n  'S 5 e 3385 5348',\n  'S 6 s 3455 3385',\n  'S 6 i 5128 3385',\n  'S 6 h 3385 5349',\n  'S 5 h 3522 5350',\n  'S 5 r 3522 3385',\n  'S 5 d 4662 3385',\n  'S 5 s 3385 5351',\n  'S 4 l 3385 5352',\n  'S 4 l 5354 5353',\n  'S 6 n 3385 5334',\n  'S 6 d 4545 5355',\n  'S 6 a 3455 5356',\n  'S 4 t 5357 3385',\n  'S 4 d 5359 5358',\n  'S 6 n 3393 5360',\n  'S 6 l 3385 5232',\n  'S 6 l 3385 3455',\n  'S 3 s 3385 5361',\n  'S 6 a 3455 5362',\n  'S 4 t 3385 3455',\n  'S 5 y 3444 3385',\n  'S 6 i 3385 3444',\n  'S 5 p 3455 5363',\n  'S 5 c 3455 3385',\n  'S 4 l 3455 3444',\n  'S 6 r 3455 3385',\n  'S 4 g 3444 3385',\n  'S 1 # 5365 5364',\n  'S 1 # 5367 5366',\n  'S 4 x 3385 3455',\n  'S 1 o 4727 3385',\n  'S 4 x 3385 5368',\n  'S 5 a 5370 5369',\n  'S 3 s 3455 5371',\n  'S 5 o 5373 5372',\n  'S 2 g 3522 3385',\n  'S 1 t 3399 5374',\n  'S 5 r 5376 5375',\n  'S 5 r 5378 5377',\n  'S 3 n 3455 5379',\n  'S 4 s 3385 5380',\n  'S 1 d 3385 3455',\n  'S 4 d 3455 5381',\n  'S 2 l 3399 5382',\n  'S 1 a 3393 3455',\n  'S 3 h 3455 5383',\n  'S 5 u 5385 5384',\n  'S 6 n 3455 5386',\n  'S 2 e 3455 5387',\n  'S 3 m 3385 3455',\n  'S 3 l 3385 3393',\n  'S 3 a 3385 5388',\n  'S 6 a 3385 5389',\n  'S 1 # 3385 5390',\n  'S 4 t 5392 5391',\n  'S 5 a 4686 5393',\n  'S 3 t 3399 5394',\n  'S 3 m 3455 5395',\n  'S 1 c 3455 5396',\n  'S 6 i 3522 3385',\n  'S 3 s 3455 3385',\n  'S 4 t 3385 5397',\n  'S 6 t 3385 5398',\n  'S 5 y 3385 5399',\n  'S 6 e 3385 5128',\n  'S 6 u 3522 5400',\n  'S 6 i 3385 5401',\n  'S 4 c 3944 5402',\n  'S 6 n 4964 5403',\n  'S 3 b 3455 5404',\n  'S 4 l 5406 5405',\n  'S 4 d 3455 3385',\n  'S 3 h 3385 5407',\n  'S 4 b 5345 5408',\n  'S 3 s 3455 3393',\n  'S 3 l 3455 3385',\n  'S 3 h 3385 5409',\n  'S 6 e 3385 5410',\n  'S 6 r 3444 5411',\n  'S 2 u 3444 5412',\n  'S 3 l 5414 5413',\n  'S 2 s 3494 5415',\n  'S 3 r 3385 5416',\n  'S 4 q 5418 5417',\n  'S 5 e 5420 5419',\n  'S 6 k 3399 5421',\n  'S 3 r 5423 5422',\n  'S 3 l 5425 5424',\n  'S 6 r 3455 5426',\n  'S 2 o 3399 5427',\n  'S 3 c 3393 5428',\n  'S 2 a 3393 3385',\n  'S 2 o 3399 5429',\n  'S 6 i 5334 5430',\n  'S 6 e 3399 5431',\n  'S 1 l 3524 5432',\n  'S 4 p 3399 5433',\n  'S 1 o 3385 5434',\n  'S 4 s 3522 5435',\n  'S 5 i 5437 5436',\n  'S 4 c 5276 4416',\n  'S 5 i 3393 3524',\n  'S 3 r 5439 5438',\n  'S 4 g 3393 5440',\n  'S 6 e 3385 5441',\n  'S 1 c 3385 5442',\n  'S 3 r 3393 5443',\n  'S 1 # 3393 3385',\n  'S 3 c 3455 5444',\n  'S 3 d 3455 5445',\n  'S 3 h 3455 5446',\n  'S 3 d 3455 5447',\n  'S 5 o 3385 5448',\n  'S 6 s 3389 3385',\n  'S 5 v 3385 5449',\n  'S 5 v 3522 5450',\n  'S 5 d 3522 3385',\n  'S 6 e 3385 5451',\n  'S 3 g 3385 5452',\n  'S 6 d 3385 5453',\n  'S 6 z 3385 5454',\n  'S 6 c 3455 5455',\n  'S 3 v 3385 3393',\n  'S 6 s 3393 5456',\n  'S 4 l 5458 5457',\n  'S 4 b 5460 5459',\n  'S 6 a 3444 5461',\n  'S 5 t 4697 5462',\n  'S 2 g 3399 3393',\n  'S 6 o 3399 3393',\n  'S 3 w 3385 5463',\n  'S 2 a 3522 3385',\n  'S 1 i 5465 5464',\n  'S 1 a 3494 5466',\n  'S 5 b 5468 5467',\n  'S 3 r 3393 5469',\n  'S 1 a 3455 5470',\n  'S 6 r 3385 4042',\n  'S 1 i 3385 3522',\n  'S 3 u 3399 5471',\n  'S 5 r 3522 5472',\n  'S 2 a 3399 3455',\n  'S 2 t 5474 5473',\n  'S 3 p 3393 5475',\n  'S 1 r 3455 5476',\n  'S 6 y 3455 3399',\n  'S 1 o 3385 5477',\n  'S 3 s 3455 5478',\n  'S 2 o 3494 3455',\n  'S 4 x 3385 5479',\n  'S 2 n 3494 3385',\n  'S 5 o 5481 5480',\n  'S 6 e 5483 5482',\n  'S 4 h 3385 5484',\n  'S 2 c 3393 3385',\n  'S 3 r 3393 3399',\n  'S 4 s 3385 5485',\n  'S 1 s 3385 3522',\n  'S 2 a 3385 4499',\n  'S 3 k 3455 5486',\n  'S 6 r 3455 3647',\n  'S 3 z 3455 5487',\n  'S 3 h 3455 5488',\n  'S 5 l 3385 5489',\n  'S 6 r 5491 5490',\n  'S 6 i 3385 5134',\n  'S 3 n 3393 3385',\n  'S 6 p 3385 5492',\n  'S 6 n 4311 3385',\n  'S 3 w 3385 5493',\n  'S 3 m 3455 5494',\n  'S 6 r 5496 5495',\n  'S 6 e 3393 5497',\n  'S 3 f 3455 5498',\n  'S 4 t 3385 3444',\n  'S 5 i 3455 3385',\n  'S 6 h 3444 3385',\n  'S 3 l 3393 5499',\n  'S 1 a 5501 5500',\n  'S 4 j 3399 5502',\n  'S 3 r 5504 5503',\n  'S 6 e 3393 3455',\n  'S 5 u 3455 5505',\n  'S 2 s 3385 4833',\n  'S 3 h 3393 5506',\n  'S 6 r 5426 3455',\n  'S 6 e 3494 5507',\n  'S 2 l 3455 3385',\n  'S 4 m 3455 5508',\n  'S 3 h 3455 3385',\n  'S 5 n 3455 5509',\n  'S 6 a 3455 5510',\n  'S 1 e 3385 5511',\n  'S 4 c 3385 5512',\n  'S 2 p 3455 5513',\n  'S 2 u 3455 5514',\n  'S 3 r 3385 5515',\n  'S 3 h 5516 3385',\n  'S 2 c 3385 3393',\n  'S 3 l 3385 5517',\n  'S 5 a 3452 3385',\n  'S 5 v 3385 5518',\n  'S 1 u 3455 5519',\n  'S 3 p 3385 5520',\n  'S 4 h 3385 5521',\n  'S 6 o 3385 5522',\n  'S 5 d 3385 3522',\n  'S 6 y 3385 5523',\n  'S 6 s 5525 5524',\n  'S 6 b 3385 5526',\n  'S 3 l 3385 5527',\n  'S 4 g 3522 3385',\n  'S 3 m 3385 5528',\n  'S 6 n 3455 5529',\n  'S 6 # 5530 3393',\n  'S 2 t 3385 5531',\n  'S 4 v 3522 3385',\n  'S 1 e 5533 5532',\n  'S 4 b 3455 5534',\n  'S 4 p 5535 3455',\n  'S 3 m 3385 5536',\n  'S 6 r 3399 3455',\n  'S 5 r 3399 5537',\n  'S 4 g 3455 3399',\n  'S 5 a 3455 5538',\n  'S 5 o 3399 5539',\n  'S 3 c 5540 3385',\n  'S 1 h 3399 5304',\n  'S 3 l 5035 5541',\n  'S 6 a 3385 5542',\n  'S 4 m 3455 3385',\n  'S 4 m 3385 3393',\n  'S 4 f 3385 5543',\n  'S 6 i 3385 5544',\n  'S 3 n 4913 5545',\n  'S 5 f 3455 5546',\n  'S 5 p 3385 5547',\n  'S 5 g 3522 3385',\n  'S 4 s 3385 5548',\n  'S 6 a 3455 5549',\n  'S 4 c 3455 5356',\n  'S 3 c 3522 4989',\n  'S 6 d 3455 5550',\n  'S 4 p 3522 5551',\n  'S 3 m 3522 3385',\n  'S 3 r 3444 5552',\n  'S 4 x 5554 5553',\n  'S 5 q 3385 5555',\n  'S 2 r 4279 5556',\n  'S 2 d 3399 5557',\n  'S 5 r 3385 3455',\n  'S 5 o 3399 3385',\n  'S 5 u 3399 5558',\n  'S 2 a 3399 5559',\n  'S 2 i 3399 5560',\n  'S 6 o 3385 3399',\n  'S 2 s 3455 5561',\n  'S 4 s 5562 3385',\n  'S 3 h 3385 5563',\n  'S 1 i 3455 5564',\n  'S 2 t 3385 5565',\n  'S 6 n 3455 5566',\n  'S 4 b 3385 5567',\n  'S 4 d 5310 5568',\n  'S 4 b 3385 5569',\n  'S 6 c 3455 5570',\n  'S 3 g 3385 5571',\n  'S 1 a 3444 3393',\n  'S 4 v 4359 3455',\n  'S 2 i 3522 5572',\n  'S 2 h 5574 5573',\n  'S 2 f 3385 5575',\n  'S 4 h 3455 5576',\n  'S 6 r 3399 3385',\n  'S 3 l 3455 5577',\n  'S 5 h 3399 3385',\n  'S 2 g 3455 5578',\n  'S 2 c 5579 3385',\n  'S 4 p 3455 3385',\n  'S 2 e 3455 5580',\n  'S 3 r 3455 5581',\n  'S 3 k 3455 5582',\n  'S 5 s 3385 5583',\n  'S 3 l 3385 4424',\n  'S 3 g 5064 5584',\n  'S 4 g 3385 5585',\n  'S 4 d 3385 5586',\n  'S 2 u 3455 5587',\n  'S 3 h 5589 5588',\n  'S 3 o 3399 5590',\n  'S 2 m 3385 3399',\n  'S 6 s 3399 3455',\n  'S 5 e 4090 3455',\n  'S 2 e 3455 5591',\n  'S 5 c 3522 3385',\n  'S 2 o 3385 3455',\n  'S 1 o 3455 5592',\n  'S 2 r 3455 5593',\n  'S 5 e 3393 3385',\n  'S 4 f 3455 5594',\n  'S 4 t 3385 5595',\n  'S 3 f 3385 5596',\n  'S 2 a 3385 5597',\n  'S 4 c 5599 5598',\n  'S 4 u 3399 4523',\n  'S 3 a 3399 3385',\n  'S 2 n 3455 3385',\n  'S 1 e 3455 5600',\n  'S 2 u 3455 4701',\n  'S 3 c 3455 5601',\n  'S 3 t 3385 5602',\n  'S 6 n 5603 3385',\n  'S 2 o 3522 5276',\n  'S 5 h 5605 5604',\n  'S 6 l 3455 5606',\n  'S 3 k 3455 3385',\n  'S 4 m 3385 5037',\n  'S 3 s 3385 5607',\n  'S 4 n 3987 3393',\n  'S 3 d 5609 5608',\n  'S 1 j 3455 5610',\n  'S 5 e 3494 5611',\n  'S 4 v 3385 5612',\n  'S 4 h 3399 5613',\n  'S 2 i 3399 5614',\n  'S 3 r 3399 5615',\n  'S 6 e 5616 4912',\n  'S 4 n 3385 5617',\n  'S 6 s 3399 5618',\n  'S 1 r 3455 5619',\n  'S 6 o 3399 5620',\n  'S 5 h 3385 3494',\n  'S 3 b 3385 3522',\n  'S 5 n 3399 5621',\n  'S 4 b 3399 3455',\n  'S 2 a 3385 5622',\n  'S 5 u 3399 5623',\n  'S 6 i 3399 3494',\n  'S 1 f 3399 5624',\n  'S 3 r 5626 5625',\n  'S 2 i 5628 5627',\n  'S 2 t 3455 5629',\n  'S 4 p 5631 5630',\n  'S 5 o 3399 5632',\n  'S 2 r 3455 5633',\n  'S 3 g 3455 5634',\n  'S 5 p 3385 3399',\n  'S 6 r 3399 5635',\n  'S 6 r 3455 3399',\n  'S 3 a 3399 5636',\n  'S 5 e 3455 5637',\n  'S 1 a 5639 5638',\n  'S 3 n 5640 3399',\n  'S 6 a 3399 5641',\n  'S 4 b 3455 3399',\n  'S 4 s 3399 3455',\n  'S 4 f 3399 5642',\n  'S 3 l 3399 5643',\n  'S 1 n 3399 5644',\n  'S 5 e 5645 3399',\n  'S 6 r 3399 5646',\n  'S 4 k 3399 3455',\n  'I 5647 f',\n  'S 4 f 5649 5648',\n  'P f',\n  'P epsilon',\n  'I 5650 g',\n  'S 3 n 5652 5651',\n  'S 4 h 5654 5653',\n  'S 4 # 5656 5655',\n  'S 4 g 5658 5657',\n  'S 5 t 5656 5659',\n  'S 4 s 5656 5660',\n  'P epsilon',\n  'S 4 e 5662 5661',\n  'S 2 s 5664 5663',\n  'S 3 u 5666 5665',\n  'S 4 e 5668 5667',\n  'S 4 i 5670 5669',\n  'S 5 r 5672 5671',\n  'S 1 # 5656 5673',\n  'S 6 s 5674 5656',\n  'S 3 i 5676 5675',\n  'S 5 # 5656 5677',\n  'S 4 i 5679 5678',\n  'S 6 # 5681 5680',\n  'S 4 y 5683 5682',\n  'S 2 l 5685 5684',\n  'S 3 d 5687 5686',\n  'S 6 # 5689 5688',\n  'S 5 l 5691 5690',\n  'P g',\n  'S 1 0 5674 5692',\n  'S 5 a 5674 5693',\n  'S 1 t 5695 5694',\n  'S 4 t 5697 5696',\n  'S 6 g 5699 5698',\n  'S 5 # 5687 5700',\n  'S 5 l 5674 5701',\n  'S 4 n 5703 5702',\n  'S 3 g 5674 5704',\n  'S 5 a 5687 5705',\n  'S 5 n 5706 5687',\n  'S 3 g 5708 5707',\n  'P jh',\n  'S 6 a 5687 5709',\n  'S 3 d 5687 5710',\n  'S 2 b 5674 5656',\n  'S 1 t 5674 5656',\n  'S 1 b 5674 5711',\n  'S 5 e 5674 5656',\n  'S 1 l 5713 5712',\n  'P f',\n  'S 4 y 5687 5714',\n  'S 2 e 5715 5656',\n  'S 5 l 5674 5716',\n  'S 2 i 5656 5717',\n  'S 5 r 5719 5718',\n  'S 5 s 5687 5720',\n  'S 3 d 5722 5721',\n  'S 5 # 5656 5723',\n  'S 2 l 5687 5724',\n  'S 2 0 5726 5725',\n  'S 6 g 5687 5674',\n  'S 5 # 5687 5727',\n  'S 1 s 5687 5674',\n  'S 3 g 5674 5728',\n  'S 1 c 5687 5729',\n  'S 3 e 5674 5730',\n  'S 2 o 5732 5731',\n  'S 2 a 5733 5656',\n  'S 5 y 5735 5734',\n  'S 6 e 5656 5736',\n  'S 6 e 5687 5737',\n  'S 2 o 5656 5687',\n  'S 5 l 5739 5738',\n  'S 1 f 5674 5740',\n  'S 1 s 5742 5741',\n  'S 3 g 5744 5743',\n  'S 4 r 5674 5745',\n  'S 2 0 5656 5746',\n  'S 1 # 5674 5747',\n  'S 3 g 5749 5748',\n  'S 5 l 5674 5750',\n  'S 5 l 5752 5751',\n  'S 3 d 5687 5753',\n  'S 3 a 5755 5754',\n  'S 2 a 5674 5756',\n  'S 2 a 5656 5757',\n  'S 1 c 5695 5656',\n  'S 5 l 5736 5695',\n  'S 4 h 5759 5758',\n  'S 4 l 5656 5674',\n  'P k',\n  'S 6 l 5687 5760',\n  'S 6 b 5656 5761',\n  'S 2 a 5762 5674',\n  'S 1 d 5687 5763',\n  'S 2 i 5765 5764',\n  'S 2 i 5687 5656',\n  'S 4 t 5766 5674',\n  'S 1 r 5735 5674',\n  'S 6 n 5687 5767',\n  'S 6 d 5656 5768',\n  'S 6 e 5674 5687',\n  'S 3 c 5674 5769',\n  'S 5 o 5687 5770',\n  'S 5 o 5687 5771',\n  'S 5 i 5674 5772',\n  'S 6 l 5774 5773',\n  'S 6 t 5674 5775',\n  'S 1 m 5687 5674',\n  'S 2 r 5674 5776',\n  'S 5 # 5656 5777',\n  'S 5 e 5656 5674',\n  'S 4 m 5656 5778',\n  'S 5 i 5674 5656',\n  'S 1 # 5687 5779',\n  'S 1 l 5674 5780',\n  'S 6 o 5674 5781',\n  'S 6 s 5783 5782',\n  'S 1 w 5656 5784',\n  'S 1 h 5687 5656',\n  'S 3 a 5674 5785',\n  'S 5 e 5687 5786',\n  'S 6 t 5674 5787',\n  'S 5 v 5674 5788',\n  'S 5 # 5687 5789',\n  'S 5 u 5687 5790',\n  'S 5 t 5792 5791',\n  'S 2 0 5793 5674',\n  'S 3 a 5687 5674',\n  'S 6 s 5795 5794',\n  'S 1 s 5674 5796',\n  'S 1 o 5656 5674',\n  'S 4 b 5656 5797',\n  'S 1 r 5687 5798',\n  'S 6 t 5687 5799',\n  'S 1 v 5687 5800',\n  'S 1 l 5674 5801',\n  'S 2 i 5656 5802',\n  'S 2 o 5656 5803',\n  'S 1 # 5674 5656',\n  'S 4 a 5674 5804',\n  'S 3 i 5806 5805',\n  'S 3 o 5674 5807',\n  'S 5 n 5674 5808',\n  'S 5 n 5810 5809',\n  'S 2 h 5812 5811',\n  'S 1 0 5674 5813',\n  'S 6 a 5687 5674',\n  'S 2 e 5674 5814',\n  'S 3 a 5815 5674',\n  'S 1 h 5674 5816',\n  'S 4 d 5656 5817',\n  'S 5 n 5674 5818',\n  'S 2 o 5687 5819',\n  'S 1 # 5820 5674',\n  'S 1 # 5674 5821',\n  'S 2 e 5687 5656',\n  'S 5 d 5687 5822',\n  'S 4 o 5674 5687',\n  'S 6 # 5757 5674',\n  'S 5 m 5656 5823',\n  'S 6 # 5825 5824',\n  'S 1 r 5687 5674',\n  'S 5 v 5674 5826',\n  'S 6 n 5687 5827',\n  'S 6 s 5829 5828',\n  'S 1 n 5674 5830',\n  'S 2 v 5687 5831',\n  'S 6 g 5674 5832',\n  'S 1 # 5674 5687',\n  'S 1 # 5674 5833',\n  'S 4 f 5656 5834',\n  'S 2 i 5674 5835',\n  'S 6 i 5674 5836',\n  'S 6 i 5674 5687',\n  'S 6 t 5674 5837',\n  'S 2 e 5687 5838',\n  'S 5 s 5656 5839',\n  'S 6 l 5841 5840',\n  'S 2 r 5687 5842',\n  'S 5 f 5674 5843',\n  'S 6 t 5687 5844',\n  'S 6 h 5674 5845',\n  'S 1 j 5674 5846',\n  'S 5 m 5674 5847',\n  'S 6 t 5848 5674',\n  'S 6 l 5674 5849',\n  'S 2 e 5674 5687',\n  'S 4 w 5656 5850',\n  'S 5 e 5656 5687',\n  'S 6 u 5687 5851',\n  'S 2 i 5687 5674',\n  'S 1 r 5687 5852',\n  'S 1 0 5674 5853',\n  'S 2 b 5674 5854',\n  'S 1 c 5674 5855',\n  'S 2 o 5855 5856',\n  'S 6 d 5674 5857',\n  'S 6 g 5674 5687',\n  'S 5 u 5859 5858',\n  'S 1 # 5674 5860',\n  'S 5 n 5674 5687',\n  'S 3 r 5674 5687',\n  'S 6 b 5674 5861',\n  'S 4 p 5656 5862',\n  'S 2 a 5687 5863',\n  'S 1 l 5656 5864',\n  'S 5 a 5674 5865',\n  'S 2 h 5674 5866',\n  'S 5 e 5674 5687',\n  'S 1 # 5687 5867',\n  'S 6 s 5674 5868',\n  'S 1 b 5848 5869',\n  'P zh',\n  'S 5 m 5687 5870',\n  'S 6 y 5687 5871',\n  'S 5 u 5873 5872',\n  'S 1 # 5674 5874',\n  'S 5 r 5875 5687',\n  'S 6 f 5674 5876',\n  'S 2 s 5674 5687',\n  'S 5 s 5674 5877',\n  'S 5 s 5687 5878',\n  'S 2 b 5674 5879',\n  'S 5 n 5880 5674',\n  'S 2 n 5687 5881',\n  'S 4 o 5674 5882',\n  'S 2 a 5656 5883',\n  'S 2 i 5674 5687',\n  'S 2 a 5656 5674',\n  'S 2 m 5674 5884',\n  'S 1 r 5674 5885',\n  'S 5 r 5674 5886',\n  'S 6 r 5888 5887',\n  'S 1 0 5687 5674',\n  'S 2 0 5890 5889',\n  'S 4 a 5892 5891',\n  'S 6 i 5656 5674',\n  'S 6 n 5894 5893',\n  'S 2 e 5674 5895',\n  'S 6 g 5674 5896',\n  'S 3 a 5898 5897',\n  'S 5 o 5687 5899',\n  'S 3 i 5687 5900',\n  'S 6 m 5687 5901',\n  'S 4 r 5674 5902',\n  'S 1 h 5656 5674',\n  'S 6 r 5656 5903',\n  'S 5 i 5656 5674',\n  'S 3 a 5674 5687',\n  'S 6 m 5674 5904',\n  'S 6 t 5687 5905',\n  'S 5 n 5815 5687',\n  'S 5 a 5674 5906',\n  'S 6 i 5687 5674',\n  'S 6 r 5687 5907',\n  'S 4 l 5909 5908',\n  'S 6 # 5656 5674',\n  'S 5 d 5674 5910',\n  'S 5 o 5687 5911',\n  'S 5 e 5674 5912',\n  'S 6 i 5687 5913',\n  'S 5 e 5656 5914',\n  'S 2 e 5757 5915',\n  'S 5 b 5917 5916',\n  'S 5 n 5919 5918',\n  'S 5 h 5674 5687',\n  'S 6 o 5687 5674',\n  'S 4 u 5674 5656',\n  'S 5 e 5921 5920',\n  'S 6 l 5687 5922',\n  'S 6 b 5674 5687',\n  'S 6 # 5687 5923',\n  'S 6 # 5924 5874',\n  'S 6 s 5674 5925',\n  'S 1 l 5656 5674',\n  'S 5 e 5674 5926',\n  'S 5 a 5687 5927',\n  'S 3 o 5687 5928',\n  'S 6 n 5674 5929',\n  'S 6 a 5674 5930',\n  'S 6 i 5687 5931',\n  'S 3 r 5674 5932',\n  'S 6 m 5674 5933',\n  'S 6 t 5674 5687',\n  'S 3 l 5674 5934',\n  'S 1 # 5674 5935',\n  'S 5 a 5656 5894',\n  'S 6 a 5674 5936',\n  'S 3 i 5687 5674',\n  'S 5 m 5687 5937',\n  'S 1 0 5938 5674',\n  'S 5 b 5687 5674',\n  'I 5939 h',\n  'S 3 # 5941 5940',\n  'S 3 c 5943 5942',\n  'S 4 a 5945 5944',\n  'S 3 s 5947 5946',\n  'S 4 o 5948 5947',\n  'S 4 o 5945 5949',\n  'P hh',\n  'S 3 t 5951 5950',\n  'P epsilon',\n  'S 1 i 5945 5947',\n  'S 4 i 5945 5952',\n  'S 3 p 5954 5953',\n  'S 4 o 5955 5947',\n  'S 4 u 5945 5956',\n  'S 3 g 5958 5957',\n  'S 1 # 5947 5959',\n  'S 1 0 5947 5960',\n  'S 4 y 5945 5961',\n  'S 1 0 5963 5962',\n  'S 1 i 5965 5964',\n  'S 1 h 5966 5947',\n  'S 1 g 5945 5947',\n  'S 4 e 5945 5967',\n  'S 4 l 5947 5968',\n  'S 4 o 5970 5969',\n  'S 4 o 5972 5971',\n  'S 4 o 5945 5973',\n  'S 4 e 5947 5945',\n  'S 4 r 5945 5974',\n  'S 4 # 5947 5975',\n  'S 3 o 5977 5976',\n  'S 3 r 5947 5978',\n  'S 4 a 5980 5979',\n  'S 1 0 5947 5945',\n  'S 4 a 5945 5947',\n  'S 4 l 5945 5947',\n  'S 4 n 5947 5981',\n  'S 3 a 5973 5947',\n  'S 4 a 5945 5982',\n  'S 3 w 5945 5947',\n  'S 4 u 5945 5947',\n  'S 1 0 5947 5983',\n  'S 4 r 5947 5984',\n  'S 4 l 5947 5985',\n  'S 1 n 5945 5947',\n  'S 4 m 5947 5986',\n  'S 4 m 5947 5945',\n  'S 4 s 5947 5987',\n  'S 3 w 5983 5988',\n  'S 3 x 5990 5989',\n  'S 4 t 5947 5991',\n  'S 4 i 5947 5992',\n  'S 4 d 5947 5993',\n  'S 4 a 5947 5945',\n  'S 4 o 5995 5994',\n  'S 3 n 5945 5996',\n  'S 1 s 5945 5997',\n  'S 4 y 5999 5998',\n  'S 1 c 5945 6000',\n  'S 1 h 5992 6001',\n  'S 3 e 5945 6002',\n  'S 3 e 5945 6003',\n  'S 3 z 6005 6004',\n  'S 3 a 5945 5947',\n  'S 3 d 5945 6006',\n  'S 3 d 6008 6007',\n  'S 4 a 5945 6009',\n  'S 3 n 5945 6010',\n  'S 1 u 5945 6011',\n  'S 4 e 5945 6012',\n  'S 4 e 5945 5947',\n  'S 1 o 6013 5945',\n  'S 1 e 5945 6014',\n  'S 4 u 5945 6015',\n  'S 3 r 5947 5945',\n  'S 4 a 6017 6016',\n  'S 1 e 5945 5947',\n  'S 1 # 6019 6018',\n  'S 1 # 5945 6020',\n  'S 1 k 5947 6021',\n  'S 4 i 5945 6022',\n  'S 1 b 5945 6023',\n  'S 3 o 5945 6024',\n  'S 4 e 5945 5979',\n  'S 1 v 5945 6025',\n  'S 1 p 5945 6026',\n  'S 1 m 5947 6027',\n  'S 1 t 5945 6028',\n  'S 3 i 5945 6029',\n  'S 1 i 5945 6030',\n  'S 1 f 5945 6031',\n  'S 1 l 5945 6032',\n  'S 1 d 5945 6033',\n  'S 1 o 5945 6034',\n  'S 3 o 5945 6035',\n  'S 1 g 5945 6036',\n  'S 3 a 5945 6037',\n  'S 3 i 6039 6038',\n  'S 3 m 5945 6040',\n  'S 1 c 5945 6041',\n  'S 1 n 5947 5945',\n  'S 1 r 6042 5945',\n  'S 1 n 5945 6043',\n  'S 3 u 5947 5945',\n  'S 3 e 5945 6044',\n  'S 1 w 5945 6045',\n  'S 1 r 5945 6046',\n  'S 1 a 5945 6047',\n  'S 3 r 5945 6048',\n  'S 1 s 5945 6049',\n  'S 1 m 5945 6002',\n  'I 6050 i',\n  'S 5 g 6052 6051',\n  'S 4 # 6054 6053',\n  'S 6 # 6056 6055',\n  'S 4 o 6058 6057',\n  'S 3 a 6060 6059',\n  'S 2 # 6062 6061',\n  'S 4 n 6064 6063',\n  'S 4 e 6066 6065',\n  'S 3 t 6068 6067',\n  'S 3 e 6070 6069',\n  'S 2 h 6072 6071',\n  'S 4 n 6074 6073',\n  'S 4 e 6076 6075',\n  'S 4 e 6076 6077',\n  'S 2 # 6077 6078',\n  'S 4 a 6080 6079',\n  'S 2 # 6082 6081',\n  'S 3 s 6084 6083',\n  'S 5 n 6086 6085',\n  'P iy',\n  'S 2 m 6072 6086',\n  'S 2 k 6072 6087',\n  'P ay1',\n  'S 4 e 6076 6088',\n  'S 3 s 6090 6089',\n  'S 4 r 6086 6091',\n  'P iy1',\n  'P ih1',\n  'S 3 r 6093 6092',\n  'S 3 a 6095 6094',\n  'S 3 c 6097 6096',\n  'S 5 r 6099 6098',\n  'S 5 r 6101 6100',\n  'S 2 # 6103 6102',\n  'S 5 n 6086 6069',\n  'S 5 u 6086 6069',\n  'P epsilon',\n  'S 2 d 6086 6072',\n  'S 6 e 6105 6104',\n  'S 2 0 6077 6106',\n  'S 6 e 6108 6107',\n  'S 4 a 6110 6109',\n  'S 3 w 6111 6107',\n  'S 2 d 6077 6112',\n  'S 5 e 6114 6113',\n  'S 4 c 6116 6115',\n  'S 3 t 6118 6117',\n  'S 5 t 6069 6119',\n  'S 5 # 6069 6120',\n  'S 3 e 6122 6121',\n  'S 5 w 6086 6123',\n  'S 3 h 6072 6124',\n  'S 5 n 6126 6125',\n  'S 3 g 6086 6127',\n  'S 4 o 6129 6128',\n  'S 2 r 6107 6130',\n  'S 3 e 6072 6131',\n  'P ih',\n  'P ah',\n  'S 4 o 6132 6077',\n  'S 3 d 6072 6069',\n  'S 2 o 6107 6133',\n  'S 2 e 6107 6134',\n  'S 4 c 6136 6135',\n  'S 4 v 6138 6137',\n  'S 2 z 6077 6139',\n  'S 5 # 6107 6086',\n  'S 2 # 6141 6140',\n  'S 5 t 6069 6142',\n  'S 6 o 6069 6143',\n  'S 5 s 6145 6144',\n  'S 6 # 6147 6146',\n  'S 2 m 6132 6072',\n  'S 3 d 6149 6148',\n  'S 3 p 6077 6150',\n  'S 5 u 6152 6151',\n  'S 2 l 6154 6153',\n  'S 3 f 6069 6155',\n  'S 4 a 6069 6156',\n  'S 2 o 6132 6069',\n  'S 4 d 6158 6157',\n  'S 2 s 6160 6159',\n  'P ay',\n  'S 2 a 6107 6161',\n  'S 2 a 6107 6162',\n  'S 4 r 6164 6163',\n  'S 2 # 6166 6165',\n  'S 3 o 6168 6167',\n  'S 3 t 6107 6169',\n  'S 5 a 6171 6170',\n  'S 3 s 6173 6172',\n  'S 3 g 6086 6174',\n  'S 6 # 6086 6175',\n  'S 5 l 6086 6176',\n  'S 5 d 6178 6177',\n  'S 3 f 6072 6179',\n  'S 6 s 6181 6180',\n  'S 3 a 6132 6182',\n  'S 6 e 6076 6183',\n  'S 5 t 6185 6184',\n  'S 3 s 6069 6186',\n  'S 5 r 6188 6187',\n  'S 3 c 6086 6189',\n  'S 3 n 6154 6190',\n  'P y',\n  'S 5 l 6192 6191',\n  'S 6 r 6086 6077',\n  'S 4 g 6077 6072',\n  'S 3 r 6193 6107',\n  'S 3 r 6195 6194',\n  'S 3 w 6077 6196',\n  'S 2 e 6107 6077',\n  'S 2 u 6107 6197',\n  'S 3 e 6199 6198',\n  'S 6 n 6201 6200',\n  'S 5 # 6107 6202',\n  'S 5 r 6072 6203',\n  'S 6 # 6205 6204',\n  'S 4 r 6206 6086',\n  'S 3 s 6107 6207',\n  'S 5 o 6209 6208',\n  'S 4 n 6086 6210',\n  'S 3 l 6212 6211',\n  'S 5 k 6069 6213',\n  'S 3 d 6072 6214',\n  'S 2 s 6216 6215',\n  'S 5 n 6086 6217',\n  'S 5 w 6219 6218',\n  'S 3 f 6072 6220',\n  'S 6 # 6222 6221',\n  'S 6 i 6077 6223',\n  'S 2 i 6072 6224',\n  'S 3 f 6072 6225',\n  'S 5 s 6184 6226',\n  'S 6 # 6072 6076',\n  'S 6 z 6076 6227',\n  'S 6 a 6076 6228',\n  'S 2 0 6072 6229',\n  'S 3 r 6231 6230',\n  'S 3 g 6086 6069',\n  'S 2 0 6132 6232',\n  'S 3 b 6072 6233',\n  'S 6 e 6072 6234',\n  'S 2 b 6077 6235',\n  'S 6 s 6107 6236',\n  'S 6 t 6107 6237',\n  'S 6 u 6077 6238',\n  'S 2 o 6107 6239',\n  'S 3 o 6241 6240',\n  'S 4 g 6243 6242',\n  'S 3 o 6245 6244',\n  'S 5 a 6107 6246',\n  'S 5 a 6248 6247',\n  'S 5 k 6077 6249',\n  'S 2 # 6251 6250',\n  'S 4 n 6253 6252',\n  'P aa1',\n  'S 3 e 6076 6254',\n  'S 4 v 6086 6255',\n  'S 4 n 6086 6256',\n  'S 2 t 6072 6086',\n  'S 3 g 6258 6257',\n  'S 6 e 6260 6259',\n  'S 6 i 6069 6261',\n  'S 5 n 6263 6262',\n  'S 2 n 6086 6264',\n  'S 5 # 6069 6265',\n  'S 6 # 6069 6086',\n  'S 5 n 6267 6266',\n  'S 3 v 6086 6268',\n  'S 6 # 6270 6269',\n  'S 3 r 6076 6271',\n  'S 3 l 6273 6272',\n  'S 6 e 6275 6274',\n  'S 3 l 6154 6276',\n  'S 3 s 6069 6277',\n  'S 3 b 6279 6278',\n  'S 6 e 6076 6072',\n  'S 6 n 6077 6280',\n  'S 5 # 6282 6281',\n  'S 2 a 6154 6283',\n  'S 2 p 6132 6069',\n  'S 3 l 6285 6284',\n  'S 6 t 6069 6286',\n  'S 6 i 6132 6287',\n  'S 2 t 6077 6288',\n  'S 2 k 6077 6289',\n  'S 2 e 6107 6290',\n  'S 6 i 6077 6291',\n  'S 2 r 6107 6292',\n  'S 2 # 6294 6293',\n  'S 4 s 6296 6295',\n  'S 5 # 6298 6297',\n  'S 5 h 6300 6299',\n  'S 5 a 6302 6301',\n  'S 5 # 6206 6086',\n  'S 2 # 6304 6303',\n  'S 6 # 6306 6305',\n  'S 6 t 6308 6307',\n  'S 3 e 6072 6309',\n  'S 3 e 6311 6310',\n  'S 4 r 6313 6312',\n  'S 4 c 6315 6314',\n  'S 3 l 6317 6316',\n  'S 3 d 6319 6318',\n  'S 4 s 6320 6086',\n  'S 6 r 6086 6321',\n  'S 3 o 6154 6322',\n  'S 2 r 6086 6323',\n  'S 2 g 6069 6324',\n  'S 5 m 6086 6069',\n  'S 5 s 6069 6325',\n  'S 3 h 6072 6326',\n  'S 6 # 6076 6069',\n  'S 6 s 6086 6327',\n  'S 6 i 6086 6069',\n  'S 5 t 6329 6328',\n  'S 2 f 6086 6330',\n  'S 6 i 6108 6069',\n  'S 2 f 6076 6069',\n  'S 2 p 6072 6331',\n  'S 6 t 6069 6332',\n  'S 2 i 6069 6333',\n  'S 2 l 6069 6072',\n  'S 2 n 6069 6077',\n  'S 2 e 6077 6334',\n  'S 2 o 6069 6335',\n  'S 2 r 6069 6336',\n  'S 5 n 6338 6337',\n  'S 5 n 6108 6076',\n  'S 3 w 6077 6339',\n  'S 3 a 6072 6340',\n  'S 3 h 6341 6069',\n  'S 3 n 6154 6342',\n  'S 3 r 6069 6343',\n  'S 2 g 6069 6154',\n  'S 5 n 6072 6344',\n  'S 3 b 6132 6072',\n  'S 2 d 6107 6345',\n  'S 6 u 6077 6346',\n  'S 2 a 6107 6347',\n  'S 3 l 6077 6348',\n  'S 2 i 6107 6345',\n  'S 2 0 6350 6349',\n  'S 4 g 6352 6351',\n  'S 5 c 6108 6086',\n  'S 5 # 6206 6353',\n  'S 2 r 6355 6354',\n  'S 2 h 6357 6356',\n  'S 5 n 6359 6358',\n  'S 6 # 6086 6360',\n  'S 5 o 6362 6361',\n  'S 3 e 6086 6363',\n  'S 2 0 6072 6364',\n  'S 5 o 6107 6086',\n  'S 3 e 6072 6365',\n  'S 5 o 6367 6366',\n  'S 6 l 6369 6368',\n  'S 3 r 6107 6370',\n  'S 5 h 6372 6371',\n  'S 4 z 6374 6373',\n  'S 6 d 6086 6375',\n  'S 6 s 6377 6376',\n  'S 3 d 6086 6378',\n  'S 4 l 6380 6379',\n  'S 2 # 6072 6381',\n  'S 3 w 6072 6382',\n  'S 2 o 6076 6383',\n  'S 2 o 6385 6384',\n  'S 2 # 6386 6072',\n  'S 6 # 6387 6086',\n  'S 6 n 6086 6388',\n  'S 3 n 6390 6389',\n  'S 6 # 6069 6391',\n  'S 2 p 6072 6392',\n  'S 6 # 6086 6393',\n  'S 3 v 6072 6394',\n  'S 5 # 6086 6395',\n  'S 6 l 6069 6396',\n  'S 3 u 6072 6397',\n  'S 3 c 6399 6398',\n  'S 2 r 6069 6400',\n  'S 6 c 6069 6401',\n  'S 2 c 6072 6069',\n  'S 2 i 6069 6077',\n  'S 3 r 6069 6077',\n  'S 3 r 6069 6402',\n  'S 3 l 6076 6403',\n  'S 3 v 6069 6076',\n  'S 3 b 6077 6404',\n  'S 5 t 6069 6405',\n  'S 2 c 6069 6072',\n  'S 6 a 6154 6069',\n  'S 3 p 6069 6406',\n  'S 5 c 6072 6407',\n  'S 2 h 6107 6077',\n  'S 6 a 6107 6408',\n  'S 2 r 6107 6345',\n  'S 6 l 6077 6409',\n  'S 5 a 6411 6410',\n  'S 4 n 6077 6412',\n  'S 5 a 6414 6413',\n  'S 5 h 6072 6415',\n  'S 2 b 6086 6416',\n  'S 6 # 6418 6417',\n  'S 4 n 6420 6419',\n  'S 2 t 6422 6421',\n  'S 4 s 6132 6423',\n  'S 2 w 6425 6424',\n  'S 6 i 6107 6426',\n  'S 2 h 6072 6086',\n  'S 5 r 6428 6427',\n  'S 3 e 6086 6429',\n  'S 3 p 6431 6430',\n  'S 2 n 6072 6432',\n  'S 5 i 6434 6433',\n  'S 3 e 6436 6435',\n  'S 3 r 6076 6437',\n  'S 6 # 6107 6438',\n  'S 3 g 6107 6439',\n  'S 2 e 6107 6440',\n  'S 3 b 6072 6441',\n  'S 3 m 6442 6077',\n  'S 6 s 6444 6443',\n  'S 6 n 6108 6445',\n  'S 4 t 6446 6072',\n  'S 3 e 6072 6447',\n  'S 4 g 6132 6072',\n  'S 6 l 6107 6072',\n  'S 4 r 6072 6448',\n  'S 2 # 6072 6449',\n  'S 3 r 6451 6450',\n  'S 2 # 6072 6452',\n  'S 2 a 6076 6072',\n  'S 3 n 6454 6453',\n  'S 6 r 6069 6107',\n  'S 6 s 6132 6455',\n  'S 5 e 6086 6077',\n  'S 4 d 6072 6086',\n  'S 3 a 6154 6456',\n  'S 6 u 6069 6457',\n  'S 5 n 6069 6458',\n  'S 2 e 6460 6459',\n  'S 5 # 6462 6461',\n  'S 6 # 6072 6463',\n  'S 2 i 6086 6069',\n  'S 5 u 6465 6464',\n  'S 2 p 6072 6466',\n  'S 3 t 6108 6467',\n  'S 2 i 6108 6468',\n  'S 2 a 6069 6469',\n  'S 6 o 6069 6076',\n  'S 3 z 6069 6470',\n  'S 5 t 6472 6471',\n  'S 3 g 6077 6473',\n  'S 2 i 6475 6474',\n  'S 2 s 6086 6476',\n  'S 5 t 6072 6477',\n  'S 6 o 6077 6478',\n  'S 3 t 6479 6107',\n  'S 5 y 6481 6480',\n  'S 6 # 6483 6482',\n  'S 4 m 6077 6484',\n  'S 5 o 6486 6485',\n  'S 6 # 6076 6487',\n  'S 5 r 6489 6488',\n  'S 2 a 6077 6086',\n  'S 4 n 6491 6490',\n  'S 4 s 6493 6492',\n  'S 6 u 6108 6494',\n  'S 6 # 6076 6495',\n  'S 4 n 6497 6496',\n  'S 4 n 6132 6072',\n  'S 4 t 6132 6072',\n  'S 5 # 6076 6072',\n  'S 5 # 6132 6072',\n  'S 2 r 6108 6086',\n  'S 5 i 6499 6498',\n  'S 2 0 6501 6500',\n  'S 6 # 6077 6502',\n  'S 6 # 6077 6503',\n  'S 2 # 6072 6504',\n  'S 5 o 6086 6072',\n  'S 5 k 6506 6505',\n  'S 6 s 6108 6507',\n  'S 5 i 6076 6508',\n  'S 5 h 6509 6076',\n  'S 3 n 6076 6510',\n  'S 2 n 6069 6511',\n  'S 2 s 6107 6512',\n  'S 3 d 6513 6108',\n  'S 5 t 6515 6514',\n  'S 6 e 6107 6077',\n  'S 2 0 6517 6516',\n  'S 4 n 6519 6518',\n  'S 6 d 6072 6520',\n  'S 6 r 6521 6072',\n  'S 4 b 6523 6522',\n  'S 3 e 6525 6524',\n  'S 3 t 6108 6526',\n  'S 2 e 6108 6527',\n  'S 2 o 6077 6072',\n  'S 2 a 6076 6528',\n  'S 2 l 6107 6529',\n  'S 2 u 6107 6072',\n  'S 6 r 6132 6072',\n  'S 5 h 6072 6530',\n  'S 2 e 6531 6069',\n  'S 2 e 6069 6086',\n  'S 5 r 6154 6532',\n  'S 5 # 6069 6533',\n  'S 6 s 6086 6069',\n  'S 2 o 6069 6086',\n  'S 3 w 6072 6534',\n  'S 2 c 6536 6535',\n  'S 6 # 6086 6069',\n  'S 6 y 6072 6537',\n  'S 3 n 6154 6538',\n  'S 2 s 6072 6069',\n  'S 2 o 6069 6539',\n  'S 2 l 6069 6540',\n  'S 3 s 6076 6541',\n  'S 6 z 6076 6542',\n  'S 3 v 6077 6543',\n  'S 3 c 6462 6544',\n  'S 6 a 6086 6069',\n  'S 3 g 6086 6545',\n  'S 3 r 6069 6546',\n  'S 6 t 6107 6547',\n  'S 6 s 6107 6077',\n  'S 5 h 6549 6548',\n  'S 4 n 6550 6108',\n  'S 6 t 6552 6551',\n  'S 4 k 6107 6553',\n  'S 5 o 6072 6554',\n  'S 4 u 6189 6555',\n  'S 6 # 6076 6556',\n  'S 4 s 6077 6557',\n  'S 6 # 6559 6558',\n  'S 6 e 6132 6072',\n  'S 5 t 6122 6560',\n  'S 6 t 6108 6072',\n  'S 2 h 6072 6561',\n  'S 5 t 6108 6562',\n  'S 6 # 6563 6072',\n  'S 5 f 6077 6564',\n  'S 2 f 6072 6565',\n  'S 2 r 6086 6566',\n  'S 5 # 6568 6567',\n  'S 3 p 6077 6569',\n  'S 3 m 6077 6086',\n  'S 6 i 6077 6107',\n  'S 6 l 6107 6570',\n  'S 2 d 6086 6571',\n  'S 6 t 6086 6072',\n  'S 5 t 6573 6572',\n  'S 2 e 6107 6574',\n  'S 6 z 6108 6575',\n  'S 5 s 6107 6576',\n  'S 2 r 6132 6072',\n  'S 3 t 6107 6076',\n  'S 3 r 6578 6577',\n  'S 3 d 6580 6579',\n  'S 2 n 6108 6581',\n  'S 6 # 6076 6582',\n  'S 6 o 6107 6077',\n  'S 4 g 6584 6583',\n  'S 4 n 6077 6585',\n  'S 4 g 6107 6586',\n  'S 3 s 6588 6587',\n  'S 6 s 6072 6589',\n  'S 2 r 6077 6072',\n  'S 3 t 6072 6590',\n  'S 3 f 6072 6591',\n  'S 3 u 6593 6592',\n  'S 4 d 6072 6076',\n  'S 2 a 6108 6594',\n  'S 2 s 6596 6595',\n  'S 3 t 6076 6597',\n  'S 6 s 6599 6598',\n  'S 5 s 6601 6600',\n  'S 6 # 6602 6069',\n  'S 6 s 6154 6603',\n  'S 6 # 6069 6072',\n  'S 5 l 6069 6604',\n  'S 2 a 6606 6605',\n  'S 6 # 6108 6076',\n  'S 3 t 6069 6607',\n  'S 2 b 6072 6608',\n  'S 2 l 6069 6609',\n  'S 2 a 6611 6610',\n  'S 6 h 6613 6612',\n  'S 3 v 6069 6614',\n  'S 3 f 6077 6076',\n  'S 3 v 6072 6069',\n  'S 3 z 6069 6615',\n  'S 6 i 6072 6110',\n  'S 3 h 6077 6616',\n  'S 5 o 6618 6617',\n  'S 4 g 6072 6619',\n  'S 6 # 6072 6077',\n  'S 4 g 6621 6620',\n  'S 4 v 6623 6622',\n  'S 4 l 6624 6076',\n  'S 5 a 6626 6625',\n  'S 5 i 6628 6627',\n  'S 4 k 6107 6629',\n  'S 4 y 6076 6630',\n  'S 5 u 6632 6631',\n  'S 5 s 6077 6076',\n  'S 2 c 6076 6633',\n  'S 4 n 6076 6634',\n  'S 5 s 6072 6077',\n  'S 4 s 6072 6076',\n  'S 5 i 6072 6635',\n  'S 2 b 6132 6636',\n  'S 2 b 6132 6072',\n  'S 5 u 6638 6637',\n  'S 3 e 6077 6639',\n  'S 2 0 6072 6640',\n  'S 2 # 6641 6072',\n  'S 2 # 6643 6642',\n  'S 6 i 6645 6644',\n  'S 2 n 6077 6646',\n  'S 2 r 6107 6647',\n  'S 6 d 6108 6648',\n  'S 5 t 6077 6649',\n  'S 3 h 6107 6650',\n  'S 2 f 6107 6108',\n  'S 2 c 6652 6651',\n  'S 2 a 6108 6107',\n  'S 2 u 6107 6108',\n  'S 5 c 6654 6653',\n  'S 6 n 6656 6655',\n  'S 6 n 6658 6657',\n  'S 4 d 6660 6659',\n  'S 4 l 6662 6661',\n  'S 3 m 6108 6663',\n  'S 2 u 6086 6069',\n  'S 6 r 6072 6077',\n  'S 6 r 6665 6664',\n  'S 6 r 6077 6666',\n  'S 4 t 6668 6667',\n  'S 4 s 6086 6072',\n  'S 3 s 6108 6669',\n  'S 2 n 6108 6670',\n  'S 3 t 6108 6072',\n  'S 2 s 6072 6671',\n  'S 6 # 6072 6672',\n  'S 3 l 6077 6072',\n  'S 3 f 6674 6673',\n  'S 6 # 6675 6072',\n  'S 5 n 6069 6154',\n  'S 6 i 6069 6676',\n  'S 3 l 6072 6069',\n  'S 6 # 6678 6677',\n  'S 3 n 6154 6679',\n  'S 6 t 6069 6680',\n  'S 3 l 6069 6681',\n  'S 2 n 6069 6682',\n  'S 2 t 6069 6683',\n  'S 3 n 6069 6684',\n  'S 6 b 6069 6076',\n  'S 3 p 6069 6076',\n  'S 6 r 6076 6685',\n  'S 3 c 6687 6686',\n  'S 6 i 6077 6688',\n  'S 4 u 6690 6689',\n  'S 6 # 6076 6691',\n  'S 4 s 6693 6692',\n  'S 4 v 6695 6694',\n  'S 6 n 6107 6696',\n  'S 2 c 6697 6108',\n  'S 3 r 6072 6698',\n  'S 3 u 6076 6699',\n  'S 5 l 6701 6700',\n  'S 6 l 6108 6702',\n  'S 5 d 6704 6703',\n  'S 6 n 6706 6705',\n  'S 4 v 6107 6707',\n  'S 6 t 6709 6708',\n  'S 6 e 6077 6710',\n  'S 6 r 6077 6069',\n  'S 4 s 6072 6711',\n  'S 5 y 6108 6712',\n  'S 5 v 6077 6713',\n  'S 4 l 6076 6714',\n  'S 3 e 6716 6715',\n  'S 6 s 6072 6077',\n  'S 3 m 6077 6717',\n  'S 6 c 6072 6718',\n  'S 3 h 6077 6107',\n  'S 2 e 6072 6719',\n  'S 6 d 6132 6720',\n  'S 5 o 6722 6721',\n  'S 5 h 6076 6107',\n  'S 6 s 6723 6077',\n  'S 6 s 6725 6724',\n  'S 6 n 6727 6726',\n  'S 2 s 6729 6728',\n  'S 2 a 6107 6730',\n  'S 3 m 6731 6107',\n  'S 3 t 6108 6107',\n  'S 3 n 6077 6732',\n  'S 6 i 6069 6077',\n  'S 6 d 6734 6733',\n  'S 2 e 6108 6735',\n  'S 2 s 6737 6736',\n  'S 3 l 6108 6738',\n  'S 4 r 6107 6739',\n  'S 6 o 6072 6132',\n  'S 4 c 6596 6740',\n  'S 2 o 6076 6072',\n  'S 3 g 6108 6741',\n  'S 3 l 6743 6742',\n  'S 3 n 6132 6744',\n  'S 6 l 6072 6077',\n  'S 4 s 6746 6745',\n  'S 2 i 6108 6747',\n  'S 3 r 6108 6748',\n  'S 3 v 6108 6749',\n  'S 2 o 6076 6750',\n  'S 2 0 6072 6751',\n  'S 2 t 6753 6752',\n  'S 2 i 6072 6069',\n  'S 3 r 6076 6069',\n  'S 2 l 6754 6069',\n  'S 5 v 6076 6755',\n  'S 5 f 6076 6756',\n  'S 6 # 6069 6076',\n  'S 6 # 6069 6757',\n  'S 6 t 6069 6758',\n  'S 2 e 6069 6759',\n  'S 3 v 6069 6760',\n  'S 3 v 6154 6069',\n  'S 3 p 6072 6076',\n  'S 3 x 6086 6069',\n  'S 6 a 6069 6086',\n  'S 2 m 6107 6761',\n  'S 6 n 6763 6762',\n  'S 6 # 6069 6764',\n  'S 4 k 6107 6765',\n  'S 2 s 6077 6766',\n  'S 3 f 6077 6767',\n  'S 6 s 6769 6768',\n  'S 3 v 6072 6770',\n  'S 3 r 6108 6580',\n  'S 4 n 6108 6072',\n  'S 2 o 6108 6771',\n  'S 2 a 6077 6076',\n  'S 4 g 6773 6772',\n  'S 4 l 6077 6774',\n  'S 6 n 6776 6775',\n  'S 5 u 6778 6777',\n  'S 4 d 6077 6779',\n  'S 6 # 6076 6780',\n  'S 4 s 6077 6781',\n  'S 4 s 6077 6782',\n  'S 6 r 6784 6783',\n  'S 4 l 6132 6077',\n  'S 5 a 6786 6785',\n  'S 2 f 6108 6787',\n  'S 4 t 6076 6788',\n  'S 6 e 6790 6789',\n  'S 2 r 6076 6563',\n  'S 5 y 6072 6086',\n  'S 2 w 6077 6086',\n  'S 2 a 6086 6791',\n  'S 6 l 6107 6792',\n  'S 3 h 6107 6793',\n  'S 3 g 6086 6794',\n  'S 6 l 6796 6795',\n  'S 2 0 6072 6797',\n  'S 3 d 6107 6077',\n  'S 2 i 6107 6798',\n  'S 2 d 6107 6799',\n  'S 2 e 6801 6800',\n  'S 3 d 6108 6072',\n  'S 3 w 6803 6802',\n  'S 3 t 6077 6107',\n  'S 6 b 6077 6804',\n  'S 2 e 6108 6107',\n  'S 5 i 6077 6805',\n  'S 2 w 6072 6806',\n  'S 4 t 6808 6807',\n  'S 2 w 6072 6809',\n  'S 3 r 6077 6107',\n  'S 6 r 6072 6107',\n  'S 2 e 6107 6108',\n  'S 4 k 6072 6810',\n  'S 4 f 6108 6811',\n  'S 3 l 6072 6812',\n  'S 4 p 6072 6813',\n  'S 6 a 6077 6814',\n  'S 4 t 6077 6815',\n  'S 4 g 6107 6072',\n  'S 2 a 6108 6816',\n  'S 2 e 6072 6817',\n  'S 2 o 6108 6509',\n  'S 2 r 6077 6818',\n  'S 3 v 6072 6819',\n  'S 6 a 6107 6820',\n  'S 3 e 6086 6821',\n  'S 5 # 6069 6822',\n  'S 6 # 6824 6823',\n  'S 6 a 6076 6825',\n  'S 2 t 6076 6826',\n  'S 3 p 6076 6827',\n  'S 6 c 6069 6828',\n  'S 2 f 6069 6829',\n  'S 2 p 6069 6830',\n  'S 3 d 6107 6831',\n  'S 4 k 6833 6832',\n  'S 4 z 6072 6834',\n  'S 6 p 6072 6265',\n  'S 6 s 6836 6835',\n  'S 6 o 6108 6837',\n  'S 2 s 6077 6838',\n  'S 4 k 6840 6839',\n  'S 2 o 6108 6076',\n  'S 3 r 6072 6841',\n  'S 2 c 6108 6107',\n  'S 4 s 6842 6077',\n  'S 6 o 6077 6107',\n  'S 6 e 6072 6843',\n  'S 4 s 6077 6844',\n  'S 4 v 6072 6107',\n  'S 3 v 6846 6845',\n  'S 4 l 6108 6847',\n  'S 4 l 6849 6848',\n  'S 4 v 6723 6850',\n  'S 4 v 6723 6851',\n  'S 3 s 6853 6852',\n  'S 3 l 6077 6854',\n  'S 3 b 6132 6855',\n  'S 5 n 6857 6856',\n  'S 3 g 6077 6858',\n  'S 2 v 6086 6859',\n  'S 2 n 6076 6860',\n  'S 5 c 6077 6861',\n  'S 5 t 6077 6086',\n  'S 3 h 6086 6077',\n  'S 2 # 6077 6862',\n  'S 2 0 6107 6072',\n  'S 3 m 6864 6863',\n  'S 5 h 6866 6865',\n  'S 2 r 6077 6867',\n  'S 3 t 6069 6868',\n  'S 3 r 6077 6869',\n  'S 2 n 6107 6077',\n  'S 6 a 6077 6870',\n  'S 3 n 6108 6077',\n  'S 2 l 6107 6871',\n  'S 5 k 6872 6107',\n  'S 2 l 6107 6873',\n  'S 3 v 6077 6874',\n  'S 6 r 6876 6875',\n  'S 4 s 6072 6877',\n  'S 2 i 6108 6878',\n  'S 3 r 6880 6879',\n  'S 6 n 6077 6881',\n  'S 4 s 6072 6882',\n  'S 3 b 6072 6883',\n  'S 4 l 6885 6884',\n  'S 4 c 6072 6886',\n  'S 3 m 6077 6853',\n  'S 3 m 6072 6887',\n  'S 3 s 6072 6509',\n  'S 2 i 6077 6108',\n  'S 3 b 6072 6888',\n  'S 6 t 6077 6889',\n  'S 3 h 6069 6890',\n  'S 5 n 6069 6891',\n  'S 6 t 6154 6069',\n  'S 5 m 6154 6069',\n  'S 5 b 6076 6892',\n  'S 2 s 6076 6675',\n  'S 2 o 6069 6076',\n  'S 6 n 6069 6679',\n  'S 3 r 6072 6069',\n  'S 3 d 6069 6893',\n  'S 3 n 6107 6894',\n  'S 4 g 6896 6895',\n  'S 5 i 6076 6107',\n  'S 4 m 6077 6897',\n  'S 4 g 6899 6898',\n  'S 4 t 6076 6900',\n  'S 6 e 6902 6901',\n  'S 6 # 6904 6903',\n  'S 6 l 6906 6905',\n  'S 6 w 6069 6907',\n  'S 3 n 6107 6908',\n  'S 6 i 6909 6077',\n  'S 6 a 6077 6072',\n  'S 6 r 6077 6072',\n  'S 5 r 6911 6910',\n  'S 4 b 6072 6912',\n  'S 6 s 6914 6913',\n  'S 3 f 6072 6915',\n  'S 3 w 6072 6077',\n  'S 4 p 6069 6077',\n  'S 4 m 6916 6072',\n  'S 6 r 6918 6917',\n  'S 4 m 6077 6072',\n  'S 3 d 6920 6919',\n  'S 4 l 6108 6077',\n  'S 3 d 6922 6921',\n  'S 3 s 6924 6923',\n  'S 3 l 6077 6925',\n  'S 6 h 6086 6926',\n  'S 5 a 6076 6927',\n  'S 5 s 6077 6928',\n  'S 6 # 6077 6929',\n  'S 3 v 6077 6107',\n  'S 6 b 6107 6077',\n  'S 6 e 6931 6930',\n  'S 2 c 6933 6932',\n  'S 3 t 6077 6934',\n  'S 3 n 6925 6935',\n  'S 3 t 6077 6936',\n  'S 3 l 6077 6937',\n  'S 2 r 6107 6938',\n  'S 2 d 6107 6939',\n  'S 6 n 6940 6731',\n  'S 5 a 6942 6941',\n  'S 4 r 6944 6943',\n  'S 4 k 6107 6945',\n  'S 2 r 6108 6946',\n  'S 2 e 6108 6072',\n  'S 4 d 6948 6947',\n  'S 2 b 6077 6072',\n  'S 4 c 6072 6949',\n  'S 2 i 6950 6072',\n  'S 3 f 6072 6951',\n  'S 3 w 6072 6952',\n  'S 3 s 6072 6953',\n  'S 4 f 6072 6954',\n  'S 3 v 6072 6955',\n  'S 3 d 6957 6956',\n  'S 2 d 6072 6958',\n  'S 5 # 6069 6959',\n  'S 6 # 6072 6960',\n  'S 5 f 6076 6961',\n  'S 2 e 6069 6962',\n  'S 6 l 6107 6963',\n  'S 5 d 6965 6964',\n  'S 5 # 6967 6966',\n  'S 4 g 6077 6968',\n  'S 4 v 6970 6969',\n  'S 2 n 6077 6971',\n  'S 3 h 6108 6972',\n  'S 3 r 6077 6973',\n  'S 3 r 6077 6108',\n  'S 3 r 6975 6974',\n  'S 3 k 6107 6976',\n  'S 6 b 6978 6977',\n  'S 3 r 6108 6979',\n  'S 3 r 6108 6107',\n  'S 6 r 6069 6980',\n  'S 5 h 6107 6077',\n  'S 5 l 6982 6981',\n  'S 4 s 6077 6983',\n  'S 6 a 6985 6984',\n  'S 3 s 6077 6986',\n  'S 4 s 6077 6072',\n  'S 3 m 6988 6987',\n  'S 3 d 6108 6077',\n  'S 3 b 6108 6989',\n  'S 4 m 6132 6990',\n  'S 3 m 6992 6991',\n  'S 4 m 6077 6108',\n  'S 5 l 6107 6077',\n  'S 6 t 6077 6107',\n  'S 6 i 6077 6993',\n  'S 6 a 6077 6994',\n  'S 6 l 6069 6107',\n  'S 2 h 6072 6995',\n  'S 4 l 6072 6086',\n  'S 5 t 6077 6072',\n  'S 2 a 6086 6077',\n  'S 5 y 6108 6996',\n  'S 3 t 6108 6997',\n  'S 6 o 6108 6998',\n  'S 6 e 6069 6077',\n  'S 3 d 6077 6108',\n  'S 2 p 6108 6999',\n  'S 2 t 6077 7000',\n  'S 3 f 6077 7001',\n  'S 2 h 6909 6107',\n  'S 2 t 6077 6107',\n  'S 3 f 6107 7002',\n  'S 6 n 6077 7003',\n  'S 3 r 6107 7004',\n  'S 6 k 7006 7005',\n  'S 3 d 6086 7007',\n  'S 4 t 7009 7008',\n  'S 3 t 6108 7010',\n  'S 2 l 6107 6108',\n  'S 2 i 6132 6108',\n  'S 4 t 6072 6589',\n  'S 3 c 6072 6108',\n  'S 2 r 6076 7011',\n  'S 3 s 7013 7012',\n  'S 6 y 6072 7014',\n  'S 4 k 6072 6988',\n  'S 3 w 6072 7015',\n  'S 2 l 6072 7016',\n  'S 2 n 6072 6076',\n  'S 6 r 7018 7017',\n  'S 2 b 6069 7019',\n  'S 6 s 6072 6069',\n  'S 2 y 6076 7020',\n  'S 2 o 6069 7021',\n  'S 2 n 6077 7022',\n  'S 5 i 7024 7023',\n  'S 6 a 7026 7025',\n  'S 5 n 7028 7027',\n  'S 2 e 6107 7029',\n  'S 5 i 7031 7030',\n  'S 6 r 7033 7032',\n  'S 2 r 6072 6077',\n  'S 2 g 6107 7034',\n  'S 4 n 6076 6108',\n  'S 2 e 6108 6077',\n  'S 6 m 6107 7035',\n  'S 6 e 6107 7036',\n  'S 2 a 6107 7037',\n  'S 6 n 7039 7038',\n  'S 2 s 6086 7040',\n  'S 2 s 6108 7041',\n  'S 2 l 6107 6077',\n  'S 4 k 6442 7042',\n  'S 4 l 6077 7043',\n  'S 3 c 6077 7044',\n  'S 5 c 7045 6077',\n  'S 4 n 6077 7046',\n  'S 6 l 6107 7047',\n  'S 6 o 6077 7048',\n  'S 4 n 6072 6077',\n  'S 3 d 6988 7049',\n  'S 3 m 6072 6108',\n  'S 6 l 7051 7050',\n  'S 6 s 6072 7052',\n  'S 3 m 6077 6069',\n  'S 6 i 6107 6072',\n  'S 5 z 6072 7053',\n  'S 3 m 6076 7054',\n  'S 2 o 6108 6107',\n  'S 3 m 6107 7055',\n  'S 6 n 7056 6107',\n  'S 2 q 6077 7057',\n  'S 6 p 6077 7058',\n  'S 2 e 6107 7059',\n  'S 6 r 6072 7060',\n  'S 6 r 6107 7061',\n  'S 6 z 6076 7062',\n  'S 4 c 6107 6077',\n  'S 6 m 6072 7063',\n  'S 2 a 6108 7064',\n  'S 3 l 7066 7065',\n  'S 2 a 6108 7067',\n  'S 3 d 6069 7068',\n  'S 4 s 6077 7069',\n  'S 4 d 6072 6077',\n  'S 3 f 6072 6916',\n  'S 2 e 6132 6072',\n  'S 3 f 6072 7070',\n  'S 6 n 7072 7071',\n  'S 2 # 6077 7073',\n  'S 2 0 7074 6069',\n  'S 5 c 6076 7075',\n  'S 2 i 6069 7076',\n  'S 2 a 6107 7077',\n  'S 4 x 6107 7078',\n  'S 6 # 6076 7079',\n  'S 2 s 6077 7080',\n  'S 2 r 6108 7081',\n  'S 5 r 6108 7082',\n  'S 6 o 7084 7083',\n  'S 2 n 6107 7085',\n  'S 5 u 6108 6077',\n  'S 3 u 7087 7086',\n  'S 4 s 7089 7088',\n  'S 4 s 6072 7090',\n  'S 6 t 6108 6907',\n  'S 3 d 6107 7091',\n  'S 6 m 6077 6107',\n  'S 2 o 6107 7092',\n  'S 2 l 7094 7093',\n  'S 2 a 7096 7095',\n  'S 4 t 6108 7097',\n  'S 2 a 6108 7098',\n  'S 3 d 7100 7099',\n  'S 6 e 7102 7101',\n  'S 3 m 6077 7103',\n  'S 6 e 6077 6069',\n  'S 5 l 6069 6077',\n  'S 4 q 6501 7104',\n  'S 6 # 6072 7105',\n  'S 3 p 6072 7106',\n  'S 3 f 7108 7107',\n  'S 3 v 6072 7109',\n  'S 4 h 6108 7110',\n  'S 4 d 6072 7111',\n  'S 3 r 6107 6773',\n  'S 2 e 6107 7112',\n  'S 2 i 6108 6107',\n  'S 3 l 6077 7113',\n  'S 6 o 6077 7114',\n  'S 3 l 6107 6108',\n  'S 3 d 6107 7115',\n  'S 3 p 6107 6069',\n  'S 6 m 7117 7116',\n  'S 2 e 6072 6107',\n  'S 3 r 6072 7118',\n  'S 3 u 6086 6132',\n  'S 2 l 6077 6076',\n  'S 4 d 6072 7119',\n  'S 3 h 6069 7120',\n  'S 6 l 7122 7121',\n  'S 2 e 6076 7123',\n  'S 2 # 6072 7124',\n  'S 3 g 6077 7125',\n  'S 2 e 6077 7126',\n  'S 5 n 6069 7127',\n  'S 3 p 6076 7128',\n  'S 2 n 6069 7129',\n  'S 3 t 6107 7130',\n  'S 4 n 7132 7131',\n  'S 6 e 7134 7133',\n  'S 3 u 6077 7135',\n  'S 3 l 6076 6077',\n  'S 5 s 7137 7136',\n  'S 6 a 6161 7138',\n  'S 3 s 6069 6077',\n  'S 2 r 6107 7139',\n  'S 4 v 7141 7140',\n  'S 2 g 6072 7142',\n  'S 6 u 6108 7143',\n  'S 2 p 6077 6108',\n  'S 4 m 6076 6108',\n  'S 6 e 6107 7144',\n  'S 2 i 6107 7145',\n  'S 4 y 6108 7146',\n  'S 3 l 6108 6069',\n  'S 3 r 6108 7147',\n  'S 4 t 6108 6069',\n  'S 3 m 6108 6072',\n  'S 3 m 6108 7148',\n  'S 4 z 7150 7149',\n  'S 4 f 7151 6077',\n  'S 3 d 7152 6077',\n  'S 4 n 6077 7153',\n  'S 6 i 7155 7154',\n  'S 4 s 6077 7156',\n  'S 6 l 6077 7157',\n  'S 3 k 7159 7158',\n  'S 3 c 6077 7160',\n  'S 6 n 6108 6077',\n  'S 4 v 6072 7161',\n  'S 4 l 6069 6077',\n  'S 5 i 6076 7162',\n  'S 6 s 6107 7163',\n  'S 6 i 6077 7164',\n  'S 6 t 6077 6072',\n  'S 3 p 6107 6077',\n  'S 6 e 6108 7165',\n  'S 4 d 6108 7166',\n  'S 4 s 6072 7167',\n  'S 2 p 6072 7168',\n  'S 2 a 6069 7169',\n  'S 3 v 6077 7170',\n  'S 3 f 6108 6077',\n  'S 3 m 6108 7171',\n  'S 6 d 6072 6077',\n  'S 3 r 6077 6072',\n  'S 3 r 6072 6077',\n  'S 6 o 6069 6072',\n  'S 2 n 6076 7172',\n  'S 2 s 7173 6069',\n  'S 2 l 6107 7174',\n  'S 3 u 7176 7175',\n  'S 5 k 6077 7177',\n  'S 6 z 6108 7178',\n  'S 4 v 6107 7179',\n  'S 4 d 6077 7180',\n  'S 5 m 6077 7181',\n  'S 6 # 6077 6107',\n  'S 2 n 6077 7182',\n  'S 2 i 6107 7183',\n  'S 2 c 6072 7184',\n  'S 3 g 6077 6072',\n  'S 4 s 6086 6108',\n  'S 4 m 7186 7185',\n  'S 6 i 6107 7187',\n  'S 3 n 6077 7188',\n  'S 2 c 7190 7189',\n  'S 2 n 6108 7191',\n  'S 3 g 6108 7192',\n  'S 5 h 7194 7193',\n  'S 3 p 6069 6077',\n  'S 6 u 6108 6077',\n  'S 4 s 6077 6108',\n  'S 4 s 6077 7195',\n  'S 6 a 6132 7196',\n  'S 4 b 6072 6077',\n  'S 6 r 6077 7197',\n  'S 6 a 6077 7198',\n  'S 6 n 6077 7199',\n  'S 4 l 6077 6108',\n  'S 4 t 7201 7200',\n  'S 3 f 6072 6077',\n  'S 5 o 6108 7202',\n  'S 2 o 6107 6077',\n  'S 2 k 6077 7203',\n  'S 2 a 6108 7204',\n  'S 4 c 6108 6072',\n  'S 2 s 6072 7205',\n  'S 4 n 6072 7206',\n  'S 3 p 6069 7207',\n  'S 3 p 6077 7208',\n  'S 3 u 6072 7209',\n  'S 2 m 6076 7210',\n  'S 3 h 6069 6072',\n  'S 3 v 6107 7211',\n  'S 5 m 7213 7212',\n  'S 2 q 7215 7214',\n  'S 6 k 6077 7216',\n  'S 6 o 7218 7217',\n  'S 4 f 6108 7219',\n  'S 2 a 6077 7220',\n  'S 6 b 6108 7221',\n  'S 3 s 6072 7222',\n  'S 2 l 6107 7223',\n  'S 4 f 6069 7224',\n  'S 3 u 7226 7225',\n  'S 6 t 6069 6108',\n  'S 3 l 6077 6107',\n  'S 3 t 6077 7227',\n  'S 3 l 6108 7228',\n  'S 3 l 6077 6108',\n  'S 2 e 6108 7229',\n  'S 3 n 6108 7230',\n  'S 5 y 6550 7231',\n  'S 3 n 6069 7232',\n  'S 3 t 6072 7233',\n  'S 4 t 6072 7234',\n  'S 6 c 6108 6077',\n  'S 3 k 6077 7235',\n  'S 6 t 6077 7236',\n  'S 4 j 6072 7237',\n  'S 3 t 6072 6069',\n  'S 6 n 6072 7238',\n  'S 2 c 6077 7239',\n  'S 4 n 7241 7240',\n  'S 3 w 6072 7242',\n  'S 3 f 6072 7243',\n  'S 3 r 6076 7201',\n  'S 4 m 6077 7244',\n  'S 2 c 6076 7245',\n  'S 3 h 6076 7246',\n  'S 2 r 6107 7247',\n  'S 3 h 7249 7248',\n  'S 6 a 7250 6077',\n  'S 4 t 7252 7251',\n  'S 5 t 6077 7253',\n  'S 2 u 7255 7254',\n  'S 6 t 7257 7256',\n  'S 4 t 6077 7258',\n  'S 4 t 6108 7259',\n  'S 3 w 6077 7260',\n  'S 6 o 6077 7261',\n  'S 3 l 6072 6077',\n  'S 2 h 6107 7262',\n  'S 2 w 6072 7263',\n  'S 3 h 7265 7264',\n  'S 4 n 6108 6086',\n  'S 2 e 6077 7266',\n  'S 4 s 6077 7267',\n  'S 4 d 6108 7268',\n  'S 4 p 6108 7269',\n  'S 6 a 6077 7270',\n  'S 4 s 6077 7271',\n  'S 3 r 6072 7272',\n  'S 4 b 6108 6077',\n  'S 3 h 6077 7273',\n  'S 3 w 6077 7274',\n  'S 3 w 6072 7275',\n  'S 5 a 6072 7276',\n  'S 2 s 6077 6442',\n  'S 2 i 7096 7277',\n  'S 6 l 7279 7278',\n  'S 4 c 6108 7280',\n  'S 3 h 6108 7166',\n  'S 3 c 6077 7281',\n  'S 2 r 6076 7282',\n  'S 2 h 6076 7283',\n  'S 2 p 6107 7284',\n  'S 4 q 7286 7285',\n  'S 5 u 6108 7287',\n  'S 2 a 6108 6077',\n  'S 2 o 6069 7288',\n  'S 2 c 6108 6086',\n  'S 4 p 6077 7289',\n  'S 3 u 7291 7290',\n  'S 3 n 6077 7292',\n  'S 6 a 7294 7293',\n  'S 3 b 6077 7295',\n  'S 4 s 6077 7296',\n  'S 3 c 6077 7297',\n  'S 6 # 6072 7298',\n  'S 3 f 6077 7299',\n  'S 3 s 6107 7300',\n  'S 4 s 6072 7301',\n  'S 2 t 6072 7302',\n  'S 4 z 6072 6077',\n  'S 3 r 7303 6107',\n  'S 3 m 6108 7304',\n  'S 2 p 6108 7305',\n  'S 2 i 6072 7306',\n  'S 6 o 6077 7307',\n  'S 3 s 6072 7308',\n  'S 3 s 6072 7155',\n  'S 6 b 6077 7309',\n  'S 4 n 6069 7310',\n  'S 3 s 6072 7311',\n  'S 6 a 6072 7312',\n  'S 3 u 7314 7313',\n  'S 6 t 6108 7315',\n  'S 3 t 6108 6069',\n  'S 3 u 6072 7316',\n  'S 4 n 7318 7317',\n  'S 3 s 6076 7319',\n  'S 6 d 7321 7320',\n  'S 3 f 6077 6107',\n  'S 3 g 7323 7322',\n  'S 6 i 6077 6076',\n  'S 4 d 6108 7324',\n  'S 5 # 6108 7325',\n  'S 5 l 6077 7326',\n  'S 5 c 7328 7327',\n  'S 2 q 6077 7329',\n  'S 5 # 7330 6108',\n  'S 4 v 7332 7331',\n  'S 4 f 6108 7333',\n  'S 3 t 6077 7334',\n  'S 2 n 6069 7335',\n  'S 3 t 6108 6855',\n  'S 6 s 6072 7336',\n  'S 5 u 6076 6077',\n  'S 3 t 6107 7337',\n  'S 3 f 6072 7338',\n  'S 2 o 7340 7339',\n  'S 2 u 6107 6077',\n  'S 3 n 6108 7341',\n  'S 2 u 6108 7342',\n  'S 4 t 6072 6108',\n  'S 5 v 6077 7343',\n  'S 6 d 6108 6077',\n  'S 3 l 6077 7344',\n  'S 3 l 6077 7345',\n  'S 6 n 6108 7346',\n  'S 4 f 6072 7347',\n  'S 2 p 6072 7348',\n  'S 2 g 6072 6069',\n  'S 2 r 6108 6077',\n  'S 4 b 7350 7349',\n  'S 3 h 6072 7351',\n  'S 6 t 7353 7352',\n  'S 2 i 6108 7354',\n  'S 3 r 6076 7355',\n  'S 2 l 6076 7356',\n  'S 6 i 7358 7357',\n  'S 2 c 6077 7359',\n  'S 2 w 6077 7360',\n  'S 2 g 6077 7361',\n  'S 5 # 6077 7362',\n  'S 2 a 7364 7363',\n  'S 2 i 6108 7365',\n  'S 5 s 6108 7366',\n  'S 3 b 6077 7367',\n  'S 4 b 6108 7368',\n  'S 3 t 6107 7369',\n  'S 3 b 6076 7370',\n  'S 2 a 6077 7371',\n  'S 2 s 6077 7372',\n  'S 3 m 6072 7373',\n  'S 2 d 6107 7374',\n  'S 2 a 6108 7375',\n  'S 4 b 6108 7376',\n  'S 4 l 6072 6108',\n  'S 3 r 7378 7377',\n  'S 2 i 6108 7379',\n  'S 3 m 7380 6077',\n  'S 3 v 6077 7381',\n  'S 6 f 6077 7382',\n  'S 3 r 6072 6108',\n  'S 4 t 7384 7383',\n  'S 3 m 6069 7385',\n  'S 3 h 6077 7386',\n  'S 2 e 6077 6108',\n  'S 4 d 7388 7387',\n  'S 3 m 6072 7161',\n  'S 3 n 6072 6077',\n  'S 3 p 6072 7389',\n  'S 6 s 6076 6069',\n  'S 2 d 6076 7390',\n  'S 2 i 7392 7391',\n  'S 4 z 6076 7393',\n  'S 6 i 6077 7394',\n  'S 4 s 7395 6077',\n  'S 5 s 6108 6790',\n  'S 4 t 6108 6077',\n  'S 2 p 6077 7396',\n  'S 3 t 6108 7397',\n  'S 2 e 6077 7398',\n  'S 5 # 6108 6077',\n  'S 3 l 6077 7399',\n  'S 4 f 7401 7400',\n  'S 6 l 6077 7402',\n  'S 3 u 6076 7403',\n  'S 4 v 6077 7404',\n  'S 2 o 6077 7405',\n  'S 2 e 6077 7406',\n  'S 3 w 6077 6107',\n  'S 2 i 6108 7407',\n  'S 4 p 6077 7408',\n  'S 3 t 6108 7409',\n  'S 6 r 6108 7410',\n  'S 3 t 6108 7411',\n  'S 4 t 7412 6077',\n  'S 6 i 6072 6077',\n  'S 6 s 6108 6077',\n  'S 4 l 6072 6076',\n  'S 5 h 6076 6072',\n  'S 4 k 6072 7413',\n  'S 4 f 7415 7414',\n  'S 4 c 7416 6077',\n  'S 3 r 6108 6077',\n  'S 3 e 6076 7417',\n  'S 2 g 6076 7418',\n  'S 2 a 7420 7419',\n  'S 6 a 7422 7421',\n  'S 5 t 6077 7423',\n  'S 2 r 7424 6108',\n  'S 2 t 6077 7425',\n  'S 3 x 6108 7426',\n  'S 6 o 6108 7427',\n  'S 6 i 6077 7428',\n  'S 3 p 7429 6077',\n  'S 6 v 7431 7430',\n  'S 2 n 6077 7432',\n  'S 3 d 6107 6108',\n  'S 2 i 6077 7433',\n  'S 2 q 6108 7434',\n  'S 2 e 6076 7435',\n  'S 6 i 6072 7436',\n  'S 2 l 6108 7437',\n  'S 6 l 6108 7438',\n  'S 2 u 6069 7439',\n  'S 6 c 6077 6108',\n  'S 4 n 6108 7440',\n  'S 6 u 6069 6077',\n  'S 2 n 6108 7441',\n  'S 2 n 6077 7442',\n  'S 2 o 6077 6108',\n  'S 3 d 6077 6072',\n  'S 2 t 6072 7443',\n  'S 2 t 6076 7444',\n  'S 6 e 7446 7445',\n  'S 5 t 7448 7447',\n  'S 5 c 6077 7449',\n  'S 4 t 6107 7450',\n  'S 3 c 7452 7451',\n  'S 5 l 6077 6108',\n  'S 2 c 6077 7089',\n  'S 6 o 7454 7453',\n  'S 3 r 6077 7455',\n  'S 6 h 6077 7456',\n  'P ae1',\n  'S 6 s 7458 7457',\n  'S 4 t 6108 6072',\n  'S 6 c 7459 6108',\n  'S 3 d 6076 6077',\n  'S 3 m 6077 7460',\n  'S 4 l 6077 6076',\n  'S 3 l 7462 7461',\n  'S 3 d 6108 7463',\n  'S 4 n 7465 7464',\n  'S 6 v 6108 7466',\n  'S 3 n 6108 7467',\n  'S 4 t 7469 7468',\n  'S 4 m 6077 7470',\n  'S 2 p 6076 7471',\n  'S 2 f 6069 6076',\n  'S 5 z 7473 7472',\n  'S 4 b 7475 7474',\n  'S 4 s 7477 7476',\n  'S 3 t 6077 7478',\n  'S 5 t 7480 7479',\n  'S 4 d 6077 7159',\n  'S 2 l 7452 7481',\n  'S 4 p 6108 6077',\n  'S 2 g 6077 7482',\n  'S 2 e 6108 7483',\n  'S 3 m 6077 7484',\n  'S 6 t 6077 7485',\n  'S 4 t 7487 7486',\n  'S 4 t 7489 7488',\n  'S 3 c 7491 7490',\n  'S 4 m 6077 7492',\n  'S 2 g 6072 7493',\n  'S 2 b 6072 6077',\n  'S 2 r 6108 7494',\n  'S 6 m 6077 7495',\n  'S 6 i 6108 7496',\n  'S 6 d 6077 7497',\n  'S 3 l 6108 7096',\n  'S 6 a 6108 7498',\n  'S 6 c 6108 7499',\n  'S 4 p 6108 7500',\n  'S 2 n 6076 6072',\n  'S 5 u 7502 7501',\n  'S 6 o 6076 6077',\n  'S 3 t 7504 7503',\n  'S 5 l 6108 6077',\n  'S 5 # 7506 7505',\n  'S 5 # 7508 7507',\n  'S 6 s 6108 7509',\n  'S 4 s 7511 7510',\n  'S 3 n 6108 7512',\n  'S 4 t 7514 7513',\n  'S 2 e 7516 7515',\n  'S 5 s 7190 6077',\n  'S 3 b 6077 6916',\n  'S 3 r 6077 7517',\n  'S 4 h 6069 7518',\n  'S 2 e 6077 7410',\n  'S 4 n 7520 7519',\n  'S 2 e 6076 6072',\n  'S 2 g 6077 6108',\n  'S 2 a 6077 6108',\n  'S 4 p 6077 7521',\n  'S 3 r 6077 7522',\n  'S 4 k 6072 7523',\n  'S 2 a 6108 7524',\n  'S 6 v 6108 7250',\n  'S 3 v 6077 7525',\n  'S 2 o 6076 7526',\n  'S 2 s 6072 6108',\n  'S 2 r 6072 7527',\n  'S 2 o 7529 7528',\n  'S 4 t 6108 7530',\n  'S 3 v 6077 7531',\n  'S 2 s 6077 7532',\n  'S 4 b 6108 7533',\n  'S 4 d 6108 7534',\n  'S 3 r 7536 7535',\n  'S 3 x 6108 6077',\n  'S 3 v 6077 7537',\n  'S 6 e 6108 7538',\n  'S 3 n 6069 6108',\n  'S 3 v 6077 6108',\n  'S 3 m 6077 7539',\n  'S 5 r 6076 6077',\n  'S 3 l 6077 7540',\n  'S 3 m 6077 7541',\n  'S 2 n 6077 6108',\n  'S 3 r 6077 7542',\n  'S 4 l 6108 7543',\n  'S 2 d 6077 7544',\n  'S 3 l 6108 7545',\n  'S 2 n 6077 7546',\n  'S 3 l 6072 7547',\n  'S 3 p 6108 7548',\n  'S 2 r 6108 7549',\n  'S 4 s 6077 7550',\n  'S 2 l 6108 7551',\n  'S 6 h 7553 7552',\n  'S 5 t 7555 7554',\n  'S 4 f 6108 7556',\n  'S 5 l 7558 7557',\n  'S 4 t 6072 7559',\n  'S 4 d 6108 7560',\n  'S 4 l 6108 7561',\n  'S 3 t 6108 7562',\n  'S 5 s 6077 6108',\n  'S 3 r 7563 6108',\n  'S 4 b 6108 7564',\n  'S 4 s 7565 6077',\n  'S 3 k 7567 7566',\n  'S 6 u 6077 7568',\n  'S 4 d 6077 7569',\n  'S 4 m 6108 6069',\n  'S 3 f 6077 6818',\n  'S 2 e 7122 6077',\n  'S 6 r 6077 7570',\n  'S 2 o 6108 7571',\n  'S 6 n 6108 7572',\n  'S 4 n 6077 7573',\n  'S 2 s 6077 7574',\n  'S 3 l 6072 7575',\n  'S 5 r 7577 7576',\n  'S 5 c 6077 7536',\n  'S 3 s 6108 7578',\n  'S 4 s 6108 6077',\n  'S 6 s 6108 7579',\n  'S 5 r 6108 7580',\n  'S 4 l 6077 7581',\n  'S 4 l 6077 7582',\n  'S 6 d 6108 7583',\n  'S 4 t 6108 6076',\n  'S 6 a 6077 6107',\n  'S 6 o 6077 6108',\n  'S 5 s 6108 7584',\n  'S 2 c 6077 7585',\n  'S 5 # 7587 7586',\n  'S 2 c 7366 6077',\n  'S 3 d 6077 7588',\n  'S 6 l 7590 7589',\n  'S 6 e 6077 6072',\n  'S 3 n 6072 7591',\n  'S 3 t 6069 7592',\n  'S 2 s 6108 7593',\n  'S 3 r 7595 7594',\n  'S 4 n 6077 6072',\n  'S 2 e 7597 7596',\n  'S 6 o 7598 6108',\n  'S 4 d 6108 7599',\n  'S 2 t 6077 7600',\n  'S 2 l 6108 7601',\n  'S 3 r 7013 7602',\n  'S 5 l 6108 6069',\n  'S 3 c 6108 7603',\n  'S 6 # 6077 7604',\n  'S 5 k 6077 6902',\n  'S 5 f 6108 7605',\n  'S 3 t 7607 7606',\n  'S 3 n 6077 7608',\n  'S 6 b 6077 7609',\n  'S 3 s 6077 6069',\n  'S 4 l 6072 7610',\n  'S 3 r 6108 7611',\n  'S 3 h 6077 6108',\n  'S 2 l 6108 7612',\n  'S 4 c 6108 7613',\n  'S 4 d 7615 7614',\n  'S 3 l 7617 7616',\n  'S 4 p 6077 6108',\n  'S 5 c 6108 7618',\n  'S 2 s 6077 6108',\n  'S 2 u 6108 7619',\n  'S 4 p 6108 6132',\n  'S 4 t 7621 7620',\n  'S 5 p 6077 6108',\n  'S 6 e 6077 7622',\n  'S 3 d 6077 7623',\n  'S 2 t 6077 7624',\n  'S 3 l 6077 7625',\n  'S 3 h 6077 7626',\n  'S 3 c 6072 7627',\n  'S 6 w 6077 6069',\n  'S 3 h 6108 7628',\n  'S 6 t 6108 6077',\n  'S 4 s 7630 7629',\n  'S 5 t 6077 7631',\n  'S 6 r 6108 7632',\n  'S 4 s 7633 6077',\n  'S 3 f 6077 7634',\n  'S 4 m 6077 7635',\n  'S 3 x 6108 7636',\n  'S 5 c 6077 7637',\n  'S 5 s 6077 7638',\n  'S 3 p 6077 7639',\n  'S 2 s 6077 7517',\n  'S 6 e 6108 6077',\n  'S 4 l 7410 7640',\n  'S 3 r 6072 7641',\n  'S 2 e 6108 7166',\n  'S 3 s 7643 7642',\n  'S 3 r 7645 7644',\n  'S 3 b 6077 7646',\n  'S 5 # 7648 7647',\n  'S 6 # 6108 7649',\n  'S 3 t 6077 7650',\n  'S 2 o 7652 7651',\n  'S 6 # 7475 7653',\n  'S 5 u 6077 7654',\n  'S 5 n 6077 7655',\n  'S 2 i 6902 7656',\n  'S 2 n 6077 7657',\n  'S 4 d 6108 6072',\n  'S 2 r 7659 7658',\n  'S 2 r 6077 6108',\n  'S 5 # 7661 7660',\n  'S 2 h 6077 7662',\n  'S 2 r 6108 7663',\n  'S 3 p 6077 7664',\n  'S 4 l 6108 7665',\n  'S 5 # 6077 6108',\n  'S 3 l 7555 7666',\n  'S 2 r 7388 7667',\n  'S 5 t 6077 6108',\n  'S 3 m 6077 7668',\n  'S 5 z 6077 6108',\n  'S 3 s 6077 7669',\n  'S 2 y 6108 7670',\n  'S 3 l 6077 7671',\n  'S 2 c 6077 7672',\n  'S 3 r 7652 7673',\n  'S 3 t 7675 7674',\n  'S 3 b 6077 7676',\n  'S 5 c 6076 6077',\n  'S 2 u 6108 7677',\n  'S 3 d 7563 7678',\n  'S 3 s 6108 7152',\n  'S 3 d 6077 7679',\n  'S 3 n 7555 6077',\n  'S 6 l 6077 7159',\n  'S 3 c 6077 7680',\n  'S 2 r 6077 7681',\n  'S 6 c 6077 7682',\n  'S 2 u 7684 7683',\n  'S 3 t 6076 7685',\n  'S 3 n 6108 7686',\n  'S 6 # 6108 7687',\n  'S 2 l 6077 7688',\n  'S 2 g 6077 7600',\n  'S 3 n 6108 7689',\n  'S 3 m 6108 7690',\n  'S 2 n 6077 7691',\n  'S 2 l 6077 7692',\n  'S 3 m 6077 6108',\n  'S 2 l 7452 7693',\n  'S 5 # 7695 7694',\n  'S 3 n 6108 7696',\n  'S 6 o 7698 7697',\n  'S 6 s 6108 6069',\n  'S 2 y 6108 7699',\n  'S 5 t 7701 7700',\n  'S 4 t 6077 7702',\n  'S 6 a 6108 6077',\n  'S 3 b 7704 7703',\n  'S 4 l 7706 7705',\n  'S 6 # 6108 6077',\n  'S 4 t 6077 6108',\n  'S 4 t 7707 6077',\n  'S 3 w 6077 7708',\n  'S 5 c 6077 6108',\n  'S 2 r 6077 7709',\n  'S 3 r 7424 7710',\n  'S 3 t 6108 7711',\n  'S 3 b 6108 6077',\n  'S 3 n 6077 7712',\n  'S 2 o 6108 7713',\n  'S 3 t 7714 6077',\n  'S 3 c 7716 7715',\n  'S 3 m 6108 6077',\n  'S 3 s 6077 7717',\n  'S 3 d 6077 7718',\n  'S 6 a 6108 7719',\n  'S 3 s 6077 7720',\n  'S 2 n 7721 6077',\n  'S 2 b 6108 6077',\n  'S 2 n 6108 6077',\n  'S 3 k 6077 7722',\n  'S 2 s 6108 7424',\n  'S 3 k 6077 7723',\n  'S 3 t 7725 7724',\n  'S 3 v 6108 6077',\n  'S 3 x 6077 7726',\n  'S 3 g 6077 6108',\n  'S 2 b 6108 7727',\n  'S 3 p 6077 7728',\n  'S 2 u 6077 7729',\n  'S 2 n 6077 7730',\n  'S 4 s 6902 6077',\n  'S 5 l 7732 7731',\n  'S 6 s 6108 7733',\n  'S 3 n 6077 7734',\n  'S 2 t 6077 6108',\n  'S 3 t 6077 7735',\n  'S 3 b 6077 7736',\n  'S 3 l 6077 7737',\n  'S 3 s 6077 7190',\n  'S 5 t 6108 6077',\n  'S 2 s 7738 6077',\n  'S 3 f 6108 7739',\n  'S 3 t 7691 6077',\n  'S 2 n 7740 6934',\n  'S 6 r 6108 6077',\n  'I 7741 j',\n  'S 3 # 7743 7742',\n  'S 4 a 7745 7744',\n  'P jh',\n  'S 3 n 7743 7746',\n  'S 3 o 7748 7747',\n  'S 3 d 7743 7749',\n  'S 3 a 7743 7750',\n  'P y',\n  'S 4 i 7743 7751',\n  'S 3 e 7748 7752',\n  'S 4 o 7754 7753',\n  'S 3 u 7748 7743',\n  'S 4 e 7743 7755',\n  'S 3 s 7757 7756',\n  'S 4 u 7743 7758',\n  'S 3 b 7748 7743',\n  'P epsilon',\n  'S 3 o 7757 7759',\n  'S 4 k 7757 7760',\n  'S 4 d 7757 7761',\n  'S 3 e 7757 7743',\n  'I 7762 k',\n  'S 4 n 7764 7763',\n  'S 4 k 7766 7765',\n  'S 1 0 7766 7767',\n  'P k',\n  'P epsilon',\n  'S 1 n 7766 7765',\n  'I 7768 l',\n  'S 4 l 7770 7769',\n  'S 4 e 7772 7771',\n  'S 5 # 7774 7773',\n  'S 6 g 7776 7775',\n  'S 3 b 7778 7777',\n  'S 6 # 7774 7779',\n  'P epsilon',\n  'S 4 k 7781 7780',\n  'S 4 i 7783 7782',\n  'S 5 # 7785 7784',\n  'S 5 # 7787 7786',\n  'S 2 t 7774 7788',\n  'S 3 l 7790 7789',\n  'S 3 a 7792 7791',\n  'P l',\n  'S 3 l 7782 7793',\n  'S 3 t 7795 7794',\n  'S 3 l 7782 7796',\n  'S 2 # 7782 7797',\n  'P ah-l',\n  'S 6 k 7774 7798',\n  'S 4 m 7800 7799',\n  'S 6 0 7782 7801',\n  'S 3 o 7802 7782',\n  'S 2 w 7774 7803',\n  'S 3 b 7787 7804',\n  'S 6 # 7806 7805',\n  'S 5 y 7782 7807',\n  'S 3 a 7782 7808',\n  'S 5 s 7787 7809',\n  'S 3 a 7774 7810',\n  'S 4 # 7812 7811',\n  'S 3 a 7814 7813',\n  'S 4 u 7815 7782',\n  'S 2 f 7774 7816',\n  'S 2 t 7774 7817',\n  'S 3 g 7787 7818',\n  'S 3 d 7820 7819',\n  'S 5 y 7782 7821',\n  'S 6 s 7782 7822',\n  'S 3 i 7782 7823',\n  'S 5 d 7787 7824',\n  'S 6 l 7825 7774',\n  'S 3 u 7827 7826',\n  'S 3 d 7787 7828',\n  'S 3 o 7829 7782',\n  'S 5 # 7774 7830',\n  'S 2 e 7831 7782',\n  'S 5 # 7774 7782',\n  'S 5 # 7774 7832',\n  'S 3 t 7834 7833',\n  'S 3 g 7836 7835',\n  'S 6 s 7782 7837',\n  'S 3 l 7782 7838',\n  'S 5 r 7840 7839',\n  'S 3 o 7782 7841',\n  'S 5 y 7782 7842',\n  'S 2 c 7782 7774',\n  'S 4 f 7844 7843',\n  'S 5 # 7845 7782',\n  'S 3 t 7787 7846',\n  'S 2 c 7774 7782',\n  'S 5 a 7782 7847',\n  'S 5 m 7782 7848',\n  'S 5 a 7782 7849',\n  'S 2 z 7787 7850',\n  'S 2 r 7782 7851',\n  'S 3 p 7853 7852',\n  'S 2 # 7782 7854',\n  'S 2 d 7787 7855',\n  'S 3 i 7782 7856',\n  'S 6 g 7782 7857',\n  'S 2 i 7787 7858',\n  'S 3 e 7782 7859',\n  'S 2 a 7787 7860',\n  'S 4 v 7862 7861',\n  'S 2 h 7863 7782',\n  'S 4 t 7864 7782',\n  'S 3 g 7787 7865',\n  'S 2 c 7774 7866',\n  'S 5 l 7867 7782',\n  'S 5 o 7782 7868',\n  'S 3 p 7787 7869',\n  'S 2 s 7782 7787',\n  'S 3 k 7871 7870',\n  'S 2 p 7873 7872',\n  'S 5 c 7782 7874',\n  'S 6 a 7787 7875',\n  'S 3 a 7782 7876',\n  'S 5 t 7782 7877',\n  'S 2 s 7782 7878',\n  'S 3 y 7782 7879',\n  'S 2 u 7787 7880',\n  'S 4 n 7829 7782',\n  'S 3 a 7881 7782',\n  'S 3 a 7774 7782',\n  'S 2 a 7774 7782',\n  'S 3 a 7782 7882',\n  'S 2 b 7774 7881',\n  'P y',\n  'S 2 f 7774 7883',\n  'S 3 d 7885 7884',\n  'S 3 z 7787 7782',\n  'S 2 # 7782 7886',\n  'S 5 c 7787 7782',\n  'S 5 m 7782 7787',\n  'S 6 s 7782 7887',\n  'S 2 n 7787 7782',\n  'S 3 e 7782 7888',\n  'S 2 n 7787 7889',\n  'S 2 u 7787 7782',\n  'S 3 u 7782 7890',\n  'S 6 s 7782 7891',\n  'S 2 h 7774 7782',\n  'S 3 e 7782 7892',\n  'S 2 h 7774 7893',\n  'S 3 f 7787 7894',\n  'S 2 d 7787 7782',\n  'S 6 s 7782 7895',\n  'S 6 o 7787 7896',\n  'S 3 o 7782 7897',\n  'S 5 s 7787 7898',\n  'S 3 r 7900 7899',\n  'S 5 t 7782 7901',\n  'S 3 i 7782 7902',\n  'S 2 b 7774 7782',\n  'S 3 s 7782 7903',\n  'S 5 b 7787 7782',\n  'S 6 a 7787 7904',\n  'S 5 s 7906 7905',\n  'S 5 d 7787 7907',\n  'S 3 w 7782 7908',\n  'S 2 a 7782 7787',\n  'S 2 m 7782 7909',\n  'S 2 c 7911 7910',\n  'S 3 c 7912 7782',\n  'S 6 e 7787 7913',\n  'S 5 d 7915 7914',\n  'S 3 y 7782 7916',\n  'S 5 m 7787 7917',\n  'S 3 s 7918 7787',\n  'S 5 m 7782 7919',\n  'S 3 u 7782 7920',\n  'S 3 h 7787 7782',\n  'S 2 # 7782 7787',\n  'S 2 n 7782 7787',\n  'S 5 r 7921 7782',\n  'S 3 u 7782 7922',\n  'S 3 u 7782 7923',\n  'S 5 b 7787 7924',\n  'S 2 i 7782 7787',\n  'S 2 b 7782 7925',\n  'S 3 o 7782 7926',\n  'S 3 s 7851 7927',\n  'S 3 w 7782 7928',\n  'S 3 r 7782 7929',\n  'S 6 e 7787 7930',\n  'S 5 r 7787 7782',\n  'S 3 h 7782 7931',\n  'S 3 g 7933 7932',\n  'S 3 r 7782 7934',\n  'S 3 w 7782 7787',\n  'S 2 t 7787 7782',\n  'S 3 r 7782 7935',\n  'S 3 d 7937 7936',\n  'S 2 a 7782 7938',\n  'S 2 n 7787 7939',\n  'S 3 y 7782 7929',\n  'S 2 c 7911 7940',\n  'S 2 n 7782 7941',\n  'S 2 e 7782 7942',\n  'S 3 d 7787 7943',\n  'S 3 f 7945 7944',\n  'S 2 d 7782 7787',\n  'S 2 n 7787 7946',\n  'S 3 k 7787 7947',\n  'S 3 p 7948 7782',\n  'S 2 f 7782 7787',\n  'S 2 i 7787 7782',\n  'S 3 g 7787 7949',\n  'S 2 p 7782 7787',\n  'S 2 f 7787 7950',\n  'S 2 z 7787 7951',\n  'S 3 p 7787 7952',\n  'S 3 c 7787 7782',\n  'I 7953 m',\n  'S 4 m 7955 7954',\n  'S 4 c 7957 7956',\n  'P epsilon',\n  'S 3 s 7959 7958',\n  'S 2 0 7961 7960',\n  'S 4 l 7960 7962',\n  'S 4 # 7964 7963',\n  'P m',\n  'S 5 e 7966 7965',\n  'S 3 h 7967 7960',\n  'S 4 s 7964 7968',\n  'P ah-m',\n  'S 5 i 7970 7969',\n  'S 6 l 7970 7971',\n  'S 2 t 7972 7960',\n  'S 5 r 7973 7960',\n  'P m-ah',\n  'P m-ae1',\n  'S 6 n 7970 7969',\n  'S 6 0 7964 7960',\n  'S 4 e 7974 7960',\n  'S 2 e 7960 7964',\n  'I 7975 n',\n  'S 4 g 7977 7976',\n  'S 4 n 7979 7978',\n  'S 5 # 7981 7980',\n  'S 4 k 7983 7982',\n  'S 2 m 7985 7984',\n  'S 5 e 7987 7986',\n  'P ng',\n  'S 4 c 7989 7988',\n  'S 6 m 7991 7990',\n  'S 6 s 7985 7992',\n  'P epsilon',\n  'S 5 i 7994 7993',\n  'S 6 r 7996 7995',\n  'S 4 q 7998 7997',\n  'S 5 t 7981 7999',\n  'S 5 n 8001 8000',\n  'P n',\n  'S 5 i 7985 8002',\n  'S 5 r 8004 8003',\n  'S 2 # 7991 8005',\n  'S 6 # 7991 8006',\n  'S 2 s 7991 8007',\n  'S 4 x 7981 7991',\n  'S 2 # 7991 8008',\n  'S 5 k 7981 8009',\n  'S 6 y 7981 8010',\n  'S 2 # 7991 7981',\n  'S 2 y 7985 8011',\n  'S 6 g 7991 8012',\n  'S 6 a 7991 8013',\n  'S 6 b 7991 8014',\n  'S 6 s 7991 8015',\n  'S 2 r 7981 8016',\n  'S 6 e 7981 7991',\n  'S 5 e 7991 8017',\n  'S 5 i 7981 8018',\n  'S 2 # 7985 8019',\n  'S 5 y 7991 7981',\n  'S 6 o 7991 7981',\n  'S 6 a 7991 8020',\n  'S 2 l 8022 8021',\n  'S 2 h 7981 8023',\n  'S 5 # 7981 8024',\n  'S 6 p 7991 7981',\n  'S 2 i 7985 8025',\n  'S 2 m 7981 8026',\n  'S 6 l 8028 8027',\n  'S 6 n 7981 8029',\n  'S 2 n 7981 8030',\n  'S 5 i 7991 8031',\n  'S 2 b 8032 7985',\n  'S 2 l 7981 8033',\n  'S 6 o 7991 8034',\n  'S 2 v 7991 7981',\n  'S 6 l 7981 7991',\n  'S 2 f 7981 8035',\n  'S 5 y 7991 8036',\n  'S 6 # 8037 7985',\n  'S 2 b 7981 8038',\n  'S 6 a 7991 8039',\n  'S 2 w 7981 8040',\n  'S 5 h 8042 8041',\n  'S 5 e 7991 7985',\n  'S 2 v 7981 8043',\n  'S 2 t 7991 8044',\n  'S 2 g 7991 7981',\n  'S 6 # 8046 8045',\n  'S 6 e 7991 8047',\n  'S 6 n 8048 7991',\n  'S 2 r 7991 8049',\n  'S 6 l 8051 8050',\n  'S 5 a 7981 8052',\n  'S 2 s 7981 7991',\n  'S 2 r 7981 7991',\n  'S 6 m 7981 8053',\n  'S 2 d 7981 8054',\n  'S 5 a 7991 7981',\n  'S 2 i 7991 8055',\n  'S 6 d 7991 8056',\n  'S 6 s 7991 8057',\n  'S 2 r 7991 7981',\n  'S 2 # 7991 8058',\n  'S 2 r 8059 7991',\n  'S 6 n 7981 7991',\n  'S 6 i 7991 8060',\n  'S 5 o 7981 7991',\n  'I 8061 o',\n  'S 4 r 8063 8062',\n  'S 4 # 8065 8064',\n  'S 1 0 8067 8066',\n  'S 3 o 8069 8068',\n  'S 3 o 8071 8070',\n  'S 1 # 8073 8072',\n  'S 3 w 8075 8074',\n  'S 4 o 8077 8076',\n  'S 4 d 8079 8078',\n  'S 3 a 8081 8080',\n  'P uw1',\n  'S 5 # 8083 8082',\n  'S 3 o 8085 8084',\n  'S 3 c 8087 8086',\n  'P epsilon',\n  'S 4 u 8089 8088',\n  'S 3 c 8090 8075',\n  'S 4 k 8092 8091',\n  'S 2 l 8094 8093',\n  'S 3 g 8096 8095',\n  'P aw1',\n  'S 3 w 8098 8097',\n  'S 3 c 8100 8099',\n  'S 2 s 8100 8101',\n  'S 2 d 8100 8102',\n  'S 5 r 8104 8103',\n  'S 5 r 8105 8100',\n  'S 4 n 8107 8106',\n  'S 5 s 8109 8108',\n  'S 5 r 8096 8075',\n  'S 2 f 8111 8110',\n  'S 1 s 8113 8112',\n  'S 2 f 8071 8114',\n  'P ah1',\n  'S 3 d 8096 8115',\n  'P ow',\n  'S 5 s 8117 8116',\n  'S 2 a 8075 8118',\n  'S 3 o 8120 8119',\n  'P ao1',\n  'S 2 f 8122 8121',\n  'S 2 c 8100 8120',\n  'S 5 e 8124 8123',\n  'S 6 o 8126 8125',\n  'S 6 i 8100 8127',\n  'S 4 w 8129 8128',\n  'S 5 # 8131 8130',\n  'S 5 r 8133 8132',\n  'S 6 e 8135 8134',\n  'S 2 w 8137 8136',\n  'S 4 t 8120 8071',\n  'S 1 b 8138 8120',\n  'S 5 # 8120 8071',\n  'S 2 w 8120 8139',\n  'S 3 n 8096 8140',\n  'S 5 e 8142 8141',\n  'S 6 # 8075 8143',\n  'S 2 s 8144 8075',\n  'S 3 t 8075 8145',\n  'P uh1',\n  'S 3 m 8075 8146',\n  'S 3 i 8147 8100',\n  'S 5 a 8149 8148',\n  'S 3 n 8100 8150',\n  'S 6 y 8100 8151',\n  'S 3 b 8152 8100',\n  'S 6 o 8075 8153',\n  'S 4 i 8155 8154',\n  'S 6 k 8100 8156',\n  'S 3 i 8158 8157',\n  'S 3 i 8160 8159',\n  'S 5 g 8162 8161',\n  'S 3 h 8164 8163',\n  'S 1 0 8166 8165',\n  'S 3 h 8081 8167',\n  'S 2 c 8071 8168',\n  'S 4 l 8120 8071',\n  'S 6 # 8169 8120',\n  'S 2 g 8120 8170',\n  'S 2 l 8096 8171',\n  'S 5 f 8173 8172',\n  'S 3 m 8175 8174',\n  'S 6 h 8075 8176',\n  'S 5 t 8075 8100',\n  'S 2 a 8177 8075',\n  'S 2 p 8100 8178',\n  'P ao',\n  'S 5 o 8180 8179',\n  'S 6 i 8075 8181',\n  'S 6 # 8100 8182',\n  'S 6 e 8183 8100',\n  'P aa1',\n  'S 6 a 8075 8184',\n  'S 4 y 8186 8185',\n  'S 5 s 8188 8187',\n  'S 5 # 8190 8189',\n  'S 5 e 8192 8191',\n  'S 2 t 8160 8193',\n  'S 3 s 8195 8194',\n  'P ah',\n  'S 5 t 8197 8196',\n  'S 2 o 8096 8198',\n  'S 3 t 8120 8199',\n  'S 1 0 8081 8200',\n  'S 1 # 8201 8160',\n  'S 6 s 8075 8202',\n  'S 1 # 8081 8203',\n  'S 1 # 8071 8204',\n  'P uh',\n  'S 2 h 8120 8113',\n  'S 3 t 8205 8096',\n  'S 5 t 8207 8206',\n  'S 3 d 8147 8075',\n  'S 6 d 8209 8208',\n  'S 6 # 8211 8210',\n  'S 6 t 8212 8100',\n  'S 3 d 8100 8075',\n  'S 5 o 8075 8213',\n  'S 6 g 8215 8214',\n  'S 3 b 8075 8216',\n  'S 3 m 8218 8217',\n  'S 6 a 8100 8219',\n  'S 3 f 8100 8220',\n  'S 6 u 8075 8100',\n  'S 5 e 8222 8221',\n  'S 5 o 8224 8223',\n  'S 6 g 8226 8225',\n  'S 2 # 8228 8227',\n  'S 5 n 8230 8229',\n  'S 1 # 8232 8231',\n  'S 5 g 8234 8233',\n  'S 6 # 8236 8235',\n  'S 5 e 8238 8237',\n  'S 3 t 8160 8239',\n  'S 1 a 8240 8160',\n  'S 5 n 8242 8241',\n  'S 2 0 8081 8243',\n  'S 2 # 8245 8244',\n  'S 6 t 8247 8246',\n  'P aw',\n  'S 2 t 8081 8075',\n  'S 3 c 8075 8248',\n  'S 1 0 8081 8249',\n  'S 5 h 8250 8071',\n  'S 1 r 8096 8251',\n  'S 5 m 8253 8252',\n  'S 3 f 8255 8254',\n  'S 6 t 8075 8256',\n  'S 2 a 8075 8257',\n  'S 6 d 8075 8147',\n  'S 1 r 8147 8258',\n  'S 2 n 8100 8147',\n  'S 3 h 8100 8259',\n  'S 6 o 8261 8260',\n  'S 2 # 8100 8075',\n  'S 3 d 8100 8262',\n  'S 3 d 8147 8263',\n  'S 6 n 8147 8264',\n  'S 6 h 8100 8265',\n  'S 3 t 8100 8266',\n  'S 2 # 8268 8267',\n  'S 4 v 8270 8269',\n  'S 6 m 8096 8271',\n  'S 3 t 8096 8272',\n  'S 5 r 8274 8273',\n  'S 3 d 8071 8275',\n  'S 6 # 8277 8276',\n  'S 3 l 8278 8272',\n  'S 2 # 8280 8279',\n  'S 3 d 8081 8281',\n  'S 3 k 8283 8282',\n  'S 3 l 8275 8284',\n  'S 3 c 8286 8285',\n  'S 3 c 8288 8287',\n  'S 1 0 8290 8289',\n  'S 3 g 8100 8291',\n  'S 6 c 8152 8292',\n  'S 6 # 8275 8293',\n  'S 2 g 8160 8294',\n  'S 2 i 8295 8160',\n  'S 5 l 8297 8296',\n  'S 3 y 8075 8298',\n  'S 6 # 8081 8299',\n  'S 1 # 8301 8300',\n  'S 3 d 8303 8302',\n  'S 6 # 8305 8304',\n  'S 3 c 8100 8147',\n  'S 3 h 8081 8306',\n  'S 3 r 8081 8075',\n  'S 4 t 8071 8075',\n  'S 1 h 8275 8096',\n  'S 3 f 8308 8307',\n  'S 6 a 8309 8100',\n  'S 6 u 8075 8310',\n  'S 6 # 8075 8311',\n  'S 6 l 8147 8312',\n  'S 2 o 8075 8313',\n  'S 2 r 8100 8147',\n  'S 5 g 8100 8314',\n  'S 5 t 8316 8315',\n  'S 3 f 8318 8317',\n  'S 6 n 8075 8319',\n  'S 6 # 8100 8320',\n  'S 6 l 8100 8075',\n  'S 6 y 8100 8321',\n  'S 3 b 8147 8100',\n  'S 5 f 8323 8322',\n  'S 4 m 8325 8324',\n  'S 6 # 8327 8326',\n  'S 2 0 8329 8328',\n  'S 1 0 8272 8330',\n  'P oy1',\n  'S 5 a 8332 8331',\n  'S 1 0 8272 8277',\n  'P ow1',\n  'S 3 l 8272 8333',\n  'P w',\n  'P oy',\n  'S 1 # 8335 8334',\n  'S 6 l 8337 8336',\n  'S 3 t 8081 8338',\n  'S 3 n 8096 8339',\n  'S 1 a 8096 8200',\n  'S 3 r 8275 8081',\n  'S 1 0 8341 8340',\n  'S 6 # 8343 8342',\n  'S 1 0 8345 8344',\n  'S 6 e 8160 8346',\n  'S 1 # 8348 8347',\n  'S 6 y 8350 8349',\n  'S 3 d 8351 8275',\n  'S 1 # 8160 8352',\n  'S 6 t 8096 8160',\n  'S 2 n 8354 8353',\n  'P aa',\n  'S 5 d 8356 8355',\n  'S 2 o 8160 8357',\n  'S 1 l 8075 8358',\n  'S 3 m 8360 8359',\n  'S 2 r 8362 8361',\n  'S 2 t 8100 8363',\n  'S 3 c 8100 8364',\n  'S 6 h 8275 8075',\n  'S 3 j 8075 8365',\n  'S 2 e 8169 8366',\n  'S 6 t 8081 8075',\n  'S 5 a 8368 8367',\n  'S 6 # 8075 8369',\n  'S 1 a 8100 8370',\n  'S 1 r 8100 8371',\n  'S 2 m 8075 8100',\n  'S 2 l 8100 8372',\n  'S 3 l 8100 8075',\n  'S 3 l 8100 8373',\n  'S 3 f 8375 8374',\n  'S 6 r 8147 8376',\n  'S 3 t 8147 8100',\n  'S 5 g 8147 8100',\n  'S 3 m 8075 8100',\n  'S 2 # 8378 8377',\n  'S 3 s 8100 8379',\n  'S 4 a 8381 8380',\n  'S 4 f 8383 8382',\n  'S 4 e 8385 8384',\n  'S 3 c 8387 8386',\n  'S 1 0 8389 8388',\n  'S 4 m 8390 8275',\n  'S 3 r 8392 8391',\n  'S 6 r 8275 8094',\n  'S 3 u 8272 8393',\n  'S 5 c 8395 8394',\n  'S 6 # 8275 8096',\n  'S 3 a 8081 8396',\n  'S 6 t 8160 8397',\n  'S 2 s 8275 8398',\n  'S 3 h 8081 8399',\n  'S 5 a 8200 8400',\n  'S 1 # 8402 8401',\n  'S 3 h 8404 8403',\n  'S 6 c 8406 8405',\n  'S 3 n 8408 8407',\n  'S 5 a 8152 8409',\n  'S 5 i 8275 8152',\n  'S 1 # 8411 8410',\n  'S 6 o 8413 8412',\n  'S 6 r 8152 8160',\n  'S 6 s 8415 8414',\n  'S 2 l 8075 8416',\n  'S 2 # 8418 8417',\n  'S 3 h 8094 8419',\n  'S 2 r 8275 8094',\n  'S 2 s 8160 8420',\n  'S 3 m 8160 8421',\n  'S 3 d 8160 8422',\n  'S 5 c 8424 8423',\n  'S 3 b 8075 8425',\n  'S 6 d 8275 8426',\n  'S 6 # 8075 8427',\n  'S 6 s 8081 8428',\n  'S 1 0 8081 8160',\n  'S 2 t 8100 8429',\n  'S 1 u 8096 8200',\n  'S 3 r 8081 8430',\n  'S 3 r 8075 8431',\n  'S 6 a 8075 8432',\n  'S 1 0 8081 8433',\n  'S 6 z 8075 8434',\n  'S 6 # 8100 8435',\n  'S 5 c 8100 8436',\n  'S 2 r 8100 8437',\n  'S 2 p 8100 8438',\n  'S 3 f 8100 8439',\n  'S 5 t 8100 8440',\n  'S 6 z 8075 8441',\n  'S 5 g 8443 8442',\n  'S 6 e 8444 8100',\n  'S 6 t 8100 8445',\n  'S 3 l 8100 8446',\n  'S 3 k 8100 8447',\n  'S 5 # 8449 8448',\n  'S 5 r 8100 8450',\n  'S 3 k 8147 8451',\n  'S 6 # 8453 8452',\n  'S 4 a 8455 8454',\n  'S 5 r 8100 8456',\n  'S 5 a 8458 8457',\n  'S 5 f 8094 8459',\n  'S 4 m 8461 8460',\n  'S 4 m 8463 8462',\n  'S 3 s 8160 8464',\n  'S 3 m 8071 8465',\n  'S 2 p 8467 8466',\n  'S 2 e 8469 8468',\n  'S 6 c 8275 8470',\n  'S 6 e 8272 8471',\n  'S 1 o 8160 8472',\n  'S 6 c 8160 8473',\n  'S 3 n 8275 8474',\n  'S 3 c 8081 8475',\n  'S 5 e 8152 8081',\n  'S 6 e 8275 8476',\n  'S 3 r 8081 8275',\n  'S 3 d 8096 8477',\n  'S 2 c 8096 8275',\n  'S 5 i 8479 8478',\n  'S 5 i 8152 8096',\n  'S 5 t 8481 8480',\n  'S 5 t 8295 8482',\n  'S 1 0 8484 8483',\n  'S 6 # 8486 8485',\n  'S 2 s 8094 8100',\n  'S 6 a 8152 8487',\n  'S 3 m 8152 8295',\n  'S 6 l 8096 8488',\n  'S 1 i 8096 8275',\n  'S 2 e 8152 8275',\n  'P w-ah1',\n  'S 3 n 8152 8489',\n  'S 3 m 8094 8275',\n  'S 6 # 8490 8160',\n  'S 1 # 8152 8491',\n  'S 1 i 8160 8492',\n  'S 6 t 8494 8493',\n  'S 3 t 8075 8495',\n  'S 3 r 8081 8496',\n  'S 6 t 8275 8497',\n  'S 2 # 8081 8498',\n  'S 1 # 8081 8499',\n  'S 3 l 8200 8500',\n  'S 2 s 8075 8081',\n  'S 3 t 8075 8501',\n  'S 6 i 8075 8502',\n  'S 2 a 8100 8075',\n  'S 3 u 8120 8503',\n  'S 1 a 8505 8504',\n  'S 6 a 8100 8506',\n  'S 3 f 8075 8100',\n  'S 3 t 8100 8507',\n  'S 3 c 8100 8508',\n  'S 5 n 8100 8509',\n  'S 6 n 8100 8510',\n  'S 5 b 8443 8100',\n  'S 6 i 8075 8100',\n  'S 2 # 8100 8147',\n  'S 6 n 8147 8100',\n  'S 3 f 8100 8511',\n  'S 6 t 8147 8512',\n  'S 5 a 8514 8513',\n  'S 4 s 8516 8515',\n  'S 2 b 8518 8517',\n  'S 3 w 8169 8519',\n  'S 6 s 8100 8520',\n  'S 3 l 8147 8521',\n  'S 5 a 8523 8522',\n  'S 5 r 8100 8524',\n  'S 6 r 8100 8525',\n  'S 5 o 8527 8526',\n  'S 3 w 8120 8528',\n  'S 5 p 8530 8529',\n  'S 4 k 8275 8531',\n  'S 3 w 8533 8532',\n  'S 4 s 8535 8534',\n  'S 3 h 8275 8536',\n  'S 3 c 8094 8275',\n  'S 3 n 8538 8537',\n  'S 1 # 8275 8539',\n  'S 1 # 8540 8071',\n  'S 5 # 8541 8272',\n  'S 5 # 8542 8278',\n  'S 1 h 8096 8543',\n  'S 6 h 8096 8275',\n  'S 6 e 8277 8096',\n  'S 2 k 8545 8544',\n  'S 2 p 8081 8546',\n  'S 3 d 8081 8547',\n  'S 3 r 8275 8548',\n  'S 2 g 8275 8549',\n  'S 2 f 8551 8550',\n  'S 6 a 8275 8552',\n  'S 5 a 8554 8553',\n  'S 3 m 8556 8555',\n  'S 5 a 8152 8557',\n  'S 2 e 8559 8558',\n  'S 6 e 8561 8560',\n  'S 3 l 8100 8562',\n  'S 3 r 8100 8563',\n  'S 6 i 8096 8564',\n  'S 3 p 8275 8565',\n  'S 3 d 8152 8566',\n  'S 5 s 8160 8275',\n  'S 2 r 8568 8567',\n  'S 1 o 8160 8569',\n  'S 5 f 8571 8570',\n  'S 5 e 8075 8081',\n  'S 6 h 8081 8572',\n  'S 3 l 8081 8573',\n  'S 3 f 8081 8574',\n  'S 3 r 8081 8575',\n  'S 6 e 8573 8576',\n  'S 2 b 8200 8577',\n  'S 6 h 8579 8578',\n  'S 3 b 8581 8580',\n  'S 5 o 8583 8582',\n  'S 6 t 8075 8584',\n  'S 3 t 8096 8100',\n  'S 5 g 8075 8585',\n  'S 1 e 8586 8100',\n  'S 2 n 8075 8587',\n  'S 6 # 8100 8588',\n  'S 3 k 8100 8589',\n  'S 3 b 8100 8590',\n  'S 3 m 8592 8591',\n  'S 4 e 8594 8593',\n  'S 6 # 8596 8595',\n  'S 4 e 8598 8597',\n  'S 1 o 8600 8599',\n  'S 3 r 8602 8601',\n  'S 5 d 8100 8275',\n  'S 4 l 8604 8603',\n  'S 1 # 8606 8605',\n  'S 1 # 8100 8607',\n  'S 4 l 8609 8608',\n  'S 6 # 8275 8610',\n  'S 6 u 8096 8275',\n  'S 5 w 8152 8275',\n  'S 5 i 8152 8611',\n  'S 6 l 8160 8612',\n  'S 6 l 8160 8613',\n  'S 5 m 8615 8614',\n  'S 6 a 8160 8616',\n  'S 4 x 8152 8617',\n  'S 6 t 8619 8618',\n  'P ih1',\n  'S 6 r 8621 8620',\n  'S 3 l 8152 8622',\n  'S 3 s 8094 8623',\n  'S 3 p 8152 8624',\n  'S 6 l 8152 8625',\n  'S 2 g 8275 8160',\n  'S 6 n 8275 8071',\n  'S 1 r 8278 8626',\n  'S 3 r 8278 8272',\n  'S 5 e 8277 8627',\n  'S 3 p 8081 8628',\n  'S 1 c 8152 8275',\n  'S 5 d 8081 8629',\n  'S 3 p 8081 8630',\n  'S 1 0 8081 8275',\n  'S 2 d 8632 8631',\n  'S 1 # 8634 8633',\n  'S 5 t 8635 8152',\n  'S 6 # 8275 8636',\n  'S 5 i 8638 8637',\n  'S 6 # 8275 8639',\n  'S 6 i 8295 8152',\n  'S 6 e 8152 8640',\n  'S 5 v 8295 8641',\n  'S 5 i 8275 8642',\n  'S 1 # 8152 8160',\n  'S 5 n 8644 8643',\n  'S 5 c 8160 8645',\n  'S 3 r 8100 8152',\n  'S 1 a 8100 8646',\n  'S 3 l 8100 8647',\n  'S 6 y 8649 8648',\n  'S 3 m 8152 8275',\n  'S 2 a 8651 8650',\n  'S 1 a 8652 8160',\n  'S 1 a 8160 8653',\n  'S 1 0 8654 8075',\n  'S 6 f 8275 8160',\n  'S 6 e 8075 8275',\n  'S 1 0 8081 8075',\n  'S 3 c 8081 8655',\n  'S 1 e 8081 8656',\n  'S 3 s 8081 8657',\n  'S 1 t 8075 8658',\n  'S 6 e 8081 8075',\n  'S 3 l 8081 8659',\n  'S 1 # 8075 8660',\n  'S 6 n 8662 8661',\n  'S 6 a 8664 8663',\n  'S 6 u 8075 8665',\n  'S 3 m 8666 8075',\n  'S 6 s 8075 8100',\n  'S 2 x 8100 8667',\n  'S 6 # 8100 8668',\n  'S 2 a 8670 8669',\n  'S 6 a 8317 8671',\n  'S 6 n 8147 8672',\n  'S 6 n 8674 8673',\n  'S 6 l 8075 8147',\n  'S 4 s 8676 8675',\n  'S 3 h 8678 8677',\n  'S 6 t 8680 8679',\n  'S 3 e 8152 8681',\n  'S 4 m 8683 8682',\n  'S 3 l 8275 8684',\n  'S 1 # 8096 8685',\n  'S 3 l 8160 8096',\n  'S 5 d 8275 8686',\n  'S 6 h 8275 8687',\n  'S 3 h 8275 8152',\n  'S 6 i 8275 8096',\n  'S 1 0 8689 8688',\n  'S 2 r 8100 8690',\n  'S 3 h 8692 8691',\n  'S 5 i 8694 8693',\n  'S 5 l 8696 8695',\n  'S 3 k 8698 8697',\n  'S 5 b 8699 8152',\n  'S 3 k 8096 8700',\n  'S 3 h 8275 8701',\n  'S 5 b 8703 8702',\n  'S 6 o 8152 8160',\n  'S 6 i 8160 8704',\n  'S 6 d 8706 8705',\n  'S 6 s 8464 8707',\n  'S 1 # 8708 8152',\n  'S 4 x 8152 8709',\n  'S 2 # 8710 8152',\n  'S 6 n 8275 8711',\n  'S 3 c 8713 8712',\n  'S 3 s 8275 8714',\n  'S 6 r 8275 8096',\n  'S 2 n 8278 8715',\n  'S 6 e 8272 8716',\n  'S 2 r 8718 8717',\n  'S 3 l 8720 8719',\n  'S 5 r 8100 8721',\n  'S 2 f 8275 8722',\n  'S 3 l 8275 8096',\n  'S 5 a 8724 8723',\n  'S 5 o 8726 8725',\n  'S 6 e 8094 8727',\n  'S 6 z 8729 8728',\n  'S 5 y 8275 8730',\n  'S 6 n 8732 8731',\n  'S 3 m 8152 8733',\n  'S 6 a 8096 8152',\n  'S 5 r 8295 8734',\n  'S 2 b 8152 8735',\n  'S 5 r 8152 8736',\n  'S 6 i 8160 8152',\n  'S 5 v 8160 8737',\n  'S 2 e 8100 8738',\n  'S 6 u 8094 8739',\n  'S 1 a 8293 8160',\n  'S 1 m 8275 8160',\n  'S 1 d 8160 8740',\n  'S 1 e 8160 8741',\n  'S 3 d 8100 8160',\n  'S 3 n 8160 8295',\n  'S 5 e 8152 8742',\n  'S 3 s 8075 8743',\n  'S 1 a 8081 8744',\n  'S 3 b 8075 8745',\n  'S 3 d 8075 8081',\n  'S 3 b 8081 8100',\n  'S 1 r 8147 8746',\n  'S 1 0 8747 8100',\n  'S 1 0 8100 8120',\n  'S 5 p 8749 8748',\n  'S 5 i 8100 8750',\n  'S 3 b 8075 8751',\n  'S 1 m 8075 8752',\n  'S 3 p 8100 8147',\n  'S 2 s 8100 8753',\n  'S 3 n 8100 8754',\n  'S 5 e 8100 8075',\n  'S 3 m 8756 8755',\n  'S 3 h 8147 8100',\n  'S 6 c 8147 8757',\n  'S 3 l 8147 8100',\n  'S 4 l 8759 8758',\n  'S 5 i 8761 8760',\n  'S 1 # 8763 8762',\n  'S 2 s 8071 8764',\n  'S 3 w 8120 8765',\n  'S 1 h 8075 8766',\n  'S 3 s 8275 8767',\n  'S 1 # 8769 8768',\n  'S 3 c 8770 8559',\n  'S 1 i 8275 8771',\n  'S 1 i 8096 8772',\n  'S 1 # 8275 8773',\n  'S 1 e 8096 8404',\n  'S 1 i 8160 8100',\n  'S 6 e 8160 8644',\n  'S 2 s 8152 8774',\n  'S 2 c 8100 8775',\n  'S 2 t 8100 8776',\n  'S 5 o 8778 8777',\n  'S 4 v 8780 8779',\n  'S 5 o 8782 8781',\n  'S 3 c 8784 8783',\n  'S 3 l 8786 8785',\n  'S 6 k 8275 8787',\n  'S 6 a 8789 8788',\n  'S 6 g 8096 8275',\n  'S 6 # 8275 8790',\n  'S 6 n 8160 8791',\n  'S 6 e 8275 8160',\n  'S 6 r 8152 8792',\n  'S 6 s 8794 8793',\n  'S 4 p 8160 8795',\n  'S 3 r 8797 8796',\n  'S 2 g 8160 8152',\n  'S 4 d 8799 8798',\n  'S 3 m 8801 8800',\n  'S 6 t 8160 8275',\n  'S 3 p 8152 8802',\n  'S 6 d 8160 8094',\n  'S 3 c 8804 8803',\n  'S 1 e 8272 8805',\n  'S 5 d 8806 8272',\n  'S 2 l 8808 8807',\n  'S 3 r 8096 8275',\n  'S 2 b 8081 8809',\n  'S 6 r 8081 8275',\n  'S 3 n 8081 8810',\n  'S 2 k 8200 8811',\n  'S 5 t 8813 8812',\n  'S 6 # 8275 8814',\n  'S 2 l 8075 8815',\n  'S 2 p 8160 8816',\n  'S 6 a 8160 8094',\n  'S 6 o 8275 8817',\n  'S 3 r 8075 8160',\n  'S 3 w 8819 8818',\n  'S 6 e 8275 8820',\n  'S 3 b 8096 8275',\n  'S 6 g 8152 8821',\n  'S 5 b 8152 8822',\n  'S 5 t 8824 8823',\n  'S 5 d 8826 8825',\n  'S 5 t 8160 8827',\n  'S 3 s 8100 8147',\n  'S 3 m 8094 8100',\n  'S 3 p 8152 8828',\n  'S 3 n 8160 8829',\n  'S 3 b 8075 8830',\n  'S 6 s 8081 8075',\n  'S 1 # 8081 8831',\n  'S 3 c 8075 8832',\n  'S 6 e 8075 8100',\n  'S 6 g 8169 8075',\n  'S 5 d 8834 8833',\n  'S 2 t 8147 8835',\n  'S 5 g 8100 8836',\n  'S 6 # 8100 8837',\n  'S 2 e 8100 8075',\n  'S 2 a 8100 8313',\n  'S 2 d 8100 8075',\n  'S 6 e 8839 8838',\n  'S 5 i 8840 8100',\n  'S 3 f 8100 8841',\n  'S 1 # 8843 8842',\n  'S 6 g 8845 8844',\n  'S 5 k 8847 8846',\n  'S 6 t 8849 8848',\n  'S 1 0 8275 8850',\n  'S 5 r 8100 8851',\n  'S 1 s 8275 8852',\n  'S 1 # 8854 8853',\n  'S 3 n 8160 8855',\n  'S 4 l 8856 8275',\n  'S 4 v 8858 8857',\n  'S 4 l 8160 8152',\n  'S 1 n 8152 8859',\n  'S 3 h 8275 8096',\n  'S 3 i 8861 8860',\n  'S 6 s 8275 8862',\n  'S 3 r 8152 8160',\n  'S 3 t 8147 8863',\n  'S 1 e 8100 8147',\n  'S 4 h 8865 8864',\n  'S 6 # 8275 8866',\n  'S 4 x 8152 8867',\n  'S 3 m 8071 8868',\n  'S 5 i 8870 8869',\n  'S 6 r 8094 8871',\n  'S 3 r 8873 8872',\n  'S 6 a 8160 8874',\n  'S 3 b 8876 8875',\n  'S 4 c 8275 8877',\n  'S 6 l 8160 8878',\n  'S 3 d 8160 8879',\n  'S 3 b 8295 8152',\n  'S 3 t 8881 8880',\n  'S 6 t 8275 8152',\n  'S 6 o 8160 8882',\n  'S 6 r 8884 8883',\n  'S 4 c 8152 8885',\n  'S 2 i 8160 8886',\n  'S 2 g 8152 8887',\n  'S 1 # 8275 8096',\n  'S 6 n 8889 8888',\n  'S 6 l 8891 8890',\n  'S 3 t 8152 8892',\n  'S 4 d 8152 8275',\n  'S 3 d 8893 8275',\n  'S 1 0 8895 8894',\n  'S 6 r 8094 8896',\n  'S 2 l 8897 8272',\n  'S 3 v 8272 8898',\n  'S 3 d 8900 8899',\n  'S 3 l 8901 8275',\n  'S 3 r 8902 8081',\n  'S 5 a 8904 8903',\n  'S 2 t 8906 8905',\n  'S 3 p 8152 8907',\n  'S 6 e 8566 8908',\n  'S 2 c 8152 8909',\n  'S 2 i 8075 8910',\n  'S 3 r 8275 8160',\n  'S 6 u 8275 8911',\n  'S 6 p 8160 8912',\n  'S 6 e 8094 8152',\n  'S 3 m 8152 8913',\n  'S 3 b 8152 8914',\n  'S 6 u 8295 8915',\n  'S 2 c 8152 8916',\n  'S 6 e 8160 8917',\n  'S 5 q 8152 8918',\n  'S 6 u 8160 8919',\n  'S 5 f 8160 8920',\n  'S 2 t 8922 8921',\n  'S 3 r 8160 8923',\n  'S 5 k 8081 8924',\n  'S 6 c 8081 8925',\n  'S 3 r 8075 8926',\n  'S 3 t 8928 8927',\n  'S 6 e 8100 8929',\n  'S 3 c 8100 8930',\n  'S 1 r 8100 8837',\n  'S 2 o 8075 8100',\n  'S 6 l 8931 8100',\n  'S 5 d 8100 8932',\n  'S 6 s 8100 8147',\n  'S 6 l 8147 8100',\n  'S 6 # 8934 8933',\n  'S 5 o 8936 8935',\n  'S 5 d 8938 8937',\n  'S 1 0 8152 8939',\n  'S 1 0 8941 8940',\n  'S 6 i 8081 8942',\n  'S 6 s 8275 8943',\n  'S 3 p 8944 8152',\n  'S 2 h 8275 8945',\n  'S 5 b 8275 8946',\n  'S 5 n 8160 8096',\n  'S 1 0 8948 8947',\n  'S 4 p 8950 8949',\n  'S 1 a 8160 8951',\n  'S 1 r 8275 8952',\n  'S 4 l 8954 8953',\n  'S 2 o 8152 8295',\n  'S 1 r 8152 8955',\n  'S 3 g 8096 8956',\n  'S 2 r 8096 8275',\n  'S 5 k 8275 8957',\n  'S 1 o 8147 8958',\n  'S 4 s 8960 8959',\n  'S 5 r 8100 8961',\n  'S 4 x 8152 8962',\n  'S 6 t 8152 8963',\n  'S 6 t 8160 8964',\n  'S 5 y 8966 8965',\n  'S 6 n 8968 8967',\n  'S 3 c 8893 8969',\n  'S 6 u 8160 8970',\n  'S 6 e 8275 8971',\n  'S 6 e 8160 8972',\n  'S 4 s 8974 8973',\n  'S 4 l 8275 8975',\n  'S 6 t 8096 8976',\n  'S 4 l 8160 8977',\n  'S 3 t 8071 8152',\n  'S 6 i 8096 8978',\n  'S 6 s 8096 8152',\n  'S 6 e 8160 8979',\n  'S 1 # 8981 8980',\n  'S 2 e 8160 8982',\n  'S 4 f 8160 8983',\n  'S 3 r 8160 8275',\n  'S 1 h 8152 8984',\n  'S 4 b 8986 8985',\n  'S 4 z 8100 8987',\n  'S 6 s 8566 8988',\n  'S 2 # 8152 8096',\n  'S 4 p 8160 8989',\n  'S 6 n 8152 8160',\n  'S 6 r 8991 8990',\n  'S 3 b 8275 8992',\n  'S 6 n 8094 8275',\n  'S 3 r 8272 8278',\n  'S 2 e 8272 8993',\n  'S 1 t 8275 8994',\n  'S 5 s 8096 8995',\n  'S 1 a 8996 8096',\n  'S 5 l 8081 8997',\n  'S 3 l 8275 8998',\n  'S 6 r 8275 8081',\n  'S 2 o 8096 8999',\n  'S 3 l 8096 8275',\n  'S 5 s 9001 9000',\n  'S 1 r 9003 9002',\n  'S 3 s 8160 9004',\n  'S 5 y 8275 9005',\n  'S 6 n 9007 9006',\n  'S 2 # 9009 9008',\n  'S 6 c 8152 9010',\n  'S 6 s 8275 9011',\n  'S 6 i 8295 9012',\n  'S 5 v 8160 9013',\n  'S 1 u 8160 9014',\n  'S 5 j 8152 9015',\n  'S 6 r 8152 8644',\n  'S 5 s 8160 9016',\n  'S 2 e 9018 9017',\n  'S 3 r 9019 8160',\n  'S 1 m 8160 9020',\n  'S 5 p 8075 9021',\n  'S 2 n 8081 9022',\n  'S 6 h 8075 8081',\n  'S 6 c 8100 9023',\n  'S 2 a 8100 9024',\n  'S 3 c 9025 8100',\n  'S 3 m 8100 8075',\n  'S 5 i 8075 8100',\n  'S 5 g 8100 9026',\n  'S 5 t 9028 9027',\n  'S 5 o 8275 9029',\n  'S 2 s 9031 9030',\n  'S 4 t 8275 9032',\n  'S 6 r 8094 9033',\n  'S 3 n 9035 9034',\n  'S 2 p 8152 9036',\n  'S 5 s 9038 9037',\n  'S 6 r 8152 9039',\n  'S 6 e 8152 9040',\n  'S 6 # 8275 9041',\n  'S 2 e 8152 9042',\n  'S 1 o 8275 9043',\n  'S 3 r 8275 9044',\n  'S 4 v 9046 9045',\n  'S 4 h 8295 9047',\n  'S 6 n 9049 9048',\n  'S 2 p 8152 8075',\n  'S 2 e 9051 9050',\n  'S 2 n 9052 8275',\n  'S 4 x 9054 9053',\n  'S 2 t 8295 9055',\n  'S 2 i 8295 9056',\n  'S 2 t 8096 9057',\n  'S 6 # 8275 9058',\n  'S 2 t 8147 9059',\n  'S 4 f 9061 9060',\n  'S 5 s 9063 9062',\n  'S 3 j 8152 9064',\n  'S 3 m 8275 9065',\n  'S 4 t 8275 9066',\n  'S 3 l 8094 9067',\n  'S 3 w 9069 9068',\n  'S 3 p 8152 8275',\n  'S 6 c 9071 9070',\n  'S 3 m 8096 8275',\n  'S 3 m 8160 9072',\n  'S 3 t 9074 9073',\n  'S 6 i 8152 8275',\n  'S 6 o 8160 9075',\n  'S 3 c 9077 9076',\n  'S 6 l 8275 8096',\n  'S 4 h 8152 9078',\n  'S 4 v 8094 8096',\n  'S 4 v 8160 8275',\n  'S 3 r 8096 9079',\n  'S 6 u 8160 9080',\n  'S 3 m 9082 9081',\n  'S 4 s 8152 9083',\n  'S 2 n 8152 9084',\n  'S 2 a 8160 9085',\n  'S 3 t 8160 9086',\n  'S 6 y 8275 9087',\n  'S 2 # 8275 8096',\n  'S 4 t 8275 9088',\n  'S 3 r 9090 9089',\n  'S 3 r 8152 8275',\n  'S 6 n 8275 9091',\n  'S 2 n 8094 9092',\n  'S 3 l 8094 9093',\n  'S 2 a 8272 9094',\n  'S 2 n 9096 9095',\n  'S 2 a 8096 8081',\n  'S 5 e 8096 9097',\n  'S 2 g 8275 9098',\n  'S 3 r 8275 9099',\n  'S 3 s 8096 9100',\n  'S 3 m 9102 9101',\n  'S 6 # 9104 9103',\n  'S 6 o 8160 8152',\n  'S 2 e 8295 8152',\n  'S 2 i 8096 9105',\n  'S 5 a 9107 9106',\n  'S 6 t 8160 9108',\n  'S 3 s 8160 9109',\n  'S 6 o 8295 9110',\n  'S 3 h 8152 9111',\n  'S 6 g 8152 9112',\n  'S 6 l 8152 9113',\n  'S 5 p 9115 9114',\n  'S 6 c 8152 9116',\n  'S 2 s 8160 8152',\n  'S 5 l 8152 9117',\n  'S 5 n 8160 8152',\n  'S 2 u 9119 9118',\n  'S 1 r 8295 9120',\n  'S 1 e 8295 9056',\n  'S 1 r 8152 9121',\n  'S 6 # 8075 9122',\n  'S 3 m 8081 9123',\n  'S 6 i 8100 9124',\n  'S 2 c 8075 9125',\n  'S 2 c 8100 9126',\n  'S 5 s 8100 9127',\n  'S 4 m 9129 9128',\n  'S 1 0 9131 9130',\n  'S 5 i 8275 9132',\n  'S 5 k 8152 9133',\n  'S 5 i 8275 9134',\n  'S 4 p 9136 9135',\n  'S 6 # 9138 9137',\n  'S 3 r 8160 9139',\n  'S 6 # 8096 8160',\n  'S 3 e 9141 9140',\n  'S 1 # 9143 9142',\n  'S 2 c 8100 9144',\n  'S 5 h 8152 9145',\n  'S 1 # 8100 8275',\n  'S 6 a 8275 9146',\n  'S 2 m 8152 8160',\n  'S 5 s 8096 9147',\n  'S 3 l 8275 9148',\n  'S 6 u 8160 9149',\n  'S 6 l 8071 8096',\n  'S 4 c 8096 9150',\n  'S 2 t 8152 9151',\n  'S 3 i 8096 8275',\n  'S 2 h 8096 9152',\n  'S 4 c 8275 8152',\n  'S 1 e 8275 8096',\n  'S 4 h 8096 9153',\n  'S 3 b 8152 8295',\n  'S 1 e 8295 9154',\n  'S 1 a 8160 8295',\n  'S 2 m 8275 8096',\n  'S 2 e 8096 9155',\n  'S 3 r 8147 9156',\n  'S 4 j 8272 9157',\n  'S 3 s 8100 9158',\n  'S 3 k 9160 9159',\n  'S 3 p 9162 9161',\n  'S 5 n 9163 8275',\n  'S 3 l 8275 9164',\n  'S 6 c 9166 9165',\n  'S 6 n 8096 9167',\n  'S 5 u 9169 9168',\n  'S 5 f 8120 8275',\n  'S 6 t 9171 9170',\n  'S 3 s 8160 8152',\n  'S 3 k 8160 9172',\n  'S 6 s 8275 8152',\n  'S 6 e 8152 8275',\n  'S 6 u 8160 8152',\n  'S 3 h 8275 9173',\n  'S 6 b 8096 8275',\n  'S 6 r 8152 9174',\n  'S 3 k 8096 9175',\n  'S 6 l 8160 8152',\n  'S 4 g 8160 9176',\n  'S 4 d 8152 9177',\n  'S 6 c 9179 9178',\n  'S 4 g 8100 9180',\n  'S 1 # 9182 9181',\n  'S 1 # 8096 9183',\n  'S 6 t 9185 9184',\n  'S 4 p 8275 9186',\n  'S 2 # 9187 8152',\n  'S 6 n 8275 8152',\n  'S 6 s 8275 9188',\n  'S 1 # 8094 8275',\n  'S 6 r 8094 9189',\n  'S 3 l 8272 8278',\n  'S 6 a 8081 9190',\n  'S 6 r 8096 8275',\n  'S 5 a 9191 8096',\n  'S 2 c 8275 8081',\n  'S 3 b 9193 9192',\n  'S 2 u 8096 9194',\n  'S 5 y 8160 9195',\n  'S 5 y 9196 8160',\n  'S 3 m 8160 8152',\n  'S 3 r 8160 9197',\n  'S 1 a 9198 8160',\n  'S 2 b 8152 9199',\n  'S 3 r 8275 8152',\n  'S 2 a 8160 9200',\n  'S 1 # 8275 9201',\n  'S 5 o 8096 8152',\n  'S 5 n 9203 9202',\n  'S 6 # 8275 9187',\n  'S 6 t 9204 8152',\n  'S 5 s 9206 9205',\n  'S 6 r 8152 8295',\n  'S 5 d 9075 9207',\n  'S 6 c 8152 9208',\n  'S 3 c 9210 9209',\n  'S 3 l 8160 8295',\n  'S 3 l 8160 9211',\n  'S 3 g 8160 9212',\n  'S 3 l 8075 9213',\n  'S 2 o 8081 9214',\n  'S 3 e 8075 9215',\n  'S 1 m 8075 9216',\n  'S 1 r 8100 8147',\n  'S 5 k 8100 9217',\n  'S 4 x 8152 9218',\n  'S 3 c 9220 9219',\n  'S 6 e 9222 9221',\n  'S 4 b 8160 9223',\n  'S 5 y 9225 9224',\n  'S 5 p 8152 9226',\n  'S 5 h 9227 8152',\n  'S 6 # 8275 9228',\n  'S 6 l 8096 9229',\n  'S 5 v 8152 9230',\n  'S 3 a 8081 9231',\n  'S 1 a 8275 9232',\n  'S 2 a 8152 9233',\n  'S 2 h 8160 9234',\n  'S 6 # 9236 9235',\n  'S 2 f 8100 9237',\n  'S 2 g 9239 9238',\n  'S 5 c 9240 8152',\n  'S 1 m 8096 9241',\n  'S 3 r 8096 9242',\n  'S 2 s 8275 8096',\n  'S 6 l 9244 9243',\n  'S 4 k 8096 9245',\n  'S 6 b 8152 9246',\n  'S 2 s 8096 9247',\n  'S 4 z 8096 9248',\n  'S 1 t 8152 9249',\n  'S 5 t 8275 9250',\n  'S 3 n 8147 9251',\n  'S 5 u 9253 9252',\n  'S 5 f 9255 9254',\n  'S 3 y 8275 9256',\n  'S 6 i 8152 9257',\n  'S 6 a 9259 9258',\n  'S 6 e 8160 8152',\n  'S 6 e 8275 9260',\n  'S 6 m 8275 9261',\n  'S 3 l 8160 9262',\n  'S 3 m 8096 8152',\n  'S 6 c 8152 8275',\n  'S 5 v 8152 9263',\n  'S 6 n 8152 9264',\n  'S 3 p 8096 9265',\n  'S 3 p 8160 9266',\n  'S 6 g 8152 9090',\n  'S 6 c 8152 9267',\n  'S 6 n 8152 8275',\n  'S 3 d 8096 8275',\n  'S 3 r 9269 9268',\n  'S 6 n 8152 8096',\n  'S 6 l 8160 9270',\n  'S 2 b 8096 8160',\n  'S 3 c 8160 9271',\n  'S 3 s 8160 8275',\n  'S 4 l 8275 9272',\n  'S 2 e 8160 9273',\n  'S 4 t 9275 9274',\n  'S 4 l 8096 8160',\n  'S 2 # 9276 8152',\n  'S 3 b 8152 8275',\n  'S 2 e 8094 9277',\n  'S 3 d 8094 8275',\n  'S 2 f 8081 9278',\n  'S 6 n 8081 8096',\n  'S 3 s 8275 9279',\n  'S 6 r 8081 9280',\n  'S 2 r 8096 9281',\n  'S 6 # 9283 9282',\n  'S 2 i 8275 8160',\n  'S 3 m 8160 9284',\n  'S 3 r 8096 8160',\n  'S 2 s 8152 9285',\n  'S 2 e 8160 9286',\n  'S 3 t 8275 8160',\n  'S 5 k 9227 9287',\n  'S 3 t 8094 8152',\n  'S 3 d 8096 8152',\n  'S 6 e 8295 8152',\n  'S 6 t 8295 8152',\n  'S 1 # 8152 9288',\n  'S 6 r 9290 9289',\n  'S 2 l 8160 9291',\n  'S 2 i 8152 8160',\n  'S 3 d 8160 9292',\n  'S 3 l 8152 8160',\n  'S 6 l 8075 9293',\n  'S 3 b 8081 9294',\n  'S 5 y 9296 9295',\n  'S 2 r 8100 9297',\n  'S 5 l 8100 9298',\n  'S 2 p 9300 9299',\n  'S 5 o 8160 9301',\n  'S 2 c 9303 9302',\n  'S 4 c 8152 9304',\n  'S 1 a 8160 9305',\n  'S 4 t 8152 9306',\n  'S 4 c 9308 9307',\n  'S 3 b 8152 9309',\n  'S 3 e 9311 9310',\n  'S 3 m 8094 8152',\n  'S 3 h 8275 9312',\n  'S 2 p 8160 8152',\n  'S 6 t 9314 9313',\n  'S 5 s 8160 9315',\n  'S 2 m 8275 9316',\n  'S 3 m 8152 9317',\n  'S 1 i 8160 8152',\n  'S 2 g 8152 9318',\n  'S 5 h 9320 9319',\n  'S 2 p 9322 9321',\n  'S 1 # 9324 9323',\n  'S 3 l 8100 8275',\n  'S 6 i 8152 8100',\n  'S 3 p 8275 9325',\n  'S 1 i 8275 8096',\n  'S 6 s 9327 9326',\n  'S 4 s 8275 9328',\n  'S 4 s 8096 9329',\n  'S 3 n 8152 9330',\n  'S 1 0 8096 9331',\n  'S 4 g 9333 9332',\n  'S 3 n 8147 9334',\n  'S 5 # 8275 9335',\n  'S 2 a 8100 9336',\n  'S 5 h 9338 9337',\n  'S 6 l 8152 9339',\n  'S 3 h 8152 9340',\n  'S 6 # 8100 9341',\n  'S 3 p 9343 9342',\n  'S 6 a 8275 9344',\n  'S 3 f 8152 9345',\n  'S 3 c 8152 8160',\n  'S 6 # 8152 8275',\n  'S 3 n 9347 9346',\n  'S 6 # 8275 9348',\n  'S 5 c 9350 9349',\n  'S 6 m 8152 8160',\n  'S 6 d 8152 9351',\n  'S 3 s 8152 8096',\n  'S 6 s 9353 9352',\n  'S 6 c 8096 9354',\n  'S 2 p 8160 9355',\n  'S 3 i 8293 9356',\n  'S 4 p 9358 9357',\n  'S 3 l 8275 9359',\n  'S 3 n 8160 9360',\n  'S 4 h 8096 9361',\n  'S 6 l 8096 8275',\n  'S 3 c 8275 9362',\n  'S 3 h 8094 9363',\n  'S 6 n 9365 9364',\n  'S 3 t 8720 9366',\n  'S 5 s 8081 8275',\n  'S 2 s 8906 8096',\n  'S 2 c 8152 9367',\n  'S 5 o 8275 8152',\n  'S 2 r 8160 9368',\n  'S 3 r 8152 9369',\n  'S 6 e 8160 9370',\n  'S 5 d 9372 9371',\n  'S 5 s 9373 8160',\n  'S 6 p 8160 9374',\n  'S 5 t 8152 8160',\n  'S 2 d 8160 9375',\n  'S 3 r 8160 9376',\n  'S 5 v 8075 8578',\n  'S 2 m 8081 9377',\n  'S 6 h 8075 9378',\n  'S 1 c 8100 8075',\n  'S 1 a 8147 9379',\n  'S 5 n 8100 9380',\n  'S 6 c 9382 9381',\n  'S 3 e 8075 9383',\n  'S 5 b 9385 9384',\n  'S 6 n 8094 9386',\n  'S 6 a 8094 8152',\n  'S 2 h 8152 9387',\n  'S 4 t 9388 8152',\n  'S 6 e 8152 9389',\n  'S 3 r 9391 9390',\n  'S 3 d 8160 9392',\n  'S 3 l 8160 9393',\n  'S 5 i 9395 9394',\n  'S 5 l 8096 8160',\n  'S 6 t 8160 9396',\n  'S 5 t 8275 9397',\n  'S 5 s 8275 9398',\n  'S 3 h 9400 9399',\n  'S 3 p 8096 9401',\n  'S 2 i 8152 9402',\n  'S 6 o 9404 9403',\n  'S 5 o 8275 9405',\n  'S 2 n 8152 8094',\n  'S 3 r 8152 9406',\n  'S 5 c 8096 8152',\n  'S 6 e 8160 9407',\n  'S 6 # 8100 9408',\n  'S 6 o 8275 9409',\n  'S 1 m 9411 9410',\n  'S 4 l 8160 9412',\n  'S 2 i 8160 9413',\n  'S 4 p 8096 9414',\n  'S 3 t 8275 9415',\n  'S 4 b 8096 9416',\n  'S 4 f 9418 9417',\n  'S 3 d 8100 9419',\n  'S 1 r 8147 9420',\n  'S 3 c 8275 8096',\n  'S 2 i 8100 9421',\n  'S 5 r 9423 9422',\n  'S 4 t 9425 9424',\n  'S 3 d 8152 9426',\n  'S 3 l 8152 8275',\n  'S 3 h 8100 9427',\n  'S 6 h 8100 9428',\n  'S 6 u 8152 9429',\n  'S 5 t 8152 9002',\n  'S 6 e 8152 9430',\n  'S 6 n 8275 9431',\n  'S 4 v 8152 8275',\n  'S 6 e 9433 9432',\n  'S 5 f 9434 8275',\n  'S 6 a 8295 8275',\n  'S 6 a 8275 9435',\n  'S 6 l 9437 9436',\n  'S 3 p 8160 8275',\n  'S 4 s 8160 9438',\n  'S 2 t 8275 9439',\n  'S 4 g 8160 9440',\n  'S 3 h 9442 9441',\n  'S 2 p 8152 8275',\n  'S 4 d 8096 8275',\n  'S 6 d 8160 8096',\n  'S 6 e 8152 9443',\n  'S 4 g 8152 9444',\n  'S 3 l 8094 8275',\n  'S 5 l 8081 9445',\n  'S 2 c 8081 8275',\n  'S 3 m 8275 8081',\n  'S 6 s 8275 9446',\n  'S 2 l 8160 9447',\n  'S 3 l 8152 9448',\n  'S 6 s 9449 8152',\n  'S 3 s 8100 8152',\n  'S 6 l 8152 9450',\n  'S 1 i 8152 8160',\n  'S 6 t 8152 9451',\n  'S 2 h 8160 9452',\n  'S 3 n 8152 8295',\n  'S 1 r 8081 9453',\n  'S 1 e 9455 9454',\n  'S 1 h 8075 9456',\n  'S 3 s 8100 9457',\n  'S 5 i 9459 9458',\n  'S 4 g 8152 9460',\n  'S 5 r 9462 9461',\n  'S 1 0 9464 9463',\n  'S 1 c 8094 9465',\n  'S 1 e 9467 9466',\n  'S 6 o 8152 9468',\n  'S 3 l 8152 8100',\n  'S 6 o 8295 8152',\n  'S 4 t 9470 9469',\n  'S 5 h 8147 9471',\n  'S 2 l 9259 9472',\n  'S 4 m 8160 9473',\n  'S 5 u 9475 9474',\n  'S 6 s 9477 9476',\n  'S 3 r 9479 9478',\n  'S 6 a 9481 9480',\n  'S 3 p 9482 8160',\n  'S 5 l 8816 9483',\n  'S 2 c 8152 9484',\n  'S 6 t 8096 9485',\n  'S 3 t 8152 9486',\n  'S 5 o 9212 9487',\n  'S 5 c 8160 9488',\n  'S 5 t 9490 9489',\n  'S 5 t 8603 9491',\n  'S 2 o 8152 9492',\n  'S 2 b 8152 8100',\n  'S 1 # 8275 9493',\n  'S 1 s 9495 9494',\n  'S 2 o 8160 8152',\n  'S 3 t 8096 8275',\n  'S 1 i 8160 8275',\n  'S 6 l 8152 9496',\n  'S 3 l 8275 9497',\n  'S 4 p 9499 9498',\n  'S 3 t 8152 9500',\n  'S 3 h 8160 8147',\n  'S 2 a 8147 9501',\n  'S 3 h 8147 9259',\n  'S 1 a 8100 8147',\n  'S 4 g 9503 9502',\n  'S 3 r 8295 9504',\n  'S 6 i 9506 9505',\n  'S 3 r 8100 9507',\n  'S 6 n 8096 9508',\n  'S 6 e 8152 9509',\n  'S 3 c 9511 9510',\n  'S 6 i 8100 8275',\n  'S 3 r 9513 9512',\n  'S 6 t 8816 9514',\n  'S 3 r 9516 9515',\n  'S 4 c 8275 9517',\n  'S 3 g 8152 8275',\n  'S 6 v 8152 9518',\n  'S 3 r 9520 9519',\n  'S 4 t 8275 9521',\n  'S 2 c 8275 9522',\n  'S 6 n 8160 8096',\n  'S 6 e 8096 9523',\n  'S 4 d 8152 9524',\n  'S 4 b 8275 8152',\n  'S 4 c 9526 9525',\n  'S 3 h 8152 8275',\n  'S 1 r 8081 9527',\n  'S 2 e 8152 9528',\n  'S 3 h 8152 9212',\n  'S 5 d 8160 8152',\n  'S 1 a 8152 8774',\n  'S 6 r 8152 9529',\n  'S 6 h 8152 9530',\n  'S 1 e 9531 8160',\n  'S 1 i 8081 8200',\n  'S 6 o 8100 9532',\n  'S 5 i 9534 9533',\n  'S 1 n 8075 8100',\n  'S 5 i 8100 9535',\n  'S 5 h 9537 9536',\n  'S 4 g 9539 9538',\n  'S 4 t 8152 9540',\n  'S 4 v 8295 9541',\n  'S 1 p 8275 9542',\n  'S 6 c 8152 9543',\n  'S 5 i 8096 8152',\n  'S 2 a 8100 8152',\n  'S 5 b 8160 9544',\n  'S 6 u 8160 8094',\n  'S 2 a 8152 8275',\n  'S 4 m 9546 9545',\n  'S 2 c 8100 9547',\n  'S 4 f 8100 9548',\n  'S 3 n 8160 9549',\n  'S 4 d 8160 9550',\n  'S 5 h 9552 9551',\n  'S 6 l 8152 9553',\n  'S 4 h 8096 9554',\n  'S 4 m 8152 8160',\n  'S 3 l 8160 9555',\n  'S 2 p 9556 8275',\n  'S 6 c 9558 9557',\n  'S 5 l 9107 8275',\n  'S 2 o 8152 9559',\n  'S 5 t 8275 9560',\n  'S 5 m 8275 9561',\n  'S 6 # 9562 8275',\n  'S 1 o 8152 9563',\n  'S 6 h 8160 9564',\n  'S 2 c 8160 9565',\n  'P ih',\n  'S 2 n 8275 9566',\n  'S 5 o 8096 9567',\n  'S 3 l 8100 9568',\n  'S 3 l 8275 9569',\n  'S 4 t 9571 9570',\n  'S 4 t 8160 8152',\n  'S 6 h 8152 9572',\n  'S 4 c 8152 9573',\n  'S 1 # 9574 8160',\n  'S 1 y 8160 8096',\n  'S 2 s 9576 9575',\n  'S 3 r 8160 9577',\n  'S 5 y 9579 9578',\n  'S 3 d 9581 9580',\n  'S 3 c 8275 9582',\n  'S 3 k 8152 9583',\n  'S 4 p 8160 8152',\n  'S 3 m 9585 9584',\n  'S 4 b 9587 9586',\n  'S 3 g 8152 9588',\n  'S 5 q 8152 9589',\n  'S 6 a 8100 9590',\n  'S 6 # 8100 9591',\n  'S 6 i 8100 8152',\n  'S 3 p 9593 9592',\n  'S 6 f 9595 9594',\n  'S 4 b 8152 9596',\n  'S 3 r 8275 9187',\n  'S 3 s 8275 9597',\n  'S 6 t 8096 9598',\n  'S 4 b 8152 8275',\n  'S 4 c 8275 8160',\n  'S 4 b 8096 9599',\n  'S 6 n 9601 9600',\n  'S 1 # 9602 8275',\n  'S 6 m 9604 9603',\n  'S 6 a 8275 8100',\n  'S 6 r 8632 9605',\n  'S 5 o 9607 9606',\n  'S 3 r 8295 8152',\n  'S 6 a 9609 9608',\n  'S 3 n 8152 8160',\n  'S 1 h 8075 9610',\n  'S 6 # 8075 8100',\n  'S 3 r 8075 8100',\n  'S 5 m 8100 8317',\n  'S 5 r 9612 9611',\n  'S 4 t 9614 9613',\n  'S 6 a 8275 9615',\n  'S 3 l 8160 8275',\n  'S 4 p 8152 9616',\n  'S 4 d 8160 9617',\n  'S 1 e 8275 8160',\n  'S 2 e 8152 9618',\n  'S 2 n 9620 9619',\n  'S 4 k 8275 9621',\n  'S 5 s 8160 9622',\n  'S 3 c 9624 9623',\n  'S 4 p 8152 9625',\n  'S 2 r 8160 9626',\n  'S 4 p 8160 8275',\n  'S 5 r 9628 9627',\n  'S 4 t 9630 9629',\n  'S 6 c 8160 9631',\n  'S 4 x 8152 9632',\n  'S 2 s 8096 9633',\n  'S 4 v 8160 8096',\n  'S 1 0 9635 9634',\n  'S 3 t 8275 8152',\n  'S 2 a 8096 8160',\n  'S 3 p 9636 8275',\n  'S 1 e 8096 9637',\n  'S 3 f 8275 9638',\n  'S 2 b 8160 9639',\n  'S 3 r 9641 9640',\n  'S 5 t 8100 8152',\n  'S 3 m 8275 9642',\n  'S 5 y 8096 8100',\n  'S 6 # 9643 8971',\n  'S 6 n 8160 8816',\n  'S 6 b 8160 9644',\n  'S 1 i 8096 8152',\n  'S 4 l 8152 8096',\n  'S 6 s 8275 9645',\n  'S 4 l 8160 8096',\n  'S 3 p 8152 9646',\n  'S 3 h 8152 9647',\n  'S 2 r 8295 8152',\n  'S 5 l 9649 9648',\n  'S 4 p 8152 9650',\n  'S 5 l 9651 8152',\n  'S 6 i 8100 9652',\n  'S 6 e 8152 9653',\n  'S 4 c 9655 9654',\n  'S 3 n 8094 9656',\n  'S 6 e 8094 8100',\n  'S 6 s 8275 9657',\n  'S 3 r 8152 8096',\n  'S 3 m 8152 8100',\n  'S 6 o 9659 9658',\n  'S 5 t 9661 9660',\n  'S 3 b 8100 9662',\n  'S 3 k 8160 9663',\n  'S 4 p 8152 8160',\n  'S 6 l 9665 9664',\n  'S 3 c 8275 8152',\n  'S 4 s 8152 8096',\n  'S 6 e 8275 9444',\n  'S 4 d 9667 9666',\n  'S 2 r 8096 9668',\n  'S 3 l 8275 9669',\n  'S 2 r 8275 9107',\n  'S 3 r 8275 9670',\n  'S 3 m 8160 9671',\n  'S 4 l 8160 8275',\n  'S 3 r 8081 9672',\n  'S 6 a 9674 9673',\n  'S 6 m 8152 8346',\n  'S 6 o 9676 9675',\n  'S 5 t 8160 8295',\n  'S 2 a 8075 9677',\n  'S 4 h 9679 9678',\n  'S 6 a 9681 9680',\n  'S 1 0 8152 9682',\n  'S 6 e 9684 9683',\n  'S 4 t 9686 9685',\n  'S 1 e 8152 9687',\n  'S 5 o 8160 9688',\n  'S 5 i 9690 9689',\n  'S 6 a 8152 8160',\n  'S 1 o 8160 9691',\n  'S 4 h 9693 9692',\n  'S 5 b 8160 8152',\n  'S 5 s 9694 8160',\n  'S 1 a 8152 9695',\n  'S 5 s 8160 8152',\n  'S 2 b 8160 9696',\n  'S 4 h 8275 9697',\n  'S 4 t 8096 9698',\n  'S 3 i 8096 9699',\n  'S 3 r 9585 9700',\n  'S 6 s 8275 9701',\n  'S 3 i 8160 9702',\n  'S 4 d 8275 8160',\n  'S 6 d 8152 9703',\n  'S 5 l 8152 9704',\n  'S 5 i 8160 8275',\n  'S 1 c 8096 8275',\n  'S 3 h 8275 9705',\n  'S 1 e 8152 9706',\n  'S 3 g 8096 9707',\n  'S 2 e 8096 9708',\n  'S 3 p 8275 8100',\n  'S 3 r 8160 8152',\n  'S 4 s 8160 9709',\n  'S 6 r 8096 9710',\n  'S 2 a 8160 9711',\n  'S 4 t 8152 8160',\n  'S 5 c 9713 9712',\n  'S 4 b 9651 8152',\n  'S 4 b 9714 8275',\n  'S 6 e 8275 8152',\n  'S 5 g 8100 8152',\n  'S 6 i 8152 9715',\n  'S 3 s 8152 9716',\n  'S 6 e 8152 9717',\n  'S 6 e 9718 8152',\n  'S 4 g 8275 9719',\n  'S 5 u 8275 9720',\n  'S 3 r 8152 9721',\n  'S 5 m 9722 8152',\n  'S 6 u 8295 9723',\n  'S 3 g 8152 9724',\n  'S 6 o 8160 9725',\n  'S 3 k 9727 9726',\n  'S 3 m 8275 8152',\n  'S 4 k 8160 9728',\n  'S 6 r 8096 8160',\n  'S 2 e 8160 9729',\n  'S 3 r 8275 8771',\n  'S 2 s 8275 8160',\n  'S 2 # 9731 9730',\n  'S 6 # 8275 9732',\n  'S 5 m 8160 9733',\n  'S 3 d 8152 8160',\n  'S 5 f 8160 9734',\n  'S 5 f 8160 9735',\n  'S 6 s 8931 9736',\n  'S 5 o 9738 9737',\n  'S 5 o 8160 8275',\n  'S 1 h 9489 9739',\n  'S 2 c 8096 9740',\n  'S 4 c 9742 9741',\n  'S 6 a 8160 8152',\n  'S 2 y 8152 9743',\n  'S 6 t 9745 9744',\n  'S 3 m 8275 9746',\n  'S 4 b 9747 8160',\n  'S 4 t 8152 9748',\n  'S 3 r 8152 9162',\n  'S 3 t 8160 9749',\n  'S 6 e 8152 9234',\n  'S 2 a 8295 9750',\n  'S 3 s 8160 8096',\n  'S 3 i 8160 9751',\n  'S 2 s 8160 9752',\n  'S 2 s 8152 9753',\n  'S 2 p 9755 9754',\n  'S 2 b 8152 9756',\n  'S 2 e 8160 9757',\n  'S 2 c 8275 8152',\n  'S 4 q 8160 8096',\n  'S 3 r 9759 9758',\n  'S 5 l 9761 9760',\n  'S 5 i 9763 9762',\n  'S 2 e 8275 8415',\n  'S 2 u 8152 9764',\n  'S 6 r 8275 9765',\n  'S 2 u 8096 9766',\n  'S 1 l 8275 9767',\n  'S 3 r 8275 8096',\n  'S 1 b 8295 9768',\n  'S 4 z 8152 9769',\n  'S 4 c 9770 8152',\n  'S 6 # 8275 8160',\n  'S 6 a 9071 8160',\n  'S 4 p 8275 8152',\n  'S 6 a 8275 8152',\n  'S 3 b 8152 8094',\n  'S 4 c 8096 9771',\n  'S 3 t 8096 9772',\n  'S 3 m 8152 8126',\n  'S 6 o 8100 8295',\n  'S 6 e 8100 9773',\n  'S 3 m 8100 9513',\n  'S 3 c 8275 9774',\n  'S 4 d 9776 9775',\n  'S 6 n 8160 8275',\n  'S 6 r 8275 9777',\n  'S 1 o 8160 9778',\n  'S 6 a 8152 9779',\n  'S 3 t 8160 8275',\n  'S 5 e 8275 8096',\n  'S 3 s 8160 9780',\n  'S 6 i 8160 9781',\n  'S 5 s 8160 9782',\n  'S 3 i 8100 9783',\n  'S 5 y 9785 9784',\n  'S 4 p 9787 9786',\n  'S 1 a 8160 9788',\n  'S 2 l 8152 9789',\n  'S 1 p 8096 9790',\n  'S 1 u 8096 9791',\n  'S 2 d 8094 9792',\n  'S 6 e 9794 9793',\n  'S 4 v 8160 9795',\n  'S 3 v 8275 8160',\n  'S 1 0 8160 8275',\n  'S 6 t 8152 8275',\n  'S 2 o 8160 9796',\n  'S 3 l 8160 9797',\n  'S 3 g 8160 8152',\n  'S 2 i 8295 8152',\n  'S 1 s 8152 9798',\n  'S 3 i 8275 9799',\n  'S 5 l 9800 8152',\n  'S 4 p 8160 9801',\n  'S 2 p 8152 9802',\n  'S 2 a 8152 9167',\n  'S 6 c 8152 9803',\n  'S 6 k 8275 9804',\n  'S 3 r 8275 9805',\n  'S 5 y 8096 8275',\n  'S 6 v 8096 8152',\n  'S 1 r 8152 9411',\n  'S 6 s 8275 9806',\n  'S 2 t 8160 8275',\n  'S 4 h 8160 9807',\n  'S 1 c 8152 9808',\n  'S 6 o 8152 9809',\n  'S 6 i 8275 9810',\n  'S 4 q 8096 8275',\n  'S 5 c 8096 9811',\n  'S 6 l 8100 8152',\n  'S 4 b 8275 9812',\n  'S 4 p 8275 9813',\n  'S 6 n 8096 8160',\n  'S 4 l 9815 9814',\n  'S 2 s 8160 9816',\n  'S 6 s 8152 8275',\n  'S 5 h 8160 9817',\n  'S 5 c 8160 9818',\n  'S 5 t 8160 8152',\n  'S 1 d 8100 9819',\n  'S 5 l 9821 9820',\n  'S 4 d 8096 9822',\n  'S 1 0 9824 9823',\n  'S 6 u 8152 9825',\n  'S 6 o 9827 9826',\n  'S 1 o 8152 9828',\n  'S 3 r 8160 9829',\n  'S 3 r 9830 8703',\n  'S 1 0 8094 8160',\n  'S 4 v 8096 9831',\n  'S 1 t 8152 9832',\n  'S 4 c 8152 9833',\n  'S 2 p 8160 9834',\n  'S 1 e 8160 8152',\n  'S 1 n 8152 9835',\n  'S 5 y 8100 9836',\n  'S 4 c 8096 8152',\n  'S 6 e 8160 9837',\n  'S 6 e 8152 9838',\n  'S 2 p 9839 8275',\n  'S 5 p 8275 9840',\n  'S 1 m 8152 9841',\n  'S 1 e 8160 9842',\n  'S 2 s 8160 9843',\n  'S 3 i 8160 9844',\n  'S 5 z 9651 8152',\n  'S 6 a 8152 8275',\n  'S 3 m 9846 9845',\n  'S 4 k 9848 9847',\n  'S 4 c 8275 9849',\n  'S 6 n 8275 9850',\n  'S 6 n 8096 9851',\n  'S 4 t 9439 9852',\n  'S 2 r 8160 9853',\n  'S 6 l 8152 8160',\n  'S 1 o 9855 9854',\n  'S 4 b 9857 9856',\n  'S 3 r 9859 9858',\n  'S 4 t 8160 9860',\n  'S 1 o 8152 9861',\n  'S 4 d 9863 9862',\n  'S 3 n 8152 9864',\n  'S 1 0 8152 9865',\n  'S 1 i 8096 9866',\n  'S 3 n 9868 9867',\n  'S 2 s 8152 8160',\n  'S 6 e 9869 8275',\n  'S 3 m 9871 9870',\n  'S 4 d 8152 9872',\n  'S 4 d 8152 8096',\n  'S 3 d 8160 8096',\n  'S 3 l 8152 9873',\n  'S 4 m 9389 9874',\n  'S 4 g 8275 8160',\n  'S 2 b 8152 9875',\n  'S 4 f 8152 9876',\n  'S 2 o 8160 9877',\n  'S 3 c 8160 9878',\n  'S 2 i 8096 9879',\n  'S 3 c 8160 9880',\n  'S 2 d 8152 9881',\n  'S 6 i 9882 8152',\n  'S 5 t 8152 9651',\n  'S 6 s 8275 9883',\n  'S 3 s 8152 8275',\n  'S 3 s 8096 9884',\n  'S 6 b 8275 9885',\n  'S 6 k 8275 8152',\n  'S 1 i 8160 9886',\n  'S 3 t 8160 8152',\n  'S 5 n 9888 9887',\n  'S 6 # 8100 8075',\n  'S 5 u 9890 9889',\n  'S 6 e 8160 9891',\n  'S 6 e 9893 9892',\n  'S 4 p 8160 8096',\n  'S 4 g 8160 9894',\n  'S 1 r 8160 9895',\n  'S 6 n 8096 8275',\n  'S 6 r 8275 8152',\n  'S 2 h 8160 9896',\n  'S 1 e 8096 8160',\n  'S 1 u 8096 8160',\n  'S 1 a 8152 9897',\n  'S 2 a 8152 8160',\n  'S 1 e 8160 8096',\n  'S 4 k 8275 9898',\n  'S 2 o 8096 8275',\n  'S 1 0 8275 8096',\n  'S 2 y 8152 9899',\n  'S 5 l 9162 8152',\n  'S 4 c 8152 8275',\n  'S 6 n 8152 9900',\n  'S 6 s 9902 9901',\n  'S 1 o 8160 9903',\n  'S 1 i 8096 9904',\n  'S 1 c 9906 9905',\n  'S 3 s 8152 9907',\n  'S 5 h 8275 8152',\n  'S 6 l 8718 9908',\n  'S 3 t 8160 9909',\n  'S 3 m 8096 9910',\n  'S 4 c 8096 9911',\n  'S 6 # 8100 9912',\n  'S 2 t 8075 9913',\n  'S 1 0 9915 9914',\n  'S 4 g 9917 9916',\n  'S 5 s 9918 8152',\n  'S 1 0 8644 9919',\n  'S 4 g 8275 9920',\n  'S 4 c 8160 8096',\n  'S 1 l 8275 9921',\n  'S 6 l 9797 8160',\n  'S 3 l 8160 9922',\n  'S 2 e 8275 9923',\n  'S 1 e 8152 9259',\n  'S 4 v 8160 8152',\n  'S 3 t 8096 9924',\n  'S 2 m 8160 9925',\n  'S 2 s 8152 9444',\n  'S 6 a 8100 9926',\n  'S 6 c 8096 9927',\n  'S 2 t 8096 8275',\n  'S 3 b 8295 9928',\n  'S 6 r 8275 8774',\n  'S 3 j 8096 8275',\n  'S 6 m 8096 8275',\n  'S 2 i 8160 8293',\n  'S 2 r 8075 9929',\n  'S 1 n 8100 9930',\n  'S 2 e 9932 9931',\n  'S 6 r 8160 9933',\n  'S 1 0 8096 9934',\n  'S 3 l 8100 8152',\n  'S 6 t 8160 8152',\n  'S 6 i 8275 8160',\n  'S 3 n 8275 8160',\n  'S 4 c 8096 9935',\n  'S 3 m 9937 9936',\n  'S 1 i 8096 9938',\n  'S 5 o 8160 9939',\n  'S 2 a 9941 9940',\n  'S 2 o 8152 9942',\n  'S 3 r 9943 8096',\n  'S 2 g 8160 9944',\n  'S 2 b 8100 9945',\n  'S 2 n 8100 9946',\n  'S 6 o 9521 9947',\n  'S 1 r 8160 8152',\n  'S 5 c 9683 8152',\n  'S 3 p 8152 9948',\n  'S 6 s 8096 9949',\n  'S 3 t 9951 9950',\n  'S 4 c 8160 8152',\n  'S 6 o 9953 9952',\n  'S 6 z 8160 9954',\n  'S 2 e 8152 8160',\n  'S 3 b 8152 8160',\n  'S 3 c 8152 8275',\n  'S 2 t 8096 9955',\n  'S 2 e 8160 9956',\n  'S 2 t 8100 9957',\n  'S 1 l 8100 9958',\n  'S 4 f 8100 9959',\n  'S 4 c 9918 9198',\n  'S 6 r 8160 9960',\n  'S 4 g 8160 9643',\n  'S 4 c 8160 9961',\n  'S 2 t 8160 9962',\n  'S 4 b 8160 8275',\n  'S 1 c 8160 9963',\n  'S 6 n 9964 8096',\n  'S 2 h 8160 9965',\n  'S 6 n 8100 9966',\n  'S 1 i 8075 9967',\n  'S 6 s 8152 9968',\n  'S 1 m 8160 9969',\n  'S 1 m 8152 8160',\n  'S 3 t 8096 9970',\n  'S 3 v 8152 9971',\n  'S 2 c 8096 8160',\n  'S 2 r 8160 9972',\n  'S 1 m 8100 8075',\n  'S 2 y 8075 9973',\n  'S 1 a 9975 9974',\n  'S 2 e 8160 9976',\n  'S 1 e 8160 9977',\n  'S 6 n 9979 9978',\n  'S 4 d 8152 9980',\n  'S 1 a 8075 9981',\n  'S 3 n 8152 9982',\n  'S 2 l 8152 9983',\n  'S 4 b 8096 9984',\n  'S 1 0 8096 9985',\n  'S 2 n 8160 9986',\n  'S 3 r 8275 9987',\n  'S 2 l 8160 9988',\n  'S 3 h 8100 8075',\n  'S 2 o 9989 8152',\n  'S 6 i 8275 8152',\n  'S 4 d 9198 9990',\n  'S 6 n 8160 9991',\n  'S 2 p 8096 8275',\n  'S 3 i 8160 9992',\n  'S 1 p 8160 9993',\n  'S 5 n 8275 8152',\n  'S 3 r 8160 9994',\n  'S 2 h 8096 8160',\n  'S 1 # 8160 8096',\n  'S 3 r 8160 9995',\n  'S 3 t 8096 8160',\n  'S 1 g 8160 9996',\n  'S 3 l 8152 9997',\n  'S 3 n 8295 8160',\n  'I 9998 p',\n  'S 4 p 10000 9999',\n  'S 4 h 10002 10001',\n  'P epsilon',\n  'S 4 f 10004 10003',\n  'S 2 # 10006 10005',\n  'S 4 s 10008 10007',\n  'S 2 0 10000 10009',\n  'S 2 h 10011 10010',\n  'S 3 u 10009 10010',\n  'S 3 p 10009 10012',\n  'S 2 0 10000 10013',\n  'P p',\n  'P f',\n  'S 3 e 10009 10010',\n  'S 4 t 10004 10014',\n  'S 2 o 10015 10009',\n  'S 4 b 10017 10016',\n  'S 3 r 10000 10009',\n  'S 4 n 10004 10009',\n  'S 2 a 10000 10009',\n  'I 10018 q',\n  'P k',\n  'I 10019 r',\n  'S 3 e 10021 10020',\n  'S 4 r 10023 10022',\n  'S 1 # 10025 10024',\n  'S 1 0 10027 10026',\n  'S 2 c 10029 10028',\n  'S 4 # 10031 10030',\n  'S 4 r 10033 10032',\n  'S 3 u 10035 10034',\n  'S 3 u 10037 10036',\n  'S 1 0 10029 10038',\n  'P epsilon',\n  'S 4 r 10040 10039',\n  'S 2 e 10042 10041',\n  'S 4 i 10044 10043',\n  'S 2 p 10046 10045',\n  'S 3 o 10048 10047',\n  'S 1 # 10050 10049',\n  'S 3 i 10052 10051',\n  'S 4 i 10029 10053',\n  'S 2 b 10029 10054',\n  'S 4 i 10056 10055',\n  'S 2 v 10058 10057',\n  'S 2 i 10058 10059',\n  'P r',\n  'S 4 e 10061 10060',\n  'S 2 p 10063 10062',\n  'S 2 t 10029 10064',\n  'S 5 i 10058 10065',\n  'S 3 i 10067 10066',\n  'S 2 w 10069 10068',\n  'S 2 o 10071 10070',\n  'S 4 i 10073 10072',\n  'S 3 a 10075 10074',\n  'S 4 o 10058 10076',\n  'S 4 a 10042 10077',\n  'S 3 a 10079 10078',\n  'S 2 i 10081 10080',\n  'S 5 n 10083 10082',\n  'S 1 n 10085 10084',\n  'P er',\n  'S 2 u 10058 10086',\n  'S 4 o 10088 10087',\n  'S 2 p 10058 10089',\n  'S 5 v 10058 10090',\n  'S 5 o 10042 10091',\n  'S 2 g 10042 10092',\n  'S 5 e 10058 10093',\n  'S 3 r 10095 10094',\n  'S 2 a 10042 10096',\n  'S 1 # 10098 10097',\n  'S 1 # 10093 10099',\n  'S 2 a 10101 10100',\n  'S 1 j 10093 10102',\n  'S 4 o 10042 10103',\n  'S 2 k 10058 10042',\n  'S 4 z 10105 10104',\n  'S 4 o 10107 10106',\n  'S 5 i 10093 10108',\n  'S 4 b 10058 10109',\n  'S 2 w 10029 10110',\n  'S 2 g 10029 10111',\n  'S 5 # 10113 10112',\n  'S 4 s 10114 10042',\n  'S 5 z 10058 10115',\n  'S 2 e 10042 10116',\n  'S 2 h 10117 10029',\n  'S 5 e 10058 10029',\n  'S 2 a 10042 10058',\n  'S 4 a 10119 10118',\n  'S 2 p 10121 10120',\n  'S 2 t 10058 10122',\n  'S 5 s 10124 10123',\n  'S 5 s 10042 10058',\n  'S 2 m 10029 10125',\n  'P er1',\n  'S 3 a 10127 10126',\n  'S 2 u 10129 10128',\n  'S 4 e 10131 10130',\n  'S 4 # 10133 10132',\n  'S 4 o 10135 10134',\n  'S 4 k 10093 10136',\n  'S 4 e 10138 10137',\n  'S 1 t 10058 10042',\n  'S 5 s 10140 10139',\n  'S 4 a 10042 10141',\n  'S 3 o 10142 10042',\n  'S 3 g 10093 10143',\n  'S 5 s 10144 10042',\n  'S 5 u 10058 10042',\n  'S 4 a 10042 10145',\n  'S 4 e 10029 10146',\n  'S 2 d 10148 10147',\n  'S 1 # 10150 10149',\n  'S 1 0 10152 10151',\n  'S 4 a 10154 10153',\n  'S 5 # 10058 10042',\n  'S 5 e 10156 10155',\n  'S 1 t 10058 10157',\n  'S 1 s 10042 10029',\n  'S 2 p 10159 10158',\n  'S 5 # 10042 10160',\n  'S 5 u 10058 10161',\n  'S 5 n 10042 10058',\n  'S 5 s 10042 10162',\n  'S 2 d 10042 10163',\n  'S 2 d 10058 10042',\n  'S 2 h 10029 10164',\n  'S 5 # 10166 10165',\n  'S 2 e 10168 10167',\n  'S 1 c 10170 10169',\n  'S 1 s 10058 10171',\n  'S 4 a 10173 10172',\n  'S 2 m 10042 10174',\n  'S 4 s 10176 10175',\n  'S 2 c 10042 10177',\n  'S 4 a 10179 10178',\n  'S 2 b 10180 10042',\n  'S 4 t 10182 10181',\n  'S 4 a 10184 10183',\n  'S 2 t 10058 10185',\n  'S 1 c 10187 10186',\n  'S 1 n 10093 10042',\n  'S 4 e 10042 10188',\n  'S 5 g 10144 10042',\n  'S 5 y 10058 10042',\n  'S 4 i 10058 10042',\n  'S 4 i 10042 10189',\n  'S 5 u 10058 10093',\n  'S 3 i 10190 10029',\n  'S 5 a 10042 10029',\n  'S 5 a 10029 10191',\n  'S 2 f 10029 10192',\n  'S 5 i 10194 10193',\n  'S 4 a 10042 10195',\n  'S 4 o 10042 10196',\n  'S 2 h 10058 10042',\n  'S 5 # 10042 10197',\n  'S 2 p 10042 10058',\n  'S 1 n 10058 10198',\n  'S 4 u 10042 10199',\n  'S 4 u 10058 10200',\n  'S 2 d 10042 10201',\n  'S 2 f 10058 10042',\n  'S 2 j 10042 10202',\n  'S 5 d 10058 10042',\n  'S 2 c 10029 10203',\n  'S 4 z 10058 10204',\n  'S 4 e 10205 10042',\n  'S 1 # 10207 10206',\n  'S 4 n 10209 10208',\n  'S 1 # 10211 10210',\n  'S 2 a 10042 10212',\n  'S 5 c 10058 10213',\n  'S 4 o 10215 10214',\n  'S 5 # 10042 10216',\n  'S 5 c 10058 10217',\n  'S 4 d 10219 10218',\n  'S 5 # 10221 10220',\n  'S 2 o 10042 10222',\n  'S 2 c 10224 10223',\n  'S 5 i 10058 10042',\n  'S 5 w 10058 10093',\n  'S 1 s 10042 10225',\n  'S 1 s 10058 10226',\n  'S 4 g 10228 10227',\n  'S 5 # 10042 10229',\n  'S 2 s 10231 10230',\n  'S 1 f 10042 10232',\n  'S 5 g 10093 10233',\n  'S 2 s 10235 10234',\n  'S 4 e 10042 10093',\n  'S 5 e 10029 10236',\n  'S 2 m 10029 10237',\n  'S 2 t 10029 10238',\n  'S 2 e 10042 10239',\n  'S 4 s 10241 10240',\n  'S 4 o 10042 10242',\n  'S 4 e 10042 10243',\n  'S 5 o 10042 10244',\n  'S 2 f 10058 10245',\n  'S 4 y 10042 10246',\n  'S 4 l 10093 10247',\n  'S 5 s 10042 10248',\n  'S 2 d 10042 10249',\n  'S 2 j 10029 10250',\n  'S 3 y 10252 10251',\n  'S 3 y 10042 10253',\n  'S 4 # 10255 10254',\n  'S 4 o 10257 10256',\n  'S 5 h 10093 10258',\n  'S 5 # 10259 10093',\n  'S 2 a 10261 10260',\n  'S 2 a 10262 10042',\n  'S 4 i 10042 10263',\n  'S 1 d 10029 10264',\n  'S 4 i 10266 10265',\n  'S 5 n 10267 10042',\n  'S 1 d 10058 10268',\n  'S 2 o 10042 10269',\n  'S 4 a 10271 10270',\n  'S 2 f 10272 10042',\n  'S 5 h 10058 10042',\n  'S 2 o 10042 10058',\n  'S 2 t 10058 10273',\n  'S 4 t 10042 10274',\n  'S 4 s 10275 10042',\n  'S 1 r 10093 10276',\n  'S 1 t 10093 10277',\n  'S 4 i 10279 10278',\n  'S 2 b 10058 10093',\n  'S 5 l 10058 10280',\n  'S 1 i 10029 10281',\n  'S 1 n 10042 10282',\n  'S 5 e 10042 10283',\n  'S 5 e 10284 10042',\n  'S 4 y 10042 10285',\n  'S 4 v 10058 10286',\n  'S 1 # 10042 10029',\n  'S 1 c 10029 10287',\n  'S 5 # 10042 10288',\n  'S 2 d 10058 10289',\n  'S 2 s 10093 10290',\n  'S 1 o 10058 10093',\n  'S 4 u 10042 10291',\n  'S 2 e 10042 10292',\n  'S 5 a 10294 10293',\n  'S 2 h 10058 10295',\n  'S 5 a 10297 10296',\n  'S 4 v 10058 10298',\n  'S 2 p 10058 10299',\n  'S 2 b 10121 10042',\n  'S 2 k 10029 10300',\n  'S 4 o 10042 10301',\n  'S 4 n 10093 10302',\n  'S 3 c 10058 10303',\n  'S 4 d 10305 10304',\n  'S 2 l 10058 10306',\n  'S 4 a 10308 10307',\n  'S 5 # 10042 10309',\n  'S 4 l 10093 10310',\n  'S 1 h 10058 10093',\n  'S 1 f 10312 10311',\n  'S 1 b 10042 10313',\n  'S 4 o 10042 10314',\n  'S 5 # 10042 10315',\n  'S 5 l 10042 10316',\n  'S 4 # 10042 10317',\n  'S 2 p 10042 10318',\n  'S 2 v 10042 10319',\n  'S 5 t 10319 10320',\n  'S 5 d 10058 10321',\n  'S 5 z 10058 10322',\n  'S 5 # 10154 10323',\n  'S 5 # 10058 10324',\n  'S 1 a 10325 10058',\n  'S 5 r 10042 10326',\n  'S 5 e 10058 10042',\n  'S 5 # 10327 10093',\n  'S 1 e 10093 10328',\n  'S 4 y 10330 10329',\n  'S 1 i 10029 10331',\n  'S 5 t 10333 10332',\n  'S 2 e 10093 10334',\n  'S 1 s 10042 10058',\n  'S 5 o 10042 10335',\n  'S 4 s 10042 10093',\n  'S 4 u 10042 10336',\n  'S 5 e 10093 10337',\n  'S 2 h 10029 10338',\n  'S 2 j 10029 10339',\n  'S 5 e 10341 10340',\n  'S 4 m 10343 10342',\n  'S 5 c 10042 10093',\n  'S 4 s 10058 10344',\n  'S 1 0 10042 10345',\n  'S 2 l 10058 10042',\n  'S 2 i 10042 10058',\n  'S 5 o 10347 10346',\n  'S 4 d 10042 10348',\n  'S 4 f 10058 10349',\n  'S 5 l 10042 10350',\n  'S 5 e 10352 10351',\n  'S 4 a 10354 10353',\n  'S 4 t 10093 10355',\n  'S 1 f 10058 10356',\n  'S 5 t 10358 10357',\n  'S 5 # 10360 10359',\n  'S 2 g 10058 10361',\n  'S 4 i 10363 10362',\n  'S 2 h 10324 10364',\n  'S 2 p 10366 10365',\n  'S 1 l 10368 10367',\n  'S 1 t 10370 10369',\n  'S 5 d 10093 10371',\n  'S 1 e 10058 10372',\n  'S 5 v 10058 10373',\n  'S 5 c 10058 10374',\n  'S 5 t 10093 10375',\n  'S 2 e 10042 10376',\n  'S 5 # 10042 10377',\n  'S 1 # 10042 10058',\n  'S 2 h 10042 10378',\n  'S 2 f 10380 10379',\n  'S 4 o 10382 10381',\n  'S 5 t 10384 10383',\n  'S 5 s 10058 10042',\n  'S 2 d 10042 10058',\n  'S 4 n 10042 10385',\n  'S 4 d 10093 10058',\n  'S 1 l 10058 10093',\n  'S 4 o 10387 10386',\n  'S 2 b 10042 10058',\n  'S 2 c 10042 10388',\n  'S 2 c 10029 10389',\n  'S 2 t 10058 10029',\n  'S 2 j 10058 10390',\n  'S 1 p 10042 10391',\n  'S 5 u 10393 10392',\n  'S 4 m 10058 10394',\n  'S 5 e 10029 10395',\n  'S 5 i 10029 10396',\n  'S 2 h 10398 10397',\n  'S 2 o 10042 10399',\n  'S 4 e 10042 10400',\n  'S 1 e 10093 10401',\n  'S 2 b 10058 10402',\n  'S 2 d 10058 10403',\n  'S 5 u 10405 10404',\n  'S 2 v 10058 10406',\n  'S 2 d 10093 10407',\n  'S 4 n 10058 10408',\n  'S 5 t 10042 10409',\n  'S 2 d 10042 10410',\n  'S 2 f 10042 10029',\n  'S 5 c 10042 10411',\n  'S 3 h 10412 10042',\n  'S 4 o 10042 10413',\n  'S 3 t 10058 10414',\n  'S 4 s 10416 10415',\n  'S 4 i 10418 10417',\n  'S 2 w 10420 10419',\n  'S 2 o 10042 10421',\n  'S 2 n 10058 10422',\n  'S 4 e 10275 10042',\n  'S 5 t 10042 10423',\n  'S 5 d 10425 10424',\n  'S 2 m 10058 10426',\n  'S 5 l 10058 10042',\n  'S 4 s 10428 10427',\n  'S 4 # 10058 10144',\n  'S 1 w 10430 10429',\n  'S 2 o 10042 10431',\n  'S 5 r 10058 10432',\n  'S 1 g 10042 10433',\n  'S 4 i 10042 10058',\n  'S 4 e 10435 10434',\n  'S 4 e 10093 10436',\n  'S 4 u 10042 10437',\n  'S 1 a 10058 10438',\n  'S 5 b 10042 10439',\n  'S 5 s 10282 10440',\n  'S 5 f 10042 10058',\n  'S 1 s 10442 10441',\n  'S 5 u 10444 10443',\n  'S 1 o 10058 10445',\n  'S 1 r 10058 10446',\n  'S 4 g 10448 10447',\n  'S 4 # 10450 10449',\n  'S 2 e 10042 10451',\n  'S 5 a 10042 10452',\n  'S 1 a 10058 10042',\n  'S 1 r 10029 10453',\n  'S 1 s 10058 10454',\n  'S 5 i 10093 10455',\n  'S 2 p 10058 10093',\n  'S 4 p 10058 10093',\n  'S 1 s 10042 10456',\n  'S 5 y 10029 10457',\n  'S 4 v 10459 10458',\n  'S 4 m 10093 10460',\n  'S 2 b 10058 10461',\n  'S 2 d 10058 10462',\n  'S 1 x 10093 10463',\n  'S 4 y 10058 10464',\n  'S 5 s 10466 10465',\n  'S 5 i 10468 10467',\n  'S 4 m 10058 10469',\n  'S 2 b 10470 10093',\n  'S 2 c 10093 10471',\n  'S 4 c 10065 10472',\n  'S 2 g 10058 10473',\n  'S 5 i 10029 10474',\n  'S 4 # 10042 10475',\n  'S 2 a 10058 10042',\n  'S 2 m 10042 10476',\n  'S 1 a 10058 10477',\n  'S 5 z 10479 10478',\n  'S 5 # 10480 10042',\n  'S 1 s 10042 10481',\n  'S 2 l 10042 10482',\n  'S 5 s 10484 10483',\n  'S 5 l 10058 10485',\n  'S 2 w 10058 10486',\n  'S 2 a 10042 10487',\n  'S 2 p 10042 10488',\n  'S 5 # 10042 10489',\n  'S 2 p 10058 10042',\n  'S 5 u 10058 10249',\n  'S 4 # 10042 10490',\n  'S 5 # 10042 10491',\n  'S 1 u 10493 10492',\n  'S 4 i 10093 10042',\n  'S 2 i 10093 10494',\n  'S 4 o 10042 10495',\n  'S 5 s 10042 10496',\n  'S 5 b 10058 10497',\n  'S 5 s 10042 10498',\n  'S 4 o 10500 10499',\n  'S 4 y 10042 10501',\n  'S 1 q 10058 10502',\n  'S 5 l 10042 10503',\n  'S 5 t 10058 10504',\n  'S 2 b 10506 10505',\n  'S 4 t 10042 10507',\n  'S 2 b 10058 10508',\n  'S 1 t 10093 10058',\n  'S 5 b 10058 10509',\n  'S 1 c 10058 10510',\n  'S 5 z 10058 10511',\n  'S 2 f 10179 10042',\n  'S 4 u 10042 10512',\n  'S 1 a 10058 10513',\n  'S 5 # 10042 10058',\n  'S 5 z 10058 10514',\n  'S 1 e 10515 10042',\n  'S 1 l 10058 10516',\n  'S 4 v 10093 10517',\n  'S 2 v 10042 10029',\n  'S 2 d 10029 10518',\n  'S 4 n 10520 10519',\n  'S 5 a 10521 10058',\n  'S 1 t 10523 10522',\n  'S 2 t 10525 10524',\n  'S 4 c 10527 10526',\n  'S 2 t 10058 10528',\n  'S 4 m 10093 10529',\n  'S 1 l 10058 10530',\n  'S 2 v 10042 10058',\n  'S 5 e 10531 10093',\n  'S 4 l 10228 10532',\n  'S 2 m 10058 10093',\n  'S 4 t 10058 10093',\n  'S 2 f 10058 10533',\n  'S 4 k 10093 10534',\n  'S 5 r 10058 10535',\n  'S 2 s 10042 10029',\n  'S 3 d 10537 10536',\n  'S 2 s 10538 10042',\n  'S 3 d 10042 10539',\n  'S 5 n 10541 10540',\n  'S 4 i 10058 10542',\n  'S 1 s 10042 10543',\n  'S 1 i 10058 10544',\n  'S 2 m 10042 10545',\n  'S 5 l 10058 10546',\n  'S 1 b 10042 10547',\n  'S 1 k 10058 10548',\n  'S 2 c 10042 10549',\n  'S 1 l 10551 10550',\n  'S 5 e 10552 10042',\n  'S 5 m 10042 10553',\n  'S 5 n 10042 10554',\n  'S 5 e 10093 10555',\n  'S 4 h 10058 10556',\n  'S 5 # 10042 10557',\n  'S 4 u 10058 10558',\n  'S 4 e 10042 10559',\n  'S 1 f 10042 10560',\n  'S 5 p 10058 10561',\n  'S 5 l 10042 10058',\n  'S 4 # 10093 10562',\n  'S 5 w 10093 10042',\n  'S 2 o 10042 10563',\n  'S 2 c 10058 10042',\n  'S 2 t 10042 10564',\n  'S 5 r 10058 10565',\n  'S 5 d 10567 10566',\n  'S 4 t 10042 10568',\n  'S 4 e 10042 10569',\n  'S 1 o 10058 10042',\n  'S 2 h 10042 10570',\n  'S 1 i 10058 10571',\n  'S 4 e 10042 10572',\n  'S 5 t 10058 10573',\n  'S 2 e 10575 10574',\n  'S 2 t 10577 10576',\n  'S 2 c 10042 10029',\n  'S 4 a 10042 10578',\n  'S 5 l 10093 10579',\n  'S 2 p 10029 10580',\n  'S 2 r 10042 10581',\n  'S 1 o 10058 10582',\n  'S 2 s 10583 10058',\n  'S 4 e 10042 10584',\n  'S 5 p 10042 10585',\n  'S 1 o 10058 10586',\n  'S 1 n 10058 10587',\n  'S 4 t 10589 10588',\n  'S 2 x 10058 10093',\n  'S 2 d 10093 10058',\n  'S 4 k 10093 10590',\n  'S 2 m 10592 10591',\n  'S 4 m 10594 10593',\n  'S 4 d 10093 10595',\n  'S 2 g 10058 10596',\n  'S 5 i 10598 10597',\n  'S 5 f 10058 10599',\n  'S 1 # 10042 10600',\n  'S 5 n 10601 10042',\n  'S 5 a 10042 10058',\n  'S 2 a 10058 10602',\n  'S 5 v 10058 10603',\n  'S 2 m 10058 10604',\n  'S 4 c 10058 10042',\n  'S 1 l 10058 10605',\n  'S 1 p 10058 10606',\n  'S 2 g 10058 10042',\n  'S 5 i 10607 10042',\n  'S 2 u 10042 10608',\n  'S 5 e 10058 10324',\n  'S 2 a 10042 10609',\n  'S 2 s 10611 10610',\n  'S 2 i 10058 10612',\n  'S 2 v 10058 10042',\n  'S 2 g 10042 10613',\n  'S 1 y 10042 10614',\n  'S 1 h 10093 10042',\n  'S 1 g 10616 10615',\n  'S 4 i 10058 10029',\n  'S 5 n 10617 10042',\n  'S 5 l 10093 10618',\n  'S 1 i 10058 10619',\n  'S 4 a 10058 10620',\n  'S 5 e 10093 10621',\n  'S 1 # 10623 10622',\n  'S 2 v 10042 10624',\n  'S 2 t 10114 10042',\n  'S 4 y 10626 10625',\n  'S 4 e 10058 10042',\n  'S 5 n 10058 10627',\n  'S 2 t 10042 10628',\n  'S 5 s 10042 10629',\n  'S 2 p 10058 10630',\n  'S 2 b 10042 10631',\n  'S 2 b 10633 10632',\n  'S 1 s 10093 10634',\n  'S 1 t 10042 10635',\n  'S 5 n 10636 10042',\n  'S 5 n 10058 10324',\n  'S 4 # 10042 10637',\n  'S 2 t 10093 10638',\n  'S 2 h 10042 10639',\n  'S 4 t 10641 10640',\n  'S 2 b 10058 10642',\n  'S 1 e 10058 10093',\n  'S 5 y 10058 10643',\n  'S 4 t 10093 10644',\n  'S 1 t 10058 10645',\n  'S 1 e 10093 10058',\n  'S 4 n 10647 10646',\n  'S 2 b 10058 10648',\n  'S 2 v 10058 10649',\n  'S 1 s 10042 10650',\n  'S 1 a 10042 10651',\n  'S 4 g 10652 10093',\n  'S 2 f 10058 10093',\n  'S 2 t 10093 10653',\n  'S 4 m 10093 10654',\n  'S 4 m 10093 10655',\n  'S 4 m 10058 10093',\n  'S 2 c 10058 10656',\n  'S 5 s 10657 10042',\n  'S 4 e 10658 10042',\n  'S 2 e 10042 10659',\n  'S 1 s 10661 10660',\n  'S 4 o 10058 10662',\n  'S 1 u 10058 10663',\n  'S 1 e 10058 10664',\n  'S 2 n 10042 10665',\n  'S 2 y 10042 10058',\n  'S 2 y 10042 10666',\n  'S 1 m 10058 10667',\n  'S 1 s 10058 10042',\n  'S 2 m 10058 10042',\n  'S 5 n 10668 10042',\n  'S 5 o 10670 10669',\n  'S 1 p 10042 10671',\n  'S 2 e 10029 10042',\n  'S 4 a 10058 10093',\n  'S 5 n 10672 10042',\n  'S 5 w 10029 10673',\n  'S 4 o 10058 10042',\n  'S 4 y 10093 10674',\n  'S 5 a 10058 10675',\n  'S 2 v 10676 10093',\n  'S 1 a 10042 10656',\n  'S 4 n 10678 10677',\n  'S 1 a 10042 10679',\n  'S 5 e 10042 10680',\n  'S 2 c 10042 10681',\n  'S 2 p 10058 10682',\n  'S 2 c 10058 10683',\n  'S 4 b 10179 10042',\n  'S 5 a 10685 10684',\n  'S 1 l 10058 10686',\n  'S 2 c 10093 10058',\n  'S 1 s 10058 10093',\n  'S 2 s 10042 10058',\n  'S 4 s 10042 10687',\n  'S 5 o 10689 10688',\n  'S 5 e 10029 10690',\n  'S 5 s 10692 10691',\n  'S 2 b 10694 10693',\n  'S 1 a 10696 10695',\n  'S 4 t 10093 10697',\n  'S 4 e 10163 10058',\n  'S 2 p 10699 10698',\n  'S 1 s 10700 10058',\n  'S 1 o 10058 10701',\n  'S 1 e 10093 10702',\n  'S 4 t 10058 10703',\n  'S 1 x 10042 10704',\n  'S 5 c 10058 10042',\n  'S 2 s 10042 10093',\n  'S 2 v 10093 10705',\n  'S 2 m 10058 10706',\n  'S 4 p 10058 10707',\n  'S 5 n 10058 10042',\n  'S 1 s 10058 10708',\n  'S 2 n 10058 10042',\n  'S 3 b 10058 10042',\n  'S 5 b 10058 10709',\n  'S 5 c 10042 10710',\n  'S 1 g 10042 10711',\n  'S 1 i 10042 10058',\n  'S 1 c 10058 10389',\n  'S 1 e 10042 10712',\n  'S 2 k 10058 10713',\n  'S 2 f 10042 10714',\n  'S 2 b 10058 10042',\n  'S 4 d 10555 10715',\n  'S 1 d 10093 10042',\n  'S 2 i 10029 10716',\n  'S 4 a 10042 10093',\n  'S 4 y 10042 10717',\n  'S 5 # 10042 10430',\n  'S 2 k 10689 10093',\n  'S 5 i 10058 10093',\n  'S 5 # 10719 10718',\n  'S 5 # 10720 10042',\n  'S 1 c 10058 10721',\n  'S 4 g 10042 10722',\n  'S 4 f 10042 10723',\n  'S 1 c 10058 10724',\n  'S 1 o 10058 10725',\n  'S 1 s 10093 10726',\n  'S 4 b 10058 10093',\n  'S 4 s 10093 10727',\n  'S 1 m 10042 10567',\n  'S 4 g 10093 10728',\n  'S 4 k 10058 10093',\n  'S 2 w 10042 10729',\n  'S 2 o 10042 10730',\n  'S 1 i 10042 10731',\n  'S 2 u 10042 10732',\n  'S 5 s 10058 10733',\n  'S 2 t 10735 10734',\n  'S 5 a 10093 10058',\n  'S 4 a 10058 10736',\n  'S 2 g 10058 10737',\n  'S 1 s 10738 10058',\n  'S 4 o 10058 10739',\n  'S 2 t 10740 10093',\n  'S 1 d 10058 10741',\n  'S 2 t 10058 10742',\n  'S 2 h 10042 10743',\n  'S 2 c 10744 10093',\n  'S 2 b 10093 10745',\n  'S 5 u 10746 10470',\n  'S 3 p 10042 10747',\n  'S 5 y 10749 10748',\n  'S 2 t 10042 10750',\n  'S 4 a 10154 10751',\n  'S 2 c 10042 10752',\n  'S 2 u 10042 10753',\n  'S 1 s 10755 10754',\n  'S 4 i 10042 10756',\n  'S 5 # 10042 10757',\n  'S 5 n 10759 10758',\n  'S 1 o 10761 10760',\n  'S 2 f 10762 10042',\n  'S 1 g 10042 10763',\n  'S 2 t 10042 10764',\n  'S 5 # 10765 10058',\n  'S 5 # 10042 10766',\n  'S 2 n 10058 10767',\n  'S 1 a 10058 10612',\n  'S 2 e 10093 10768',\n  'S 5 a 10093 10769',\n  'S 5 a 10470 10093',\n  'S 2 m 10042 10770',\n  'S 4 a 10772 10771',\n  'S 4 u 10058 10773',\n  'S 5 s 10775 10774',\n  'S 5 y 10058 10776',\n  'S 5 a 10058 10777',\n  'S 1 s 10093 10058',\n  'S 4 o 10042 10778',\n  'S 4 l 10058 10779',\n  'S 4 s 10093 10058',\n  'S 4 l 10093 10058',\n  'S 1 a 10093 10058',\n  'S 2 v 10093 10058',\n  'S 4 d 10058 10780',\n  'S 1 n 10058 10781',\n  'S 4 t 10093 10058',\n  'S 2 h 10093 10782',\n  'S 4 s 10058 10093',\n  'S 4 u 10042 10783',\n  'S 4 y 10785 10784',\n  'S 1 u 10058 10786',\n  'S 2 c 10042 10787',\n  'S 4 t 10042 10788',\n  'S 2 u 10042 10789',\n  'S 1 p 10058 10790',\n  'S 2 t 10058 10791',\n  'S 2 t 10042 10425',\n  'S 1 h 10042 10792',\n  'S 4 a 10794 10793',\n  'S 5 c 10042 10795',\n  'S 1 m 10042 10796',\n  'S 1 a 10798 10797',\n  'S 4 t 10042 10799',\n  'S 4 t 10058 10042',\n  'S 2 h 10058 10800',\n  'S 2 s 10058 10801',\n  'S 1 l 10058 10802',\n  'S 5 e 10042 10373',\n  'S 5 n 10804 10803',\n  'S 5 o 10093 10805',\n  'S 1 y 10058 10806',\n  'S 2 n 10042 10029',\n  'S 4 e 10808 10807',\n  'S 1 m 10042 10809',\n  'S 4 a 10042 10810',\n  'S 2 c 10058 10811',\n  'S 2 s 10093 10058',\n  'S 1 l 10093 10042',\n  'S 5 o 10058 10093',\n  'S 4 n 10093 10812',\n  'S 4 e 10058 10813',\n  'S 4 n 10058 10093',\n  'S 2 v 10058 10814',\n  'S 4 b 10058 10815',\n  'S 3 g 10042 10816',\n  'S 5 # 10818 10817',\n  'S 2 n 10042 10819',\n  'S 4 t 10042 10058',\n  'S 5 e 10042 10820',\n  'S 1 s 10042 10821',\n  'S 2 o 10042 10822',\n  'S 1 y 10058 10823',\n  'S 1 u 10058 10824',\n  'S 4 e 10042 10825',\n  'S 5 r 10042 10826',\n  'S 1 s 10029 10042',\n  'S 1 j 10042 10827',\n  'S 4 e 10042 10828',\n  'S 2 r 10058 10829',\n  'S 2 t 10042 10830',\n  'S 4 c 10058 10831',\n  'S 1 a 10042 10124',\n  'S 1 e 10058 10042',\n  'S 1 a 10058 10832',\n  'S 5 l 10833 10042',\n  'S 1 a 10042 10058',\n  'S 5 i 10093 10594',\n  'S 1 n 10093 10834',\n  'S 4 o 10836 10835',\n  'S 5 o 10042 10837',\n  'S 2 v 10838 10058',\n  'S 4 e 10552 10058',\n  'S 2 w 10093 10058',\n  'S 1 s 10093 10839',\n  'S 1 m 10058 10840',\n  'S 5 d 10058 10841',\n  'S 2 s 10093 10741',\n  'S 2 e 10042 10842',\n  'S 4 o 10091 10843',\n  'S 1 g 10545 10042',\n  'S 1 e 10042 10844',\n  'S 5 # 10042 10845',\n  'S 2 l 10042 10846',\n  'S 2 i 10042 10668',\n  'S 1 e 10848 10847',\n  'S 1 g 10042 10849',\n  'S 4 y 10042 10850',\n  'S 1 m 10042 10851',\n  'S 4 i 10853 10852',\n  'S 1 w 10029 10042',\n  'S 4 i 10855 10854',\n  'S 2 v 10058 10856',\n  'S 2 n 10058 10857',\n  'S 1 n 10042 10058',\n  'S 1 e 10042 10858',\n  'S 5 e 10093 10859',\n  'S 4 y 10861 10860',\n  'S 2 t 10058 10862',\n  'S 5 d 10058 10863',\n  'S 1 o 10058 10864',\n  'S 1 p 10058 10042',\n  'S 2 m 10093 10865',\n  'S 2 t 10058 10866',\n  'S 1 a 10042 10867',\n  'S 5 s 10869 10868',\n  'S 2 r 10042 10870',\n  'S 5 s 10042 10871',\n  'S 1 t 10042 10872',\n  'S 2 h 10832 10873',\n  'S 2 r 10042 10658',\n  'S 1 a 10042 10874',\n  'S 4 a 10042 10875',\n  'S 2 e 10876 10042',\n  'S 1 t 10042 10877',\n  'S 1 m 10042 10878',\n  'S 5 t 10058 10879',\n  'S 5 a 10042 10880',\n  'S 5 h 10042 10881',\n  'S 2 t 10058 10294',\n  'S 2 m 10042 10058',\n  'S 1 r 10058 10635',\n  'S 2 u 10883 10882',\n  'S 1 e 10042 10058',\n  'S 5 u 10058 10884',\n  'S 5 r 10058 10885',\n  'S 5 g 10042 10058',\n  'S 4 d 10042 10886',\n  'S 5 c 10058 10366',\n  'S 2 s 10042 10887',\n  'S 4 e 10889 10888',\n  'S 4 i 10890 10042',\n  'S 2 u 10042 10891',\n  'S 5 l 10042 10892',\n  'S 2 p 10042 10893',\n  'S 1 n 10058 10894',\n  'S 1 i 10042 10895',\n  'S 4 m 10042 10896',\n  'S 4 # 10042 10897',\n  'S 1 n 10042 10898',\n  'S 5 e 10042 10029',\n  'S 5 u 10839 10899',\n  'S 5 o 10042 10900',\n  'S 2 m 10058 10901',\n  'S 2 y 10903 10902',\n  'S 1 e 10058 10904',\n  'S 1 e 10058 10905',\n  'S 1 n 10042 10906',\n  'S 2 v 10908 10907',\n  'S 2 o 10042 10909',\n  'S 4 a 10911 10910',\n  'S 1 q 10042 10912',\n  'S 2 t 10058 10913',\n  'S 1 a 10058 10914',\n  'S 2 w 10042 10915',\n  'S 2 h 10058 10916',\n  'S 2 i 10042 10917',\n  'S 2 c 10042 10918',\n  'S 4 h 10042 10919',\n  'S 1 v 10042 10920',\n  'S 1 p 10042 10921',\n  'S 2 f 10923 10922',\n  'S 1 c 10058 10924',\n  'S 5 s 10042 10925',\n  'S 1 a 10058 10926',\n  'S 4 l 10058 10042',\n  'S 4 s 10042 10927',\n  'S 2 p 10058 10928',\n  'S 1 o 10058 10929',\n  'S 4 v 10093 10930',\n  'S 4 t 10093 10931',\n  'S 4 i 10042 10932',\n  'S 4 i 10934 10933',\n  'S 1 i 10058 10935',\n  'S 2 p 10042 10936',\n  'S 1 c 10042 10937',\n  'S 1 i 10042 10938',\n  'S 4 k 10042 10939',\n  'S 1 n 10058 10042',\n  'S 2 r 10042 10940',\n  'S 1 n 10042 10941',\n  'S 1 # 10042 10093',\n  'S 4 o 10042 10942',\n  'S 4 a 10944 10943',\n  'S 4 f 10832 10042',\n  'S 1 m 10058 10945',\n  'S 5 s 10058 10946',\n  'S 2 f 10042 10567',\n  'S 4 m 10058 10947',\n  'S 5 a 10058 10042',\n  'S 1 i 10058 10121',\n  'S 1 e 10058 10948',\n  'S 1 s 10093 10949',\n  'S 4 g 10093 10950',\n  'S 2 t 10042 10412',\n  'S 1 l 10951 10042',\n  'S 2 t 10042 10952',\n  'S 5 c 10042 10953',\n  'S 1 e 10058 10954',\n  'S 2 l 10042 10058',\n  'S 1 c 10042 10955',\n  'S 4 l 10042 10956',\n  'S 2 b 10058 10957',\n  'S 2 d 10058 10958',\n  'S 4 y 10029 10959',\n  'S 5 # 10029 10960',\n  'S 1 s 10058 10961',\n  'S 4 c 10042 10962',\n  'S 1 g 10042 10963',\n  'S 2 p 10965 10964',\n  'S 1 f 10058 10121',\n  'S 1 c 10093 10966',\n  'S 4 s 10968 10967',\n  'S 2 m 10042 10294',\n  'S 2 h 10058 10969',\n  'S 5 m 10058 10042',\n  'S 1 c 10058 10970',\n  'S 1 u 10042 10971',\n  'S 5 d 10042 10972',\n  'S 2 n 10973 10058',\n  'S 1 h 10058 10974',\n  'S 1 d 10976 10975',\n  'S 4 e 10978 10977',\n  'S 1 h 10029 10042',\n  'S 1 n 10979 10042',\n  'S 1 t 10042 10980',\n  'S 5 r 10982 10981',\n  'S 4 s 10983 10058',\n  'S 4 n 10093 10984',\n  'S 4 b 10093 10058',\n  'S 1 n 10058 10093',\n  'S 5 e 10985 10042',\n  'S 5 l 10042 10986',\n  'S 2 t 10058 10987',\n  'S 5 a 10042 10988',\n  'S 1 i 10058 10042',\n  'S 1 k 10058 10989',\n  'S 5 t 10029 10042',\n  'S 4 e 10042 10029',\n  'S 1 h 10029 10990',\n  'S 1 h 10042 10991',\n  'S 5 s 10042 10992',\n  'S 2 i 10042 10993',\n  'S 2 w 10327 10994',\n  'S 1 n 10995 10058',\n  'S 5 t 10058 10996',\n  'S 1 e 10058 10744',\n  'S 2 n 10042 10997',\n  'S 5 k 10042 10937',\n  'S 1 o 10042 10998',\n  'S 2 h 10999 10042',\n  'S 2 b 10042 11000',\n  'S 1 m 10042 10029',\n  'S 5 l 10042 10029',\n  'S 4 m 10927 10058',\n  'S 1 h 10042 11001',\n  'S 1 c 11003 11002',\n  'S 2 g 10058 10093',\n  'S 1 m 10093 10777',\n  'S 2 u 10042 11004',\n  'S 2 d 10042 11005',\n  'S 4 e 10042 10058',\n  'S 2 m 10042 11006',\n  'S 5 n 10937 11007',\n  'S 2 t 10058 11008',\n  'S 2 k 10058 10093',\n  'S 2 i 10042 10937',\n  'S 2 i 10042 11009',\n  'S 1 e 10058 11010',\n  'S 1 i 10042 11011',\n  'S 2 b 10058 11012',\n  'S 1 l 10042 10058',\n  'S 2 v 10042 11013',\n  'S 2 t 10801 11014',\n  'S 5 a 11015 10058',\n  'S 1 o 10058 11016',\n  'S 5 c 10042 10058',\n  'S 4 s 11017 10058',\n  'S 2 i 10058 10042',\n  'S 1 i 10093 10058',\n  'I 11018 s',\n  'S 4 # 11020 11019',\n  'S 4 h 11022 11021',\n  'S 3 t 11024 11023',\n  'S 4 s 11026 11025',\n  'S 3 t 11028 11027',\n  'S 3 s 11030 11029',\n  'P s',\n  'S 5 h 11032 11031',\n  'S 3 e 11034 11033',\n  'S 1 # 11036 11035',\n  'P epsilon',\n  'S 3 u 11038 11037',\n  'S 1 n 11024 11039',\n  'S 2 0 11041 11040',\n  'S 3 t 11028 11042',\n  'S 5 p 11044 11043',\n  'S 6 o 11028 11045',\n  'P sh',\n  'S 3 i 11046 11035',\n  'S 3 i 11048 11047',\n  'S 2 a 11049 11024',\n  'S 2 e 11050 11024',\n  'S 4 t 11052 11051',\n  'S 4 z 11035 11053',\n  'S 4 c 11054 11024',\n  'S 1 0 11028 11055',\n  'S 3 i 11024 11028',\n  'S 2 n 11057 11056',\n  'S 6 n 11024 11035',\n  'S 2 t 11059 11058',\n  'S 2 a 11028 11060',\n  'S 1 h 11024 11061',\n  'S 1 i 11024 11062',\n  'S 3 s 11064 11063',\n  'S 6 w 11065 11024',\n  'S 4 j 11035 11066',\n  'S 6 o 11068 11067',\n  'S 1 # 11070 11069',\n  'S 2 m 11028 11071',\n  'S 1 # 11024 11028',\n  'S 3 k 11024 11072',\n  'S 3 e 11024 11073',\n  'S 2 o 11028 11074',\n  'P z',\n  'S 1 l 11024 11075',\n  'S 4 k 11024 11076',\n  'S 5 o 11078 11077',\n  'S 1 # 11024 11079',\n  'S 4 r 11081 11080',\n  'S 6 i 11083 11082',\n  'S 2 0 11035 11024',\n  'S 5 o 11085 11084',\n  'S 2 f 11087 11086',\n  'S 1 0 11028 11088',\n  'S 3 p 11024 11089',\n  'S 3 h 11024 11090',\n  'S 2 e 11061 11091',\n  'S 1 u 11024 11092',\n  'S 6 n 11094 11093',\n  'S 4 u 11096 11095',\n  'S 6 n 11035 11024',\n  'S 2 r 11024 11061',\n  'S 6 a 11024 11097',\n  'S 5 i 11024 11035',\n  'S 3 z 11028 11098',\n  'S 1 0 11035 11024',\n  'S 6 a 11100 11099',\n  'S 1 s 11061 11101',\n  'S 5 t 11024 11102',\n  'S 3 o 11024 11103',\n  'S 2 f 11028 11104',\n  'S 3 c 11024 11105',\n  'S 1 i 11024 11106',\n  'S 2 u 11061 11107',\n  'S 1 t 11028 11024',\n  'S 4 z 11109 11108',\n  'S 4 i 11111 11110',\n  'S 2 e 11113 11112',\n  'S 5 r 11035 11114',\n  'S 5 r 11115 11024',\n  'S 1 # 11116 11035',\n  'S 6 o 11028 11117',\n  'S 3 u 11028 11118',\n  'S 3 u 11024 11119',\n  'S 2 b 11121 11120',\n  'S 3 a 11024 11028',\n  'S 2 i 11028 11122',\n  'S 2 k 11124 11123',\n  'S 1 n 11126 11125',\n  'S 1 o 11024 11127',\n  'S 4 m 11129 11128',\n  'S 6 o 11024 11035',\n  'S 4 z 11035 11130',\n  'S 5 o 11132 11131',\n  'S 5 a 11134 11133',\n  'S 1 m 11024 11135',\n  'S 2 i 11136 11024',\n  'S 4 u 11137 11024',\n  'S 6 a 11024 11138',\n  'S 1 w 11140 11139',\n  'S 5 m 11119 11028',\n  'S 2 l 11024 11028',\n  'S 2 g 11103 11141',\n  'S 3 u 11028 11142',\n  'S 1 p 11144 11143',\n  'S 3 f 11024 11145',\n  'S 3 e 11024 11146',\n  'S 1 o 11061 11147',\n  'S 3 a 11024 11061',\n  'S 2 c 11024 11148',\n  'S 4 e 11150 11149',\n  'S 5 # 11061 11151',\n  'S 4 c 11024 11152',\n  'S 5 g 11154 11153',\n  'S 3 n 11035 11155',\n  'S 6 v 11061 11156',\n  'S 4 i 11035 11157',\n  'S 1 # 11024 11158',\n  'S 1 # 11035 11024',\n  'S 6 e 11035 11024',\n  'S 6 e 11159 11035',\n  'S 3 i 11161 11160',\n  'S 5 # 11028 11024',\n  'S 2 d 11162 11028',\n  'S 3 i 11028 11163',\n  'S 1 # 11165 11164',\n  'S 5 u 11028 11166',\n  'S 3 a 11168 11167',\n  'S 1 i 11024 11061',\n  'S 1 t 11061 11169',\n  'S 1 i 11171 11170',\n  'S 4 u 11173 11172',\n  'S 3 r 11024 11174',\n  'S 5 s 11061 11175',\n  'S 4 p 11024 11176',\n  'P zh',\n  'S 3 e 11061 11024',\n  'S 3 l 11035 11153',\n  'S 6 s 11178 11177',\n  'S 1 l 11028 11024',\n  'S 1 d 11024 11179',\n  'S 3 u 11035 11180',\n  'S 1 e 11028 11181',\n  'S 5 a 11182 11028',\n  'S 3 i 11028 11183',\n  'S 6 # 11024 11184',\n  'S 1 r 11186 11185',\n  'S 2 b 11028 11187',\n  'S 5 l 11028 11188',\n  'S 2 p 11190 11189',\n  'S 2 z 11061 11191',\n  'S 1 l 11061 11192',\n  'S 1 a 11024 11193',\n  'S 2 t 11024 11061',\n  'S 4 c 11195 11194',\n  'S 5 r 11197 11196',\n  'S 3 n 11199 11198',\n  'S 3 r 11024 11200',\n  'S 3 d 11061 11201',\n  'S 1 # 11024 11202',\n  'S 1 p 11061 11024',\n  'S 1 b 11024 11203',\n  'S 2 r 11024 11204',\n  'S 6 c 11028 11205',\n  'S 2 r 11024 11028',\n  'S 3 o 11028 11024',\n  'S 5 i 11028 11103',\n  'S 2 r 11207 11206',\n  'S 2 g 11028 11208',\n  'S 5 o 11024 11209',\n  'S 6 # 11028 11210',\n  'S 3 o 11212 11211',\n  'S 3 o 11061 11024',\n  'S 2 y 11024 11213',\n  'S 1 s 11061 11214',\n  'S 2 k 11061 11024',\n  'S 4 i 11216 11215',\n  'S 5 i 11218 11217',\n  'S 6 l 11153 11219',\n  'S 3 n 11221 11220',\n  'S 2 o 11223 11222',\n  'S 5 y 11061 11224',\n  'S 5 i 11226 11225',\n  'S 3 t 11024 11227',\n  'S 2 i 11024 11228',\n  'S 6 d 11028 11229',\n  'S 3 o 11024 11035',\n  'S 1 l 11028 11230',\n  'S 2 h 11028 11231',\n  'S 5 l 11028 11232',\n  'S 5 # 11233 11024',\n  'S 2 r 11028 11234',\n  'S 5 e 11024 11235',\n  'S 3 h 11237 11236',\n  'S 2 o 11061 11238',\n  'S 1 u 11061 11239',\n  'S 1 a 11061 11190',\n  'S 3 x 11028 11240',\n  'S 5 a 11242 11241',\n  'S 2 e 11243 11024',\n  'S 2 o 11035 11024',\n  'S 3 e 11244 11024',\n  'S 6 e 11153 11245',\n  'S 6 e 11035 11246',\n  'S 5 # 11248 11247',\n  'S 5 r 11250 11249',\n  'S 1 e 11061 11024',\n  'S 6 l 11061 11251',\n  'S 6 c 11061 11024',\n  'S 3 w 11061 11252',\n  'S 1 c 11024 11253',\n  'S 1 f 11024 11254',\n  'S 1 t 11028 11255',\n  'S 1 l 11024 11256',\n  'S 6 r 11028 11257',\n  'S 2 l 11028 11024',\n  'S 2 h 11024 11258',\n  'S 6 n 11260 11259',\n  'S 3 e 11261 11061',\n  'S 2 c 11024 11262',\n  'S 1 u 11264 11263',\n  'S 2 l 11266 11265',\n  'S 4 p 11268 11267',\n  'S 2 p 11270 11269',\n  'S 6 # 11272 11271',\n  'S 5 o 11024 11061',\n  'S 5 m 11061 11273',\n  'S 2 e 11153 11024',\n  'S 6 g 11024 11274',\n  'S 5 d 11276 11275',\n  'S 3 p 11024 11277',\n  'S 3 i 11061 11278',\n  'S 1 # 11061 11279',\n  'S 2 c 11061 11280',\n  'S 1 0 11282 11281',\n  'S 4 o 11284 11283',\n  'S 1 h 11028 11285',\n  'S 6 i 11287 11286',\n  'S 1 b 11028 11288',\n  'S 6 v 11028 11289',\n  'S 2 l 11291 11290',\n  'S 2 r 11140 11024',\n  'S 5 i 11024 11028',\n  'S 1 q 11024 11292',\n  'S 1 i 11061 11293',\n  'S 2 l 11061 11294',\n  'S 2 l 11024 11061',\n  'S 2 c 11024 11295',\n  'S 1 l 11061 11296',\n  'S 4 o 11298 11297',\n  'S 3 w 11061 11024',\n  'S 3 u 11300 11299',\n  'S 6 i 11061 11301',\n  'S 6 k 11024 11302',\n  'S 2 n 11153 11303',\n  'S 5 l 11061 11024',\n  'S 2 i 11035 11024',\n  'S 5 r 11305 11304',\n  'S 3 a 11024 11306',\n  'S 3 a 11308 11307',\n  'S 5 d 11061 11024',\n  'S 1 r 11061 11309',\n  'S 3 d 11061 11310',\n  'S 3 r 11024 11311',\n  'S 3 i 11028 11312',\n  'S 1 g 11314 11313',\n  'S 1 l 11028 11315',\n  'S 1 i 11024 11316',\n  'S 5 u 11028 11317',\n  'S 5 f 11024 11028',\n  'S 1 o 11028 11318',\n  'S 1 b 11028 11319',\n  'S 2 w 11024 11320',\n  'S 6 n 11028 11024',\n  'S 2 f 11024 11321',\n  'S 2 a 11061 11322',\n  'S 2 g 11061 11323',\n  'S 1 a 11061 11324',\n  'S 1 a 11061 11024',\n  'S 3 g 11326 11325',\n  'S 5 r 11328 11327',\n  'S 3 i 11330 11329',\n  'S 5 v 11024 11331',\n  'S 1 e 11061 11332',\n  'S 1 t 11061 11333',\n  'S 3 o 11024 11334',\n  'S 2 r 11336 11335',\n  'S 2 e 11338 11337',\n  'S 3 p 11024 11339',\n  'S 3 l 11024 11340',\n  'S 2 r 11061 11341',\n  'S 3 u 11024 11061',\n  'S 6 s 11061 11342',\n  'S 2 u 11024 11343',\n  'S 4 m 11061 11024',\n  'S 5 i 11345 11344',\n  'S 2 a 11028 11024',\n  'S 1 h 11024 11346',\n  'S 1 c 11348 11347',\n  'S 2 c 11028 11349',\n  'S 2 l 11028 11350',\n  'S 5 e 11352 11351',\n  'S 6 l 11028 11353',\n  'S 1 e 11264 11061',\n  'S 2 g 11061 11024',\n  'S 2 d 11061 11354',\n  'S 2 e 11356 11355',\n  'S 5 e 11358 11357',\n  'S 4 b 11061 11359',\n  'S 3 a 11361 11360',\n  'S 2 v 11061 11362',\n  'S 3 e 11364 11363',\n  'S 5 t 11061 11365',\n  'S 5 # 11024 11366',\n  'S 6 e 11061 11367',\n  'S 3 a 11024 11035',\n  'S 3 a 11153 11024',\n  'S 3 i 11369 11368',\n  'S 5 n 11371 11370',\n  'S 3 i 11061 11372',\n  'S 3 y 11061 11373',\n  'S 1 o 11024 11061',\n  'S 2 w 11061 11374',\n  'S 2 b 11024 11375',\n  'S 1 u 11024 11376',\n  'S 4 o 11024 11377',\n  'S 1 f 11379 11378',\n  'S 2 o 11028 11024',\n  'S 2 u 11140 11024',\n  'S 1 v 11024 11380',\n  'S 5 r 11381 11024',\n  'S 6 f 11028 11382',\n  'S 5 i 11028 11383',\n  'S 1 d 11024 11384',\n  'S 1 d 11028 11385',\n  'S 2 j 11024 11386',\n  'S 1 a 11388 11387',\n  'S 1 r 11390 11389',\n  'S 1 n 11024 11061',\n  'S 2 d 11392 11391',\n  'S 6 # 11394 11393',\n  'S 1 i 11061 11395',\n  'S 1 # 11397 11396',\n  'S 2 e 11398 11024',\n  'S 3 b 11061 11399',\n  'S 2 h 11401 11400',\n  'S 2 r 11403 11402',\n  'S 2 d 11024 11404',\n  'S 6 e 11061 11405',\n  'S 6 g 11061 11406',\n  'S 3 u 11408 11407',\n  'S 2 w 11061 11409',\n  'S 1 # 11411 11410',\n  'S 6 t 11061 11412',\n  'S 2 i 11024 11413',\n  'S 3 l 11024 11414',\n  'S 2 h 11061 11415',\n  'S 1 c 11024 11416',\n  'S 6 t 11418 11417',\n  'S 3 i 11024 11419',\n  'S 1 b 11421 11420',\n  'S 2 u 11024 11422',\n  'S 4 y 11024 11423',\n  'S 6 # 11024 11424',\n  'S 2 l 11426 11425',\n  'S 2 u 11028 11427',\n  'S 5 # 11028 11428',\n  'S 6 s 11024 11028',\n  'S 5 e 11028 11429',\n  'S 2 m 11061 11430',\n  'S 2 r 11061 11395',\n  'S 2 r 11432 11431',\n  'S 2 g 11024 11061',\n  'S 4 l 11434 11433',\n  'S 4 r 11435 11024',\n  'S 1 0 11437 11436',\n  'S 3 i 11028 11438',\n  'S 2 n 11061 11024',\n  'S 3 i 11178 11439',\n  'S 2 r 11441 11440',\n  'S 6 # 11442 11061',\n  'S 2 r 11061 11024',\n  'S 5 e 11024 11443',\n  'S 3 y 11061 11024',\n  'S 6 a 11061 11444',\n  'S 1 # 11061 11445',\n  'S 2 v 11061 11446',\n  'S 6 g 11448 11447',\n  'S 5 t 11061 11024',\n  'S 3 o 11450 11449',\n  'S 2 a 11061 11451',\n  'S 1 r 11061 11452',\n  'S 5 s 11453 11024',\n  'S 3 o 11061 11454',\n  'S 3 o 11061 11455',\n  'S 3 e 11061 11456',\n  'S 1 h 11061 11024',\n  'S 1 b 11061 11457',\n  'S 1 r 11024 11458',\n  'S 6 y 11024 11459',\n  'S 5 a 11024 11061',\n  'S 3 k 11024 11460',\n  'S 1 l 11462 11461',\n  'S 2 u 11024 11463',\n  'S 4 i 11024 11028',\n  'S 1 j 11465 11464',\n  'S 6 i 11028 11024',\n  'S 1 g 11028 11466',\n  'S 6 s 11028 11467',\n  'S 2 c 11028 11468',\n  'S 5 i 11028 11024',\n  'S 2 t 11024 11028',\n  'S 1 l 11024 11469',\n  'S 1 t 11061 11470',\n  'S 1 t 11061 11224',\n  'S 3 p 11024 11471',\n  'S 2 o 11024 11472',\n  'S 3 e 11028 11024',\n  'S 3 u 11024 11473',\n  'S 3 i 11028 11024',\n  'S 4 n 11028 11024',\n  'S 3 y 11474 11024',\n  'S 2 m 11061 11024',\n  'S 6 a 11061 11273',\n  'S 1 r 11024 11061',\n  'S 6 g 11190 11475',\n  'S 5 r 11061 11024',\n  'S 6 e 11061 11024',\n  'S 1 p 11061 11476',\n  'S 5 b 11061 11477',\n  'S 1 # 11024 11061',\n  'S 3 e 11479 11478',\n  'S 6 # 11481 11480',\n  'S 2 m 11061 11482',\n  'S 2 h 11061 11483',\n  'S 3 i 11061 11024',\n  'S 5 m 11061 11024',\n  'S 6 d 11024 11154',\n  'S 1 h 11061 11484',\n  'S 2 e 11486 11485',\n  'S 2 c 11024 11487',\n  'S 5 a 11489 11488',\n  'S 2 r 11491 11490',\n  'S 5 e 11024 11492',\n  'S 5 f 11024 11493',\n  'S 5 # 11028 11494',\n  'S 4 l 11496 11495',\n  'S 6 # 11028 11024',\n  'S 1 o 11028 11497',\n  'S 5 b 11028 11498',\n  'S 2 s 11028 11499',\n  'S 2 n 11501 11500',\n  'S 1 m 11061 11502',\n  'S 4 q 11024 11503',\n  'S 1 r 11061 11024',\n  'S 6 y 11505 11504',\n  'S 2 a 11061 11024',\n  'S 3 a 11507 11506',\n  'S 2 a 11061 11508',\n  'S 5 c 11061 11024',\n  'S 5 y 11510 11509',\n  'S 1 h 11061 11511',\n  'S 2 j 11024 11512',\n  'S 2 p 11061 11513',\n  'S 2 f 11061 11024',\n  'S 6 h 11061 11514',\n  'S 6 # 11516 11515',\n  'S 1 i 11024 11517',\n  'S 3 e 11442 11024',\n  'S 1 l 11024 11061',\n  'S 2 d 11024 11518',\n  'S 2 a 11024 11519',\n  'S 2 c 11024 11520',\n  'S 1 # 11061 11024',\n  'S 6 a 11024 11521',\n  'S 5 s 11024 11522',\n  'S 5 d 11024 11523',\n  'S 1 r 11525 11524',\n  'S 1 r 11024 11526',\n  'S 5 a 11028 11527',\n  'S 3 a 11528 11028',\n  'S 2 t 11028 11024',\n  'S 1 d 11079 11529',\n  'S 1 i 11061 11024',\n  'S 1 p 11024 11530',\n  'S 4 a 11532 11531',\n  'S 3 i 11024 11533',\n  'S 3 i 11061 11507',\n  'S 1 r 11474 11534',\n  'S 2 e 11061 11024',\n  'S 5 # 11024 11535',\n  'S 3 a 11536 11024',\n  'S 3 t 11024 11537',\n  'S 5 t 11024 11538',\n  'S 6 u 11024 11539',\n  'S 2 l 11061 11491',\n  'S 5 s 11061 11540',\n  'S 3 a 11024 11541',\n  'S 1 # 11061 11542',\n  'S 2 t 11024 11543',\n  'S 5 e 11154 11024',\n  'S 3 i 11061 11544',\n  'S 3 o 11024 11545',\n  'S 6 g 11024 11546',\n  'S 2 a 11547 11024',\n  'S 4 i 11024 11314',\n  'S 5 a 11024 11548',\n  'S 6 g 11028 11549',\n  'S 6 r 11028 11024',\n  'S 2 a 11028 11550',\n  'S 1 c 11028 11551',\n  'S 1 n 11024 11552',\n  'S 1 e 11061 11553',\n  'S 3 t 11024 11554',\n  'S 3 r 11024 11555',\n  'S 2 e 11557 11556',\n  'S 2 r 11491 11024',\n  'S 2 o 11061 11558',\n  'S 2 e 11273 11024',\n  'S 1 # 11024 11559',\n  'S 1 g 11024 11560',\n  'S 1 # 11273 11024',\n  'S 6 # 11024 11561',\n  'S 6 s 11061 11024',\n  'S 2 r 11061 11562',\n  'S 2 c 11564 11563',\n  'S 6 r 11024 11061',\n  'S 1 k 11061 11565',\n  'S 1 o 11024 11566',\n  'S 5 c 11028 11024',\n  'S 4 o 11028 11567',\n  'S 4 m 11028 11568',\n  'S 2 t 11028 11569',\n  'S 5 # 11028 11570',\n  'S 2 h 11024 11061',\n  'S 1 i 11061 11571',\n  'S 3 i 11573 11572',\n  'S 5 n 11575 11574',\n  'S 3 d 11061 11576',\n  'S 1 r 11024 11577',\n  'S 2 u 11061 11578',\n  'S 3 l 11024 11061',\n  'S 2 h 11024 11579',\n  'S 1 w 11024 11580',\n  'S 1 s 11024 11581',\n  'S 1 e 11583 11582',\n  'S 3 u 11061 11024',\n  'S 1 l 11061 11584',\n  'S 1 w 11024 11585',\n  'S 5 n 11024 11586',\n  'S 5 r 11024 11587',\n  'S 6 m 11028 11588',\n  'S 1 g 11024 11028',\n  'S 2 d 11061 11589',\n  'S 3 w 11061 11590',\n  'S 4 r 11061 11024',\n  'S 2 v 11061 11591',\n  'S 2 e 11061 11592',\n  'S 3 a 11024 11593',\n  'S 4 b 11061 11594',\n  'S 6 e 11024 11595',\n  'S 6 s 11061 11596',\n  'S 2 e 11597 11024',\n  'S 3 u 11024 11474',\n  'S 1 a 11154 11598',\n  'S 2 r 11061 11453',\n  'S 1 i 11061 11599',\n  'S 6 l 11600 11024',\n  'S 5 s 11024 11601',\n  'S 6 t 11024 11602',\n  'S 1 r 11604 11603',\n  'S 2 s 11024 11061',\n  'S 5 s 11024 11605',\n  'S 5 l 11607 11606',\n  'S 6 # 11061 11541',\n  'S 1 c 11024 11608',\n  'S 1 n 11061 11609',\n  'S 2 r 11061 11610',\n  'S 5 n 11611 11024',\n  'S 5 n 11061 11024',\n  'S 3 i 11061 11612',\n  'S 2 l 11061 11613',\n  'S 4 a 11028 11024',\n  'S 1 n 11615 11614',\n  'S 5 v 11024 11616',\n  'S 6 e 11028 11617',\n  'S 2 e 11028 11182',\n  'S 3 k 11024 11618',\n  'S 3 a 11024 11619',\n  'S 6 e 11024 11620',\n  'S 6 l 11622 11621',\n  'S 3 n 11024 11061',\n  'S 1 # 11024 11623',\n  'S 6 # 11061 11024',\n  'S 1 r 11625 11624',\n  'S 3 a 11312 11626',\n  'S 6 # 11628 11627',\n  'S 5 e 11024 11028',\n  'S 5 # 11024 11629',\n  'S 6 s 11028 11630',\n  'S 3 a 11507 11631',\n  'S 2 e 11024 11632',\n  'S 3 o 11061 11633',\n  'S 4 f 11024 11634',\n  'S 4 n 11024 11061',\n  'S 2 e 11024 11339',\n  'S 2 p 11061 11635',\n  'S 2 i 11061 11024',\n  'S 2 t 11024 11636',\n  'S 6 r 11024 11637',\n  'S 5 d 11024 11028',\n  'S 4 e 11638 11028',\n  'S 2 m 11028 11639',\n  'S 4 f 11024 11640',\n  'S 6 l 11061 11641',\n  'S 1 # 11024 11609',\n  'S 2 o 11024 11642',\n  'S 1 # 11061 11643',\n  'S 4 b 11061 11644',\n  'S 4 e 11024 11645',\n  'S 5 s 11028 11646',\n  'S 6 d 11028 11647',\n  'S 4 n 11024 11648',\n  'S 6 c 11190 11649',\n  'S 2 c 11024 11650',\n  'S 1 l 11061 11651',\n  'S 2 i 11061 11652',\n  'S 1 s 11024 11653',\n  'S 5 d 11028 11024',\n  'S 6 # 11028 11654',\n  'S 2 l 11061 11655',\n  'S 6 i 11564 11656',\n  'S 4 w 11024 11657',\n  'S 2 i 11024 11061',\n  'S 1 h 11024 11658',\n  'S 1 l 11024 11028',\n  'S 1 a 11028 11659',\n  'S 1 f 11024 11660',\n  'S 5 b 11448 11661',\n  'S 1 g 11024 11662',\n  'S 2 e 11024 11663',\n  'S 1 b 11028 11664',\n  'S 1 c 11061 11665',\n  'S 6 e 11024 11666',\n  'S 4 l 11024 11667',\n  'S 4 m 11024 11564',\n  'S 1 m 11028 11668',\n  'S 3 u 11024 11669',\n  'S 2 a 11671 11670',\n  'S 6 r 11672 11061',\n  'S 1 s 11028 11673',\n  'S 3 o 11675 11674',\n  'S 6 s 11024 11676',\n  'S 5 # 11024 11472',\n  'S 2 a 11024 11677',\n  'S 3 a 11140 11028',\n  'S 4 d 11679 11678',\n  'S 5 # 11061 11024',\n  'S 3 u 11680 11534',\n  'S 1 # 11024 11681',\n  'S 3 e 11395 11682',\n  'S 1 d 11061 11683',\n  'S 6 # 11024 11684',\n  'S 3 n 11061 11024',\n  'S 1 h 11024 11685',\n  'S 2 u 11061 11686',\n  'S 5 # 11024 11061',\n  'S 5 r 11061 11687',\n  'S 2 a 11024 11061',\n  'S 3 m 11061 11688',\n  'S 3 r 11024 11689',\n  'S 6 c 11061 11690',\n  'S 2 u 11024 11691',\n  'S 4 v 11061 11692',\n  'S 6 r 11693 11474',\n  'S 2 e 11061 11694',\n  'S 4 b 11061 11686',\n  'I 11695 t',\n  'S 4 h 11697 11696',\n  'S 5 o 11699 11698',\n  'S 5 e 11701 11700',\n  'S 4 t 11703 11702',\n  'S 4 i 11705 11704',\n  'S 5 # 11707 11706',\n  'S 6 r 11709 11708',\n  'S 4 c 11711 11710',\n  'S 3 e 11713 11712',\n  'S 4 t 11715 11714',\n  'S 3 s 11717 11716',\n  'S 3 s 11719 11718',\n  'P th',\n  'S 6 # 11721 11720',\n  'S 3 # 11707 11722',\n  'S 4 u 11724 11723',\n  'S 5 h 11726 11725',\n  'S 5 s 11728 11727',\n  'S 5 s 11726 11729',\n  'S 4 u 11731 11730',\n  'S 3 e 11726 11732',\n  'S 3 n 11734 11733',\n  'P ch',\n  'S 5 o 11736 11735',\n  'S 6 a 11707 11725',\n  'S 6 a 11738 11737',\n  'S 3 n 11707 11739',\n  'S 3 a 11739 11721',\n  'S 3 t 11741 11740',\n  'S 3 # 11725 11742',\n  'P t',\n  'P epsilon',\n  'S 6 d 11726 11743',\n  'S 6 # 11745 11744',\n  'S 5 l 11746 11726',\n  'S 3 t 11748 11747',\n  'S 6 u 11717 11725',\n  'S 6 m 11726 11749',\n  'S 6 n 11734 11750',\n  'P sh',\n  'S 6 # 11752 11751',\n  'S 6 r 11707 11753',\n  'S 6 d 11755 11754',\n  'S 3 # 11707 11756',\n  'P dh',\n  'S 5 a 11758 11757',\n  'S 4 s 11726 11759',\n  'S 5 r 11761 11760',\n  'S 5 r 11726 11762',\n  'S 3 i 11725 11726',\n  'S 3 o 11725 11763',\n  'S 6 e 11726 11725',\n  'S 4 a 11764 11725',\n  'S 4 r 11725 11765',\n  'S 6 # 11767 11766',\n  'S 6 u 11734 11768',\n  'S 5 a 11770 11769',\n  'S 3 r 11772 11771',\n  'S 3 l 11725 11773',\n  'S 6 i 11707 11774',\n  'S 3 a 11739 11707',\n  'S 3 r 11707 11725',\n  'S 6 h 11776 11775',\n  'S 4 i 11778 11777',\n  'S 6 0 11725 11779',\n  'S 5 a 11717 11780',\n  'S 6 e 11717 11781',\n  'S 6 s 11726 11782',\n  'S 3 a 11726 11725',\n  'P d',\n  'S 4 o 11725 11726',\n  'S 3 o 11784 11783',\n  'S 3 o 11725 11726',\n  'S 3 a 11734 11725',\n  'S 6 n 11786 11785',\n  'S 6 i 11725 11707',\n  'S 5 y 11707 11787',\n  'S 5 y 11739 11707',\n  'S 3 o 11725 11788',\n  'S 6 y 11739 11789',\n  'S 4 l 11791 11790',\n  'S 4 s 11726 11725',\n  'S 4 g 11793 11792',\n  'S 3 s 11795 11794',\n  'S 5 d 11725 11796',\n  'S 6 a 11798 11797',\n  'S 6 a 11717 11799',\n  'S 6 n 11726 11800',\n  'S 3 u 11725 11801',\n  'S 6 n 11726 11725',\n  'S 6 l 11803 11802',\n  'S 3 r 11739 11755',\n  'S 5 s 11707 11804',\n  'S 6 d 11707 11805',\n  'S 6 s 11807 11806',\n  'S 5 h 11809 11808',\n  'S 3 s 11810 11725',\n  'S 4 r 11725 11811',\n  'S 3 r 11726 11725',\n  'S 3 n 11813 11812',\n  'S 6 # 11725 11717',\n  'S 4 r 11725 11814',\n  'S 5 e 11717 11815',\n  'S 5 l 11717 11816',\n  'S 6 i 11817 11725',\n  'S 5 # 11726 11818',\n  'S 6 n 11725 11819',\n  'S 3 y 11821 11820',\n  'S 5 i 11725 11707',\n  'S 3 n 11707 11822',\n  'S 6 l 11707 11823',\n  'S 3 # 11707 11824',\n  'S 3 o 11739 11755',\n  'S 4 # 11725 11825',\n  'S 4 s 11826 11725',\n  'S 5 e 11726 11725',\n  'S 3 # 11827 11725',\n  'S 3 # 11725 11734',\n  'S 6 l 11717 11828',\n  'S 5 a 11725 11829',\n  'S 3 s 11725 11830',\n  'S 3 r 11717 11725',\n  'S 3 n 11725 11717',\n  'S 6 a 11726 11831',\n  'S 3 a 11832 11726',\n  'S 6 s 11833 11707',\n  'S 5 m 11739 11707',\n  'S 5 a 11707 11739',\n  'S 6 n 11707 11834',\n  'S 3 o 11835 11707',\n  'S 5 n 11837 11836',\n  'S 6 a 11717 11838',\n  'S 4 e 11725 11839',\n  'S 6 t 11734 11840',\n  'S 6 t 11725 11841',\n  'S 6 # 11725 11842',\n  'S 3 a 11844 11843',\n  'S 6 o 11726 11725',\n  'S 3 # 11739 11707',\n  'S 6 g 11707 11845',\n  'S 6 n 11739 11707',\n  'S 6 n 11847 11846',\n  'S 4 e 11848 11725',\n  'S 6 o 11725 11717',\n  'S 4 o 11725 11849',\n  'S 6 # 11734 11725',\n  'S 4 o 11851 11850',\n  'S 3 i 11725 11852',\n  'S 6 # 11726 11853',\n  'S 5 n 11725 11854',\n  'S 3 # 11707 11855',\n  'S 3 d 11857 11856',\n  'S 4 i 11858 11725',\n  'S 3 s 11860 11859',\n  'S 4 w 11725 11861',\n  'S 5 s 11725 11862',\n  'S 5 m 11725 11863',\n  'S 6 e 11864 11725',\n  'S 5 k 11726 11865',\n  'S 5 y 11726 11866',\n  'S 6 u 11725 11867',\n  'S 5 u 11868 11725',\n  'S 4 k 11726 11725',\n  'S 5 e 11768 11725',\n  'S 3 f 11726 11725',\n  'S 6 i 11726 11746',\n  'S 4 s 11725 11726',\n  'S 5 n 11725 11869',\n  'S 5 n 11870 11726',\n  'S 3 r 11717 11871',\n  'S 6 i 11726 11872',\n  'S 6 t 11725 11726',\n  'S 3 a 11707 11873',\n  'S 4 e 11874 11725',\n  'S 5 w 11726 11875',\n  'S 6 # 11726 11725',\n  'S 3 a 11717 11725',\n  'S 3 r 11725 11876',\n  'S 3 r 11707 11877',\n  'S 6 r 11878 11725',\n  'S 5 g 11725 11879',\n  'S 6 k 11725 11880',\n  'S 3 e 11707 11725',\n  'S 3 s 11717 11725',\n  'S 6 k 11725 11881',\n  'S 3 u 11883 11882',\n  'S 5 m 11725 11884',\n  'S 6 g 11726 11885',\n  'S 6 e 11726 11810',\n  'S 6 f 11725 11886',\n  'S 5 i 11746 11887',\n  'S 6 n 11725 11888',\n  'S 6 m 11726 11889',\n  'S 6 d 11726 11890',\n  'S 5 a 11744 11891',\n  'S 6 o 11726 11892',\n  'S 5 l 11767 11893',\n  'S 6 e 11895 11894',\n  'S 5 e 11896 11726',\n  'S 6 l 11898 11897',\n  'S 5 r 11726 11725',\n  'S 6 r 11726 11899',\n  'S 6 y 11726 11900',\n  'S 4 e 11726 11725',\n  'S 6 l 11726 11725',\n  'S 4 n 11725 11901',\n  'S 6 a 11898 11902',\n  'S 4 l 11904 11903',\n  'S 6 b 11726 11905',\n  'S 6 s 11726 11725',\n  'S 5 l 11907 11906',\n  'S 6 s 11909 11908',\n  'S 6 # 11910 11904',\n  'S 4 k 11725 11911',\n  'S 4 e 11725 11726',\n  'S 4 a 11725 11726',\n  'S 6 i 11725 11912',\n  'S 6 m 11725 11913',\n  'S 6 # 11725 11914',\n  'S 4 i 11725 11915',\n  'S 6 r 11726 11725',\n  'I 11916 u',\n  'S 4 r 11918 11917',\n  'S 3 a 11920 11919',\n  'S 5 y 11922 11921',\n  'S 3 o 11924 11923',\n  'P epsilon',\n  'S 5 i 11926 11925',\n  'S 3 b 11927 11920',\n  'S 3 q 11929 11928',\n  'S 4 p 11931 11930',\n  'S 5 o 11933 11932',\n  'S 3 # 11935 11934',\n  'P eh1',\n  'S 5 # 11937 11936',\n  'S 4 e 11939 11938',\n  'S 4 i 11941 11940',\n  'S 5 l 11943 11942',\n  'S 5 a 11945 11944',\n  'S 3 e 11947 11946',\n  'S 3 p 11949 11948',\n  'S 6 n 11951 11950',\n  'S 5 e 11953 11952',\n  'S 4 e 11955 11954',\n  'S 5 a 11957 11956',\n  'S 5 # 11920 11958',\n  'S 4 s 11960 11959',\n  'S 5 s 11961 11957',\n  'P uw1',\n  'P ah1',\n  'S 5 e 11963 11962',\n  'S 6 # 11965 11964',\n  'S 3 a 11920 11966',\n  'S 6 p 11949 11967',\n  'S 3 c 11949 11968',\n  'P y-uh1',\n  'P y-er',\n  'P y-er1',\n  'S 5 i 11970 11969',\n  'S 4 s 11972 11971',\n  'S 4 a 11974 11973',\n  'S 3 g 11920 11975',\n  'S 6 # 11977 11976',\n  'P w',\n  'S 6 # 11979 11978',\n  'S 4 n 11981 11980',\n  'S 5 s 11942 11982',\n  'P uw',\n  'S 5 r 11984 11983',\n  'S 3 t 11920 11985',\n  'S 3 t 11920 11986',\n  'P uh1',\n  'S 6 # 11965 11987',\n  'S 6 l 11989 11988',\n  'S 3 f 11949 11990',\n  'S 5 a 11992 11991',\n  'S 3 # 11994 11993',\n  'S 3 # 11996 11995',\n  'S 6 s 11998 11997',\n  'S 4 s 12000 11999',\n  'S 3 g 11957 12001',\n  'S 3 r 11942 12002',\n  'S 4 a 11957 12003',\n  'S 5 l 11957 12004',\n  'S 5 t 11920 12005',\n  'S 5 z 11957 11920',\n  'S 4 t 12007 12006',\n  'S 5 g 12009 12008',\n  'S 5 # 11920 12010',\n  'S 5 u 12011 11920',\n  'S 3 d 12012 11920',\n  'S 3 s 12014 12013',\n  'S 3 c 12016 12015',\n  'S 6 n 11942 11920',\n  'S 6 s 11965 12017',\n  'P uh',\n  'S 3 b 11927 12018',\n  'S 4 e 12020 12019',\n  'S 4 l 12022 12021',\n  'S 3 m 12024 12023',\n  'S 6 n 11943 12025',\n  'S 3 r 12027 12026',\n  'S 4 n 12029 12028',\n  'S 3 e 12031 12030',\n  'S 3 r 12000 12032',\n  'S 4 m 12000 12033',\n  'P ah',\n  'S 3 h 11961 11942',\n  'S 3 s 11961 12034',\n  'S 4 i 11957 12035',\n  'S 5 d 11957 12036',\n  'S 5 u 11920 12037',\n  'S 5 h 12039 12038',\n  'S 6 e 12041 12040',\n  'S 6 r 11943 11920',\n  'S 6 e 11920 11943',\n  'S 5 t 12042 11920',\n  'S 3 a 11920 11965',\n  'P ao1',\n  'S 3 a 11920 12043',\n  'S 6 # 11920 12044',\n  'S 3 g 11950 12045',\n  'S 6 t 11949 11950',\n  'P y-uw1',\n  'S 3 g 11949 12046',\n  'S 4 a 12048 12047',\n  'S 3 g 11920 12049',\n  'S 3 # 12051 12050',\n  'S 6 t 12053 12052',\n  'S 3 c 12055 12054',\n  'S 4 n 12057 12056',\n  'S 6 m 11943 12058',\n  'S 3 s 12060 12059',\n  'S 4 m 12062 12061',\n  'S 4 t 12017 12000',\n  'S 6 a 12000 12063',\n  'S 3 m 12017 12064',\n  'S 6 r 11920 12017',\n  'S 3 b 11943 12000',\n  'S 3 f 12000 12065',\n  'S 3 d 11942 12066',\n  'S 4 o 11957 11942',\n  'S 5 t 11957 12067',\n  'S 5 r 11920 12068',\n  'S 5 l 12070 12069',\n  'S 4 g 11920 12071',\n  'S 5 e 12073 12072',\n  'S 5 h 11943 11920',\n  'S 6 # 11920 12074',\n  'S 3 g 11950 12075',\n  'S 6 r 11965 12076',\n  'S 3 o 11920 12077',\n  'S 3 m 11949 12078',\n  'S 4 i 12080 12079',\n  'S 3 g 12082 12081',\n  'S 3 r 12084 12083',\n  'S 6 # 11942 12085',\n  'S 4 n 12086 12017',\n  'S 6 r 12088 12087',\n  'S 3 t 12000 12089',\n  'S 3 b 12091 12090',\n  'S 4 s 12093 12092',\n  'S 6 o 11942 12017',\n  'S 6 c 12017 12094',\n  'S 4 n 12017 12095',\n  'S 3 l 12097 12096',\n  'S 4 l 12000 11942',\n  'S 6 t 11961 12098',\n  'S 6 n 12000 11942',\n  'S 6 x 11943 12099',\n  'S 3 f 12017 12100',\n  'S 3 e 12102 12101',\n  'S 3 n 12104 12103',\n  'S 5 n 11957 12105',\n  'S 6 y 11920 11957',\n  'S 4 x 11942 12106',\n  'S 4 b 11943 12107',\n  'S 6 a 11943 12108',\n  'S 5 a 11961 11920',\n  'S 6 d 11920 12109',\n  'S 6 i 11942 11920',\n  'S 3 o 11920 12110',\n  'S 6 s 11920 12111',\n  'S 3 m 11920 12112',\n  'S 3 d 11965 12113',\n  'S 3 # 12115 12114',\n  'S 3 g 12117 12116',\n  'S 5 t 12119 12118',\n  'S 5 r 11920 12120',\n  'S 6 # 12122 12121',\n  'S 5 n 11965 11942',\n  'S 6 t 12124 12123',\n  'S 6 b 12017 12125',\n  'S 3 t 11942 12126',\n  'S 3 c 12128 12127',\n  'S 3 s 12000 12129',\n  'S 3 l 11942 12130',\n  'S 4 s 12132 12131',\n  'S 6 e 12128 12133',\n  'S 6 n 12017 11942',\n  'S 6 z 12128 12134',\n  'S 4 t 12017 11961',\n  'S 3 t 12136 12135',\n  'S 6 n 12137 11942',\n  'S 6 l 11942 12138',\n  'S 6 m 11943 12000',\n  'S 3 b 12017 12139',\n  'S 4 i 11942 12140',\n  'S 4 x 11920 12141',\n  'S 3 l 11942 12142',\n  'P y-uw',\n  'S 4 i 11957 11920',\n  'S 4 e 12144 12143',\n  'S 4 e 11961 11920',\n  'S 6 e 11920 12145',\n  'S 6 r 11920 11942',\n  'S 3 b 12147 12146',\n  'S 6 d 11965 11920',\n  'S 3 # 11949 12148',\n  'S 3 k 11920 12149',\n  'S 5 o 12151 12150',\n  'S 4 n 12153 12152',\n  'S 3 b 11920 12154',\n  'S 6 h 11957 12155',\n  'S 5 l 12157 12156',\n  'S 3 t 11961 12158',\n  'S 6 a 11957 12159',\n  'S 3 l 12161 12160',\n  'S 3 s 11942 12162',\n  'S 3 h 12164 12163',\n  'S 4 t 12166 12165',\n  'S 6 n 11943 12167',\n  'S 3 c 12128 12168',\n  'S 3 g 12128 12169',\n  'P y-ah',\n  'S 3 d 12000 12128',\n  'S 3 p 12171 12170',\n  'S 6 o 12017 12172',\n  'P ih1',\n  'S 6 v 12128 12173',\n  'S 6 s 12128 12017',\n  'S 3 d 12175 12174',\n  'S 4 d 11942 12176',\n  'S 4 m 11943 11942',\n  'S 6 n 12177 11942',\n  'S 3 # 12017 12178',\n  'S 4 y 11920 12179',\n  'S 4 p 11943 11961',\n  'S 3 c 12104 12017',\n  'S 5 t 11920 12180',\n  'S 6 t 11961 11942',\n  'S 6 i 11920 12181',\n  'S 3 c 12183 12182',\n  'S 6 a 11949 11927',\n  'S 6 s 11965 12184',\n  'S 3 a 11920 12185',\n  'S 4 # 12187 12186',\n  'S 6 # 12189 12188',\n  'S 4 p 12191 12190',\n  'S 5 d 12193 12192',\n  'S 3 c 12195 12194',\n  'S 5 t 11920 12196',\n  'S 3 t 12198 12197',\n  'S 3 n 12104 12199',\n  'S 3 d 12201 12200',\n  'S 5 n 11957 12202',\n  'S 3 b 12204 12203',\n  'S 5 n 11961 12205',\n  'S 3 n 12207 12206',\n  'S 3 s 12209 12208',\n  'S 4 m 12017 11942',\n  'S 3 c 12128 12210',\n  'S 3 p 12128 12104',\n  'S 6 l 12000 11943',\n  'S 3 m 12128 12211',\n  'S 3 p 12128 12000',\n  'S 3 f 12213 12212',\n  'S 6 s 11943 12017',\n  'S 4 t 12104 12093',\n  'S 6 n 12128 12017',\n  'S 3 e 12215 12214',\n  'S 4 l 11961 11942',\n  'S 4 t 11942 12216',\n  'S 4 d 11942 12217',\n  'S 3 c 12017 12218',\n  'S 4 z 11961 12219',\n  'S 4 # 11942 12220',\n  'S 6 # 11920 11943',\n  'S 3 p 11949 12221',\n  'S 6 # 11950 11949',\n  'S 3 a 11920 12222',\n  'S 3 o 11920 12223',\n  'S 4 o 12225 12224',\n  'S 3 c 12104 12226',\n  'S 6 u 12228 12227',\n  'S 3 c 12017 11942',\n  'S 5 u 12017 12229',\n  'S 5 h 12000 12230',\n  'S 5 o 11943 12231',\n  'S 6 o 12000 12232',\n  'S 5 n 12234 12233',\n  'S 5 s 11957 11920',\n  'S 6 g 11920 12235',\n  'S 3 n 11942 12236',\n  'S 6 y 11961 12237',\n  'S 3 d 11961 12238',\n  'S 3 l 12104 12239',\n  'P ah-w',\n  'S 6 # 11920 11957',\n  'S 3 m 12241 12240',\n  'S 5 n 11957 12017',\n  'S 6 e 11965 11942',\n  'S 3 l 12243 12242',\n  'S 5 l 11989 12104',\n  'S 3 g 12245 12244',\n  'S 6 r 11965 12246',\n  'S 4 m 11942 12247',\n  'S 6 # 11942 12248',\n  'S 3 h 12250 12249',\n  'S 4 j 11942 12017',\n  'S 4 y 11920 12251',\n  'S 4 g 12104 12252',\n  'S 4 n 12253 11942',\n  'S 4 b 11942 12000',\n  'S 6 n 11942 12254',\n  'S 4 l 12000 12255',\n  'S 4 v 12257 12256',\n  'S 3 # 11951 12258',\n  'S 6 l 11920 12259',\n  'S 3 e 11920 12260',\n  'S 3 e 12262 12261',\n  'S 5 u 12264 12263',\n  'S 3 e 11942 12265',\n  'S 3 c 12267 12266',\n  'S 4 l 12128 11943',\n  'S 4 h 12269 12268',\n  'S 5 d 12000 12270',\n  'S 6 o 12272 12271',\n  'S 6 e 11943 12273',\n  'S 3 m 11942 12274',\n  'S 3 r 11942 12275',\n  'S 6 d 11920 12276',\n  'S 5 n 12278 12277',\n  'S 6 i 11961 11942',\n  'S 3 t 12280 12279',\n  'S 3 n 12104 12128',\n  'S 3 f 12282 12281',\n  'S 5 l 12104 12017',\n  'S 3 d 11942 12283',\n  'S 5 d 12104 11942',\n  'S 3 n 12285 12284',\n  'S 6 n 11920 12000',\n  'S 6 n 11961 11942',\n  'S 3 d 12000 12286',\n  'S 3 d 12000 11942',\n  'S 3 k 12288 12287',\n  'S 4 m 12104 12289',\n  'S 6 n 12291 12290',\n  'S 6 r 12293 12292',\n  'S 6 # 11942 12000',\n  'S 3 r 11942 12294',\n  'S 4 h 11961 12295',\n  'S 5 a 12297 12296',\n  'S 5 i 11961 11942',\n  'S 6 k 11965 12298',\n  'S 6 n 12300 12299',\n  'S 6 n 12302 12301',\n  'S 5 u 12304 12303',\n  'S 4 p 11943 12305',\n  'S 5 r 11920 12306',\n  'S 3 n 12104 12307',\n  'S 3 g 11961 12308',\n  'S 3 b 12310 12309',\n  'S 4 t 12128 11942',\n  'S 4 m 11943 12311',\n  'S 6 i 11965 11942',\n  'S 5 p 11943 12312',\n  'S 5 u 12000 12313',\n  'S 5 c 11943 12000',\n  'S 6 i 11943 12000',\n  'S 3 s 11942 12314',\n  'S 6 g 11942 12128',\n  'S 6 e 11920 12315',\n  'S 3 s 11957 12316',\n  'S 3 h 11957 12317',\n  'S 3 s 12201 12318',\n  'S 6 i 12201 11961',\n  'S 5 r 12320 12319',\n  'S 5 l 12017 11957',\n  'S 5 r 11920 12321',\n  'S 3 c 12173 12322',\n  'S 4 f 12128 11942',\n  'S 4 g 12000 12323',\n  'S 3 g 11961 12324',\n  'S 6 c 12017 12325',\n  'S 6 a 11942 12326',\n  'S 3 n 12328 12327',\n  'S 4 m 12128 12329',\n  'S 6 # 11943 12330',\n  'S 4 v 11942 12331',\n  'S 6 # 12017 11942',\n  'S 4 k 12000 12332',\n  'S 4 a 11961 12333',\n  'S 4 g 11942 12334',\n  'S 3 l 11965 12335',\n  'S 3 d 11965 11920',\n  'S 3 d 11920 12336',\n  'S 6 z 11920 12337',\n  'S 3 t 11920 12338',\n  'S 3 s 12340 12339',\n  'S 3 c 12342 12341',\n  'S 5 r 11942 12343',\n  'S 6 # 11920 12344',\n  'S 3 c 12104 12345',\n  'S 3 n 11961 12346',\n  'S 3 m 12104 12347',\n  'S 4 t 12128 12017',\n  'S 5 t 11943 12348',\n  'S 6 i 11943 12349',\n  'S 5 w 12000 12350',\n  'S 6 # 12352 12351',\n  'S 5 l 11920 12353',\n  'S 5 d 11957 12354',\n  'S 3 j 11957 11961',\n  'S 3 x 12201 11961',\n  'S 6 a 11957 12355',\n  'S 3 e 11920 12356',\n  'S 3 c 12017 12357',\n  'S 4 t 12359 12358',\n  'S 3 t 12000 12360',\n  'S 6 e 12362 12361',\n  'S 4 l 12104 12062',\n  'S 4 l 12017 11942',\n  'S 3 j 11942 12363',\n  'S 4 t 12000 11942',\n  'S 4 l 12128 12364',\n  'S 6 n 11920 11942',\n  'S 4 t 11942 12365',\n  'S 3 n 11943 12366',\n  'S 6 u 11920 12367',\n  'S 6 # 11942 12175',\n  'S 6 t 11920 12368',\n  'S 3 s 11965 12017',\n  'S 3 j 11965 12369',\n  'S 3 s 11965 11920',\n  'S 4 l 12371 12370',\n  'S 5 r 12373 12372',\n  'S 4 t 12375 12374',\n  'S 4 m 12017 12128',\n  'S 6 a 12104 12376',\n  'S 5 y 11920 12377',\n  'S 3 t 12000 11961',\n  'S 3 l 11961 12378',\n  'S 4 b 12380 12379',\n  'S 5 o 12104 12381',\n  'S 6 a 11943 12382',\n  'S 6 a 12000 12383',\n  'S 5 d 11961 12384',\n  'S 3 r 11942 11961',\n  'S 6 t 11957 12385',\n  'S 5 r 11957 11942',\n  'S 3 k 11965 12386',\n  'S 3 h 11920 11965',\n  'S 5 l 11942 12017',\n  'S 6 m 11942 12387',\n  'S 3 r 11942 12388',\n  'S 4 n 11961 11942',\n  'S 3 e 12390 12389',\n  'S 4 l 11942 12391',\n  'S 3 h 12393 12392',\n  'S 3 j 11942 12017',\n  'S 4 b 11920 11942',\n  'S 4 g 11943 12394',\n  'S 6 r 11920 12395',\n  'S 3 j 11920 12396',\n  'S 6 s 11920 12397',\n  'S 5 h 12399 12398',\n  'S 3 f 12401 12400',\n  'S 4 b 12403 12402',\n  'S 6 e 11961 12404',\n  'S 6 # 11942 12405',\n  'S 3 m 12017 12406',\n  'S 6 c 11920 12407',\n  'S 3 b 11957 12408',\n  'S 3 r 11961 12409',\n  'S 4 d 11942 12410',\n  'S 3 s 12000 12411',\n  'S 4 z 11961 11943',\n  'S 5 t 11943 12412',\n  'S 5 f 12000 12413',\n  'S 3 h 11920 12414',\n  'S 6 i 11920 12415',\n  'S 3 h 12417 12416',\n  'S 3 e 12419 12418',\n  'S 3 l 11961 12420',\n  'S 3 n 11942 12421',\n  'S 6 c 12017 11942',\n  'S 3 r 11942 11943',\n  'S 4 t 12423 12422',\n  'S 4 l 11942 12424',\n  'S 4 p 12426 12425',\n  'S 6 t 11961 12427',\n  'S 3 e 11920 12428',\n  'S 3 t 11965 12429',\n  'S 6 # 12431 12430',\n  'S 4 s 12433 12432',\n  'S 3 b 12435 12434',\n  'S 6 y 12000 12436',\n  'S 5 p 12438 12437',\n  'S 6 c 12000 12439',\n  'S 6 a 11942 11943',\n  'S 4 k 11961 12440',\n  'S 6 r 12017 11942',\n  'S 6 i 11942 12441',\n  'S 5 m 11957 12442',\n  'S 3 k 11942 12443',\n  'S 3 h 12164 12444',\n  'S 3 d 12000 11943',\n  'S 6 r 12000 12445',\n  'S 5 l 12000 12446',\n  'S 3 d 11961 11942',\n  'S 6 n 11920 12447',\n  'S 3 # 11965 12448',\n  'S 5 t 11942 12449',\n  'S 6 s 12451 12450',\n  'S 6 l 12017 11942',\n  'S 3 b 12128 12452',\n  'S 6 o 11942 12453',\n  'S 3 m 12455 12454',\n  'S 3 b 12104 12017',\n  'S 4 t 11942 12456',\n  'S 3 m 12000 12457',\n  'S 3 r 12000 12458',\n  'S 5 i 12460 12459',\n  'S 3 n 11950 12461',\n  'S 6 a 11965 12462',\n  'S 4 y 11920 12463',\n  'S 5 y 12465 12464',\n  'S 4 t 12467 12466',\n  'S 3 b 11965 12468',\n  'S 3 p 12470 12469',\n  'S 5 l 11965 12471',\n  'S 5 n 12000 12472',\n  'S 5 c 12474 12473',\n  'S 4 m 11943 12475',\n  'S 6 l 11943 12476',\n  'S 6 l 11942 12477',\n  'S 6 # 12478 11920',\n  'S 6 o 11957 12479',\n  'S 3 m 11942 11961',\n  'S 3 e 12481 12480',\n  'S 6 e 12000 11943',\n  'S 5 h 12000 12482',\n  'S 6 o 11920 12483',\n  'S 6 d 11942 12484',\n  'S 5 l 11942 11965',\n  'S 3 k 11961 12485',\n  'S 3 l 11942 12486',\n  'S 3 p 12128 12017',\n  'S 6 # 11942 12487',\n  'S 4 p 11942 12488',\n  'S 4 n 12489 12017',\n  'S 6 # 12017 12164',\n  'S 3 b 12000 12490',\n  'S 3 d 11943 12491',\n  'S 5 f 11920 12492',\n  'S 6 n 12494 12493',\n  'S 6 # 11965 12495',\n  'S 3 l 11965 11920',\n  'S 5 c 12497 12496',\n  'S 5 d 12499 12498',\n  'S 4 d 11942 12500',\n  'S 4 g 12502 12501',\n  'S 6 # 12504 12503',\n  'S 3 p 11965 12505',\n  'S 5 l 12507 12506',\n  'S 5 l 11965 12508',\n  'S 6 a 12000 11943',\n  'S 5 f 11989 12509',\n  'S 4 g 12000 12510',\n  'S 6 e 12000 12511',\n  'S 6 h 11943 12512',\n  'S 6 a 11943 12513',\n  'S 6 s 11942 12514',\n  'S 5 z 11920 11942',\n  'S 5 n 11961 11942',\n  'S 6 w 12000 12515',\n  'S 6 g 12017 11920',\n  'S 5 v 12000 12516',\n  'S 5 n 11920 12517',\n  'S 3 c 11957 12518',\n  'S 3 f 11961 12519',\n  'S 4 d 11943 11942',\n  'S 4 c 11942 12520',\n  'S 3 z 11942 12521',\n  'S 6 # 12017 12104',\n  'S 3 r 12523 12522',\n  'S 3 s 12000 12524',\n  'S 5 # 12526 12525',\n  'S 4 l 11942 11920',\n  'S 4 l 11961 11920',\n  'S 3 d 11965 11949',\n  'S 5 l 12528 12527',\n  'S 4 c 12530 12529',\n  'S 5 r 11920 12531',\n  'S 4 n 12532 11943',\n  'S 3 l 11942 12533',\n  'S 6 i 11942 12534',\n  'S 6 e 12017 11943',\n  'S 3 r 12535 11943',\n  'S 3 m 11961 12536',\n  'S 3 c 11965 11943',\n  'S 5 y 11942 12537',\n  'S 6 o 11942 11943',\n  'S 6 o 11965 12538',\n  'S 6 i 11965 12539',\n  'S 6 a 12541 12540',\n  'S 4 c 12000 11943',\n  'S 4 s 12000 12542',\n  'S 5 m 12000 12543',\n  'S 6 e 12545 12544',\n  'S 3 d 11961 12546',\n  'S 5 t 12000 12547',\n  'S 6 a 11920 11957',\n  'S 3 t 11961 12548',\n  'S 3 b 11961 12549',\n  'S 6 g 11943 12550',\n  'S 6 l 11942 12551',\n  'S 3 p 11943 12552',\n  'S 4 n 11943 12553',\n  'S 3 h 12000 11943',\n  'S 6 a 11942 12554',\n  'S 4 d 11920 11942',\n  'S 5 r 12556 12555',\n  'S 4 h 11942 12557',\n  'S 3 b 12558 11943',\n  'S 6 i 12560 12559',\n  'S 3 i 12000 12561',\n  'S 3 f 11943 12562',\n  'S 4 b 11942 12128',\n  'S 3 b 12564 12563',\n  'S 6 e 11943 11942',\n  'S 3 l 11942 12565',\n  'S 3 h 11943 12566',\n  'S 6 i 11943 12567',\n  'S 6 o 11965 12568',\n  'S 5 h 11943 12569',\n  'S 4 s 12000 12570',\n  'S 6 o 12000 12571',\n  'S 6 o 12000 12572',\n  'S 4 s 12017 12573',\n  'S 4 g 12017 12000',\n  'S 6 t 11961 12574',\n  'S 5 b 12575 12000',\n  'S 3 d 11942 12576',\n  'S 3 m 11961 12577',\n  'S 4 m 12579 12578',\n  'S 6 r 12017 12580',\n  'S 3 h 11943 12581',\n  'S 4 t 12000 11943',\n  'S 5 e 12493 12582',\n  'S 4 z 12584 12583',\n  'S 4 h 11965 12585',\n  'S 4 c 11942 12586',\n  'S 4 n 11943 12587',\n  'S 6 o 11942 11961',\n  'S 3 b 11961 11942',\n  'S 3 p 12589 12588',\n  'S 3 l 12000 12590',\n  'S 3 d 11943 12591',\n  'S 6 a 12104 11943',\n  'S 3 r 11961 11942',\n  'S 5 f 12593 12592',\n  'S 5 t 12000 11943',\n  'S 5 l 11965 12594',\n  'S 4 f 12596 12595',\n  'S 4 m 12000 11943',\n  'S 6 r 12000 12167',\n  'S 5 v 12000 12597',\n  'S 6 a 11942 12598',\n  'S 3 r 11942 12599',\n  'S 6 e 11943 12000',\n  'S 5 l 11961 12600',\n  'S 4 k 11961 12601',\n  'S 3 s 11961 12602',\n  'S 6 n 11942 11961',\n  'S 4 l 12604 12603',\n  'S 3 c 11943 12605',\n  'S 4 l 11920 12606',\n  'S 4 s 12608 12607',\n  'S 6 l 11943 12609',\n  'S 3 n 11961 12610',\n  'S 4 p 12612 12611',\n  'S 4 s 11943 11965',\n  'S 5 l 11943 12613',\n  'S 5 s 11965 11943',\n  'S 3 m 12000 11943',\n  'S 3 r 11943 12614',\n  'S 6 a 12567 12615',\n  'S 3 g 11943 12000',\n  'S 6 # 11965 11943',\n  'S 5 d 11943 12616',\n  'S 6 i 12000 11943',\n  'S 5 l 12000 12617',\n  'S 4 b 12000 12618',\n  'S 4 s 12000 12619',\n  'S 3 s 11957 12620',\n  'S 4 n 12622 12621',\n  'S 6 l 12624 12623',\n  'S 6 # 12017 12625',\n  'S 3 c 12017 12626',\n  'S 3 l 12628 12627',\n  'S 6 e 11942 11920',\n  'S 4 h 12630 12629',\n  'S 5 s 12632 12631',\n  'S 6 e 12634 12633',\n  'S 3 l 11942 12635',\n  'S 4 g 12637 12636',\n  'S 3 d 11942 12391',\n  'S 5 z 12524 12638',\n  'S 3 h 11943 12639',\n  'S 6 # 11943 12640',\n  'S 5 s 12642 12641',\n  'S 6 r 12000 12643',\n  'S 3 d 12000 12644',\n  'S 6 n 12646 12645',\n  'S 3 p 11957 11942',\n  'S 4 s 11961 12647',\n  'S 3 d 11943 11942',\n  'S 4 l 12649 12648',\n  'S 4 b 11942 12017',\n  'S 4 g 12017 12650',\n  'S 3 b 12017 12104',\n  'S 3 g 12652 12651',\n  'S 4 b 11943 12000',\n  'S 6 o 11943 12653',\n  'S 6 e 11942 11943',\n  'S 5 t 12654 11943',\n  'S 3 r 12507 11943',\n  'S 5 z 12655 11943',\n  'S 3 b 11943 11961',\n  'S 6 i 11943 12656',\n  'S 6 e 12658 12657',\n  'S 3 g 11961 11943',\n  'S 5 m 11943 12659',\n  'S 6 # 12000 11943',\n  'S 6 y 12000 12660',\n  'S 4 l 12661 11943',\n  'S 4 s 11943 12652',\n  'S 5 t 11943 12662',\n  'S 6 r 12000 11943',\n  'S 4 l 12000 12663',\n  'S 3 l 11961 11942',\n  'S 4 v 11961 12664',\n  'S 3 j 11942 12665',\n  'S 3 j 11942 12666',\n  'S 6 s 12017 12667',\n  'S 3 t 11943 12000',\n  'S 4 n 11943 12000',\n  'S 3 c 12669 12668',\n  'S 6 r 12671 12670',\n  'S 6 i 11942 12507',\n  'S 3 d 12628 11943',\n  'S 6 a 12672 11943',\n  'S 4 b 11942 11943',\n  'S 4 m 12674 12673',\n  'S 5 c 11943 12675',\n  'S 6 o 12000 11943',\n  'S 5 j 12000 12676',\n  'S 6 s 11942 12677',\n  'S 6 y 11961 12678',\n  'S 4 s 11942 12679',\n  'S 3 d 11942 12680',\n  'S 4 n 12017 12681',\n  'S 3 p 11943 12682',\n  'S 4 m 12683 11943',\n  'S 6 a 12684 11943',\n  'S 3 l 12000 11943',\n  'S 4 n 11943 11942',\n  'S 4 t 12686 12685',\n  'S 5 p 11943 12687',\n  'S 5 t 11943 12688',\n  'S 5 s 12596 11943',\n  'S 3 l 11942 12360',\n  'S 3 r 12690 12689',\n  'S 3 d 11942 12691',\n  'S 3 t 11961 11942',\n  'S 6 d 12017 11942',\n  'S 5 z 12693 12692',\n  'S 5 s 12000 12694',\n  'S 3 g 11943 12695',\n  'S 3 j 11943 12696',\n  'S 5 s 11943 12697',\n  'S 5 b 11943 12000',\n  'S 3 c 11943 12698',\n  'S 3 t 11942 12699',\n  'S 6 l 11961 11942',\n  'S 4 d 11942 12700',\n  'S 3 i 12000 12701',\n  'S 6 i 12702 11943',\n  'S 5 v 12000 11943',\n  'S 3 b 11943 12703',\n  'S 5 n 11943 12704',\n  'S 3 c 12000 11943',\n  'S 3 v 11943 12705',\n  'S 6 r 12707 12706',\n  'S 6 s 11942 12708',\n  'S 4 k 12000 12709',\n  'S 4 d 11943 12710',\n  'S 3 m 11943 12000',\n  'S 3 b 11943 12711',\n  'S 3 g 11943 12712',\n  'S 4 d 11942 12713',\n  'S 3 l 11942 11961',\n  'S 6 c 11942 12714',\n  'S 3 l 12716 12715',\n  'S 3 n 11961 11943',\n  'S 3 g 11943 12717',\n  'S 5 g 11943 12718',\n  'S 6 l 11942 12719',\n  'S 3 t 11942 12720',\n  'S 4 m 11943 12721',\n  'S 5 n 12000 12722',\n  'S 4 g 11943 12723',\n  'S 5 s 11943 12724',\n  'S 4 b 11942 12725',\n  'S 4 b 11942 12726',\n  'S 3 r 11943 12727',\n  'S 6 a 12729 12728',\n  'S 3 d 11943 12730',\n  'S 5 k 11943 12731',\n  'S 3 d 12000 12246',\n  'S 6 n 11942 12732',\n  'S 6 a 12734 12733',\n  'S 5 w 11943 12735',\n  'S 4 n 12000 11943',\n  'S 5 g 12737 12736',\n  'S 6 o 11943 12703',\n  'S 6 a 11942 11961',\n  'S 6 s 12590 11943',\n  'S 5 t 11943 12738',\n  'S 5 t 12739 11943',\n  'S 3 f 11943 12740',\n  'S 3 t 12000 11943',\n  'S 3 n 12000 11943',\n  'S 4 t 11943 12445',\n  'S 4 p 12741 11943',\n  'S 5 p 11943 12742',\n  'S 3 r 12000 11943',\n  'I 12743 v',\n  'S 4 v 12745 12744',\n  'P v',\n  'P epsilon',\n  'I 12746 w',\n  'S 3 o 12748 12747',\n  'S 3 e 12750 12749',\n  'S 5 k 12752 12751',\n  'S 3 a 12754 12753',\n  'S 5 k 12756 12755',\n  'S 6 z 12758 12757',\n  'S 6 i 12756 12759',\n  'S 4 r 12759 12760',\n  'S 4 a 12762 12761',\n  'S 6 z 12764 12763',\n  'P f',\n  'S 4 a 12766 12765',\n  'S 5 c 12764 12767',\n  'P epsilon',\n  'S 5 o 12769 12768',\n  'S 5 k 12756 12770',\n  'S 5 l 12759 12767',\n  'S 4 o 12762 12771',\n  'P v',\n  'S 6 l 12773 12772',\n  'S 5 y 12767 12774',\n  'P w',\n  'S 3 u 12776 12775',\n  'S 4 h 12777 12767',\n  'S 4 o 12767 12778',\n  'S 4 a 12780 12779',\n  'S 4 o 12767 12759',\n  'S 5 l 12767 12759',\n  'S 1 c 12767 12759',\n  'S 5 r 12782 12781',\n  'S 1 # 12767 12783',\n  'S 6 l 12759 12784',\n  'S 4 h 12767 12785',\n  'S 4 i 12787 12786',\n  'S 5 y 12767 12788',\n  'S 4 e 12767 12789',\n  'S 3 s 12790 12767',\n  'S 4 e 12767 12759',\n  'S 6 o 12767 12759',\n  'S 4 i 12792 12791',\n  'S 4 e 12794 12793',\n  'S 6 d 12767 12795',\n  'S 1 # 12759 12796',\n  'S 5 s 12798 12797',\n  'S 6 t 12767 12799',\n  'S 4 e 12801 12800',\n  'S 6 g 12759 12802',\n  'S 4 h 12802 12759',\n  'S 6 l 12802 12803',\n  'S 6 e 12767 12804',\n  'S 6 e 12767 12805',\n  'S 3 i 12806 12767',\n  'S 6 i 12764 12767',\n  'S 1 a 12759 12807',\n  'S 5 o 12808 12759',\n  'S 1 # 12809 12759',\n  'S 1 # 12759 12767',\n  'S 5 d 12759 12810',\n  'S 1 e 12767 12811',\n  'S 6 k 12767 12812',\n  'S 1 s 12764 12767',\n  'S 6 d 12759 12767',\n  'S 1 # 12813 12759',\n  'S 6 # 12759 12764',\n  'S 5 l 12759 12814',\n  'S 5 s 12759 12815',\n  'S 6 # 12759 12816',\n  'S 6 n 12759 12764',\n  'S 5 r 12759 12817',\n  'S 5 n 12759 12818',\n  'S 1 s 12759 12819',\n  'S 5 s 12759 12820',\n  'S 6 t 12759 12821',\n  'S 5 r 12767 12773',\n  'S 5 y 12759 12822',\n  'S 6 # 12759 12767',\n  'S 6 t 12759 12823',\n  'S 5 n 12759 12824',\n  'S 5 # 12759 12767',\n  'I 12825 x',\n  'S 3 u 12827 12826',\n  'S 2 0 12829 12828',\n  'S 4 # 12831 12830',\n  'S 3 e 12832 12830',\n  'P z',\n  'P k-s',\n  'S 2 l 12830 12833',\n  'S 4 a 12835 12834',\n  'P epsilon',\n  'S 4 u 12837 12836',\n  'S 2 # 12839 12838',\n  'S 4 h 12839 12840',\n  'S 2 s 12841 12839',\n  'S 2 l 12839 12830',\n  'P g-z',\n  'S 4 e 12843 12842',\n  'P k-sh',\n  'S 4 i 12845 12844',\n  'S 2 # 12839 12830',\n  'S 4 o 12839 12830',\n  'S 2 l 12830 12846',\n  'S 2 m 12830 12843',\n  'I 12847 y',\n  'S 4 # 12849 12848',\n  'S 2 0 12851 12850',\n  'S 3 a 12853 12852',\n  'S 3 a 12855 12854',\n  'S 5 a 12857 12856',\n  'S 3 o 12853 12858',\n  'P epsilon',\n  'S 3 o 12860 12859',\n  'S 4 a 12862 12861',\n  'P y',\n  'S 4 e 12856 12863',\n  'S 3 f 12865 12864',\n  'S 3 e 12867 12866',\n  'S 4 o 12869 12868',\n  'S 4 u 12853 12870',\n  'S 5 m 12856 12871',\n  'P iy',\n  'S 3 e 12873 12872',\n  'S 2 i 12875 12874',\n  'S 1 0 12877 12876',\n  'S 4 e 12879 12878',\n  'S 5 m 12856 12853',\n  'S 2 t 12856 12853',\n  'S 4 o 12853 12880',\n  'S 2 b 12853 12881',\n  'S 3 u 12875 12882',\n  'S 2 l 12863 12883',\n  'S 2 f 12863 12875',\n  'P ay1',\n  'S 4 a 12885 12884',\n  'S 3 s 12887 12886',\n  'S 1 # 12853 12888',\n  'S 2 m 12890 12889',\n  'S 5 v 12875 12853',\n  'S 2 r 12853 12891',\n  'S 2 f 12892 12863',\n  'S 2 n 12863 12893',\n  'S 1 # 12895 12894',\n  'S 1 # 12897 12896',\n  'S 5 e 12875 12898',\n  'S 5 o 12900 12899',\n  'S 2 n 12863 12901',\n  'S 5 r 12903 12902',\n  'S 1 # 12875 12904',\n  'S 2 k 12875 12905',\n  'S 3 l 12875 12863',\n  'S 2 s 12863 12906',\n  'S 5 e 12908 12907',\n  'S 2 a 12910 12909',\n  'S 3 i 12912 12911',\n  'S 3 i 12856 12875',\n  'S 4 o 12914 12913',\n  'S 4 r 12916 12915',\n  'S 4 n 12917 12916',\n  'S 5 # 12863 12918',\n  'S 5 d 12853 12875',\n  'S 2 b 12875 12853',\n  'P ay',\n  'S 5 n 12853 12919',\n  'S 2 v 12920 12863',\n  'S 4 n 12922 12921',\n  'S 3 r 12863 12923',\n  'S 2 o 12925 12924',\n  'S 3 n 12863 12916',\n  'S 5 n 12926 12856',\n  'S 5 # 12853 12856',\n  'S 4 u 12856 12927',\n  'S 3 k 12856 12928',\n  'S 5 e 12875 12916',\n  'P ih1',\n  'P ah',\n  'S 2 l 12863 12853',\n  'S 2 p 12853 12875',\n  'S 1 a 12863 12929',\n  'S 5 n 12931 12930',\n  'S 5 a 12904 12932',\n  'S 1 p 12934 12933',\n  'S 2 e 12936 12935',\n  'S 4 m 12916 12917',\n  'S 2 e 12856 12937',\n  'S 4 a 12939 12938',\n  'S 5 n 12875 12940',\n  'S 1 o 12863 12941',\n  'S 4 k 12943 12942',\n  'S 4 i 12944 12937',\n  'S 2 a 12946 12945',\n  'S 2 g 12916 12947',\n  'S 4 m 12917 12863',\n  'S 3 s 12875 12948',\n  'S 3 g 12917 12916',\n  'S 3 n 12856 12863',\n  'S 4 e 12875 12949',\n  'S 5 n 12904 12875',\n  'S 3 m 12875 12856',\n  'S 1 l 12863 12853',\n  'S 4 l 12951 12950',\n  'S 5 # 12952 12916',\n  'S 3 f 12875 12953',\n  'S 2 e 12917 12954',\n  'S 3 r 12952 12916',\n  'S 4 l 12956 12955',\n  'S 5 e 12875 12957',\n  'S 4 r 12959 12958',\n  'S 4 e 12961 12960',\n  'S 5 # 12917 12962',\n  'P ih',\n  'S 3 l 12964 12963',\n  'S 5 s 12916 12965',\n  'S 3 d 12875 12966',\n  'S 2 s 12875 12917',\n  'S 4 e 12875 12967',\n  'S 3 h 12969 12968',\n  'S 5 o 12875 12970',\n  'S 4 o 12972 12971',\n  'S 3 u 12853 12973',\n  'S 3 r 12975 12974',\n  'S 2 r 12863 12976',\n  'S 2 l 12863 12875',\n  'S 1 r 12917 12977',\n  'S 4 n 12875 12978',\n  'S 3 k 12875 12979',\n  'S 4 n 12981 12980',\n  'S 5 n 12916 12982',\n  'S 5 a 12875 12983',\n  'S 4 u 12856 12984',\n  'S 5 # 12856 12863',\n  'S 5 # 12875 12985',\n  'S 2 a 12917 12986',\n  'S 1 m 12917 12863',\n  'S 3 r 12875 12863',\n  'S 5 i 12916 12987',\n  'S 4 p 12875 12988',\n  'S 4 o 12990 12989',\n  'S 5 o 12992 12991',\n  'S 3 d 12875 12916',\n  'S 5 t 12916 12875',\n  'S 3 l 12916 12993',\n  'S 4 r 12995 12994',\n  'S 3 m 12863 12996',\n  'S 3 b 12916 12917',\n  'S 3 w 12916 12997',\n  'S 1 e 12999 12998',\n  'S 3 u 12875 13000',\n  'S 3 r 12875 12853',\n  'S 3 c 13002 13001',\n  'S 4 c 12904 12875',\n  'S 3 m 12853 13003',\n  'S 5 t 13005 13004',\n  'S 2 o 12863 12853',\n  'S 3 l 13006 12856',\n  'S 3 s 12916 13007',\n  'S 2 a 12875 13008',\n  'S 2 n 12875 12863',\n  'S 4 n 12916 13009',\n  'S 5 a 13011 13010',\n  'S 4 c 12875 13012',\n  'S 5 i 12875 12916',\n  'S 4 c 13014 13013',\n  'S 3 l 12917 12916',\n  'S 5 a 12856 12863',\n  'S 2 r 12916 13015',\n  'S 1 c 12863 13016',\n  'S 5 n 12875 13017',\n  'S 3 m 12916 13018',\n  'S 3 l 12875 13019',\n  'S 4 p 12875 12916',\n  'S 4 i 12972 13020',\n  'S 3 c 13022 13021',\n  'S 1 e 12917 12916',\n  'S 3 l 12863 13023',\n  'S 4 l 12875 13024',\n  'S 4 m 12916 13025',\n  'S 3 b 12875 13026',\n  'S 3 l 13028 13027',\n  'S 3 z 12916 13029',\n  'S 2 i 12952 12875',\n  'S 2 o 12875 13030',\n  'S 5 o 12875 13031',\n  'S 3 r 12916 13032',\n  'S 4 l 12916 13033',\n  'S 3 z 13035 13034',\n  'S 2 l 13037 13036',\n  'S 2 o 13038 12916',\n  'S 4 r 12875 13039',\n  'S 2 f 12875 13040',\n  'S 4 i 12875 13041',\n  'S 4 b 12916 12875',\n  'S 4 d 13043 13042',\n  'S 4 b 12917 12875',\n  'S 4 t 13045 13044',\n  'S 4 s 12917 12863',\n  'S 1 p 12952 12863',\n  'S 3 h 12875 12904',\n  'S 2 s 13047 13046',\n  'S 5 u 12916 13048',\n  'S 1 o 12916 13049',\n  'S 3 h 12875 12863',\n  'S 5 i 12917 13050',\n  'S 2 a 12916 12917',\n  'S 2 p 12916 13051',\n  'S 3 z 12916 12875',\n  'S 3 z 12916 13052',\n  'S 1 r 12916 13053',\n  'S 1 p 13054 12916',\n  'S 4 p 12916 13055',\n  'S 5 h 12875 13056',\n  'S 4 p 12916 13057',\n  'S 4 g 12916 13058',\n  'S 5 h 12916 13059',\n  'S 3 d 12916 13060',\n  'S 3 s 12917 13061',\n  'S 5 a 12917 12863',\n  'S 3 h 12875 13062',\n  'S 5 s 12916 13063',\n  'S 3 n 13064 12863',\n  'S 2 c 12916 13065',\n  'S 3 b 12875 13066',\n  'S 2 o 12917 12863',\n  'S 3 r 12916 12875',\n  'S 4 d 12916 13067',\n  'S 5 i 12875 13068',\n  'S 3 l 12875 13069',\n  'S 3 w 12875 12916',\n  'I 13070 z',\n  'S 3 t 13072 13071',\n  'S 4 z 13074 13073',\n  'S 4 # 13076 13075',\n  'S 3 c 13074 13077',\n  'P epsilon',\n  'S 4 e 13079 13078',\n  'P s',\n  'S 3 s 13074 13080',\n  'S 4 s 13074 13081',\n  'P z',\n  'S 3 z 13083 13082',\n  'S 4 i 13079 13084',\n  'S 3 d 13086 13085',\n  'S 4 l 13079 13087',\n  'S 4 o 13079 13076',\n  'S 4 s 13074 13088',\n  'S 4 i 13074 13089',\n  'S 4 # 13079 13090',\n  'S 4 h 13092 13091',\n  'S 4 e 13079 13074',\n  'S 4 y 13079 13093',\n  'S 3 r 13079 13094',\n  'S 3 # 13095 13079',\n  'S 4 o 13079 13096',\n  'S 4 # 13079 13097',\n  'P zh',\n  'S 4 e 13079 13098',\n  'S 3 l 13099 13079',\n  'P t-s',\n  'S 4 b 13098 13079'\n];\n\nexport default LetterToSound;","import Util from \"./util.js\";\nimport LetterToSound from \"./rita_lts.js\";\n\nconst SP = ' ', E = '';\n\n/**\n * @class Analyzer\n * @memberof module:rita\n */\nclass Analyzer {\n\n  constructor(parent) {\n    this.cache = {};\n    this.RiTa = parent;\n    this.lts = undefined;\n  }\n\n  analyze(text, opts) {\n    let words = this.RiTa.tokenizer.tokenize(text);\n    let tags = this.RiTa.pos(text, opts); // tags are not cached\n    let features = {\n      phones: E,\n      stresses: E,\n      syllables: E,\n      pos: tags.join(SP),\n      tokens: words.join(SP)\n    }\n\n    for (let i = 0; i < words.length; i++) {\n      let { phones, stresses, syllables } = this.analyzeWord(words[i], opts);\n      features.phones += SP + phones;\n      features.stresses += SP + stresses;\n      features.syllables += SP + syllables;\n    }\n    Object.keys(features).forEach(k => features[k] = features[k].trim());\n\n    return features;\n  }\n\n  computePhones(word, opts) {\n    this.lts = this.lts || new LetterToSound(this.RiTa);\n    return this.lts.buildPhones(word, opts);\n  }\n\n  phonesToStress(phones) {\n    if (!phones) return;\n    let stress = E, syls = phones.split(SP);\n    for (let j = 0; j < syls.length; j++) {\n      if (!syls[j].length) continue;\n      stress += syls[j].includes('1') ? '1' : '0';\n      if (j < syls.length - 1) stress += '/';\n    }\n    return stress;\n  }\n\n  analyzeWord(word, opts = {}) {\n\n    // check the cache first\n    let result = this.RiTa.CACHING && this.cache[word];\n    if (typeof result === 'undefined') {\n\n      let slash = '/', delim = '-';\n      let lex = this.RiTa.lexicon\n      let phones = word, syllables = word, stresses = word;\n      let rawPhones = lex.rawPhones(word, { noLts: true })\n        || this._computeRawPhones(word, lex, opts);\n\n      if (rawPhones) {\n\n        // compute phones, syllables and stresses\n        if (typeof rawPhones === 'string') {\n          let sp = rawPhones.replace(/1/g, E).replace(/ /g, delim) + SP;\n          phones = (sp === 'dh ') ? 'dh-ah ' : sp; // special case\n          let ss = rawPhones.replace(/ /g, slash).replace(/1/g, E) + SP;\n          syllables = (ss === 'dh ') ? 'dh-ah ' : ss;\n          stresses = this.phonesToStress(rawPhones);\n        }\n        else {\n          // hyphenated #HWF\n          let ps = [], syls = [], strs = [];\n          rawPhones.forEach(p => {\n            let sp = p.replace(/1/g, E).replace(/ /g, delim);\n            ps.push((sp === 'dh ') ? 'dh-ah ' : sp); // special case\n            let ss = p.replace(/ /g, slash).replace(/1/g, E);\n            syls.push((ss === 'dh ') ? 'dh-ah ' : ss);\n            strs.push(this.phonesToStress(p));\n          });\n          phones = ps.join(\"-\");\n          syllables = syls.join(\"/\");\n          stresses = strs.join(\"-\");\n          // end of #HWF\n        }\n      }\n\n      result = { phones, stresses, syllables };\n      Object.keys(result).forEach(k => result[k] = result[k].trim());\n\n      // add to cache if enabled\n      if (this.RiTa.CACHING) this.cache[word] = result;\n    }\n\n    return result;\n  }\n\n  _computeRawPhones(word, lex, opts) {\n    return word.includes(\"-\")  // #HWF\n      ? this._computePhonesHyph(word, lex, opts)\n      : this._computePhonesWord(word, lex, opts);\n  }\n\n  //#HWF\n  _computePhonesHyph(word, lex, opts) {\n    let rawPhones = [];\n    word.split(\"-\").forEach(p => {\n      let part = this._computePhonesWord(p, lex, opts, true);\n      if (part && part.length > 0) rawPhones.push(part);\n    });\n    return rawPhones;\n  }\n\n  //#HWF this part is unchanged but move to a separated function\n  _computePhonesWord(word, lex, opts, isPart) {\n    let rawPhones, RiTa = this.RiTa;\n    if (isPart) rawPhones = lex.rawPhones(word, { noLts: true });\n    // if its a simple plural ending in 's',\n    // and the singular is in the lexicon, add '-z' to end\n    if (!rawPhones && word.endsWith('s')) {\n      let sing = RiTa.singularize(word);\n      rawPhones = lex.rawPhones(sing, { noLts: true });\n      rawPhones && (rawPhones += '-z'); // add 's' phone\n    }\n\n    // TODO: what about verb forms here?? Need test cases\n    let silent = RiTa.SILENT || RiTa.SILENCE_LTS || (opts && opts.silent);\n\n    // if no phones yet, try the lts-engine\n    if (!rawPhones) {\n      let ltsPhones = this.computePhones(word, opts);\n      if (ltsPhones && ltsPhones.length) {\n        if (!silent && lex.size()) {// && word.match(HAS_LETTER_RE)) {\n          console.log(\"[RiTa] Used LTS-rules for '\" + word + \"'\");\n        }\n        rawPhones = Util.syllablesFromPhones(ltsPhones);\n      }\n    }\n\n    return rawPhones;\n  }\n}\n\nconst HAS_LETTER_RE = /[a-zA-Z]+/;\n\nexport default Analyzer;","/**\n * @class Concorder\n * @memberof module:rita\n */\nclass Concorder {\n\n  constructor(parent) {\n    this.RiTa = parent;\n  }\n\n  concordance(text, options) {\n    \n    this.words = Array.isArray(text) ? text : this.RiTa.tokenize(text);\n    this.ignoreCase = options && options.ignoreCase || false;\n    this.ignoreStopWords = options && options.ignoreStopWords || false;\n    this.ignorePunctuation = options && options.ignorePunctuation || false;\n    this.wordsToIgnore = options && options.wordsToIgnore || [];\n    \n    this._buildModel();\n    \n    let result = {};\n    for (let name in this.model) {\n      result[name] = this.model[name].indexes.length;\n    }\n    return result; // TODO: sort by value here?\n  }\n\n  kwic(word, opts) { // opts can be an options object or an integer\n\n    let numWords = 6;\n    if (typeof opts === 'object') { \n      numWords = opts['numWords'];\n      //text = opts['text'];\n      if (opts['text'] && opts['text'].length) this.concordance(opts['text'], opts);\n      if (opts['words'] && opts['words'].length) this.concordance(opts['words'], opts); \n    }\n    else if (typeof opts ==='number') {\n      numWords = opts;\n    }\n\n    if (typeof numWords !== 'number') numWords = 6;  \n\n    if (!this.model) throw Error('Call concordance() first');\n    \n    let result = [];\n    let value = this._lookup(word);\n    if (value) {\n      let idxs = value.indexes;\n      for (let i = 0; i < idxs.length; i++) {\n        let sub = this.words.slice(Math.max(0, idxs[i] - numWords),\n          Math.min(this.words.length, idxs[i] + numWords + 1));\n        if (i < 1 || (idxs[i] - idxs[i - 1]) > numWords) {\n          result.push(this.RiTa.untokenize(sub));\n        }\n      }\n    }\n    return result;\n  }\n\n  count(word) {\n    let value = this._lookup(word);\n    return value && value.indexes ? value.indexes.length : 0;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n\n  _buildModel() {\n    if (!this.words || this.words.length == 0) throw Error('No text in model'); \n    this.model = {};\n    for (let j = 0; j < this.words.length; j++) {\n      let word = this.words[j];\n      if (this._isIgnorable(word)) continue;\n      let _lookup = this._lookup(word);\n      // The typeof check below fixes a strange bug in Firefox: #XYZ\n      // where the string 'watch' comes back from _lookup as a function\n      // TODO: resolve in a better way\n      if (!_lookup || typeof _lookup !== 'object') {\n        _lookup = { word: word, key: this._compareKey(word), indexes: [] };\n        this.model[_lookup.key] = _lookup;\n      }\n      _lookup.indexes.push(j);\n    }\n  }\n\n  _isIgnorable(key) {\n    if ((this.ignorePunctuation && this.RiTa.isPunct(key)) || \n      (this.ignoreStopWords && this.RiTa.isStopWord(key))) return true;\n    for (let i = 0; i < this.wordsToIgnore.length; i++) {\n      let word = this.wordsToIgnore[i];\n      if (key === word || (this.ignoreCase && key.toUpperCase() === word.toUpperCase())) {\n        return true;\n      }\n    }\n  }\n\n  _compareKey(word) {\n    return this.ignoreCase ? word.toLowerCase() : word;\n  }\n\n  _lookup(word) {\n    let key = this._compareKey(word);\n    return this.model[key];\n  }\n}\n\nexport default Concorder;","import Util from './util.js';\n\n/**\n * @class SeededRandom\n * @memberof module:rita\n */\nclass SeededRandom {\n\n  // see https://github.com/bmurray7/mersenne-twister-examples/blob/master/javascript-mersenne-twister.js\n\n  constructor() {\n    this.N = 624;\n    this.M = 397;\n    this.MATRIX_A = 0x9908b0df;\n    this.UPPER_MASK = 0x80000000;\n    this.LOWER_MASK = 0x7fffffff;\n    this.mt = new Array(this.N);\n    this.mti = this.N + 1;\n    this.seed(new Date().getTime());\n  }\n\n  shuffle(arr) { \n    let newArray = arr.slice(),\n      len = newArray.length,\n      i = len;\n    while (i--) {\n      let p = Math.floor(this.random(len)), t = newArray[i];\n      newArray[i] = newArray[p];\n      newArray[p] = t;\n    }\n    return newArray;\n  }\n\n  randomOrdering(arg) {\n    if (!(Array.isArray(arg) || Util.isNum(arg))) throw Error('Expects [] or int');\n    let o = Array.isArray(arg) ? arg : Array.from(Array(arg).keys());\n    for (let j, x, i = o.length; i; j = Math.floor(this.random() * i),\n      x = o[--i], o[i] = o[j], o[j] = x) { /* shuffle */ }\n    return o;\n  }\n\n  seed(num) {\n    this.mt[0] = num >>> 0;\n    for (this.mti = 1; this.mti < this.N; this.mti++) {\n      let s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n      this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\n        (s & 0x0000ffff) * 1812433253) + this.mti;\n      this.mt[this.mti] >>>= 0;\n    }\n  }\n\n  /*\n    Returns a single (selected) index from a normalised\n    probability distribution (with probabilities summing to 1)\n  */\n  pselect(probs) {\n    if (!probs || !probs.length) throw Error('arg required');\n    let point = this._rndf(), cutoff = 0;\n    for (let i = 0; i < probs.length - 1; ++i) {\n      cutoff += probs[i];\n      if (point < cutoff) return i;\n    }\n    return probs.length - 1;\n  }\n\n  /*\n   * Returns the selected index from a probability distribution\n   * (probabilities do NOT need to sum to 1)\n   * TODO: test (more general version)\n   */\n  pselect2(weights) {\n    let sum = weights.reduce((acc, ele) => acc + ele, 0);\n    let rand = Math.random() * sum; // from 0 - sum\n    return weights.find(ele => (rand -= ele) < 0);\n  }\n\n  /*\n    Returns a normalised probability distribution (summing to 1) for arbitrary positive weights\n    If temperature is provided this is basically the softmax, otherwise it simple normalisation\n    Temperature parameter: range is between 0 and +Infinity (excluding both).\n    Lower values move the highest-weighted output toward a probability of 1.0.\n    Higher values tend to even out all the probabilities\n  */\n  ndist(weights, temp) {\n    let probs = [], sum = 0;\n    if (!temp) { // no temp here\n      for (let i = 0; i < weights.length; i++) {\n        if (weights[i] < 0) throw Error('Weights must be positive');\n        sum += weights[i];\n        probs.push(weights[i]);\n      }\n    }\n    else { // have temp, do softmax\n      if (temp < 0.01) temp = 0.01;\n      for (let i = 0; i < weights.length; i++) {\n        let pr = Math.exp(weights[i] / temp);\n        sum += pr;\n        probs.push(pr);\n      }\n    }\n    return probs.map(p => p /= sum);\n  }\n\n  /*\n    Returns a random float, or item from an array\n    random() -> 0 < 1\n    random(k) -> 0 < k\n    random(j,k) -> j < k\n    random(arr) -> item from arr\n    random(arr, func) -> item from arr, map => func\n  */\n  random() {\n    let crand = this._rndf();\n    if (!arguments.length) return crand;\n    if (Array.isArray(arguments[0])) {\n      let arr = arguments[0];\n      return arr[Math.floor(crand * arr.length)];\n    }\n    return arguments.length === 1 ? crand * arguments[0] :\n      crand * (arguments[1] - arguments[0]) + arguments[0];\n  }\n\n  /*\n    Returns a random float between min and max, centered around bias\n    @bias - the center point of the distribution (min => x < max)\n    @influence - how close result is likely to be to bias (0-1)\n  */\n  randomBias(min, max, bias, influence = 0.5) { // @TODO: test/doc\n    const base = this._rndf() * max + min;\n    const mix = this._rndf() * influence;\n    return base * (1 - mix) + bias * mix;\n  } // adapted from: https://github.com/georgedoescode/generative-utils\n\n  // ////////////////////////////////////////////////////////////////////////////////////\n\n  _rndi() { // int between 0 and max value\n    let y, kk, mag01 = new Array(0x0, this.MATRIX_A);\n    if (this.mti >= this.N) {\n      if (this.mti == this.N + 1) this.seed(5489);\n      for (kk = 0; kk < this.N - this.M; kk++) {\n        y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n        this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      for (; kk < this.N - 1; kk++) {\n        y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n        this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      y = (this.mt[this.N - 1] & this.UPPER_MASK) | (this.mt[0] & this.LOWER_MASK);\n      this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n      this.mti = 0;\n    }\n    y = this.mt[this.mti++];\n    y ^= (y >>> 11);\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= (y >>> 18);\n    return y >>> 0;\n  }\n\n  _rndf() { // float between 0 and 1\n    return this._rndi() * (1.0 / 4294967296.0);\n  }\n\n}\n\nexport default SeededRandom;","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","import { parse, stringify } from '@ungap/structured-clone/json';\n\n/**\n * See full set of options for RiMarkov (https://rednoise.org/rita/reference/RiTa/markov/index.html)\n * and RiMarkov.generate (https://rednoise.org/rita/reference/RiMarkov/generate/index.html)\n * \n * @class RiMarkov\n * @memberof module:rita\n */\nclass RiMarkov {\n\n  static parent; // RiTa\n\n  /**\n   * Creates a new RiMarkov object with functions for text-generation and other probabilistic functions, \n   * via Markov chains (or n-grams) with options to process words or tokens split by arbitrary regular expressions.\n   * @param {number} [n] - the n-gram size (an integer >= 2)\n   * @param {object} [options={}] - options for the model\n   * @param {string|string[]} [options.text] - a text string, or array of sentences, to add to the model (same as via model.addText()\n   * @param {boolean} [options.trace] - output trace info to the console\n   * @param {number} [options.maxLengthMatch] - # of words allowed in result to match a sequence in the input, default=∞\n   * @param {number} [options.maxAttempts=999] - max attempts before to complete one ore more generations before erroring, default=999\n   * @param {object} [options.tokenize] - custom tokenize() function, defaults to RiTa.tokenize()\n   * @param {function} [options.untokenize] - custom untokenize() function, defaults to RiTa.untokenize()\n   * @param {boolean} [options.disableInputChecks=false] - if true, allow result to be present in the input, default\n   * @memberof RiMarkov\n   */\n  constructor(n, options = {}) {\n\n    this.n = n;\n    this.root = new Node(null, 'ROOT');\n\n    this.trace = options.trace;\n    this.mlm = options.maxLengthMatch;\n    this.maxAttempts = options.maxAttempts || 999;\n    this.tokenize = options.tokenize || RiMarkov.parent.tokenize;\n    this.untokenize = options.untokenize || RiMarkov.parent.untokenize;\n    this.disableInputChecks = options.disableInputChecks;\n    this.sentenceStarts = []; // allow duplicates for prob\n\n    /** @type {Set<string>} */ this.sentenceEnds = new Set(); // no dups    \n\n    if (this.n < 2) throw Error('minimum N is 2');\n\n    if (this.mlm && this.mlm < this.n) throw Error('maxLengthMatch must be >= N');\n\n    // we store inputs to verify we don't duplicate sentences\n    if (!this.disableInputChecks || this.mlm) this.input = [];\n\n    // add text if supplied as opt // \n    if (options.text) this.addText(options.text);\n  }\n\n  /**\n   * Loads text into the model. If a raw string is provided, it will be split into sentences \n   * via RiTa.sentences(). If an array is provided, each string will be treated as an individual sentence.\n   * @param {string|string[]} text - a text string, or array of sentences, to add to the model\n   * @param {number} [multiplier=1] - number of times to add the text to the model\n   * @return {RiMarkov} - the RiMarkov instance\n   */\n  addText(text, multiplier = 1) {\n\n    let sents = Array.isArray(text) ? text : RiMarkov.parent.sentences(text);\n\n    // add new tokens for each sentence start/end\n    let allWords = [];\n    for (let k = 0; k < multiplier; k++) {\n      for (let i = 0; i < sents.length; i++) {\n        let words = this.tokenize(sents[i]);\n        this.sentenceStarts.push(words[0]);\n        this.sentenceEnds.add(words[words.length - 1]);\n        allWords.push(...words);\n      }\n      this.treeify(allWords);\n    }\n\n    if (!this.disableInputChecks || this.mlm) {\n      for (let i = 0; i < allWords.length; i++) {\n        this.input.push(allWords[i]);\n      }\n    }\n    return this;\n  }\n\n\n  /** \n   * @overload\n   * @param {number} count\n   * @param {object} [options={}] - options for the generation\n   * @param {number} [options.minLength=5] - minimum length of each sentence\n   * @param {number} [options.maxLength=35] - maximum length of each sentence\n   * @param {number} [options.temperature=1] - temperature acts as a knob to adjust the probability that input elements will be selected for the output. At higher values, infrequent words are more likely to be chosen, while at lower values the most frequent inputs are more likely to be output. If no value is provided, then tokens are chosen according to their relative frequency in the input.\n   * @param {boolean} [options.allowDuplicates=false] - if true, allow duplicate sentences in the output\n   * @param {string|string[]} [options.seed] - a seed string or array of tokens to start the generation\n   * @returns {string[]}\n   *\n   * @overload\n   * @param {object} [options={}] - options for the generation\n   * @param {number} [options.minLength=5] - minimum length of each sentence\n   * @param {number} [options.maxLength=35] - maximum length of each sentence\n   * @param {number} [options.temperature=1] - temperature acts as a knob to adjust the probability that input elements will be selected for the output. At higher values, infrequent words are more likely to be chosen, while at lower values the most frequent inputs are more likely to be output. If no value is provided, then tokens are chosen according to their relative frequency in the input.\n   * @param {boolean} [options.allowDuplicates=false] - if true, allow duplicate sentences in the output\n   * @param {string|string[]} [options.seed] - a seed string or array of tokens to start the generation\n   * @returns {string}\n   */\n  generate(count, options = {}) {\n\n    let returnsArray = false; \n    if (typeof count === 'number') {\n      if (count === 1) {\n        throw Error(\"For one result, use generate() with no 'count' argument\");\n      }\n      returnsArray = true;\n    }\n\n    if (arguments.length === 1 && typeof count === 'object') {\n      options = count;\n      count = 1;\n    }\n\n    const num = count || 1;\n    const minLength = options.minLength || 5;\n    const maxLength = options.maxLength || 35;\n\n    if (typeof options.temperature !== 'undefined' && options.temperature <= 0) {\n      throw Error(\"Temperature option must be greater than 0\");\n    }\n\n    let tries = 0, tokens = [];//, usedStarts = [];\n    let minIdx = 0, sentenceIdxs = [];\n    let markedNodes = [];\n\n    ////////////////////////// local functions /////////////////////////////\n\n    const unmarkNodes = () => {\n      markedNodes.forEach(n => n.marked = false);\n    }\n\n    const resultCount = () => {\n      return tokens.filter(t => this._isEnd(t)).length;\n    }\n\n    const markNode = (node) => {\n      if (node) {\n        // save current tokens as a sort of hash of current state\n        node.marked = tokens.reduce((acc, e) => acc + e.token, '');\n        markedNodes.push(node);\n      }\n    }\n\n    const notMarked = (cn) => {\n      let tmap = tokens.reduce((acc, e) => acc + e.token, '');\n      return cn.marked !== tmap;\n    }\n\n    const validateSentence = (next) => {\n\n      markNode(next);\n      let sentIdx = sentenceIdx();\n\n      if (this.trace) console.log(1 + (tokens.length - sentIdx),\n        next.token, '[' + next.parent.childNodes().filter\n          (t => t !== next).map(t => t.token) + ']'); // print each child\n\n      let sentence = tokens.slice(sentIdx).map(t => t.token);\n      sentence.push(next.token);\n\n      if (sentence.length < minLength) {\n        fail('too-short (pop: ' + next.token + ')');\n        //console.log('pop: ' + next.token);\n        return false;\n      }\n\n      if (!this.disableInputChecks && isSubArray(sentence, this.input)) {\n        fail('in-input (pop: ' + next.token + ')');\n        return false;\n      }\n\n      let flatSent = this.untokenize(sentence);\n      if (!options.allowDuplicates && isSubArray(sentence, tokens.slice(0, sentIdx))) {\n        fail('duplicate (pop: ' + next.token + ')');\n        return false;\n      }\n\n      tokens.push(next);\n      sentenceIdxs.push(tokens.length);\n\n      if (this.trace) console.log('OK (' + resultCount() + '/' + num + ') \"' +\n        flatSent + '\" sidxs=[' + sentenceIdxs + ']\\n');\n\n      return true;\n    }\n\n    const fail = (msg, sentence, forceBacktrack) => {\n      tries++;\n      let sentIdx = sentenceIdx();\n      sentence = sentence || this._flatten(tokens.slice(sentIdx));\n      if (tries >= this.maxAttempts) throwError(tries, resultCount());\n      //if (tokens.length >= this.maxAttempts) throwError(tries, resultCount()); // ???\n      let parent = this._pathTo(tokens);\n      let numChildren = parent ? parent.childNodes({ filter: notMarked }).length : 0;\n\n      if (this.trace) console.log('Fail:', msg, '\\n  -> \"' + sentence + '\" ',\n        tries + ' tries, ' + resultCount() + ' successes, numChildren=' + numChildren\n        + (forceBacktrack ? ' forceBacktrack*' : (' parent=\"' + parent.token\n          + '\" goodKids=[' + parent.childNodes({ filter: notMarked }).map(t => t.token) + ']'\n          + '\" allKids=[' + parent.childNodes().map(t => t.token) + ']')));\n\n      if (forceBacktrack || numChildren === 0) {\n        backtrack();\n      }\n    }\n\n    // step back until we have a parent with children\n    // or we have reached our start\n    // if we find an option, return true\n    const backtrack = () => {\n\n      let parent, tc;\n      for (let i = 0; i < 99; i++) { // tmp-remove?\n        let last = tokens.pop();\n        markNode(last);\n\n        if (this._isEnd(last)) sentenceIdxs.pop();\n\n        let sentIdx = sentenceIdx();\n        let backtrackUntil = Math.max(sentIdx, minIdx);\n\n        if (this.trace) console.log('backtrack#' + tokens.length,\n          'pop \"' + last.token + '\" ' + (tokens.length - sentIdx)\n          + \"/\" + backtrackUntil + ' ' + this._flatten(tokens));\n\n        parent = this._pathTo(tokens);\n        tc = parent.childNodes({ filter: notMarked });\n\n        if (tokens.length <= backtrackUntil) {\n\n          if (minIdx > 0) { // have seed\n            if (tokens.length <= minIdx) { // back at seed\n              if (!tc.length) throw Error('back at barren-seed1: case 0');\n              if (this.trace) console.log('case 1');\n              return true;\n            }\n            else { // back at sentence-start with seed\n              if (!tc.length) {\n                if (this.trace) console.log('case 2: back at SENT-START: \"'\n                  + this._flatten(tokens) + '\" sentenceIdxs=' + sentenceIdxs\n                  + ' ok=[' + parent.childNodes({ filter: notMarked }).map(t => t.token)\n                  + '] all=[' + parent.childNodes().map(t => t.token) + ']');\n                sentenceIdxs.pop();\n              }\n              else {  // continue\n                if (this.trace) console.log('case 3');\n              }\n            }\n          }\n          else {             // TODO: recheck\n\n            if (this.trace) console.log('case 4: back at start of sentence'\n              + ' or 0: ' + tokens.length, sentenceIdxs);\n\n            if (!tokens.length) {\n              sentenceIdxs = [];\n              return selectStart();\n            }\n          }\n\n          return true;\n        }\n\n        if (tc.length) {\n          sentIdx = sentenceIdx();\n\n          if (this.trace) console.log((tokens.length - sentIdx)\n            + ' ' + this._flatten(tokens) + '\\n  ok=['\n            + tc.map(t => t.token) + '] all=[' + parent.childNodes\n              ({ filter: notMarked }).map(t => t.token) + ']');\n\n          return parent;\n        }\n      }\n\n      throw Error('Invalid state in backtrack() ['\n        + tokens.map(t => t.token) + ']');\n    }\n\n    const sentenceIdx = () => {\n      let len = sentenceIdxs.length;\n      return len ? sentenceIdxs[len - 1] : 0;\n    }\n\n    const selectStart = () => {\n\n      let seed = options.seed;\n\n      if (seed && seed.length) {\n        if (typeof seed === 'string') seed = this.tokenize(seed);\n        let node = this._pathTo(seed, this.root);\n        while (!node.isRoot()) {\n          tokens.unshift(node);\n          node = node.parent;\n        }\n      }\n\n      // we need a new sentence-start\n      else if (!tokens.length || this._isEnd(tokens[tokens.length - 1])) {\n\n        let usableStarts = this.sentenceStarts.filter(ss => notMarked(this.root.child(ss)));\n        if (!usableStarts.length) throw Error('No valid sentence-starts remaining');\n        let start = RiMarkov.parent.random(usableStarts);\n        let startTok = this.root.child(start);\n        markNode(startTok);\n        usableStarts = this.sentenceStarts.filter(ss => notMarked(this.root.child(ss)));\n        tokens.push(startTok);\n      }\n      else {\n        throw Error('Invalid call to selectStart: ' + this._flatten(tokens));\n      }\n    }\n\n    ////////////////////////////////// code ////////////////////////////////////////\n\n    selectStart();\n\n    while (resultCount() < num) {\n\n      let sentIdx = sentenceIdx();\n\n      if (tokens.length - sentIdx >= maxLength) {\n        fail('too-long', 0, true);\n        continue;\n      }\n\n      let parent = this._pathTo(tokens);\n      let next = this._selectNext(parent, options.temperature, tokens, notMarked);\n\n      if (!next) { // no valid children, pop and continue;\n        fail('mlm-fail(' + this.mlm + ')', this._flatten(tokens), true);\n        continue;\n      }\n\n      if (this._isEnd(next)) {\n        validateSentence(next);\n        continue;\n      }\n\n      tokens.push(next);\n\n      if (this.trace) console.log(tokens.length - sentIdx, next.token,\n        '[' + parent.childNodes({ filter: notMarked }) // print unmarked kids\n          .filter(t => t !== next).map(t => t.token) + ']');\n    }\n\n    unmarkNodes();\n\n    let str = this.untokenize(tokens.map(t => t.token)).trim();\n    return returnsArray ? this._splitEnds(str) : str;\n  }\n\n  /**\n   * Converts the model to a JSON-formatted string for storage or serialization\n   * @return {string} - the JSON string\n   */\n  toJSON() {\n    let data = Object.keys(this).reduce\n      ((acc, k) => Object.assign(acc, { [k]: this[k] }), {});\n    // @ts-ignore\n    data.sentenceEnds = [...data.sentenceEnds]; // set -> []\n    return stringify(data);\n  }\n\n  /**\n   * Creates a new model from one previously saved as JSON\n   * @param {string} json - the JSON string to load\n   * @return {RiMarkov} - the RiMarkov instance\n   */\n  static fromJSON(json) {\n\n    // parse the json and merge with new object\n    let parsed = parse(json);\n    let rm = Object.assign(new RiMarkov(), parsed);\n\n    // convert our json array back to a set\n    rm.sentenceEnds = new Set(...parsed.sentenceEnds);\n\n    // handle json converting undefined [] to empty []\n    if (!parsed.input) rm.input = undefined;\n\n    // then recreate the n-gram tree with Node objects\n    let jsonRoot = rm.root;\n    populate(rm.root = new Node(null, 'ROOT'), jsonRoot);\n\n    return rm;\n  }\n\n  /**\n   * Returns array of possible tokens after pre and (optionally) before post. If only one array parameter is provided, this function returns all possible next words, ordered by probability, for the given array. \n   * If two arrays are provided, it returns an unordered list of possible words w that complete the n-gram consisting of: pre[0]...pre[k], w, post[k+1]...post[n].\n   * @param {string[]} pre - the list of tokens preceding the completion\n   * @param {string[]} [post] - the (optional) list of tokens following the completion\n   * @return {string[]} - an unordered list of possible next tokens \n   */\n  completions(pre, post) {\n    let tn, result = [];\n    if (post) { // fill the center\n      if (pre.length + post.length > this.n) throw Error\n        ('Sum of pre.length && post.length must be <= N, was ' + (pre.length + post.length));\n      if (!(tn = this._pathTo(pre))) {\n        if (!RiMarkov.parent.SILENT) console.warn('Unable to find nodes in pre: ' + pre);\n        return;\n      }\n      const nexts = tn.childNodes();\n      for (let i = 0; i < nexts.length; i++) {\n        let atest = pre.slice(0);\n        atest.push(nexts[i].token, ...post);\n        if (this._pathTo(atest)) result.push(nexts[i].token);\n      }\n    } else { // fill the end\n      const pr = this.probabilities(pre);\n      result = Object.keys(pr).sort((a, b) => pr[b] - pr[a]);\n    }\n    return result;\n  }\n\n  /**\n   * Returns the full set of possible next tokens as a object, mapping tokens to probabilities,\n   *  given an array of tokens representing the path down the tree (with length less than `n`).\n   * @param {string|string[]} path - the path to the node as a string or an array of tokens\n   * @param {number} [temperature=1] - temperature acts as a knob to adjust the probability that input elements will be selected for the output. At higher values, infrequent words are more likely to be chosen, while at lower values the most frequent inputs are more likely to be output. If no value is provided, then tokens are chosen according to their relative frequency in the input.\n   * @return {object} - a map of tokens to probabilities\n   */\n  probabilities(path, temperature) {\n    if (!Array.isArray(path)) path = this.tokenize(path);\n    const probs = {};\n    const parent = this._pathTo(path);\n    if (parent) {\n      const children = parent.childNodes();\n      const weights = children.map(n => n.count);\n      const pdist = RiMarkov.parent.randomizer.ndist(weights, temperature);\n      children.forEach((c, i) => probs[c.token] = pdist[i]);\n    }\n    return probs;\n  }\n\n  /**\n   * Returns either the raw (unigram) probability for a single token in the model (0 if it does not exist), OR\n   * the probability of a sequence of K tokens where K is less than `n` (0 if the sequence does not exist).\n   * @param {string|string[]} data - the token or array of tokens to check\n   * @return {number} - the probability of the token or sequence\n   */\n  probability(data) {\n    let p = 0;\n    if (data && data.length) {\n      let tn = (typeof data === 'string') ?\n        this.root.child(data) : this._pathTo(data);\n      if (tn) p = tn.nodeProb(true); // no meta\n    }\n    return p;\n  }\n\n  /**\n   * Returns a string representation of the model or a subtree of the model, optionally ordered by probability.\n   * @param {object} root - the root node of the subtree to print\n   * @param {boolean} sort - if true, sort the nodes by probability\n   * @return {string} - the string representation of the model \n   */\n  toString(root, sort) {\n    root = root || this.root;\n    return root.asTree(sort).replace(/{}/g, '');\n  }\n\n  /**\n   * Returns the number of tokens currently in the model.\n   * @return {number} - number of tokens\n   */\n  size() {\n    return this.root.childCount(true);\n  }\n\n  ////////////////////////////// end API ////////////////////////////////\n\n  // selects child based on temp, filter and probability (throws)\n  _selectNext(parent, temp, tokens, filter) {\n\n    if (!parent) throw Error('no parent:' + this._flatten(tokens));\n\n    let children = parent.childNodes({ filter });\n    if (!children.length) {\n      if (this.trace) console.log('No children to select, parent=' + parent.token\n        + ' children=ok[], all=[' + parent.childNodes().map(t => t.token) + ']');\n      return;\n    }\n\n    // basic case: just prob. select from children\n    if (!this.mlm || this.mlm > tokens.length) {\n      return parent.pselect(filter);\n    }\n\n    const validateMlms = (word, nodes) => {\n      let check = nodes.slice(-this.mlm).map(n => n.token);\n      check.push(word.token);\n      return !isSubArray(check, this.input);\n    }\n\n    const rand = RiMarkov.parent.randomizer;\n    const weights = children.map(n => n.count);\n    const pdist = rand.ndist(weights, temp);\n    const tries = children.length * 2;\n    const selector = rand.random();\n\n    // loop 2x here as we may skip earlier nodes\n    // but keep track of tries to avoid duplicates\n    const tried = [];\n    for (let i = 0, pTotal = 0; i < tries; i++) {\n      let idx = i % children.length;\n      pTotal += pdist[idx];\n      let next = children[idx];\n      if (selector < pTotal) {\n        if (!tried.includes(next.token)) {\n          tried.push(next.token);\n          return validateMlms(next, tokens) ? next : false;\n        }\n      }\n    }\n  }\n\n  /*\n   * Returns true if node (or string) is a sentence end\n   */\n  _isEnd(node) {\n    if (node) {\n      let check = node;\n      if ('token' in node) check = node.token; // needed?\n      return this.sentenceEnds.has(check);\n    }\n    return false;\n  }\n\n  /*\n   * Follows 'path' (using only the last n-1 tokens) from root and returns\n   * the node for the last element if it exists, otherwise undefined\n   * @param  {Node[]} path\n   * @param  {node} root of tree to search\n   * @return {node} or undefined\n   */\n  _pathTo(path, root) {\n    root = root || this.root;\n    if (typeof path === 'string') path = [path];\n    if (!path || !path.length || this.n < 2) return root;\n    let idx = Math.max(0, path.length - (this.n - 1));\n    let node = root.child(path[idx++]);\n    for (let i = idx; i < path.length; i++) {\n      if (node) node = node.child(path[i]);\n    }\n    return node; // can be undefined\n  }\n\n  /* add tokens to tree */\n  treeify(tokens) {\n    let root = this.root;\n    for (let i = 0; i < tokens.length; i++) {\n      let node = root;\n      let words = tokens.slice(i, i + this.n);\n      let wrap = 0;\n      for (let j = 0; j < this.n; j++) {\n        let hidden = false;\n        if (j >= words.length) {\n          words[j] = tokens[wrap++];\n          hidden = true;\n        }\n        node = node.addChild(words[j]);\n        if (hidden) node.hidden = true;\n      }\n    }\n  }\n\n  /*\n   * Split string of sentences on sentence-ends, keeping delims\n   * hack: there _must_ be a better way to do thisn\n   */\n  _splitEnds(str) {\n\n    let se = [...this.sentenceEnds];\n    let re = '(' + se.reduce((acc, w) => acc + w + '|', '')\n      .slice(0, -1).replace(/[.*+?^${}()[\\]\\\\]/g, '\\\\$&') + \")\";\n    let arr = [], parts = str.split(new RegExp(re, 'g'));\n    for (let i = 0; i < parts.length; i++) {\n      if (!parts[i].length) continue;\n      if ((i % 2) === 0) {\n        arr.push(parts[i]);\n      }\n      else {\n        arr[arr.length - 1] += parts[i];\n      }\n    }\n    return arr.map(a => a.trim());\n  }\n\n  /* create a sentence string from an array of nodes */\n  _flatten(nodes) {\n    if (!nodes || (Array.isArray(nodes) && !nodes.length)) return '';\n    if (nodes.token) return nodes.token; // single-node \n    let arr = nodes.map(n => n ? n.token : '[undef]');\n    let sent = this.untokenize(arr);\n    return sent.replace(MULTI_SP_RE, ' ');\n  }\n\n}\n\n/**  @memberof module:rita */\nclass Node {\n\n  constructor(parent, word, count) {\n    this.children = {};\n    this.parent = parent;\n    this.token = word;\n    this.count = count || 0;\n    this.numChildren = -1; // for cache\n    this.marked = false;\n    this.hidden = false; // hidden\n  }\n\n  // Find a (direct) child node with matching token, given a word or node\n  child(word) {\n    let lookup = word;\n    if (word.token) lookup = word.token;\n    return this.children[lookup];\n  }\n\n  pselect(filter) {\n    const rand = RiMarkov.parent.randomizer;\n    const children = this.childNodes({ filter });\n    if (!children.length) {\n      throw Error('No eligible child for \"' + this.token\n        + \"\\\" children=[\" + this.childNodes().map(t => t.token) + \"]\");\n    }\n    const weights = children.map(n => n.count);\n    const pdist = rand.ndist(weights);\n    const idx = rand.pselect(pdist);\n    return children[idx];\n  }\n\n  isLeaf(ignoreHidden) { return this.childCount(ignoreHidden) < 1; }\n\n  isRoot() { return !this.parent; }\n\n  childNodes(opts) {\n    let sort = opts && opts.sort;\n    let filter = opts && opts.filter;\n    let kids = Object.values(this.children);\n    if (filter) kids = kids.filter(filter);\n    if (sort) kids.sort((a, b) => b.count !== a.count\n      ? b.count - a.count\n      : b.token.localeCompare(a.token));\n    return kids;\n  }\n\n  childCount(ignoreHidden) {\n    if (this.numChildren === -1) {\n      let opts = {};\n      if (ignoreHidden) opts.filter = (t => !t.hidden);\n      this.numChildren = this.childNodes(opts)\n        .reduce((a, c) => a + c.count, 0);\n    }\n    return this.numChildren;\n  }\n\n  nodeProb(excludeMetaTags) {\n    if (!this.parent) throw Error('no parent');\n    return this.count / this.parent.childCount(excludeMetaTags);\n  }\n\n  // Increments count for a child node and returns it\n  addChild(word, count) {\n    this.numChildren = -1; // invalidate cache\n    count = count || 1;\n    let node = this.children[word];\n    if (!node) {\n      node = new Node(this, word);\n      this.children[word] = node;\n    }\n    node.count += count;\n    return node;\n  }\n\n  toString() {\n    return this.parent ? '\\'' + this.token + '\\' [' + this.count\n      + ',p=' + this.nodeProb().toFixed(3) + ']' : 'Root'\n  }\n\n  asTree(sort, showHiddenNodes) {\n    let s = this.token + ' ';\n    if (this.parent) s += '(' + this.count + ')->';\n    s += '{';\n    return this.childCount(true) ? stringulate(this, s, 1, sort, !showHiddenNodes) : s + '}';\n  }\n}\n\n// --------------------------------------------------------------\n\nfunction stringulate(mn, str, depth, sort, ignoreHidden) {\n\n  sort = sort || false;\n  let indent = '\\n';\n  let l = mn.childNodes({ sort: true, filter: t => !t.hidden });\n  if (!l.length) return str;\n  for (let j = 0; j < depth; j++) indent += \"  \";\n  for (let i = 0; i < l.length; i++) {\n    let node = l[i];\n    if (node && node.token) {\n      str += indent + \"'\" + encode(node.token) + \"'\";\n      if (!node.isRoot()) str += \" [\" + node.count\n        + \",p=\" + node.nodeProb().toFixed(3) + \"]\";\n      if (!node.isLeaf(ignoreHidden)) {\n        //console.log('appending \"{\" for '+node.token, node.childNodes());\n        str += '  {';\n      }\n      str = mn.childCount(ignoreHidden) ? stringulate(node, str, depth + 1, sort) : str + '}';\n    }\n  }\n  indent = '\\n';\n  for (let j = 0; j < depth - 1; j++) indent += \"  \";\n  return str + indent + \"}\";\n}\n\nfunction encode(tok) {\n  if (tok === '\\n') tok = '\\\\n';\n  if (tok === '\\r') tok = '\\\\r';\n  if (tok === '\\t') tok = '\\\\t';\n  if (tok === '\\r\\n') tok = '\\\\r\\\\n';\n  return tok;\n}\n\nfunction populate(objNode, jsonNode) {\n  if (!jsonNode) return;\n  let children = Object.values(jsonNode.children);\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    let newNode = objNode.addChild(child.token, child.count);\n    populate(newNode, child); // recurse\n  }\n}\n\nfunction throwError(tries, oks) {\n  throw Error('Failed after ' + tries + ' tries'\n    + (oks ? ' and ' + oks + ' successes' : '')\n    + ', you may need to adjust options or add more text');\n}\n\nfunction isSubArray(find, arr) {\n  if (!arr || !arr.length) return false;\n  OUT: for (let i = find.length - 1; i < arr.length; i++) {\n    for (let j = 0; j < find.length; j++) {\n      if (find[find.length - j - 1] !== arr[i - j]) continue OUT;\n      if (j === find.length - 1) return true;\n    }\n  }\n  return false;\n}\n\nconst MULTI_SP_RE = / +/g;\n\nexport default RiMarkov;","/** @module riscript */\n\nimport he from 'he';\nimport { Query } from 'mingo';\nimport { Lexer } from 'chevrotain';\n\nimport { RiScriptParser } from './parser.js';\nimport { RiScriptVisitor } from './visitor.js';\nimport { getTokens, TextTypes } from './tokens.js';\nimport { RiGrammar } from './grammar.js';\nimport { Util } from './util.js';\n\nconst { decode } = he;\nconst Vowels = /[aeiou]/;\nconst HtmlEntities = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi;\nconst { escapeText, charCount, slashEscapesToEntities, escapeMarkdownLink, escapeJSONRegex } = Util;\n\n/** @private */\nclass RiQuery extends Query {\n\n  constructor(scripting, condition, options) {\n    if (typeof condition === 'string') {\n      condition = scripting.parseJSOL(condition);\n    }\n    super(condition, options);\n  }\n\n  test(obj) {\n    // @ts-ignore\n    let compiled = this.compiled;\n    for (let i = 0, len = compiled.length; i < len; i++) {\n      if (!compiled[i](obj)) return false;\n    }\n    return true;\n  }\n\n  operands() {\n    // @ts-ignore\n    const stack = [this.condition];\n    const keys = new Set();\n    while (stack?.length > 0) {\n      const currentObj = stack.pop();\n      Object.keys(currentObj).forEach((key) => {\n        const value = currentObj[key];\n        if (!key.startsWith('$')) keys.add(key);\n        if (typeof value === 'object' && value !== null) {\n          const eles = Array.isArray(value) ? value : [value];\n          eles.forEach((ele) => stack.push(ele));\n        }\n      });\n    }\n    return Array.from(keys);\n  }\n}\n\n/**\n * The RiScript interpreter, responsible for lexing, parsing and evaluating \n * RiScript and RiGrammar expressions\n */\nclass RiScript {\n\n  /** @type {string} */\n  static VERSION = '1.0.59';\n\n  /** @type {typeof RiQuery} */\n  static Query = RiQuery;\n\n  /** @type {Object.<string, boolean>} */\n  static RiTaWarnings = { plurals: false, phones: false, silent: false };\n\n  /**\n   * Create a RiTa grammar instance\n   * @param {object} [rules] - the rules of the grammar\n   * @param {object} [context] - the context of the grammar\n   * @param {object} [options] - options for the evaluation\n   * @returns {RiGrammar} - a new RiGrammar instance\n   */\n  static grammar(rules, context, options) {\n    return new RiGrammar(rules, context, options);\n  }\n\n  /**\n   * Evaluates the input script via the RiScript parser\n   * @param {string} script - the script to evaluate\n   * @param {object} [context] - the context (or world-state) to evaluate in\n   * @param {object} [options] - options for the evaluation\n   * @param {object} [options.RiTa] - optionals RiTa object to use in transforms\n   * @param {number} [options.compatibility] - the RiTa compatibility level (pass 2 for v2)\n   * @param {boolean} [options.trace=false] - whether to trace the evaluation\n   * @returns {string} - the evaluated script\n   */\n  static evaluate(script, context, options = {}) {\n    return new RiScript(options).evaluate(script, context, options);\n  }\n\n  /**\n   * Creates a new RiScript instance\n   * @param {object} [options] - options for the object\n   * @param {object} [options.RiTa] - optionals RiTa object to use in transforms\n   * @param {number} [options.compatibility] - the RiTa compatibility level\n   */\n  constructor(options = {}) {\n\n    /** @type {Object.<string, any>} */ this.Escaped = undefined\n    /** @type {Object.<string, string>} */ this.Symbols = undefined;\n\n    // created in evaluate() or passed as arg here\n    /** @type {RiScriptVisitor} */this.visitor = undefined;\n\n    /** @type {boolean} */ this.v2Compatible = (options.compatibility === 2);\n\n    const { Constants, tokens } = getTokens(this.v2Compatible);\n    ({ Escaped: this.Escaped, Symbols: this.Symbols } = Constants);\n\n    /** @type {string[]} */ this.textTypes = TextTypes;\n\n    /** @type {Object<string, any>} */ this.RiTa = options.RiTa || {\n      VERSION: 0,\n      randi: (k) => Math.floor(Math.random() * k)\n    }\n\n    /** @type {Object.<string, Function>} */\n    this.transforms = this._createTransforms();\n\n    /** @type {Object.<string, RegExp>} */\n    this.regex = this._createRegexes(tokens);\n\n    /** @type {Lexer} */\n    this.lexer = new Lexer(tokens);\n\n    /** @type {RiScriptParser} */\n    this.parser = new RiScriptParser(tokens, TextTypes);\n  }\n\n  /** @private */\n  lex(opts) {\n    if (!opts.input) throw Error('no input');\n    const lexResult = this.lexer.tokenize(opts.input);\n    if (lexResult.errors.length) {\n      console.error('Input: ' + opts.input + '\\n', lexResult.errors[0].message);\n      throw Error('[LEXING] ' + lexResult.errors[0].message);\n    }\n    if (opts.trace) this._printTokens(lexResult.tokens);\n    opts.tokens = lexResult.tokens;\n    // return lexResult;\n  }\n\n  /** @private */\n  parse(opts) {\n    opts.cst = this.parser.parse(opts);\n  }\n\n  /** @private */\n  visit(opts) {\n    // @ts-ignore\n    return this.visitor.start(opts);\n  }\n\n  /**\n   * Evaluates the input script via the RiScript parser\n   * @param {string} script - the script to evaluate\n   * @param {object} [context] - the context (or world-state) to evaluate in\n   * @param {object} [options] - options for the evaluation\n   * @returns {string}\n   */\n  evaluate(script, context, options = {}) {\n    if (typeof script !== 'string') {\n      throw Error('RiScript.evaluate() expects a string, got ' + typeof script);\n    }\n    options.input = script;\n    options.visitor = new RiScriptVisitor(this, context);\n    return this._evaluate(options);\n  }\n\n  /** @private */\n  lexParseVisit(opts = {}) {\n    this.lex(opts);\n    this.parse(opts);\n    return this.visit(opts);\n  }\n\n  /**\n   * Add a transform function to this instance\n   * @param {string} name - the name of the transform\n   * @param {function} def - the transform function\n   * @returns {RiScript} this instance\n   */\n  addTransform(name, def) {\n    this.transforms[name] = def;\n    return this;\n  }\n\n  /**\n   * Returns the names of all current transforms\n   * @returns {string[]} the names of the transforms\n   */\n  getTransforms() {\n    return Object.keys(this.transforms);\n  }\n\n  /**\n   * Removes a transform function from this instance\n   * @param {string} name of transform to remove\n   * @returns {RiScript} this instance\n   */\n  removeTransform(name) {\n    delete this.transforms[name];\n    return this;\n  }\n\n  ///////////////////////////////////// End API //////////////////////////////////////\n\n  /**\n   * Private version of evaluate taking all arguments in the options object\n   * @param {object} options - options for the evaluation\n   * @param {string} options.input - the script to evaluate\n   * @param {object} options.visitor - the visitor to use for the evaluation\n   * @param {boolean} [options.trace] - whether to trace the evaluation\n   * @param {boolean} [options.onepass] - whether to only do one pass\n   * @param {boolean} [options.silent] - whether to suppress warnings\n   * @returns {string} - the evaluated script's output text\n   * @package\n   */\n  _evaluate(options) {\n\n    const { input, visitor, trace, onepass, silent } = options;\n\n    if (!input) throw Error('no input');\n    if (!visitor) throw Error('no visitor');\n\n    // onepass = true; // TMP\n\n    let last, endingBreak = this.regex.EndingBreak.test(input); // keep\n\n    let expr = this._preParse(input, options);\n    if (!expr) return '';\n\n    if (trace) console.log(`\\nInput:  '${escapeText(input)}'`);\n    if (trace && input !== expr) {\n      console.log(`Parsed: '${escapeText(expr)}'`);\n    }\n\n    if (!options.visitor) throw Error('no visitor');\n    this.visitor = options.visitor;\n    delete options.visitor; // remind me why\n\n    for (let i = 1; expr !== last && i <= 10; i++) {\n      last = expr;\n\n      if (trace) console.log('-'.repeat(20)\n        + ' Pass#' + i + ' ' + '-'.repeat(20));\n\n      options.input = expr;\n      expr = this.lexParseVisit(options); // do it\n\n      if (trace) {\n        console.log(`Result(${i}) -> \"` + `${escapeText(expr)}\"`\n          + ` ctx=${this.visitor.lookupsToString()}`);\n      }\n\n      // end if no more riscript\n      if (onepass || !this.isParseable(expr)) break;\n    }\n\n    // check for unresolved symbols ([$#]) after removing HTML entities\n    if (!silent && !this.RiTa.SILENT) {\n      if (this.regex.ValidSymbol.test(expr.replace(HtmlEntities, ''))) {\n        console.warn('[WARN] Unresolved symbol(s) in \"'\n          + expr.replace(/\\n/g, '\\\\n') + '\" ');\n      }\n    }\n\n    return this._postParse(expr, options) + (endingBreak ? '\\n' : '');\n  }\n\n  /** @private */\n  _printTokens(tokens) {\n    let s = tokens.reduce((str, t) => {\n      let { name } = t.tokenType;\n      let tag = name;\n      if (tag === 'TEXT') tag = escapeText(t.image, true);\n      if (tag === 'Symbol') tag = 'sym(' + t.image + ')';\n      if (tag === 'TX') tag = 'tx(' + t.image + ')';\n      return str + tag + ', ';\n    }, '')\n      .slice(0, -2);\n    console.log('\\nTokens: [ ' + s + ' ]  Context:',\n      this.visitor.lookupsToString());\n  }\n\n  /** @private */\n  _preParse(script, opts) {\n    if (typeof script !== 'string') return '';\n\n    const $ = this.Symbols;\n\n    let input = script;\n    if (!this.v2Compatible) { // handle parenthesized weights\n      input = input.replace(this.regex.ParenthesizedWeights, '^$1^');\n    }\n\n    let replaced = input.replace(this.regex.NonGateAtSigns, '$1&#64;'); // non-gate @-signs\n    if (replaced !== input) {\n      // console.log('Removed non-gate @-sign: ','\\n', input,'\\n', replaced);\n      input = replaced;\n    }\n\n    let matches = input.match(this.regex.MarkdownLinks); // md-links\n    matches && matches.forEach(m => input = input.replace(m, escapeMarkdownLink(m)));\n    input = input.replace(this.regex.MultiLineComments, ''); // multi-line comments\n    input = input.replace(this.regex.SingleLineComments, ''); // single-line comments\n    input = input.replace(this.regex.Continue, ''); // line continuations\n    input = slashEscapesToEntities(input); // double-backslashed escapes\n\n    let result = '';\n    let lines = input.split(this.regex.LineBreaks);\n    for (let i = 0; i < lines.length; i++) {\n      // special-case: handle assignments alone on a line\n      if (this.regex.RawAssign.test(lines[i])) {\n        // a very convoluted way of preserving line-breaks inside groups\n        let eqIdx = lines[i].indexOf('=');\n        if (eqIdx < 0) throw Error('invalid state: no assigment: ' + lines[i]);\n        let lhs = lines[i].substring(0, eqIdx),\n          rhs = lines[i].substring(eqIdx + 1);\n        let opens = charCount(rhs, $.OPEN_CHOICE);\n        let closes = charCount(rhs, $.CLOSE_CHOICE);\n        while (opens > closes) {\n          let line = lines[++i];\n          rhs += '\\n' + line;\n          opens += charCount(line, $.OPEN_CHOICE);\n          closes += charCount(line, $.CLOSE_CHOICE);\n        }\n        result += $.OPEN_SILENT + (lhs + '=' + rhs) + $.CLOSE_SILENT;\n      } else {\n        result += lines[i];\n        if (i < lines.length - 1) result += '\\n';\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates a new RiQuery object from the raw query string\n   * @package \n   */\n  createQuery(rawQuery, opts) {\n    return new RiQuery(this, rawQuery, opts);\n  }\n\n  /** @private */\n  _postParse(input, opts) {\n    if (typeof input !== 'string') return '';\n\n    // replace html entities\n    let decoded = decode(input);\n\n    // clean up whitespace, linebreaks\n    let result = decoded.replace(this.regex.Whitespace, ' ').replace(this.regex.EndingBreak, '');\n\n    // handle unresolved gates\n    let gates = [...result.matchAll(this.Symbols.PENDING_GATE_RE)];\n    if (opts.trace && gates.length) console.log();\n    gates.forEach((g) => {\n      if (!g || !g[0] || !g[1]) throw Error('bad gate: ' + g);\n      let deferredGate = this.visitor.pendingGates[g[1]];\n      let { deferredContext, operands, gateText } = deferredGate;\n      if (!operands.length) throw Error('no operands');\n      let reject = this.visitor.choice(deferredContext, { forceReject: true });\n\n      result = result.replace(g[0], reject);\n      if (opts.trace) console.log('Unresolved gate: \\'' + gateText + '\\' {reject}');\n    });\n\n    if (opts.trace) console.log(`\\nFinal: '${result}'`);\n\n    if (!opts.preserveLookups) {\n      // reset lookups unless preserveLookups=true (for testing only)\n      this.visitor.statics = undefined;\n      this.visitor.dynamics = undefined;\n    }\n\n    return result;\n  }\n\n  /**\n   * Parses a mingo query into JSON format\n   * @package\n   */\n  parseJSOL(text) {\n    const unescapeRegexProperty = (text) => {\n      const RegexEscape = Util.RegexEscape\n      // TODO: why do we need this?\n      let res = text;\n      if (\n        typeof text === 'string' &&\n        text.startsWith(RegexEscape) &&\n        text.endsWith(RegexEscape)\n      ) {\n        let parts = text.split(RegexEscape);\n        if (parts.length !== 4) throw Error('invalid regex in unescape');\n        res = new RegExp(parts[1], parts[2]);\n      }\n      return res;\n    };\n    let escaped = escapeJSONRegex(text)\n      .replace(this.regex.JSOLIdent, '\"$1\":')\n      .replace(/'/g, '\"');\n\n    // console.log(\"escaped: '\"+escaped+\"'\");\n\n    let result = JSON.parse(escaped),\n      urp = unescapeRegexProperty;\n    Object.keys(result).forEach((k) => (result[k] = urp(result[k])));\n    return result;\n  }\n\n  /**\n   * True if input contains parseable script\n   * @private\n   */\n  isParseable(s) {\n    // conservatively assume non-string/numbers are always parseable\n    let result = true;\n    let isStrOrNum = /(string|number)/.test(typeof s);\n    // if a string or num, test for special chars\n    if (isStrOrNum) result = this.regex.Special.test(s.toString());\n    return result;\n  }\n\n  // ========================= helpers ===============================\n\n  /** @private */\n  _createRegexes(tokens) {\n\n    const Esc = this.Escaped;\n    const open = Esc.OPEN_CHOICE;\n    const close = Esc.CLOSE_CHOICE;\n    const anysym = Esc.STATIC + Esc.DYNAMIC;\n\n    return {\n      LineBreaks: /\\r?\\n/,\n      EndingBreak: /\\r?\\n$/,\n      NonGateAtSigns: /([^}])@(?!{)/,\n      AnySymbol: new RegExp(`[${anysym}]`),\n      ParenthesizedWeights: /\\((\\s*\\d+\\s*)\\)/g,\n      MultiLineComments: /\\/\\*[^]*?(\\r?\\n)?\\//g,\n      SingleLineComments: /\\/\\/[^\\n]+(\\r?\\n|$)/g,\n      MarkdownLinks: /\\[([^\\]]+)\\]\\(([^)\"]+)(?: \\\"([^\\\"]+)\\\")?\\)/g,\n      RawAssign: new RegExp(`^[${anysym}][A-Za-z_0-9][A-Za-z_0-9]*\\\\s*=`),\n      JSOLIdent: new RegExp(`([${anysym}]?[A-Za-z_0-9][A-Za-z_0-9]*)\\\\s*:`, 'g'),\n      ChoiceWrap: new RegExp('^' + open + '[^' + open + close + ']*' + close + '$'),\n      ValidSymbol: new RegExp('(' + Esc.DYNAMIC + '|' + Esc.STATIC + '[A-Za-z_0-9])[A-Za-z_0-9]*'),\n      Entity: tokens.filter(t => t.name === 'Entity')[0].PATTERN,\n      StaticSymbol: new RegExp(Esc.STATIC + '[A-Za-z_0-9][A-Za-z_0-9]*'),\n      Special: new RegExp(`[${Esc.SPECIAL.replace('&', '')}]`),\n      Continue: new RegExp(Esc.CONTINUATION + '\\\\r?\\\\n', 'g'),\n      Whitespace: /[\\u00a0\\u2000-\\u200b\\u2028-\\u2029\\u3000]+/g,\n    };\n  }\n\n  /** @private */\n  _createTransforms() {\n    let transforms = {\n      quotify: (w, r) => RiScript.quotify(w),\n      pluralize: (w, r) => RiScript.pluralize(w, r),\n      capitalize: (w, r) => RiScript.capitalize(w),\n      articlize: (w, r) => RiScript.articlize(w, r),\n      uppercase: (w, r) => RiScript.uppercase(w),\n      norepeat: (w, r) => RiScript.identity(w),\n    };\n\n    // aliases\n    transforms.art = transforms.articlize;\n    transforms.nr = transforms.norepeat;\n    transforms.cap = transforms.capitalize;\n    transforms.uc = transforms.uppercase;\n    transforms.qq = transforms.quotify;\n    transforms.s = transforms.pluralize;\n    transforms.ucf = transforms.capitalize; // @dep\n\n    return transforms;\n  }\n\n  // ========================= statics ===============================\n\n  /**\n   * Default transform that adds an article\n   * @param {string} s - the string to transform\n   * @param {object} [phonemeAnalyzer] - custom phoneme analyzer with phones() function\n   * @returns {string} the transformed string\n   * @private\n   */\n  static articlize(s, phonemeAnalyzer) {\n    if (!s || !s.length) return '';\n\n    let first = s.split(/\\s+/)[0];\n\n    if (!phonemeAnalyzer?.phones) {\n      if (!RiScript.RiTaWarnings.phones && !RiScript.RiTaWarnings.silent) {\n        console.warn('[WARN] Install RiTa for proper phonemes');\n        RiScript.RiTaWarnings.phones = true;\n      }\n      // first.startsWith('a') ? 'an ' : 'a ') + s;\n      return (/^[aeiou].*/i.test(first) ? 'an ' : 'a ') + s;\n    }\n\n    let phones = phonemeAnalyzer.phones(first, { silent: true });\n\n    // could still be original word if no phones found\n    return ((phones?.length && Vowels.test(phones[0]) ? 'an ' : 'a ') + s);\n  }\n\n  /**\n   * Default transform that uppercases the first character of the string\n   * @param {string} s - the string to transform\n   * @returns {string} the transformed string\n   * @private\n   */\n  static capitalize(s) {\n    return s ? s[0].toUpperCase() + s.substring(1) : '';\n  }\n\n  /**\n   * Default transform that capitalizes the string\n   * @param {string} s - the string to transform\n   * @returns {string} the transformed string\n   * @private\n   */\n  static uppercase(s) {\n    return s ? s.toUpperCase() : '';\n  }\n\n  /**\n   * Default transform that wraps the string in (smart) quotes.\n   * @param {string} s - the string to transform\n   * @returns {string} the transformed string\n   * @private\n   */\n  static quotify(s) {\n    return '&#8220;' + (s || '') + '&#8221;';\n  }\n\n  /**\n   * Default transform that pluralizes a string (requires RiTa)\n   * @param {string} s - the string to transform\n   * @param {object} [pluralizer] - custom pluralizer with pluralize() function\n   * @returns {string} the transformed string\n   * @private\n   */\n  static pluralize(s, pluralizer) {\n    if (!pluralizer?.pluralize) {\n      if (!RiScript.RiTaWarnings.plurals && !RiScript.RiTaWarnings.silent) {\n        RiScript.RiTaWarnings.plurals = true;\n        console.warn('[WARN] Install RiTa for proper pluralization');\n      }\n      return s.endsWith('s') ? s : s + 's';\n    }\n    return pluralizer.pluralize(s);\n  }\n\n  /**\n   * Default no-op transform\n   * @param {string} s - the string to transform\n   * @returns {string} the transformed string\n   * @private\n   */\n  static identity(s) {\n    return s;\n  }\n}\n\n// let _randi = (a,b) => {\n//   let crand = Math.random();\n//   if (typeof a === ' ') return crand;\n//   if (Array.isArray(arguments[0])) {\n//     let arr = arguments[0];\n//     return arr[Math.floor(crand * arr.length)];\n//   }\n//   return arguments.length === 1 ? crand * arguments[0] :\n//     crand * (arguments[1] - arguments[0]) + arguments[0];\n// }\n\n// Class ref hack for testing\nRiScript.Visitor = RiScriptVisitor;\nRiScript.Util = Util;\n// RiScript.Grammar = RiGrammar;\n\n\nexport { RiScript };","// @ts-nocheck\nimport { CstParser } from \"chevrotain\"\n\n/**\n * RiScriptParser\n * @class\n * @memberof module:riscript\n */\nclass RiScriptParser extends CstParser {\n\n  constructor(allTokens, textTypes) {\n    super(allTokens, { nodeLocationTracking: \"full\" });\n    this.atomTypes = ['silent', 'assign', 'symbol', 'choice', 'pgate', 'text', 'entity'];\n    this.textTypes = textTypes; // defined in tokens.js\n    this.buildRules();\n  }\n\n  parse(opts) {\n    this.input = opts.tokens; // superclass member (dont change)\n\n    let cst = this.script();\n    if (this.errors.length > 0) throw Error\n      (\"[PARSING]\\n\" + this.errors[0].message);\n    return cst;\n  }\n\n  /*\n    Specification:\n      script: expr+\n      expr: atom+\n      atom: (choice | symbol | text | silent | entity | pgate | assign)\n      wexpr: (expr | Weight)*\n      symbol: Symbol transform*\n      choice: [ gate? orExpr elseExpr? ] transform*\n      assign: Symbol EQ expr\n      silent: { gate? (symbol | assign) }\n      orExpr: wexpr (OR wexpr)*\n      elseExpr: ELSE orExpr\n      pgate: PGate\n      entity: Entity\n      gate: Mingo\n      text: Raw | STAT | AMP \n  */\n  buildRules() {\n\n    const $ = this, Tokens = this.tokensMap;\n\n    $.RULE(\"script\", () => {\n      $.MANY(() => $.SUBRULE($.expr));\n    });\n\n    $.RULE(\"expr\", () => {\n      $.AT_LEAST_ONE(() => $.SUBRULE($.atom));\n    });\n\n    $.RULE(\"atom\", () => {\n      $.OR(this.atomTypes.map(t => ({ ALT: () => $.SUBRULE($[t]) })));\n    });\n\n    $.RULE(\"wexpr\", () => {\n      $.MANY(() => {\n        $.OR([\n          { ALT: () => $.SUBRULE($.expr) },\n          { ALT: () => $.CONSUME(Tokens.Weight) },\n        ])\n      });\n    });\n\n    $.RULE(\"symbol\", () => {\n      $.CONSUME(Tokens.Symbol);\n      $.MANY(() => $.CONSUME(Tokens.Transform));\n    });\n\n    // choice: (LP (wexpr OR)* wexpr RP) transform*;\n    $.RULE(\"choice\", () => {\n      $.CONSUME(Tokens.OC)\n      $.OPTION1(() => $.SUBRULE($.gate));\n      $.SUBRULE($.orExpr)\n      $.OPTION2(() => {\n        $.SUBRULE2($.elseExpr)\n      });\n      $.CONSUME(Tokens.CC);\n      $.MANY(() => $.CONSUME(Tokens.Transform));\n    });\n\n    $.RULE(\"assign\", () => {\n      $.CONSUME(Tokens.Symbol);\n      $.CONSUME(Tokens.EQ);\n      $.SUBRULE($.expr);\n    });\n\n    $.RULE(\"silent\", () => {\n      $.CONSUME(Tokens.OS);\n      $.OPTION1(() => $.SUBRULE($.gate));\n      $.CONSUME(Tokens.Symbol);\n      $.OPTION2(() => {\n        $.CONSUME(Tokens.EQ);\n        $.SUBRULE($.expr);\n      });\n      $.CONSUME(Tokens.CS);\n    });\n\n    $.RULE(\"orExpr\", () => {\n      $.MANY_SEP({\n        SEP: Tokens.OR,\n        DEF: () => $.SUBRULE($.wexpr)\n      });\n    });\n\n    $.RULE(\"elseExpr\", () => {\n      $.CONSUME(Tokens.ELSE);\n      $.SUBRULE($.orExpr);\n    });\n\n    $.RULE(\"pgate\", () => {\n      $.CONSUME(Tokens.PendingGate);\n      //$.MANY(() => $.CONSUME(Tokens.Transform));\n    });\n\n    $.RULE(\"entity\", () => {\n      $.CONSUME(Tokens.Entity);\n    });\n\n    $.RULE(\"gate\", () => {\n      $.MANY(() => $.CONSUME(Tokens.Gate));\n    });\n\n    $.RULE(\"text\", () => {\n      $.OR(this.textTypes.map(t => ({ ALT: () => $.CONSUME(Tokens[t]) })));\n    });\n\n    this.performSelfAnalysis(); // keep\n  }\n}\n\nexport { RiScriptParser };","/**\n * @memberof module:riscript\n */\nclass Util {\n  \n  ///////////////////////// CONSTANTS /////////////////////////\n\n  \n  /**\n   * @static\n   * @memberof Util\n   * @package\n   */\n  static RegexEscape = '_RE_';\n\n  ///////////////////////// FUNCTIONS /////////////////////////\n\n  static escapeText(s, quotify) {\n    if (typeof s !== 'string') return s;\n    let t = s.replace(/\\r?\\n/g, '\\\\n');\n    return quotify || !t.length ? \"'\" + t + \"'\" : t;\n  }\n\n  static stringHash(s) { // for testing\n    let chr,\n      hash = 0;\n    for (let i = 0; i < s.length; i++) {\n      chr = s.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    let strHash = hash.toString().padStart(9, '0');\n    return hash < 0 ? strHash.replace('-', '0') : strHash;\n  }\n\n  static escapeMarkdownLink(txt) {\n    let result = txt;\n    let lookups = { '[': '&lsqb;', ']': '&rsqb;', '(': '&lpar;', ')': '&rpar;', '/': '&sol;' };\n    Object.entries(lookups).forEach(([k, v]) => result = result.replace(new RegExp(`\\\\${k}`, 'g'), v));\n    return result;\n  }\n\n  static slashEscapesToEntities(s) {\n    s = Util.replaceAll(s, '\\\\(', '&lpar;');\n    s = Util.replaceAll(s, '\\\\)', '&rpar;');\n    s = Util.replaceAll(s, '\\\\[', '&lsqb;');\n    s = Util.replaceAll(s, '\\\\]', '&rsqb;');\n    s = Util.replaceAll(s, '\\\\{', '&lcqb;');\n    s = Util.replaceAll(s, '\\\\}', '&rcqb;');\n    s = Util.replaceAll(s, '\\\\@', '&commat;');\n    s = Util.replaceAll(s, '\\\\#', '&num;');\n    s = Util.replaceAll(s, '\\\\|', ' &vert');\n    s = Util.replaceAll(s, '\\\\=', ' &equals');\n    return s;\n  }\n\n  static escapeJSONRegex(text) {\n    return text.replace(\n      /\\/([^/]+?)\\/([igmsuy]*)/g,\n      `\"${Util.RegexEscape}$1${Util.RegexEscape}$2${Util.RegexEscape}\"`\n    );\n  }\n\n  static escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  static replaceAll(str, match, replacement) {\n    return str.replace(new RegExp(Util.escapeRegExp(match), 'g'), () => replacement);\n  }\n\n  static charCount(str, c) {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n      if (str[i] === c) count++;\n    }\n    return count;\n  }\n}\n\nexport { Util };","/** @module riscript */\n\nimport { Util } from './util.js';\n\nconst { escapeText, stringHash } = Util;\n\n/**\n * @class\n * @memberof module:riscript\n */\nclass BaseVisitor {\n  constructor(riScript) {\n    /**@type {string}*/this.input = '';\n    /**@type {string}*/this.path = '';\n    /**@type {boolean}*/this.nowarn = false;\n    /**@type {boolean}*/this.tracePath = true;\n    /**@type {object}*/this.scripting = riScript;\n    /**@type {boolean}*/this.warnOnInvalidGates = false;\n  }\n\n  isCstNode(o) {\n    return (typeof o === 'object' && ('accept' in o\n      || ('name' in o && 'location' in o && 'children' in o)));\n  }\n\n  visit(cstNode, param) {\n    if (Array.isArray(cstNode)) {\n      cstNode = cstNode[0];\n    }\n    if (typeof cstNode === 'undefined') {\n      return undefined;\n    }\n    if (!this.isCstNode(cstNode)) {\n      throw Error('Non-cstNode passed to visit: ' + JSON.stringify(cstNode));\n    }\n\n    const { name, location } = cstNode;\n\n    this.nodeText = this.input.substring(\n      location.startOffset,\n      location.endOffset + 1\n    );\n\n    if (typeof this[name] !== 'function') {\n      throw Error('BaseVisitor.visit: expecting function for this[' +\n        `${name}], found ${typeof this[name]}: ${JSON.stringify(this[name])}`);\n    }\n\n    if (this.tracePath && !/(expr|atom|silent)/.test(name)) {\n      this.path += name + '.';\n    }\n\n    //if (this.trace) console.log('CALL: ' + name + '()');\n\n    return this[name](cstNode.children, param);\n  }\n\n  validateVisitor() { /* no-op */ }\n}\n\n/**\n * @class\n * @memberof module:riscript\n */\nclass RiScriptVisitor extends BaseVisitor {\n  constructor(riScript, context = {}) {\n    super(riScript);\n    this.context = context;\n\n    this.order = 0;\n    this.trace = 0;\n    this.choices = {};\n    this.isNoRepeat = false;\n\n    this.Symbols = this.scripting.Symbols;\n    this.Escaped = this.scripting.Escaped;\n\n    // lookups\n    this.statics = {};\n    this.dynamics = {};\n    this.pendingGates = {};\n    this.pendingSymbols = new Set();\n\n    this.validateVisitor(); // keep\n  }\n\n  start(opts = {}) {\n\n    this.input = opts.input;\n    this.trace = opts.trace;\n    this.nowarn = opts.silent;\n    this.traceTx = opts.traceTx;\n    if (!opts.cst) throw Error('no cst');\n    return super.visit(opts.cst);\n  }\n\n  script(ctx) {\n    this.order = 0;\n    if (Object.keys(ctx).length !== 1) throw Error('script: invalid expr');\n    return this.visit(ctx.expr);\n  }\n\n  expr(ctx) {\n    // this.print('expr', ctx);\n    const types = Object.keys(ctx);\n    if (types.length !== 1) throw Error('invalid expr: ' + types.length);\n\n    const count = Object.keys(ctx).reduce((acc, k) => ctx[k].length + acc, 0);\n    this.print('script', \"'\" + escapeText(this.input)\n      + \"' :: \" + count + ' atom(s)');\n    if (!count) return '';\n\n    const exprs = ctx.atom.map((c) => this.visit(c)); // collect each atom\n\n    // handle special cases of the form: \"not [quite|] far enough\"\n    for (let i = 1; i < exprs.length - 1; i++) {\n      if (\n        exprs[i].length === 0 &&\n        exprs[i - 1].endsWith(' ') &&\n        exprs[i + 1].startsWith(' ')\n      ) {\n        exprs[i + 1] = exprs[i + 1].substring(1);\n      }\n    }\n    return exprs.join('');\n  }\n\n  atom(ctx) {\n    let result;\n    const types = Object.keys(ctx);\n    if (types.length !== 1) throw Error('invalid atom: ' + types);\n    this.scripting.parser.atomTypes.forEach((type) => {\n      if (ctx[type]) {\n        if (ctx[type].length !== 1) {\n          throw Error(type + ': bad length -> ' + ctx[type].length);\n        }\n        result = this.visit(ctx[type][0]);\n        // pending function, call it\n        if (typeof result === 'function') {\n          result = result.call();\n        }\n      }\n    });\n    return result;\n  }\n\n  wexpr(ctx) {\n    this.print('wexpr');\n  }\n\n  gate(ctx) {\n    // returns { decision: [accept|reject] } or { decision: 'defer', operands: [] }\n\n    if (ctx.Gate.length !== 1) throw Error('Invalid gate: ' + ctx.Gate);\n\n    let raw = ctx.Gate[0].image, mingoQuery;\n    if (raw.startsWith(this.Symbols.OPEN_GATE)) {\n      raw = raw.substring(1);\n    }\n    try {\n      mingoQuery = this.scripting.createQuery(raw);\n    } catch (e) {\n      if (!this.warnOnInvalidGates) {\n        throw Error(`Invalid gate[2]: \"@${raw}@\"\\n\\nRootCause -> ${e}`);\n      }\n      if (!this.scripting.RiTa.SILENT && !this.nowarn) {\n        console.warn(`[WARN] Ignoring invalid gate: @${raw}@\\n`, e);\n      }\n      return { decision: 'accept' };\n    }\n\n    const resolvedOps = {};\n    const unresolvedOps = [];\n    const operands = mingoQuery.operands();\n    operands.forEach((sym) => {\n      let { result, resolved, isStatic, isUser } = this.checkContext(sym);\n\n      if (typeof result === 'function') {\n        // while {} ?\n        result = result.call(); // call it\n        resolved = !this.scripting.isParseable(result);\n      }\n      if (typeof result === 'undefined' || !resolved) {\n        unresolvedOps.push(sym);\n      } else {\n        // add to appropriate context\n        if (isStatic) {\n          this.statics[sym] = result;\n        } else if (isUser) {\n          this.context[sym] = result;\n        } else {\n          this.dynamics[sym] = result;\n        }\n        // store resolved result\n        resolvedOps[sym] = result;\n      }\n    });\n\n    if (\n      Object.keys(resolvedOps).length + unresolvedOps.length !==\n      operands.length\n    ) { throw Error('invalid operands'); }\n\n    // if we have unresolved operands, return them (and defer)\n    if (unresolvedOps.length) { return { decision: 'defer', operands: unresolvedOps }; }\n\n    let result = mingoQuery.test(resolvedOps); // do test\n    if (!result && this.castValues(resolvedOps)) {\n      result = mingoQuery.test(resolvedOps); // redo test after casting\n    }\n\n    return { decision: result ? 'accept' : 'reject' };\n  }\n\n  assign(ctx, opts) {\n\n    const sym = ctx.Symbol[0].image;\n    const ident = sym.replace(this.scripting.regex.AnySymbol, '');\n    const isStatic = sym.startsWith(this.Symbols.STATIC);\n\n    let value, info;\n    if (isStatic) {\n      value = this.visit(ctx.expr);\n      if (this.scripting.isParseable(value)) {\n        this.statics[ident] = value; // store in lookup table ??\n        value = this.inlineAssignment(ident, ctx.Transform, value);\n      } else {\n        this.statics[ident] = value; // store in lookup table\n        this.pendingSymbols.delete(ident); // no longer pending\n        this.trace &&\n          console.log('  [pending.delete]', sym,\n            this.pendingSymbols.size\n              ? JSON.stringify(this.pendingSymbols)\n              : ''\n          );\n      }\n      info = `${sym} = ${escapeText(value)}` +\n        ` [#static] ${opts?.silent ? '{silent}' : ''}`;\n    } else {\n      const $ = this;\n\n      // dynamic: store as func to be resolved later, perhaps many times\n      value = () => $.visit(ctx.expr);\n      info = `${sym} = <f*:pending> ` + (opts?.silent ? '{silent}' : '');\n\n      // NOTE: this function may contain a choice, which needs to be handled\n      // when called from a symbol with a norepeat transform (??) TODO: test\n\n      this.dynamics[ident] = value; // store in lookup table\n    }\n    this.print('assign', info);\n\n    return value;\n  }\n\n  silent(ctx) {\n    if (ctx.EQ) {\n      this.assign(ctx, { silent: true });\n    } else {\n      this.symbol(ctx, { silent: true });\n    }\n    return '';\n  }\n\n\n  text(ctx) {\n    if (Object.keys(ctx).length !== 1) throw Error('[2] invalid text');\n    const type = this.scripting.textTypes.filter(t => ctx[t]);\n    const image = ctx[type][0].image; // any of riscript.textTypes\n    this.print('text', escapeText(\"'\" + image + \"'\"));\n    return image;\n  }\n\n  entity(ctx) {\n    return this.nodeText;\n  }\n\n  symbol(ctx, opts) {\n    if (ctx.Symbol.length !== 1) throw Error('[1] invalid symbol');\n\n    const original = this.nodeText;\n    const symbol = ctx.Symbol[0].image;\n    const ident = symbol.replace(this.scripting.regex.AnySymbol, '');\n\n    this.isNoRepeat = this.hasNoRepeat(ctx.Transform);\n\n    if (this.pendingSymbols.has(ident)) {\n      this.print('symbol', `${symbol} [is-pending]`);\n      return original;\n    }\n\n    // lookup: result is either a value, a function, or undef\n    let { result, isStatic, isUser, resolved } = this.checkContext(ident);\n\n    if (!isStatic && this.scripting.regex.StaticSymbol.test(symbol)) {\n      if (!this.scripting.regex.Entity.test(symbol)) {\n        throw Error(`Attempt to refer to dynamic symbol '${ident}' as` +\n          ` ${this.Symbols.STATIC}${ident}, did you mean $${ident}?`);\n      }\n    }\n\n    if (typeof result === 'function') {\n      // while {} ?\n      result = result.call(); // call it\n      resolved = !this.scripting.isParseable(result);\n    }\n\n    if (this.isNoRepeat && (isStatic || isUser)) {\n      this.isNoRepeat = false;\n      const msg = 'Attempt to call norepeat() on ' + (isStatic\n        ? \"static symbol '\" + symbol + \"'. Did you mean to use '\" +\n        this.Symbols.DYNAMIC + ident + \"' ?\"\n        : \"non-dynamic symbol '\" + ident + \"'. Did you mean to define '\" +\n        this.Symbols.DYNAMIC + ident + \"' in riscript?\");\n      throw Error(msg);\n    }\n\n    if (typeof result === 'undefined') {\n      // nothing found, defer\n      this.print('symbol', symbol + \" -> '\" + original + \"' ctx=\" +\n        this.lookupsToString(), '[deferred]', opts?.silent ? '{silent}' : '');\n      return original;\n    }\n\n    let info = original + \" -> '\" + result + \"'\" + (opts?.silent ? ' {silent}' : '');\n\n    // defer if we still have unresolved riscript\n    if (typeof result === 'string' && !resolved) {\n      if (isStatic) {\n        this.pendingSymbols.add(ident);\n        result = this.inlineAssignment(ident, ctx.Transform, result);\n        this.print('symbol*', `${original} -> ${result} :: pending.add(${ident})`);\n      } else {\n        if (ctx.Transform) result = this.restoreTransforms(result, ctx.Transform);\n        this.print('symbol', info);\n      }\n      return result;\n    }\n\n    if (isStatic) {\n      // store !untransformed! result in static context\n      this.statics[ident] = result; // ADDED 8/18/23 - FIXED 10/8/23\n    }\n\n    if (ctx.Transform) {\n      result = this.applyTransforms(result, ctx.Transform);\n      info += \" -> '\" + result + \"'\";\n      // info += \" -> \" + ctx.Transform.map(tf => ` ${tf.image} -> `) + '\\'' + result + \"'\";\n      // console.log(\"INFO: \" + info);\n      if (this.isNoRepeat) info += ' (norepeat)';\n    }\n\n    this.print('symbol', info);\n\n    // resolved, so remove from pending\n    if (this.pendingSymbols.has(ident)) {\n      this.trace && console.log('  [$pending.delete]', (isStatic ? '#' : '$') + ident,\n        this.pendingSymbols.size ? JSON.stringify(this.pendingSymbols) : '');\n      this.pendingSymbols.delete(ident);\n    }\n    this.isNoRepeat = false; // reset\n\n    return result;\n  }\n\n  pgate(ctx) {\n    this.print('pgate', this.nodeText);\n\n    // new RegExp(`^${this.symbols.PENDING_GATE}`\n    const original = this.nodeText;\n    const ident = original.replace(this.Symbols.PENDING_GATE, '');\n    const lookup = this.pendingGates[ident];\n\n    if (!lookup) {\n      throw Error('no pending gate=\"' + original + '\" pgates=' +\n        JSON.stringify(Object.keys(this.pendingGates)));\n    }\n\n    const stillUnresolved = lookup.operands.some((o) => {\n      let { result, resolved } = this.checkContext(o);\n      if (typeof result === 'function') {\n        // while {} ?\n        // let tracing = this.trace;\n        // this.trace = false; // disable tracing\n        result = result.call(); // call it\n        //this.trace = tracing;\n        resolved = !this.scripting.isParseable(result);\n      }\n      return typeof result === 'undefined' || !resolved;\n    });\n\n    if (stillUnresolved) return original; // still deferred\n\n    return this.choice(lookup.deferredContext); // execute the gate\n  }\n\n  else(ctx) {\n    // this.print('else', this.nodeText);\n    return this.visit(ctx.expr).trim();\n  }\n\n  choice(ctx, opts) {\n    const $ = this.Symbols;\n    const original = this.nodeText;\n    const choiceKey = stringHash(original + ' #' + this.choiceId(ctx));\n\n    let gateText, gateResult, info = original;\n\n    if (!this.isNoRepeat && this.hasNoRepeat(ctx.Transform)) {\n      throw Error('noRepeat() not allowed on choice '\n        + '(use a $variable instead): ' + original);\n    }\n\n    this.print('choice', info);\n    info = \"\"\n\n    let decision = 'accept';\n    if (opts?.forceReject) {\n      decision = 'reject';\n    } else {\n      if (ctx?.gate?.[0]?.children?.Gate) {\n        // do we have a gate\n        gateText = ctx.gate[0].children.Gate[0].image;\n        gateResult = this.visit(ctx.gate);\n        decision = gateResult.decision;\n        let ginfo = `${gateText} -> ${(decision !== 'defer' ? decision.toUpperCase()\n          : `DEFER ${$.PENDING_GATE}${choiceKey}`)}  ${this.lookupsToString()}`;\n        this.print('gate', ginfo);\n      }\n\n      if (gateResult && gateResult.decision === 'defer') {\n        this.pendingGates[choiceKey] = {\n          gateText,\n          deferredContext: ctx,\n          operands: gateResult.operands\n        };\n        return `${$.PENDING_GATE}${choiceKey}`; // gate defers\n      }\n    }\n\n    let orExpr = ctx?.orExpr[0];\n    if (decision === 'reject') {\n      if (!('elseExpr' in ctx)) return ''; // rejected without else\n      orExpr = ctx.elseExpr[0].children.orExpr[0];\n    }\n\n    const options = this.parseOptions(orExpr); // get options\n    if (!options) throw Error('No options in choice: ' + original);\n\n    let value = null;\n    const excluded = [];\n    let restored = false;\n    while (value === null) {\n      value = this.choose(options, excluded).value;\n\n      // if we still have script, defer until its resolved\n      if (this.scripting.isParseable(value)) {\n        if (ctx.Transform) value = this.restoreTransforms(value, ctx.Transform);\n        restored = true;\n        break;\n      }\n\n      // apply any remaining transforms\n      if (ctx.Transform) value = this.applyTransforms(value, ctx.Transform);\n\n      // we have 'norepeat' but value was already used, try again\n      if (this.isNoRepeat && value === this.choices[choiceKey]) {\n        this.print('choice.reject', value + ' [norepeat]');\n        excluded.push(value);\n        value = null;\n        continue;\n      }\n    }\n\n    if (!restored) this.choices[choiceKey] = value; // put in choice cache\n\n    return value;\n  }\n\n  // Helpers ================================================\n\n  hasNoRepeat(tfs) {\n    const transforms = transformNames(tfs);\n    if (transforms.length) {\n      return transforms.includes('nr') || transforms.includes('norepeat');\n    }\n    return false;\n  }\n\n  checkContext(ident, opts = {}) {\n    let isStatic = false;\n    let isUser = false;\n    let result;\n\n    if (ident.length === 0) {\n      return { result: '', resolved: true, isStatic, isUser };\n    }\n\n    // check for dynamic symbol: $var\n    result = this.dynamics[ident];\n    if (typeof result === 'undefined') {\n      // no dynamic\n\n      // check for static symbol: #var\n      result = this.statics[ident];\n      if (typeof result !== 'undefined') {\n        isStatic = true; // found static\n      }\n    }\n\n    if (typeof result === 'undefined') {\n      // no static\n      // check for user-defined symbol: context[var]\n      result = this.context[ident];\n      if (typeof result !== 'undefined') {\n        isUser = true; // found user symbol\n      } else {\n        // check for user-defined dynamic? context[$var]\n        result = this.context[this.Symbols.DYNAMIC + ident];\n        if (typeof result !== 'undefined') {\n          // no static\n          // note: treat as normal dynamic, isUser = false\n        }\n      }\n    }\n\n    // do we have more script to deal with ?\n    const resolved = !this.scripting.isParseable(result);\n\n    return { result, isStatic, isUser, resolved }; // TODO: replace with 'type'\n  }\n\n  inlineAssignment(ident, tfs, result) {\n    const $ = this.Symbols;\n    const lhs = $.STATIC + ident;\n    const rhs = this.restoreTransforms(result, tfs);\n    result = $.OPEN_CHOICE + (lhs + '=' + rhs) + $.CLOSE_CHOICE;\n    return result;\n  }\n\n  choiceId(ctx) {\n    if (!ctx.OC || !ctx.OC.length) throw Error('invalid choice');\n    return ctx.OC[0].startOffset + '.' + ctx.OC[0].endOffset;\n  }\n\n  parseOptions(ctx) {\n    const options = [];\n    if (ctx && ctx?.children?.wexpr) {\n      const wexprs = ctx.children.wexpr;\n      for (let i = 0; i < wexprs.length; i++) {\n        const wexpr = wexprs[i];\n        const expr = wexpr.children.expr;\n        if (expr && expr.length != 1) { throw Error('invalid choice-expr: ' + expr.length); }\n\n        const weight = wexpr.children.Weight;\n        if (weight) {\n          if (weight.length != 1) { throw Error('invalid weight: ' + weight.length); }\n          let mult = 1;\n          try {\n            mult = parseInt(\n              this.Symbols.CLOSE_WEIGHT.length\n                ? weight[0].image.trim().slice(1, -1)\n                : weight[0].image.trim().slice(1)\n            );\n          } catch (e) {\n            console.log('EX: ' + mult);\n          }\n          Array.from({ length: mult }, () => options.push(expr));\n        } else {\n          options.push(expr || '');\n        }\n      }\n    }\n    return options;\n  }\n\n  chooseUnique(options, choiceKey) {\n    // not used\n\n    const isUnique = false;\n    while (options.length && !isUnique) {\n      const { index, value } = this.choose(options);\n      if (value !== this.choices[choiceKey]) return value;\n      // console.log(`Skipping ${index}: '${value}'`);\n      options.splice(index, 1);\n    }\n    throw Error('No remaining options');\n  }\n\n  choose(options, excludes = []) {\n    if (!options || !options.length) {\n      throw Error('Invalid choice: no options');\n    }\n\n    const valid = options.filter((x) => !excludes.includes(x));\n    if (!valid.length) {\n      throw Error('Invalid choice: no valid options');\n    }\n\n    const index = this.scripting.RiTa.randi(valid.length);\n\n    let value = ''; const selected = valid[index];\n\n    if (typeof selected === 'string') {\n      this.print('choice.text', \"''\");\n    } else {\n      // if (typeof selected === 'object') {\n      this.path = 'choice.' + this.path;\n      value = this.visit(selected); // cstNode\n    }\n\n    if (typeof value === 'string') value = value.trim();\n\n    return { index, value };\n  }\n\n  applyTransforms(value, txs) {\n    if (this.traceTx) { console.log('applyTransforms', this.formatTxs(...arguments)); }\n    for (let i = 0; i < txs.length; i++) {\n      value = this.applyTransform(value, txs[i]);\n    }\n    return value;\n  }\n\n  // value is not yet resolved, so store with transform for later\n  restoreTransforms(value, txs) {\n    if (typeof value === 'string') {\n      const patt = new RegExp(\n        '^' + this.Escaped.OPEN_CHOICE + '.*' + this.Escaped.CLOSE_CHOICE + '$'\n      );\n      if (!patt.test(value)) {\n        // wrap in choice to preserve\n        value = this.Symbols.OPEN_CHOICE + value + this.Symbols.CLOSE_CHOICE;\n      }\n      if (txs) {\n        txs.forEach((tx) => (value += tx.image)); // append transform strings\n      }\n      if (this.traceTx) console.log('restoreTransforms:', value);\n    }\n    return value;\n  }\n\n  castValues(obj) {\n    let madeCast = false;\n    Object.entries(obj).forEach(([k, v]) => {\n      const num = parseFloat(v);\n      if (!isNaN(num)) {\n        madeCast = true;\n        obj[k] = num; // update object with casted value\n      }\n    });\n    return madeCast;\n  }\n\n  contextIsResolved(table) {\n    let allResolved = true;\n    Object.entries(table).forEach(([key, val]) => {\n      if (!this.scripting.isParseable(val)) {\n        allResolved = false;\n      }\n    });\n    return allResolved;\n  }\n\n  applyTransform(target, transform) {\n\n\n    const image = transform.image;\n    const raw = target + image;\n    const tx = image.substring(1).replace(/\\(\\)$/, '');\n    const RiTa = this.scripting.RiTa;\n\n    let result;\n\n    // function in dynamics\n    if (typeof this.dynamics[tx] === 'function') {\n      result = this.dynamics[tx](target, RiTa);\n    }\n    // function in statics\n    else if (typeof this.statics[tx] === 'function') {\n      result = this.statics[tx](target, RiTa);\n    }\n    // function in context\n    else if (typeof this.context[tx] === 'function') {\n      result = this.context[tx](target, RiTa);\n    }\n\n    // function in transforms\n    else if (typeof this.scripting.transforms[tx] === 'function') {\n      result = this.scripting.transforms[tx](target, RiTa);\n    }\n    // member functions (usually on String)\n    else if (typeof target[tx] === 'function') {\n      result = target[tx]();\n    } else {\n      // check for property\n      if (target.hasOwnProperty(tx)) {\n        result = target[tx];\n      } else {\n        if (!RiTa.SILENT && !this.silent) {\n          console.warn('[WARN] Unresolved transform: ' + raw);\n        }\n\n        /* Replace transform parens so as not to trigger\n           RiScript.isParseable (for example, in v2) 0 */\n        result = raw.replace(/\\(\\)$/, '&lpar;&rpar;');\n      }\n    }\n\n    if (this.trace) {\n      console.log(`${this.tindent()}[transform] ${raw} -> '${result}'`);\n    }\n\n    return result;\n  }\n\n  lookupsToString() {\n    const dyns = {};\n    const stats = {};\n    Object.entries(this.dynamics || {}).forEach(\n      ([k, v]) => (dyns[`$${k} `] = v)\n    );\n    Object.entries(this.statics || {}).forEach(\n      ([k, v]) => (stats[`#${k} `] = v)\n    );\n    return JSON.stringify({ ...this.context, ...stats, ...dyns }, (k, v) =>\n      typeof v === 'function' ? '<f*:pending>' : v\n    ).replace(/\"/g, '');\n  }\n\n  formatTxs(value, txs) {\n    return value + txs.map((tx) => tx.image.replace(/()/, '') + '()').join('');\n  }\n\n  print(s, ...args) {\n    if (this.trace) {\n      if (this.path && s !== 'script') {\n        s = this.path.replace(/\\.$/, '');\n      }\n      if (!s.endsWith('gate.text')) { // ignore these\n        console.log(++this.order, `[${s}]`, ...args);\n      }\n      this.path = '';\n    }\n  }\n\n  tindent() {\n    return ' '.repeat((this.order + '').length + 1);\n  }\n}\n\nfunction transformNames(txs) {\n  return txs && txs.length\n    ? txs.map((tx) => tx.image.replace(/(^\\.|\\(\\)$)/g, ''), [])\n    : [];\n}\n\nexport { RiScriptVisitor };\n\n// console.log('&#33; -> '+decode('&#33;'));\n// console.log('&amp; -> '+decode('&amp;'));\n","/**\n * @memberof module:riscript\n */\nimport { createToken } from \"chevrotain\"\n\nfunction getTokens(v2Compatible) {\n\n  let Symbols = {\n    OR: '|',\n    ELSE: '||',\n    DYNAMIC: '$',\n    STATIC: '#',\n    ENTITY: '&',\n    OPEN_GATE: '@',\n    PENDING_GATE: '@@',\n    OPEN_SILENT: '{',\n    CLOSE_SILENT: '}',\n  };\n\n  let v2Symbols = {\n    OPEN_CHOICE: '(',\n    CLOSE_CHOICE: ')',\n    OPEN_WEIGHT: '[',\n    CLOSE_WEIGHT: ']',\n    CONTINUATION: '\\\\',\n  };\n\n  let v3Symbols = {\n    OPEN_CHOICE: '[',\n    CLOSE_CHOICE: ']',\n    OPEN_WEIGHT: '^', // also allows (int), eg. (3)\n    CLOSE_WEIGHT: '^',\n    CONTINUATION: '~',\n  };\n\n  Object.assign(Symbols, v2Compatible ? v2Symbols : v3Symbols);\n\n  const Escaped = {};\n  Object.entries(Symbols).forEach(([k, v]) => { Escaped[k] = escapeRegex(v) });\n\n  const ENTITY_PATTERN = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/i;\n  const PENDING_GATE_PATTERN = new RegExp(`${Escaped.PENDING_GATE}([0-9]{9,11})`)\n\n  Escaped.SPECIAL = Object.values(Escaped).join('').replace(/[<>]/g, ''); // allow <> for html \n  Symbols.PENDING_GATE_RE = new RegExp(PENDING_GATE_PATTERN.source, 'g'); // for unresolved gates\n\n  const Gate = createToken({\n    name: \"Gate\",\n    line_breaks: true,\n    // @ts-ignore\n    pattern: bracketMatch\n  });\n\n  function bracketMatch(text, startOffset) {\n    const openGate = Symbols.OPEN_GATE.charCodeAt(0);\n    let endOffset = startOffset, dbug = false;\n    let charCode = text.charCodeAt(endOffset);\n    if (charCode !== openGate) return null; // 64 = '@'\n\n    if (dbug) console.log('bracketMatch', text, startOffset);\n    endOffset++;\n    charCode = text.charCodeAt(endOffset);\n\n    // spaces between the @ and the open brace \n    while (charCode === 32) {\n      endOffset++;\n      charCode = text.charCodeAt(endOffset);\n    }\n    if (charCode !== 123) { // 123 = '{'\n      if (dbug) console.log(`  \"${text.substring(startOffset, endOffset)}\" -> null1`);\n      return null;\n    }\n    endOffset++;\n    charCode = text.charCodeAt(endOffset);\n    let depth = 1;\n    while (depth > 0) {\n      if (charCode === 123) depth++; // 123 = '{'\n      else if (charCode === 125) depth--; // 123 = '}'\n      else if (charCode === openGate) {\n        if (dbug) console.log(`\"${text.substring(startOffset, endOffset)}\" -> null2`);\n        return null;\n      }\n      if (dbug) console.log('  depth', depth, text.substring(startOffset, endOffset));\n      endOffset++;\n      charCode = text.charCodeAt(endOffset);\n    }\n\n    // No match, must return null xsto conform with the RegExp.prototype.exec signature\n    if (endOffset === startOffset) {\n      if (dbug) console.log(`\"${text.substring(startOffset, endOffset)}\" -> null3`);\n      return null;\n    } else {\n      let matchedString = text.substring(startOffset, endOffset);\n      // according to the RegExp.prototype.exec API the first item in the returned array must be the whole matched string.\n      if (dbug) console.log('  returned -> ', [matchedString]);\n      return [matchedString];\n    }\n  }\n\n  const DYN = createToken({ name: \"DYN\", pattern: new RegExp(Escaped.DYNAMIC) });\n  const STAT = createToken({ name: \"STAT\", pattern: new RegExp(Escaped.STATIC) });\n  const OC = createToken({ name: \"OC\", pattern: new RegExp(Escaped.OPEN_CHOICE + '\\\\s*') });\n  const CC = createToken({ name: \"CC\", pattern: new RegExp(`\\\\s*${Escaped.CLOSE_CHOICE}`) });\n  const OS = createToken({ name: \"OS\", pattern: new RegExp(`${Escaped.OPEN_SILENT}\\\\s*`) });\n  const CS = createToken({ name: \"CS\", pattern: new RegExp(`\\\\s*${Escaped.CLOSE_SILENT}`) });\n  const ELSE = createToken({ name: \"ELSE\", pattern: /\\s*\\|\\|\\s*/ });\n  const OR = createToken({ name: \"OR\", pattern: /\\s*\\|\\s*/ });\n  const EQ = createToken({ name: \"EQ\", pattern: /\\s*=\\s*/ });\n  const AMP = createToken({ name: \"AMP\", pattern: /&/ });\n\n  const Transform = createToken({ name: \"Transform\", pattern: /\\.[A-Za-z_0-9][A-Za-z_0-9]*(\\(\\))?/ });\n  const Symbol = createToken({ name: \"Symbol\", pattern: new RegExp(`(${Escaped.DYNAMIC}|${Escaped.STATIC}[A-Za-z_0-9])[A-Za-z_0-9]*`) });\n  const Entity = createToken({ name: \"Entity\", pattern: ENTITY_PATTERN });\n  const Weight = createToken({ name: \"Weight\", pattern: new RegExp(`\\\\s*${Escaped.OPEN_WEIGHT}.+${Escaped.CLOSE_WEIGHT}\\\\s*`) });\n  const PendingGate = createToken({ name: \"PendingGate\", pattern: PENDING_GATE_PATTERN });\n  const Raw = createToken({ name: \"Raw\", pattern: new RegExp(`[^${Escaped.SPECIAL}]+`) });\n\n  const tokens = [Gate, Entity, Weight, ELSE, OC, CC, OR, EQ, Symbol, DYN, STAT, AMP, Transform, OS, CS, PendingGate, Raw];\n\n  return { tokens, Constants: { Symbols, Escaped } };\n}\n\nfunction escapeRegex(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst TextTypes = ['Raw', 'STAT', 'AMP'];\n\nexport { getTokens, TextTypes };","\nimport { RiScript } from './riscript.js'\nimport { RiScriptVisitor } from './visitor.js' // 12/13/2023\n\n/**\n * A probabilistic context-free grammar for text-generation, supporting all RiScript\n *  features, including transforms, gates, choices, sequences and assignments.\n * @class RiGrammar\n * @memberof module:riscript\n */\nclass RiGrammar {\n\n  /**\n   * Creates an instance of RiGrammar.\n   * @param {Object<string, string>|string} [rules] - an object (or JSON string) containing the rules\n   * @param {Object<string, any>} [context] - the context (or world-state)\n   * @param {Object<string, any>} [options] - options for the grammar\n   */\n  constructor(rules = {}, context = {}, options = {}) {\n\n    /** @type {Object<string, string>} */ this.rules = {};\n    /** @type {Object<string, any>} */ this.context = context;\n    /** @type {RiScript} */ this.scripting = options?.RiTa?.riscript ?? new RiScript(options);\n\n\n    if (typeof rules === 'string') {\n      rules = parseJSON(rules);\n    }\n\n    if (typeof rules !== 'object') {\n      throw Error('RiGrammar: expecting object, found ' + typeof rules);\n    }\n\n    this.setRules(rules);\n  }\n\n  /**\n   * Creates a new RiGrammar from the `rules`, `context` and `options`, then calls `expand()` on it.\n   * @param {string} rules - an object containing the rules\n   * @param {object} [context] - the context (or world-state) for the expansion\n   * @param {object} [options] - options for the expansion\n   * @param {string} [options.start='$start'] - the rule to start from\n   * @param {boolean} [options.trace=false] - whether to trace the evaluation to the console\n   * @param {boolean} [options.onepass=false] - whether to only do one evaluation pass \n   * @param {boolean} [options.silent=false] - whether to suppress console warnings\n   * @returns {string} - the expanded text\n   */\n  static expand(rules, context, options) {\n    return new RiGrammar(rules, context).expand(options);\n  }\n\n  /**\n   * Adds a transform to the Grammar instance\n   * @param {string} name - the name of the transform\n   * @param {Function} def - a function that takes a string and returns a string\n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  addTransform(name, def) {\n    this.scripting.addTransform(name, def);\n    return this;\n  }\n  \n  /**\n   * Removes a transform from the Grammar instance\n   * @param {string} name \n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  removeTransform(name) {\n    this.scripting.removeTransform(name);\n    return this;\n  }\n\n  /**\n   * Returns the names of all current transforms\n   * @returns {string[]} the names of the transforms\n   */\n  getTransforms() {\n    return this.scripting.getTransforms();\n  }\n\n  /**\n   * Tests whether two grammars are equal and returns a boolean\n   * @param {RiGrammar} rg - the grammar to compare to \n   * @returns {boolean} - whether the grammars are equal\n   */\n  equals(rg) {\n    return rg.toJSON() === this.toJSON();\n  }\n\n  /**\n   * Expands a grammar from the supplied rule. If no rule is provided the `$start` and `<start>`\n   *  symbols will be checked respectively. If a context is needed, it should be passed when the\n   *  grammar is created.\n   * @param {object} [options] - options for the expansion\n   * @param {string} [options.start='$start'] - the rule to start from\n   * @param {boolean} [options.trace=false] - whether to trace the evaluation to the console\n   * @param {boolean} [options.onepass=false] - whether to only do one evaluation pass \n   * @param {boolean} [options.silent=false] - whether to suppress console warnings\n   * @returns {string} - the expanded text\n   */\n  expand(options = {}) {\n    if ('context' in options) {\n      throw Error('pass context to RiScript.grammar() or new RiGrammar() instead');\n    }\n\n    let visitor = new RiScriptVisitor(this.scripting);\n    visitor.context = this.context || {};\n\n    let clonedOpts = { ...options, visitor, input: this._toScript(options) };\n\n    return this.scripting._evaluate(clonedOpts);\n  }\n\n  /**\n   * Validates a rule and adds a new rule to the grammar\n   * @param {string} name - the name of the rule\n   * @param {string} def - the definition of the rule\n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  addRule(name, def) {\n    this._validateRule(name, def);\n    this.rules[name] = def;\n    return this;\n  }\n\n  /**\n   * Sets the rules for the grammar, removing any previous rules\n   * @param {object|string} rules - an object or JSON string holding the rules for the grammar \n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  setRules(rules) {\n    if (typeof rules === 'undefined') throw Error('undefined rules');\n    this.rules = {};\n    let incoming = typeof rules === 'string' ? parseJSON(rules) : rules;\n    Object.entries(incoming).forEach((e) => this.addRule(...e));\n    return this;\n  }\n\n  /**\n   * Removes a rule from the grammar\n   * @param {string} name - the name of the rule to remove\n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  removeRule(name) {\n    if (name in this.rules) {\n      delete this.rules[name];\n    }\n    return this;\n  }\n\n  /**\n   * Returns a JSON representation of the grammar rules, accepting options from `JSON.stringify()`\n   * @param {any} [replacer] - a replacer function or array\n   * @param {string | number} [space] - the number of spaces to indent\n   * @returns {string} - the JSON representation of the grammar\n   */\n  toJSON(replacer, space) {\n    return JSON.stringify(this.rules, replacer, space);\n  }\n\n  /** \n   * Returns a string representation of the grammar, accecpting the same options as `JSON.stringify()`\n   * @param {object} [options] - options for the string representation\n   * @param {any} [options.replacer] - a replacer function or array\n   * @param {string | number} [options.space] - the number of spaces to indent\n   * @param {string} [options.linebreak] - the linebreak character to use\n   */\n  toString(options = {}) {\n    let replacer = options.replacer || 0;\n    let space = options.space || 2;\n    let lb = options?.linebreak;\n    let res = this.toJSON(replacer, space);\n    if (lb) res = res.replace(/\\n/g, lb);\n    return res;\n  }\n\n  /**\n   * Creates a new RiGrammar from the supplied JSON string\n   * @param {string} json - a JSON string representing the grammar\n   * @param {object} [context] - optional context for the grammar\n   * @returns {RiGrammar} - the RiGrammar instance\n   */\n  static fromJSON(json, context) {\n    return new RiGrammar(JSON.parse(json), context);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Converts grammar to inline rules; rules are dynamic, unless otherwise specified with leading #\n   * @private\n   */\n  _toScript(opts) {\n\n    let script = '';\n    let start = opts.start || 'start';\n\n    let { Symbols } = this.scripting;\n\n    if (start.startsWith(Symbols.DYNAMIC)) {\n      start = start.substring(Symbols.DYNAMIC.length);\n    }\n\n    if (start.startsWith(Symbols.STATIC)) {\n      start = start.substring(Symbols.STATIC.length);\n    }\n\n    if (!(start in this.rules || Symbols.STATIC + start in this.rules)) {\n      throw Error('Rule: \"' + start + '\" not found in grammar');\n    }\n\n    Object.entries(this.rules).forEach(([name, rule], i) => {\n      while (name.startsWith(Symbols.DYNAMIC)) {\n        name = name.substring(1);\n      }\n      if (!name.startsWith(Symbols.STATIC)) {\n        name = Symbols.DYNAMIC + name;\n      }\n      // console.log(i,name);\n      if (!this.scripting.regex.ChoiceWrap.test(rule)) {\n        // let orig = rule;\n        rule = Symbols.OPEN_CHOICE + rule + Symbols.CLOSE_CHOICE;\n        // console.log('WRAPPING: ' + orig + '->' + rule);\n      }\n      script += `${name}=${rule}\\n`;\n    });\n\n    if (opts.trace) console.log('Grammar:\\n' + script.replace(/^\\$/gm, '  $'));\n\n    script += `${Symbols.DYNAMIC}${start}`;\n\n    return script;\n  }\n\n  /**\n   * Validates a grammar rule\n   * @private\n   */\n  _validateRule(name, def) {\n    if (typeof name !== 'string' || name.length === 0) {\n      throw Error('expected [string] name');\n    }\n\n    if (typeof def === 'undefined') {\n      throw Error('undefined rule def: ' + name);\n    }\n    let { Symbols } = this.scripting;\n\n    if (name.startsWith(Symbols.DYNAMIC)) {\n      name = name.substring(Symbols.DYNAMIC.length);\n      throw Error(\n        'Grammar rules are dynamic by default;' +\n        \" if you need a static rule, use '\" +\n        Symbols.STATIC +\n        name +\n        \"', otherwise just use '\" +\n        name +\n        \"'.\"\n      );\n    }\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction parseJSON(json) {\n  if (typeof json === 'string') {\n    try {\n      return JSON.parse(json);\n    } catch (e) {\n      throw Error(\n        'RiGrammar appears to be invalid JSON,' +\n        ' please check it at http://jsonlint.com/\\n' +\n        json\n      );\n    }\n  }\n}\n\nexport { RiGrammar };\n","/**\n * Utility constants and functions\n */\nexport const MAX_INT = 2147483647;\nexport const MIN_INT = -2147483648;\nexport const MAX_LONG = Number.MAX_SAFE_INTEGER;\nexport const MIN_LONG = Number.MIN_SAFE_INTEGER;\n// special value to identify missing items. treated differently from undefined\nconst MISSING = Symbol(\"missing\");\nconst CYCLE_FOUND_ERROR = Object.freeze(new Error(\"mingo: cycle detected while processing object/array\"));\nconst ARRAY_PROTO = Object.getPrototypeOf([]);\nconst OBJECT_PROTO = Object.getPrototypeOf({});\nconst OBJECT_TAG = \"[object Object]\";\nconst OBJECT_TYPE_RE = /^\\[object ([a-zA-Z0-9]+)\\]$/;\nclass Null {\n}\nclass Undefined {\n}\nconst getConstructor = (v) => {\n    if (v === null)\n        return Null;\n    if (v === undefined)\n        return Undefined;\n    return v.constructor;\n};\n/**\n * Uses the simple hash method as described in Effective Java.\n * @see https://stackoverflow.com/a/113600/1370481\n * @param value The value to hash\n * @returns {number}\n */\nconst DEFAULT_HASH_FUNCTION = (value) => {\n    const s = stringify(value);\n    let hash = 0;\n    let i = s.length;\n    while (i)\n        hash = ((hash << 5) - hash) ^ s.charCodeAt(--i);\n    return hash >>> 0;\n};\n// no array, object, or function types\nconst JS_SIMPLE_TYPES = new Set([\n    \"null\",\n    \"undefined\",\n    \"boolean\",\n    \"number\",\n    \"string\",\n    \"date\",\n    \"regexp\"\n]);\nconst IMMUTABLE_TYPES_SET = new Set([Undefined, Null, Boolean, String, Number]);\n/** Convert simple value to string representation. */\nconst toString = (v) => v.toString(); // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Convert a typed array to string representation. */\nconst typedArrayToString = (v) => `${getConstructor(v).name}[${v.toString()}]`; // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Map of constructors to string converter functions */\nconst STRING_CONVERTERS = new Map([\n    [Number, toString],\n    [Boolean, toString],\n    [RegExp, toString],\n    [Function, toString],\n    [Symbol, toString],\n    [Date, (d) => d.toISOString()],\n    [String, JSON.stringify],\n    [Null, (_) => \"null\"],\n    [Undefined, (_) => \"undefined\"],\n    [Int8Array, typedArrayToString],\n    [Uint8Array, typedArrayToString],\n    [Uint8ClampedArray, typedArrayToString],\n    [Int16Array, typedArrayToString],\n    [Uint16Array, typedArrayToString],\n    [Int32Array, typedArrayToString],\n    [Uint32Array, typedArrayToString],\n    [Float32Array, typedArrayToString],\n    [Float64Array, typedArrayToString]\n]);\n/**\n * Some types like BigInt are not available on more exotic\n * JavaScript runtimes like ReactNative or QuickJS.\n * So we fill them in only if they exist so that it does not throw an error.\n */\nif (typeof BigInt !== \"undefined\") {\n    STRING_CONVERTERS.set(BigInt, (n) => \"0x\" + n.toString(16));\n}\nif (typeof BigInt64Array !== \"undefined\") {\n    STRING_CONVERTERS.set(BigInt64Array, typedArrayToString);\n}\nif (typeof BigUint64Array !== \"undefined\") {\n    STRING_CONVERTERS.set(BigUint64Array, typedArrayToString);\n}\n/** MongoDB sort comparison order. https://www.mongodb.com/docs/manual/reference/bson-type-comparison-order */\nconst SORT_ORDER_BY_TYPE = {\n    null: 0,\n    undefined: 0,\n    number: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    boolean: 5,\n    date: 6,\n    regexp: 7,\n    function: 8\n};\n/**\n * Compare function which adheres to MongoDB comparison order.\n *\n * @param a The first value\n * @param b The second value\n * @returns {Number}\n */\nexport const compare = (a, b) => {\n    if (a === MISSING)\n        a = undefined;\n    if (b === MISSING)\n        b = undefined;\n    const [u, v] = [a, b].map(n => SORT_ORDER_BY_TYPE[getType(n).toLowerCase()]);\n    if (u !== v)\n        return u - v;\n    // number | string | date\n    if (u === 1 || u === 2 || u === 6) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n        return 0;\n    }\n    // check for equivalence equality\n    if (isEqual(a, b))\n        return 0;\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    // if we get here we are comparing a type that does not make sense.\n    return 0;\n};\nexport function assert(condition, message) {\n    if (!condition)\n        throw new Error(message);\n}\nconst isTypedArray = (v) => {\n    const proto = Object.getPrototypeOf(getConstructor(v));\n    return proto && proto.name === \"TypedArray\";\n};\n/**\n * Deep clone an object. Value types and immutable objects are returned as is.\n */\nexport const cloneDeep = (obj) => {\n    if (IMMUTABLE_TYPES_SET.has(getConstructor(obj)))\n        return obj;\n    const cycle = new Set();\n    const clone = (val) => {\n        if (cycle.has(val))\n            throw CYCLE_FOUND_ERROR;\n        const ctor = getConstructor(val);\n        if (IMMUTABLE_TYPES_SET.has(ctor))\n            return val;\n        try {\n            // arrays\n            if (isArray(val)) {\n                cycle.add(val);\n                return val.map(clone);\n            }\n            // object literals\n            if (isObject(val)) {\n                cycle.add(val);\n                const res = {};\n                for (const k in val)\n                    res[k] = clone(val[k]);\n                return res;\n            }\n        }\n        finally {\n            cycle.delete(val);\n        }\n        // dates, regex, typed arrays\n        if (ctor === Date || ctor === RegExp || isTypedArray(val)) {\n            return new ctor(val);\n        }\n        return val;\n    };\n    return clone(obj);\n};\n/**\n * Returns the name of type as specified in the tag returned by a call to Object.prototype.toString\n * @param v A value\n */\nexport const getType = (v) => OBJECT_TYPE_RE.exec(Object.prototype.toString.call(v))[1];\nexport const isBoolean = (v) => typeof v === \"boolean\";\nexport const isString = (v) => typeof v === \"string\";\nexport const isSymbol = (v) => typeof v === \"symbol\";\nexport const isNumber = (v) => !isNaN(v) && typeof v === \"number\";\nexport const isBigInt = (v) => !isNaN(v) && typeof v === \"bigint\";\nexport const isNotNaN = (v) => !(isNaN(v) && typeof v === \"number\");\nexport const isArray = Array.isArray;\nexport const isObject = (v) => {\n    if (!v)\n        return false;\n    const proto = Object.getPrototypeOf(v);\n    return ((proto === OBJECT_PROTO || proto === null) &&\n        OBJECT_TAG === Object.prototype.toString.call(v));\n};\n//  objects, arrays, functions, date, custom object\nexport const isObjectLike = (v) => v === Object(v);\nexport const isDate = (v) => v instanceof Date;\nexport const isRegExp = (v) => v instanceof RegExp;\nexport const isFunction = (v) => typeof v === \"function\";\nexport const isNil = (v) => v === null || v === undefined;\nexport const inArray = (arr, item) => arr.includes(item);\nexport const notInArray = (arr, item) => !inArray(arr, item);\nexport const truthy = (arg, strict = true) => !!arg || (strict && arg === \"\");\nexport const isEmpty = (x) => isNil(x) ||\n    (isString(x) && !x) ||\n    (x instanceof Array && x.length === 0) ||\n    (isObject(x) && Object.keys(x).length === 0);\nexport const isMissing = (v) => v === MISSING;\n/** ensure a value is an array or wrapped within one. */\nexport const ensureArray = (x) => x instanceof Array ? x : [x];\nexport const has = (obj, prop) => !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\nconst mergeable = (left, right) => (isObject(left) && isObject(right)) || (isArray(left) && isArray(right));\n/**\n * Deep merge objects or arrays.\n * When the inputs have unmergeable types, the  right hand value is returned.\n * If inputs are arrays and options.flatten is set, elements in the same position are merged together. Remaining elements are appended to the target object.\n * If options.flatten is false, the right hand value is just appended to the left-hand value.\n * @param target {Object|Array} the target to merge into\n * @param obj {Object|Array} the source object\n */\nexport function merge(target, obj, options) {\n    // default options\n    options = options || { flatten: false };\n    // take care of missing inputs\n    if (isMissing(target) || isNil(target))\n        return obj;\n    if (isMissing(obj) || isNil(obj))\n        return target;\n    // fail only on initial input.\n    if (!mergeable(target, obj)) {\n        if (options.skipValidation)\n            return obj || target;\n        throw Error(\"mismatched types. must both be array or object\");\n    }\n    // skip validation after initial input.\n    options.skipValidation = true;\n    if (isArray(target)) {\n        const result = target;\n        const input = obj;\n        if (options.flatten) {\n            let i = 0;\n            let j = 0;\n            while (i < result.length && j < input.length) {\n                result[i] = merge(result[i++], input[j++], options);\n            }\n            while (j < input.length) {\n                result.push(obj[j++]);\n            }\n        }\n        else {\n            into(result, input);\n        }\n    }\n    else {\n        for (const k in obj) {\n            target[k] = merge(target[k], obj[k], options);\n        }\n    }\n    return target;\n}\nfunction buildHashIndex(arr, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const map = new Map();\n    arr.forEach((o, i) => {\n        const h = hashCode(o, hashFunction);\n        if (map.has(h)) {\n            if (!map.get(h).some(j => isEqual(arr[j], o))) {\n                map.get(h).push(i);\n            }\n        }\n        else {\n            map.set(h, [i]);\n        }\n    });\n    return map;\n}\n/**\n * Returns the intersection of multiple arrays.\n *\n * @param  {Array} input An array of arrays from which to find intersection.\n * @param  {Function} hashFunction Custom function to hash values, default the hashCode method\n * @return {Array} Array of intersecting values.\n */\nexport function intersection(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    // if any array is empty, there is no intersection\n    if (input.some(arr => arr.length == 0))\n        return [];\n    if (input.length === 1)\n        return Array.from(input);\n    // sort input arrays by to get smallest array\n    // const sorted = sortBy(input, (a: RawArray) => a.length) as RawArray[];\n    const sortedIndex = sortBy(input.map((a, i) => [i, a.length]), (a) => a[1]);\n    // get the smallest\n    const smallest = input[sortedIndex[0][0]];\n    // get hash index of smallest array\n    const map = buildHashIndex(smallest, hashFunction);\n    // hashIndex for remaining arrays.\n    const rmap = new Map();\n    // final intersection results and index of first occurrence.\n    const results = new Array();\n    map.forEach((v, k) => {\n        const lhs = v.map(j => smallest[j]);\n        const res = lhs.map(_ => 0);\n        // used to track first occurence of value in order of the original input array.\n        const stable = lhs.map(_ => [sortedIndex[0][0], 0]);\n        let found = false;\n        for (let i = 1; i < input.length; i++) {\n            const [currIndex, _] = sortedIndex[i];\n            const arr = input[currIndex];\n            if (!rmap.has(i))\n                rmap.set(i, buildHashIndex(arr));\n            // we found a match. let's confirm.\n            if (rmap.get(i).has(k)) {\n                const rhs = rmap\n                    .get(i)\n                    .get(k)\n                    .map(j => arr[j]);\n                // confirm the intersection with an equivalence check.\n                found = lhs\n                    .map((s, n) => rhs.some((t, m) => {\n                    // we expect only one to match here since these are just collisions.\n                    const p = res[n];\n                    if (isEqual(s, t)) {\n                        res[n]++;\n                        // track position of value ordering for stability.\n                        if (currIndex < stable[n][0]) {\n                            stable[n] = [currIndex, rmap.get(i).get(k)[m]];\n                        }\n                    }\n                    return p < res[n];\n                }))\n                    .some(Boolean);\n            }\n            // found nothing, so exclude value. this was just a hash collision.\n            if (!found)\n                return;\n        }\n        // extract value into result if we found an intersection.\n        // we find an intersection if the frequency counter matches the count of the remaining arrays.\n        if (found) {\n            into(results, res\n                .map((n, i) => {\n                return n === input.length - 1 ? [lhs[i], stable[i]] : MISSING;\n            })\n                .filter(n => n !== MISSING));\n        }\n    });\n    return results\n        .sort((a, b) => {\n        const [_i, [u, m]] = a;\n        const [_j, [v, n]] = b;\n        const r = compare(u, v);\n        if (r !== 0)\n            return r;\n        return compare(m, n);\n    })\n        .map(v => v[0]);\n}\n/**\n * Flatten the array\n *\n * @param {Array} xs The array to flatten\n * @param {Number} depth The number of nested lists to iterate\n */\nexport function flatten(xs, depth = 0) {\n    const arr = new Array();\n    function flatten2(ys, n) {\n        for (let i = 0, len = ys.length; i < len; i++) {\n            if (isArray(ys[i]) && (n > 0 || n < 0)) {\n                flatten2(ys[i], Math.max(-1, n - 1));\n            }\n            else {\n                arr.push(ys[i]);\n            }\n        }\n    }\n    flatten2(xs, depth);\n    return arr;\n}\n/** Returns all members of the value in an object literal. */\nconst getMembersOf = (value) => {\n    let [proto, names] = [\n        Object.getPrototypeOf(value),\n        Object.getOwnPropertyNames(value)\n    ];\n    // save effective prototype\n    let activeProto = proto;\n    // traverse the prototype hierarchy until we get property names or hit the bottom prototype.\n    while (!names.length && proto !== OBJECT_PROTO && proto !== ARRAY_PROTO) {\n        activeProto = proto;\n        names = Object.getOwnPropertyNames(proto);\n        proto = Object.getPrototypeOf(proto);\n    }\n    const o = {};\n    names.forEach(k => (o[k] = value[k]));\n    return [o, activeProto];\n};\n/**\n * Determine whether two values are the same or strictly equivalent.\n * Checking whether values are the same only applies to built in objects.\n * For user-defined objects this checks for only referential equality so\n * two different instances with the same values are not equal.\n *\n * @param  {*}  a The first value\n * @param  {*}  b The second value\n * @return {Boolean}   Result of comparison\n */\nexport function isEqual(a, b) {\n    const args = [[a, b]];\n    while (args.length > 0) {\n        [a, b] = args.pop();\n        // strictly equal must be equal. matches referentially equal values.\n        if (a === b)\n            continue;\n        // unequal types and functions (unless referentially equivalent) cannot be equal.\n        const ctor = getConstructor(a);\n        if (ctor !== getConstructor(b) || isFunction(a))\n            return false;\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            const str = STRING_CONVERTERS.get(ctor);\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            if (str(a) !== str(b))\n                return false;\n            // values are equal, so move next\n            continue;\n        }\n        // handle array and object types\n        if (ctor === Array || ctor === Object) {\n            const ka = Object.keys(a);\n            const kb = Object.keys(b);\n            if (ka.length !== kb.length)\n                return false;\n            if (new Set(ka.concat(kb)).size != ka.length)\n                return false;\n            for (const k of ka)\n                args.push([a[k], b[k]]);\n            // move next\n            continue;\n        }\n        // user-defined type detected.\n        // we don't try to compare user-defined types (even though we could...shhhh).\n        return false;\n    }\n    // nothing left to compare\n    return !args.length;\n}\n/**\n * Return a new unique version of the collection\n * @param  {Array} input The input collection\n * @return {Array}\n */\nexport function unique(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const result = input.map(_ => MISSING);\n    buildHashIndex(input, hashFunction).forEach((v, _) => {\n        v.forEach(i => (result[i] = input[i]));\n    });\n    return result.filter(v => v !== MISSING);\n}\n/**\n * Encode value to string using a simple non-colliding stable scheme.\n * Handles user-defined types by processing keys on first non-empty prototype.\n * If a user-defined type provides a \"toJSON\" function, it is used.\n *\n * @param value The value to convert to a string representation.\n * @returns {String}\n */\nexport function stringify(value) {\n    const cycle = new Set();\n    // stringify with cycle check\n    const str = (v) => {\n        const ctor = getConstructor(v);\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            return STRING_CONVERTERS.get(ctor)(v);\n        }\n        const tag = ctor === Object ? \"\" : ctor.name;\n        // handle JSONable objects.\n        if (isFunction(v[\"toJSON\"])) {\n            return `${tag}(${JSON.stringify(v)})`;\n        }\n        // handle cycles\n        if (cycle.has(v))\n            throw CYCLE_FOUND_ERROR;\n        cycle.add(v);\n        try {\n            // handle array\n            if (ctor === Array) {\n                return \"[\" + v.map(str).join(\",\") + \"]\";\n            }\n            // handle user-defined object\n            if (ctor !== Object) {\n                // handle user-defined types or object literals.\n                const [members, _] = getMembersOf(v);\n                // custom type derived from array.\n                if (isArray(v)) {\n                    // include other members as part of array elements.\n                    return `${tag}${str([...v, members])}`;\n                }\n                // get members as literal\n                v = members;\n            }\n            const objKeys = Object.keys(v);\n            objKeys.sort();\n            return (`${tag}{` +\n                objKeys.map(k => `${k}:${str(v[k])}`).join(\",\") +\n                \"}\");\n        }\n        finally {\n            cycle.delete(v);\n        }\n    };\n    // convert to string\n    return str(value);\n}\n/**\n * Generate hash code\n * This selected function is the result of benchmarking various hash functions.\n * This version performs well and can hash 10^6 documents in ~3s with on average 100 collisions.\n *\n * @param value\n * @returns {number|null}\n */\nexport function hashCode(value, hashFunction) {\n    hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;\n    if (isNil(value))\n        return null;\n    return hashFunction(value).toString();\n}\n/**\n * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee\n *\n * This implementation treats null/undefined sort keys as less than every other type\n *\n * @param {Array}   collection\n * @param {Function} keyFn The sort key function used to resolve sort keys\n * @param {Function} comparator The comparator function to use for comparing keys. Defaults to standard comparison via `compare(...)`\n * @return {Array} Returns a new sorted array by the given key and comparator function\n */\nexport function sortBy(collection, keyFn, comparator = compare) {\n    if (isEmpty(collection))\n        return collection;\n    const sorted = new Array();\n    const result = new Array();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        if (isNil(key)) {\n            result.push(obj);\n        }\n        else {\n            sorted.push([key, obj]);\n        }\n    }\n    // use native array sorting but enforce stableness\n    sorted.sort((a, b) => comparator(a[0], b[0]));\n    return into(result, sorted.map((o) => o[1]));\n}\n/**\n * Groups the collection into sets by the returned key\n *\n * @param collection\n * @param keyFn {Function} to compute the group key of an item in the collection\n * @returns {GroupByOutput}\n */\nexport function groupBy(collection, keyFn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    if (collection.length < 1)\n        return new Map();\n    // map of hash to collided values\n    const lookup = new Map();\n    // map of raw key values to objects.\n    const result = new Map();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        const hash = hashCode(key, hashFunction);\n        if (hash === null) {\n            if (result.has(null)) {\n                result.get(null).push(obj);\n            }\n            else {\n                result.set(null, [obj]);\n            }\n        }\n        else {\n            // find if we can match a hash for which the value is equivalent.\n            // this is used to deal with collisions.\n            const existingKey = lookup.has(hash)\n                ? lookup.get(hash).find(k => isEqual(k, key))\n                : null;\n            // collision detected or first time seeing key\n            if (isNil(existingKey)) {\n                // collision detected or first entry so we create a new group.\n                result.set(key, [obj]);\n                // upload the lookup with the collided key\n                if (lookup.has(hash)) {\n                    lookup.get(hash).push(key);\n                }\n                else {\n                    lookup.set(hash, [key]);\n                }\n            }\n            else {\n                // key exists\n                result.get(existingKey).push(obj);\n            }\n        }\n    }\n    return result;\n}\n// max elements to push.\n// See argument limit https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\nconst MAX_ARRAY_PUSH = 50000;\n/**\n * Merge elements into the dest\n *\n * @param {*} target The target object\n * @param {*} rest The array of elements to merge into dest\n */\nexport function into(target, ...rest) {\n    if (target instanceof Array) {\n        return rest.reduce(((acc, arr) => {\n            // push arrary in batches to handle large inputs\n            let i = Math.ceil(arr.length / MAX_ARRAY_PUSH);\n            let begin = 0;\n            while (i-- > 0) {\n                Array.prototype.push.apply(acc, arr.slice(begin, begin + MAX_ARRAY_PUSH));\n                begin += MAX_ARRAY_PUSH;\n            }\n            return acc;\n        }), target);\n    }\n    else {\n        // merge objects. same behaviour as Object.assign\n        return rest.filter(isObjectLike).reduce((acc, item) => {\n            Object.assign(acc, item);\n            return acc;\n        }, target);\n    }\n}\n/**\n * This is a generic memoization function\n *\n * This implementation uses a cache independent of the function being memoized\n * to allow old values to be garbage collected when the memoized function goes out of scope.\n *\n * @param {*} fn The function object to memoize\n */\nexport function memoize(fn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    return ((memo) => {\n        return (...args) => {\n            const key = hashCode(args, hashFunction) || \"\";\n            if (!has(memo, key)) {\n                memo[key] = fn.apply(this, args);\n            }\n            return memo[key];\n        };\n    })({\n    /* storage */\n    });\n}\n// mingo internal\n/**\n * Retrieve the value of a given key on an object\n * @param obj\n * @param key\n * @returns {*}\n * @private\n */\nfunction getValue(obj, key) {\n    return isObjectLike(obj) ? obj[key] : undefined;\n}\n/**\n * Unwrap a single element array to specified depth\n * @param {Array} arr\n * @param {Number} depth\n */\nfunction unwrap(arr, depth) {\n    if (depth < 1)\n        return arr;\n    while (depth-- && arr.length === 1)\n        arr = arr[0];\n    return arr;\n}\n/**\n * Resolve the value of the field (dot separated) on the given object\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n * @returns {*}\n */\nexport function resolve(obj, selector, options) {\n    let depth = 0;\n    function resolve2(o, path) {\n        let value = o;\n        for (let i = 0; i < path.length; i++) {\n            const field = path[i];\n            const isText = /^\\d+$/.exec(field) === null;\n            // using instanceof to aid typescript compiler\n            if (isText && value instanceof Array) {\n                // On the first iteration, we check if we received a stop flag.\n                // If so, we stop to prevent iterating over a nested array value\n                // on consecutive object keys in the selector.\n                if (i === 0 && depth > 0)\n                    break;\n                depth += 1;\n                // only look at the rest of the path\n                const subpath = path.slice(i);\n                value = value.reduce((acc, item) => {\n                    const v = resolve2(item, subpath);\n                    if (v !== undefined)\n                        acc.push(v);\n                    return acc;\n                }, []);\n                break;\n            }\n            else {\n                value = getValue(value, field);\n            }\n            if (value === undefined)\n                break;\n        }\n        return value;\n    }\n    const result = JS_SIMPLE_TYPES.has(getType(obj).toLowerCase())\n        ? obj\n        : resolve2(obj, selector.split(\".\"));\n    return result instanceof Array && (options === null || options === void 0 ? void 0 : options.unwrapArray)\n        ? unwrap(result, depth)\n        : result;\n}\n/**\n * Returns the full object to the resolved value given by the selector.\n * This function excludes empty values as they aren't practically useful.\n *\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n */\nexport function resolveGraph(obj, selector, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    // get the next part of the selector\n    const next = names.slice(1).join(\".\");\n    const isIndex = /^\\d+$/.exec(key) !== null;\n    const hasNext = names.length > 1;\n    let result;\n    let value;\n    if (obj instanceof Array) {\n        if (isIndex) {\n            result = getValue(obj, Number(key));\n            if (hasNext) {\n                result = resolveGraph(result, next, options);\n            }\n            result = [result];\n        }\n        else {\n            result = [];\n            for (const item of obj) {\n                value = resolveGraph(item, selector, options);\n                if (options === null || options === void 0 ? void 0 : options.preserveMissing) {\n                    if (value === undefined) {\n                        value = MISSING;\n                    }\n                    result.push(value);\n                }\n                else if (value !== undefined) {\n                    result.push(value);\n                }\n            }\n        }\n    }\n    else {\n        value = getValue(obj, key);\n        if (hasNext) {\n            value = resolveGraph(value, next, options);\n        }\n        if (value === undefined)\n            return undefined;\n        result = (options === null || options === void 0 ? void 0 : options.preserveKeys) ? Object.assign({}, obj) : {};\n        result[key] = value;\n    }\n    return result;\n}\n/**\n * Filter out all MISSING values from the object in-place\n *\n * @param obj The object to filter\n */\nexport function filterMissing(obj) {\n    if (obj instanceof Array) {\n        for (let i = obj.length - 1; i >= 0; i--) {\n            if (obj[i] === MISSING) {\n                obj.splice(i, 1);\n            }\n            else {\n                filterMissing(obj[i]);\n            }\n        }\n    }\n    else if (isObject(obj)) {\n        for (const k in obj) {\n            if (has(obj, k)) {\n                filterMissing(obj[k]);\n            }\n        }\n    }\n}\nconst NUMBER_RE = /^\\d+$/;\n/**\n * Walk the object graph and execute the given transform function\n *\n * @param  {Object|Array} obj   The object to traverse.\n * @param  {String} selector    The selector to navigate.\n * @param  {Callback} fn Callback to execute for value at the end the traversal.\n * @param  {WalkOptions} options The opetions to use for the function.\n * @return {*}\n */\nexport function walk(obj, selector, fn, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    const next = names.slice(1).join(\".\");\n    if (names.length === 1) {\n        if (isObject(obj) || (isArray(obj) && NUMBER_RE.test(key))) {\n            fn(obj, key);\n        }\n    }\n    else {\n        // force the rest of the graph while traversing\n        if ((options === null || options === void 0 ? void 0 : options.buildGraph) && isNil(obj[key])) {\n            obj[key] = {};\n        }\n        // get the next item\n        const item = obj[key];\n        // nothing more to do\n        if (!item)\n            return;\n        // we peek to see if next key is an array index.\n        const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));\n        // if we have an array value but the next key is not an index and the 'descendArray' option is set,\n        // we walk each item in the array separately. This allows for handling traversing keys for objects\n        // nested within an array.\n        //\n        // Eg: Given { array: [ {k:1}, {k:2}, {k:3} ] }\n        //  - individual objecs can be traversed with \"array.k\"\n        //  - a specific object can be traversed with \"array.1\"\n        if (item instanceof Array && (options === null || options === void 0 ? void 0 : options.descendArray) && !isNextArrayIndex) {\n            item.forEach(((e) => walk(e, next, fn, options)));\n        }\n        else {\n            walk(item, next, fn, options);\n        }\n    }\n}\n/**\n * Set the value of the given object field\n *\n * @param obj {Object|Array} the object context\n * @param selector {String} path to field\n * @param value {*} the value to set. if it is function, it is invoked with the old value and must return the new value.\n */\nexport function setValue(obj, selector, value) {\n    walk(obj, selector, ((item, key) => {\n        item[key] = isFunction(value) ? value(item[key]) : value;\n    }), { buildGraph: true });\n}\n/**\n * Removes an element from the container.\n * If the selector resolves to an array and the leaf is a non-numeric key,\n * the remove operation will be performed on objects of the array.\n *\n * @param obj {ArrayOrObject} object or array\n * @param selector {String} dot separated path to element to remove\n */\nexport function removeValue(obj, selector, options) {\n    walk(obj, selector, ((item, key) => {\n        if (item instanceof Array) {\n            if (/^\\d+$/.test(key)) {\n                item.splice(parseInt(key), 1);\n            }\n            else if (options && options.descendArray) {\n                for (const elem of item) {\n                    if (isObject(elem)) {\n                        delete elem[key];\n                    }\n                }\n            }\n        }\n        else if (isObject(item)) {\n            delete item[key];\n        }\n    }), options);\n}\nconst OPERATOR_NAME_PATTERN = /^\\$[a-zA-Z0-9_]+$/;\n/**\n * Check whether the given name passes for an operator. We assume AnyVal field name starting with '$' is an operator.\n * This is cheap and safe to do since keys beginning with '$' should be reserved for internal use.\n * @param {String} name\n */\nexport function isOperator(name) {\n    return OPERATOR_NAME_PATTERN.test(name);\n}\n/**\n * Simplify expression for easy evaluation with query operators map\n * @param expr\n * @returns {*}\n */\nexport function normalize(expr) {\n    // normalized primitives\n    if (JS_SIMPLE_TYPES.has(getType(expr).toLowerCase())) {\n        return isRegExp(expr) ? { $regex: expr } : { $eq: expr };\n    }\n    // normalize object expression. using ObjectLike handles custom types\n    if (isObjectLike(expr)) {\n        const exprObj = expr;\n        // no valid query operator found, so we do simple comparison\n        if (!Object.keys(exprObj).some(isOperator)) {\n            return { $eq: expr };\n        }\n        // ensure valid regex\n        if (has(expr, \"$regex\")) {\n            const newExpr = Object.assign({}, expr);\n            newExpr[\"$regex\"] = new RegExp(expr[\"$regex\"], expr[\"$options\"]);\n            delete newExpr[\"$options\"];\n            return newExpr;\n        }\n    }\n    return expr;\n}\n/**\n * Find the insert index for the given key in a sorted array.\n *\n * @param {*} sorted The sorted array to search\n * @param {*} item The search key\n */\nexport function findInsertIndex(sorted, item) {\n    // uses binary search\n    let lo = 0;\n    let hi = sorted.length - 1;\n    while (lo <= hi) {\n        const mid = Math.round(lo + (hi - lo) / 2);\n        if (compare(item, sorted[mid]) < 0) {\n            hi = mid - 1;\n        }\n        else if (compare(item, sorted[mid]) > 0) {\n            lo = mid + 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return lo;\n}\n","import { assert, has, isArray, isFunction, isNil, isObject, isObjectLike, isOperator, isString, resolve } from \"./util\";\n/**\n * This controls how input and output documents are processed to meet different application needs.\n * Each mode has different trade offs for; immutability, reference sharing, and performance.\n */\nexport var ProcessingMode;\n(function (ProcessingMode) {\n    /**\n     * Clone inputs prior to processing, and the outputs if some objects graphs may be shared.\n     * Use this option to keep input collection immutable and to get distinct output objects.\n     *\n     * Note: This option is expensive and reduces performance.\n     */\n    ProcessingMode[\"CLONE_ALL\"] = \"CLONE_ALL\";\n    /**\n     * Clones inputs prior to processing.\n     * This option will return output objects with shared graphs in their path if specific operators are used.\n     * Use this option to keep the input collection immutable.\n     *\n     */\n    ProcessingMode[\"CLONE_INPUT\"] = \"CLONE_INPUT\";\n    /**\n     * Clones the output to return distinct objects with no shared paths.\n     * This option modifies the input collection and during processing.\n     */\n    ProcessingMode[\"CLONE_OUTPUT\"] = \"CLONE_OUTPUT\";\n    /**\n     * Turn off cloning and modifies the input collection as needed.\n     * This option will also return output objects with shared paths in their graph when specific operators are used.\n     * This option provides the greatest speedup for the biggest tradeoff.\n     * When using the aggregation pipeline, you can use the \"$out\" operator to collect immutable intermediate results.\n     *\n     * @default\n     */\n    ProcessingMode[\"CLONE_OFF\"] = \"CLONE_OFF\";\n})(ProcessingMode || (ProcessingMode = {}));\n/** Custom type to facilitate type checking for global options */\nexport class ComputeOptions {\n    constructor(_opts, \n    /** Reference to the root object when processing subgraphs of the object. */\n    _root, _local, \n    /** The current time in milliseconds. Remains the same throughout all stages of the aggregation pipeline. */\n    timestamp = Date.now()) {\n        this._opts = _opts;\n        this._root = _root;\n        this._local = _local;\n        this.timestamp = timestamp;\n        this.update(_root, _local);\n    }\n    /**\n     * Initialize new ComputeOptions.\n     *\n     * @param options\n     * @param root\n     * @param local\n     * @returns {ComputeOptions}\n     */\n    static init(options, root, local) {\n        return options instanceof ComputeOptions\n            ? new ComputeOptions(options._opts, isNil(options.root) ? root : options.root, Object.assign({}, options.local, local))\n            : new ComputeOptions(options, root, local);\n    }\n    /** Updates the internal mutable state. */\n    update(root, local) {\n        var _a;\n        // NOTE: this is done for efficiency to avoid creating too many intermediate options objects.\n        this._root = root;\n        this._local = local\n            ? Object.assign({}, local, {\n                variables: Object.assign({}, (_a = this._local) === null || _a === void 0 ? void 0 : _a.variables, local === null || local === void 0 ? void 0 : local.variables)\n            })\n            : local;\n        return this;\n    }\n    getOptions() {\n        return Object.freeze(Object.assign(Object.assign({}, this._opts), { context: Context.from(this._opts.context) }));\n    }\n    get root() {\n        return this._root;\n    }\n    get local() {\n        return this._local;\n    }\n    get idKey() {\n        return this._opts.idKey;\n    }\n    get collation() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collation;\n    }\n    get processingMode() {\n        var _a;\n        return ((_a = this._opts) === null || _a === void 0 ? void 0 : _a.processingMode) || ProcessingMode.CLONE_OFF;\n    }\n    get useStrictMode() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useStrictMode;\n    }\n    get scriptEnabled() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.scriptEnabled;\n    }\n    get useGlobalContext() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useGlobalContext;\n    }\n    get hashFunction() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.hashFunction;\n    }\n    get collectionResolver() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collectionResolver;\n    }\n    get jsonSchemaValidator() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.jsonSchemaValidator;\n    }\n    get variables() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.variables;\n    }\n    get context() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.context;\n    }\n}\n/**\n * Creates an Option from another where required keys are initialized.\n * @param options Options\n */\nexport function initOptions(options) {\n    return options instanceof ComputeOptions\n        ? options.getOptions()\n        : Object.freeze(Object.assign(Object.assign({ idKey: \"_id\", scriptEnabled: true, useStrictMode: true, useGlobalContext: true, processingMode: ProcessingMode.CLONE_OFF }, options), { context: (options === null || options === void 0 ? void 0 : options.context)\n                ? Context.from(options === null || options === void 0 ? void 0 : options.context)\n                : Context.init({}) }));\n}\n/**\n * The different groups of operators\n */\nexport var OperatorType;\n(function (OperatorType) {\n    OperatorType[\"ACCUMULATOR\"] = \"accumulator\";\n    OperatorType[\"EXPRESSION\"] = \"expression\";\n    OperatorType[\"PIPELINE\"] = \"pipeline\";\n    OperatorType[\"PROJECTION\"] = \"projection\";\n    OperatorType[\"QUERY\"] = \"query\";\n    OperatorType[\"WINDOW\"] = \"window\";\n})(OperatorType || (OperatorType = {}));\nexport class Context {\n    constructor(ops) {\n        this.operators = {\n            [OperatorType.ACCUMULATOR]: {},\n            [OperatorType.EXPRESSION]: {},\n            [OperatorType.PIPELINE]: {},\n            [OperatorType.PROJECTION]: {},\n            [OperatorType.QUERY]: {},\n            [OperatorType.WINDOW]: {}\n        };\n        for (const [type, operators] of Object.entries(ops)) {\n            this.addOperators(type, operators);\n        }\n    }\n    static init(ops = {}) {\n        return new Context(ops);\n    }\n    static from(ctx) {\n        return new Context(ctx.operators);\n    }\n    addOperators(type, ops) {\n        for (const [name, fn] of Object.entries(ops)) {\n            if (!this.getOperator(type, name)) {\n                this.operators[type][name] = fn;\n            }\n        }\n        return this;\n    }\n    // register\n    addAccumulatorOps(ops) {\n        return this.addOperators(OperatorType.ACCUMULATOR, ops);\n    }\n    addExpressionOps(ops) {\n        return this.addOperators(OperatorType.EXPRESSION, ops);\n    }\n    addQueryOps(ops) {\n        return this.addOperators(OperatorType.QUERY, ops);\n    }\n    addPipelineOps(ops) {\n        return this.addOperators(OperatorType.PIPELINE, ops);\n    }\n    addProjectionOps(ops) {\n        return this.addOperators(OperatorType.PROJECTION, ops);\n    }\n    addWindowOps(ops) {\n        return this.addOperators(OperatorType.WINDOW, ops);\n    }\n    // getters\n    getOperator(type, name) {\n        return type in this.operators ? this.operators[type][name] || null : null;\n    }\n}\n// global context\nconst GLOBAL_CONTEXT = Context.init();\n/**\n * Register fully specified operators for the given operator class.\n *\n * @param type The operator type\n * @param operators Map of the operators\n */\nexport function useOperators(type, operators) {\n    for (const [name, fn] of Object.entries(operators)) {\n        assert(isFunction(fn) && isOperator(name), `'${name}' is not a valid operator`);\n        const currentFn = getOperator(type, name, null);\n        assert(!currentFn || fn === currentFn, `${name} already exists for '${type}' operators. Cannot change operator function once registered.`);\n    }\n    // toss the operator salad :)\n    switch (type) {\n        case OperatorType.ACCUMULATOR:\n            GLOBAL_CONTEXT.addAccumulatorOps(operators);\n            break;\n        case OperatorType.EXPRESSION:\n            GLOBAL_CONTEXT.addExpressionOps(operators);\n            break;\n        case OperatorType.PIPELINE:\n            GLOBAL_CONTEXT.addPipelineOps(operators);\n            break;\n        case OperatorType.PROJECTION:\n            GLOBAL_CONTEXT.addProjectionOps(operators);\n            break;\n        case OperatorType.QUERY:\n            GLOBAL_CONTEXT.addQueryOps(operators);\n            break;\n        case OperatorType.WINDOW:\n            GLOBAL_CONTEXT.addWindowOps(operators);\n            break;\n    }\n}\n/**\n * Overrides the current global context with this new one.\n *\n * @param context The new context to override the global one with.\n */\n// export const setGlobalContext = (context: Context): void => {\n//   GLOBAL_CONTEXT = context;\n// };\n/**\n * Returns the operator function or undefined if it is not found\n * @param type Type of operator\n * @param operator Name of the operator\n */\nexport function getOperator(type, operator, options) {\n    const { context: ctx, useGlobalContext: fallback } = options || {};\n    const fn = ctx ? ctx.getOperator(type, operator) : null;\n    return !fn && fallback ? GLOBAL_CONTEXT.getOperator(type, operator) : fn;\n}\n/* eslint-disable unused-imports/no-unused-vars-ts */\n/**\n * Implementation of system variables\n * @type {Object}\n */\nconst systemVariables = {\n    $$ROOT(_obj, _expr, options) {\n        return options.root;\n    },\n    $$CURRENT(obj, _expr, _options) {\n        return obj;\n    },\n    $$REMOVE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$NOW(_obj, _expr, options) {\n        return new Date(options.timestamp);\n    }\n};\n/**\n * Implementation of $redact variables\n *\n * Each function accepts 3 arguments (obj, expr, options)\n *\n * @type {Object}\n */\nconst redactVariables = {\n    $$KEEP(obj, _expr, _options) {\n        return obj;\n    },\n    $$PRUNE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$DESCEND(obj, expr, options) {\n        // traverse nested documents iff there is a $cond\n        if (!has(expr, \"$cond\"))\n            return obj;\n        let result;\n        for (const [key, current] of Object.entries(obj)) {\n            if (isObjectLike(current)) {\n                if (current instanceof Array) {\n                    const array = [];\n                    for (let elem of current) {\n                        if (isObject(elem)) {\n                            elem = redact(elem, expr, options.update(elem));\n                        }\n                        if (!isNil(elem)) {\n                            array.push(elem);\n                        }\n                    }\n                    result = array;\n                }\n                else {\n                    result = redact(current, expr, options.update(current));\n                }\n                if (isNil(result)) {\n                    delete obj[key]; // pruned result\n                }\n                else {\n                    obj[key] = result;\n                }\n            }\n        }\n        return obj;\n    }\n};\n/* eslint-enable unused-imports/no-unused-vars-ts */\n/**\n * Computes the value of the expression on the object for the given operator\n *\n * @param obj the current object from the collection\n * @param expr the expression for the given field\n * @param operator the operator to resolve the field with\n * @param options {Object} extra options\n * @returns {*}\n */\nexport function computeValue(obj, expr, operator, options) {\n    var _a;\n    // ensure valid options exist on first invocation\n    const copts = ComputeOptions.init(options, obj);\n    operator = operator || \"\";\n    if (isOperator(operator)) {\n        // if the field of the object is a valid operator\n        const callExpression = getOperator(OperatorType.EXPRESSION, operator, options);\n        if (callExpression)\n            return callExpression(obj, expr, copts);\n        // we also handle $group accumulator operators\n        const callAccumulator = getOperator(OperatorType.ACCUMULATOR, operator, options);\n        if (callAccumulator) {\n            // if object is not an array, first try to compute using the expression\n            if (!(obj instanceof Array)) {\n                obj = computeValue(obj, expr, null, copts);\n                expr = null;\n            }\n            // validate that we have an array\n            assert(obj instanceof Array, `'${operator}' target must be an array.`);\n            // for accumulators, we use the global options since the root is specific to each element within array.\n            return callAccumulator(obj, expr, \n            // reset the root object for accumulators.\n            copts.update(null, copts.local));\n        }\n        // operator was not found\n        throw new Error(`operator '${operator}' is not registered`);\n    }\n    // if expr is a string and begins with \"$$\", then we have a variable.\n    //  this can be one of; redact variable, system variable, user-defined variable.\n    //  we check and process them in that order.\n    //\n    // if expr begins only a single \"$\", then it is a path to a field on the object.\n    if (isString(expr) && expr.length > 0 && expr[0] === \"$\") {\n        // we return redact variables as literals\n        if (has(redactVariables, expr)) {\n            return expr;\n        }\n        // default to root for resolving path.\n        let context = copts.root;\n        // handle selectors with explicit prefix\n        const arr = expr.split(\".\");\n        if (has(systemVariables, arr[0])) {\n            // set 'root' only the first time it is required to be used for all subsequent calls\n            // if it already available on the options, it will be used\n            context = systemVariables[arr[0]](obj, null, copts);\n            expr = expr.slice(arr[0].length + 1); //  +1 for '.'\n        }\n        else if (arr[0].slice(0, 2) === \"$$\") {\n            // handle user-defined variables\n            context = Object.assign({}, copts.variables, // global vars\n            // current item is added before local variables because the binding may be changed.\n            { this: obj }, (_a = copts.local) === null || _a === void 0 ? void 0 : _a.variables // local vars\n            );\n            const prefix = arr[0].slice(2);\n            assert(has(context, prefix), `Use of undefined variable: ${prefix}`);\n            expr = expr.slice(2);\n        }\n        else {\n            // 'expr' is a path to a field on the object.\n            expr = expr.slice(1);\n        }\n        if (expr === \"\")\n            return context;\n        return resolve(context, expr);\n    }\n    // check and return value if already in a resolved state\n    if (isArray(expr)) {\n        return expr.map((item) => computeValue(obj, item, null, copts));\n    }\n    else if (isObject(expr)) {\n        const result = {};\n        for (const [key, val] of Object.entries(expr)) {\n            result[key] = computeValue(obj, val, key, copts);\n            // must run ONLY one aggregate operator per expression\n            // if so, return result of the computed value\n            if ([OperatorType.EXPRESSION, OperatorType.ACCUMULATOR].some(t => !!getOperator(t, key, options))) {\n                // there should be only one operator\n                assert(Object.keys(expr).length === 1, \"Invalid aggregation expression '\" + JSON.stringify(expr) + \"'\");\n                return result[key];\n            }\n        }\n        return result;\n    }\n    return expr;\n}\n/**\n * Redact an object\n * @param  {Object} obj The object to redact\n * @param  {*} expr The redact expression\n * @param  {*} options  Options for value\n * @return {*} returns the result of the redacted object\n */\nexport function redact(obj, expr, options) {\n    const result = computeValue(obj, expr, null, options);\n    return has(redactVariables, result)\n        ? redactVariables[result](obj, expr, options)\n        : result;\n}\n","export * from \"./and\";\nexport * from \"./not\";\nexport * from \"./or\";\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $and = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    return (truthy(value, options.useStrictMode) &&\n        value.every(v => truthy(v, options.useStrictMode)));\n};\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { ensureArray } from \"../../../util\";\n/**\n * Returns the boolean value that is the opposite of its argument expression. Accepts a single argument expression.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {boolean}\n */\nexport const $not = (obj, expr, options) => {\n    const booleanExpr = ensureArray(expr);\n    // array values are truthy so an emty array is false\n    if (booleanExpr.length == 0)\n        return false;\n    // use provided value non-array value\n    if (booleanExpr.length == 1)\n        return !computeValue(obj, booleanExpr[0], null, options);\n    // expects a single argument\n    throw \"Expression $not takes exactly 1 argument\";\n};\n","// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $or = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    const strict = options.useStrictMode;\n    return truthy(value, strict) && value.some(v => truthy(v, strict));\n};\n","export * from \"./cmp\";\nexport * from \"./eq\";\nexport * from \"./gt\";\nexport * from \"./gte\";\nexport * from \"./lt\";\nexport * from \"./lte\";\nexport * from \"./ne\";\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { computeValue } from \"../../../core\";\n/**\n * Compares two values and returns the result of the comparison as an integer.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $cmp = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    if (args[0] > args[1])\n        return 1;\n    if (args[0] < args[1])\n        return -1;\n    return 0;\n};\n","/**\n * Returns an iterator\n * @param {*} source An iterable source (Array, Function, Generator, or Iterator)\n */\nexport function Lazy(source) {\n    return source instanceof Iterator ? source : new Iterator(source);\n}\nexport function compose(...iterators) {\n    let index = 0;\n    return Lazy(() => {\n        while (index < iterators.length) {\n            const o = iterators[index].next();\n            if (!o.done)\n                return o;\n            index++;\n        }\n        return { done: true };\n    });\n}\n/**\n * Checks whether the given object is compatible with a generator i.e Object{next:Function}\n * @param {*} o An object\n */\nfunction isGenerator(o) {\n    return (!!o && typeof o === \"object\" && (o === null || o === void 0 ? void 0 : o.next) instanceof Function);\n}\nfunction dropItem(array, i) {\n    const rest = array.slice(i + 1);\n    array.splice(i);\n    Array.prototype.push.apply(array, rest);\n}\n// stop iteration error\nconst DONE = new Error();\n// Lazy function actions\nvar Action;\n(function (Action) {\n    Action[Action[\"MAP\"] = 0] = \"MAP\";\n    Action[Action[\"FILTER\"] = 1] = \"FILTER\";\n    Action[Action[\"TAKE\"] = 2] = \"TAKE\";\n    Action[Action[\"DROP\"] = 3] = \"DROP\";\n})(Action || (Action = {}));\nfunction createCallback(nextFn, iteratees, buffer) {\n    let done = false;\n    let index = -1;\n    let bufferIndex = 0; // index for the buffer\n    return function (storeResult) {\n        // special hack to collect all values into buffer\n        try {\n            outer: while (!done) {\n                let o = nextFn();\n                index++;\n                let i = -1;\n                const size = iteratees.length;\n                let innerDone = false;\n                while (++i < size) {\n                    const r = iteratees[i];\n                    switch (r.action) {\n                        case Action.MAP:\n                            o = r.func(o, index);\n                            break;\n                        case Action.FILTER:\n                            if (!r.func(o, index))\n                                continue outer;\n                            break;\n                        case Action.TAKE:\n                            --r.count;\n                            if (!r.count)\n                                innerDone = true;\n                            break;\n                        case Action.DROP:\n                            --r.count;\n                            if (!r.count)\n                                dropItem(iteratees, i);\n                            continue outer;\n                        default:\n                            break outer;\n                    }\n                }\n                done = innerDone;\n                if (storeResult) {\n                    buffer[bufferIndex++] = o;\n                }\n                else {\n                    return { value: o, done: false };\n                }\n            }\n        }\n        catch (e) {\n            if (e !== DONE)\n                throw e;\n        }\n        done = true;\n        return { done };\n    };\n}\n/**\n * A lazy collection iterator yields a single value at a time upon request.\n */\nexport class Iterator {\n    /**\n     * @param {*} source An iterable object or function.\n     *    Array - return one element per cycle\n     *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n     *    Function - call to return the next value\n     * @param {Function} fn An optional transformation function\n     */\n    constructor(source) {\n        this.iteratees = [];\n        this.yieldedValues = [];\n        this.isDone = false;\n        let nextVal;\n        if (source instanceof Function) {\n            // make iterable\n            source = { next: source };\n        }\n        if (isGenerator(source)) {\n            const src = source;\n            nextVal = () => {\n                const o = src.next();\n                if (o.done)\n                    throw DONE;\n                return o.value;\n            };\n        }\n        else if (source instanceof Array) {\n            const data = source;\n            const size = data.length;\n            let index = 0;\n            nextVal = () => {\n                if (index < size)\n                    return data[index++];\n                throw DONE;\n            };\n        }\n        else if (!(source instanceof Function)) {\n            throw new Error(`Lazy must be initialized with an array, generator, or function.`);\n        }\n        // create next function\n        this.getNext = createCallback(nextVal, this.iteratees, this.yieldedValues);\n    }\n    /**\n     * Add an iteratee to this lazy sequence\n     */\n    push(action, value) {\n        if (typeof value === \"function\") {\n            this.iteratees.push({ action, func: value });\n        }\n        else if (typeof value === \"number\") {\n            this.iteratees.push({ action, count: value });\n        }\n        return this;\n    }\n    next() {\n        return this.getNext();\n    }\n    // Iteratees methods\n    /**\n     * Transform each item in the sequence to a new value\n     * @param {Function} f\n     */\n    map(f) {\n        return this.push(Action.MAP, f);\n    }\n    /**\n     * Select only items matching the given predicate\n     * @param {Function} pred\n     */\n    filter(predicate) {\n        return this.push(Action.FILTER, predicate);\n    }\n    /**\n     * Take given numbe for values from sequence\n     * @param {Number} n A number greater than 0\n     */\n    take(n) {\n        return n > 0 ? this.push(Action.TAKE, n) : this;\n    }\n    /**\n     * Drop a number of values from the sequence\n     * @param {Number} n Number of items to drop greater than 0\n     */\n    drop(n) {\n        return n > 0 ? this.push(Action.DROP, n) : this;\n    }\n    // Transformations\n    /**\n     * Returns a new lazy object with results of the transformation\n     * The entire sequence is realized.\n     *\n     * @param {Callback<Source, RawArray>} fn Tranform function of type (Array) => (Any)\n     */\n    transform(fn) {\n        const self = this;\n        let iter;\n        return Lazy(() => {\n            if (!iter) {\n                iter = Lazy(fn(self.value()));\n            }\n            return iter.next();\n        });\n    }\n    // Terminal methods\n    /**\n     * Returns the fully realized values of the iterators.\n     * The return value will be an array unless `lazy.first()` was used.\n     * The realized values are cached for subsequent calls.\n     */\n    value() {\n        if (!this.isDone) {\n            this.isDone = this.getNext(true).done;\n        }\n        return this.yieldedValues;\n    }\n    /**\n     * Execute the funcion for each value. Will stop when an execution returns false.\n     * @param {Function} f\n     * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true\n     */\n    each(f) {\n        for (;;) {\n            const o = this.next();\n            if (o.done)\n                break;\n            if (f(o.value) === false)\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Returns the reduction of sequence according the reducing function\n     *\n     * @param {*} f a reducing function\n     * @param {*} initialValue\n     */\n    reduce(f, initialValue) {\n        let o = this.next();\n        if (initialValue === undefined && !o.done) {\n            initialValue = o.value;\n            o = this.next();\n        }\n        while (!o.done) {\n            initialValue = f(initialValue, o.value);\n            o = this.next();\n        }\n        return initialValue;\n    }\n    /**\n     * Returns the number of matched items in the sequence\n     */\n    size() {\n        return this.reduce(((acc, _) => ++acc), 0);\n    }\n    [Symbol.iterator]() {\n        /* eslint-disable @typescript-eslint/no-unsafe-return */\n        return this;\n    }\n}\n","import { getOperator, initOptions, OperatorType, ProcessingMode } from \"./core\";\nimport { Lazy } from \"./lazy\";\nimport { assert, cloneDeep, intersection, isEmpty } from \"./util\";\n/**\n * Provides functionality for the mongoDB aggregation pipeline\n *\n * @param pipeline an Array of pipeline operators\n * @param options An optional Options to pass the aggregator\n * @constructor\n */\nexport class Aggregator {\n    constructor(pipeline, options) {\n        this.pipeline = pipeline;\n        this.options = initOptions(options);\n    }\n    /**\n     * Returns an `Lazy` iterator for processing results of pipeline\n     *\n     * @param {*} collection An array or iterator object\n     * @returns {Iterator} an iterator object\n     */\n    stream(collection) {\n        let iterator = Lazy(collection);\n        const mode = this.options.processingMode;\n        if (mode == ProcessingMode.CLONE_ALL ||\n            mode == ProcessingMode.CLONE_INPUT) {\n            iterator.map(cloneDeep);\n        }\n        const pipelineOperators = new Array();\n        if (!isEmpty(this.pipeline)) {\n            // run aggregation pipeline\n            for (const operator of this.pipeline) {\n                const operatorKeys = Object.keys(operator);\n                const opName = operatorKeys[0];\n                const call = getOperator(OperatorType.PIPELINE, opName, this.options);\n                assert(operatorKeys.length === 1 && !!call, `invalid pipeline operator ${opName}`);\n                pipelineOperators.push(opName);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                iterator = call(iterator, operator[opName], this.options);\n            }\n        }\n        // operators that may share object graphs of inputs.\n        // we only need to clone the output for these since the objects will already be distinct for other operators.\n        if (mode == ProcessingMode.CLONE_OUTPUT ||\n            (mode == ProcessingMode.CLONE_ALL &&\n                !!intersection([[\"$group\", \"$unwind\"], pipelineOperators]).length)) {\n            iterator.map(cloneDeep);\n        }\n        return iterator;\n    }\n    /**\n     * Return the results of the aggregation as an array.\n     *\n     * @param {*} collection\n     * @param {*} query\n     */\n    run(collection) {\n        return this.stream(collection).value();\n    }\n}\n","import { Aggregator } from \"./aggregator\";\nimport { compose, Lazy } from \"./lazy\";\nimport { isObject } from \"./util\";\n/**\n * Cursor to iterate and perform filtering on matched objects.\n * This object must not be used directly. A cursor may be obtaine from calling `find()` on an instance of `Query`.\n *\n * @param collection The input source of the collection\n * @param predicate A predicate function to test documents\n * @param projection A projection criteria\n * @param options Options\n * @constructor\n */\nexport class Cursor {\n    constructor(source, predicate, projection, options) {\n        this.source = source;\n        this.predicate = predicate;\n        this.projection = projection;\n        this.options = options;\n        this.operators = [];\n        this.result = null;\n        this.buffer = [];\n    }\n    /** Returns the iterator from running the query */\n    fetch() {\n        if (this.result)\n            return this.result;\n        // add projection operator\n        if (isObject(this.projection)) {\n            this.operators.push({ $project: this.projection });\n        }\n        // filter collection\n        this.result = Lazy(this.source).filter(this.predicate);\n        if (this.operators.length > 0) {\n            this.result = new Aggregator(this.operators, this.options).stream(this.result);\n        }\n        return this.result;\n    }\n    /** Returns an iterator with the buffered data included */\n    fetchAll() {\n        const buffered = Lazy([...this.buffer]);\n        this.buffer = [];\n        return compose(buffered, this.fetch());\n    }\n    /**\n     * Return remaining objects in the cursor as an array. This method exhausts the cursor\n     * @returns {Array}\n     */\n    all() {\n        return this.fetchAll().value();\n    }\n    /**\n     * Returns the number of objects return in the cursor. This method exhausts the cursor\n     * @returns {Number}\n     */\n    count() {\n        return this.all().length;\n    }\n    /**\n     * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n     * @param {Number} n the number of results to skip.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    skip(n) {\n        this.operators.push({ $skip: n });\n        return this;\n    }\n    /**\n     * Constrains the size of a cursor's result set.\n     * @param {Number} n the number of results to limit to.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    limit(n) {\n        this.operators.push({ $limit: n });\n        return this;\n    }\n    /**\n     * Returns results ordered according to a sort specification.\n     * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    sort(modifier) {\n        this.operators.push({ $sort: modifier });\n        return this;\n    }\n    /**\n     * Specifies the collation for the cursor returned by the `mingo.Query.find`\n     * @param {*} spec\n     */\n    collation(spec) {\n        this.options = Object.assign(Object.assign({}, this.options), { collation: spec });\n        return this;\n    }\n    /**\n     * Returns the next document in a cursor.\n     * @returns {Object | Boolean}\n     */\n    next() {\n        // yield value obtains in hasNext()\n        if (this.buffer.length > 0) {\n            return this.buffer.pop();\n        }\n        const o = this.fetch().next();\n        if (o.done)\n            return;\n        return o.value;\n    }\n    /**\n     * Returns true if the cursor has documents and can be iterated.\n     * @returns {boolean}\n     */\n    hasNext() {\n        // there is a value in the buffer\n        if (this.buffer.length > 0)\n            return true;\n        const o = this.fetch().next();\n        if (o.done)\n            return false;\n        this.buffer.push(o.value);\n        return true;\n    }\n    /**\n     * Applies a function to each document in a cursor and collects the return values in an array.\n     * @param fn\n     * @returns {Array}\n     */\n    map(fn) {\n        return this.all().map(fn);\n    }\n    /**\n     * Applies a JavaScript function for every document in a cursor.\n     * @param fn\n     */\n    forEach(fn) {\n        this.all().forEach(fn);\n    }\n    [Symbol.iterator]() {\n        return this.fetchAll();\n    }\n}\n","import { getOperator, initOptions, OperatorType } from \"./core\";\nimport { Cursor } from \"./cursor\";\nimport { assert, inArray, isObject, isOperator, normalize } from \"./util\";\n/**\n * An object used to filter input documents\n *\n * @param {Object} condition The condition for constructing predicates\n * @param {Options} options Options for use by operators\n * @constructor\n */\nexport class Query {\n    constructor(condition, options) {\n        this.condition = condition;\n        this.options = initOptions(options);\n        this.compiled = [];\n        this.compile();\n    }\n    compile() {\n        assert(isObject(this.condition), `query criteria must be an object: ${JSON.stringify(this.condition)}`);\n        const whereOperator = {};\n        for (const [field, expr] of Object.entries(this.condition)) {\n            if (\"$where\" === field) {\n                Object.assign(whereOperator, { field: field, expr: expr });\n            }\n            else if (inArray([\"$and\", \"$or\", \"$nor\", \"$expr\", \"$jsonSchema\"], field)) {\n                this.processOperator(field, field, expr);\n            }\n            else {\n                // normalize expression\n                assert(!isOperator(field), `unknown top level operator: ${field}`);\n                for (const [operator, val] of Object.entries(normalize(expr))) {\n                    this.processOperator(field, operator, val);\n                }\n            }\n            if (whereOperator.field) {\n                this.processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n            }\n        }\n    }\n    processOperator(field, operator, value) {\n        const call = getOperator(OperatorType.QUERY, operator, this.options);\n        if (!call) {\n            throw new Error(`unknown operator ${operator}`);\n        }\n        const fn = call(field, value, this.options);\n        this.compiled.push(fn);\n    }\n    /**\n     * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n     *\n     * @param obj The object to test\n     * @returns {boolean} True or false\n     */\n    test(obj) {\n        for (let i = 0, len = this.compiled.length; i < len; i++) {\n            if (!this.compiled[i](obj)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns a cursor to select matching documents from the input source.\n     *\n     * @param source A source providing a sequence of documents\n     * @param projection An optional projection criteria\n     * @returns {Cursor} A Cursor for iterating over the results\n     */\n    find(collection, projection) {\n        return new Cursor(collection, ((x) => this.test(x)), projection || {}, this.options);\n    }\n    /**\n     * Remove matched documents from the collection returning the remainder\n     *\n     * @param collection An array of documents\n     * @returns {Array} A new array with matching elements removed\n     */\n    remove(collection) {\n        return collection.reduce((acc, obj) => {\n            if (!this.test(obj))\n                acc.push(obj);\n            return acc;\n        }, []);\n    }\n}\n","/**\n * Predicates used for Query and Expression operators.\n */\nimport { computeValue } from \"../core\";\nimport { Query } from \"../query\";\nimport { compare as mingoCmp, ensureArray, flatten, getType, inArray, intersection, isArray, isBoolean, isDate, isEmpty, isEqual, isNil, isNumber, isObject, isOperator, isRegExp, isString, MAX_INT, MAX_LONG, MIN_INT, MIN_LONG, resolve, truthy } from \"../util\";\n/**\n * Returns a query operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createQueryOperator(predicate) {\n    const f = (selector, value, options) => {\n        const opts = { unwrapArray: true };\n        const depth = Math.max(1, selector.split(\".\").length - 1);\n        return (obj) => {\n            // value of field must be fully resolved.\n            const lhs = resolve(obj, selector, opts);\n            return predicate(lhs, value, Object.assign(Object.assign({}, options), { depth }));\n        };\n    };\n    f.op = \"query\";\n    return f; // as QueryOperator;\n}\n/**\n * Returns an expression operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createExpressionOperator(predicate) {\n    return (obj, expr, options) => {\n        const args = computeValue(obj, expr, null, options);\n        return predicate(...args);\n    };\n}\n/**\n * Checks that two values are equal.\n *\n * @param a         The lhs operand as resolved from the object by the given selector\n * @param b         The rhs operand provided by the user\n * @returns {*}\n */\nexport function $eq(a, b, options) {\n    // start with simple equality check\n    if (isEqual(a, b))\n        return true;\n    // https://docs.mongodb.com/manual/tutorial/query-for-null-fields/\n    if (isNil(a) && isNil(b))\n        return true;\n    // check\n    if (a instanceof Array) {\n        const eq = isEqual.bind(null, b);\n        return a.some(eq) || flatten(a, options === null || options === void 0 ? void 0 : options.depth).some(eq);\n    }\n    return false;\n}\n/**\n * Matches all values that are not equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $ne(a, b, options) {\n    return !$eq(a, b, options);\n}\n/**\n * Matches any of the values that exist in an array specified in the query.\n *\n * @param a\n * @param b\n * @returns {*}\n */\nexport function $in(a, b, options) {\n    // queries for null should be able to find undefined fields\n    if (isNil(a))\n        return b.some(v => v === null);\n    return intersection([ensureArray(a), b], options === null || options === void 0 ? void 0 : options.hashFunction).length > 0;\n}\n/**\n * Matches values that do not exist in an array specified to the query.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $nin(a, b, options) {\n    return !$in(a, b, options);\n}\n/**\n * Matches values that are less than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lt(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) < 0);\n}\n/**\n * Matches values that are less than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lte(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) <= 0);\n}\n/**\n * Matches values that are greater than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gt(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) > 0);\n}\n/**\n * Matches values that are greater than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gte(a, b, options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) >= 0);\n}\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $mod(a, b, options) {\n    return ensureArray(a).some(((x) => b.length === 2 && x % b[0] === b[1]));\n}\n/**\n * Selects documents where values match a specified regular expression.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $regex(a, b, options) {\n    const lhs = ensureArray(a);\n    const match = (x) => isString(x) && truthy(b.exec(x), options === null || options === void 0 ? void 0 : options.useStrictMode);\n    return lhs.some(match) || flatten(lhs, 1).some(match);\n}\n/**\n * Matches documents that have the specified field.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $exists(a, b, options) {\n    return (((b === false || b === 0) && a === undefined) ||\n        ((b === true || b === 1) && a !== undefined));\n}\n/**\n * Matches arrays that contain all elements specified in the query.\n *\n * @param values\n * @param queries\n * @returns boolean\n */\nexport function $all(values, queries, options) {\n    if (!isArray(values) ||\n        !isArray(queries) ||\n        !values.length ||\n        !queries.length) {\n        return false;\n    }\n    let matched = true;\n    for (const query of queries) {\n        // no need to check all the queries.\n        if (!matched)\n            break;\n        if (isObject(query) && inArray(Object.keys(query), \"$elemMatch\")) {\n            matched = $elemMatch(values, query[\"$elemMatch\"], options);\n        }\n        else if (query instanceof RegExp) {\n            matched = values.some(s => typeof s === \"string\" && query.test(s));\n        }\n        else {\n            matched = values.some(v => isEqual(query, v));\n        }\n    }\n    return matched;\n}\n/**\n * Selects documents if the array field is a specified size.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $size(a, b, options) {\n    return Array.isArray(a) && a.length === b;\n}\nfunction isNonBooleanOperator(name) {\n    return isOperator(name) && [\"$and\", \"$or\", \"$nor\"].indexOf(name) === -1;\n}\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch condition.\n *\n * @param a {Array} element to match against\n * @param b {Object} subquery\n */\nexport function $elemMatch(a, b, options) {\n    // should return false for non-matching input\n    if (isArray(a) && !isEmpty(a)) {\n        let format = (x) => x;\n        let criteria = b;\n        // If we find a boolean operator in the subquery, we fake a field to point to it. This is an\n        // attempt to ensure that it is a valid criteria. We cannot make this substitution for operators\n        // like $and/$or/$nor; as otherwise, this faking will break our query.\n        if (Object.keys(b).every(isNonBooleanOperator)) {\n            criteria = { temp: b };\n            format = x => ({ temp: x });\n        }\n        const query = new Query(criteria, options);\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (query.test(format(a[i]))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// helper functions\nconst isNull = (a) => a === null;\nconst isInt = (a) => isNumber(a) &&\n    a >= MIN_INT &&\n    a <= MAX_INT &&\n    a.toString().indexOf(\".\") === -1;\nconst isLong = (a) => isNumber(a) &&\n    a >= MIN_LONG &&\n    a <= MAX_LONG &&\n    a.toString().indexOf(\".\") === -1;\n/** Mapping of type to predicate */\nconst compareFuncs = {\n    array: isArray,\n    bool: isBoolean,\n    boolean: isBoolean,\n    date: isDate,\n    decimal: isNumber,\n    double: isNumber,\n    int: isInt,\n    long: isLong,\n    number: isNumber,\n    null: isNull,\n    object: isObject,\n    regex: isRegExp,\n    regexp: isRegExp,\n    string: isString,\n    // added for completeness\n    undefined: isNil, // deprecated\n    function: (_) => {\n        throw new Error(\"unsupported type key `function`.\");\n    },\n    // Mongo identifiers\n    1: isNumber, //double\n    2: isString,\n    3: isObject,\n    4: isArray,\n    6: isNil, // deprecated\n    8: isBoolean,\n    9: isDate,\n    10: isNull,\n    11: isRegExp,\n    16: isInt,\n    18: isLong,\n    19: isNumber //decimal\n};\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nfunction compareType(a, b, _) {\n    const f = compareFuncs[b];\n    return f ? f(a) : false;\n}\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $type(a, b, options) {\n    return Array.isArray(b)\n        ? b.findIndex(t => compareType(a, t, options)) >= 0\n        : compareType(a, b, options);\n}\nfunction compare(a, b, f) {\n    return ensureArray(a).some(x => getType(x) === getType(b) && f(x, b));\n}\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $eq as __eq, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createExpressionOperator(__eq);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gt as __gt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createExpressionOperator(__gt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gte as __gte, createExpressionOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createExpressionOperator(__gte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lt as __lt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createExpressionOperator(__lt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lte as __lte, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createExpressionOperator(__lte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $ne as __ne, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createExpressionOperator(__ne);\n","import { computeValue } from \"../../../core\";\nimport { isDate, isNil, isNumber } from \"../../../util\";\nconst COMMON_YEAR_DAYS_OFFSET = [\n    0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334\n];\nconst LEAP_YEAR_DAYS_OFFSET = [\n    0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335\n];\n// https://en.wikipedia.org/wiki/ISO_week_date\nconst p = (y) => (y + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400)) % 7;\nconst weeks = (y) => 52 + Number(p(y) == 4 || p(y - 1) == 3);\nexport const isLeapYear = (year) => (year & 3) == 0 && (year % 100 != 0 || year % 400 == 0);\nexport const getDayOfYear = (d) => (isLeapYear(d.getUTCFullYear())\n    ? LEAP_YEAR_DAYS_OFFSET\n    : COMMON_YEAR_DAYS_OFFSET)[d.getUTCMonth()] + d.getUTCDate();\nexport function isoWeek(d) {\n    // algorithm based on https://en.wikipedia.org/wiki/ISO_week_date\n    const w = Math.floor((10 + getDayOfYear(d) - (d.getUTCDay() || 7)) / 7);\n    if (w < 1)\n        return weeks(d.getUTCFullYear() - 1);\n    if (w > weeks(d.getUTCFullYear()))\n        return 1;\n    return w;\n}\nexport function isoWeekYear(d) {\n    return (d.getUTCFullYear() -\n        Number(d.getUTCMonth() == 0 && d.getUTCDate() == 1 && d.getUTCDay() < 1));\n}\nexport const MINUTES_PER_HOUR = 60;\nexport const MILLIS_PER_DAY = 1000 * 60 * 60 * 24;\nexport const DURATION_IN_MILLIS = {\n    week: MILLIS_PER_DAY * 7,\n    day: MILLIS_PER_DAY,\n    hour: 1000 * 60 * 60,\n    minute: 1000 * 60,\n    second: 1000,\n    millisecond: 1\n};\n// default format if unspecified\nexport const DATE_FORMAT = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n// Inclusive interval of date parts\nexport const DATE_PART_INTERVAL = [\n    [\"year\", 0, 9999],\n    [\"month\", 1, 12],\n    [\"day\", 1, 31],\n    [\"hour\", 0, 23],\n    [\"minute\", 0, 59],\n    [\"second\", 0, 59],\n    [\"millisecond\", 0, 999]\n];\n// used for formatting dates in $dateToString operator\nexport const DATE_SYM_TABLE = {\n    \"%Y\": { name: \"year\", padding: 4, re: /([0-9]{4})/ },\n    \"%G\": { name: \"year\", padding: 4, re: /([0-9]{4})/ },\n    \"%m\": { name: \"month\", padding: 2, re: /(0[1-9]|1[012])/ },\n    \"%d\": { name: \"day\", padding: 2, re: /(0[1-9]|[12][0-9]|3[01])/ },\n    \"%H\": { name: \"hour\", padding: 2, re: /([01][0-9]|2[0-3])/ },\n    \"%M\": { name: \"minute\", padding: 2, re: /([0-5][0-9])/ },\n    \"%S\": { name: \"second\", padding: 2, re: /([0-5][0-9]|60)/ },\n    \"%L\": { name: \"millisecond\", padding: 3, re: /([0-9]{3})/ },\n    \"%u\": { name: \"weekday\", padding: 1, re: /([1-7])/ },\n    \"%U\": { name: \"week\", padding: 2, re: /([1-4][0-9]?|5[0-3]?)/ },\n    \"%V\": { name: \"isoWeek\", padding: 2, re: /([1-4][0-9]?|5[0-3]?)/ },\n    \"%z\": {\n        name: \"timezone\",\n        padding: 2,\n        re: /(([+-][01][0-9]|2[0-3]):?([0-5][0-9])?)/\n    },\n    \"%Z\": { name: \"minuteOffset\", padding: 3, re: /([+-][0-9]{3})/ }\n    // \"%%\": \"%\",\n};\n/**\n * Parse and return the timezone string as a number\n * @param tzstr Timezone string matching '+/-hh[:][mm]'\n */\nexport function parseTimezone(tzstr) {\n    if (isNil(tzstr))\n        return 0;\n    const m = DATE_SYM_TABLE[\"%z\"].re.exec(tzstr);\n    if (!m)\n        throw Error(`invalid or location-based timezone '${tzstr}' not supported`);\n    const hr = parseInt(m[2]) || 0;\n    const min = parseInt(m[3]) || 0;\n    return (Math.abs(hr * MINUTES_PER_HOUR) + min) * (hr < 0 ? -1 : 1);\n}\n/**\n * Formats the timezone for output\n * @param tz A timezone object\n */\nexport function formatTimezone(minuteOffset) {\n    return ((minuteOffset < 0 ? \"-\" : \"+\") +\n        padDigits(Math.abs(Math.floor(minuteOffset / MINUTES_PER_HOUR)), 2) +\n        padDigits(Math.abs(minuteOffset) % MINUTES_PER_HOUR, 2));\n}\n/**\n * Adjust the date by the given timezone\n * @param d Date object\n * @param minuteOffset number\n */\nexport function adjustDate(d, minuteOffset) {\n    d.setUTCMinutes(d.getUTCMinutes() + minuteOffset);\n}\n/**\n * Computes a date expression\n * @param obj The target object\n * @param expr Any value that resolves to a valid date expression. Valid expressions include a number, Date, or Object{date: number|Date, timezone?: string}\n */\nexport function computeDate(obj, expr, options) {\n    const d = computeValue(obj, expr, null, options);\n    if (isDate(d))\n        return new Date(d);\n    // timestamp is in seconds\n    if (isNumber(d))\n        return new Date(d * 1000);\n    if (d.date) {\n        const date = isDate(d.date) ? new Date(d.date) : new Date(d.date * 1000);\n        if (d.timezone) {\n            adjustDate(date, parseTimezone(d.timezone));\n        }\n        return date;\n    }\n    throw Error(`cannot convert ${expr === null || expr === void 0 ? void 0 : expr.toString()} to date`);\n}\nexport function padDigits(n, digits) {\n    return (new Array(Math.max(digits - String(n).length + 1, 0)).join(\"0\") +\n        n.toString());\n}\nexport function regexQuote(s) {\n    \"^.-*?$\".split(\"\").forEach((c) => {\n        s = s.replace(c, `\\\\${c}`);\n    });\n    return s;\n}\nexport function regexStrip(s) {\n    return s.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n}\n","import { groupBy, isEqual } from \"../../util\";\nimport { $push } from \"../accumulator\";\nimport { MILLIS_PER_DAY } from \"../expression/date/_internal\";\nimport { isUnbounded } from \"../pipeline/_internal\";\n// millis map to diffirent time units\nexport const MILLIS_PER_UNIT = {\n    week: MILLIS_PER_DAY * 7,\n    day: MILLIS_PER_DAY,\n    hour: MILLIS_PER_DAY / 24,\n    minute: 60000,\n    second: 1000,\n    millisecond: 1\n};\n// internal cache to store precomputed series once to avoid O(N^2) calls to over the collection\nconst memo = new WeakMap();\n/**\n * Caches all computed values in a window sequence for reuse.\n * This is only useful for operations with unbounded documents.\n */\nexport function withMemo(collection, expr, cacheFn, fn) {\n    // no caching done for bounded inputs\n    if (!isUnbounded(expr.parentExpr.output[expr.field].window)) {\n        return fn(cacheFn());\n    }\n    // first time using collection\n    if (!memo.has(collection)) {\n        memo.set(collection, { [expr.field]: cacheFn() });\n    }\n    const data = memo.get(collection);\n    // subsequent computations over the same collection.\n    if (data[expr.field] === undefined) {\n        data[expr.field] = cacheFn();\n    }\n    let failed = false;\n    try {\n        return fn(data[expr.field]);\n    }\n    catch (e) {\n        failed = true;\n    }\n    finally {\n        // cleanup on failure or last element in collection.\n        if (failed || expr.documentNumber === collection.length) {\n            delete data[expr.field];\n            if (Object.keys(data).length === 0)\n                memo.delete(collection);\n        }\n    }\n}\n/** Returns the position of a document in the $setWindowFields stage partition. */\nexport function rank(_, collection, expr, options, dense) {\n    return withMemo(collection, expr, () => {\n        const sortKey = \"$\" + Object.keys(expr.parentExpr.sortBy)[0];\n        const values = $push(collection, sortKey, options);\n        const groups = groupBy(values, ((_, n) => values[n]), options.hashFunction);\n        return { values, groups };\n    }, input => {\n        const { values, groups: partitions } = input;\n        // same number of paritions as length means all sort keys are unique\n        if (partitions.size == collection.length) {\n            return expr.documentNumber;\n        }\n        const current = values[expr.documentNumber - 1];\n        let i = 0;\n        let offset = 0;\n        // partition keys are already dense so just return the value on match\n        for (const key of partitions.keys()) {\n            if (isEqual(current, key)) {\n                return dense ? i + 1 : offset + 1;\n            }\n            i++;\n            offset += partitions.get(key).length;\n        }\n        // should be unreachable\n        throw new Error(\"rank: invalid return value. please submit a bug report.\");\n    });\n}\n","import { compare, groupBy, into, isEmpty, isObject, isString, resolve } from \"../../util\";\n/**\n * Takes all input documents and returns them in a stream of sorted documents.\n *\n * @param collection\n * @param sortKeys\n * @param  {Object} options\n * @returns {*}\n */\nexport const $sort = (collection, sortKeys, options) => {\n    if (isEmpty(sortKeys) || !isObject(sortKeys))\n        return collection;\n    let cmp = compare;\n    // check for collation spec on the options\n    const collationSpec = options.collation;\n    // use collation comparator if provided\n    if (isObject(collationSpec) && isString(collationSpec.locale)) {\n        cmp = collationComparator(collationSpec);\n    }\n    return collection.transform((coll) => {\n        const modifiers = Object.keys(sortKeys);\n        for (const key of modifiers.reverse()) {\n            const groups = groupBy(coll, (obj) => resolve(obj, key), options.hashFunction);\n            const sortedKeys = Array.from(groups.keys()).sort(cmp);\n            if (sortKeys[key] === -1)\n                sortedKeys.reverse();\n            // reuse collection so the data is available for the next iteration of the sort modifiers.\n            coll = [];\n            sortedKeys.reduce((acc, key) => into(acc, groups.get(key)), coll);\n        }\n        return coll;\n    });\n};\n// MongoDB collation strength to JS localeCompare sensitivity mapping.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\nconst COLLATION_STRENGTH = {\n    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n    1: \"base\",\n    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n    // Examples: a ≠ b, a ≠ á, a = A.\n    2: \"accent\",\n    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n    3: \"variant\"\n    // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n};\n/**\n * Creates a comparator function for the given collation spec. See https://docs.mongodb.com/manual/reference/collation/\n *\n * @param spec {Object} The MongoDB collation spec.\n * {\n *   locale: string,\n *   caseLevel: boolean,\n *   caseFirst: string,\n *   strength: int,\n *   numericOrdering: boolean,\n *   alternate: string,\n *   maxVariable: never, // unsupported\n *   backwards: never // unsupported\n * }\n */\nfunction collationComparator(spec) {\n    const localeOpt = {\n        sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n        caseFirst: spec.caseFirst === \"off\" ? \"false\" : spec.caseFirst || \"false\",\n        numeric: spec.numericOrdering || false,\n        ignorePunctuation: spec.alternate === \"shifted\"\n    };\n    // when caseLevel is true for strength  1:base and 2:accent, bump sensitivity to the nearest that supports case comparison\n    if ((spec.caseLevel || false) === true) {\n        if (localeOpt.sensitivity === \"base\")\n            localeOpt.sensitivity = \"case\";\n        if (localeOpt.sensitivity === \"accent\")\n            localeOpt.sensitivity = \"variant\";\n    }\n    const collator = new Intl.Collator(spec.locale, localeOpt);\n    return (a, b) => {\n        // non strings\n        if (!isString(a) || !isString(b))\n            return compare(a, b);\n        // only for strings\n        const i = collator.compare(a, b);\n        if (i < 0)\n            return -1;\n        if (i > 0)\n            return 1;\n        return 0;\n    };\n}\n","/**\n * Restricts the number of documents in an aggregation pipeline.\n *\n * @param collection\n * @param value\n * @param options\n * @returns {Object|*}\n */\nexport const $limit = (collection, expr, options) => {\n    return collection.take(expr);\n};\n","// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { $nin as __nin, createExpressionOperator } from \"../../_predicates\";\n/**\n * Returns a boolean indicating whether a specified value is not an array.\n * Note: This expression operator is missing from the documentation\n *\n * @param {Object} obj\n * @param {Array} expr\n */\nexport const $nin = createExpressionOperator(__nin);\n","// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil } from \"../../../util\";\n/**\n * Returns a subset of an array.\n *\n * @param  {Object} obj\n * @param  {*} expr\n * @return {*}\n */\nexport const $slice = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const arr = args[0];\n    let skip = args[1];\n    let limit = args[2];\n    // MongoDB $slice works a bit differently from Array.slice\n    // Uses single argument for 'limit' and array argument [skip, limit]\n    if (isNil(limit)) {\n        if (skip < 0) {\n            skip = Math.max(0, arr.length + skip);\n            limit = arr.length - skip + 1;\n        }\n        else {\n            limit = skip;\n            skip = 0;\n        }\n    }\n    else {\n        if (skip < 0) {\n            skip = Math.max(0, arr.length + skip);\n        }\n        assert(limit > 0, `Invalid argument for $slice operator. Limit must be a positive number`);\n        limit += skip;\n    }\n    return arr.slice(skip, limit);\n};\n","import { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\nexport const bitwise = (op, compute) => (obj, expr, options) => {\n    assert(isArray(expr), `${op}: expression must be an array.`);\n    const nums = computeValue(obj, expr, null, options);\n    if (nums.some(isNil))\n        return null;\n    assert(nums.every(isNumber), `${op}: expression must evalue to array of numbers.`);\n    return compute(nums);\n};\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitAnd/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise and operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitAnd = bitwise(\"$bitAnd\", nums => nums.reduce((a, b) => a & b, -1));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitOr/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise or operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitOr = bitwise(\"$bitOr\", nums => nums.reduce((a, b) => a | b, 0));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitNot/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise xor (exclusive or) operation on an array of int and long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitXor = bitwise(\"$bitXor\", nums => nums.reduce((a, b) => a ^ b, 0));\n","// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject } from \"../../../util\";\nimport { adjustDate, DATE_FORMAT, DATE_SYM_TABLE, MINUTES_PER_HOUR, parseTimezone, regexQuote, regexStrip } from \"./_internal\";\nconst buildMap = (letters, sign) => {\n    const h = {};\n    letters.split(\"\").forEach((v, i) => (h[v] = sign * (i + 1)));\n    return h;\n};\nconst TZ_LETTER_OFFSETS = Object.assign(Object.assign(Object.assign({}, buildMap(\"ABCDEFGHIKLM\", 1)), buildMap(\"NOPQRSTUVWXY\", -1)), { Z: 0 });\n/**\n * Converts a date/time string to a date object.\n * @param obj\n * @param expr\n */\nexport const $dateFromString = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    args.format = args.format || DATE_FORMAT;\n    args.onNull = args.onNull || null;\n    let dateString = args.dateString;\n    if (isNil(dateString))\n        return args.onNull;\n    // collect all separators of the format string\n    const separators = args.format.split(/%[YGmdHMSLuVzZ]/);\n    separators.reverse();\n    const matches = args.format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%V|%z|%Z)/g);\n    const dateParts = {};\n    // holds the valid regex of parts that matches input date string\n    let expectedPattern = \"\";\n    for (let i = 0, len = matches.length; i < len; i++) {\n        const formatSpecifier = matches[i];\n        const props = DATE_SYM_TABLE[formatSpecifier];\n        if (isObject(props)) {\n            // get pattern and alias from table\n            const m = props.re.exec(dateString);\n            // get the next separtor\n            const delimiter = separators.pop() || \"\";\n            if (m !== null) {\n                // store and cut out matched part\n                dateParts[props.name] = /^\\d+$/.exec(m[0]) ? parseInt(m[0]) : m[0];\n                dateString =\n                    dateString.substr(0, m.index) +\n                        dateString.substr(m.index + m[0].length);\n                // construct expected pattern\n                expectedPattern +=\n                    regexQuote(delimiter) + regexStrip(props.re.toString());\n            }\n            else {\n                dateParts[props.name] = null;\n            }\n        }\n    }\n    // 1. validate all required date parts exists\n    // 2. validate original dateString against expected pattern.\n    if (isNil(dateParts.year) ||\n        isNil(dateParts.month) ||\n        isNil(dateParts.day) ||\n        !new RegExp(\"^\" + expectedPattern + \"[A-Z]?$\").exec(args.dateString)) {\n        return args.onError;\n    }\n    const m = args.dateString.match(/([A-Z])$/);\n    assert(\n    // only one of in-date timeone or timezone argument but not both.\n    !(m && args.timezone), `$dateFromString: you cannot pass in a date/time string with time zone information ('${m && m[0]}') together with a timezone argument`);\n    const minuteOffset = m\n        ? TZ_LETTER_OFFSETS[m[0]] * MINUTES_PER_HOUR\n        : parseTimezone(args.timezone);\n    // create the date. month is 0-based in Date\n    const d = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0, 0));\n    if (!isNil(dateParts.hour))\n        d.setUTCHours(dateParts.hour);\n    if (!isNil(dateParts.minute))\n        d.setUTCMinutes(dateParts.minute);\n    if (!isNil(dateParts.second))\n        d.setUTCSeconds(dateParts.second);\n    if (!isNil(dateParts.millisecond))\n        d.setUTCMilliseconds(dateParts.millisecond);\n    // adjust to the correct represention for UTC\n    adjustDate(d, -minuteOffset);\n    return d;\n};\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { computeValue } from \"../../../core\";\nconst FIXED_POINTS = {\n    undefined: null,\n    null: null,\n    NaN: NaN,\n    Infinity: new Error(),\n    \"-Infinity\": new Error()\n};\n/**\n * Returns an operator for a given trignometric function\n *\n * @param f The trignometric function\n */\nexport function createTrignometryOperator(f, fixedPoints = FIXED_POINTS) {\n    const fp = Object.assign({}, FIXED_POINTS, fixedPoints);\n    const keySet = new Set(Object.keys(fp));\n    return (obj, expr, options) => {\n        const n = computeValue(obj, expr, null, options);\n        if (keySet.has(`${n}`)) {\n            const res = fp[`${n}`];\n            if (res instanceof Error) {\n                throw new Error(`cannot apply $${f.name} to -inf, value must in (-inf,inf)`);\n            }\n            return res;\n        }\n        return f(n);\n    };\n}\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse cosine (arc cosine) of a value in radians. */\nexport const $acos = createTrignometryOperator(Math.acos, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic cosine (hyperbolic arc cosine) of a value in radians. */\nexport const $acosh = createTrignometryOperator(Math.acosh, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse sin (arc sine) of a value in radians. */\nexport const $asin = createTrignometryOperator(Math.asin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic sine (hyperbolic arc sine) of a value in radians. */\nexport const $asinh = createTrignometryOperator(Math.asinh, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse tangent (arc tangent) of a value in radians. */\nexport const $atan = createTrignometryOperator(Math.atan);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic tangent (hyperbolic arc tangent) of a value in radians. */\nexport const $atanh = createTrignometryOperator(Math.atanh, {\n    1: Infinity,\n    \"-1\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the cosine of a value that is measured in radians. */\nexport const $cos = createTrignometryOperator(Math.cos);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic cosine of a value that is measured in radians. */\nexport const $cosh = createTrignometryOperator(Math.cosh, {\n    \"-Infinity\": Infinity,\n    Infinity: Infinity,\n    // [Math.PI]: -1,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst RADIANS_FACTOR = Math.PI / 180;\n/** Converts a value from degrees to radians. */\nexport const $degreesToRadians = createTrignometryOperator((n) => n * RADIANS_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst DEGREES_FACTOR = 180 / Math.PI;\n/** Converts a value from radians to degrees. */\nexport const $radiansToDegrees = createTrignometryOperator((n) => n * DEGREES_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the sine of a value that is measured in radians. */\nexport const $sin = createTrignometryOperator(Math.sin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic sine of a value that is measured in radians. */\nexport const $sinh = createTrignometryOperator(Math.sinh, {\n    \"-Infinity\": -Infinity,\n    Infinity: Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the tangent of a value that is measured in radians. */\nexport const $tan = createTrignometryOperator(Math.tan);\n","import { ComputeOptions, computeValue, getOperator, OperatorType } from \"../../core\";\nimport { assert, ensureArray, filterMissing, has, inArray, into, isEmpty, isNil, isNumber, isObject, isOperator, isString, merge, notInArray, removeValue, resolveGraph, setValue } from \"../../util\";\n/**\n * Reshapes a document stream.\n * $project can rename, add, or remove fields as well as create computed values and sub-documents.\n *\n * @param collection\n * @param expr\n * @param opt\n * @returns {Array}\n */\nexport const $project = (collection, expr, options) => {\n    if (isEmpty(expr))\n        return collection;\n    // result collection\n    let expressionKeys = Object.keys(expr);\n    let idOnlyExcluded = false;\n    // validate inclusion and exclusion\n    validateExpression(expr, options);\n    const ID_KEY = options.idKey;\n    if (inArray(expressionKeys, ID_KEY)) {\n        const id = expr[ID_KEY];\n        if (id === 0 || id === false) {\n            expressionKeys = expressionKeys.filter(notInArray.bind(null, [ID_KEY]));\n            idOnlyExcluded = expressionKeys.length == 0;\n        }\n    }\n    else {\n        // if not specified the add the ID field\n        expressionKeys.push(ID_KEY);\n    }\n    const copts = ComputeOptions.init(options);\n    return collection.map(((obj) => processObject(obj, expr, copts.update(obj), expressionKeys, idOnlyExcluded)));\n};\n/**\n * Process the expression value for $project operators\n *\n * @param {Object} obj The object to use as options\n * @param {Object} expr The experssion object of $project operator\n * @param {Array} expressionKeys The key in the 'expr' object\n * @param {Boolean} idOnlyExcluded Boolean value indicating whether only the ID key is excluded\n */\nfunction processObject(obj, expr, options, expressionKeys, idOnlyExcluded) {\n    let newObj = {};\n    let foundSlice = false;\n    let foundExclusion = false;\n    const dropKeys = [];\n    if (idOnlyExcluded) {\n        dropKeys.push(options.idKey);\n    }\n    for (const key of expressionKeys) {\n        // final computed value of the key\n        let value = undefined;\n        // expression to associate with key\n        const subExpr = expr[key];\n        if (key !== options.idKey && inArray([0, false], subExpr)) {\n            foundExclusion = true;\n        }\n        if (key === options.idKey && isEmpty(subExpr)) {\n            // tiny optimization here to skip over id\n            value = obj[key];\n        }\n        else if (isString(subExpr)) {\n            value = computeValue(obj, subExpr, key, options);\n        }\n        else if (inArray([1, true], subExpr)) {\n            // For direct projections, we use the resolved object value\n        }\n        else if (subExpr instanceof Array) {\n            value = subExpr.map(v => {\n                const r = computeValue(obj, v, null, options);\n                if (isNil(r))\n                    return null;\n                return r;\n            });\n        }\n        else if (isObject(subExpr)) {\n            const subExprObj = subExpr;\n            const subExprKeys = Object.keys(subExpr);\n            const operator = subExprKeys.length == 1 ? subExprKeys[0] : \"\";\n            // first try a projection operator\n            const call = getOperator(OperatorType.PROJECTION, operator, options);\n            if (call) {\n                // apply the projection operator on the operator expression for the key\n                if (operator === \"$slice\") {\n                    // $slice is handled differently for aggregation and projection operations\n                    if (ensureArray(subExprObj[operator]).every(isNumber)) {\n                        // $slice for projection operation\n                        value = call(obj, subExprObj[operator], key, options);\n                        foundSlice = true;\n                    }\n                    else {\n                        // $slice for aggregation operation\n                        value = computeValue(obj, subExprObj, key, options);\n                    }\n                }\n                else {\n                    value = call(obj, subExprObj[operator], key, options);\n                }\n            }\n            else if (isOperator(operator)) {\n                // compute if operator key\n                value = computeValue(obj, subExprObj[operator], operator, options);\n            }\n            else if (has(obj, key)) {\n                // compute the value for the sub expression for the key\n                validateExpression(subExprObj, options);\n                let target = obj[key];\n                if (target instanceof Array) {\n                    value = target.map((o) => processObject(o, subExprObj, options, subExprKeys, false));\n                }\n                else {\n                    target = isObject(target) ? target : obj;\n                    value = processObject(target, subExprObj, options, subExprKeys, false);\n                }\n            }\n            else {\n                // compute the value for the sub expression for the key\n                value = computeValue(obj, subExpr, null, options);\n            }\n        }\n        else {\n            dropKeys.push(key);\n            continue;\n        }\n        // get value with object graph\n        const objPathGraph = resolveGraph(obj, key, {\n            preserveMissing: true\n        });\n        // add the value at the path\n        if (objPathGraph !== undefined) {\n            merge(newObj, objPathGraph, {\n                flatten: true\n            });\n        }\n        // if computed add/or remove accordingly\n        if (notInArray([0, 1, false, true], subExpr)) {\n            if (value === undefined) {\n                removeValue(newObj, key, { descendArray: true });\n            }\n            else {\n                setValue(newObj, key, value);\n            }\n        }\n    }\n    // filter out all missing values preserved to support correct merging\n    filterMissing(newObj);\n    // For the following cases we include all keys on the object that were not explicitly excluded.\n    //\n    // 1. projection included $slice operator\n    // 2. some fields were explicitly excluded\n    // 3. only the id field was excluded\n    if (foundSlice || foundExclusion || idOnlyExcluded) {\n        newObj = into({}, obj, newObj);\n        if (dropKeys.length > 0) {\n            for (const k of dropKeys) {\n                removeValue(newObj, k, { descendArray: true });\n            }\n        }\n    }\n    return newObj;\n}\n/**\n * Validate inclusion and exclusion values in expression\n *\n * @param {Object} expr The expression given for the projection\n */\nfunction validateExpression(expr, options) {\n    const check = [false, false];\n    for (const [k, v] of Object.entries(expr)) {\n        if (k === (options === null || options === void 0 ? void 0 : options.idKey))\n            return;\n        if (v === 0 || v === false) {\n            check[0] = true;\n        }\n        else if (v === 1 || v === true) {\n            check[1] = true;\n        }\n        assert(!(check[0] && check[1]), \"Projection cannot have a mix of inclusion and exclusion.\");\n    }\n}\n","/**\n * Skips over a specified number of documents from the pipeline and returns the rest.\n *\n * @param collection An iterator\n * @param expr\n * @param  {Options} options\n * @returns {*}\n */\nexport const $skip = (collection, expr, options) => {\n    return collection.drop(expr);\n};\n","// Projection Operators. https://docs.mongodb.com/manual/reference/operator/projection/\nexport * from \"./elemMatch\";\nexport * from \"./slice\";\n","// $elemMatch operator. https://docs.mongodb.com/manual/reference/operator/projection/elemMatch/#proj._S_elemMatch\nimport { Query } from \"../../query\";\nimport { assert, resolve } from \"../../util\";\n/**\n * Projects only the first element from an array that matches the specified $elemMatch condition.\n *\n * @param obj\n * @param field\n * @param expr\n * @returns {*}\n */\nexport const $elemMatch = (obj, expr, field, options) => {\n    const arr = resolve(obj, field);\n    const query = new Query(expr, options);\n    assert(arr instanceof Array, \"$elemMatch: argument must resolve to array\");\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (query.test(arr[i])) {\n            // MongoDB projects only the first nested document when using this operator.\n            // For some use cases this can lead to complicated queries to selectively project nested documents.\n            // When strict mode is disabled, we return all matching nested documents.\n            if (options.useStrictMode)\n                return [arr[i]];\n            result.push(arr[i]);\n        }\n    }\n    return result.length > 0 ? result : undefined;\n};\n","// $slice operator. https://docs.mongodb.com/manual/reference/operator/projection/slice/#proj._S_slice\nimport { isArray, resolve } from \"../../util\";\nimport { $slice as __slice } from \"../expression/array/slice\";\n/**\n * Limits the number of elements projected from an array. Supports skip and limit slices.\n *\n * @param obj\n * @param field\n * @param expr\n */\nexport const $slice = (obj, expr, field, options) => {\n    const xs = resolve(obj, field);\n    const exprAsArray = expr;\n    if (!isArray(xs))\n        return xs;\n    return __slice(obj, expr instanceof Array ? [xs, ...exprAsArray] : [xs, expr], options);\n};\n","export * from \"./array\";\nexport * from \"./bitwise\";\nexport * from \"./comparison\";\nexport * from \"./element\";\nexport * from \"./evaluation\";\nexport * from \"./logical\";\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $all as __all, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches arrays that contain all elements specified in the query.\n */\nexport const $all = createQueryOperator(__all);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $elemMatch as __elemMatch, createQueryOperator, } from \"../../_predicates\";\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch conditions.\n */\nexport const $elemMatch = createQueryOperator(__elemMatch);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $size as __size, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if the array field is a specified size.\n */\nexport const $size = createQueryOperator(__size);\n","import { createQueryOperator } from \"../../_predicates\";\nexport const createBitwiseOperator = (predicate) => {\n    return createQueryOperator((value, mask, options) => {\n        let b = 0;\n        if (mask instanceof Array) {\n            for (const n of mask)\n                b = b | (1 << n);\n        }\n        else {\n            b = mask;\n        }\n        return predicate(value & b, b);\n    });\n};\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which a set of bit positions all have a value of 0.\n */\nexport const $bitsAllClear = createBitwiseOperator((result, _) => result == 0);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which a set of bit positions all have a value of 1.\n */\nexport const $bitsAllSet = createBitwiseOperator((result, mask) => result == mask);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which any bit from a set of bit positions has a value of 0.\n */\nexport const $bitsAnyClear = createBitwiseOperator((result, mask) => result < mask);\n","// Query Bitwise Operators: https://docs.mongodb.com/manual/reference/operator/query-bitwise/\nimport { createBitwiseOperator } from \"./_internal\";\n/**\n * Matches numeric or binary values in which any bit from a set of bit positions has a value of 1.\n */\nexport const $bitsAnySet = createBitwiseOperator((result, _) => result > 0);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $eq as __eq, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createQueryOperator(__eq);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gt as __gt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createQueryOperator(__gt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gte as __gte, createQueryOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createQueryOperator(__gte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $in as __in, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches any of the values that exist in an array specified in the query.\n */\nexport const $in = createQueryOperator(__in);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lt as __lt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createQueryOperator(__lt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lte as __lte, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createQueryOperator(__lte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $ne as __ne, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createQueryOperator(__ne);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $nin as __nin, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that do not exist in an array specified to the query.\n */\nexport const $nin = createQueryOperator(__nin);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $exists as __exists, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches documents that have the specified field.\n */\nexport const $exists = createQueryOperator(__exists);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $type as __type, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if a field is of the specified type.\n */\nexport const $type = createQueryOperator(__type);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { computeValue } from \"../../../core\";\n/**\n * Allows the use of aggregation expressions within the query language.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport function $expr(_, rhs, options) {\n    return obj => computeValue(obj, rhs, null, options);\n}\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\n/**\n * Validate documents against the given JSON Schema.\n *\n * @param selector\n * @param schema\n * @returns {Function}\n */\nexport function $jsonSchema(_, schema, options) {\n    if (!(options === null || options === void 0 ? void 0 : options.jsonSchemaValidator)) {\n        throw new Error(\"Missing option 'jsonSchemaValidator'. Configure to use '$jsonSchema' operator.\");\n    }\n    const validate = options === null || options === void 0 ? void 0 : options.jsonSchemaValidator(schema);\n    return (obj) => validate(obj);\n}\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $mod as __mod, createQueryOperator } from \"../../_predicates\";\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n */\nexport const $mod = createQueryOperator(__mod);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $regex as __regex, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents where values match a specified regular expression.\n */\nexport const $regex = createQueryOperator(__regex);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { assert, isFunction, truthy } from \"../../../util\";\n/* eslint-disable */\n/**\n * Matches documents that satisfy a JavaScript expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport function $where(_, rhs, options) {\n    assert(options.scriptEnabled, \"$where operator requires 'scriptEnabled' option to be true\");\n    const f = rhs;\n    assert(isFunction(f), \"$where only accepts a Function object\");\n    return (obj) => truthy(f.call(obj), options === null || options === void 0 ? void 0 : options.useStrictMode);\n}\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $and = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression: $and expects value to be an Array.\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.every(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $or = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $or expects value to be an Array\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.some(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { assert, isArray } from \"../../../util\";\nimport { $or } from \"./or\";\n/**\n * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $nor = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $nor expects value to be an array.\");\n    const f = $or(\"$or\", rhs, options);\n    return (obj) => !f(obj);\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\n/**\n * Inverts the effect of a query expression and returns documents that do not match the query expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $not = (selector, rhs, options) => {\n    const criteria = {};\n    criteria[selector] = normalize(rhs);\n    const query = new Query(criteria, options);\n    return (obj) => !query.test(obj);\n};\n","/**\n * Loads all Query and Projection operators\n */\nimport { Context, OperatorType, useOperators } from \"../core\";\nimport * as booleanOperators from \"../operators/expression/boolean\";\nimport * as comparisonOperators from \"../operators/expression/comparison\";\nimport { $limit, $project, $skip, $sort } from \"../operators/pipeline\";\nimport * as projectionOperators from \"../operators/projection\";\nimport * as queryOperators from \"../operators/query\";\nuseOperators(OperatorType.EXPRESSION, Object.assign(Object.assign({}, booleanOperators), comparisonOperators));\nuseOperators(OperatorType.PIPELINE, {\n    $project,\n    $skip,\n    $limit,\n    $sort\n});\nuseOperators(OperatorType.PROJECTION, projectionOperators);\nuseOperators(OperatorType.QUERY, queryOperators);\n/** The basic context for queries. */\nexport const BASIC_CONTEXT = Context.init()\n    .addExpressionOps(Object.assign(Object.assign({}, booleanOperators), comparisonOperators))\n    .addPipelineOps({ $project, $skip, $limit, $sort })\n    .addProjectionOps(projectionOperators)\n    .addQueryOps(queryOperators);\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n","import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n","import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","export function PRINT_ERROR(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js */\n  if (console && console.error) {\n    console.error(`Error: ${msg}`);\n  }\n}\n\nexport function PRINT_WARNING(msg: string) {\n  /* istanbul ignore else - can't override global.console in node.js*/\n  if (console && console.warn) {\n    // TODO: modify docs accordingly\n    console.warn(`Warning: ${msg}`);\n  }\n}\n","export function timer<T>(func: () => T): { time: number; value: T } {\n  const start = new Date().getTime();\n  const val = func();\n  const end = new Date().getTime();\n  const total = end - start;\n  return { time: total, value: val };\n}\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast: any) {\n  function FakeConstructor() {}\n\n  // If our object is used as a constructor, it would receive\n  FakeConstructor.prototype = toBecomeFast;\n  const fakeInstance = new (FakeConstructor as any)();\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar;\n  }\n\n  // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n  fakeAccess();\n  fakeAccess();\n\n  // Always true condition to suppress the Firefox warning of unreachable\n  // code after a return statement.\n  if (1) return toBecomeFast;\n\n  // Eval prevents optimization of this method (even though this is dead code)\n  // - https://esbuild.github.io/content-types/#direct-eval\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n  (0, eval)(toBecomeFast);\n}\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\nimport type {\n  IGASTVisitor,\n  IProduction,\n  IProductionWithOccurrence,\n  ISerializedGast,\n  TokenType,\n} from \"@chevrotain/types\";\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(\n  obj: TokenType,\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nexport abstract class AbstractProduction<T extends IProduction = IProduction>\n  implements IProduction\n{\n  public get definition(): T[] {\n    return this._definition;\n  }\n  public set definition(value: T[]) {\n    this._definition = value;\n  }\n\n  constructor(protected _definition: T[]) {}\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n    forEach(this.definition, (prod) => {\n      prod.accept(visitor);\n    });\n  }\n}\n\nexport class NonTerminal\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public nonTerminalName!: string;\n  public label?: string;\n  public referencedRule!: Rule;\n  public idx: number = 1;\n\n  constructor(options: {\n    nonTerminalName: string;\n    label?: string;\n    referencedRule?: Rule;\n    idx?: number;\n  }) {\n    super([]);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n\n  set definition(definition: IProduction[]) {\n    // immutable\n  }\n\n  get definition(): IProduction[] {\n    if (this.referencedRule !== undefined) {\n      return this.referencedRule.definition;\n    }\n    return [];\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n    // don't visit children of a reference, we will get cyclic infinite loops if we do so\n  }\n}\n\nexport class Rule extends AbstractProduction {\n  public name!: string;\n  public orgText: string = \"\";\n\n  constructor(options: {\n    name: string;\n    definition: IProduction[];\n    orgText?: string;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Alternative extends AbstractProduction {\n  public ignoreAmbiguities: boolean = false;\n\n  constructor(options: {\n    definition: IProduction[];\n    ignoreAmbiguities?: boolean;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Option\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionMandatory\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionMandatoryWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    separator: TokenType;\n    idx?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Repetition\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    idx?: number;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class RepetitionWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence\n{\n  public separator!: TokenType;\n  public idx: number = 1;\n  public maxLookahead?: number;\n\n  constructor(options: {\n    definition: IProduction[];\n    separator: TokenType;\n    idx?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Alternation\n  extends AbstractProduction<Alternative>\n  implements IProductionWithOccurrence\n{\n  public idx: number = 1;\n  public ignoreAmbiguities: boolean = false;\n  public hasPredicates: boolean = false;\n  public maxLookahead?: number;\n\n  public get definition(): Alternative[] {\n    return this._definition;\n  }\n  public set definition(value: Alternative[]) {\n    this._definition = value;\n  }\n\n  constructor(options: {\n    definition: Alternative[];\n    idx?: number;\n    ignoreAmbiguities?: boolean;\n    hasPredicates?: boolean;\n    maxLookahead?: number;\n  }) {\n    super(options.definition);\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n}\n\nexport class Terminal implements IProductionWithOccurrence {\n  public terminalType!: TokenType;\n  public label?: string;\n  public idx: number = 1;\n\n  constructor(options: {\n    terminalType: TokenType;\n    label?: string;\n    idx?: number;\n  }) {\n    assign(\n      this,\n      pickBy(options, (v) => v !== undefined),\n    );\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this);\n  }\n}\n\nexport interface ISerializedBasic extends ISerializedGast {\n  type:\n    | \"Alternative\"\n    | \"Option\"\n    | \"RepetitionMandatory\"\n    | \"Repetition\"\n    | \"Alternation\";\n  idx?: number;\n}\n\nexport interface ISerializedGastRule extends ISerializedGast {\n  type: \"Rule\";\n  name: string;\n  orgText: string;\n}\n\nexport interface ISerializedNonTerminal extends ISerializedGast {\n  type: \"NonTerminal\";\n  name: string;\n  label?: string;\n  idx: number;\n}\n\nexport interface ISerializedTerminal extends ISerializedGast {\n  type: \"Terminal\";\n  name: string;\n  terminalLabel?: string;\n  label?: string;\n  pattern?: string;\n  idx: number;\n}\n\nexport interface ISerializedTerminalWithSeparator extends ISerializedGast {\n  type: \"RepetitionMandatoryWithSeparator\" | \"RepetitionWithSeparator\";\n  idx: number;\n  separator: ISerializedTerminal;\n}\n\nexport type ISerializedGastAny =\n  | ISerializedBasic\n  | ISerializedGastRule\n  | ISerializedNonTerminal\n  | ISerializedTerminal\n  | ISerializedTerminalWithSeparator;\n\nexport function serializeGrammar(topRules: Rule[]): ISerializedGast[] {\n  return map(topRules, serializeProduction);\n}\n\nexport function serializeProduction(node: IProduction): ISerializedGast {\n  function convertDefinition(definition: IProduction[]): ISerializedGast[] {\n    return map(definition, serializeProduction);\n  }\n  /* istanbul ignore else */\n  if (node instanceof NonTerminal) {\n    const serializedNonTerminal: ISerializedNonTerminal = {\n      type: \"NonTerminal\",\n      name: node.nonTerminalName,\n      idx: node.idx,\n    };\n\n    if (isString(node.label)) {\n      serializedNonTerminal.label = node.label;\n    }\n\n    return serializedNonTerminal;\n  } else if (node instanceof Alternative) {\n    return <ISerializedBasic>{\n      type: \"Alternative\",\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Option) {\n    return <ISerializedBasic>{\n      type: \"Option\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionMandatory) {\n    return <ISerializedBasic>{\n      type: \"RepetitionMandatory\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionMandatoryWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionMandatoryWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof RepetitionWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Repetition) {\n    return <ISerializedBasic>{\n      type: \"Repetition\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Alternation) {\n    return <ISerializedBasic>{\n      type: \"Alternation\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition),\n    };\n  } else if (node instanceof Terminal) {\n    const serializedTerminal = <ISerializedTerminal>{\n      type: \"Terminal\",\n      name: node.terminalType.name,\n      label: tokenLabel(node.terminalType),\n      idx: node.idx,\n    };\n\n    if (isString(node.label)) {\n      serializedTerminal.terminalLabel = node.label;\n    }\n\n    const pattern = node.terminalType.PATTERN;\n    if (node.terminalType.PATTERN) {\n      serializedTerminal.pattern = isRegExp(pattern)\n        ? (<any>pattern).source\n        : pattern;\n    }\n\n    return serializedTerminal;\n  } else if (node instanceof Rule) {\n    return <ISerializedGastRule>{\n      type: \"Rule\",\n      name: node.name,\n      orgText: node.orgText,\n      definition: convertDefinition(node.definition),\n    };\n    /* c8 ignore next 3 */\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n","import {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"./model.js\";\nimport type { IProduction } from \"@chevrotain/types\";\n\nexport abstract class GAstVisitor {\n  public visit(node: IProduction): any {\n    const nodeAny: any = node;\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n      case Alternative:\n        return this.visitAlternative(nodeAny);\n      case Option:\n        return this.visitOption(nodeAny);\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n      case Repetition:\n        return this.visitRepetition(nodeAny);\n      case Alternation:\n        return this.visitAlternation(nodeAny);\n      case Terminal:\n        return this.visitTerminal(nodeAny);\n      case Rule:\n        return this.visitRule(nodeAny);\n      /* c8 ignore next 2 */\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  }\n\n  /* c8 ignore next */\n  public visitNonTerminal(node: NonTerminal): any {}\n\n  /* c8 ignore next */\n  public visitAlternative(node: Alternative): any {}\n\n  /* c8 ignore next */\n  public visitOption(node: Option): any {}\n\n  /* c8 ignore next */\n  public visitRepetition(node: Repetition): any {}\n\n  /* c8 ignore next */\n  public visitRepetitionMandatory(node: RepetitionMandatory): any {}\n\n  /* c8 ignore next 3 */\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator,\n  ): any {}\n\n  /* c8 ignore next */\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): any {}\n\n  /* c8 ignore next */\n  public visitAlternation(node: Alternation): any {}\n\n  /* c8 ignore next */\n  public visitTerminal(node: Terminal): any {}\n\n  /* c8 ignore next */\n  public visitRule(node: Rule): any {}\n}\n","import { every, includes, some } from \"lodash-es\";\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"./model.js\";\nimport type { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\";\n\nexport function isSequenceProd(\n  prod: IProduction,\n): prod is { definition: IProduction[] } & IProduction {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  );\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = [],\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator;\n  if (isDirectlyOptional) {\n    return true;\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited);\n      },\n    );\n  } else {\n    return false;\n  }\n}\n\nexport function isBranchingProd(\n  prod: IProduction,\n): prod is { definition: IProduction[] } & IProduction {\n  return prod instanceof Alternation;\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof Option) {\n    return \"OPTION\";\n  } else if (prod instanceof Alternation) {\n    return \"OR\";\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\";\n    /* c8 ignore next 3 */\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n","import { drop, forEach } from \"lodash-es\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { IProduction } from \"@chevrotain/types\";\n\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport abstract class RestWalker {\n  walk(prod: { definition: IProduction[] }, prevRest: any[] = []): void {\n    forEach(prod.definition, (subProd: IProduction, index) => {\n      const currRest = drop(prod.definition, index + 1);\n      /* istanbul ignore else */\n      if (subProd instanceof NonTerminal) {\n        this.walkProdRef(subProd, currRest, prevRest);\n      } else if (subProd instanceof Terminal) {\n        this.walkTerminal(subProd, currRest, prevRest);\n      } else if (subProd instanceof Alternative) {\n        this.walkFlat(subProd, currRest, prevRest);\n      } else if (subProd instanceof Option) {\n        this.walkOption(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionMandatory) {\n        this.walkAtLeastOne(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n        this.walkAtLeastOneSep(subProd, currRest, prevRest);\n      } else if (subProd instanceof RepetitionWithSeparator) {\n        this.walkManySep(subProd, currRest, prevRest);\n      } else if (subProd instanceof Repetition) {\n        this.walkMany(subProd, currRest, prevRest);\n      } else if (subProd instanceof Alternation) {\n        this.walkOr(subProd, currRest, prevRest);\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    });\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {}\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {}\n\n  walkFlat(\n    flatProd: Alternative,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABCDEF => after the D the rest is EF\n    const fullOrRest = currRest.concat(prevRest);\n    this.walk(flatProd, <any>fullOrRest);\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)?F => after the (DE)? the rest is F\n    const fullOrRest = currRest.concat(prevRest);\n    this.walk(optionProd, <any>fullOrRest);\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n    const fullAtLeastOneRest: IProduction[] = [\n      new Option({ definition: atLeastOneProd.definition }),\n    ].concat(<any>currRest, <any>prevRest);\n    this.walk(atLeastOneProd, fullAtLeastOneRest);\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n    const fullAtLeastOneSepRest = restForRepetitionWithSeparator(\n      atLeastOneSepProd,\n      currRest,\n      prevRest,\n    );\n    this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n    const fullManyRest: IProduction[] = [\n      new Option({ definition: manyProd.definition }),\n    ].concat(<any>currRest, <any>prevRest);\n    this.walk(manyProd, fullManyRest);\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n    const fullManySepRest = restForRepetitionWithSeparator(\n      manySepProd,\n      currRest,\n      prevRest,\n    );\n    this.walk(manySepProd, fullManySepRest);\n  }\n\n  walkOr(\n    orProd: Alternation,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n    const fullOrRest = currRest.concat(prevRest);\n    // walk all different alternatives\n    forEach(orProd.definition, (alt) => {\n      // wrapping each alternative in a single definition wrapper\n      // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n      // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n      const prodWrapper = new Alternative({ definition: [alt] });\n      this.walk(prodWrapper, <any>fullOrRest);\n    });\n  }\n}\n\nfunction restForRepetitionWithSeparator(\n  repSepProd: RepetitionWithSeparator,\n  currRest: IProduction[],\n  prevRest: IProduction[],\n) {\n  const repSepRest = [\n    new Option({\n      definition: [\n        new Terminal({ terminalType: repSepProd.separator }) as IProduction,\n      ].concat(repSepProd.definition),\n    }) as IProduction,\n  ];\n  const fullRepSepRest: IProduction[] = repSepRest.concat(currRest, prevRest);\n  return fullRepSepRest;\n}\n","import { flatten, map, uniq } from \"lodash-es\";\nimport {\n  isBranchingProd,\n  isOptionalProd,\n  isSequenceProd,\n  NonTerminal,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { IProduction, TokenType } from \"@chevrotain/types\";\n\nexport function first(prod: IProduction): TokenType[] {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    // this could in theory cause infinite loops if\n    // (1) prod A refs prod B.\n    // (2) prod B refs prod A\n    // (3) AB can match the empty set\n    // in other words a cycle where everything is optional so the first will keep\n    // looking ahead for the next optional part and will never exit\n    // currently there is no safeguard for this unique edge case because\n    // (1) not sure a grammar in which this can happen is useful for anything (productive)\n    return first((<NonTerminal>prod).referencedRule);\n  } else if (prod instanceof Terminal) {\n    return firstForTerminal(<Terminal>prod);\n  } else if (isSequenceProd(prod)) {\n    return firstForSequence(prod);\n  } else if (isBranchingProd(prod)) {\n    return firstForBranching(prod);\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function firstForSequence(prod: {\n  definition: IProduction[];\n}): TokenType[] {\n  let firstSet: TokenType[] = [];\n  const seq = prod.definition;\n  let nextSubProdIdx = 0;\n  let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n  let currSubProd;\n  // so we enter the loop at least once (if the definition is not empty\n  let isLastInnerProdOptional = true;\n  // scan a sequence until it's end or until we have found a NONE optional production in it\n  while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n    currSubProd = seq[nextSubProdIdx];\n    isLastInnerProdOptional = isOptionalProd(currSubProd);\n    firstSet = firstSet.concat(first(currSubProd));\n    nextSubProdIdx = nextSubProdIdx + 1;\n    hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n  }\n\n  return uniq(firstSet);\n}\n\nexport function firstForBranching(prod: {\n  definition: IProduction[];\n}): TokenType[] {\n  const allAlternativesFirsts: TokenType[][] = map(\n    prod.definition,\n    (innerProd) => {\n      return first(innerProd);\n    },\n  );\n  return uniq(flatten<TokenType>(allAlternativesFirsts));\n}\n\nexport function firstForTerminal(terminal: Terminal): TokenType[] {\n  return [terminal.terminalType];\n}\n","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative, NonTerminal, Rule, Terminal } from \"@chevrotain/gast\";\nimport { IProduction, TokenType } from \"@chevrotain/types\";\n\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n  public follows: Record<string, TokenType[]> = {};\n\n  constructor(private topProd: Rule) {\n    super();\n  }\n\n  startWalking(): Record<string, TokenType[]> {\n    this.walk(this.topProd);\n    return this.follows;\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // do nothing! just like in the public sector after 13:00\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    const followName =\n      buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n      this.topProd.name;\n    const fullRest: IProduction[] = currRest.concat(prevRest);\n    const restProd = new Alternative({ definition: fullRest });\n    const t_in_topProd_follows = first(restProd);\n    this.follows[followName] = t_in_topProd_follows;\n  }\n}\n\nexport function computeAllProdsFollows(\n  topProductions: Rule[],\n): Record<string, TokenType[]> {\n  const reSyncFollows = {};\n\n  forEach(topProductions, (topProd) => {\n    const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n    assign(reSyncFollows, currRefsFollow);\n  });\n  return reSyncFollows;\n}\n\nexport function buildBetweenProdsFollowPrefix(\n  inner: Rule,\n  occurenceInParent: number,\n): string {\n  return inner.name + occurenceInParent + IN;\n}\n\nexport function buildInProdFollowPrefix(terminal: Terminal): string {\n  const terminalName = terminal.terminalType.name;\n  return terminalName + terminal.idx + IN;\n}\n","import type { Character, IRegExpAST, RegExpFlags } from \"../types\";\n\nexport function cc(char: string): number {\n  return char.charCodeAt(0);\n}\n\nexport function insertToSet<T>(item: T | T[], set: T[]) {\n  if (Array.isArray(item)) {\n    item.forEach(function (subItem) {\n      set.push(subItem);\n    });\n  } else {\n    set.push(item);\n  }\n}\n\nexport function addFlag(\n  flagObj: RegExpFlags,\n  flagKey: keyof Omit<RegExpFlags, keyof IRegExpAST>,\n) {\n  if (flagObj[flagKey] === true) {\n    throw \"duplicate flag \" + flagKey;\n  }\n\n  const x: boolean = flagObj[flagKey];\n  flagObj[flagKey] = true;\n}\n\nexport function ASSERT_EXISTS<T = Object>(obj: any): obj is T {\n  // istanbul ignore next\n  if (obj === undefined) {\n    throw Error(\"Internal Error - Should never get here!\");\n  }\n  return true;\n}\n\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE(): any {\n  throw Error(\"Internal Error - Should never get here!\");\n}\n\nexport function isCharacter(obj: { type: string }): obj is Character {\n  return obj[\"type\"] === \"Character\";\n}\n","import { cc } from \"./utils.js\";\n\nexport const digitsCharCodes: number[] = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n  digitsCharCodes.push(i);\n}\n\nexport const wordCharCodes: number[] = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n  wordCharCodes.push(i);\n}\n\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n  wordCharCodes.push(i);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes: number[] = [\n  cc(\" \"),\n  cc(\"\\f\"),\n  cc(\"\\n\"),\n  cc(\"\\r\"),\n  cc(\"\\t\"),\n  cc(\"\\v\"),\n  cc(\"\\t\"),\n  cc(\"\\u00a0\"),\n  cc(\"\\u1680\"),\n  cc(\"\\u2000\"),\n  cc(\"\\u2001\"),\n  cc(\"\\u2002\"),\n  cc(\"\\u2003\"),\n  cc(\"\\u2004\"),\n  cc(\"\\u2005\"),\n  cc(\"\\u2006\"),\n  cc(\"\\u2007\"),\n  cc(\"\\u2008\"),\n  cc(\"\\u2009\"),\n  cc(\"\\u200a\"),\n  cc(\"\\u2028\"),\n  cc(\"\\u2029\"),\n  cc(\"\\u202f\"),\n  cc(\"\\u205f\"),\n  cc(\"\\u3000\"),\n  cc(\"\\ufeff\"),\n];\n","import type {\n  Alternative,\n  Assertion,\n  Atom,\n  Character,\n  Disjunction,\n  Group,\n  GroupBackReference,\n  Location,\n  Quantifier,\n  Range,\n  RegExpFlags,\n  RegExpPattern,\n  Set,\n  Term,\n} from \"../types\";\nimport {\n  addFlag,\n  ASSERT_EXISTS,\n  ASSERT_NEVER_REACH_HERE,\n  cc,\n  insertToSet,\n  isCharacter,\n} from \"./utils.js\";\nimport {\n  digitsCharCodes,\n  whitespaceCodes,\n  wordCharCodes,\n} from \"./character-classes.js\";\n\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n  protected idx: number = 0;\n  protected input: string = \"\";\n  protected groupIdx: number = 0;\n\n  protected saveState() {\n    return {\n      idx: this.idx,\n      input: this.input,\n      groupIdx: this.groupIdx,\n    };\n  }\n\n  protected restoreState(newState: {\n    idx: number;\n    input: string;\n    groupIdx: number;\n  }) {\n    this.idx = newState.idx;\n    this.input = newState.input;\n    this.groupIdx = newState.groupIdx;\n  }\n\n  public pattern(input: string): RegExpPattern {\n    // parser state\n    this.idx = 0;\n    this.input = input;\n    this.groupIdx = 0;\n\n    this.consumeChar(\"/\");\n    const value = this.disjunction();\n    this.consumeChar(\"/\");\n\n    const flags: RegExpFlags = {\n      type: \"Flags\",\n      loc: { begin: this.idx, end: input.length },\n      global: false,\n      ignoreCase: false,\n      multiLine: false,\n      unicode: false,\n      sticky: false,\n    };\n\n    while (this.isRegExpFlag()) {\n      switch (this.popChar()) {\n        case \"g\":\n          addFlag(flags, \"global\");\n          break;\n        case \"i\":\n          addFlag(flags, \"ignoreCase\");\n          break;\n        case \"m\":\n          addFlag(flags, \"multiLine\");\n          break;\n        case \"u\":\n          addFlag(flags, \"unicode\");\n          break;\n        case \"y\":\n          addFlag(flags, \"sticky\");\n          break;\n      }\n    }\n\n    if (this.idx !== this.input.length) {\n      throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n    }\n    return {\n      type: \"Pattern\",\n      flags: flags,\n      value: value,\n      loc: this.loc(0),\n    };\n  }\n\n  protected disjunction(): Disjunction {\n    const alts = [];\n    const begin = this.idx;\n\n    alts.push(this.alternative());\n\n    while (this.peekChar() === \"|\") {\n      this.consumeChar(\"|\");\n      alts.push(this.alternative());\n    }\n\n    return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n  }\n\n  protected alternative(): Alternative {\n    const terms = [];\n    const begin = this.idx;\n\n    while (this.isTerm()) {\n      terms.push(this.term());\n    }\n\n    return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n  }\n\n  protected term(): Term {\n    if (this.isAssertion()) {\n      return this.assertion();\n    } else {\n      return this.atom();\n    }\n  }\n\n  protected assertion(): Assertion {\n    const begin = this.idx;\n    switch (this.popChar()) {\n      case \"^\":\n        return {\n          type: \"StartAnchor\",\n          loc: this.loc(begin),\n        };\n      case \"$\":\n        return { type: \"EndAnchor\", loc: this.loc(begin) };\n      // '\\b' or '\\B'\n      case \"\\\\\":\n        switch (this.popChar()) {\n          case \"b\":\n            return {\n              type: \"WordBoundary\",\n              loc: this.loc(begin),\n            };\n          case \"B\":\n            return {\n              type: \"NonWordBoundary\",\n              loc: this.loc(begin),\n            };\n        }\n        // istanbul ignore next\n        throw Error(\"Invalid Assertion Escape\");\n      // '(?=' or '(?!'\n      case \"(\":\n        this.consumeChar(\"?\");\n\n        let type: \"Lookahead\" | \"NegativeLookahead\" | undefined;\n        switch (this.popChar()) {\n          case \"=\":\n            type = \"Lookahead\";\n            break;\n          case \"!\":\n            type = \"NegativeLookahead\";\n            break;\n        }\n        ASSERT_EXISTS(type);\n\n        const disjunction = this.disjunction();\n\n        this.consumeChar(\")\");\n\n        return {\n          type: type!,\n          value: disjunction,\n          loc: this.loc(begin),\n        };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected quantifier(\n    isBacktracking: boolean = false,\n  ): Quantifier | undefined {\n    let range: Partial<Quantifier> | undefined = undefined;\n    const begin = this.idx;\n    switch (this.popChar()) {\n      case \"*\":\n        range = {\n          atLeast: 0,\n          atMost: Infinity,\n        };\n        break;\n      case \"+\":\n        range = {\n          atLeast: 1,\n          atMost: Infinity,\n        };\n        break;\n      case \"?\":\n        range = {\n          atLeast: 0,\n          atMost: 1,\n        };\n        break;\n      case \"{\":\n        const atLeast = this.integerIncludingZero();\n        switch (this.popChar()) {\n          case \"}\":\n            range = {\n              atLeast: atLeast,\n              atMost: atLeast,\n            };\n            break;\n          case \",\":\n            let atMost;\n            if (this.isDigit()) {\n              atMost = this.integerIncludingZero();\n              range = {\n                atLeast: atLeast,\n                atMost: atMost,\n              };\n            } else {\n              range = {\n                atLeast: atLeast,\n                atMost: Infinity,\n              };\n            }\n            this.consumeChar(\"}\");\n            break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n          return undefined;\n        }\n        ASSERT_EXISTS(range);\n        break;\n    }\n\n    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n    // causes severe performance degradations\n    if (isBacktracking === true && range === undefined) {\n      return undefined;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(range)) {\n      if (this.peekChar(0) === \"?\") {\n        this.consumeChar(\"?\");\n        range.greedy = false;\n      } else {\n        range.greedy = true;\n      }\n\n      range.type = \"Quantifier\";\n      range.loc = this.loc(begin);\n      return range as Quantifier;\n    }\n  }\n\n  protected atom(): Atom {\n    let atom: Omit<Atom, \"loc\" | \"type\"> | undefined;\n    const begin = this.idx;\n    switch (this.peekChar()) {\n      case \".\":\n        atom = this.dotAll();\n        break;\n      case \"\\\\\":\n        atom = this.atomEscape();\n        break;\n      case \"[\":\n        atom = this.characterClass();\n        break;\n      case \"(\":\n        atom = this.group();\n        break;\n    }\n\n    if (atom === undefined && this.isPatternCharacter()) {\n      atom = this.patternCharacter();\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS<Atom>(atom)) {\n      atom.loc = this.loc(begin);\n\n      if (this.isQuantifier()) {\n        atom.quantifier = this.quantifier();\n      }\n\n      return atom;\n    }\n\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected dotAll(): Omit<Set, \"loc\"> {\n    this.consumeChar(\".\");\n    return {\n      type: \"Set\",\n      complement: true,\n      value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n    };\n  }\n\n  protected atomEscape(): Omit<GroupBackReference | Set | Character, \"loc\"> {\n    this.consumeChar(\"\\\\\");\n\n    switch (this.peekChar()) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        return this.decimalEscapeAtom();\n      case \"d\":\n      case \"D\":\n      case \"s\":\n      case \"S\":\n      case \"w\":\n      case \"W\":\n        return this.characterClassEscape();\n      case \"f\":\n      case \"n\":\n      case \"r\":\n      case \"t\":\n      case \"v\":\n        return this.controlEscapeAtom();\n      case \"c\":\n        return this.controlLetterEscapeAtom();\n      case \"0\":\n        return this.nulCharacterAtom();\n      case \"x\":\n        return this.hexEscapeSequenceAtom();\n      case \"u\":\n        return this.regExpUnicodeEscapeSequenceAtom();\n      default:\n        return this.identityEscapeAtom();\n    }\n  }\n\n  protected decimalEscapeAtom(): Omit<GroupBackReference, \"loc\"> {\n    const value = this.positiveInteger();\n\n    return { type: \"GroupBackReference\", value: value };\n  }\n\n  protected characterClassEscape(): Omit<Set, \"loc\"> {\n    let set: (number | Range)[] | undefined;\n    let complement = false;\n    switch (this.popChar()) {\n      case \"d\":\n        set = digitsCharCodes;\n        break;\n      case \"D\":\n        set = digitsCharCodes;\n        complement = true;\n        break;\n      case \"s\":\n        set = whitespaceCodes;\n        break;\n      case \"S\":\n        set = whitespaceCodes;\n        complement = true;\n        break;\n      case \"w\":\n        set = wordCharCodes;\n        break;\n      case \"W\":\n        set = wordCharCodes;\n        complement = true;\n        break;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(set)) {\n      return { type: \"Set\", value: set, complement: complement };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected controlEscapeAtom(): Omit<Character, \"loc\"> {\n    let escapeCode;\n    switch (this.popChar()) {\n      case \"f\":\n        escapeCode = cc(\"\\f\");\n        break;\n      case \"n\":\n        escapeCode = cc(\"\\n\");\n        break;\n      case \"r\":\n        escapeCode = cc(\"\\r\");\n        break;\n      case \"t\":\n        escapeCode = cc(\"\\t\");\n        break;\n      case \"v\":\n        escapeCode = cc(\"\\v\");\n        break;\n    }\n\n    // istanbul ignore else\n    if (ASSERT_EXISTS(escapeCode)) {\n      return { type: \"Character\", value: escapeCode };\n    }\n    // istanbul ignore next\n    return ASSERT_NEVER_REACH_HERE();\n  }\n\n  protected controlLetterEscapeAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"c\");\n    const letter = this.popChar();\n    if (/[a-zA-Z]/.test(letter) === false) {\n      throw Error(\"Invalid \");\n    }\n\n    const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n    return { type: \"Character\", value: letterCode };\n  }\n\n  protected nulCharacterAtom(): Omit<Character, \"loc\"> {\n    // TODO implement '[lookahead ∉ DecimalDigit]'\n    // TODO: for the deprecated octal escape sequence\n    this.consumeChar(\"0\");\n    return { type: \"Character\", value: cc(\"\\0\") };\n  }\n\n  protected hexEscapeSequenceAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"x\");\n    return this.parseHexDigits(2);\n  }\n\n  protected regExpUnicodeEscapeSequenceAtom(): Omit<Character, \"loc\"> {\n    this.consumeChar(\"u\");\n    return this.parseHexDigits(4);\n  }\n\n  protected identityEscapeAtom(): Omit<Character, \"loc\"> {\n    // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n    // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n    const escapedChar = this.popChar();\n    return { type: \"Character\", value: cc(escapedChar) };\n  }\n\n  protected classPatternCharacterAtom(): Omit<Character, \"loc\"> {\n    switch (this.peekChar()) {\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n      // istanbul ignore next\n      case \"\\\\\":\n      // istanbul ignore next\n      case \"]\":\n        throw Error(\"TBD\");\n      default:\n        const nextChar = this.popChar();\n        return { type: \"Character\", value: cc(nextChar) };\n    }\n  }\n\n  protected characterClass(): Omit<Set, \"loc\"> {\n    const set: (number | Range)[] = [];\n    let complement = false;\n    this.consumeChar(\"[\");\n    if (this.peekChar(0) === \"^\") {\n      this.consumeChar(\"^\");\n      complement = true;\n    }\n\n    while (this.isClassAtom()) {\n      const from = this.classAtom();\n      const isFromSingleChar = from.type === \"Character\";\n      if (isCharacter(from) && this.isRangeDash()) {\n        this.consumeChar(\"-\");\n        const to = this.classAtom();\n        const isToSingleChar = to.type === \"Character\";\n\n        // a range can only be used when both sides are single characters\n        if (isCharacter(to)) {\n          if (to.value < from.value) {\n            throw Error(\"Range out of order in character class\");\n          }\n          set.push({ from: from.value, to: to.value });\n        } else {\n          // literal dash\n          insertToSet(from.value, set);\n          set.push(cc(\"-\"));\n          insertToSet(to.value, set);\n        }\n      } else {\n        insertToSet(from.value, set);\n      }\n    }\n\n    this.consumeChar(\"]\");\n\n    return { type: \"Set\", complement: complement, value: set };\n  }\n\n  protected classAtom(): Omit<Character | Set, \"loc\"> {\n    switch (this.peekChar()) {\n      // istanbul ignore next\n      case \"]\":\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n        throw Error(\"TBD\");\n      case \"\\\\\":\n        return this.classEscape();\n      default:\n        return this.classPatternCharacterAtom();\n    }\n  }\n\n  protected classEscape(): Omit<Character | Set, \"loc\"> {\n    this.consumeChar(\"\\\\\");\n    switch (this.peekChar()) {\n      // Matches a backspace.\n      // (Not to be confused with \\b word boundary outside characterClass)\n      case \"b\":\n        this.consumeChar(\"b\");\n        return { type: \"Character\", value: cc(\"\\u0008\") };\n      case \"d\":\n      case \"D\":\n      case \"s\":\n      case \"S\":\n      case \"w\":\n      case \"W\":\n        return this.characterClassEscape();\n      case \"f\":\n      case \"n\":\n      case \"r\":\n      case \"t\":\n      case \"v\":\n        return this.controlEscapeAtom();\n      case \"c\":\n        return this.controlLetterEscapeAtom();\n      case \"0\":\n        return this.nulCharacterAtom();\n      case \"x\":\n        return this.hexEscapeSequenceAtom();\n      case \"u\":\n        return this.regExpUnicodeEscapeSequenceAtom();\n      default:\n        return this.identityEscapeAtom();\n    }\n  }\n\n  protected group(): Omit<Group, \"loc\"> {\n    let capturing = true;\n    this.consumeChar(\"(\");\n    switch (this.peekChar(0)) {\n      case \"?\":\n        this.consumeChar(\"?\");\n        this.consumeChar(\":\");\n        capturing = false;\n        break;\n      default:\n        this.groupIdx++;\n        break;\n    }\n    const value = this.disjunction();\n    this.consumeChar(\")\");\n\n    const groupAst: Omit<Group, \"loc\"> = {\n      type: \"Group\",\n      capturing: capturing,\n      value: value,\n    };\n\n    if (capturing) {\n      groupAst[\"idx\"] = this.groupIdx;\n    }\n\n    return groupAst;\n  }\n\n  protected positiveInteger(): number {\n    let number = this.popChar();\n\n    // istanbul ignore next - can't ever get here due to previous lookahead checks\n    // still implementing this error checking in case this ever changes.\n    if (decimalPatternNoZero.test(number) === false) {\n      throw Error(\"Expecting a positive integer\");\n    }\n\n    while (decimalPattern.test(this.peekChar(0))) {\n      number += this.popChar();\n    }\n\n    return parseInt(number, 10);\n  }\n\n  protected integerIncludingZero(): number {\n    let number = this.popChar();\n    if (decimalPattern.test(number) === false) {\n      throw Error(\"Expecting an integer\");\n    }\n\n    while (decimalPattern.test(this.peekChar(0))) {\n      number += this.popChar();\n    }\n\n    return parseInt(number, 10);\n  }\n\n  protected patternCharacter(): Omit<Character, \"loc\"> {\n    const nextChar = this.popChar();\n    switch (nextChar) {\n      // istanbul ignore next\n      case \"\\n\":\n      // istanbul ignore next\n      case \"\\r\":\n      // istanbul ignore next\n      case \"\\u2028\":\n      // istanbul ignore next\n      case \"\\u2029\":\n      // istanbul ignore next\n      case \"^\":\n      // istanbul ignore next\n      case \"$\":\n      // istanbul ignore next\n      case \"\\\\\":\n      // istanbul ignore next\n      case \".\":\n      // istanbul ignore next\n      case \"*\":\n      // istanbul ignore next\n      case \"+\":\n      // istanbul ignore next\n      case \"?\":\n      // istanbul ignore next\n      case \"(\":\n      // istanbul ignore next\n      case \")\":\n      // istanbul ignore next\n      case \"[\":\n      // istanbul ignore next\n      case \"|\":\n        // istanbul ignore next\n        throw Error(\"TBD\");\n      default:\n        return { type: \"Character\", value: cc(nextChar) };\n    }\n  }\n  protected isRegExpFlag(): boolean {\n    switch (this.peekChar(0)) {\n      case \"g\":\n      case \"i\":\n      case \"m\":\n      case \"u\":\n      case \"y\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  protected isRangeDash(): boolean {\n    return this.peekChar() === \"-\" && this.isClassAtom(1);\n  }\n\n  protected isDigit(): boolean {\n    return decimalPattern.test(this.peekChar(0));\n  }\n\n  protected isClassAtom(howMuch = 0): boolean {\n    switch (this.peekChar(howMuch)) {\n      case \"]\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\u2028\":\n      case \"\\u2029\":\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  protected isTerm() {\n    return this.isAtom() || this.isAssertion();\n  }\n\n  protected isAtom(): boolean {\n    if (this.isPatternCharacter()) {\n      return true;\n    }\n\n    switch (this.peekChar(0)) {\n      case \".\":\n      case \"\\\\\": // atomEscape\n      case \"[\": // characterClass\n      // TODO: isAtom must be called before isAssertion - disambiguate\n      case \"(\": // group\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  protected isAssertion(): boolean {\n    switch (this.peekChar(0)) {\n      case \"^\":\n      case \"$\":\n        return true;\n      // '\\b' or '\\B'\n      case \"\\\\\":\n        switch (this.peekChar(1)) {\n          case \"b\":\n          case \"B\":\n            return true;\n          default:\n            return false;\n        }\n      // '(?=' or '(?!'\n      case \"(\":\n        return (\n          this.peekChar(1) === \"?\" &&\n          (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n        );\n      default:\n        return false;\n    }\n  }\n\n  protected isQuantifier(): boolean {\n    const prevState = this.saveState();\n    try {\n      return this.quantifier(true) !== undefined;\n    } catch (e) {\n      return false;\n    } finally {\n      this.restoreState(prevState);\n    }\n  }\n\n  protected isPatternCharacter(): boolean {\n    switch (this.peekChar()) {\n      case \"^\":\n      case \"$\":\n      case \"\\\\\":\n      case \".\":\n      case \"*\":\n      case \"+\":\n      case \"?\":\n      case \"(\":\n      case \")\":\n      case \"[\":\n      case \"|\":\n      case \"/\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\u2028\":\n      case \"\\u2029\":\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  protected parseHexDigits(howMany: number): Omit<Character, \"loc\"> {\n    let hexString = \"\";\n    for (let i = 0; i < howMany; i++) {\n      const hexChar = this.popChar();\n      if (hexDigitPattern.test(hexChar) === false) {\n        throw Error(\"Expecting a HexDecimal digits\");\n      }\n      hexString += hexChar;\n    }\n    const charCode = parseInt(hexString, 16);\n    return { type: \"Character\", value: charCode };\n  }\n\n  protected peekChar(howMuch = 0): string {\n    return this.input[this.idx + howMuch];\n  }\n\n  protected popChar(): string {\n    const nextChar = this.peekChar(0);\n    this.consumeChar(undefined);\n    return nextChar;\n  }\n\n  protected consumeChar(char: string | undefined): void {\n    if (char !== undefined && this.input[this.idx] !== char) {\n      throw Error(\n        \"Expected: '\" +\n          char +\n          \"' but found: '\" +\n          this.input[this.idx] +\n          \"' at offset: \" +\n          this.idx,\n      );\n    }\n\n    if (this.idx >= this.input.length) {\n      throw Error(\"Unexpected end of input\");\n    }\n    this.idx++;\n  }\n\n  protected loc(begin: number): Location {\n    return { begin: begin, end: this.idx };\n  }\n}\n","import type {\n  Alternative,\n  Assertion,\n  Character,\n  Disjunction,\n  Group,\n  GroupBackReference,\n  IRegExpAST,\n  Quantifier,\n  RegExpAstPart,\n  RegExpFlags,\n  RegExpPattern,\n  Set,\n} from \"../types\";\n\nexport class BaseRegExpVisitor {\n  public visitChildren(node: IRegExpAST) {\n    for (const key in node) {\n      const child = (node as any)[key];\n      /* istanbul ignore else */\n      if (node.hasOwnProperty(key)) {\n        if (child.type !== undefined) {\n          this.visit(child);\n        } else if (Array.isArray(child)) {\n          child.forEach((subChild) => {\n            this.visit(subChild);\n          }, this);\n        }\n      }\n    }\n  }\n\n  public visit(node: RegExpAstPart): void {\n    switch (node.type) {\n      case \"Pattern\":\n        this.visitPattern(node);\n        break;\n      case \"Flags\":\n        this.visitFlags(node);\n        break;\n      case \"Disjunction\":\n        this.visitDisjunction(node);\n        break;\n      case \"Alternative\":\n        this.visitAlternative(node);\n        break;\n      case \"StartAnchor\":\n        this.visitStartAnchor(node);\n        break;\n      case \"EndAnchor\":\n        this.visitEndAnchor(node);\n        break;\n      case \"WordBoundary\":\n        this.visitWordBoundary(node);\n        break;\n      case \"NonWordBoundary\":\n        this.visitNonWordBoundary(node);\n        break;\n      case \"Lookahead\":\n        this.visitLookahead(node);\n        break;\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node);\n        break;\n      case \"Character\":\n        this.visitCharacter(node);\n        break;\n      case \"Set\":\n        this.visitSet(node);\n        break;\n      case \"Group\":\n        this.visitGroup(node);\n        break;\n      case \"GroupBackReference\":\n        this.visitGroupBackReference(node);\n        break;\n      case \"Quantifier\":\n        this.visitQuantifier(node);\n        break;\n    }\n\n    this.visitChildren(node);\n  }\n\n  public visitPattern(node: RegExpPattern): void {}\n\n  public visitFlags(node: RegExpFlags): void {}\n\n  public visitDisjunction(node: Disjunction): void {}\n\n  public visitAlternative(node: Alternative): void {}\n\n  // Assertion\n  public visitStartAnchor(node: Assertion): void {}\n\n  public visitEndAnchor(node: Assertion): void {}\n\n  public visitWordBoundary(node: Assertion): void {}\n\n  public visitNonWordBoundary(node: Assertion): void {}\n\n  public visitLookahead(node: Assertion): void {}\n\n  public visitNegativeLookahead(node: Assertion): void {}\n\n  // atoms\n  public visitCharacter(node: Character): void {}\n\n  public visitSet(node: Set): void {}\n\n  public visitGroup(node: Group): void {}\n\n  public visitGroupBackReference(node: GroupBackReference): void {}\n\n  public visitQuantifier(node: Quantifier): void {}\n}\n","import {\n  Alternative,\n  Assertion,\n  Atom,\n  Disjunction,\n  RegExpParser,\n  RegExpPattern,\n} from \"@chevrotain/regexp-to-ast\";\n\nlet regExpAstCache: { [regex: string]: RegExpPattern } = {};\nconst regExpParser = new RegExpParser();\n\n// this should be moved to regexp-to-ast\nexport type ASTNode =\n  | RegExpPattern\n  | Disjunction\n  | Alternative\n  | Assertion\n  | Atom;\n\nexport function getRegExpAst(regExp: RegExp): RegExpPattern {\n  const regExpStr = regExp.toString();\n  if (regExpAstCache.hasOwnProperty(regExpStr)) {\n    return regExpAstCache[regExpStr];\n  } else {\n    const regExpAst = regExpParser.pattern(regExpStr);\n    regExpAstCache[regExpStr] = regExpAst;\n    return regExpAst;\n  }\n}\n\nexport function clearRegExpParserCache() {\n  regExpAstCache = {};\n}\n","import {\n  Alternative,\n  Atom,\n  BaseRegExpVisitor,\n  Character,\n  Disjunction,\n  Group,\n  Set,\n} from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { ASTNode, getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\n\nconst complementErrorMessage =\n  \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg =\n  'Unable to use \"first char\" lexer optimizations:\\n';\n\nexport function getOptimizedStartCodesIndices(\n  regExp: RegExp,\n  ensureOptimizations = false,\n): number[] {\n  try {\n    const ast = getRegExpAst(regExp);\n    const firstChars = firstCharOptimizedIndices(\n      ast.value,\n      {},\n      ast.flags.ignoreCase,\n    );\n    return firstChars;\n  } catch (e) {\n    /* istanbul ignore next */\n    // Testing this relies on the regexp-to-ast library having a bug... */\n    // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n    if (e.message === complementErrorMessage) {\n      if (ensureOptimizations) {\n        PRINT_WARNING(\n          `${failedOptimizationPrefixMsg}` +\n            `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n            \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\",\n        );\n      }\n    } else {\n      let msgSuffix = \"\";\n      if (ensureOptimizations) {\n        msgSuffix =\n          \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n      }\n      PRINT_ERROR(\n        `${failedOptimizationPrefixMsg}\\n` +\n          `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n          `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n          \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n          msgSuffix,\n      );\n    }\n  }\n\n  return [];\n}\n\nexport function firstCharOptimizedIndices(\n  ast: ASTNode,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean,\n): number[] {\n  switch (ast.type) {\n    case \"Disjunction\":\n      for (let i = 0; i < ast.value.length; i++) {\n        firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n      }\n      break;\n    case \"Alternative\":\n      const terms = ast.value;\n      for (let i = 0; i < terms.length; i++) {\n        const term = terms[i];\n\n        // skip terms that cannot effect the first char results\n        switch (term.type) {\n          case \"EndAnchor\":\n          // A group back reference cannot affect potential starting char.\n          // because if a back reference is the first production than automatically\n          // the group being referenced has had to come BEFORE so its codes have already been added\n          case \"GroupBackReference\":\n          // assertions do not affect potential starting codes\n          case \"Lookahead\":\n          case \"NegativeLookahead\":\n          case \"StartAnchor\":\n          case \"WordBoundary\":\n          case \"NonWordBoundary\":\n            continue;\n        }\n\n        const atom = term;\n        switch (atom.type) {\n          case \"Character\":\n            addOptimizedIdxToResult(atom.value, result, ignoreCase);\n            break;\n          case \"Set\":\n            if (atom.complement === true) {\n              throw Error(complementErrorMessage);\n            }\n            forEach(atom.value, (code) => {\n              if (typeof code === \"number\") {\n                addOptimizedIdxToResult(code, result, ignoreCase);\n              } else {\n                // range\n                const range = code as any;\n                // cannot optimize when ignoreCase is\n                if (ignoreCase === true) {\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                  }\n                }\n                // Optimization (2 orders of magnitude less work for very large ranges)\n                else {\n                  // handle unoptimized values\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to && rangeCode < minOptimizationVal;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                  }\n\n                  // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                  if (range.to >= minOptimizationVal) {\n                    const minUnOptVal =\n                      range.from >= minOptimizationVal\n                        ? range.from\n                        : minOptimizationVal;\n                    const maxUnOptVal = range.to;\n                    const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                    const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n\n                    for (\n                      let currOptIdx = minOptIdx;\n                      currOptIdx <= maxOptIdx;\n                      currOptIdx++\n                    ) {\n                      result[currOptIdx] = currOptIdx;\n                    }\n                  }\n                }\n              }\n            });\n            break;\n          case \"Group\":\n            firstCharOptimizedIndices(atom.value, result, ignoreCase);\n            break;\n          /* istanbul ignore next */\n          default:\n            throw Error(\"Non Exhaustive Match\");\n        }\n\n        // reached a mandatory production, no more **start** codes can be found on this alternative\n        const isOptionalQuantifier =\n          atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n        if (\n          // A group may be optional due to empty contents /(?:)/\n          // or if everything inside it is optional /((a)?)/\n          (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n          // If this term is not a group it may only be optional if it has an optional quantifier\n          (atom.type !== \"Group\" && isOptionalQuantifier === false)\n        ) {\n          break;\n        }\n      }\n      break;\n    /* istanbul ignore next */\n    default:\n      throw Error(\"non exhaustive match!\");\n  }\n\n  // console.log(Object.keys(result).length)\n  return values(result);\n}\n\nfunction addOptimizedIdxToResult(\n  code: number,\n  result: { [charCode: number]: number },\n  ignoreCase: boolean,\n) {\n  const optimizedCharIdx = charCodeToOptimizedIndex(code);\n  result[optimizedCharIdx] = optimizedCharIdx;\n\n  if (ignoreCase === true) {\n    handleIgnoreCase(code, result);\n  }\n}\n\nfunction handleIgnoreCase(\n  code: number,\n  result: { [charCode: number]: number },\n) {\n  const char = String.fromCharCode(code);\n  const upperChar = char.toUpperCase();\n  /* istanbul ignore else */\n  if (upperChar !== char) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n    result[optimizedCharIdx] = optimizedCharIdx;\n  } else {\n    const lowerChar = char.toLowerCase();\n    if (lowerChar !== char) {\n      const optimizedCharIdx = charCodeToOptimizedIndex(\n        lowerChar.charCodeAt(0),\n      );\n      result[optimizedCharIdx] = optimizedCharIdx;\n    }\n  }\n}\n\nfunction findCode(setNode: Set, targetCharCodes: number[]) {\n  return find(setNode.value, (codeOrRange) => {\n    if (typeof codeOrRange === \"number\") {\n      return includes(targetCharCodes, codeOrRange);\n    } else {\n      // range\n      const range = <any>codeOrRange;\n      return (\n        find(\n          targetCharCodes,\n          (targetCode) => range.from <= targetCode && targetCode <= range.to,\n        ) !== undefined\n      );\n    }\n  });\n}\n\nfunction isWholeOptional(ast: any): boolean {\n  const quantifier = (ast as Atom).quantifier;\n  if (quantifier && quantifier.atLeast === 0) {\n    return true;\n  }\n\n  if (!ast.value) {\n    return false;\n  }\n\n  return isArray(ast.value)\n    ? every(ast.value, isWholeOptional)\n    : isWholeOptional(ast.value);\n}\n\nclass CharCodeFinder extends BaseRegExpVisitor {\n  found: boolean = false;\n\n  constructor(private targetCharCodes: number[]) {\n    super();\n  }\n\n  visitChildren(node: ASTNode) {\n    // No need to keep looking...\n    if (this.found === true) {\n      return;\n    }\n\n    // switch lookaheads as they do not actually consume any characters thus\n    // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n    switch (node.type) {\n      case \"Lookahead\":\n        this.visitLookahead(node);\n        return;\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node);\n        return;\n    }\n\n    super.visitChildren(node);\n  }\n\n  visitCharacter(node: Character) {\n    if (includes(this.targetCharCodes, node.value)) {\n      this.found = true;\n    }\n  }\n\n  visitSet(node: Set) {\n    if (node.complement) {\n      if (findCode(node, this.targetCharCodes) === undefined) {\n        this.found = true;\n      }\n    } else {\n      if (findCode(node, this.targetCharCodes) !== undefined) {\n        this.found = true;\n      }\n    }\n  }\n}\n\nexport function canMatchCharCode(\n  charCodes: number[],\n  pattern: RegExp | string,\n) {\n  if (pattern instanceof RegExp) {\n    const ast = getRegExpAst(pattern);\n    const charCodeFinder = new CharCodeFinder(charCodes);\n    charCodeFinder.visit(ast);\n    return charCodeFinder.found;\n  } else {\n    return (\n      find(<any>pattern, (char) => {\n        return includes(charCodes, (<string>char).charCodeAt(0));\n      }) !== undefined\n    );\n  }\n}\n","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport {\n  IRegExpExec,\n  Lexer,\n  LexerDefinitionErrorType,\n} from \"./lexer_public.js\";\nimport {\n  compact,\n  defaults,\n  difference,\n  filter,\n  find,\n  first,\n  flatten,\n  forEach,\n  has,\n  includes,\n  indexOf,\n  isArray,\n  isEmpty,\n  isFunction,\n  isRegExp,\n  isString,\n  isUndefined,\n  keys,\n  map,\n  reduce,\n  reject,\n  values,\n} from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport {\n  canMatchCharCode,\n  failedOptimizationPrefixMsg,\n  getOptimizedStartCodesIndices,\n} from \"./reg_exp.js\";\nimport {\n  ILexerDefinitionError,\n  ILineTerminatorsTester,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\n\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\n\nexport interface IPatternConfig {\n  pattern: IRegExpExec | string;\n  longerAlt: number[] | undefined;\n  canLineTerminator: boolean;\n  isCustom: boolean;\n  short: number | false;\n  group: string | undefined | false;\n  push: string | undefined;\n  pop: boolean;\n  tokenType: TokenType;\n  tokenTypeIdx: number;\n}\n\nexport interface IAnalyzeResult {\n  patternIdxToConfig: IPatternConfig[];\n  charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] };\n  emptyGroups: { [groupName: string]: IToken[] };\n  hasCustom: boolean;\n  canBeOptimized: boolean;\n}\n\nexport let SUPPORT_STICKY =\n  typeof (<any>new RegExp(\"(?:)\")).sticky === \"boolean\";\n\nexport function disableSticky() {\n  SUPPORT_STICKY = false;\n}\n\nexport function enableSticky() {\n  SUPPORT_STICKY = true;\n}\n\nexport function analyzeTokenTypes(\n  tokenTypes: TokenType[],\n  options: {\n    positionTracking?: \"full\" | \"onlyStart\" | \"onlyOffset\";\n    ensureOptimizations?: boolean;\n    lineTerminatorCharacters?: (number | string)[];\n    // TODO: should `useSticky` be an argument here?\n    useSticky?: boolean;\n    safeMode?: boolean;\n    tracer?: (msg: string, action: () => void) => void;\n  },\n): IAnalyzeResult {\n  options = defaults(options, {\n    useSticky: SUPPORT_STICKY,\n    debug: false as boolean,\n    safeMode: false as boolean,\n    positionTracking: \"full\",\n    lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n    tracer: (msg: string, action: Function) => action(),\n  });\n\n  const tracer = options.tracer!;\n\n  tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n    initCharCodeToOptimizedIndexMap();\n  });\n\n  let onlyRelevantTypes: TokenType[];\n  tracer(\"Reject Lexer.NA\", () => {\n    onlyRelevantTypes = reject(tokenTypes, (currType) => {\n      return currType[PATTERN] === Lexer.NA;\n    });\n  });\n\n  let hasCustom = false;\n  let allTransformedPatterns: (IRegExpExec | string)[];\n  tracer(\"Transform Patterns\", () => {\n    hasCustom = false;\n    allTransformedPatterns = map(\n      onlyRelevantTypes,\n      (currType): IRegExpExec | string => {\n        const currPattern = currType[PATTERN];\n\n        /* istanbul ignore else */\n        if (isRegExp(currPattern)) {\n          const regExpSource = currPattern.source;\n          if (\n            regExpSource.length === 1 &&\n            // only these regExp meta characters which can appear in a length one regExp\n            regExpSource !== \"^\" &&\n            regExpSource !== \"$\" &&\n            regExpSource !== \".\" &&\n            !currPattern.ignoreCase\n          ) {\n            return regExpSource;\n          } else if (\n            regExpSource.length === 2 &&\n            regExpSource[0] === \"\\\\\" &&\n            // not a meta character\n            !includes(\n              [\n                \"d\",\n                \"D\",\n                \"s\",\n                \"S\",\n                \"t\",\n                \"r\",\n                \"n\",\n                \"t\",\n                \"0\",\n                \"c\",\n                \"b\",\n                \"B\",\n                \"f\",\n                \"v\",\n                \"w\",\n                \"W\",\n              ],\n              regExpSource[1],\n            )\n          ) {\n            // escaped meta Characters: /\\+/ /\\[/\n            // or redundant escaping: /\\a/\n            // without the escaping \"\\\"\n            return regExpSource[1];\n          } else {\n            return options.useSticky\n              ? addStickyFlag(currPattern)\n              : addStartOfInput(currPattern);\n          }\n        } else if (isFunction(currPattern)) {\n          hasCustom = true;\n          // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n          return { exec: currPattern };\n        } else if (typeof currPattern === \"object\") {\n          hasCustom = true;\n          // ICustomPattern\n          return currPattern;\n        } else if (typeof currPattern === \"string\") {\n          if (currPattern.length === 1) {\n            return currPattern;\n          } else {\n            const escapedRegExpString = currPattern.replace(\n              /[\\\\^$.*+?()[\\]{}|]/g,\n              \"\\\\$&\",\n            );\n            const wrappedRegExp = new RegExp(escapedRegExpString);\n            return options.useSticky\n              ? addStickyFlag(wrappedRegExp)\n              : addStartOfInput(wrappedRegExp);\n          }\n        } else {\n          throw Error(\"non exhaustive match\");\n        }\n      },\n    );\n  });\n\n  let patternIdxToType: number[];\n  let patternIdxToGroup: (string | undefined | false)[];\n  let patternIdxToLongerAltIdxArr: (number[] | undefined)[];\n  let patternIdxToPushMode: (string | undefined)[];\n  let patternIdxToPopMode: boolean[];\n  tracer(\"misc mapping\", () => {\n    patternIdxToType = map(\n      onlyRelevantTypes,\n      (currType) => currType.tokenTypeIdx!,\n    );\n\n    patternIdxToGroup = map(onlyRelevantTypes, (clazz: any) => {\n      const groupName = clazz.GROUP;\n      /* istanbul ignore next */\n      if (groupName === Lexer.SKIPPED) {\n        return undefined;\n      } else if (isString(groupName)) {\n        return groupName;\n      } else if (isUndefined(groupName)) {\n        return false;\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    });\n\n    patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz: any) => {\n      const longerAltType = clazz.LONGER_ALT;\n\n      if (longerAltType) {\n        const longerAltIdxArr = isArray(longerAltType)\n          ? map(longerAltType, (type: any) => indexOf(onlyRelevantTypes, type))\n          : [indexOf(onlyRelevantTypes, longerAltType)];\n        return longerAltIdxArr;\n      }\n    });\n\n    patternIdxToPushMode = map(\n      onlyRelevantTypes,\n      (clazz: any) => clazz.PUSH_MODE,\n    );\n\n    patternIdxToPopMode = map(onlyRelevantTypes, (clazz: any) =>\n      has(clazz, \"POP_MODE\"),\n    );\n  });\n\n  let patternIdxToCanLineTerminator: boolean[];\n  tracer(\"Line Terminator Handling\", () => {\n    const lineTerminatorCharCodes = getCharCodes(\n      options.lineTerminatorCharacters!,\n    );\n    patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n    if (options.positionTracking !== \"onlyOffset\") {\n      patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n        if (has(tokType, \"LINE_BREAKS\")) {\n          return !!tokType.LINE_BREAKS;\n        } else {\n          return (\n            checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n            canMatchCharCode(\n              lineTerminatorCharCodes,\n              tokType.PATTERN as RegExp | string,\n            )\n          );\n        }\n      });\n    }\n  });\n\n  let patternIdxToIsCustom: boolean[];\n  let patternIdxToShort: (number | false)[];\n  let emptyGroups!: { [groupName: string]: IToken[] };\n  let patternIdxToConfig!: IPatternConfig[];\n  tracer(\"Misc Mapping #2\", () => {\n    patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n    patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n\n    emptyGroups = reduce(\n      onlyRelevantTypes,\n      (acc, clazz: any) => {\n        const groupName = clazz.GROUP;\n        if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n          acc[groupName] = [];\n        }\n        return acc;\n      },\n      {} as { [groupName: string]: IToken[] },\n    );\n\n    patternIdxToConfig = map(\n      allTransformedPatterns,\n      (x, idx): IPatternConfig => {\n        return {\n          pattern: allTransformedPatterns[idx],\n          longerAlt: patternIdxToLongerAltIdxArr[idx],\n          canLineTerminator: patternIdxToCanLineTerminator[idx],\n          isCustom: patternIdxToIsCustom[idx],\n          short: patternIdxToShort[idx],\n          group: patternIdxToGroup[idx],\n          push: patternIdxToPushMode[idx],\n          pop: patternIdxToPopMode[idx],\n          tokenTypeIdx: patternIdxToType[idx],\n          tokenType: onlyRelevantTypes[idx],\n        };\n      },\n    );\n  });\n\n  let canBeOptimized = true;\n  let charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] } =\n    [];\n\n  if (!options.safeMode) {\n    tracer(\"First Char Optimization\", () => {\n      charCodeToPatternIdxToConfig = reduce(\n        onlyRelevantTypes,\n        (result, currTokType, idx) => {\n          if (typeof currTokType.PATTERN === \"string\") {\n            const charCode = currTokType.PATTERN.charCodeAt(0);\n            const optimizedIdx = charCodeToOptimizedIndex(charCode);\n            addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n          } else if (isArray(currTokType.START_CHARS_HINT)) {\n            let lastOptimizedIdx: number;\n            forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n              const charCode =\n                typeof charOrInt === \"string\"\n                  ? charOrInt.charCodeAt(0)\n                  : charOrInt;\n              const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n              // Avoid adding the config multiple times\n              /* istanbul ignore else */\n              // - Difficult to check this scenario effects as it is only a performance\n              //   optimization that does not change correctness\n              if (lastOptimizedIdx !== currOptimizedIdx) {\n                lastOptimizedIdx = currOptimizedIdx;\n                addToMapOfArrays(\n                  result,\n                  currOptimizedIdx,\n                  patternIdxToConfig[idx],\n                );\n              }\n            });\n          } else if (isRegExp(currTokType.PATTERN)) {\n            if (currTokType.PATTERN.unicode) {\n              canBeOptimized = false;\n              if (options.ensureOptimizations) {\n                PRINT_ERROR(\n                  `${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                    \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\",\n                );\n              }\n            } else {\n              const optimizedCodes = getOptimizedStartCodesIndices(\n                currTokType.PATTERN,\n                options.ensureOptimizations,\n              );\n              /* istanbul ignore if */\n              // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n              // the first should be a different validation and the second cannot be tested.\n              if (isEmpty(optimizedCodes)) {\n                // we cannot understand what codes may start possible matches\n                // The optimization correctness requires knowing start codes for ALL patterns.\n                // Not actually sure this is an error, no debug message\n                canBeOptimized = false;\n              }\n              forEach(optimizedCodes, (code) => {\n                addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n              });\n            }\n          } else {\n            if (options.ensureOptimizations) {\n              PRINT_ERROR(\n                `${failedOptimizationPrefixMsg}` +\n                  `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                  \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                  \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\",\n              );\n            }\n            canBeOptimized = false;\n          }\n\n          return result;\n        },\n        [] as { [charCode: number]: IPatternConfig[] },\n      );\n    });\n  }\n\n  return {\n    emptyGroups: emptyGroups,\n    patternIdxToConfig: patternIdxToConfig,\n    charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n    hasCustom: hasCustom,\n    canBeOptimized: canBeOptimized,\n  };\n}\n\nexport function validatePatterns(\n  tokenTypes: TokenType[],\n  validModesNames: string[],\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = [];\n\n  const missingResult = findMissingPatterns(tokenTypes);\n  errors = errors.concat(missingResult.errors);\n\n  const invalidResult = findInvalidPatterns(missingResult.valid);\n  const validTokenTypes = invalidResult.valid;\n  errors = errors.concat(invalidResult.errors);\n\n  errors = errors.concat(validateRegExpPattern(validTokenTypes));\n\n  errors = errors.concat(findInvalidGroupType(validTokenTypes));\n\n  errors = errors.concat(\n    findModesThatDoNotExist(validTokenTypes, validModesNames),\n  );\n\n  errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n\n  return errors;\n}\n\nfunction validateRegExpPattern(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  let errors: ILexerDefinitionError[] = [];\n  const withRegExpPatterns = filter(tokenTypes, (currTokType) =>\n    isRegExp(currTokType[PATTERN]),\n  );\n\n  errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n\n  errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n\n  errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n\n  errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n\n  errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n\n  return errors;\n}\n\nexport interface ILexerFilterResult {\n  errors: ILexerDefinitionError[];\n  valid: TokenType[];\n}\n\nexport function findMissingPatterns(\n  tokenTypes: TokenType[],\n): ILexerFilterResult {\n  const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n    return !has(currType, PATTERN);\n  });\n\n  const errors = map(tokenTypesWithMissingPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- missing static 'PATTERN' property\",\n      type: LexerDefinitionErrorType.MISSING_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n  return { errors, valid };\n}\n\nexport function findInvalidPatterns(\n  tokenTypes: TokenType[],\n): ILexerFilterResult {\n  const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN];\n    return (\n      !isRegExp(pattern) &&\n      !isFunction(pattern) &&\n      !has(pattern, \"exec\") &&\n      !isString(pattern)\n    );\n  });\n\n  const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' can only be a RegExp, a\" +\n        \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n      type: LexerDefinitionErrorType.INVALID_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n  return { errors, valid };\n}\n\nconst end_of_input = /[^\\\\][$]/;\n\nexport function findEndOfInputAnchor(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  class EndAnchorFinder extends BaseRegExpVisitor {\n    found = false;\n\n    visitEndAnchor(node: unknown) {\n      this.found = true;\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN;\n\n    try {\n      const regexpAst = getRegExpAst(pattern as RegExp);\n      const endAnchorVisitor = new EndAnchorFinder();\n      endAnchorVisitor.visit(regexpAst);\n\n      return endAnchorVisitor.found;\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return end_of_input.test((pattern as RegExp).source);\n    }\n  });\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n        \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findEmptyMatchRegExps(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const matchesEmptyString = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp;\n    return pattern.test(\"\");\n  });\n\n  const errors = map(matchesEmptyString, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' must not match an empty string\",\n      type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\n\nexport function findStartOfInputAnchor(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  class StartAnchorFinder extends BaseRegExpVisitor {\n    found = false;\n\n    visitStartAnchor(node: unknown) {\n      this.found = true;\n    }\n  }\n\n  const invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType.PATTERN as RegExp;\n    try {\n      const regexpAst = getRegExpAst(pattern);\n      const startAnchorVisitor = new StartAnchorFinder();\n      startAnchorVisitor.visit(regexpAst);\n\n      return startAnchorVisitor.found;\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return start_of_input.test(pattern.source);\n    }\n  });\n\n  const errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findUnsupportedFlags(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const invalidFlags = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN];\n    return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n  });\n\n  const errors = map(invalidFlags, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n      type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const found: TokenType[] = [];\n  let identicalPatterns = map(tokenTypes, (outerType: any) => {\n    return reduce(\n      tokenTypes,\n      (result, innerType) => {\n        if (\n          outerType.PATTERN.source === (innerType.PATTERN as RegExp).source &&\n          !includes(found, innerType) &&\n          innerType.PATTERN !== Lexer.NA\n        ) {\n          // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n          // in essence we are creating Equivalence classes on equality relation.\n          found.push(innerType);\n          result.push(innerType);\n          return result;\n        }\n        return result;\n      },\n      [] as TokenType[],\n    );\n  });\n\n  identicalPatterns = compact(identicalPatterns);\n\n  const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n    return currIdenticalSet.length > 1;\n  });\n\n  const errors = map(duplicatePatterns, (setOfIdentical: any) => {\n    const tokenTypeNames = map(setOfIdentical, (currType: any) => {\n      return currType.name;\n    });\n\n    const dupPatternSrc = (<any>first(setOfIdentical)).PATTERN;\n    return {\n      message:\n        `The same RegExp pattern ->${dupPatternSrc}<-` +\n        `has been used in all of the following Token Types: ${tokenTypeNames.join(\n          \", \",\n        )} <-`,\n      type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n      tokenTypes: setOfIdentical,\n    };\n  });\n\n  return errors;\n}\n\nexport function findInvalidGroupType(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const invalidTypes = filter(tokenTypes, (clazz: any) => {\n    if (!has(clazz, \"GROUP\")) {\n      return false;\n    }\n    const group = clazz.GROUP;\n\n    return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n  });\n\n  const errors = map(invalidTypes, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n      type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n      tokenTypes: [currType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findModesThatDoNotExist(\n  tokenTypes: TokenType[],\n  validModes: string[],\n): ILexerDefinitionError[] {\n  const invalidModes = filter(tokenTypes, (clazz: any) => {\n    return (\n      clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE)\n    );\n  });\n\n  const errors = map(invalidModes, (tokType) => {\n    const msg =\n      `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n      `which does not exist`;\n    return {\n      message: msg,\n      type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n      tokenTypes: [tokType],\n    };\n  });\n\n  return errors;\n}\n\nexport function findUnreachablePatterns(\n  tokenTypes: TokenType[],\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = [];\n\n  const canBeTested = reduce(\n    tokenTypes,\n    (result, tokType, idx) => {\n      const pattern = tokType.PATTERN;\n\n      if (pattern === Lexer.NA) {\n        return result;\n      }\n\n      // a more comprehensive validation for all forms of regExps would require\n      // deeper regExp analysis capabilities\n      if (isString(pattern)) {\n        result.push({ str: pattern, idx, tokenType: tokType });\n      } else if (isRegExp(pattern) && noMetaChar(pattern)) {\n        result.push({ str: pattern.source, idx, tokenType: tokType });\n      }\n      return result;\n    },\n    [] as { str: string; idx: number; tokenType: TokenType }[],\n  );\n\n  forEach(tokenTypes, (tokType, testIdx) => {\n    forEach(canBeTested, ({ str, idx, tokenType }) => {\n      if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n        const msg =\n          `Token: ->${tokenType.name}<- can never be matched.\\n` +\n          `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n          `in the lexer's definition.\\n` +\n          `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n        errors.push({\n          message: msg,\n          type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n          tokenTypes: [tokType, tokenType],\n        });\n      }\n    });\n  });\n\n  return errors;\n}\n\nfunction testTokenType(str: string, pattern: any): boolean {\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    const regExpArray = pattern.exec(str);\n    return regExpArray !== null && regExpArray.index === 0;\n  } else if (isFunction(pattern)) {\n    // maintain the API of custom patterns\n    return pattern(str, 0, [], {});\n  } else if (has(pattern, \"exec\")) {\n    // maintain the API of custom patterns\n    return pattern.exec(str, 0, [], {});\n  } else if (typeof pattern === \"string\") {\n    return pattern === str;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nfunction noMetaChar(regExp: RegExp): boolean {\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n  const metaChars = [\n    \".\",\n    \"\\\\\",\n    \"[\",\n    \"]\",\n    \"|\",\n    \"^\",\n    \"$\",\n    \"(\",\n    \")\",\n    \"?\",\n    \"*\",\n    \"+\",\n    \"{\",\n  ];\n  return (\n    find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined\n  );\n}\n\nexport function addStartOfInput(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"i\" : \"\";\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`^(?:${pattern.source})`, flags);\n}\n\nexport function addStickyFlag(pattern: RegExp): RegExp {\n  const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`${pattern.source}`, flags);\n}\n\nexport function performRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[],\n): ILexerDefinitionError[] {\n  const errors: ILexerDefinitionError[] = [];\n\n  // some run time checks to help the end users.\n  if (!has(lexerDefinition, DEFAULT_MODE)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        DEFAULT_MODE +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n    });\n  }\n  if (!has(lexerDefinition, MODES)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        MODES +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n    });\n  }\n\n  if (\n    has(lexerDefinition, MODES) &&\n    has(lexerDefinition, DEFAULT_MODE) &&\n    !has(lexerDefinition.modes, lexerDefinition.defaultMode)\n  ) {\n    errors.push({\n      message:\n        `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n        `which does not exist\\n`,\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n    });\n  }\n\n  if (has(lexerDefinition, MODES)) {\n    forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n      forEach(currModeValue, (currTokType, currIdx) => {\n        if (isUndefined(currTokType)) {\n          errors.push({\n            message:\n              `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n              `<${currModeName}> at index: <${currIdx}>\\n`,\n            type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n          });\n        } else if (has(currTokType, \"LONGER_ALT\")) {\n          const longerAlt = isArray(currTokType.LONGER_ALT)\n            ? currTokType.LONGER_ALT\n            : [currTokType.LONGER_ALT];\n          forEach(longerAlt, (currLongerAlt) => {\n            if (\n              !isUndefined(currLongerAlt) &&\n              !includes(currModeValue, currLongerAlt)\n            ) {\n              errors.push({\n                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  return errors;\n}\n\nexport function performWarningRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[],\n): ILexerDefinitionError[] {\n  const warnings = [];\n  let hasAnyLineBreak = false;\n  const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n\n  const concreteTokenTypes = reject(\n    allTokenTypes,\n    (currType) => currType[PATTERN] === Lexer.NA,\n  );\n  const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n  if (trackLines) {\n    forEach(concreteTokenTypes, (tokType) => {\n      const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n      if (currIssue !== false) {\n        const message = buildLineBreakIssueMessage(tokType, currIssue);\n        const warningDescriptor = {\n          message,\n          type: currIssue.issue,\n          tokenType: tokType,\n        };\n        warnings.push(warningDescriptor);\n      } else {\n        // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n        if (has(tokType, \"LINE_BREAKS\")) {\n          if (tokType.LINE_BREAKS === true) {\n            hasAnyLineBreak = true;\n          }\n        } else {\n          if (\n            canMatchCharCode(terminatorCharCodes, tokType.PATTERN as RegExp)\n          ) {\n            hasAnyLineBreak = true;\n          }\n        }\n      }\n    });\n  }\n\n  if (trackLines && !hasAnyLineBreak) {\n    warnings.push({\n      message:\n        \"Warning: No LINE_BREAKS Found.\\n\" +\n        \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n        \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n        \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n    });\n  }\n  return warnings;\n}\n\nexport function cloneEmptyGroups(emptyGroups: {\n  [groupName: string]: IToken;\n}): { [groupName: string]: IToken } {\n  const clonedResult: any = {};\n  const groupKeys = keys(emptyGroups);\n\n  forEach(groupKeys, (currKey) => {\n    const currGroupValue = emptyGroups[currKey];\n\n    /* istanbul ignore else */\n    if (isArray(currGroupValue)) {\n      clonedResult[currKey] = [];\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  });\n\n  return clonedResult;\n}\n\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType: TokenType): boolean {\n  const pattern = tokenType.PATTERN;\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    return false;\n  } else if (isFunction(pattern)) {\n    // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n    return true;\n  } else if (has(pattern, \"exec\")) {\n    // ICustomPattern\n    return true;\n  } else if (isString(pattern)) {\n    return false;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function isShortPattern(pattern: any): number | false {\n  if (isString(pattern) && pattern.length === 1) {\n    return pattern.charCodeAt(0);\n  } else {\n    return false;\n  }\n}\n\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester: ILineTerminatorsTester = {\n  // implements /\\n|\\r\\n?/g.test\n  test: function (text) {\n    const len = text.length;\n    for (let i = this.lastIndex; i < len; i++) {\n      const c = text.charCodeAt(i);\n      if (c === 10) {\n        this.lastIndex = i + 1;\n        return true;\n      } else if (c === 13) {\n        if (text.charCodeAt(i + 1) === 10) {\n          this.lastIndex = i + 2;\n        } else {\n          this.lastIndex = i + 1;\n        }\n        return true;\n      }\n    }\n    return false;\n  },\n\n  lastIndex: 0,\n};\n\nfunction checkLineBreaksIssues(\n  tokType: TokenType,\n  lineTerminatorCharCodes: number[],\n):\n  | {\n      issue:\n        | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n        | LexerDefinitionErrorType.CUSTOM_LINE_BREAK;\n      errMsg?: string;\n    }\n  | false {\n  if (has(tokType, \"LINE_BREAKS\")) {\n    // if the user explicitly declared the line_breaks option we will respect their choice\n    // and assume it is correct.\n    return false;\n  } else {\n    /* istanbul ignore else */\n    if (isRegExp(tokType.PATTERN)) {\n      try {\n        // TODO: why is the casting suddenly needed?\n        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN as RegExp);\n      } catch (e) {\n        /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n        return {\n          issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n          errMsg: (e as Error).message,\n        };\n      }\n      return false;\n    } else if (isString(tokType.PATTERN)) {\n      // string literal patterns can always be analyzed to detect line terminator usage\n      return false;\n    } else if (isCustomPattern(tokType)) {\n      // custom token types\n      return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  }\n}\n\nexport function buildLineBreakIssueMessage(\n  tokType: TokenType,\n  details: {\n    issue:\n      | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n      | LexerDefinitionErrorType.CUSTOM_LINE_BREAK;\n    errMsg?: string;\n  },\n): string {\n  /* istanbul ignore else */\n  if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n    return (\n      \"Warning: unable to identify line terminator usage in pattern.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      `\\t Root cause: ${details.errMsg}.\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\"\n    );\n  } else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n    return (\n      \"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\"\n    );\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nfunction getCharCodes(charsOrCodes: (number | string)[]): number[] {\n  const charCodes = map(charsOrCodes, (numOrString) => {\n    if (isString(numOrString)) {\n      return numOrString.charCodeAt(0);\n    } else {\n      return numOrString;\n    }\n  });\n\n  return charCodes;\n}\n\nfunction addToMapOfArrays<T>(\n  map: Record<number, T[]>,\n  key: number,\n  value: T,\n): void {\n  if (map[key] === undefined) {\n    map[key] = [value];\n  } else {\n    map[key].push(value);\n  }\n}\n\nexport const minOptimizationVal = 256;\n\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap: number[] = [];\nexport function charCodeToOptimizedIndex(charCode: number): number {\n  return charCode < minOptimizationVal\n    ? charCode\n    : charCodeToOptimizedIdxMap[charCode];\n}\n\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n  if (isEmpty(charCodeToOptimizedIdxMap)) {\n    charCodeToOptimizedIdxMap = new Array(65536);\n    for (let i = 0; i < 65536; i++) {\n      charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n    }\n  }\n}\n","import {\n  clone,\n  compact,\n  difference,\n  flatten,\n  forEach,\n  has,\n  includes,\n  isArray,\n  isEmpty,\n  map,\n} from \"lodash-es\";\nimport { IToken, TokenType } from \"@chevrotain/types\";\n\nexport function tokenStructuredMatcher(\n  tokInstance: IToken,\n  tokConstructor: TokenType,\n) {\n  const instanceType = tokInstance.tokenTypeIdx;\n  if (instanceType === tokConstructor.tokenTypeIdx) {\n    return true;\n  } else {\n    return (\n      tokConstructor.isParent === true &&\n      tokConstructor.categoryMatchesMap![instanceType] === true\n    );\n  }\n}\n\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(\n  token: IToken,\n  tokType: TokenType,\n) {\n  return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\n\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass: { [tokenIdx: number]: TokenType } = {};\n\nexport function augmentTokenTypes(tokenTypes: TokenType[]): void {\n  // collect the parent Token Types as well.\n  const tokenTypesAndParents = expandCategories(tokenTypes);\n\n  // add required tokenType and categoryMatches properties\n  assignTokenDefaultProps(tokenTypesAndParents);\n\n  // fill up the categoryMatches\n  assignCategoriesMapProp(tokenTypesAndParents);\n  assignCategoriesTokensProp(tokenTypesAndParents);\n\n  forEach(tokenTypesAndParents, (tokType) => {\n    tokType.isParent = tokType.categoryMatches!.length > 0;\n  });\n}\n\nexport function expandCategories(tokenTypes: TokenType[]): TokenType[] {\n  let result = clone(tokenTypes);\n\n  let categories = tokenTypes;\n  let searching = true;\n  while (searching) {\n    categories = compact(\n      flatten(map(categories, (currTokType) => currTokType.CATEGORIES)),\n    );\n\n    const newCategories = difference(categories, result);\n\n    result = result.concat(newCategories);\n\n    if (isEmpty(newCategories)) {\n      searching = false;\n    } else {\n      categories = newCategories;\n    }\n  }\n  return result;\n}\n\nexport function assignTokenDefaultProps(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    if (!hasShortKeyProperty(currTokType)) {\n      tokenIdxToClass[tokenShortNameIdx] = currTokType;\n      (<any>currTokType).tokenTypeIdx = tokenShortNameIdx++;\n    }\n\n    // CATEGORIES? : TokenType | TokenType[]\n    if (\n      hasCategoriesProperty(currTokType) &&\n      !isArray(currTokType.CATEGORIES)\n      // &&\n      // !isUndefined(currTokType.CATEGORIES.PATTERN)\n    ) {\n      currTokType.CATEGORIES = [currTokType.CATEGORIES as unknown as TokenType];\n    }\n\n    if (!hasCategoriesProperty(currTokType)) {\n      currTokType.CATEGORIES = [];\n    }\n\n    if (!hasExtendingTokensTypesProperty(currTokType)) {\n      currTokType.categoryMatches = [];\n    }\n\n    if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n      currTokType.categoryMatchesMap = {};\n    }\n  });\n}\n\nexport function assignCategoriesTokensProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    // avoid duplications\n    currTokType.categoryMatches = [];\n    forEach(currTokType.categoryMatchesMap!, (val, key) => {\n      currTokType.categoryMatches!.push(\n        tokenIdxToClass[key as unknown as number].tokenTypeIdx!,\n      );\n    });\n  });\n}\n\nexport function assignCategoriesMapProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    singleAssignCategoriesToksMap([], currTokType);\n  });\n}\n\nexport function singleAssignCategoriesToksMap(\n  path: TokenType[],\n  nextNode: TokenType,\n): void {\n  forEach(path, (pathNode) => {\n    nextNode.categoryMatchesMap![pathNode.tokenTypeIdx!] = true;\n  });\n\n  forEach(nextNode.CATEGORIES, (nextCategory) => {\n    const newPath = path.concat(nextNode);\n    // avoids infinite loops due to cyclic categories.\n    if (!includes(newPath, nextCategory)) {\n      singleAssignCategoriesToksMap(newPath, nextCategory);\n    }\n  });\n}\n\nexport function hasShortKeyProperty(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\");\n}\n\nexport function hasCategoriesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"CATEGORIES\");\n}\n\nexport function hasExtendingTokensTypesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"categoryMatches\");\n}\n\nexport function hasExtendingTokensTypesMapProperty(\n  tokType: TokenType,\n): boolean {\n  return has(tokType, \"categoryMatchesMap\");\n}\n\nexport function isTokenType(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\");\n}\n","import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\";\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number,\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset,\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    );\n  },\n};\n","import {\n  analyzeTokenTypes,\n  charCodeToOptimizedIndex,\n  cloneEmptyGroups,\n  DEFAULT_MODE,\n  IAnalyzeResult,\n  IPatternConfig,\n  LineTerminatorOptimizedTester,\n  performRuntimeChecks,\n  performWarningRuntimeChecks,\n  SUPPORT_STICKY,\n  validatePatterns,\n} from \"./lexer.js\";\nimport {\n  assign,\n  clone,\n  forEach,\n  identity,\n  isArray,\n  isEmpty,\n  isUndefined,\n  keys,\n  last,\n  map,\n  noop,\n  reduce,\n  reject,\n} from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport {\n  CustomPatternMatcherFunc,\n  CustomPatternMatcherReturn,\n  ILexerConfig,\n  ILexerDefinitionError,\n  ILexingError,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\n\nexport interface ILexingResult {\n  tokens: IToken[];\n  groups: { [groupName: string]: IToken[] };\n  errors: ILexingError[];\n}\n\nexport enum LexerDefinitionErrorType {\n  MISSING_PATTERN,\n  INVALID_PATTERN,\n  EOI_ANCHOR_FOUND,\n  UNSUPPORTED_FLAGS_FOUND,\n  DUPLICATE_PATTERNS_FOUND,\n  INVALID_GROUP_TYPE_FOUND,\n  PUSH_MODE_DOES_NOT_EXIST,\n  MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n  MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n  MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n  LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n  SOI_ANCHOR_FOUND,\n  EMPTY_MATCH_PATTERN,\n  NO_LINE_BREAKS_FLAGS,\n  UNREACHABLE_PATTERN,\n  IDENTIFY_TERMINATOR,\n  CUSTOM_LINE_BREAK,\n  MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n}\n\nexport interface IRegExpExec {\n  exec: CustomPatternMatcherFunc;\n}\n\nconst DEFAULT_LEXER_CONFIG: Required<ILexerConfig> = {\n  deferDefinitionErrorsHandling: false,\n  positionTracking: \"full\",\n  lineTerminatorsPattern: /\\n|\\r\\n?/g,\n  lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n  ensureOptimizations: false,\n  safeMode: false,\n  errorMessageProvider: defaultLexerErrorProvider,\n  traceInitPerf: false,\n  skipValidations: false,\n  recoveryEnabled: true,\n};\n\nObject.freeze(DEFAULT_LEXER_CONFIG);\n\nexport class Lexer {\n  public static SKIPPED =\n    \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\n\n  public static NA = /NOT_APPLICABLE/;\n  public lexerDefinitionErrors: ILexerDefinitionError[] = [];\n  public lexerDefinitionWarning: ILexerDefinitionError[] = [];\n\n  protected patternIdxToConfig: Record<string, IPatternConfig[]> = {};\n  protected charCodeToPatternIdxToConfig: {\n    [modeName: string]: { [charCode: number]: IPatternConfig[] };\n  } = {};\n\n  protected modes: string[] = [];\n  protected defaultMode!: string;\n  protected emptyGroups: { [groupName: string]: IToken } = {};\n\n  private config: Required<ILexerConfig>;\n  private trackStartLines: boolean = true;\n  private trackEndLines: boolean = true;\n  private hasCustom: boolean = false;\n  private canModeBeOptimized: Record<string, boolean> = {};\n\n  private traceInitPerf!: boolean | number;\n  private traceInitMaxIdent!: number;\n  private traceInitIndent: number;\n\n  constructor(\n    protected lexerDefinition: TokenType[] | IMultiModeLexerDefinition,\n    config: ILexerConfig = DEFAULT_LEXER_CONFIG,\n  ) {\n    if (typeof config === \"boolean\") {\n      throw Error(\n        \"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n          \"a boolean 2nd argument is no longer supported\",\n      );\n    }\n\n    // todo: defaults func?\n    this.config = assign({}, DEFAULT_LEXER_CONFIG, config) as any;\n\n    const traceInitVal = this.config.traceInitPerf;\n    if (traceInitVal === true) {\n      this.traceInitMaxIdent = Infinity;\n      this.traceInitPerf = true;\n    } else if (typeof traceInitVal === \"number\") {\n      this.traceInitMaxIdent = traceInitVal;\n      this.traceInitPerf = true;\n    }\n    this.traceInitIndent = -1;\n\n    this.TRACE_INIT(\"Lexer Constructor\", () => {\n      let actualDefinition!: IMultiModeLexerDefinition;\n      let hasOnlySingleMode = true;\n      this.TRACE_INIT(\"Lexer Config handling\", () => {\n        if (\n          this.config.lineTerminatorsPattern ===\n          DEFAULT_LEXER_CONFIG.lineTerminatorsPattern\n        ) {\n          // optimized built-in implementation for the defaults definition of lineTerminators\n          this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n        } else {\n          if (\n            this.config.lineTerminatorCharacters ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorCharacters\n          ) {\n            throw Error(\n              \"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\",\n            );\n          }\n        }\n\n        if (config.safeMode && config.ensureOptimizations) {\n          throw Error(\n            '\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.',\n          );\n        }\n\n        this.trackStartLines = /full|onlyStart/i.test(\n          this.config.positionTracking,\n        );\n        this.trackEndLines = /full/i.test(this.config.positionTracking);\n\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (isArray(lexerDefinition)) {\n          actualDefinition = {\n            modes: { defaultMode: clone(lexerDefinition) },\n            defaultMode: DEFAULT_MODE,\n          };\n        } else {\n          // no conversion needed, input should already be a IMultiModeLexerDefinition\n          hasOnlySingleMode = false;\n          actualDefinition = clone(<IMultiModeLexerDefinition>lexerDefinition);\n        }\n      });\n\n      if (this.config.skipValidations === false) {\n        this.TRACE_INIT(\"performRuntimeChecks\", () => {\n          this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n            performRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters,\n            ),\n          );\n        });\n\n        this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n          this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(\n            performWarningRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters,\n            ),\n          );\n        });\n      }\n\n      // for extra robustness to avoid throwing an none informative error message\n      actualDefinition.modes = actualDefinition.modes\n        ? actualDefinition.modes\n        : {};\n\n      // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n      // this transformation is to increase robustness in the case of partially invalid lexer definition.\n      forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n        actualDefinition.modes[currModeName] = reject<TokenType>(\n          currModeValue,\n          (currTokType) => isUndefined(currTokType),\n        );\n      });\n\n      const allModeNames = keys(actualDefinition.modes);\n\n      forEach(\n        actualDefinition.modes,\n        (currModDef: TokenType[], currModName) => {\n          this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n            this.modes.push(currModName);\n\n            if (this.config.skipValidations === false) {\n              this.TRACE_INIT(`validatePatterns`, () => {\n                this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n                  validatePatterns(currModDef, allModeNames),\n                );\n              });\n            }\n\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (isEmpty(this.lexerDefinitionErrors)) {\n              augmentTokenTypes(currModDef);\n\n              let currAnalyzeResult!: IAnalyzeResult;\n              this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                  lineTerminatorCharacters:\n                    this.config.lineTerminatorCharacters,\n                  positionTracking: config.positionTracking,\n                  ensureOptimizations: config.ensureOptimizations,\n                  safeMode: config.safeMode,\n                  tracer: this.TRACE_INIT,\n                });\n              });\n\n              this.patternIdxToConfig[currModName] =\n                currAnalyzeResult.patternIdxToConfig;\n\n              this.charCodeToPatternIdxToConfig[currModName] =\n                currAnalyzeResult.charCodeToPatternIdxToConfig;\n\n              this.emptyGroups = assign(\n                {},\n                this.emptyGroups,\n                currAnalyzeResult.emptyGroups,\n              ) as any;\n\n              this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n\n              this.canModeBeOptimized[currModName] =\n                currAnalyzeResult.canBeOptimized;\n            }\n          });\n        },\n      );\n\n      this.defaultMode = actualDefinition.defaultMode;\n\n      if (\n        !isEmpty(this.lexerDefinitionErrors) &&\n        !this.config.deferDefinitionErrorsHandling\n      ) {\n        const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n          return error.message;\n        });\n        const allErrMessagesString = allErrMessages.join(\n          \"-----------------------\\n\",\n        );\n        throw new Error(\n          \"Errors detected in definition of Lexer:\\n\" + allErrMessagesString,\n        );\n      }\n\n      // Only print warning if there are no errors, This will avoid pl\n      forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n        PRINT_WARNING(warningDescriptor.message);\n      });\n\n      this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (SUPPORT_STICKY) {\n          this.chopInput = <any>identity;\n          this.match = this.matchWithTest;\n        } else {\n          this.updateLastIndex = noop;\n          this.match = this.matchWithExec;\n        }\n\n        if (hasOnlySingleMode) {\n          this.handleModes = noop;\n        }\n\n        if (this.trackStartLines === false) {\n          this.computeNewColumn = identity;\n        }\n\n        if (this.trackEndLines === false) {\n          this.updateTokenEndLineColumnLocation = noop;\n        }\n\n        if (/full/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createFullToken;\n        } else if (/onlyStart/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createStartOnlyToken;\n        } else if (/onlyOffset/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createOffsetOnlyToken;\n        } else {\n          throw Error(\n            `Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`,\n          );\n        }\n\n        if (this.hasCustom) {\n          this.addToken = this.addTokenUsingPush;\n          this.handlePayload = this.handlePayloadWithCustom;\n        } else {\n          this.addToken = this.addTokenUsingMemberAccess;\n          this.handlePayload = this.handlePayloadNoCustom;\n        }\n      });\n\n      this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n        const unOptimizedModes = reduce(\n          this.canModeBeOptimized,\n          (cannotBeOptimized, canBeOptimized, modeName) => {\n            if (canBeOptimized === false) {\n              cannotBeOptimized.push(modeName);\n            }\n            return cannotBeOptimized;\n          },\n          [] as string[],\n        );\n\n        if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n          throw Error(\n            `Lexer Modes: < ${unOptimizedModes.join(\n              \", \",\n            )} > cannot be optimized.\\n` +\n              '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n              \"\\t Or inspect the console log for details on how to resolve these issues.\",\n          );\n        }\n      });\n\n      this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n        clearRegExpParserCache();\n      });\n\n      this.TRACE_INIT(\"toFastProperties\", () => {\n        toFastProperties(this);\n      });\n    });\n  }\n\n  public tokenize(\n    text: string,\n    initialMode: string = this.defaultMode,\n  ): ILexingResult {\n    if (!isEmpty(this.lexerDefinitionErrors)) {\n      const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n        return error.message;\n      });\n      const allErrMessagesString = allErrMessages.join(\n        \"-----------------------\\n\",\n      );\n      throw new Error(\n        \"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n          allErrMessagesString,\n      );\n    }\n\n    return this.tokenizeInternal(text, initialMode);\n  }\n\n  // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n  // This is intentional due to performance considerations.\n  // this method also used quite a bit of `!` none null assertions because it is too optimized\n  // for `tsc` to always understand it is \"safe\"\n  private tokenizeInternal(text: string, initialMode: string): ILexingResult {\n    let i,\n      j,\n      k,\n      matchAltImage,\n      longerAlt,\n      matchedImage: string | null,\n      payload,\n      altPayload,\n      imageLength,\n      group,\n      tokType,\n      newToken: IToken,\n      errLength,\n      droppedChar,\n      msg,\n      match;\n    const orgText = text;\n    const orgLength = orgText.length;\n    let offset = 0;\n    let matchedTokensIndex = 0;\n    // initializing the tokensArray to the \"guessed\" size.\n    // guessing too little will still reduce the number of array re-sizes on pushes.\n    // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n    // but would still have a faster runtime by avoiding (All but one) array resizing.\n    const guessedNumberOfTokens = this.hasCustom\n      ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n      : Math.floor(text.length / 10);\n    const matchedTokens = new Array(guessedNumberOfTokens);\n    const errors: ILexingError[] = [];\n    let line = this.trackStartLines ? 1 : undefined;\n    let column = this.trackStartLines ? 1 : undefined;\n    const groups: any = cloneEmptyGroups(this.emptyGroups);\n    const trackLines = this.trackStartLines;\n    const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n\n    let currModePatternsLength = 0;\n    let patternIdxToConfig: IPatternConfig[] = [];\n    let currCharCodeToPatternIdxToConfig: {\n      [charCode: number]: IPatternConfig[];\n    } = [];\n\n    const modeStack: string[] = [];\n\n    const emptyArray: IPatternConfig[] = [];\n    Object.freeze(emptyArray);\n    let getPossiblePatterns!: (charCode: number) => IPatternConfig[];\n\n    function getPossiblePatternsSlow() {\n      return patternIdxToConfig;\n    }\n\n    function getPossiblePatternsOptimized(charCode: number): IPatternConfig[] {\n      const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n      const possiblePatterns =\n        currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n      if (possiblePatterns === undefined) {\n        return emptyArray;\n      } else {\n        return possiblePatterns;\n      }\n    }\n\n    const pop_mode = (popToken: IToken) => {\n      // TODO: perhaps avoid this error in the edge case there is no more input?\n      if (\n        modeStack.length === 1 &&\n        // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n        // So no error should occur.\n        popToken.tokenType.PUSH_MODE === undefined\n      ) {\n        // if we try to pop the last mode there lexer will no longer have ANY mode.\n        // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n        const msg =\n          this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(\n            popToken,\n          );\n\n        errors.push({\n          offset: popToken.startOffset,\n          line: popToken.startLine,\n          column: popToken.startColumn,\n          length: popToken.image.length,\n          message: msg,\n        });\n      } else {\n        modeStack.pop();\n        const newMode = last(modeStack)!;\n        patternIdxToConfig = this.patternIdxToConfig[newMode];\n        currCharCodeToPatternIdxToConfig =\n          this.charCodeToPatternIdxToConfig[newMode];\n        currModePatternsLength = patternIdxToConfig.length;\n        const modeCanBeOptimized =\n          this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n\n        if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n          getPossiblePatterns = getPossiblePatternsOptimized;\n        } else {\n          getPossiblePatterns = getPossiblePatternsSlow;\n        }\n      }\n    };\n\n    function push_mode(this: Lexer, newMode: string) {\n      modeStack.push(newMode);\n      currCharCodeToPatternIdxToConfig =\n        this.charCodeToPatternIdxToConfig[newMode];\n\n      patternIdxToConfig = this.patternIdxToConfig[newMode];\n      currModePatternsLength = patternIdxToConfig.length;\n\n      currModePatternsLength = patternIdxToConfig.length;\n      const modeCanBeOptimized =\n        this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n\n      if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n        getPossiblePatterns = getPossiblePatternsOptimized;\n      } else {\n        getPossiblePatterns = getPossiblePatternsSlow;\n      }\n    }\n\n    // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n    // seem to matter performance wise.\n    push_mode.call(this, initialMode);\n\n    let currConfig!: IPatternConfig;\n\n    const recoveryEnabled = this.config.recoveryEnabled;\n\n    while (offset < orgLength) {\n      matchedImage = null;\n\n      const nextCharCode = orgText.charCodeAt(offset);\n      const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n      const chosenPatternsLength = chosenPatternIdxToConfig.length;\n\n      for (i = 0; i < chosenPatternsLength; i++) {\n        currConfig = chosenPatternIdxToConfig[i];\n        const currPattern = currConfig.pattern;\n        payload = null;\n\n        // manually in-lined because > 600 chars won't be in-lined in V8\n        const singleCharCode = currConfig.short;\n        if (singleCharCode !== false) {\n          if (nextCharCode === singleCharCode) {\n            // single character string\n            matchedImage = currPattern as string;\n          }\n        } else if (currConfig.isCustom === true) {\n          match = (currPattern as IRegExpExec).exec(\n            orgText,\n            offset,\n            matchedTokens,\n            groups,\n          );\n          if (match !== null) {\n            matchedImage = match[0];\n            if ((match as CustomPatternMatcherReturn).payload !== undefined) {\n              payload = (match as CustomPatternMatcherReturn).payload;\n            }\n          } else {\n            matchedImage = null;\n          }\n        } else {\n          this.updateLastIndex(currPattern as RegExp, offset);\n          matchedImage = this.match(currPattern as RegExp, text, offset);\n        }\n\n        if (matchedImage !== null) {\n          // even though this pattern matched we must try a another longer alternative.\n          // this can be used to prioritize keywords over identifiers\n          longerAlt = currConfig.longerAlt;\n          if (longerAlt !== undefined) {\n            // TODO: micro optimize, avoid extra prop access\n            // by saving/linking longerAlt on the original config?\n            const longerAltLength = longerAlt.length;\n            for (k = 0; k < longerAltLength; k++) {\n              const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n              const longerAltPattern = longerAltConfig.pattern;\n              altPayload = null;\n\n              // single Char can never be a longer alt so no need to test it.\n              // manually in-lined because > 600 chars won't be in-lined in V8\n              if (longerAltConfig.isCustom === true) {\n                match = (longerAltPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups,\n                );\n                if (match !== null) {\n                  matchAltImage = match[0];\n                  if (\n                    (match as CustomPatternMatcherReturn).payload !== undefined\n                  ) {\n                    altPayload = (match as CustomPatternMatcherReturn).payload;\n                  }\n                } else {\n                  matchAltImage = null;\n                }\n              } else {\n                this.updateLastIndex(longerAltPattern as RegExp, offset);\n                matchAltImage = this.match(\n                  longerAltPattern as RegExp,\n                  text,\n                  offset,\n                );\n              }\n\n              if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                matchedImage = matchAltImage;\n                payload = altPayload;\n                currConfig = longerAltConfig;\n                // Exit the loop early after matching one of the longer alternatives\n                // The first matched alternative takes precedence\n                break;\n              }\n            }\n          }\n          break;\n        }\n      }\n\n      // successful match\n      if (matchedImage !== null) {\n        imageLength = matchedImage.length;\n        group = currConfig.group;\n        if (group !== undefined) {\n          tokType = currConfig.tokenTypeIdx;\n          // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n          // createFullToken method\n          newToken = this.createTokenInstance(\n            matchedImage,\n            offset,\n            tokType,\n            currConfig.tokenType,\n            line,\n            column,\n            imageLength,\n          );\n\n          this.handlePayload(newToken, payload);\n\n          // TODO: optimize NOOP in case there are no special groups?\n          if (group === false) {\n            matchedTokensIndex = this.addToken(\n              matchedTokens,\n              matchedTokensIndex,\n              newToken,\n            );\n          } else {\n            groups[group].push(newToken);\n          }\n        }\n        text = this.chopInput(text, imageLength);\n        offset = offset + imageLength;\n\n        // TODO: with newlines the column may be assigned twice\n        column = this.computeNewColumn(column!, imageLength);\n\n        if (trackLines === true && currConfig.canLineTerminator === true) {\n          let numOfLTsInMatch = 0;\n          let foundTerminator;\n          let lastLTEndOffset: number;\n          lineTerminatorPattern.lastIndex = 0;\n          do {\n            foundTerminator = lineTerminatorPattern.test(matchedImage);\n            if (foundTerminator === true) {\n              lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n              numOfLTsInMatch++;\n            }\n          } while (foundTerminator === true);\n\n          if (numOfLTsInMatch !== 0) {\n            line = line! + numOfLTsInMatch;\n            column = imageLength - lastLTEndOffset!;\n            this.updateTokenEndLineColumnLocation(\n              newToken!,\n              group!,\n              lastLTEndOffset!,\n              numOfLTsInMatch,\n              line,\n              column,\n              imageLength,\n            );\n          }\n        }\n        // will be NOOP if no modes present\n        this.handleModes(currConfig, pop_mode, push_mode, newToken!);\n      } else {\n        // error recovery, drop characters until we identify a valid token's start point\n        const errorStartOffset = offset;\n        const errorLine = line;\n        const errorColumn = column;\n        let foundResyncPoint = recoveryEnabled === false;\n\n        while (foundResyncPoint === false && offset < orgLength) {\n          // Identity Func (when sticky flag is enabled)\n          text = this.chopInput(text, 1);\n          offset++;\n          for (j = 0; j < currModePatternsLength; j++) {\n            const currConfig = patternIdxToConfig[j];\n            const currPattern = currConfig.pattern;\n\n            // manually in-lined because > 600 chars won't be in-lined in V8\n            const singleCharCode = currConfig.short;\n            if (singleCharCode !== false) {\n              if (orgText.charCodeAt(offset) === singleCharCode) {\n                // single character string\n                foundResyncPoint = true;\n              }\n            } else if (currConfig.isCustom === true) {\n              foundResyncPoint =\n                (currPattern as IRegExpExec).exec(\n                  orgText,\n                  offset,\n                  matchedTokens,\n                  groups,\n                ) !== null;\n            } else {\n              this.updateLastIndex(currPattern as RegExp, offset);\n              foundResyncPoint = (currPattern as RegExp).exec(text) !== null;\n            }\n\n            if (foundResyncPoint === true) {\n              break;\n            }\n          }\n        }\n\n        errLength = offset - errorStartOffset;\n        column = this.computeNewColumn(column!, errLength);\n        // at this point we either re-synced or reached the end of the input text\n        msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(\n          orgText,\n          errorStartOffset,\n          errLength,\n          errorLine,\n          errorColumn,\n        );\n        errors.push({\n          offset: errorStartOffset,\n          line: errorLine,\n          column: errorColumn,\n          length: errLength,\n          message: msg,\n        });\n\n        if (recoveryEnabled === false) {\n          break;\n        }\n      }\n    }\n\n    // if we do have custom patterns which push directly into the\n    // TODO: custom tokens should not push directly??\n    if (!this.hasCustom) {\n      // if we guessed a too large size for the tokens array this will shrink it to the right size.\n      matchedTokens.length = matchedTokensIndex;\n    }\n\n    return {\n      tokens: matchedTokens,\n      groups: groups,\n      errors: errors,\n    };\n  }\n\n  private handleModes(\n    config: IPatternConfig,\n    pop_mode: (tok: IToken) => void,\n    push_mode: (this: Lexer, pushMode: string) => void,\n    newToken: IToken,\n  ) {\n    if (config.pop === true) {\n      // need to save the PUSH_MODE property as if the mode is popped\n      // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n      const pushMode = config.push;\n      pop_mode(newToken);\n      if (pushMode !== undefined) {\n        push_mode.call(this, pushMode);\n      }\n    } else if (config.push !== undefined) {\n      push_mode.call(this, config.push);\n    }\n  }\n\n  private chopInput(text: string, length: number): string {\n    return text.substring(length);\n  }\n\n  private updateLastIndex(regExp: RegExp, newLastIndex: number): void {\n    regExp.lastIndex = newLastIndex;\n  }\n\n  // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n  private updateTokenEndLineColumnLocation(\n    newToken: IToken,\n    group: string | false,\n    lastLTIdx: number,\n    numOfLTsInMatch: number,\n    line: number,\n    column: number,\n    imageLength: number,\n  ): void {\n    let lastCharIsLT, fixForEndingInLT;\n    if (group !== undefined) {\n      // a none skipped multi line Token, need to update endLine/endColumn\n      lastCharIsLT = lastLTIdx === imageLength - 1;\n      fixForEndingInLT = lastCharIsLT ? -1 : 0;\n      if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n        // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n        newToken.endLine = line + fixForEndingInLT;\n        // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n        // inclusive to exclusive range.\n        newToken.endColumn = column - 1 + -fixForEndingInLT;\n      }\n      // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n    }\n  }\n\n  private computeNewColumn(oldColumn: number, imageLength: number) {\n    return oldColumn + imageLength;\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private createTokenInstance!: (...args: any[]) => IToken;\n\n  private createOffsetOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n  ) {\n    return {\n      image,\n      startOffset,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  private createStartOnlyToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number,\n  ) {\n    return {\n      image,\n      startOffset,\n      startLine,\n      startColumn,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  private createFullToken(\n    image: string,\n    startOffset: number,\n    tokenTypeIdx: number,\n    tokenType: TokenType,\n    startLine: number,\n    startColumn: number,\n    imageLength: number,\n  ): IToken {\n    return {\n      image,\n      startOffset,\n      endOffset: startOffset + imageLength - 1,\n      startLine,\n      endLine: startLine,\n      startColumn,\n      endColumn: startColumn + imageLength - 1,\n      tokenTypeIdx,\n      tokenType,\n    };\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private addToken!: (\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ) => number;\n\n  private addTokenUsingPush(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ): number {\n    tokenVector.push(tokenToAdd);\n    return index;\n  }\n\n  private addTokenUsingMemberAccess(\n    tokenVector: IToken[],\n    index: number,\n    tokenToAdd: IToken,\n  ): number {\n    tokenVector[index] = tokenToAdd;\n    index++;\n    return index;\n  }\n\n  // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n  private handlePayload: (token: IToken, payload: any) => void;\n\n  private handlePayloadNoCustom(token: IToken, payload: any): void {}\n\n  private handlePayloadWithCustom(token: IToken, payload: any): void {\n    if (payload !== null) {\n      token.payload = payload;\n    }\n  }\n\n  // place holder to be replaced with chosen alternative at runtime\n  private match!: (\n    pattern: RegExp,\n    text: string,\n    offset: number,\n  ) => string | null;\n\n  private matchWithTest(\n    pattern: RegExp,\n    text: string,\n    offset: number,\n  ): string | null {\n    const found = pattern.test(text);\n    if (found === true) {\n      return text.substring(offset, pattern.lastIndex);\n    }\n    return null;\n  }\n\n  private matchWithExec(pattern: RegExp, text: string): string | null {\n    const regExpArray = pattern.exec(text);\n    return regExpArray !== null ? regExpArray[0] : null;\n  }\n\n  // Duplicated from the parser's perf trace trait to allow future extraction\n  // of the lexer to a separate package.\n  TRACE_INIT = <T>(phaseDesc: string, phaseImpl: () => T): T => {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++;\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`);\n      }\n      const { time, value } = timer(phaseImpl);\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log;\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n      }\n      this.traceInitIndent--;\n      return value;\n    } else {\n      return phaseImpl();\n    }\n  };\n}\n","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nimport { IToken, ITokenConfig, TokenType } from \"@chevrotain/types\";\n\nexport function tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\nexport function tokenName(tokType: TokenType): string {\n  return tokType.name;\n}\n\nexport function hasTokenLabel(\n  obj: TokenType,\n): obj is TokenType & Pick<Required<TokenType>, \"LABEL\"> {\n  return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\n\nexport function createToken(config: ITokenConfig): TokenType {\n  return createTokenInternal(config);\n}\n\nfunction createTokenInternal(config: ITokenConfig): TokenType {\n  const pattern = config.pattern;\n\n  const tokenType: TokenType = <any>{};\n  tokenType.name = config.name;\n\n  if (!isUndefined(pattern)) {\n    tokenType.PATTERN = pattern;\n  }\n\n  if (has(config, PARENT)) {\n    throw (\n      \"The parent property is no longer supported.\\n\" +\n      \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\"\n    );\n  }\n\n  if (has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = <any>config[CATEGORIES];\n  }\n\n  augmentTokenTypes([tokenType]);\n\n  if (has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL];\n  }\n\n  if (has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP];\n  }\n\n  if (has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE];\n  }\n\n  if (has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE];\n  }\n\n  if (has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT];\n  }\n\n  if (has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS];\n  }\n\n  if (has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n  }\n\n  return tokenType;\n}\n\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\n\nexport function createTokenInstance(\n  tokType: TokenType,\n  image: string,\n  startOffset: number,\n  endOffset: number,\n  startLine: number,\n  endLine: number,\n  startColumn: number,\n  endColumn: number,\n): IToken {\n  return {\n    image,\n    startOffset,\n    endOffset,\n    startLine,\n    endLine,\n    startColumn,\n    endColumn,\n    tokenTypeIdx: (<any>tokType).tokenTypeIdx,\n    tokenType: tokType,\n  };\n}\n\nexport function tokenMatcher(token: IToken, tokType: TokenType): boolean {\n  return tokenStructuredMatcher(token, tokType);\n}\n","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport {\n  Alternation,\n  getProductionDslName,\n  NonTerminal,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  IParserErrorMessageProvider,\n  IProductionWithOccurrence,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n} from \"./grammar/types.js\";\n\nexport const defaultParserErrorProvider: IParserErrorMessageProvider = {\n  buildMismatchTokenMessage({ expected, actual, previous, ruleName }): string {\n    const hasLabel = hasTokenLabel(expected);\n    const expectedMsg = hasLabel\n      ? `--> ${tokenLabel(expected)} <--`\n      : `token of type --> ${expected.name} <--`;\n\n    const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n\n    return msg;\n  },\n\n  buildNotAllInputParsedMessage({ firstRedundant, ruleName }): string {\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n\n  buildNoViableAltMessage({\n    expectedPathsPerAlt,\n    actual,\n    previous,\n    customUserDescription,\n    ruleName,\n  }): string {\n    const errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image;\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      const allLookAheadPaths = reduce(\n        expectedPathsPerAlt,\n        (result, currAltPaths) => result.concat(currAltPaths),\n        [] as TokenType[][],\n      );\n      const nextValidTokenSequences = map(\n        allLookAheadPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \", \",\n          )}]`,\n      );\n      const nextValidSequenceItems = map(\n        nextValidTokenSequences,\n        (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`,\n      );\n      const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\n        \"\\n\",\n      )}`;\n\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n\n  buildEarlyExitMessage({\n    expectedIterationPaths,\n    actual,\n    customUserDescription,\n    ruleName,\n  }): string {\n    const errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    const actualText = first(actual)!.image;\n    const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      const nextValidTokenSequences = map(\n        expectedIterationPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \",\",\n          )}]`,\n      );\n      const calculatedDescription =\n        `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n        `<${nextValidTokenSequences.join(\" ,\")}>`;\n\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n};\n\nObject.freeze(defaultParserErrorProvider);\n\nexport const defaultGrammarResolverErrorProvider: IGrammarResolverErrorMessageProvider =\n  {\n    buildRuleNotFoundError(\n      topLevelRule: Rule,\n      undefinedRule: NonTerminal,\n    ): string {\n      const msg =\n        \"Invalid grammar, reference to a rule which is not defined: ->\" +\n        undefinedRule.nonTerminalName +\n        \"<-\\n\" +\n        \"inside top level rule: ->\" +\n        topLevelRule.name +\n        \"<-\";\n      return msg;\n    },\n  };\n\nexport const defaultGrammarValidatorErrorProvider: IGrammarValidatorErrorMessageProvider =\n  {\n    buildDuplicateFoundError(\n      topLevelRule: Rule,\n      duplicateProds: IProductionWithOccurrence[],\n    ): string {\n      function getExtraProductionArgument(\n        prod: IProductionWithOccurrence,\n      ): string {\n        if (prod instanceof Terminal) {\n          return prod.terminalType.name;\n        } else if (prod instanceof NonTerminal) {\n          return prod.nonTerminalName;\n        } else {\n          return \"\";\n        }\n      }\n\n      const topLevelName = topLevelRule.name;\n      const duplicateProd = first(duplicateProds)!;\n      const index = duplicateProd.idx;\n      const dslName = getProductionDslName(duplicateProd);\n      const extraArgument = getExtraProductionArgument(duplicateProd);\n\n      const hasExplicitIndex = index > 0;\n      let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${\n        extraArgument ? `with argument: ->${extraArgument}<-` : \"\"\n      }\n                  appears more than once (${\n                    duplicateProds.length\n                  } times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n\n      // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n      msg = msg.replace(/[ \\t]+/g, \" \");\n      msg = msg.replace(/\\s\\s+/g, \"\\n\");\n\n      return msg;\n    },\n\n    buildNamespaceConflictError(rule: Rule): string {\n      const errMsg =\n        `Namespace conflict found in grammar.\\n` +\n        `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n        `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n        `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n        `and Non-Terminal names start with a lower case letter.`;\n\n      return errMsg;\n    },\n\n    buildAlternationPrefixAmbiguityError(options: {\n      topLevelRule: Rule;\n      prefixPath: TokenType[];\n      ambiguityIndices: number[];\n      alternation: Alternation;\n    }): string {\n      const pathMsg = map(options.prefixPath, (currTok) =>\n        tokenLabel(currTok),\n      ).join(\", \");\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n      const errMsg =\n        `Ambiguous alternatives: <${options.ambiguityIndices.join(\n          \" ,\",\n        )}> due to common lookahead prefix\\n` +\n        `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n        `For Further details.`;\n\n      return errMsg;\n    },\n\n    buildAlternationAmbiguityError(options: {\n      topLevelRule: Rule;\n      prefixPath: TokenType[];\n      ambiguityIndices: number[];\n      alternation: Alternation;\n    }): string {\n      const pathMsg = map(options.prefixPath, (currtok) =>\n        tokenLabel(currtok),\n      ).join(\", \");\n      const occurrence =\n        options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n      let currMessage =\n        `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\n          \" ,\",\n        )}> in <OR${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n\n      currMessage =\n        currMessage +\n        `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n        `For Further details.`;\n      return currMessage;\n    },\n\n    buildEmptyRepetitionError(options: {\n      topLevelRule: Rule;\n      repetition: IProductionWithOccurrence;\n    }): string {\n      let dslName = getProductionDslName(options.repetition);\n      if (options.repetition.idx !== 0) {\n        dslName += options.repetition.idx;\n      }\n\n      const errMsg =\n        `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n        `This could lead to an infinite loop.`;\n\n      return errMsg;\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options: {\n      tokenType: TokenType;\n      expectedPattern: RegExp;\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\";\n    },\n\n    buildEmptyAlternationError(options: {\n      topLevelRule: Rule;\n      alternation: Alternation;\n      emptyChoiceIdx: number;\n    }): string {\n      const errMsg =\n        `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n        ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n        `Only the last alternative may be an empty alternative.`;\n\n      return errMsg;\n    },\n\n    buildTooManyAlternativesError(options: {\n      topLevelRule: Rule;\n      alternation: Alternation;\n    }): string {\n      const errMsg =\n        `An Alternation cannot have more than 256 alternatives:\\n` +\n        `<OR${options.alternation.idx}> inside <${\n          options.topLevelRule.name\n        }> Rule.\\n has ${\n          options.alternation.definition.length + 1\n        } alternatives.`;\n\n      return errMsg;\n    },\n\n    buildLeftRecursionError(options: {\n      topLevelRule: Rule;\n      leftRecursionPath: Rule[];\n    }): string {\n      const ruleName = options.topLevelRule.name;\n      const pathNames = map(\n        options.leftRecursionPath,\n        (currRule) => currRule.name,\n      );\n      const leftRecursivePath = `${ruleName} --> ${pathNames\n        .concat([ruleName])\n        .join(\" --> \")}`;\n      const errMsg =\n        `Left Recursion found in grammar.\\n` +\n        `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n        `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n        ` To fix this refactor your grammar to remove the left recursion.\\n` +\n        `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n\n      return errMsg;\n    },\n\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options: {\n      topLevelRule: Rule;\n      expectedPattern: RegExp;\n    }): string {\n      /* istanbul ignore next */\n      return \"deprecated\";\n    },\n\n    buildDuplicateRuleNameError(options: {\n      topLevelRule: Rule | string;\n      grammarName: string;\n    }): string {\n      let ruleName;\n      if (options.topLevelRule instanceof Rule) {\n        ruleName = options.topLevelRule.name;\n      } else {\n        ruleName = options.topLevelRule;\n      }\n\n      const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n\n      return errMsg;\n    },\n  };\n","import {\n  IParserUnresolvedRefDefinitionError,\n  ParserDefinitionErrorType,\n} from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor, NonTerminal, Rule } from \"@chevrotain/gast\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IParserDefinitionError,\n} from \"./types.js\";\n\nexport function resolveGrammar(\n  topLevels: Record<string, Rule>,\n  errMsgProvider: IGrammarResolverErrorMessageProvider,\n): IParserDefinitionError[] {\n  const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n  refResolver.resolveRefs();\n  return refResolver.errors;\n}\n\nexport class GastRefResolverVisitor extends GAstVisitor {\n  public errors: IParserUnresolvedRefDefinitionError[] = [];\n  private currTopLevel: Rule;\n\n  constructor(\n    private nameToTopRule: Record<string, Rule>,\n    private errMsgProvider: IGrammarResolverErrorMessageProvider,\n  ) {\n    super();\n  }\n\n  public resolveRefs(): void {\n    forEach(values(this.nameToTopRule), (prod) => {\n      this.currTopLevel = prod;\n      prod.accept(this);\n    });\n  }\n\n  public visitNonTerminal(node: NonTerminal): void {\n    const ref = this.nameToTopRule[node.nonTerminalName];\n\n    if (!ref) {\n      const msg = this.errMsgProvider.buildRuleNotFoundError(\n        this.currTopLevel,\n        node,\n      );\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName,\n      });\n    } else {\n      node.referencedRule = ref;\n    }\n  }\n}\n","import {\n  clone,\n  drop,\n  dropRight,\n  first as _first,\n  forEach,\n  isEmpty,\n  last,\n} from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { TokenMatcher } from \"../parser/parser.js\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  IGrammarPath,\n  IProduction,\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\n\nexport abstract class AbstractNextPossibleTokensWalker extends RestWalker {\n  protected possibleTokTypes: TokenType[] = [];\n  protected ruleStack: string[];\n  protected occurrenceStack: number[];\n\n  protected nextProductionName = \"\";\n  protected nextProductionOccurrence = 0;\n  protected found = false;\n  protected isAtEndOfPath = false;\n\n  constructor(\n    protected topProd: Rule,\n    protected path: IGrammarPath,\n  ) {\n    super();\n  }\n\n  startWalking(): TokenType[] {\n    this.found = false;\n\n    if (this.path.ruleStack[0] !== this.topProd.name) {\n      throw Error(\"The path does not start with the walker's top Rule!\");\n    }\n\n    // immutable for the win\n    this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n    this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n\n    // already verified that the first production is valid, we now seek the 2nd production\n    this.ruleStack.pop();\n    this.occurrenceStack.pop();\n\n    this.updateExpectedNext();\n    this.walk(this.topProd);\n\n    return this.possibleTokTypes;\n  }\n\n  walk(\n    prod: { definition: IProduction[] },\n    prevRest: IProduction[] = [],\n  ): void {\n    // stop scanning once we found the path\n    if (!this.found) {\n      super.walk(prod, prevRest);\n    }\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    // found the next production, need to keep walking in it\n    if (\n      refProd.referencedRule.name === this.nextProductionName &&\n      refProd.idx === this.nextProductionOccurrence\n    ) {\n      const fullRest = currRest.concat(prevRest);\n      this.updateExpectedNext();\n      this.walk(refProd.referencedRule, <any>fullRest);\n    }\n  }\n\n  updateExpectedNext(): void {\n    // need to consume the Terminal\n    if (isEmpty(this.ruleStack)) {\n      // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n      // really seeking is the last Terminal...\n      this.nextProductionName = \"\";\n      this.nextProductionOccurrence = 0;\n      this.isAtEndOfPath = true;\n    } else {\n      this.nextProductionName = this.ruleStack.pop()!;\n      this.nextProductionOccurrence = this.occurrenceStack.pop()!;\n    }\n  }\n}\n\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n  private nextTerminalName = \"\";\n  private nextTerminalOccurrence = 0;\n\n  constructor(\n    topProd: Rule,\n    protected path: ITokenGrammarPath,\n  ) {\n    super(topProd, path);\n    this.nextTerminalName = this.path.lastTok.name;\n    this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      this.isAtEndOfPath &&\n      terminal.terminalType.name === this.nextTerminalName &&\n      terminal.idx === this.nextTerminalOccurrence &&\n      !this.found\n    ) {\n      const fullRest = currRest.concat(prevRest);\n      const restProd = new Alternative({ definition: fullRest });\n      this.possibleTokTypes = first(restProd);\n      this.found = true;\n    }\n  }\n}\n\nexport type AlternativesFirstTokens = TokenType[][];\n\nexport interface IFirstAfterRepetition {\n  token: TokenType | undefined;\n  occurrence: number | undefined;\n  isEndOfRule: boolean | undefined;\n}\n\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n  protected result: IFirstAfterRepetition = {\n    token: undefined,\n    occurrence: undefined,\n    isEndOfRule: undefined,\n  };\n\n  constructor(\n    protected topRule: Rule,\n    protected occurrence: number,\n  ) {\n    super();\n  }\n\n  startWalking(): IFirstAfterRepetition {\n    this.walk(this.topRule);\n    return this.result;\n  }\n}\n\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (manyProd.idx === this.occurrence) {\n      const firstAfterMany = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterMany === undefined;\n      if (firstAfterMany instanceof Terminal) {\n        this.result.token = firstAfterMany.terminalType;\n        this.result.occurrence = firstAfterMany.idx;\n      }\n    } else {\n      super.walkMany(manyProd, currRest, prevRest);\n    }\n  }\n}\n\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (manySepProd.idx === this.occurrence) {\n      const firstAfterManySep = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterManySep === undefined;\n      if (firstAfterManySep instanceof Terminal) {\n        this.result.token = firstAfterManySep.terminalType;\n        this.result.occurrence = firstAfterManySep.idx;\n      }\n    } else {\n      super.walkManySep(manySepProd, currRest, prevRest);\n    }\n  }\n}\n\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (atLeastOneProd.idx === this.occurrence) {\n      const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n      this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n      if (firstAfterAtLeastOne instanceof Terminal) {\n        this.result.token = firstAfterAtLeastOne.terminalType;\n        this.result.occurrence = firstAfterAtLeastOne.idx;\n      }\n    } else {\n      super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n    }\n  }\n}\n\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOneSep(\n    atleastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (atleastOneSepProd.idx === this.occurrence) {\n      const firstAfterfirstAfterAtLeastOneSep = _first(\n        currRest.concat(prevRest),\n      );\n      this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n      if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n        this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n        this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n      }\n    } else {\n      super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n    }\n  }\n}\n\nexport interface PartialPathAndSuffixes {\n  partialPath: TokenType[];\n  suffixDef: IProduction[];\n}\n\nexport function possiblePathsFrom(\n  targetDef: IProduction[],\n  maxLength: number,\n  currPath: TokenType[] = [],\n): PartialPathAndSuffixes[] {\n  // avoid side effects\n  currPath = clone(currPath);\n  let result: PartialPathAndSuffixes[] = [];\n  let i = 0;\n\n  // TODO: avoid inner funcs\n  function remainingPathWith(nextDef: IProduction[]) {\n    return nextDef.concat(drop(targetDef, i + 1));\n  }\n\n  // TODO: avoid inner funcs\n  function getAlternativesForProd(definition: IProduction[]) {\n    const alternatives = possiblePathsFrom(\n      remainingPathWith(definition),\n      maxLength,\n      currPath,\n    );\n    return result.concat(alternatives);\n  }\n\n  /**\n   * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n   * following (rest) of the targetDef.\n   *\n   * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n   * the optional production.\n   */\n  while (currPath.length < maxLength && i < targetDef.length) {\n    const prod = targetDef[i];\n\n    /* istanbul ignore else */\n    if (prod instanceof Alternative) {\n      return getAlternativesForProd(prod.definition);\n    } else if (prod instanceof NonTerminal) {\n      return getAlternativesForProd(prod.definition);\n    } else if (prod instanceof Option) {\n      result = getAlternativesForProd(prod.definition);\n    } else if (prod instanceof RepetitionMandatory) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition,\n        }),\n      ]);\n      return getAlternativesForProd(newDef);\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      const newDef = [\n        new Alternative({ definition: prod.definition }),\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition,\n          ),\n        }),\n      ];\n      return getAlternativesForProd(newDef);\n    } else if (prod instanceof RepetitionWithSeparator) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition,\n          ),\n        }),\n      ]);\n      result = getAlternativesForProd(newDef);\n    } else if (prod instanceof Repetition) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition,\n        }),\n      ]);\n      result = getAlternativesForProd(newDef);\n    } else if (prod instanceof Alternation) {\n      forEach(prod.definition, (currAlt) => {\n        // TODO: this is a limited check for empty alternatives\n        //   It would prevent a common case of infinite loops during parser initialization.\n        //   However **in-directly** empty alternatives may still cause issues.\n        if (isEmpty(currAlt.definition) === false) {\n          result = getAlternativesForProd(currAlt.definition);\n        }\n      });\n      return result;\n    } else if (prod instanceof Terminal) {\n      currPath.push(prod.terminalType);\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n\n    i++;\n  }\n  result.push({\n    partialPath: currPath,\n    suffixDef: drop(targetDef, i),\n  });\n\n  return result;\n}\n\ninterface IPathToExamine {\n  idx: number;\n  def: IProduction[];\n  ruleStack: string[];\n  occurrenceStack: number[];\n}\n\nexport function nextPossibleTokensAfter(\n  initialDef: IProduction[],\n  tokenVector: IToken[],\n  tokMatcher: TokenMatcher,\n  maxLookAhead: number,\n): ISyntacticContentAssistPath[] {\n  const EXIT_NON_TERMINAL: any = \"EXIT_NONE_TERMINAL\";\n  // to avoid creating a new Array each time.\n  const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n  const EXIT_ALTERNATIVE: any = \"EXIT_ALTERNATIVE\";\n  let foundCompletePath = false;\n\n  const tokenVectorLength = tokenVector.length;\n  const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n\n  const result: ISyntacticContentAssistPath[] = [];\n\n  const possiblePaths: IPathToExamine[] = [];\n  possiblePaths.push({\n    idx: -1,\n    def: initialDef,\n    ruleStack: [],\n    occurrenceStack: [],\n  });\n\n  while (!isEmpty(possiblePaths)) {\n    const currPath = possiblePaths.pop()!;\n\n    // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n    if (currPath === EXIT_ALTERNATIVE) {\n      if (\n        foundCompletePath &&\n        last(possiblePaths)!.idx <= minimalAlternativesIndex\n      ) {\n        // remove irrelevant alternative\n        possiblePaths.pop();\n      }\n      continue;\n    }\n\n    const currDef = currPath.def;\n    const currIdx = currPath.idx;\n    const currRuleStack = currPath.ruleStack;\n    const currOccurrenceStack = currPath.occurrenceStack;\n\n    // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n    if (isEmpty(currDef)) {\n      continue;\n    }\n\n    const prod = currDef[0];\n    /* istanbul ignore else */\n    if (prod === EXIT_NON_TERMINAL) {\n      const nextPath = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: dropRight(currRuleStack),\n        occurrenceStack: dropRight(currOccurrenceStack),\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof Terminal) {\n      /* istanbul ignore else */\n      if (currIdx < tokenVectorLength - 1) {\n        const nextIdx = currIdx + 1;\n        const actualToken = tokenVector[nextIdx];\n        if (tokMatcher!(actualToken, prod.terminalType)) {\n          const nextPath = {\n            idx: nextIdx,\n            def: drop(currDef),\n            ruleStack: currRuleStack,\n            occurrenceStack: currOccurrenceStack,\n          };\n          possiblePaths.push(nextPath);\n        }\n        // end of the line\n      } else if (currIdx === tokenVectorLength - 1) {\n        // IGNORE ABOVE ELSE\n        result.push({\n          nextTokenType: prod.terminalType,\n          nextTokenOccurrence: prod.idx,\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack,\n        });\n        foundCompletePath = true;\n      } else {\n        throw Error(\"non exhaustive match\");\n      }\n    } else if (prod instanceof NonTerminal) {\n      const newRuleStack = clone(currRuleStack);\n      newRuleStack.push(prod.nonTerminalName);\n\n      const newOccurrenceStack = clone(currOccurrenceStack);\n      newOccurrenceStack.push(prod.idx);\n\n      const nextPath = {\n        idx: currIdx,\n        def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n        ruleStack: newRuleStack,\n        occurrenceStack: newOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof Option) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      const nextPathWith = {\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof RepetitionMandatory) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const secondIteration = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      const separatorGast = new Terminal({\n        terminalType: prod.separator,\n      });\n      const secondIteration = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n      const nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPath);\n    } else if (prod instanceof RepetitionWithSeparator) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      const separatorGast = new Terminal({\n        terminalType: prod.separator,\n      });\n      const nthRepetition = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof Repetition) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      const nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWithout);\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE);\n\n      // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n      const nthRepetition = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx,\n      });\n      const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n      const nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      };\n      possiblePaths.push(nextPathWith);\n    } else if (prod instanceof Alternation) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      for (let i = prod.definition.length - 1; i >= 0; i--) {\n        const currAlt: any = prod.definition[i];\n        const currAltPath = {\n          idx: currIdx,\n          def: currAlt.definition.concat(drop(currDef)),\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack,\n        };\n        possiblePaths.push(currAltPath);\n        possiblePaths.push(EXIT_ALTERNATIVE);\n      }\n    } else if (prod instanceof Alternative) {\n      possiblePaths.push({\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack,\n      });\n    } else if (prod instanceof Rule) {\n      // last because we should only encounter at most a single one of these per invocation.\n      possiblePaths.push(\n        expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack),\n      );\n    } else {\n      throw Error(\"non exhaustive match\");\n    }\n  }\n  return result;\n}\n\nfunction expandTopLevelRule(\n  topRule: Rule,\n  currIdx: number,\n  currRuleStack: string[],\n  currOccurrenceStack: number[],\n): IPathToExamine {\n  const newRuleStack = clone(currRuleStack);\n  newRuleStack.push(topRule.name);\n\n  const newCurrOccurrenceStack = clone(currOccurrenceStack);\n  // top rule is always assumed to have been called with occurrence index 1\n  newCurrOccurrenceStack.push(1);\n\n  return {\n    idx: currIdx,\n    def: topRule.definition,\n    ruleStack: newRuleStack,\n    occurrenceStack: newCurrOccurrenceStack,\n  };\n}\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Predicate, TokenMatcher } from \"../parser/parser.js\";\nimport {\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories,\n} from \"../../scan/tokens.js\";\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  GAstVisitor,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n} from \"@chevrotain/gast\";\nimport {\n  BaseParser,\n  IOrAlt,\n  IProduction,\n  IProductionWithOccurrence,\n  LookaheadProductionType,\n  LookaheadSequence,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\n\nexport enum PROD_TYPE {\n  OPTION,\n  REPETITION,\n  REPETITION_MANDATORY,\n  REPETITION_MANDATORY_WITH_SEPARATOR,\n  REPETITION_WITH_SEPARATOR,\n  ALTERNATION,\n}\n\nexport function getProdType(\n  prod: IProduction | LookaheadProductionType,\n): PROD_TYPE {\n  /* istanbul ignore else */\n  if (prod instanceof Option || prod === \"Option\") {\n    return PROD_TYPE.OPTION;\n  } else if (prod instanceof Repetition || prod === \"Repetition\") {\n    return PROD_TYPE.REPETITION;\n  } else if (\n    prod instanceof RepetitionMandatory ||\n    prod === \"RepetitionMandatory\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY;\n  } else if (\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod === \"RepetitionMandatoryWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n  } else if (\n    prod instanceof RepetitionWithSeparator ||\n    prod === \"RepetitionWithSeparator\"\n  ) {\n    return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n  } else if (prod instanceof Alternation || prod === \"Alternation\") {\n    return PROD_TYPE.ALTERNATION;\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexport function getLookaheadPaths(options: {\n  occurrence: number;\n  rule: Rule;\n  prodType: LookaheadProductionType;\n  maxLookahead: number;\n}): LookaheadSequence[] {\n  const { occurrence, rule, prodType, maxLookahead } = options;\n  const type = getProdType(prodType);\n  if (type === PROD_TYPE.ALTERNATION) {\n    return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n  } else {\n    return getLookaheadPathsForOptionalProd(\n      occurrence,\n      rule,\n      type,\n      maxLookahead,\n    );\n  }\n}\n\nexport function buildLookaheadFuncForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  maxLookahead: number,\n  hasPredicates: boolean,\n  dynamicTokensEnabled: boolean,\n  laFuncBuilder: Function,\n): (orAlts?: IOrAlt<any>[]) => number | undefined {\n  const lookAheadPaths = getLookaheadPathsForOr(\n    occurrence,\n    ruleGrammar,\n    maxLookahead,\n  );\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher;\n\n  return laFuncBuilder(\n    lookAheadPaths,\n    hasPredicates,\n    tokenMatcher,\n    dynamicTokensEnabled,\n  );\n}\n\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  dynamicTokensEnabled: boolean,\n  prodType: PROD_TYPE,\n  lookaheadBuilder: (\n    lookAheadSequence: LookaheadSequence,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean,\n  ) => () => boolean,\n): () => boolean {\n  const lookAheadPaths = getLookaheadPathsForOptionalProd(\n    occurrence,\n    ruleGrammar,\n    prodType,\n    k,\n  );\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher;\n\n  return lookaheadBuilder(\n    lookAheadPaths[0],\n    tokenMatcher,\n    dynamicTokensEnabled,\n  );\n}\n\nexport type Alternative = TokenType[][];\n\nexport function buildAlternativesLookAheadFunc(\n  alts: LookaheadSequence[],\n  hasPredicates: boolean,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean,\n): (orAlts: IOrAlt<any>[]) => number | undefined {\n  const numOfAlts = alts.length;\n  const areAllOneTokenLookahead = every(alts, (currAlt) => {\n    return every(currAlt, (currPath) => {\n      return currPath.length === 1;\n    });\n  });\n\n  // This version takes into account the predicates as well.\n  if (hasPredicates) {\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (\n      this: BaseParser,\n      orAlts: IOrAlt<any>[],\n    ): number | undefined {\n      // unfortunately the predicates must be extracted every single time\n      // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n      // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n      const predicates: (Predicate | undefined)[] = map(\n        orAlts,\n        (currAlt) => currAlt.GATE,\n      );\n\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t];\n        const currNumOfPaths = currAlt.length;\n\n        const currPredicate = predicates[t];\n        if (currPredicate !== undefined && currPredicate.call(this) === false) {\n          // if the predicate does not match there is no point in checking the paths\n          continue;\n        }\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j];\n          const currPathLength = currPath.length;\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1);\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath;\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t;\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined;\n    };\n  } else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n    const singleTokenAlts = map(alts, (currAlt) => {\n      return flatten(currAlt);\n    });\n\n    const choiceToAlt = reduce(\n      singleTokenAlts,\n      (result, currAlt, idx) => {\n        forEach(currAlt, (currTokType) => {\n          if (!has(result, currTokType.tokenTypeIdx!)) {\n            result[currTokType.tokenTypeIdx!] = idx;\n          }\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            if (!has(result, currExtendingType)) {\n              result[currExtendingType] = idx;\n            }\n          });\n        });\n        return result;\n      },\n      {} as Record<number, number>,\n    );\n\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number {\n      const nextToken = this.LA(1);\n      return choiceToAlt[nextToken.tokenTypeIdx];\n    };\n  } else {\n    // optimized lookahead without needing to check the predicates at all.\n    // this causes code duplication which is intentional to improve performance.\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (this: BaseParser): number | undefined {\n      for (let t = 0; t < numOfAlts; t++) {\n        const currAlt = alts[t];\n        const currNumOfPaths = currAlt.length;\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          const currPath = currAlt[j];\n          const currPathLength = currPath.length;\n          for (let i = 0; i < currPathLength; i++) {\n            const nextToken = this.LA(i + 1);\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath;\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t;\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined;\n    };\n  }\n}\n\nexport function buildSingleAlternativeLookaheadFunction(\n  alt: LookaheadSequence,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean,\n): () => boolean {\n  const areAllOneTokenLookahead = every(alt, (currPath) => {\n    return currPath.length === 1;\n  });\n\n  const numOfPaths = alt.length;\n\n  // optimized (common) case of all the lookaheads paths requiring only\n  // a single token lookahead.\n  if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    const singleTokensTypes = flatten(alt);\n\n    if (\n      singleTokensTypes.length === 1 &&\n      isEmpty((<any>singleTokensTypes[0]).categoryMatches)\n    ) {\n      const expectedTokenType = singleTokensTypes[0];\n      const expectedTokenUniqueKey = (<any>expectedTokenType).tokenTypeIdx;\n\n      return function (this: BaseParser): boolean {\n        return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n      };\n    } else {\n      const choiceToAlt = reduce(\n        singleTokensTypes,\n        (result, currTokType, idx) => {\n          result[currTokType.tokenTypeIdx!] = true;\n          forEach(currTokType.categoryMatches!, (currExtendingType) => {\n            result[currExtendingType] = true;\n          });\n          return result;\n        },\n        [] as boolean[],\n      );\n\n      return function (this: BaseParser): boolean {\n        const nextToken = this.LA(1);\n        return choiceToAlt[nextToken.tokenTypeIdx] === true;\n      };\n    }\n  } else {\n    return function (this: BaseParser): boolean {\n      nextPath: for (let j = 0; j < numOfPaths; j++) {\n        const currPath = alt[j];\n        const currPathLength = currPath.length;\n        for (let i = 0; i < currPathLength; i++) {\n          const nextToken = this.LA(i + 1);\n          if (tokenMatcher(nextToken, currPath[i]) === false) {\n            // mismatch in current path\n            // try the next pth\n            continue nextPath;\n          }\n        }\n        // found a full path that matches.\n        return true;\n      }\n\n      // none of the paths matched\n      return false;\n    };\n  }\n}\n\nclass RestDefinitionFinderWalker extends RestWalker {\n  private restDef: IProduction[];\n\n  constructor(\n    private topProd: Rule,\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n  ) {\n    super();\n  }\n\n  startWalking(): IProduction[] {\n    this.walk(this.topProd);\n    return this.restDef;\n  }\n\n  private checkIsTarget(\n    node: IProductionWithOccurrence,\n    expectedProdType: PROD_TYPE,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): boolean {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdType\n    ) {\n      this.restDef = currRest.concat(prevRest);\n      return true;\n    }\n    // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n    return false;\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n      super.walkOption(optionProd, currRest, prevRest);\n    }\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneProd,\n        PROD_TYPE.REPETITION_MANDATORY,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(atLeastOneProd, currRest, prevRest);\n    }\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneSepProd,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(atLeastOneSepProd, currRest, prevRest);\n    }\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)\n    ) {\n      super.walkOption(manyProd, currRest, prevRest);\n    }\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[],\n  ): void {\n    if (\n      !this.checkIsTarget(\n        manySepProd,\n        PROD_TYPE.REPETITION_WITH_SEPARATOR,\n        currRest,\n        prevRest,\n      )\n    ) {\n      super.walkOption(manySepProd, currRest, prevRest);\n    }\n  }\n}\n\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n  public result: IProduction[] = [];\n\n  constructor(\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n    private targetRef?: any,\n  ) {\n    super();\n  }\n\n  private checkIsTarget(\n    node: { definition: IProduction[] } & IProductionWithOccurrence,\n    expectedProdName: PROD_TYPE,\n  ): void {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdName &&\n      (this.targetRef === undefined || node === this.targetRef)\n    ) {\n      this.result = node.definition;\n    }\n  }\n\n  public visitOption(node: Option): void {\n    this.checkIsTarget(node, PROD_TYPE.OPTION);\n  }\n\n  public visitRepetition(node: Repetition): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION);\n  }\n\n  public visitRepetitionMandatory(node: RepetitionMandatory): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n  }\n\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n  }\n\n  public visitAlternation(node: Alternation): void {\n    this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n  }\n}\n\nfunction initializeArrayOfArrays(size: number): any[][] {\n  const result = new Array(size);\n  for (let i = 0; i < size; i++) {\n    result[i] = [];\n  }\n  return result;\n}\n\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path: TokenType[]): string[] {\n  let keys = [\"\"];\n  for (let i = 0; i < path.length; i++) {\n    const tokType = path[i];\n    const longerKeys = [];\n    for (let j = 0; j < keys.length; j++) {\n      const currShorterKey = keys[j];\n      longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n      for (let t = 0; t < tokType.categoryMatches!.length; t++) {\n        const categoriesKeySuffix = \"_\" + tokType.categoryMatches![t];\n        longerKeys.push(currShorterKey + categoriesKeySuffix);\n      }\n    }\n    keys = longerKeys;\n  }\n  return keys;\n}\n\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(\n  altKnownPathsKeys: Record<string, boolean>[],\n  searchPathKeys: string[],\n  idx: number,\n): boolean {\n  for (\n    let currAltIdx = 0;\n    currAltIdx < altKnownPathsKeys.length;\n    currAltIdx++\n  ) {\n    // We only want to test vs the other alternatives\n    if (currAltIdx === idx) {\n      continue;\n    }\n    const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n    for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n      const searchKey = searchPathKeys[searchIdx];\n      if (otherAltKnownPathsKeys[searchKey] === true) {\n        return false;\n      }\n    }\n  }\n  // None of the SearchPathKeys were found in any of the other alternatives\n  return true;\n}\n\nexport function lookAheadSequenceFromAlternatives(\n  altsDefs: IProduction[],\n  k: number,\n): LookaheadSequence[] {\n  const partialAlts = map(altsDefs, (currAlt) =>\n    possiblePathsFrom([currAlt], 1),\n  );\n  const finalResult = initializeArrayOfArrays(partialAlts.length);\n  const altsHashes = map(partialAlts, (currAltPaths) => {\n    const dict: { [key: string]: boolean } = {};\n    forEach(currAltPaths, (item) => {\n      const keys = pathToHashKeys(item.partialPath);\n      forEach(keys, (currKey) => {\n        dict[currKey] = true;\n      });\n    });\n    return dict;\n  });\n  let newData = partialAlts;\n\n  // maxLookahead loop\n  for (let pathLength = 1; pathLength <= k; pathLength++) {\n    const currDataset = newData;\n    newData = initializeArrayOfArrays(currDataset.length);\n\n    // alternatives loop\n    for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n      const currAltPathsAndSuffixes = currDataset[altIdx];\n      // paths in current alternative loop\n      for (\n        let currPathIdx = 0;\n        currPathIdx < currAltPathsAndSuffixes.length;\n        currPathIdx++\n      ) {\n        const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n        const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n        const prefixKeys = pathToHashKeys(currPathPrefix);\n        const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n        // End of the line for this path.\n        if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n          const currAltResult = finalResult[altIdx];\n          // TODO: Can we implement a containsPath using Maps/Dictionaries?\n          if (containsPath(currAltResult, currPathPrefix) === false) {\n            currAltResult.push(currPathPrefix);\n            // Update all new  keys for the current path.\n            for (let j = 0; j < prefixKeys.length; j++) {\n              const currKey = prefixKeys[j];\n              altsHashes[altIdx][currKey] = true;\n            }\n          }\n        }\n        // Expand longer paths\n        else {\n          const newPartialPathsAndSuffixes = possiblePathsFrom(\n            suffixDef,\n            pathLength + 1,\n            currPathPrefix,\n          );\n          newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n\n          // Update keys for new known paths\n          forEach(newPartialPathsAndSuffixes, (item) => {\n            const prefixKeys = pathToHashKeys(item.partialPath);\n            forEach(prefixKeys, (key) => {\n              altsHashes[altIdx][key] = true;\n            });\n          });\n        }\n      }\n    }\n  }\n\n  return finalResult;\n}\n\nexport function getLookaheadPathsForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  orProd?: Alternation,\n): LookaheadSequence[] {\n  const visitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    PROD_TYPE.ALTERNATION,\n    orProd,\n  );\n  ruleGrammar.accept(visitor);\n  return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\n\nexport function getLookaheadPathsForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  prodType: PROD_TYPE,\n  k: number,\n): LookaheadSequence[] {\n  const insideDefVisitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    prodType,\n  );\n  ruleGrammar.accept(insideDefVisitor);\n  const insideDef = insideDefVisitor.result;\n\n  const afterDefWalker = new RestDefinitionFinderWalker(\n    ruleGrammar,\n    occurrence,\n    prodType,\n  );\n  const afterDef = afterDefWalker.startWalking();\n\n  const insideFlat = new AlternativeGAST({ definition: insideDef });\n  const afterFlat = new AlternativeGAST({ definition: afterDef });\n\n  return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\n\nexport function containsPath(\n  alternative: Alternative,\n  searchPath: TokenType[],\n): boolean {\n  compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n    const otherPath = alternative[i];\n    if (otherPath.length !== searchPath.length) {\n      continue;\n    }\n    for (let j = 0; j < otherPath.length; j++) {\n      const searchTok = searchPath[j];\n      const otherTok = otherPath[j];\n\n      const matchingTokens =\n        searchTok === otherTok ||\n        otherTok.categoryMatchesMap![searchTok.tokenTypeIdx!] !== undefined;\n      if (matchingTokens === false) {\n        continue compareOtherPath;\n      }\n    }\n    return true;\n  }\n\n  return false;\n}\n\nexport function isStrictPrefixOfPath(\n  prefix: TokenType[],\n  other: TokenType[],\n): boolean {\n  return (\n    prefix.length < other.length &&\n    every(prefix, (tokType, idx) => {\n      const otherTokType = other[idx];\n      return (\n        tokType === otherTokType ||\n        otherTokType.categoryMatchesMap![tokType.tokenTypeIdx!]\n      );\n    })\n  );\n}\n\nexport function areTokenCategoriesNotUsed(\n  lookAheadPaths: LookaheadSequence[],\n): boolean {\n  return every(lookAheadPaths, (singleAltPaths) =>\n    every(singleAltPaths, (singlePath) =>\n      every(singlePath, (token) => isEmpty(token.categoryMatches!)),\n    ),\n  );\n}\n","import {\n  clone,\n  compact,\n  difference,\n  drop,\n  dropRight,\n  filter,\n  first,\n  flatMap,\n  flatten,\n  forEach,\n  groupBy,\n  includes,\n  isEmpty,\n  map,\n  pickBy,\n  reduce,\n  reject,\n  values,\n} from \"lodash-es\";\nimport {\n  IParserAmbiguousAlternativesDefinitionError,\n  IParserDuplicatesDefinitionError,\n  IParserEmptyAlternativeDefinitionError,\n  ParserDefinitionErrorType,\n} from \"../parser/parser.js\";\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  GAstVisitor,\n  getProductionDslName,\n  isOptionalProd,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport {\n  Alternative,\n  containsPath,\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  getProdType,\n  isStrictPrefixOfPath,\n} from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport {\n  ILookaheadStrategy,\n  IProduction,\n  IProductionWithOccurrence,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n} from \"./types.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\n\nexport function validateLookahead(options: {\n  lookaheadStrategy: ILookaheadStrategy;\n  rules: Rule[];\n  tokenTypes: TokenType[];\n  grammarName: string;\n}): IParserDefinitionError[] {\n  const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n    rules: options.rules,\n    tokenTypes: options.tokenTypes,\n    grammarName: options.grammarName,\n  });\n  return map(lookaheadValidationErrorMessages, (errorMessage) => ({\n    type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION,\n    ...errorMessage,\n  }));\n}\n\nexport function validateGrammar(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  grammarName: string,\n): IParserDefinitionError[] {\n  const duplicateErrors: IParserDefinitionError[] = flatMap(\n    topLevels,\n    (currTopLevel) =>\n      validateDuplicateProductions(currTopLevel, errMsgProvider),\n  );\n\n  const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(\n    topLevels,\n    tokenTypes,\n    errMsgProvider,\n  );\n\n  const tooManyAltsErrors = flatMap(topLevels, (curRule) =>\n    validateTooManyAlts(curRule, errMsgProvider),\n  );\n\n  const duplicateRulesError = flatMap(topLevels, (curRule) =>\n    validateRuleDoesNotAlreadyExist(\n      curRule,\n      topLevels,\n      grammarName,\n      errMsgProvider,\n    ),\n  );\n\n  return duplicateErrors.concat(\n    termsNamespaceConflictErrors,\n    tooManyAltsErrors,\n    duplicateRulesError,\n  );\n}\n\nfunction validateDuplicateProductions(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDuplicatesDefinitionError[] {\n  const collectorVisitor = new OccurrenceValidationCollector();\n  topLevelRule.accept(collectorVisitor);\n  const allRuleProductions = collectorVisitor.allProductions;\n\n  const productionGroups = groupBy(\n    allRuleProductions,\n    identifyProductionForDuplicates,\n  );\n\n  const duplicates: any = pickBy(productionGroups, (currGroup) => {\n    return currGroup.length > 1;\n  });\n\n  const errors = map(values(duplicates), (currDuplicates: any) => {\n    const firstProd: any = first(currDuplicates);\n    const msg = errMsgProvider.buildDuplicateFoundError(\n      topLevelRule,\n      currDuplicates,\n    );\n    const dslName = getProductionDslName(firstProd);\n    const defError: IParserDuplicatesDefinitionError = {\n      message: msg,\n      type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n      ruleName: topLevelRule.name,\n      dslName: dslName,\n      occurrence: firstProd.idx,\n    };\n\n    const param = getExtraProductionArgument(firstProd);\n    if (param) {\n      defError.parameter = param;\n    }\n\n    return defError;\n  });\n  return errors;\n}\n\nexport function identifyProductionForDuplicates(\n  prod: IProductionWithOccurrence,\n): string {\n  return `${getProductionDslName(prod)}_#_${\n    prod.idx\n  }_#_${getExtraProductionArgument(prod)}`;\n}\n\nfunction getExtraProductionArgument(prod: IProductionWithOccurrence): string {\n  if (prod instanceof Terminal) {\n    return prod.terminalType.name;\n  } else if (prod instanceof NonTerminal) {\n    return prod.nonTerminalName;\n  } else {\n    return \"\";\n  }\n}\n\nexport class OccurrenceValidationCollector extends GAstVisitor {\n  public allProductions: IProductionWithOccurrence[] = [];\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    this.allProductions.push(subrule);\n  }\n\n  public visitOption(option: Option): void {\n    this.allProductions.push(option);\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.allProductions.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many);\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.allProductions.push(or);\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    this.allProductions.push(terminal);\n  }\n}\n\nexport function validateRuleDoesNotAlreadyExist(\n  rule: Rule,\n  allRules: Rule[],\n  className: string,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors = [];\n  const occurrences = reduce(\n    allRules,\n    (result, curRule) => {\n      if (curRule.name === rule.name) {\n        return result + 1;\n      }\n      return result;\n    },\n    0,\n  );\n  if (occurrences > 1) {\n    const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n      topLevelRule: rule,\n      grammarName: className,\n    });\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n      ruleName: rule.name,\n    });\n  }\n\n  return errors;\n}\n\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(\n  ruleName: string,\n  definedRulesNames: string[],\n  className: string,\n): IParserDefinitionError[] {\n  const errors = [];\n  let errMsg;\n\n  if (!includes(definedRulesNames, ruleName)) {\n    errMsg =\n      `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n      `as it is not defined in any of the super grammars `;\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n      ruleName: ruleName,\n    });\n  }\n\n  return errors;\n}\n\nexport function validateNoLeftRecursion(\n  topRule: Rule,\n  currRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  path: Rule[] = [],\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n  const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n  if (isEmpty(nextNonTerminals)) {\n    return [];\n  } else {\n    const ruleName = topRule.name;\n    const foundLeftRecursion = includes(nextNonTerminals, topRule);\n    if (foundLeftRecursion) {\n      errors.push({\n        message: errMsgProvider.buildLeftRecursionError({\n          topLevelRule: topRule,\n          leftRecursionPath: path,\n        }),\n        type: ParserDefinitionErrorType.LEFT_RECURSION,\n        ruleName: ruleName,\n      });\n    }\n\n    // we are only looking for cyclic paths leading back to the specific topRule\n    // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n    const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n    const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n      const newPath = clone(path);\n      newPath.push(currRefRule);\n      return validateNoLeftRecursion(\n        topRule,\n        currRefRule,\n        errMsgProvider,\n        newPath,\n      );\n    });\n\n    return errors.concat(errorsFromNextSteps);\n  }\n}\n\nexport function getFirstNoneTerminal(definition: IProduction[]): Rule[] {\n  let result: Rule[] = [];\n  if (isEmpty(definition)) {\n    return result;\n  }\n  const firstProd = first(definition);\n\n  /* istanbul ignore else */\n  if (firstProd instanceof NonTerminal) {\n    result.push(firstProd.referencedRule);\n  } else if (\n    firstProd instanceof AlternativeGAST ||\n    firstProd instanceof Option ||\n    firstProd instanceof RepetitionMandatory ||\n    firstProd instanceof RepetitionMandatoryWithSeparator ||\n    firstProd instanceof RepetitionWithSeparator ||\n    firstProd instanceof Repetition\n  ) {\n    result = result.concat(\n      getFirstNoneTerminal(<IProduction[]>firstProd.definition),\n    );\n  } else if (firstProd instanceof Alternation) {\n    // each sub definition in alternation is a FLAT\n    result = flatten(\n      map(firstProd.definition, (currSubDef) =>\n        getFirstNoneTerminal((<AlternativeGAST>currSubDef).definition),\n      ),\n    );\n  } else if (firstProd instanceof Terminal) {\n    // nothing to see, move along\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n\n  const isFirstOptional = isOptionalProd(firstProd);\n  const hasMore = definition.length > 1;\n  if (isFirstOptional && hasMore) {\n    const rest = drop(definition);\n    return result.concat(getFirstNoneTerminal(rest));\n  } else {\n    return result;\n  }\n}\n\nclass OrCollector extends GAstVisitor {\n  public alternations: Alternation[] = [];\n\n  public visitAlternation(node: Alternation): void {\n    this.alternations.push(node);\n  }\n}\n\nexport function validateEmptyOrAlternative(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserEmptyAlternativeDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  const ors = orCollector.alternations;\n\n  const errors = flatMap<Alternation, IParserEmptyAlternativeDefinitionError>(\n    ors,\n    (currOr) => {\n      const exceptLast = dropRight(currOr.definition);\n      return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n        const possibleFirstInAlt = nextPossibleTokensAfter(\n          [currAlternative],\n          [],\n          tokenStructuredMatcher,\n          1,\n        );\n        if (isEmpty(possibleFirstInAlt)) {\n          return [\n            {\n              message: errMsgProvider.buildEmptyAlternationError({\n                topLevelRule: topLevelRule,\n                alternation: currOr,\n                emptyChoiceIdx: currAltIdx,\n              }),\n              type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n              ruleName: topLevelRule.name,\n              occurrence: currOr.idx,\n              alternative: currAltIdx + 1,\n            },\n          ];\n        } else {\n          return [];\n        }\n      });\n    },\n  );\n\n  return errors;\n}\n\nexport function validateAmbiguousAlternationAlternatives(\n  topLevelRule: Rule,\n  globalMaxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  let ors = orCollector.alternations;\n\n  // New Handling of ignoring ambiguities\n  // - https://github.com/chevrotain/chevrotain/issues/869\n  ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n\n  const errors = flatMap(ors, (currOr: Alternation) => {\n    const currOccurrence = currOr.idx;\n    const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n    const alternatives = getLookaheadPathsForOr(\n      currOccurrence,\n      topLevelRule,\n      actualMaxLookahead,\n      currOr,\n    );\n    const altsAmbiguityErrors = checkAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider,\n    );\n    const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(\n      alternatives,\n      currOr,\n      topLevelRule,\n      errMsgProvider,\n    );\n\n    return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n  });\n\n  return errors;\n}\n\nexport class RepetitionCollector extends GAstVisitor {\n  public allProductions: (IProductionWithOccurrence & {\n    maxLookahead?: number;\n  })[] = [];\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.allProductions.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many);\n  }\n}\n\nexport function validateTooManyAlts(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const orCollector = new OrCollector();\n  topLevelRule.accept(orCollector);\n  const ors = orCollector.alternations;\n\n  const errors = flatMap(ors, (currOr) => {\n    if (currOr.definition.length > 255) {\n      return [\n        {\n          message: errMsgProvider.buildTooManyAlternativesError({\n            topLevelRule: topLevelRule,\n            alternation: currOr,\n          }),\n          type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n          ruleName: topLevelRule.name,\n          occurrence: currOr.idx,\n        },\n      ];\n    } else {\n      return [];\n    }\n  });\n\n  return errors;\n}\n\nexport function validateSomeNonEmptyLookaheadPath(\n  topLevelRules: Rule[],\n  maxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n  forEach(topLevelRules, (currTopRule) => {\n    const collectorVisitor = new RepetitionCollector();\n    currTopRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    forEach(allRuleProductions, (currProd) => {\n      const prodType = getProdType(currProd);\n      const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n      const currOccurrence = currProd.idx;\n      const paths = getLookaheadPathsForOptionalProd(\n        currOccurrence,\n        currTopRule,\n        prodType,\n        actualMaxLookahead,\n      );\n      const pathsInsideProduction = paths[0];\n      if (isEmpty(flatten(pathsInsideProduction))) {\n        const errMsg = errMsgProvider.buildEmptyRepetitionError({\n          topLevelRule: currTopRule,\n          repetition: currProd,\n        });\n        errors.push({\n          message: errMsg,\n          type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n          ruleName: currTopRule.name,\n        });\n      }\n    });\n  });\n\n  return errors;\n}\n\nexport interface IAmbiguityDescriptor {\n  alts: number[];\n  path: TokenType[];\n}\n\nfunction checkAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  const foundAmbiguousPaths: Alternative = [];\n  const identicalAmbiguities = reduce(\n    alternatives,\n    (result, currAlt, currAltIdx) => {\n      // ignore (skip) ambiguities with this alternative\n      if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n        return result;\n      }\n\n      forEach(currAlt, (currPath) => {\n        const altsCurrPathAppearsIn = [currAltIdx];\n        forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n          if (\n            currAltIdx !== currOtherAltIdx &&\n            containsPath(currOtherAlt, currPath) &&\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true\n          ) {\n            altsCurrPathAppearsIn.push(currOtherAltIdx);\n          }\n        });\n\n        if (\n          altsCurrPathAppearsIn.length > 1 &&\n          !containsPath(foundAmbiguousPaths, currPath)\n        ) {\n          foundAmbiguousPaths.push(currPath);\n          result.push({\n            alts: altsCurrPathAppearsIn,\n            path: currPath,\n          });\n        }\n      });\n      return result;\n    },\n    [] as { alts: number[]; path: TokenType[] }[],\n  );\n\n  const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n    const ambgIndices = map(\n      currAmbDescriptor.alts,\n      (currAltIdx) => currAltIdx + 1,\n    );\n\n    const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n      topLevelRule: rule,\n      alternation: alternation,\n      ambiguityIndices: ambgIndices,\n      prefixPath: currAmbDescriptor.path,\n    });\n\n    return {\n      message: currMessage,\n      type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n      ruleName: rule.name,\n      occurrence: alternation.idx,\n      alternatives: currAmbDescriptor.alts,\n    };\n  });\n\n  return currErrors;\n}\n\nexport function checkPrefixAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserAmbiguousAlternativesDefinitionError[] {\n  // flatten\n  const pathsAndIndices = reduce(\n    alternatives,\n    (result, currAlt, idx) => {\n      const currPathsAndIdx = map(currAlt, (currPath) => {\n        return { idx: idx, path: currPath };\n      });\n      return result.concat(currPathsAndIdx);\n    },\n    [] as { idx: number; path: TokenType[] }[],\n  );\n\n  const errors = compact(\n    flatMap(pathsAndIndices, (currPathAndIdx) => {\n      const alternativeGast = alternation.definition[currPathAndIdx.idx];\n      // ignore (skip) ambiguities with this alternative\n      if (alternativeGast.ignoreAmbiguities === true) {\n        return [];\n      }\n      const targetIdx = currPathAndIdx.idx;\n      const targetPath = currPathAndIdx.path;\n\n      const prefixAmbiguitiesPathsAndIndices = filter(\n        pathsAndIndices,\n        (searchPathAndIdx) => {\n          // prefix ambiguity can only be created from lower idx (higher priority) path\n          return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n              true &&\n            searchPathAndIdx.idx < targetIdx &&\n            // checking for strict prefix because identical lookaheads\n            // will be be detected using a different validation.\n            isStrictPrefixOfPath(searchPathAndIdx.path, targetPath)\n          );\n        },\n      );\n\n      const currPathPrefixErrors = map(\n        prefixAmbiguitiesPathsAndIndices,\n        (currAmbPathAndIdx): IParserAmbiguousAlternativesDefinitionError => {\n          const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n          const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n\n          const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbPathAndIdx.path,\n          });\n          return {\n            message: message,\n            type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n            ruleName: rule.name,\n            occurrence: occurrence,\n            alternatives: ambgIndices,\n          };\n        },\n      );\n\n      return currPathPrefixErrors;\n    }),\n  );\n\n  return errors;\n}\n\nfunction checkTerminalAndNoneTerminalsNameSpace(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n): IParserDefinitionError[] {\n  const errors: IParserDefinitionError[] = [];\n\n  const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n\n  forEach(topLevels, (currRule) => {\n    const currRuleName = currRule.name;\n    if (includes(tokenNames, currRuleName)) {\n      const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n\n      errors.push({\n        message: errMsg,\n        type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n        ruleName: currRuleName,\n      });\n    }\n  });\n\n  return errors;\n}\n","import { Rule } from \"@chevrotain/gast\";\nimport { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport {\n  defaultGrammarResolverErrorProvider,\n  defaultGrammarValidatorErrorProvider,\n} from \"../../errors_public.js\";\nimport { TokenType } from \"@chevrotain/types\";\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n} from \"../types.js\";\n\ntype ResolveGrammarOpts = {\n  rules: Rule[];\n  errMsgProvider?: IGrammarResolverErrorMessageProvider;\n};\nexport function resolveGrammar(\n  options: ResolveGrammarOpts,\n): IParserDefinitionError[] {\n  const actualOptions: Required<ResolveGrammarOpts> = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider,\n  });\n\n  const topRulesTable: { [ruleName: string]: Rule } = {};\n  forEach(options.rules, (rule) => {\n    topRulesTable[rule.name] = rule;\n  });\n  return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\n\nexport function validateGrammar(options: {\n  rules: Rule[];\n  tokenTypes: TokenType[];\n  grammarName: string;\n  errMsgProvider: IGrammarValidatorErrorMessageProvider;\n}): IParserDefinitionError[] {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider,\n  });\n\n  return orgValidateGrammar(\n    options.rules,\n    options.tokenTypes,\n    options.errMsgProvider,\n    options.grammarName,\n  );\n}\n","import { includes } from \"lodash-es\";\nimport {\n  IRecognitionException,\n  IRecognizerContext,\n  IToken,\n} from \"@chevrotain/types\";\n\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\n\nconst RECOGNITION_EXCEPTION_NAMES = [\n  MISMATCHED_TOKEN_EXCEPTION,\n  NO_VIABLE_ALT_EXCEPTION,\n  EARLY_EXIT_EXCEPTION,\n  NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\n\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error: Error) {\n  // can't do instanceof on hacked custom js exceptions\n  return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\n\nabstract class RecognitionException\n  extends Error\n  implements IRecognitionException\n{\n  context: IRecognizerContext;\n  resyncedTokens: IToken[] = [];\n\n  protected constructor(\n    message: string,\n    public token: IToken,\n  ) {\n    super(message);\n\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(this, new.target.prototype);\n\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class MismatchedTokenException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = MISMATCHED_TOKEN_EXCEPTION;\n  }\n}\n\nexport class NoViableAltException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = NO_VIABLE_ALT_EXCEPTION;\n  }\n}\n\nexport class NotAllInputParsedException extends RecognitionException {\n  constructor(message: string, token: IToken) {\n    super(message, token);\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n  }\n}\n\nexport class EarlyExitException extends RecognitionException {\n  constructor(\n    message: string,\n    token: IToken,\n    public previousToken: IToken,\n  ) {\n    super(message, token);\n    this.name = EARLY_EXIT_EXCEPTION;\n  }\n}\n","import {\n  createTokenInstance,\n  EOF,\n  tokenMatcher,\n} from \"../../../scan/tokens_public.js\";\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  IFirstAfterRepetition,\n} from \"../../grammar/interpreter.js\";\nimport {\n  clone,\n  dropRight,\n  find,\n  flatten,\n  has,\n  includes,\n  isEmpty,\n  map,\n} from \"lodash-es\";\nimport {\n  IParserConfig,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\nexport const EOF_FOLLOW_KEY: any = {};\n\nexport interface IFollowKey {\n  ruleName: string;\n  idxInCallingRule: number;\n  inRule: string;\n}\n\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\n\nexport class InRuleRecoveryException extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = IN_RULE_RECOVERY_EXCEPTION;\n  }\n}\n\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n  recoveryEnabled: boolean;\n  firstAfterRepMap: Record<string, IFirstAfterRepetition>;\n  resyncFollows: Record<string, TokenType[]>;\n\n  initRecoverable(config: IParserConfig) {\n    this.firstAfterRepMap = {};\n    this.resyncFollows = {};\n\n    this.recoveryEnabled = has(config, \"recoveryEnabled\")\n      ? (config.recoveryEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n\n    // performance optimization, NOOP will be inlined which\n    // effectively means that this optional feature does not exist\n    // when not used.\n    if (this.recoveryEnabled) {\n      this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n    }\n  }\n\n  public getTokenToInsert(tokType: TokenType): IToken {\n    const tokToInsert = createTokenInstance(\n      tokType,\n      \"\",\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n    );\n    tokToInsert.isInsertedInRecovery = true;\n    return tokToInsert;\n  }\n\n  public canTokenTypeBeInsertedInRecovery(tokType: TokenType): boolean {\n    return true;\n  }\n\n  public canTokenTypeBeDeletedInRecovery(tokType: TokenType): boolean {\n    return true;\n  }\n\n  tryInRepetitionRecovery(\n    this: MixedInParser,\n    grammarRule: Function,\n    grammarRuleArgs: any[],\n    lookAheadFunc: () => boolean,\n    expectedTokType: TokenType,\n  ): void {\n    // TODO: can the resyncTokenType be cached?\n    const reSyncTokType = this.findReSyncTokenType();\n    const savedLexerState = this.exportLexerState();\n    const resyncedTokens: IToken[] = [];\n    let passedResyncPoint = false;\n\n    const nextTokenWithoutResync = this.LA(1);\n    let currToken = this.LA(1);\n\n    const generateErrorMessage = () => {\n      const previousToken = this.LA(0);\n      // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n      // the error that would have been thrown\n      const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: expectedTokType,\n        actual: nextTokenWithoutResync,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName(),\n      });\n      const error = new MismatchedTokenException(\n        msg,\n        nextTokenWithoutResync,\n        this.LA(0),\n      );\n      // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n      error.resyncedTokens = dropRight(resyncedTokens);\n      this.SAVE_ERROR(error);\n    };\n\n    while (!passedResyncPoint) {\n      // re-synced to a point where we can safely exit the repetition/\n      if (this.tokenMatcher(currToken, expectedTokType)) {\n        generateErrorMessage();\n        return; // must return here to avoid reverting the inputIdx\n      } else if (lookAheadFunc.call(this)) {\n        // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n        generateErrorMessage();\n        // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n        grammarRule.apply(this, grammarRuleArgs);\n        return; // must return here to avoid reverting the inputIdx\n      } else if (this.tokenMatcher(currToken, reSyncTokType)) {\n        passedResyncPoint = true;\n      } else {\n        currToken = this.SKIP_TOKEN();\n        this.addToResyncTokens(currToken, resyncedTokens);\n      }\n    }\n\n    // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n    // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n    // \"between rules\" resync recovery later in the flow.\n    this.importLexerState(savedLexerState);\n  }\n\n  shouldInRepetitionRecoveryBeTried(\n    this: MixedInParser,\n    expectTokAfterLastMatch: TokenType,\n    nextTokIdx: number,\n    notStuck: boolean | undefined,\n  ): boolean {\n    // Edge case of arriving from a MANY repetition which is stuck\n    // Attempting recovery in this case could cause an infinite loop\n    if (notStuck === false) {\n      return false;\n    }\n\n    // no need to recover, next token is what we expect...\n    if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n      return false;\n    }\n\n    // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n    // and prefer some backtracking path that includes recovered errors.\n    if (this.isBackTracking()) {\n      return false;\n    }\n\n    // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n    // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n    //noinspection RedundantIfStatementJS\n    if (\n      this.canPerformInRuleRecovery(\n        expectTokAfterLastMatch,\n        this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx),\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Error Recovery functionality\n  getFollowsForInRuleRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number,\n  ): TokenType[] {\n    const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n    const follows = this.getNextPossibleTokenTypes(grammarPath);\n    return follows;\n  }\n\n  tryInRuleRecovery(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[],\n  ): IToken {\n    if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n      const tokToInsert = this.getTokenToInsert(expectedTokType);\n      return tokToInsert;\n    }\n\n    if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n      const nextTok = this.SKIP_TOKEN();\n      this.consumeToken();\n      return nextTok;\n    }\n\n    throw new InRuleRecoveryException(\"sad sad panda\");\n  }\n\n  canPerformInRuleRecovery(\n    this: MixedInParser,\n    expectedToken: TokenType,\n    follows: TokenType[],\n  ): boolean {\n    return (\n      this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n      this.canRecoverWithSingleTokenDeletion(expectedToken)\n    );\n  }\n\n  canRecoverWithSingleTokenInsertion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[],\n  ): boolean {\n    if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n      return false;\n    }\n\n    // must know the possible following tokens to perform single token insertion\n    if (isEmpty(follows)) {\n      return false;\n    }\n\n    const mismatchedTok = this.LA(1);\n    const isMisMatchedTokInFollows =\n      find(follows, (possibleFollowsTokType: TokenType) => {\n        return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n      }) !== undefined;\n\n    return isMisMatchedTokInFollows;\n  }\n\n  canRecoverWithSingleTokenDeletion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n  ): boolean {\n    if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n      return false;\n    }\n\n    const isNextTokenWhatIsExpected = this.tokenMatcher(\n      this.LA(2),\n      expectedTokType,\n    );\n    return isNextTokenWhatIsExpected;\n  }\n\n  isInCurrentRuleReSyncSet(\n    this: MixedInParser,\n    tokenTypeIdx: TokenType,\n  ): boolean {\n    const followKey = this.getCurrFollowKey();\n    const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n    return includes(currentRuleReSyncSet, tokenTypeIdx);\n  }\n\n  findReSyncTokenType(this: MixedInParser): TokenType {\n    const allPossibleReSyncTokTypes = this.flattenFollowSet();\n    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n    let nextToken = this.LA(1);\n    let k = 2;\n    while (true) {\n      const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n        const canMatch = tokenMatcher(nextToken, resyncTokType);\n        return canMatch;\n      });\n      if (foundMatch !== undefined) {\n        return foundMatch;\n      }\n      nextToken = this.LA(k);\n      k++;\n    }\n  }\n\n  getCurrFollowKey(this: MixedInParser): IFollowKey {\n    // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n    if (this.RULE_STACK.length === 1) {\n      return EOF_FOLLOW_KEY;\n    }\n    const currRuleShortName = this.getLastExplicitRuleShortName();\n    const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n    const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n\n    return {\n      ruleName: this.shortRuleNameToFullName(currRuleShortName),\n      idxInCallingRule: currRuleIdx,\n      inRule: this.shortRuleNameToFullName(prevRuleShortName),\n    };\n  }\n\n  buildFullFollowKeyStack(this: MixedInParser): IFollowKey[] {\n    const explicitRuleStack = this.RULE_STACK;\n    const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n\n    return map(explicitRuleStack, (ruleName, idx) => {\n      if (idx === 0) {\n        return EOF_FOLLOW_KEY;\n      }\n      return {\n        ruleName: this.shortRuleNameToFullName(ruleName),\n        idxInCallingRule: explicitOccurrenceStack[idx],\n        inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n      };\n    });\n  }\n\n  flattenFollowSet(this: MixedInParser): TokenType[] {\n    const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n      return this.getFollowSetFromFollowKey(currKey);\n    });\n    return <any>flatten(followStack);\n  }\n\n  getFollowSetFromFollowKey(\n    this: MixedInParser,\n    followKey: IFollowKey,\n  ): TokenType[] {\n    if (followKey === EOF_FOLLOW_KEY) {\n      return [EOF];\n    }\n\n    const followName =\n      followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n\n    return this.resyncFollows[followName];\n  }\n\n  // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n  // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n  addToResyncTokens(\n    this: MixedInParser,\n    token: IToken,\n    resyncTokens: IToken[],\n  ): IToken[] {\n    if (!this.tokenMatcher(token, EOF)) {\n      resyncTokens.push(token);\n    }\n    return resyncTokens;\n  }\n\n  reSyncTo(this: MixedInParser, tokType: TokenType): IToken[] {\n    const resyncedTokens: IToken[] = [];\n    let nextTok = this.LA(1);\n    while (this.tokenMatcher(nextTok, tokType) === false) {\n      nextTok = this.SKIP_TOKEN();\n      this.addToResyncTokens(nextTok, resyncedTokens);\n    }\n    // the last token is not part of the error.\n    return dropRight(resyncedTokens);\n  }\n\n  attemptInRepetitionRecovery(\n    this: MixedInParser,\n    prodFunc: Function,\n    args: any[],\n    lookaheadFunc: () => boolean,\n    dslMethodIdx: number,\n    prodOccurrence: number,\n    nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n    notStuck?: boolean,\n  ): void {\n    // by default this is a NO-OP\n    // The actual implementation is with the function(not method) below\n  }\n\n  getCurrentGrammarPath(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number,\n  ): ITokenGrammarPath {\n    const pathRuleStack: string[] = this.getHumanReadableRuleStack();\n    const pathOccurrenceStack: number[] = clone(this.RULE_OCCURRENCE_STACK);\n    const grammarPath: any = {\n      ruleStack: pathRuleStack,\n      occurrenceStack: pathOccurrenceStack,\n      lastTok: tokType,\n      lastTokOccurrence: tokIdxInRule,\n    };\n\n    return grammarPath;\n  }\n  getHumanReadableRuleStack(this: MixedInParser): string[] {\n    return map(this.RULE_STACK, (currShortName) =>\n      this.shortRuleNameToFullName(currShortName),\n    );\n  }\n}\n\nexport function attemptInRepetitionRecovery(\n  this: MixedInParser,\n  prodFunc: Function,\n  args: any[],\n  lookaheadFunc: () => boolean,\n  dslMethodIdx: number,\n  prodOccurrence: number,\n  nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  notStuck?: boolean,\n): void {\n  const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n  let firstAfterRepInfo = this.firstAfterRepMap[key];\n  if (firstAfterRepInfo === undefined) {\n    const currRuleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[currRuleName];\n    const walker: AbstractNextTerminalAfterProductionWalker =\n      new nextToksWalker(ruleGrammar, prodOccurrence);\n    firstAfterRepInfo = walker.startWalking();\n    this.firstAfterRepMap[key] = firstAfterRepInfo;\n  }\n\n  let expectTokAfterLastMatch = firstAfterRepInfo.token;\n  let nextTokIdx = firstAfterRepInfo.occurrence;\n  const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n\n  // special edge case of a TOP most repetition after which the input should END.\n  // this will force an attempt for inRule recovery in that scenario.\n  if (\n    this.RULE_STACK.length === 1 &&\n    isEndOfRule &&\n    expectTokAfterLastMatch === undefined\n  ) {\n    expectTokAfterLastMatch = EOF;\n    nextTokIdx = 1;\n  }\n\n  // We don't have anything to re-sync to...\n  // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n  if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n    return;\n  }\n\n  if (\n    this.shouldInRepetitionRecoveryBeTried(\n      expectTokAfterLastMatch,\n      nextTokIdx,\n      notStuck,\n    )\n  ) {\n    // TODO: performance optimization: instead of passing the original args here, we modify\n    // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n    // to avoid searching the cache for it once more.\n    this.tryInRepetitionRecovery(\n      prodFunc,\n      args,\n      lookaheadFunc,\n      expectTokAfterLastMatch,\n    );\n  }\n}\n","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\n\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(\n  ruleIdx: number,\n  dslMethodIdx: number,\n  occurrence: number,\n): number {\n  return occurrence | dslMethodIdx | ruleIdx;\n}\n\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n","import {\n  ILookaheadStrategy,\n  ILookaheadValidationError,\n  IOrAlt,\n  OptionalProductionType,\n  Rule,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport {\n  validateAmbiguousAlternationAlternatives,\n  validateEmptyOrAlternative,\n  validateNoLeftRecursion,\n  validateSomeNonEmptyLookaheadPath,\n} from \"./checks.js\";\nimport {\n  buildAlternativesLookAheadFunc,\n  buildLookaheadFuncForOptionalProd,\n  buildLookaheadFuncForOr,\n  buildSingleAlternativeLookaheadFunction,\n  getProdType,\n} from \"./lookahead.js\";\nimport { IParserDefinitionError } from \"./types.js\";\n\nexport class LLkLookaheadStrategy implements ILookaheadStrategy {\n  readonly maxLookahead: number;\n\n  constructor(options?: { maxLookahead?: number }) {\n    this.maxLookahead =\n      options?.maxLookahead ?? DEFAULT_PARSER_CONFIG.maxLookahead;\n  }\n\n  validate(options: {\n    rules: Rule[];\n    tokenTypes: TokenType[];\n    grammarName: string;\n  }): ILookaheadValidationError[] {\n    const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n\n    if (isEmpty(leftRecursionErrors)) {\n      const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n      const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(\n        options.rules,\n        this.maxLookahead,\n      );\n      const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(\n        options.rules,\n        this.maxLookahead,\n      );\n      const allErrors = [\n        ...leftRecursionErrors,\n        ...emptyAltErrors,\n        ...ambiguousAltsErrors,\n        ...emptyRepetitionErrors,\n      ];\n      return allErrors;\n    }\n    return leftRecursionErrors;\n  }\n\n  validateNoLeftRecursion(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateNoLeftRecursion(\n        currTopRule,\n        currTopRule,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateEmptyOrAlternatives(rules: Rule[]): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateEmptyOrAlternative(\n        currTopRule,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateAmbiguousAlternationAlternatives(\n    rules: Rule[],\n    maxLookahead: number,\n  ): IParserDefinitionError[] {\n    return flatMap(rules, (currTopRule) =>\n      validateAmbiguousAlternationAlternatives(\n        currTopRule,\n        maxLookahead,\n        defaultGrammarValidatorErrorProvider,\n      ),\n    );\n  }\n\n  validateSomeNonEmptyLookaheadPath(\n    rules: Rule[],\n    maxLookahead: number,\n  ): IParserDefinitionError[] {\n    return validateSomeNonEmptyLookaheadPath(\n      rules,\n      maxLookahead,\n      defaultGrammarValidatorErrorProvider,\n    );\n  }\n\n  buildLookaheadForAlternation(options: {\n    prodOccurrence: number;\n    rule: Rule;\n    maxLookahead: number;\n    hasPredicates: boolean;\n    dynamicTokensEnabled: boolean;\n  }): (orAlts?: IOrAlt<any>[] | undefined) => number | undefined {\n    return buildLookaheadFuncForOr(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.hasPredicates,\n      options.dynamicTokensEnabled,\n      buildAlternativesLookAheadFunc,\n    );\n  }\n\n  buildLookaheadForOptional(options: {\n    prodOccurrence: number;\n    prodType: OptionalProductionType;\n    rule: Rule;\n    maxLookahead: number;\n    dynamicTokensEnabled: boolean;\n  }): () => boolean {\n    return buildLookaheadFuncForOptionalProd(\n      options.prodOccurrence,\n      options.rule,\n      options.maxLookahead,\n      options.dynamicTokensEnabled,\n      getProdType(options.prodType),\n      buildSingleAlternativeLookaheadFunction,\n    );\n  }\n}\n","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport {\n  ILookaheadStrategy,\n  IParserConfig,\n  OptionalProductionType,\n} from \"@chevrotain/types\";\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  getKeyForAutomaticLookahead,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX,\n} from \"../../grammar/keys.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  Alternation,\n  GAstVisitor,\n  getProductionDslName,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n} from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n  maxLookahead: number;\n  lookAheadFuncsCache: any;\n  dynamicTokensEnabled: boolean;\n  lookaheadStrategy: ILookaheadStrategy;\n\n  initLooksAhead(config: IParserConfig) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n      ? (config.dynamicTokensEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n\n    this.maxLookahead = has(config, \"maxLookahead\")\n      ? (config.maxLookahead as number) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.maxLookahead;\n\n    this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n      ? (config.lookaheadStrategy as ILookaheadStrategy) // assumes end user provides the correct config value/type\n      : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n\n    this.lookAheadFuncsCache = new Map();\n  }\n\n  preComputeLookaheadFunctions(this: MixedInParser, rules: Rule[]): void {\n    forEach(rules, (currRule) => {\n      this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n        const {\n          alternation,\n          repetition,\n          option,\n          repetitionMandatory,\n          repetitionMandatoryWithSeparator,\n          repetitionWithSeparator,\n        } = collectMethods(currRule);\n\n        forEach(alternation, (currProd) => {\n          const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n          this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n              prodOccurrence: currProd.idx,\n              rule: currRule,\n              maxLookahead: currProd.maxLookahead || this.maxLookahead,\n              hasPredicates: currProd.hasPredicates,\n              dynamicTokensEnabled: this.dynamicTokensEnabled,\n            });\n\n            const key = getKeyForAutomaticLookahead(\n              this.fullRuleNameToShort[currRule.name],\n              OR_IDX,\n              currProd.idx,\n            );\n            this.setLaFuncCache(key, laFunc);\n          });\n        });\n\n        forEach(repetition, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_IDX,\n            \"Repetition\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(option, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            OPTION_IDX,\n            \"Option\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionMandatory, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_IDX,\n            \"RepetitionMandatory\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionMandatoryWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_SEP_IDX,\n            \"RepetitionMandatoryWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n\n        forEach(repetitionWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_SEP_IDX,\n            \"RepetitionWithSeparator\",\n            currProd.maxLookahead,\n            getProductionDslName(currProd),\n          );\n        });\n      });\n    });\n  }\n\n  computeLookaheadFunc(\n    this: MixedInParser,\n    rule: Rule,\n    prodOccurrence: number,\n    prodKey: number,\n    prodType: OptionalProductionType,\n    prodMaxLookahead: number | undefined,\n    dslMethodName: string,\n  ): void {\n    this.TRACE_INIT(\n      `${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`,\n      () => {\n        const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n          prodOccurrence,\n          rule,\n          maxLookahead: prodMaxLookahead || this.maxLookahead,\n          dynamicTokensEnabled: this.dynamicTokensEnabled,\n          prodType,\n        });\n        const key = getKeyForAutomaticLookahead(\n          this.fullRuleNameToShort[rule.name],\n          prodKey,\n          prodOccurrence,\n        );\n        this.setLaFuncCache(key, laFunc);\n      },\n    );\n  }\n\n  // this actually returns a number, but it is always used as a string (object prop key)\n  getKeyForAutomaticLookahead(\n    this: MixedInParser,\n    dslMethodIdx: number,\n    occurrence: number,\n  ): number {\n    const currRuleShortName: any = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(\n      currRuleShortName,\n      dslMethodIdx,\n      occurrence,\n    );\n  }\n\n  getLaFuncFromCache(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache.get(key);\n  }\n\n  /* istanbul ignore next */\n  setLaFuncCache(this: MixedInParser, key: number, value: Function): void {\n    this.lookAheadFuncsCache.set(key, value);\n  }\n}\n\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n  public dslMethods: {\n    option: Option[];\n    alternation: Alternation[];\n    repetition: Repetition[];\n    repetitionWithSeparator: RepetitionWithSeparator[];\n    repetitionMandatory: RepetitionMandatory[];\n    repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[];\n  } = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: [],\n  };\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: [],\n    };\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option);\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator,\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many);\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or);\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule: Rule): {\n  option: Option[];\n  alternation: Alternation[];\n  repetition: Repetition[];\n  repetitionWithSeparator: RepetitionWithSeparator[];\n  repetitionMandatory: RepetitionMandatory[];\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[];\n} {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  const dslMethods = collectorVisitor.dslMethods;\n  // avoid uncleaned references\n  collectorVisitor.reset();\n  return <any>dslMethods;\n}\n","import { CstNode, CstNodeLocation, IToken } from \"@chevrotain/types\";\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: Required<Pick<IToken, \"startOffset\" | \"endOffset\">>,\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (both start/end offsets exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset;\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n  }\n  // Once the startOffset has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n  }\n}\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: CstNodeLocation,\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (all start/end props exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset;\n    currNodeLocation.startColumn = newLocationInfo.startColumn;\n    currNodeLocation.startLine = newLocationInfo.startLine;\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n    currNodeLocation.endColumn = newLocationInfo.endColumn;\n    currNodeLocation.endLine = newLocationInfo.endLine;\n  }\n  // Once the start props has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset! < newLocationInfo.endOffset! === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset;\n    currNodeLocation.endColumn = newLocationInfo.endColumn;\n    currNodeLocation.endLine = newLocationInfo.endLine;\n  }\n}\n\nexport function addTerminalToCst(\n  node: CstNode,\n  token: IToken,\n  tokenTypeName: string,\n): void {\n  if (node.children[tokenTypeName] === undefined) {\n    node.children[tokenTypeName] = [token];\n  } else {\n    node.children[tokenTypeName].push(token);\n  }\n}\n\nexport function addNoneTerminalToCst(\n  node: CstNode,\n  ruleName: string,\n  ruleResult: any,\n): void {\n  if (node.children[ruleName] === undefined) {\n    node.children[ruleName] = [ruleResult];\n  } else {\n    node.children[ruleName].push(ruleResult);\n  }\n}\n","const NAME = \"name\";\n\nexport function defineNameProp(obj: {}, nameValue: string): void {\n  Object.defineProperty(obj, NAME, {\n    enumerable: false,\n    configurable: true,\n    writable: false,\n    value: nameValue,\n  });\n}\n","import {\n  compact,\n  filter,\n  forEach,\n  isArray,\n  isEmpty,\n  isFunction,\n  isUndefined,\n  keys,\n  map,\n} from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nimport { CstNode, ICstVisitor } from \"@chevrotain/types\";\n\nexport function defaultVisit<IN>(ctx: any, param: IN): void {\n  const childrenNames = keys(ctx);\n  const childrenNamesLength = childrenNames.length;\n  for (let i = 0; i < childrenNamesLength; i++) {\n    const currChildName = childrenNames[i];\n    const currChildArray = ctx[currChildName];\n    const currChildArrayLength = currChildArray.length;\n    for (let j = 0; j < currChildArrayLength; j++) {\n      const currChild: any = currChildArray[j];\n      // distinction between Tokens Children and CstNode children\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param);\n      }\n    }\n  }\n  // defaultVisit does not support generic out param\n}\n\nexport function createBaseSemanticVisitorConstructor(\n  grammarName: string,\n  ruleNames: string[],\n): {\n  new (...args: any[]): ICstVisitor<any, any>;\n} {\n  const derivedConstructor: any = function () {};\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n\n  const semanticProto = {\n    visit: function (cstNode: CstNode | CstNode[], param: any) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0];\n      }\n\n      // enables passing optional CstNodes concisely.\n      if (isUndefined(cstNode)) {\n        return undefined;\n      }\n\n      return this[cstNode.name](cstNode.children, param);\n    },\n\n    validateVisitor: function () {\n      const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n      if (!isEmpty(semanticDefinitionErrors)) {\n        const errorMessages = map(\n          semanticDefinitionErrors,\n          (currDefError) => currDefError.msg,\n        );\n        throw Error(\n          `Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n            `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`,\n        );\n      }\n    },\n  };\n\n  derivedConstructor.prototype = semanticProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n\n  derivedConstructor._RULE_NAMES = ruleNames;\n\n  return derivedConstructor;\n}\n\nexport function createBaseVisitorConstructorWithDefaults(\n  grammarName: string,\n  ruleNames: string[],\n  baseConstructor: Function,\n): {\n  new (...args: any[]): ICstVisitor<any, any>;\n} {\n  const derivedConstructor: any = function () {};\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n\n  const withDefaultsProto = Object.create(baseConstructor.prototype);\n  forEach(ruleNames, (ruleName) => {\n    withDefaultsProto[ruleName] = defaultVisit;\n  });\n\n  derivedConstructor.prototype = withDefaultsProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n\n  return derivedConstructor;\n}\n\nexport enum CstVisitorDefinitionError {\n  REDUNDANT_METHOD,\n  MISSING_METHOD,\n}\n\nexport interface IVisitorDefinitionError {\n  msg: string;\n  type: CstVisitorDefinitionError;\n  methodName: string;\n}\n\nexport function validateVisitor(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[],\n): IVisitorDefinitionError[] {\n  const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n\n  return missingErrors;\n}\n\nexport function validateMissingCstMethods(\n  visitorInstance: ICstVisitor<unknown, unknown>,\n  ruleNames: string[],\n): IVisitorDefinitionError[] {\n  const missingRuleNames = filter(ruleNames, (currRuleName) => {\n    return isFunction((visitorInstance as any)[currRuleName]) === false;\n  });\n\n  const errors: IVisitorDefinitionError[] = map(\n    missingRuleNames,\n    (currRuleName) => {\n      return {\n        msg: `Missing visitor method: <${currRuleName}> on ${<any>(\n          visitorInstance.constructor.name\n        )} CST Visitor.`,\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName,\n      };\n    },\n  );\n\n  return compact<IVisitorDefinitionError>(errors);\n}\n","import {\n  addNoneTerminalToCst,\n  addTerminalToCst,\n  setNodeLocationFull,\n  setNodeLocationOnlyOffset,\n} from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport {\n  createBaseSemanticVisitorConstructor,\n  createBaseVisitorConstructorWithDefaults,\n} from \"../../cst/cst_visitor.js\";\nimport {\n  CstNode,\n  CstNodeLocation,\n  ICstVisitor,\n  IParserConfig,\n  IToken,\n  nodeLocationTrackingOptions,\n} from \"@chevrotain/types\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n  outputCst: boolean;\n  CST_STACK: CstNode[];\n  baseCstVisitorConstructor: Function;\n  baseCstVisitorWithDefaultsConstructor: Function;\n\n  // dynamically assigned Methods\n  setNodeLocationFromNode: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation,\n  ) => void;\n  setNodeLocationFromToken: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation,\n  ) => void;\n  cstPostRule: (this: MixedInParser, ruleCstNode: CstNode) => void;\n\n  setInitialNodeLocation: (cstNode: CstNode) => void;\n  nodeLocationTracking: nodeLocationTrackingOptions;\n\n  initTreeBuilder(this: MixedInParser, config: IParserConfig) {\n    this.CST_STACK = [];\n\n    // outputCst is no longer exposed/defined in the pubic API\n    this.outputCst = (config as any).outputCst;\n\n    this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n      ? (config.nodeLocationTracking as nodeLocationTrackingOptions) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n\n    if (!this.outputCst) {\n      this.cstInvocationStateUpdate = noop;\n      this.cstFinallyStateUpdate = noop;\n      this.cstPostTerminal = noop;\n      this.cstPostNonTerminal = noop;\n      this.cstPostRule = noop;\n    } else {\n      if (/full/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationFull;\n          this.setNodeLocationFromNode = setNodeLocationFull;\n          this.cstPostRule = noop;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n        } else {\n          this.setNodeLocationFromToken = noop;\n          this.setNodeLocationFromNode = noop;\n          this.cstPostRule = this.cstPostRuleFull;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n        }\n      } else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = <any>setNodeLocationOnlyOffset;\n          this.setNodeLocationFromNode = <any>setNodeLocationOnlyOffset;\n          this.cstPostRule = noop;\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRecovery;\n        } else {\n          this.setNodeLocationFromToken = noop;\n          this.setNodeLocationFromNode = noop;\n          this.cstPostRule = this.cstPostRuleOnlyOffset;\n          this.setInitialNodeLocation =\n            this.setInitialNodeLocationOnlyOffsetRegular;\n        }\n      } else if (/none/i.test(this.nodeLocationTracking)) {\n        this.setNodeLocationFromToken = noop;\n        this.setNodeLocationFromNode = noop;\n        this.cstPostRule = noop;\n        this.setInitialNodeLocation = noop;\n      } else {\n        throw Error(\n          `Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`,\n        );\n      }\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRecovery(\n    this: MixedInParser,\n    cstNode: any,\n  ): void {\n    cstNode.location = {\n      startOffset: NaN,\n      endOffset: NaN,\n    };\n  }\n\n  setInitialNodeLocationOnlyOffsetRegular(\n    this: MixedInParser,\n    cstNode: any,\n  ): void {\n    cstNode.location = {\n      // without error recovery the starting Location of a new CstNode is guaranteed\n      // To be the next Token's startOffset (for valid inputs).\n      // For invalid inputs there won't be any CSTOutput so this potential\n      // inaccuracy does not matter\n      startOffset: this.LA(1).startOffset,\n      endOffset: NaN,\n    };\n  }\n\n  setInitialNodeLocationFullRecovery(this: MixedInParser, cstNode: any): void {\n    cstNode.location = {\n      startOffset: NaN,\n      startLine: NaN,\n      startColumn: NaN,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN,\n    };\n  }\n\n  /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n  setInitialNodeLocationFullRegular(this: MixedInParser, cstNode: any): void {\n    const nextToken = this.LA(1);\n    cstNode.location = {\n      startOffset: nextToken.startOffset,\n      startLine: nextToken.startLine,\n      startColumn: nextToken.startColumn,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN,\n    };\n  }\n\n  cstInvocationStateUpdate(this: MixedInParser, fullRuleName: string): void {\n    const cstNode: CstNode = {\n      name: fullRuleName,\n      children: Object.create(null),\n    };\n\n    this.setInitialNodeLocation(cstNode);\n    this.CST_STACK.push(cstNode);\n  }\n\n  cstFinallyStateUpdate(this: MixedInParser): void {\n    this.CST_STACK.pop();\n  }\n\n  cstPostRuleFull(this: MixedInParser, ruleCstNode: CstNode): void {\n    // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n    const prevToken = this.LA(0) as Required<CstNodeLocation>;\n    const loc = ruleCstNode.location as Required<CstNodeLocation>;\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n      loc.endLine = prevToken.endLine;\n      loc.endColumn = prevToken.endColumn;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n      loc.startLine = NaN;\n      loc.startColumn = NaN;\n    }\n  }\n\n  cstPostRuleOnlyOffset(this: MixedInParser, ruleCstNode: CstNode): void {\n    const prevToken = this.LA(0);\n    // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n    const loc = ruleCstNode.location!;\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n    }\n  }\n\n  cstPostTerminal(\n    this: MixedInParser,\n    key: string,\n    consumedToken: IToken,\n  ): void {\n    const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n    addTerminalToCst(rootCst, consumedToken, key);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromToken(rootCst.location!, <any>consumedToken);\n  }\n\n  cstPostNonTerminal(\n    this: MixedInParser,\n    ruleCstResult: CstNode,\n    ruleName: string,\n  ): void {\n    const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n    addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromNode(preCstNode.location!, ruleCstResult.location!);\n  }\n\n  getBaseCstVisitorConstructor<IN = any, OUT = any>(\n    this: MixedInParser,\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>;\n  } {\n    if (isUndefined(this.baseCstVisitorConstructor)) {\n      const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(\n        this.className,\n        keys(this.gastProductionsCache),\n      );\n      this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n      return newBaseCstVisitorConstructor;\n    }\n\n    return <any>this.baseCstVisitorConstructor;\n  }\n\n  getBaseCstVisitorConstructorWithDefaults<IN = any, OUT = any>(\n    this: MixedInParser,\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>;\n  } {\n    if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n      const newConstructor = createBaseVisitorConstructorWithDefaults(\n        this.className,\n        keys(this.gastProductionsCache),\n        this.getBaseCstVisitorConstructor(),\n      );\n      this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n      return newConstructor;\n    }\n\n    return <any>this.baseCstVisitorWithDefaultsConstructor;\n  }\n\n  getLastExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 1];\n  }\n\n  getPreviousExplicitRuleShortName(this: MixedInParser): number {\n    const ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 2];\n  }\n\n  getLastExplicitRuleOccurrenceIndex(this: MixedInParser): number {\n    const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n    return occurrenceStack[occurrenceStack.length - 1];\n  }\n}\n","import { END_OF_FILE } from \"../parser.js\";\nimport { IToken } from \"@chevrotain/types\";\nimport { MixedInParser } from \"./parser_traits.js\";\n\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n  tokVector: IToken[];\n  tokVectorLength: number;\n  currIdx: number;\n\n  initLexerAdapter() {\n    this.tokVector = [];\n    this.tokVectorLength = 0;\n    this.currIdx = -1;\n  }\n\n  set input(newInput: IToken[]) {\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    if (this.selfAnalysisDone !== true) {\n      throw Error(\n        `Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`,\n      );\n    }\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    this.reset();\n    this.tokVector = newInput;\n    this.tokVectorLength = newInput.length;\n  }\n\n  get input(): IToken[] {\n    return this.tokVector;\n  }\n\n  // skips a token and returns the next token\n  SKIP_TOKEN(this: MixedInParser): IToken {\n    if (this.currIdx <= this.tokVector.length - 2) {\n      this.consumeToken();\n      return this.LA(1);\n    } else {\n      return END_OF_FILE;\n    }\n  }\n\n  // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n  // or lexers dependent on parser context.\n  LA(this: MixedInParser, howMuch: number): IToken {\n    const soughtIdx = this.currIdx + howMuch;\n    if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n      return END_OF_FILE;\n    } else {\n      return this.tokVector[soughtIdx];\n    }\n  }\n\n  consumeToken(this: MixedInParser) {\n    this.currIdx++;\n  }\n\n  exportLexerState(this: MixedInParser): number {\n    return this.currIdx;\n  }\n\n  importLexerState(this: MixedInParser, newState: number) {\n    this.currIdx = newState;\n  }\n\n  resetLexerState(this: MixedInParser): void {\n    this.currIdx = -1;\n  }\n\n  moveToTerminatedState(this: MixedInParser): void {\n    this.currIdx = this.tokVector.length - 1;\n  }\n\n  getLexerPosition(this: MixedInParser): number {\n    return this.exportLexerState();\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IRuleConfig,\n  ISerializedGast,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType,\n} from \"@chevrotain/types\";\nimport { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { Rule, serializeGrammar } from \"@chevrotain/gast\";\nimport { IParserDefinitionError } from \"../../grammar/types.js\";\nimport { ParserMethodInternal } from \"../types.js\";\n\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n  ACTION<T>(this: MixedInParser, impl: () => T): T {\n    return impl.call(this);\n  }\n\n  consume(\n    this: MixedInParser,\n    idx: number,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, idx, options);\n  }\n\n  subrule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    idx: number,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, idx, options);\n  }\n\n  option<OUT>(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, idx);\n  }\n\n  or(\n    this: MixedInParser,\n    idx: number,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<any>,\n  ): any {\n    return this.orInternal(altsOrOpts, idx);\n  }\n\n  many(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOpts<any>,\n  ): void {\n    return this.manyInternal(idx, actionORMethodDef);\n  }\n\n  atLeastOne(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOptsWithErr<any>,\n  ): void {\n    return this.atLeastOneInternal(idx, actionORMethodDef);\n  }\n\n  CONSUME(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 0, options);\n  }\n\n  CONSUME1(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 1, options);\n  }\n\n  CONSUME2(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 2, options);\n  }\n\n  CONSUME3(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 3, options);\n  }\n\n  CONSUME4(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 4, options);\n  }\n\n  CONSUME5(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 5, options);\n  }\n\n  CONSUME6(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 6, options);\n  }\n\n  CONSUME7(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 7, options);\n  }\n\n  CONSUME8(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 8, options);\n  }\n\n  CONSUME9(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    return this.consumeInternal(tokType, 9, options);\n  }\n\n  SUBRULE<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 0, options);\n  }\n\n  SUBRULE1<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 1, options);\n  }\n\n  SUBRULE2<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 2, options);\n  }\n\n  SUBRULE3<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 3, options);\n  }\n\n  SUBRULE4<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 4, options);\n  }\n\n  SUBRULE5<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 5, options);\n  }\n\n  SUBRULE6<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 6, options);\n  }\n\n  SUBRULE7<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 7, options);\n  }\n\n  SUBRULE8<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 8, options);\n  }\n\n  SUBRULE9<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    return this.subruleInternal(ruleToCall, 9, options);\n  }\n\n  OPTION<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 0);\n  }\n\n  OPTION1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 1);\n  }\n\n  OPTION2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 2);\n  }\n\n  OPTION3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 3);\n  }\n\n  OPTION4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 4);\n  }\n\n  OPTION5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 5);\n  }\n\n  OPTION6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 6);\n  }\n\n  OPTION7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 7);\n  }\n\n  OPTION8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 8);\n  }\n\n  OPTION9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): OUT | undefined {\n    return this.optionInternal(actionORMethodDef, 9);\n  }\n\n  OR<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 0);\n  }\n\n  OR1<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 1);\n  }\n\n  OR2<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 2);\n  }\n\n  OR3<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 3);\n  }\n\n  OR4<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 4);\n  }\n\n  OR5<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 5);\n  }\n\n  OR6<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 6);\n  }\n\n  OR7<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 7);\n  }\n\n  OR8<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 8);\n  }\n\n  OR9<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n  ): T {\n    return this.orInternal(altsOrOpts, 9);\n  }\n\n  MANY<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(0, actionORMethodDef);\n  }\n\n  MANY1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(1, actionORMethodDef);\n  }\n\n  MANY2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(2, actionORMethodDef);\n  }\n\n  MANY3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(3, actionORMethodDef);\n  }\n\n  MANY4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(4, actionORMethodDef);\n  }\n\n  MANY5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(5, actionORMethodDef);\n  }\n\n  MANY6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(6, actionORMethodDef);\n  }\n\n  MANY7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(7, actionORMethodDef);\n  }\n\n  MANY8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(8, actionORMethodDef);\n  }\n\n  MANY9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    this.manyInternal(9, actionORMethodDef);\n  }\n\n  MANY_SEP<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(0, options);\n  }\n\n  MANY_SEP1<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(1, options);\n  }\n\n  MANY_SEP2<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(2, options);\n  }\n\n  MANY_SEP3<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(3, options);\n  }\n\n  MANY_SEP4<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(4, options);\n  }\n\n  MANY_SEP5<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(5, options);\n  }\n\n  MANY_SEP6<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(6, options);\n  }\n\n  MANY_SEP7<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(7, options);\n  }\n\n  MANY_SEP8<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(8, options);\n  }\n\n  MANY_SEP9<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(9, options);\n  }\n\n  AT_LEAST_ONE<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(0, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    return this.atLeastOneInternal(1, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(2, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(3, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(4, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(5, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(6, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(7, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(8, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    this.atLeastOneInternal(9, actionORMethodDef);\n  }\n\n  AT_LEAST_ONE_SEP<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(0, options);\n  }\n\n  AT_LEAST_ONE_SEP1<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(1, options);\n  }\n\n  AT_LEAST_ONE_SEP2<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(2, options);\n  }\n\n  AT_LEAST_ONE_SEP3<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(3, options);\n  }\n\n  AT_LEAST_ONE_SEP4<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(4, options);\n  }\n\n  AT_LEAST_ONE_SEP5<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(5, options);\n  }\n\n  AT_LEAST_ONE_SEP6<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(6, options);\n  }\n\n  AT_LEAST_ONE_SEP7<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(7, options);\n  }\n\n  AT_LEAST_ONE_SEP8<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(8, options);\n  }\n\n  AT_LEAST_ONE_SEP9<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    this.atLeastOneSepFirstInternal(9, options);\n  }\n\n  RULE<T>(\n    this: MixedInParser,\n    name: string,\n    implementation: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG,\n  ): (idxInCallingRule?: number, ...args: any[]) => T | any {\n    if (includes(this.definedRulesNames, name)) {\n      const errMsg =\n        defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n          topLevelRule: name,\n          grammarName: this.className,\n        });\n\n      const error = {\n        message: errMsg,\n        type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n        ruleName: name,\n      };\n      this.definitionErrors.push(error);\n    }\n\n    this.definedRulesNames.push(name);\n\n    const ruleImplementation = this.defineRule(name, implementation, config);\n    (this as any)[name] = ruleImplementation;\n    return ruleImplementation;\n  }\n\n  OVERRIDE_RULE<T>(\n    this: MixedInParser,\n    name: string,\n    impl: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG,\n  ): (idxInCallingRule?: number, ...args: any[]) => T {\n    const ruleErrors: IParserDefinitionError[] = validateRuleIsOverridden(\n      name,\n      this.definedRulesNames,\n      this.className,\n    );\n    this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n\n    const ruleImplementation = this.defineRule(name, impl, config);\n    (this as any)[name] = ruleImplementation;\n    return ruleImplementation;\n  }\n\n  BACKTRACK<T>(\n    this: MixedInParser,\n    grammarRule: (...args: any[]) => T,\n    args?: any[],\n  ): () => boolean {\n    return function () {\n      // save org state\n      this.isBackTrackingStack.push(1);\n      const orgState = this.saveRecogState();\n      try {\n        grammarRule.apply(this, args);\n        // if no exception was thrown we have succeed parsing the rule.\n        return true;\n      } catch (e) {\n        if (isRecognitionException(e)) {\n          return false;\n        } else {\n          throw e;\n        }\n      } finally {\n        this.reloadRecogState(orgState);\n        this.isBackTrackingStack.pop();\n      }\n    };\n  }\n\n  // GAST export APIs\n  public getGAstProductions(this: MixedInParser): Record<string, Rule> {\n    return this.gastProductionsCache;\n  }\n\n  public getSerializedGastProductions(this: MixedInParser): ISerializedGast[] {\n    return serializeGrammar(values(this.gastProductionsCache));\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IRuleConfig,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  ParserMethod,\n  SubruleMethodOpts,\n  TokenType,\n  TokenTypeDictionary,\n  TokenVocabulary,\n} from \"@chevrotain/types\";\nimport {\n  clone,\n  every,\n  flatten,\n  has,\n  isArray,\n  isEmpty,\n  isObject,\n  reduce,\n  uniq,\n  values,\n} from \"lodash-es\";\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  BITS_FOR_METHOD_TYPE,\n  BITS_FOR_OCCURRENCE_IDX,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX,\n} from \"../../grammar/keys.js\";\nimport {\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n} from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  NextTerminalAfterAtLeastOneSepWalker,\n  NextTerminalAfterAtLeastOneWalker,\n  NextTerminalAfterManySepWalker,\n  NextTerminalAfterManyWalker,\n} from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG, IParserState, TokenMatcher } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  augmentTokenTypes,\n  isTokenType,\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories,\n} from \"../../../scan/tokens.js\";\nimport { Rule } from \"@chevrotain/gast\";\nimport { ParserMethodInternal } from \"../types.js\";\n\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n  isBackTrackingStack: boolean[];\n  className: string;\n  RULE_STACK: number[];\n  RULE_OCCURRENCE_STACK: number[];\n  definedRulesNames: string[];\n  tokensMap: { [fqn: string]: TokenType };\n  gastProductionsCache: Record<string, Rule>;\n  shortRuleNameToFull: Record<string, string>;\n  fullRuleNameToShort: Record<string, number>;\n  // The shortName Index must be coded \"after\" the first 8bits to enable building unique lookahead keys\n  ruleShortNameIdx: number;\n  tokenMatcher: TokenMatcher;\n  subruleIdx: number;\n\n  initRecognizerEngine(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig,\n  ) {\n    this.className = this.constructor.name;\n    // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokenStructuredMatcherNoCategories;\n    this.subruleIdx = 0;\n\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\n        \"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n          \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n          \"\\tFor Further details.\",\n      );\n    }\n\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary as any[])) {\n        throw Error(\n          \"A Token Vocabulary cannot be empty.\\n\" +\n            \"\\tNote that the first argument for the parser constructor\\n\" +\n            \"\\tis no longer a Token vector (since v4.0).\",\n        );\n      }\n\n      if (typeof (tokenVocabulary as any[])[0].startOffset === \"number\") {\n        throw Error(\n          \"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n            \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n            \"\\tFor Further details.\",\n        );\n      }\n    }\n\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = reduce(\n        tokenVocabulary,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType;\n          return acc;\n        },\n        {} as { [tokenName: string]: TokenType },\n      );\n    } else if (\n      has(tokenVocabulary, \"modes\") &&\n      every(flatten(values((<any>tokenVocabulary).modes)), isTokenType)\n    ) {\n      const allTokenTypes = flatten(values((<any>tokenVocabulary).modes));\n      const uniqueTokens = uniq(allTokenTypes);\n      this.tokensMap = <any>reduce(\n        uniqueTokens,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType;\n          return acc;\n        },\n        {} as { [tokenName: string]: TokenType },\n      );\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = clone(tokenVocabulary as TokenTypeDictionary);\n    } else {\n      throw new Error(\n        \"<tokensDictionary> argument must be An Array of Token constructors,\" +\n          \" A dictionary of Token constructors or an IMultiModeLexerDefinition\",\n      );\n    }\n\n    // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n    this.tokensMap[\"EOF\"] = EOF;\n\n    const allTokenTypes = has(tokenVocabulary, \"modes\")\n      ? flatten(values((<any>tokenVocabulary).modes))\n      : values(tokenVocabulary);\n    const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) =>\n      isEmpty(tokenConstructor.categoryMatches),\n    );\n\n    this.tokenMatcher = noTokenCategoriesUsed\n      ? tokenStructuredMatcherNoCategories\n      : tokenStructuredMatcher;\n\n    // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n    augmentTokenTypes(values(this.tokensMap));\n  }\n\n  defineRule<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleName: string,\n    impl: (...args: ARGS) => R,\n    config: IRuleConfig<R>,\n  ): ParserMethodInternal<ARGS, R> {\n    if (this.selfAnalysisDone) {\n      throw Error(\n        `Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n          `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`,\n      );\n    }\n    const resyncEnabled: boolean = has(config, \"resyncEnabled\")\n      ? (config.resyncEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.resyncEnabled;\n    const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n      ? (config.recoveryValueFunc as () => R) // assumes end user provides the correct config value/type\n      : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n\n    // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n    const shortName =\n      this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n\n    let invokeRuleWithTry: ParserMethod<ARGS, R>;\n\n    // Micro optimization, only check the condition **once** on rule definition\n    // instead of **every single** rule invocation.\n    if (this.outputCst === true) {\n      invokeRuleWithTry = function invokeRuleWithTry(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          impl.apply(this, args);\n          const cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst as unknown as R;\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R;\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    } else {\n      invokeRuleWithTry = function invokeRuleWithTryCst(\n        this: MixedInParser,\n        ...args: ARGS\n      ): R {\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          return impl.apply(this, args);\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc) as R;\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    }\n\n    const wrappedGrammarRule: ParserMethodInternal<ARGS, R> = Object.assign(\n      invokeRuleWithTry as any,\n      { ruleName, originalGrammarAction: impl },\n    );\n\n    return wrappedGrammarRule;\n  }\n\n  invokeRuleCatch(\n    this: MixedInParser,\n    e: Error,\n    resyncEnabledConfig: boolean,\n    recoveryValueFunc: Function,\n  ): unknown {\n    const isFirstInvokedRule = this.RULE_STACK.length === 1;\n    // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n    const reSyncEnabled =\n      resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n\n    if (isRecognitionException(e)) {\n      const recogError: any = e;\n      if (reSyncEnabled) {\n        const reSyncTokType = this.findReSyncTokenType();\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc(e);\n          }\n        } else {\n          if (this.outputCst) {\n            const partialCstResult: any =\n              this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          }\n          // to be handled Further up the call stack\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState();\n        // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n        return recoveryValueFunc(e);\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternal<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n  ): OUT | undefined {\n    const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  }\n\n  optionInternalLogic<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n    key: number,\n  ): OUT | undefined {\n    let lookAheadFunc = this.getLaFuncFromCache(key);\n    let action: GrammarAction<OUT>;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc;\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n    return undefined;\n  }\n\n  atLeastOneInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n    );\n    return this.atLeastOneInternalLogic(\n      prodOccurrence,\n      actionORMethodDef,\n      laKey,\n    );\n  }\n\n  atLeastOneInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n    key: number,\n  ): void {\n    let lookAheadFunc = this.getLaFuncFromCache(key);\n    let action;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookAheadFunc;\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if ((<Function>lookAheadFunc).call(this) === true) {\n      let notStuck = this.doSingleRepetition(action);\n      while (\n        (<Function>lookAheadFunc).call(this) === true &&\n        notStuck === true\n      ) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY,\n        (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).ERR_MSG,\n      );\n    }\n\n    // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.atLeastOneInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookAheadFunc,\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n      NextTerminalAfterAtLeastOneWalker,\n    );\n  }\n\n  atLeastOneSepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n    );\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  }\n\n  atLeastOneSepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n    key: number,\n  ): void {\n    const action = options.DEF;\n    const separator = options.SEP;\n\n    const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n\n    // 1st iteration\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      (<GrammarAction<OUT>>action).call(this);\n\n      //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator);\n      };\n\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        // No need for checking infinite loop here due to consuming the separator.\n        (<GrammarAction<OUT>>action).call(this);\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterAtLeastOneSepWalker,\n        ],\n        separatorLookAheadFunc,\n        AT_LEAST_ONE_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterAtLeastOneSepWalker,\n      );\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        options.ERR_MSG,\n      );\n    }\n  }\n\n  manyInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  }\n\n  manyInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    key: number,\n  ) {\n    let lookaheadFunction = this.getLaFuncFromCache(key);\n    let action;\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      const predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        const orgLookaheadFunction = lookaheadFunction;\n        lookaheadFunction = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    let notStuck = true;\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    }\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.manyInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookaheadFunction,\n      MANY_IDX,\n      prodOccurrence,\n      NextTerminalAfterManyWalker,\n      // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n      // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n      // An infinite loop cannot occur as:\n      // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n      // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n      notStuck,\n    );\n  }\n\n  manySepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n  ): void {\n    const laKey = this.getKeyForAutomaticLookahead(\n      MANY_SEP_IDX,\n      prodOccurrence,\n    );\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  }\n\n  manySepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n    key: number,\n  ): void {\n    const action = options.DEF;\n    const separator = options.SEP;\n    const firstIterationLaFunc = this.getLaFuncFromCache(key);\n\n    // 1st iteration\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n\n      const separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator);\n      };\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        // No need for checking infinite loop here due to consuming the separator.\n        action.call(this);\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterManySepWalker,\n        ],\n        separatorLookAheadFunc,\n        MANY_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterManySepWalker,\n      );\n    }\n  }\n\n  repetitionSepSecondInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    separator: TokenType,\n    separatorLookAheadFunc: () => boolean,\n    action: GrammarAction<OUT>,\n    nextTerminalAfterWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  ): void {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    }\n\n    // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    /* istanbul ignore else */\n    this.attemptInRepetitionRecovery(\n      this.repetitionSepSecondInternal,\n      [\n        prodOccurrence,\n        separator,\n        separatorLookAheadFunc,\n        action,\n        nextTerminalAfterWalker,\n      ],\n      separatorLookAheadFunc,\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n      nextTerminalAfterWalker,\n    );\n  }\n\n  doSingleRepetition(this: MixedInParser, action: Function): any {\n    const beforeIteration = this.getLexerPosition();\n    action.call(this);\n    const afterIteration = this.getLexerPosition();\n\n    // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n    return afterIteration > beforeIteration;\n  }\n\n  orInternal<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number,\n  ): T {\n    const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n    const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n\n    const laFunc = this.getLaFuncFromCache(laKey);\n    const altIdxToTake = laFunc.call(this, alts);\n    if (altIdxToTake !== undefined) {\n      const chosenAlternative: any = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n    this.raiseNoAltException(\n      occurrence,\n      (altsOrOpts as OrMethodOpts<unknown>).ERR_MSG,\n    );\n  }\n\n  ruleFinallyStateUpdate(this: MixedInParser): void {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop();\n\n    // NOOP when cst is disabled\n    this.cstFinallyStateUpdate();\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      const firstRedundantTok = this.LA(1);\n      const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName(),\n      });\n      this.SAVE_ERROR(\n        new NotAllInputParsedException(errMsg, firstRedundantTok),\n      );\n    }\n  }\n\n  subruleInternal<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    idx: number,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R {\n    let ruleResult;\n    try {\n      const args = options !== undefined ? options.ARGS : undefined;\n      this.subruleIdx = idx;\n      ruleResult = ruleToCall.apply(this, args);\n      this.cstPostNonTerminal(\n        ruleResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleToCall.ruleName,\n      );\n      return ruleResult;\n    } catch (e) {\n      throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  }\n\n  subruleInternalError(\n    this: MixedInParser,\n    e: any,\n    options: SubruleMethodOpts<unknown[]> | undefined,\n    ruleName: string,\n  ): void {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(\n        e.partialCstResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleName,\n      );\n\n      delete e.partialCstResult;\n    }\n    throw e;\n  }\n\n  consumeInternal(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    options: ConsumeMethodOpts | undefined,\n  ): IToken {\n    let consumedToken!: IToken;\n    try {\n      const nextToken = this.LA(1);\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(\n        tokType,\n        idx,\n        eFromConsumption,\n      );\n    }\n\n    this.cstPostTerminal(\n      options !== undefined && options.LABEL !== undefined\n        ? options.LABEL\n        : tokType.name,\n      consumedToken,\n    );\n    return consumedToken;\n  }\n\n  consumeInternalError(\n    this: MixedInParser,\n    tokType: TokenType,\n    nextToken: IToken,\n    options: ConsumeMethodOpts | undefined,\n  ): void {\n    let msg;\n    const previousToken = this.LA(0);\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName(),\n      });\n    }\n    throw this.SAVE_ERROR(\n      new MismatchedTokenException(msg, nextToken, previousToken),\n    );\n  }\n\n  consumeInternalRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    eFromConsumption: Error,\n  ): IToken {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (\n      this.recoveryEnabled &&\n      // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n      eFromConsumption.name === \"MismatchedTokenException\" &&\n      !this.isBackTracking()\n    ) {\n      const follows = this.getFollowsForInRuleRecovery(<any>tokType, idx);\n      try {\n        return this.tryInRuleRecovery(<any>tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  }\n\n  saveRecogState(this: MixedInParser): IParserState {\n    // errors is a getter which will clone the errors array\n    const savedErrors = this.errors;\n    const savedRuleStack = clone(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK,\n    };\n  }\n\n  reloadRecogState(this: MixedInParser, newState: IParserState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  }\n\n  ruleInvocationStateUpdate(\n    this: MixedInParser,\n    shortName: number,\n    fullName: string,\n    idxInCallingRule: number,\n  ): void {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName);\n    // NOOP when cst is disabled\n    this.cstInvocationStateUpdate(fullName);\n  }\n\n  isBackTracking(this: MixedInParser): boolean {\n    return this.isBackTrackingStack.length !== 0;\n  }\n\n  getCurrRuleFullName(this: MixedInParser): string {\n    const shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  }\n\n  shortRuleNameToFullName(this: MixedInParser, shortName: number) {\n    return this.shortRuleNameToFull[shortName];\n  }\n\n  public isAtEndOfInput(this: MixedInParser): boolean {\n    return this.tokenMatcher(this.LA(1), EOF);\n  }\n\n  public reset(this: MixedInParser): void {\n    this.resetLexerState();\n    this.subruleIdx = 0;\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = [];\n    // TODO: extract a specific reset for TreeBuilder trait\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  }\n}\n","import {\n  IParserConfig,\n  IParserErrorMessageProvider,\n  IRecognitionException,\n} from \"@chevrotain/types\";\nimport {\n  EarlyExitException,\n  isRecognitionException,\n  NoViableAltException,\n} from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport {\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  PROD_TYPE,\n} from \"../../grammar/lookahead.js\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n  _errors: IRecognitionException[];\n  errorMessageProvider: IParserErrorMessageProvider;\n\n  initErrorHandler(config: IParserConfig) {\n    this._errors = [];\n    this.errorMessageProvider = has(config, \"errorMessageProvider\")\n      ? (config.errorMessageProvider as IParserErrorMessageProvider) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n  }\n\n  SAVE_ERROR(\n    this: MixedInParser,\n    error: IRecognitionException,\n  ): IRecognitionException {\n    if (isRecognitionException(error)) {\n      error.context = {\n        ruleStack: this.getHumanReadableRuleStack(),\n        ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n      };\n      this._errors.push(error);\n      return error;\n    } else {\n      throw Error(\n        \"Trying to save an Error which is not a RecognitionException\",\n      );\n    }\n  }\n\n  get errors(): IRecognitionException[] {\n    return clone(this._errors);\n  }\n\n  set errors(newErrors: IRecognitionException[]) {\n    this._errors = newErrors;\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseEarlyExitException(\n    this: MixedInParser,\n    occurrence: number,\n    prodType: PROD_TYPE,\n    userDefinedErrMsg: string | undefined,\n  ): never {\n    const ruleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[ruleName];\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(\n      occurrence,\n      ruleGrammar,\n      prodType,\n      this.maxLookahead,\n    );\n    const insideProdPaths = lookAheadPathsPerAlternative[0];\n    const actualTokens = [];\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i));\n    }\n    const msg = this.errorMessageProvider.buildEarlyExitMessage({\n      expectedIterationPaths: insideProdPaths,\n      actual: actualTokens,\n      previous: this.LA(0),\n      customUserDescription: userDefinedErrMsg,\n      ruleName: ruleName,\n    });\n\n    throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseNoAltException(\n    this: MixedInParser,\n    occurrence: number,\n    errMsgTypes: string | undefined,\n  ): never {\n    const ruleName = this.getCurrRuleFullName();\n    const ruleGrammar = this.getGAstProductions()[ruleName];\n    // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n    const lookAheadPathsPerAlternative = getLookaheadPathsForOr(\n      occurrence,\n      ruleGrammar,\n      this.maxLookahead,\n    );\n\n    const actualTokens = [];\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i));\n    }\n    const previousToken = this.LA(0);\n\n    const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n      expectedPathsPerAlt: lookAheadPathsPerAlternative,\n      actual: actualTokens,\n      previous: previousToken,\n      customUserDescription: errMsgTypes,\n      ruleName: this.getCurrRuleFullName(),\n    });\n\n    throw this.SAVE_ERROR(\n      new NoViableAltException(errMsg, this.LA(1), previousToken),\n    );\n  }\n}\n","import {\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  NextAfterTokenWalker,\n  nextPossibleTokensAfter,\n} from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nimport { MixedInParser } from \"./parser_traits.js\";\n\nexport class ContentAssist {\n  initContentAssist() {}\n\n  public computeContentAssist(\n    this: MixedInParser,\n    startRuleName: string,\n    precedingInput: IToken[],\n  ): ISyntacticContentAssistPath[] {\n    const startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if (isUndefined(startRuleGast)) {\n      throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n    }\n\n    return nextPossibleTokensAfter(\n      [startRuleGast],\n      precedingInput,\n      this.tokenMatcher,\n      this.maxLookahead,\n    );\n  }\n\n  // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n  public getNextPossibleTokenTypes(\n    this: MixedInParser,\n    grammarPath: ITokenGrammarPath,\n  ): TokenType[] {\n    const topRuleName = first(grammarPath.ruleStack)!;\n    const gastProductions = this.getGAstProductions();\n    const topProduction = gastProductions[topRuleName];\n    const nextPossibleTokenTypes = new NextAfterTokenWalker(\n      topProduction,\n      grammarPath,\n    ).startWalking();\n    return nextPossibleTokenTypes;\n  }\n}\n","import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  CstNode,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IProduction,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType,\n} from \"@chevrotain/types\";\nimport {\n  forEach,\n  has,\n  isArray,\n  isFunction,\n  last as peek,\n  some,\n} from \"lodash-es\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal,\n} from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport {\n  augmentTokenTypes,\n  hasShortKeyProperty,\n} from \"../../../scan/tokens.js\";\nimport {\n  createToken,\n  createTokenInstance,\n} from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nimport { ParserMethodInternal } from \"../types.js\";\n\ntype ProdWithDef = IProduction & { definition?: IProduction[] };\nconst RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\n\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\n\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(\n  RFT,\n  \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n  // cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n);\nObject.freeze(RECORDING_PHASE_TOKEN);\n\nconst RECORDING_PHASE_CSTNODE: CstNode = {\n  name:\n    \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {},\n};\n\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n  recordingProdStack: ProdWithDef[];\n  RECORDING_PHASE: boolean;\n\n  initGastRecorder(this: MixedInParser, config: IParserConfig): void {\n    this.recordingProdStack = [];\n    this.RECORDING_PHASE = false;\n  }\n\n  enableRecording(this: MixedInParser): void {\n    this.RECORDING_PHASE = true;\n\n    this.TRACE_INIT(\"Enable Recording\", () => {\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\";\n        this[`CONSUME${idx}` as \"CONSUME\"] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2);\n        };\n        this[`SUBRULE${idx}` as \"SUBRULE\"] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2) as any;\n        };\n        this[`OPTION${idx}` as \"OPTION\"] = function (arg1) {\n          return this.optionInternalRecord(arg1, i);\n        };\n        this[`OR${idx}` as \"OR\"] = function (arg1) {\n          return this.orInternalRecord(arg1, i);\n        };\n        this[`MANY${idx}` as \"MANY\"] = function (arg1) {\n          this.manyInternalRecord(i, arg1);\n        };\n        this[`MANY_SEP${idx}` as \"MANY_SEP\"] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1);\n        };\n        this[`AT_LEAST_ONE${idx}` as \"AT_LEAST_ONE\"] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1);\n        };\n        this[`AT_LEAST_ONE_SEP${idx}` as \"AT_LEAST_ONE_SEP\"] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1);\n        };\n      }\n\n      // DSL methods with the idx(suffix) as an argument\n      this[`consume`] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2);\n      };\n      this[`subrule`] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2) as any;\n      };\n      this[`option`] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx);\n      };\n      this[`or`] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx);\n      };\n      this[`many`] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1);\n      };\n      this[`atLeastOne`] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1);\n      };\n\n      this.ACTION = this.ACTION_RECORD;\n      this.BACKTRACK = this.BACKTRACK_RECORD;\n      this.LA = this.LA_RECORD;\n    });\n  }\n\n  disableRecording(this: MixedInParser) {\n    this.RECORDING_PHASE = false;\n    // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n    this.TRACE_INIT(\"Deleting Recording methods\", () => {\n      const that: any = this;\n\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\";\n        delete that[`CONSUME${idx}`];\n        delete that[`SUBRULE${idx}`];\n        delete that[`OPTION${idx}`];\n        delete that[`OR${idx}`];\n        delete that[`MANY${idx}`];\n        delete that[`MANY_SEP${idx}`];\n        delete that[`AT_LEAST_ONE${idx}`];\n        delete that[`AT_LEAST_ONE_SEP${idx}`];\n      }\n\n      delete that[`consume`];\n      delete that[`subrule`];\n      delete that[`option`];\n      delete that[`or`];\n      delete that[`many`];\n      delete that[`atLeastOne`];\n\n      delete that.ACTION;\n      delete that.BACKTRACK;\n      delete that.LA;\n    });\n  }\n\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  // @ts-expect-error -- noop place holder\n  ACTION_RECORD<T>(this: MixedInParser, impl: () => T): T {\n    // NO-OP during recording\n  }\n\n  // Executing backtracking logic will break our recording logic assumptions\n  BACKTRACK_RECORD<T>(\n    grammarRule: (...args: any[]) => T,\n    args?: any[],\n  ): () => boolean {\n    return () => true;\n  }\n\n  // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n  LA_RECORD(howMuch: number): IToken {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return END_OF_FILE;\n  }\n\n  topLevelRuleRecord(name: string, def: Function): Rule {\n    try {\n      const newTopLevelRule = new Rule({ definition: [], name: name });\n      newTopLevelRule.name = name;\n      this.recordingProdStack.push(newTopLevelRule);\n      def.call(this);\n      this.recordingProdStack.pop();\n      return newTopLevelRule;\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message =\n            originalError.message +\n            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError;\n        }\n      }\n      throw originalError;\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternalRecord<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n  ): OUT {\n    return recordProd.call(this, Option, actionORMethodDef, occurrence);\n  }\n\n  atLeastOneInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n  ): void {\n    recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n  }\n\n  atLeastOneSepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionMandatoryWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR,\n    );\n  }\n\n  manyInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n  ): void {\n    recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n  }\n\n  manySepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: ManySepMethodOpts<OUT>,\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR,\n    );\n  }\n\n  orInternalRecord<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number,\n  ): T {\n    return recordOrProd.call(this, altsOrOpts, occurrence);\n  }\n\n  subruleInternalRecord<ARGS extends unknown[], R>(\n    this: MixedInParser,\n    ruleToCall: ParserMethodInternal<ARGS, R>,\n    occurrence: number,\n    options?: SubruleMethodOpts<ARGS>,\n  ): R | CstNode {\n    assertMethodIdxIsValid(occurrence);\n    if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n      const error: any = new Error(\n        `<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a Parser method reference but got: <${JSON.stringify(\n            ruleToCall,\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`,\n      );\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    const prevProd: any = peek(this.recordingProdStack);\n    const ruleName = ruleToCall.ruleName;\n    const newNoneTerminal = new NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      label: options?.LABEL,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined,\n    });\n    prevProd.definition.push(newNoneTerminal);\n\n    return this.outputCst\n      ? RECORDING_PHASE_CSTNODE\n      : <any>RECORDING_NULL_OBJECT;\n  }\n\n  consumeInternalRecord(\n    this: MixedInParser,\n    tokType: TokenType,\n    occurrence: number,\n    options?: ConsumeMethodOpts,\n  ): IToken {\n    assertMethodIdxIsValid(occurrence);\n    if (!hasShortKeyProperty(tokType)) {\n      const error: any = new Error(\n        `<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a TokenType reference but got: <${JSON.stringify(\n            tokType,\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`,\n      );\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n    const prevProd: any = peek(this.recordingProdStack);\n    const newNoneTerminal = new Terminal({\n      idx: occurrence,\n      terminalType: tokType,\n      label: options?.LABEL,\n    });\n    prevProd.definition.push(newNoneTerminal);\n\n    return RECORDING_PHASE_TOKEN;\n  }\n}\n\nfunction recordProd(\n  prodConstructor: any,\n  mainProdArg: any,\n  occurrence: number,\n  handleSep: boolean = false,\n): any {\n  assertMethodIdxIsValid(occurrence);\n  const prevProd: any = peek(this.recordingProdStack);\n  const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n\n  const newProd = new prodConstructor({ definition: [], idx: occurrence });\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP;\n  }\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  this.recordingProdStack.push(newProd);\n  grammarAction.call(this);\n  prevProd.definition.push(newProd);\n  this.recordingProdStack.pop();\n\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction recordOrProd(mainProdArg: any, occurrence: number): any {\n  assertMethodIdxIsValid(occurrence);\n  const prevProd: any = peek(this.recordingProdStack);\n  // Only an array of alternatives\n  const hasOptions = isArray(mainProdArg) === false;\n  const alts: IOrAlt<unknown>[] =\n    hasOptions === false ? mainProdArg : mainProdArg.DEF;\n\n  const newOrProd = new Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n  });\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  const hasPredicates = some(alts, (currAlt: any) => isFunction(currAlt.GATE));\n  newOrProd.hasPredicates = hasPredicates;\n\n  prevProd.definition.push(newOrProd);\n\n  forEach(alts, (currAlt) => {\n    const currAltFlat = new Alternative({ definition: [] });\n    newOrProd.definition.push(currAltFlat);\n    if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES as boolean; // assumes end user provides the correct config value/type\n    }\n    // **implicit** ignoreAmbiguities due to usage of gate\n    else if (has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true;\n    }\n    this.recordingProdStack.push(currAltFlat);\n    currAlt.ALT.call(this);\n    this.recordingProdStack.pop();\n  });\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction getIdxSuffix(idx: number): string {\n  return idx === 0 ? \"\" : `${idx}`;\n}\n\nfunction assertMethodIdxIsValid(idx: number): void {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    const error: any = new Error(\n      // The stack trace will contain all the needed details\n      `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n        `Idx value must be a none negative value smaller than ${\n          MAX_METHOD_IDX + 1\n        }`,\n    );\n    error.KNOWN_RECORDER_ERROR = true;\n    throw error;\n  }\n}\n","import { IParserConfig } from \"@chevrotain/types\";\nimport { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { MixedInParser } from \"./parser_traits.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n  traceInitPerf: boolean | number;\n  traceInitMaxIdent: number;\n  traceInitIndent: number;\n\n  initPerformanceTracer(config: IParserConfig) {\n    if (has(config, \"traceInitPerf\")) {\n      const userTraceInitPerf = config.traceInitPerf;\n      const traceIsNumber = typeof userTraceInitPerf === \"number\";\n      this.traceInitMaxIdent = traceIsNumber\n        ? <number>userTraceInitPerf\n        : Infinity;\n      this.traceInitPerf = traceIsNumber\n        ? userTraceInitPerf > 0\n        : (userTraceInitPerf as boolean); // assumes end user provides the correct config value/type\n    } else {\n      this.traceInitMaxIdent = 0;\n      this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n    }\n\n    this.traceInitIndent = -1;\n  }\n\n  TRACE_INIT<T>(this: MixedInParser, phaseDesc: string, phaseImpl: () => T): T {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++;\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`);\n      }\n      const { time, value } = timer(phaseImpl);\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log;\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n      }\n      this.traceInitIndent--;\n      return value;\n    } else {\n      return phaseImpl();\n    }\n  }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach((baseCtor) => {\n    const baseProto = baseCtor.prototype;\n    Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n      if (propName === \"constructor\") {\n        return;\n      }\n\n      const basePropDescriptor = Object.getOwnPropertyDescriptor(\n        baseProto,\n        propName,\n      );\n      // Handle Accessors\n      if (\n        basePropDescriptor &&\n        (basePropDescriptor.get || basePropDescriptor.set)\n      ) {\n        Object.defineProperty(\n          derivedCtor.prototype,\n          propName,\n          basePropDescriptor,\n        );\n      } else {\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n      }\n    });\n  });\n}\n","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport {\n  defaultGrammarValidatorErrorProvider,\n  defaultParserErrorProvider,\n} from \"../errors_public.js\";\nimport {\n  resolveGrammar,\n  validateGrammar,\n} from \"../grammar/gast/gast_resolver_public.js\";\nimport {\n  CstNode,\n  IParserConfig,\n  IRecognitionException,\n  IRuleConfig,\n  IToken,\n  TokenType,\n  TokenVocabulary,\n} from \"@chevrotain/types\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\n\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { MixedInParser } from \"./traits/parser_traits.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { IParserDefinitionError } from \"../grammar/types.js\";\nimport { Rule } from \"@chevrotain/gast\";\nimport { IParserConfigInternal, ParserMethodInternal } from \"./types.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\n\nexport const END_OF_FILE = createTokenInstance(\n  EOF,\n  \"\",\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n);\nObject.freeze(END_OF_FILE);\n\nexport type TokenMatcher = (token: IToken, tokType: TokenType) => boolean;\n\nexport const DEFAULT_PARSER_CONFIG: Required<\n  Omit<IParserConfigInternal, \"lookaheadStrategy\">\n> = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false,\n});\n\nexport const DEFAULT_RULE_CONFIG: Required<IRuleConfig<any>> = Object.freeze({\n  recoveryValueFunc: () => undefined,\n  resyncEnabled: true,\n});\n\nexport enum ParserDefinitionErrorType {\n  INVALID_RULE_NAME = 0,\n  DUPLICATE_RULE_NAME = 1,\n  INVALID_RULE_OVERRIDE = 2,\n  DUPLICATE_PRODUCTIONS = 3,\n  UNRESOLVED_SUBRULE_REF = 4,\n  LEFT_RECURSION = 5,\n  NONE_LAST_EMPTY_ALT = 6,\n  AMBIGUOUS_ALTS = 7,\n  CONFLICT_TOKENS_RULES_NAMESPACE = 8,\n  INVALID_TOKEN_NAME = 9,\n  NO_NON_EMPTY_LOOKAHEAD = 10,\n  AMBIGUOUS_PREFIX_ALTS = 11,\n  TOO_MANY_ALTS = 12,\n  CUSTOM_LOOKAHEAD_VALIDATION = 13,\n}\n\nexport interface IParserDuplicatesDefinitionError\n  extends IParserDefinitionError {\n  dslName: string;\n  occurrence: number;\n  parameter?: string;\n}\n\nexport interface IParserEmptyAlternativeDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number;\n  alternative: number;\n}\n\nexport interface IParserAmbiguousAlternativesDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number | string;\n  alternatives: number[];\n}\n\nexport interface IParserUnresolvedRefDefinitionError\n  extends IParserDefinitionError {\n  unresolvedRefName: string;\n}\n\nexport interface IParserState {\n  errors: IRecognitionException[];\n  lexerState: any;\n  RULE_STACK: number[];\n  CST_STACK: CstNode[];\n}\n\nexport type Predicate = () => boolean;\n\nexport function EMPTY_ALT(): () => undefined;\nexport function EMPTY_ALT<T>(value: T): () => T;\nexport function EMPTY_ALT(value: any = undefined) {\n  return function () {\n    return value;\n  };\n}\n\nexport class Parser {\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  static DEFER_DEFINITION_ERRORS_HANDLING: boolean = false;\n\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n  static performSelfAnalysis(parserInstance: Parser): void {\n    throw Error(\n      \"The **static** `performSelfAnalysis` method has been deprecated.\" +\n        \"\\t\\nUse the **instance** method with the same name instead.\",\n    );\n  }\n\n  public performSelfAnalysis(this: MixedInParser): void {\n    this.TRACE_INIT(\"performSelfAnalysis\", () => {\n      let defErrorsMsgs;\n\n      this.selfAnalysisDone = true;\n      const className = this.className;\n\n      this.TRACE_INIT(\"toFastProps\", () => {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(this);\n      });\n\n      this.TRACE_INIT(\"Grammar Recording\", () => {\n        try {\n          this.enableRecording();\n          // Building the GAST\n          forEach(this.definedRulesNames, (currRuleName) => {\n            const wrappedRule = (this as any)[\n              currRuleName\n            ] as ParserMethodInternal<unknown[], unknown>;\n            const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            let recordedRuleGast!: Rule;\n            this.TRACE_INIT(`${currRuleName} Rule`, () => {\n              recordedRuleGast = this.topLevelRuleRecord(\n                currRuleName,\n                originalGrammarAction,\n              );\n            });\n            this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          this.disableRecording();\n        }\n      });\n\n      let resolverErrors: IParserDefinitionError[] = [];\n      this.TRACE_INIT(\"Grammar Resolving\", () => {\n        resolverErrors = resolveGrammar({\n          rules: values(this.gastProductionsCache),\n        });\n        this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n      });\n\n      this.TRACE_INIT(\"Grammar Validations\", () => {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && this.skipValidations === false) {\n          const validationErrors = validateGrammar({\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className,\n          });\n          const lookaheadValidationErrors = validateLookahead({\n            lookaheadStrategy: this.lookaheadStrategy,\n            rules: values(this.gastProductionsCache),\n            tokenTypes: values(this.tokensMap),\n            grammarName: className,\n          });\n          this.definitionErrors = this.definitionErrors.concat(\n            validationErrors,\n            lookaheadValidationErrors,\n          );\n        }\n      });\n\n      // this analysis may fail if the grammar is not perfectly valid\n      if (isEmpty(this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (this.recoveryEnabled) {\n          this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n            const allFollows = computeAllProdsFollows(\n              values(this.gastProductionsCache),\n            );\n            this.resyncFollows = allFollows;\n          });\n        }\n\n        this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n          this.lookaheadStrategy.initialize?.({\n            rules: values(this.gastProductionsCache),\n          });\n          this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n        });\n      }\n\n      if (\n        !Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n        !isEmpty(this.definitionErrors)\n      ) {\n        defErrorsMsgs = map(\n          this.definitionErrors,\n          (defError) => defError.message,\n        );\n        throw new Error(\n          `Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\n            \"\\n-------------------------------\\n\",\n          )}`,\n        );\n      }\n    });\n  }\n\n  definitionErrors: IParserDefinitionError[] = [];\n  selfAnalysisDone = false;\n  protected skipValidations: boolean;\n\n  constructor(tokenVocabulary: TokenVocabulary, config: IParserConfig) {\n    const that: MixedInParser = this as any;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if (has(config, \"ignoredIssues\")) {\n      throw new Error(\n        \"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n          \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n          \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n          \"For further details.\",\n      );\n    }\n\n    this.skipValidations = has(config, \"skipValidations\")\n      ? (config.skipValidations as boolean) // casting assumes the end user passing the correct type\n      : DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n}\n\napplyMixins(Parser, [\n  Recoverable,\n  LooksAhead,\n  TreeBuilder,\n  LexerAdapter,\n  RecognizerEngine,\n  RecognizerApi,\n  ErrorHandler,\n  ContentAssist,\n  GastRecorder,\n  PerformanceTracer,\n]);\n\nexport class CstParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG,\n  ) {\n    const configClone = clone(config);\n    configClone.outputCst = true;\n    super(tokenVocabulary, configClone);\n  }\n}\n\nexport class EmbeddedActionsParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfigInternal = DEFAULT_PARSER_CONFIG,\n  ) {\n    const configClone = clone(config);\n    configClone.outputCst = false;\n    super(tokenVocabulary, configClone);\n  }\n}\n"],"mappings":"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AAQ,OAAO,MAAM,SAAS,OAAO,OAAO,OAAO,OAAO,OAAO,SAAS,SAAS,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,OAAO,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAO,SAAS,OAAO,SAAS,SAAS,SAAS,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,MAAM,OAAO,MAAM,SAAS,KAAK,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAO,OAAO,OAAO,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,GAAK,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,OAAS,UAAU,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,QAAQ,OAAS,QAAQ,SAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,SAAS,OAAS,MAAM,OAAS,MAAM,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,OAAS,OAAO,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,SAAS,QAAQ,OAAS,UAAU,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,KAAK,OAAO,QAAQ,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,UAAU,OAAS,UAAU,OAAS,KAAK,OAAS,MAAM,OAAS,KAAK,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,UAAU,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,O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AAYJ,EAAOC,EAAGC,EAAOC,EAAQ,CACnC,KAAK,EAAIF,EACT,KAAK,MAAQD,EACb,KAAK,MAAQE,EACb,KAAK,OAASC,CAChB,CACA,aAAawB,EAAO,CAClB,OAAQA,EAAM,KAAK,KAAK,GAAK,KAAK,EAAK,KAAK,MAAQ,KAAK,MAC3D,CACF,EACAvB,GAAc,KAAO,EAGrB,IAAMC,GAAN,KAAiB,CAGf,YAAYuB,EAAQ,CAElB,GADA,KAAK,UAAY,CAAC,EACdA,IAAY,UACd,GAAI,MAAM,QAAQA,CAAM,EACtB,KAAK,UAAYA,MACZ,CACL,IAAIL,EAAIK,EAAO,QAAQ,GAAG,EACtBL,GAAK,IACP,KAAK,UAAU,CAAC,EAAIK,EAAO,UAAU,EAAGL,CAAC,EACzC,KAAK,UAAU,CAAC,EAAIK,EAAO,UAAUL,EAAI,CAAC,GAE1C,KAAK,UAAU,CAAC,EAAIK,CAExB,CAEJ,CAEA,OAAOC,EAAO,CACZ,GAAK,KAAK,UACV,QAASN,EAAI,EAAGA,EAAI,KAAK,UAAU,OAAQA,IACzCM,EAAM,KAAK,KAAK,UAAUN,CAAC,CAAC,CAChC,CACF,EACAlB,GAAW,KAAO,EAElBX,GAAc,MAAQ,CACpB,UACA,QACA,YACA,YACA,YACA,YACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,QACA,cACA,YACA,QACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,QACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eACA,gBACA,gBACA,eACA,QACA,gBACA,gBACA,eACA,gBACA,OACA,eACA,eACA,cACA,OACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,QACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,eACA,gBACA,gBACA,cACA,gBACA,QACA,gBACA,gBACA,gBACA,eACA,OACA,gBACA,QACA,gBACA,eACA,gBACA,OACA,cACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,gBACA,QACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,OACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,gBACA,eACA,gBACA,eACA,eACA,OACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,cACA,cACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,eACA,eACA,cACA,eACA,eACA,eACA,gBACA,OACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,cACA,gBACA,cACA,gBACA,eACA,eACA,eACA,eACA,eACA,OACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,eACA,eACA,eACA,gBACA,gBACA,eACA,cACA,gBACA,gBACA,cACA,gBACA,eACA,gBACA,eACA,eACA,cACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,cACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,gBACA,eACA,cACA,eACA,eACA,cACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,cACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,cACA,gBACA,gBACA,cACA,eACA,cACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,cACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,cACA,gBACA,gBACA,eACA,eACA,cACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,cACA,gBACA,cACA,cACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,cACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,cACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,cACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,cACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,cACA,gBACA,eACA,cACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,cACA,gBACA,cACA,cACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,cACA,eACA,eACA,gBACA,eACA,gBACA,OACA,eACA,eACA,cACA,eACA,gBACA,eACA,eACA,gBACA,cACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,cACA,cACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,UACA,eACA,eACA,eACA,eACA,cACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,cACA,eACA,gBACA,eACA,eACA,gBACA,eACA,cACA,eACA,gBACA,eACA,eACA,eACA,cACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,cACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,cACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,cACA,eACA,gBACA,eACA,eACA,eACA,cACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,cACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,cACA,eACA,eACA,eACA,eACA,eACA,cACA,eACA,cACA,eACA,eACA,gBACA,gBACA,gBACA,cACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,cACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,eACA,cACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,iBACA,eACA,gBACA,gBACA,cACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,gBACA,cACA,cACA,gBACA,kBACA,gBACA,gBACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,eACA,gBACA,gBACA,gBACA,gBACA,cACA,cACA,kBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,iBACA,cACA,kBACA,gBACA,kBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,kBACA,kBACA,eACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,gBACA,gBACA,kBACA,kBACA,iBACA,gBACA,gBACA,kBACA,gBACA,kBACA,gBACA,gBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,gBACA,kBACA,iBACA,gBACA,kBACA,gBACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,eACA,kBACA,kBACA,gBACA,gBACA,eACA,kBACA,gBACA,gBACA,gBACA,cACA,gBACA,iBACA,eACA,kBACA,kBACA,iBACA,gBACA,kBACA,gBACA,kBACA,cACA,kBACA,gBACA,cACA,gBACA,cACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,gBACA,gBACA,gBACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,cACA,gBACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,gBACA,kBACA,kBACA,gBACA,gBACA,gBACA,iBACA,gBACA,kBACA,eACA,kBACA,kBACA,cACA,iBACA,eACA,kBACA,kBACA,iBACA,gBACA,gBACA,gBACA,kBACA,kBACA,kBACA,iBACA,gBACA,eACA,cACA,iBACA,gBACA,eACA,gBACA,kBACA,gBACA,kBACA,gBACA,kBACA,eACA,gBACA,cACA,eACA,gBACA,cACA,gBACA,kBACA,iBACA,cACA,kBACA,gBACA,eACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,kBACA,gBACA,cACA,gBACA,kBACA,iBACA,cACA,eACA,kBACA,kBACA,gBACA,cACA,gBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,gBACA,gBACA,kBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,eACA,gBACA,cACA,kBACA,gBACA,kBACA,gBACA,cACA,gBACA,gBACA,kBACA,kBACA,kBACA,iBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,cACA,cACA,iBACA,gBACA,cACA,kBACA,gBACA,gBACA,iBACA,cACA,iBACA,eACA,gBACA,iBACA,gBACA,cACA,kBACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,iBACA,iBACA,cACA,kBACA,eACA,kBACA,iBACA,iBACA,eACA,gBACA,kBACA,iBACA,gBACA,gBACA,kBACA,cACA,kBACA,kBACA,gBACA,kBACA,gBACA,gBACA,iBACA,kBACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,iBACA,eACA,gBACA,iBACA,eACA,kBACA,eACA,gBACA,gBACA,kBACA,kBACA,iBACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,kBACA,gBACA,cACA,kBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,eACA,eACA,kBACA,kBACA,kBACA,gBACA,gBACA,gBACA,iBACA,cACA,iBACA,eACA,kBACA,iBACA,gBACA,gBACA,kBACA,gBACA,kBACA,gBACA,eACA,iBACA,iBACA,gBACA,gBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,gBACA,cACA,gBACA,eACA,eACA,kBACA,kBACA,iBACA,gBACA,gBACA,kBACA,eACA,iBACA,iBACA,gBACA,iBACA,cACA,gBACA,eACA,eACA,gBACA,kBACA,iBACA,eACA,kBACA,eACA,gBACA,cACA,gBACA,gBACA,gBACA,gBACA,cACA,cACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,cACA,gBACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,kBACA,gBACA,cACA,gBACA,gBACA,kBACA,kBACA,kBACA,gBACA,gBACA,cACA,gBACA,kBACA,cACA,kBACA,kBACA,iBACA,gBACA,kBACA,iBACA,iBACA,cACA,kBACA,cACA,kBACA,iBACA,iBACA,kBACA,kBACA,gBACA,iBACA,gBACA,cACA,gBACA,gBACA,kBACA,eACA,cACA,kBACA,gBACA,kBACA,gBACA,kBACA,iBACA,iBACA,gBACA,eACA,gBACA,eACA,iBACA,iBACA,kBACA,iBACA,gBACA,iBACA,kBACA,iBACA,gBACA,gBACA,kBACA,kBACA,iBACA,kBACA,iBACA,gBACA,iBACA,gBACA,kBACA,iBACA,kBACA,iBACA,iBACA,eACA,eACA,iBACA,iBACA,gBACA,kBACA,gBACA,kBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,eACA,gBACA,cACA,kBACA,iBACA,gBACA,iBACA,kBACA,gBACA,cACA,kBACA,gBACA,gBACA,eACA,iBACA,cACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,kBACA,kBACA,iBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,kBACA,iBACA,gBACA,gBACA,gBACA,gBACA,kBACA,iBACA,gBACA,gBACA,cACA,eACA,eACA,gBACA,eACA,kBACA,kBACA,kBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,kBACA,iBACA,iBACA,iBACA,gBACA,eACA,iBACA,kBACA,iBACA,gBACA,iBACA,eACA,kBACA,iBACA,kBACA,gBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,cACA,gBACA,gBACA,cACA,gBACA,gBACA,iBACA,eACA,kBACA,gBACA,cACA,kBACA,eACA,gBACA,iBACA,iBACA,cACA,iBACA,gBACA,kBACA,kBACA,eACA,kBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,eACA,kBACA,iBACA,eACA,gBACA,iBACA,iBACA,kBACA,iBACA,eACA,kBACA,eACA,iBACA,gBACA,eACA,iBACA,gBACA,gBACA,cACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,eACA,iBACA,iBACA,kBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,cACA,iBACA,iBACA,gBACA,gBACA,iBACA,eACA,kBACA,gBACA,gBACA,cACA,gBACA,eACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,cACA,iBACA,kBACA,kBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,iBACA,gBACA,iBACA,gBACA,kBACA,gBACA,cACA,kBACA,gBACA,eACA,kBACA,gBACA,iBACA,gBACA,cACA,iBACA,gBACA,iBACA,gBACA,kBACA,gBACA,iBACA,kBACA,gBACA,iBACA,cACA,gBACA,cACA,kBACA,iBACA,gBACA,iBACA,iBACA,eACA,kBACA,gBACA,kBACA,gBACA,kBACA,iBACA,iBACA,eACA,iBACA,gBACA,gBACA,iBACA,gBACA,kBACA,gBACA,gBACA,iBACA,gBACA,kBACA,gBACA,iBACA,gBACA,gBACA,iBACA,gBACA,kBACA,gBACA,kBACA,eACA,kBACA,iBACA,iBACA,iBACA,eACA,iBACA,eACA,gBACA,kBACA,gBACA,kBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,iBACA,gBACA,gBACA,gBACA,cACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,gBACA,cACA,kBACA,kBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,gBACA,kBACA,gBACA,gBACA,cACA,kBACA,iBACA,iBACA,eACA,gBACA,gBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,gBACA,eACA,kBACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,kBACA,iBACA,gBACA,gBACA,gBACA,kBACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,kBACA,gBACA,gBACA,kBACA,iBACA,gBACA,iBACA,gBACA,iBACA,iBACA,iBACA,cACA,iBACA,gBACA,gBACA,gBACA,iBACA,kBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,kBACA,cACA,gBACA,gBACA,gBACA,iBACA,cACA,iBACA,iBACA,eACA,gBACA,iBACA,kBACA,cACA,gBACA,gBACA,cACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,kBACA,iBACA,iBACA,cACA,gBACA,iBACA,gBACA,iBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,cACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,kBACA,iBACA,iBACA,iBACA,kBACA,gBACA,iBACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,eACA,gBACA,eACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,iBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,gBACA,kBACA,gBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,eACA,gBACA,gBACA,iBACA,gBACA,iBACA,eACA,kBACA,gBACA,kBACA,gBACA,iBACA,iBACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,iBACA,iBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,kBACA,iBACA,gBACA,eACA,gBACA,eACA,gBACA,kBACA,gBACA,kBACA,cACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,gBACA,kBACA,gBACA,iBACA,gBACA,eACA,iBACA,eACA,kBACA,iBACA,iBACA,kBACA,eACA,eACA,iBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,iBACA,gBACA,iBACA,gBACA,gBACA,kBACA,iBACA,eACA,gBACA,cACA,gBACA,kBACA,eACA,kBACA,gBACA,eACA,gBACA,gBACA,kBACA,kBACA,kBACA,QACA,gBACA,gBACA,eACA,kBACA,gBACA,kBACA,iBACA,kBACA,eACA,iBACA,kBACA,gBACA,gBACA,eACA,eACA,gBACA,kBACA,gBACA,kBACA,eACA,eACA,eACA,gBACA,iBACA,kBACA,gBACA,gBACA,eACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,cACA,kBACA,kBACA,gBACA,gBACA,eACA,iBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,kBACA,iBACA,gBACA,kBACA,kBACA,cACA,gBACA,gBACA,eACA,gBACA,kBACA,kBACA,gBACA,cACA,gBACA,kBACA,gBACA,eACA,gBACA,iBACA,kBACA,gBACA,gBACA,cACA,iBACA,kBACA,cACA,gBACA,gBACA,kBACA,gBACA,iBACA,kBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,kBACA,gBACA,gBACA,cACA,kBACA,gBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,kBACA,eACA,gBACA,eACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,eACA,eACA,cACA,gBACA,iBACA,gBACA,gBACA,iBACA,cACA,kBACA,iBACA,eACA,gBACA,iBACA,gBACA,kBACA,iBACA,iBACA,gBACA,gBACA,gBACA,kBACA,gBACA,iBACA,iBACA,gBACA,cACA,eACA,iBACA,eACA,gBACA,eACA,kBACA,iBACA,kBACA,iBACA,eACA,kBACA,iBACA,gBACA,eACA,eACA,iBACA,iBACA,kBACA,kBACA,iBACA,gBACA,eACA,eACA,kBACA,iBACA,gBACA,gBACA,gBACA,eACA,iBACA,iBACA,eACA,gBACA,gBACA,kBACA,gBACA,kBACA,kBACA,kBACA,gBACA,cACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,gBACA,iBACA,iBACA,eACA,iBACA,kBACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,kBACA,iBACA,iBACA,eACA,iBACA,gBACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,gBACA,eACA,kBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,cACA,eACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,kBACA,eACA,gBACA,gBACA,gBACA,iBACA,kBACA,iBACA,gBACA,gBACA,kBACA,iBACA,gBACA,eACA,cACA,kBACA,gBACA,eACA,kBACA,gBACA,kBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,iBACA,iBACA,eACA,eACA,iBACA,kBACA,eACA,iBACA,gBACA,eACA,iBACA,gBACA,gBACA,iBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,eACA,cACA,eACA,gBACA,kBACA,gBACA,iBACA,gBACA,kBACA,gBACA,kBACA,eACA,gBACA,gBACA,kBACA,eACA,gBACA,gBACA,gBACA,cACA,iBACA,iBACA,eACA,eACA,gBACA,gBACA,kBACA,kBACA,iBACA,gBACA,kBACA,iBACA,kBACA,iBACA,eACA,gBACA,gBACA,eACA,iBACA,gBACA,iBACA,eACA,gBACA,kBACA,gBACA,iBACA,gBACA,kBACA,iBACA,iBACA,eACA,gBACA,iBACA,gBACA,gBACA,kBACA,eACA,gBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,gBACA,kBACA,kBACA,iBACA,iBACA,gBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,gBACA,iBACA,eACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,iBACA,kBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,cACA,kBACA,cACA,gBACA,kBACA,cACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,eACA,eACA,kBACA,gBACA,iBACA,kBACA,iBACA,cACA,iBACA,iBACA,iBACA,kBACA,iBACA,eACA,gBACA,iBACA,kBACA,iBACA,gBACA,eACA,gBACA,iBACA,kBACA,iBACA,gBACA,gBACA,gBACA,iBACA,iBACA,cACA,gBACA,kBACA,iBACA,iBACA,iBACA,gBACA,iBACA,kBACA,iBACA,iBACA,gBACA,iBACA,kBACA,iBACA,kBACA,gBACA,iBACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,iBACA,gBACA,eACA,iBACA,gBACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,eACA,gBACA,iBACA,gBACA,gBACA,eACA,iBACA,gBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,kBACA,eACA,kBACA,kBACA,kBACA,iBACA,eACA,iBACA,eACA,iBACA,kBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,iBACA,gBACA,cACA,kBACA,iBACA,gBACA,gBACA,cACA,iBACA,gBACA,iBACA,gBACA,iBACA,gBACA,iBACA,gBACA,eACA,gBACA,kBACA,kBACA,gBACA,kBACA,gBACA,gBACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,iBACA,eACA,iBACA,kBACA,iBACA,iBACA,iBACA,iBACA,eACA,eACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,kBACA,iBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,eACA,kBACA,gBACA,eACA,cACA,eACA,iBACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,kBACA,eACA,iBACA,kBACA,iBACA,kBACA,iBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,kBACA,iBACA,gBACA,gBACA,kBACA,gBACA,cACA,gBACA,iBACA,gBACA,gBACA,gBACA,kBACA,gBACA,gBACA,iBACA,gBACA,cACA,iBACA,gBACA,eACA,kBACA,eACA,iBACA,eACA,kBACA,gBACA,eACA,kBACA,kBACA,kBACA,eACA,gBACA,eACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,cACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,iBACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,iBACA,iBACA,iBACA,gBACA,gBACA,kBACA,iBACA,gBACA,iBACA,gBACA,iBACA,iBACA,cACA,iBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,kBACA,gBACA,eACA,gBACA,gBACA,gBACA,iBACA,kBACA,kBACA,cACA,iBACA,kBACA,gBACA,gBACA,iBACA,iBACA,kBACA,gBACA,eACA,iBACA,iBACA,iBACA,eACA,iBACA,gBACA,iBACA,iBACA,gBACA,gBACA,kBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,kBACA,eACA,gBACA,eACA,kBACA,gBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,iBACA,gBACA,kBACA,iBACA,iBACA,gBACA,iBACA,gBACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,iBACA,eACA,cACA,iBACA,gBACA,eACA,iBACA,iBACA,iBACA,eACA,eACA,iBACA,eACA,kBACA,iBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,kBACA,iBACA,gBACA,cACA,gBACA,iBACA,eACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,cACA,gBACA,kBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,kBACA,eACA,iBACA,gBACA,gBACA,iBACA,iBACA,iBACA,eACA,iBACA,kBACA,iBACA,eACA,eACA,gBACA,iBACA,kBACA,eACA,eACA,gBACA,iBACA,gBACA,kBACA,iBACA,gBACA,iBACA,iBACA,eACA,iBACA,eACA,iBACA,gBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,UACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,SACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,MACA,YACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,QACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,MACA,YACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,SACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,SACA,kBACA,kBACA,kBACA,kBACA,SACA,UACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,MACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,YACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,OACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,QACA,kBACA,MACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,UACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,QACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,OACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,WACA,mBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,MACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,UACA,SACA,UACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,UACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,SACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,SACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,SACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,MACA,YACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,MACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,MACA,QACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,oBACA,SACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,YACA,oBACA,oBACA,MACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,QACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,OACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA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","names":["require_he","__commonJSMin","exports","module","root","freeExports","freeModule","freeGlobal","regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","decodeMapLegacy","decodeMapNumeric","invalidReferenceCodePoints","stringFromCharCode","object","hasOwnProperty","has","propertyName","contains","array","value","index","length","merge","options","defaults","result","key","codePointToSymbol","codePoint","strict","output","parseError","hexEscape","decEscape","message","encode","string","encodeEverything","useNamedReferences","allowUnsafeSymbols","escapeCodePoint","escapeBmpSymbol","symbol","$0","high","low","decode","html","$1","$2","$3","$4","$5","$6","$7","$8","semicolon","decDigits","hexDigits","reference","next","escape","he","rita_exports","__export","markov_default","RiTa","SnowballStemmer","word","result","s","min","max","ch","s_size","i","v","v_size","j","c","l","common_i","common_j","first_key_inspected","k","diff","common","w","i2","res","lb","c_bra","c_ket","adjustment","left","right","Among","substring_i","sLength","charArr","a_0","a_1","a_2","a_3","a_4","a_5","a_6","a_7","a_8","a_9","a_10","g_v","g_v_WXY","g_valid_LI","habr","r_Step_1b","r_Step_1c","r_Step_2","r_Step_3","r_Step_4","r_Step_5","B_Y_found","I_p2","I_p1","r_prelude","v_1","Stemmer","v_2","r_mark_regions","habr1","r_shortv","r_R1","r_R2","r_Step_1a","among_var","v_3","v_4","r_exception2","r_exception1","r_postlude","_Stemmer","input","words","stems","__publicField","stemmer_default","Tokenizer","parent","text","options","words","map","w","ALPHA_RE","tokens","t","input","opts","tags","i","TOKENIZE_RE","CONTRACTS_RE","WS_RE","arr","delim","nextNoSpace","afterQuote","midSentence","withinQuote","QUOTE_RE","result","thisToken","lastToken","thisComma","lastComma","thisNBPunct","NOSP_BF_PUNCT_RE","UNTAG_RE","LINEBREAK_RE","thisLBracket","LB_RE","thisRBracket","RB_RE","lastNBPunct","lastNAPunct","NOSP_AF_PUNCT_RE","lastLB","lastRB","lastEndWithS","lastIsWWW","WWW_RE","isDomain","DOMAIN_RE","nextIsS","lastQuote","isLast","thisQuote","thisLineBreak","APOS_RE","SQUOTE_RE","regex","clean","NL_RE","re","pattern","unescapeAbbrevs","abbrevs","abv","idx","tagIdx","TAG_RE","TAG","POPTAG_RE","EMAIL_RE","URL_RE","UNDER_RE","array","currentIdx","currentToken","LT_RE","subArray","inspectIdx","GT_RE","tag","start","end","TAGSTART_RE","contentStartIdx","TAGEND_RE","contentEndIdx","tokenizer_default","RegularExpression","regex","offset","suffix","word","RE","b","c","_","Conjugator","parent","__publicField","w","allVerb","pattern","guess","item","a","i","res","v","verb","args","frontVG","TO_BE","actualModal","verbForm","conjs","RiTa","acc","cur","opts","dbug","IRREG_VERBS_LEX","IRREG_VERBS_NOLEX","tags","t","theVerb","PRESENT_PART_RULESET","PAST_PART_RULESET","IRREG_PAST_PART","tense","ruleSet","name","rules","defRule","MODALS","got","VERB_CONS_DOUBLING","lex","posArr","pos","stem","pers","numb","PAST_RULESET","person","number","PRESENT_RULESET","CONS","VERBAL_PREFIX","ANY_STEM_RE","ING_FORM_RULES","PAST_PART_RULES","PAST_RULES","PRESENT_RULES","conjugator_default","Util","_Util","syllables","i","j","ret","syl","stress","onset","nucleus","coda","data","input","extend","l1","l2","dbug","internuclei","sylls","phoneme","last","split","toPush","opts","name","def","RE","regex","offset","suffix","word","b","c","util_default","rita_dict_default","Lexicon","parent","custom","rita_dict_default","word","opts","token","exists","sing","vlemma","options","theWord","dict","fss","phone","words","result","i","data","c2","pattern","util_default","k","regex","word1","word2","c1","p1","p2","input","matchSound","variations","phonesA","minVal","phonesB","med","rdata","strict","posArr","syls","tpos","pos","RiTa","bySound","byLetter","promises","type","results","r","noLts","fatal","phones","source","target","cost","j","matrix","sI","tJ","w","fun","args","resolve","reject","e","stresses","raw","rawPhones","a1","a2","a","b","idx","c","syllables","lastSyllable","firstToEnd","lexicon_default","Tagger","parent","word","opts","conj","p","VERBS","NOUNS","ADVS","ADJS","choices","tag","words","tags","delimiter","sb","noGuessing","noDerivations","posData","input","result","choices2d","dbug","i","l","stem","pos","a","b","lex","check","c","frm","to","util_default","sing","idx","allJJ","k","EX_BE","HYPHENATEDS","context","firstPart","lastPart","firstPartAllTags","lastPartAllTags","VERB_PREFIX","t","NOUN_PREFIX","allCD","z","part","lastNounIsMajor","ARTICLES","j","tagger_default","Inflector","parent","word","type","dbug","SING","check","rules","SING_RULES","PLUR_RULES","i","rule","opts","PLUR","IS_PLURAL_RULES","sing","RE","util_default","DEFAULT_SING","DEFAULT_PLUR","NOUNS_ENDING_IN_E","NOUNS_ENDING_IN_S","inflector_default","LetterToSound","_LetterToSound","parent","LtsTokenizer","r","type","index","c","qtrue","qfalse","DecisionState","FinalState","line","word","opts","RiTa","phoneList","windowSize","fullBuff","tmp","currentState","startIndex","stateIndex","silent","util_default","k","asWord","phs","pos","i","state","str","delim","chars","phones","array","rita_lts_default","SP","E","Analyzer","parent","text","opts","words","tags","features","i","phones","stresses","syllables","k","word","rita_lts_default","stress","syls","j","result","slash","delim","lex","rawPhones","sp","ss","ps","strs","p","part","isPart","RiTa","sing","silent","ltsPhones","util_default","analyzer_default","Analyzer","Concorder","parent","text","options","result","name","word","opts","numWords","value","idxs","i","sub","j","_lookup","key","concorder_default","SeededRandom","arr","newArray","len","i","p","t","arg","util_default","o","j","x","num","s","probs","point","cutoff","weights","sum","acc","ele","rand","temp","pr","crand","min","max","bias","influence","base","mix","y","kk","mag01","randgen_default","env","deserializer","$","_","as","out","index","unpair","type","value","arr","object","key","source","flags","map","set","name","message","deserialize","serialized","EMPTY","toString","keys","typeOf","value","type","asString","shouldSkip","TYPE","serializer","strict","json","$","_","as","out","index","pair","entry","arr","entries","key","source","flags","message","serialize","lossy","$parse","$stringify","options","parse","str","deserialize","stringify","any","serialize","_RiMarkov","options","Node","text","multiplier","sents","allWords","k","i","words","count","returnsArray","num","minLength","maxLength","tries","tokens","minIdx","sentenceIdxs","markedNodes","unmarkNodes","n","resultCount","t","markNode","node","acc","e","notMarked","cn","tmap","validateSentence","next","sentIdx","sentenceIdx","sentence","fail","isSubArray","flatSent","msg","forceBacktrack","throwError","parent","numChildren","backtrack","tc","last","backtrackUntil","selectStart","len","seed","usableStarts","ss","start","startTok","str","data","stringify","json","parsed","parse","rm","jsonRoot","populate","pre","post","tn","result","nexts","atest","pr","a","b","path","temperature","probs","children","weights","pdist","c","p","root","sort","temp","filter","validateMlms","word","nodes","check","rand","selector","tried","pTotal","idx","wrap","j","hidden","re","w","arr","parts","MULTI_SP_RE","__publicField","RiMarkov","_Node","lookup","ignoreHidden","opts","kids","excludeMetaTags","showHiddenNodes","s","stringulate","mn","depth","indent","l","encode","tok","objNode","jsonNode","child","newNode","oks","find","OUT","markov_default","import_he","MAX_LONG","MIN_LONG","MISSING","CYCLE_FOUND_ERROR","ARRAY_PROTO","OBJECT_PROTO","OBJECT_TAG","OBJECT_TYPE_RE","Null","Undefined","getConstructor","v","DEFAULT_HASH_FUNCTION","value","s","stringify","hash","i","JS_SIMPLE_TYPES","IMMUTABLE_TYPES_SET","toString","typedArrayToString","STRING_CONVERTERS","d","_","n","SORT_ORDER_BY_TYPE","compare","b","u","getType","isEqual","assert","condition","message","isTypedArray","proto","cloneDeep","obj","cycle","clone","val","ctor","isArray","isObject","res","k","isBoolean","isString","isNumber","v","isArray","isObject","v","proto","OBJECT_PROTO","OBJECT_TAG","isObjectLike","isDate","isRegExp","isFunction","isNil","inArray","arr","item","notInArray","truthy","arg","strict","isEmpty","x","isString","isMissing","MISSING","ensureArray","has","obj","prop","mergeable","left","right","merge","target","options","result","input","j","into","k","buildHashIndex","hashFunction","DEFAULT_HASH_FUNCTION","map","o","i","h","hashCode","isEqual","intersection","sortedIndex","sortBy","a","smallest","rmap","results","lhs","res","_","stable","found","currIndex","rhs","s","n","t","m","p","b","_i","u","_j","r","compare","flatten","xs","depth","flatten2","ys","len","getMembersOf","value","names","activeProto","ARRAY_PROTO","args","ctor","getConstructor","STRING_CONVERTERS","str","ka","kb","stringify","value","cycle","str","v","ctor","getConstructor","STRING_CONVERTERS","tag","isFunction","CYCLE_FOUND_ERROR","members","_","getMembersOf","isArray","objKeys","k","hashCode","hashFunction","DEFAULT_HASH_FUNCTION","isNil","sortBy","collection","keyFn","comparator","compare","isEmpty","sorted","result","obj","key","a","b","into","o","groupBy","lookup","hash","existingKey","isEqual","MAX_ARRAY_PUSH","target","rest","acc","arr","i","begin","isObjectLike","item","getValue","obj","key","isObjectLike","unwrap","arr","depth","resolve","selector","options","resolve2","o","path","value","i","field","subpath","acc","item","result","JS_SIMPLE_TYPES","getType","resolveGraph","names","next","isIndex","hasNext","MISSING","filterMissing","isObject","k","has","NUMBER_RE","walk","fn","isArray","isNil","isNextArrayIndex","e","setValue","isFunction","removeValue","elem","OPERATOR_NAME_PATTERN","isOperator","name","normalize","expr","isRegExp","newExpr","ProcessingMode","ComputeOptions","_ComputeOptions","_opts","_root","_local","timestamp","options","root","local","isNil","_a","Context","initOptions","OperatorType","_Context","ops","type","operators","ctx","name","fn","GLOBAL_CONTEXT","useOperators","assert","isFunction","isOperator","currentFn","getOperator","operator","fallback","systemVariables","_obj","_expr","obj","_options","redactVariables","expr","has","result","key","current","isObjectLike","array","elem","isObject","redact","computeValue","copts","callExpression","callAccumulator","isString","context","arr","prefix","resolve","isArray","item","val","t","boolean_exports","__export","$and","$not","$or","$and","obj","expr","options","value","computeValue","truthy","v","$not","obj","expr","options","booleanExpr","ensureArray","computeValue","$or","obj","expr","options","value","computeValue","strict","truthy","v","comparison_exports","__export","$cmp","$eq","$gt","$gte","$lt","$lte","$ne","$cmp","obj","expr","options","args","computeValue","Lazy","source","Iterator","compose","iterators","index","o","isGenerator","dropItem","array","i","rest","DONE","Action","createCallback","nextFn","iteratees","buffer","done","bufferIndex","storeResult","outer","size","innerDone","r","e","nextVal","src","data","action","value","f","predicate","fn","self","iter","initialValue","acc","_","Aggregator","pipeline","options","initOptions","collection","iterator","Lazy","mode","ProcessingMode","cloneDeep","pipelineOperators","isEmpty","operator","operatorKeys","opName","call","getOperator","OperatorType","assert","intersection","Cursor","source","predicate","projection","options","isObject","Lazy","Aggregator","buffered","compose","modifier","spec","o","fn","Query","condition","options","initOptions","assert","isObject","whereOperator","field","expr","inArray","isOperator","operator","val","normalize","value","call","getOperator","OperatorType","fn","obj","i","len","collection","projection","Cursor","x","acc","createQueryOperator","predicate","f","selector","value","options","opts","depth","obj","lhs","resolve","createExpressionOperator","expr","args","computeValue","$eq","b","isEqual","isNil","eq","flatten","$ne","$in","v","intersection","ensureArray","$nin","$lt","compare","x","y","$lte","$gt","$gte","$mod","$regex","match","isString","truthy","$exists","$all","values","queries","isArray","matched","query","isObject","inArray","$elemMatch","s","$size","isNonBooleanOperator","name","isOperator","isEmpty","format","criteria","Query","i","len","isNull","isInt","isNumber","isLong","MIN_LONG","MAX_LONG","compareFuncs","isBoolean","isDate","isRegExp","_","compareType","$type","t","getType","$eq","createExpressionOperator","$gt","createExpressionOperator","$gte","createExpressionOperator","$lt","createExpressionOperator","$lte","createExpressionOperator","$ne","createExpressionOperator","MILLIS_PER_DAY","DURATION_IN_MILLIS","MILLIS_PER_UNIT","MILLIS_PER_DAY","$sort","collection","sortKeys","options","isEmpty","isObject","cmp","compare","collationSpec","isString","collationComparator","coll","modifiers","key","groups","groupBy","obj","resolve","sortedKeys","acc","into","COLLATION_STRENGTH","spec","localeOpt","collator","a","b","$limit","collection","expr","options","$nin","createExpressionOperator","$slice","obj","expr","options","args","computeValue","arr","skip","limit","isNil","assert","bitwise","op","compute","obj","expr","options","assert","isArray","nums","computeValue","isNil","isNumber","$bitAnd","bitwise","nums","a","b","$bitOr","bitwise","nums","a","b","$bitXor","bitwise","nums","a","b","buildMap","letters","sign","h","v","i","TZ_LETTER_OFFSETS","FIXED_POINTS","createTrignometryOperator","f","fixedPoints","fp","keySet","obj","expr","options","n","computeValue","res","$acos","createTrignometryOperator","$acosh","createTrignometryOperator","$asin","createTrignometryOperator","$asinh","createTrignometryOperator","$atan","createTrignometryOperator","$atanh","createTrignometryOperator","$cos","createTrignometryOperator","$cosh","createTrignometryOperator","RADIANS_FACTOR","$degreesToRadians","createTrignometryOperator","n","DEGREES_FACTOR","$radiansToDegrees","createTrignometryOperator","n","$sin","createTrignometryOperator","$sinh","createTrignometryOperator","$tan","createTrignometryOperator","$project","collection","expr","options","isEmpty","expressionKeys","idOnlyExcluded","validateExpression","ID_KEY","inArray","id","notInArray","copts","ComputeOptions","obj","processObject","newObj","foundSlice","foundExclusion","dropKeys","key","value","subExpr","isString","computeValue","v","r","isNil","isObject","subExprObj","subExprKeys","operator","call","getOperator","OperatorType","ensureArray","isNumber","isOperator","has","target","o","objPathGraph","resolveGraph","merge","removeValue","setValue","filterMissing","into","k","check","assert","$skip","collection","expr","options","projection_exports","__export","$elemMatch","$slice","$elemMatch","obj","expr","field","options","arr","resolve","query","Query","assert","result","i","$slice","obj","expr","field","options","xs","resolve","exprAsArray","isArray","query_exports","__export","$all","$and","$bitsAllClear","$bitsAllSet","$bitsAnyClear","$bitsAnySet","$elemMatch","$eq","$exists","$expr","$gt","$gte","$in","$jsonSchema","$lt","$lte","$mod","$ne","$nin","$nor","$not","$or","$regex","$size","$type","$where","$all","createQueryOperator","$elemMatch","createQueryOperator","$size","createQueryOperator","createBitwiseOperator","predicate","createQueryOperator","value","mask","options","b","n","$bitsAllClear","createBitwiseOperator","result","_","$bitsAllSet","createBitwiseOperator","result","mask","$bitsAnyClear","createBitwiseOperator","result","mask","$bitsAnySet","createBitwiseOperator","result","_","$eq","createQueryOperator","$gt","createQueryOperator","$gte","createQueryOperator","$in","createQueryOperator","$lt","createQueryOperator","$lte","createQueryOperator","$ne","createQueryOperator","$nin","createQueryOperator","$exists","createQueryOperator","$type","createQueryOperator","$expr","_","rhs","options","obj","computeValue","$jsonSchema","_","schema","options","validate","obj","$mod","createQueryOperator","$regex","createQueryOperator","$where","_","rhs","options","assert","f","isFunction","obj","truthy","$and","_","rhs","options","assert","isArray","queries","expr","Query","obj","q","$or","_","rhs","options","assert","isArray","queries","expr","Query","obj","q","$nor","_","rhs","options","assert","isArray","f","$or","obj","$not","selector","rhs","options","criteria","normalize","query","Query","obj","useOperators","OperatorType","boolean_exports","comparison_exports","$project","$skip","$limit","$sort","projection_exports","query_exports","BASIC_CONTEXT","Context","freeGlobal","freeGlobal_default","freeSelf","root","freeGlobal_default","root_default","Symbol","root_default","Symbol_default","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","Symbol_default","getRawTag","value","isOwn","tag","unmasked","result","getRawTag_default","objectProto","nativeObjectToString","objectToString","value","objectToString_default","nullTag","undefinedTag","symToStringTag","Symbol_default","baseGetTag","value","getRawTag_default","objectToString_default","baseGetTag_default","isObjectLike","value","isObjectLike_default","symbolTag","isSymbol","value","isObjectLike_default","baseGetTag_default","isSymbol_default","arrayMap","array","iteratee","index","length","result","arrayMap_default","isArray","isArray_default","INFINITY","symbolProto","Symbol_default","symbolToString","baseToString","value","isArray_default","arrayMap_default","isSymbol_default","result","baseToString_default","reWhitespace","trimmedEndIndex","string","index","trimmedEndIndex_default","reTrimStart","baseTrim","string","trimmedEndIndex_default","baseTrim_default","isObject","value","type","isObject_default","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","value","isSymbol_default","isObject_default","other","baseTrim_default","isBinary","toNumber_default","INFINITY","MAX_INTEGER","toFinite","value","toNumber_default","sign","toFinite_default","toInteger","value","result","toFinite_default","remainder","toInteger_default","identity","value","identity_default","asyncTag","funcTag","genTag","proxyTag","isFunction","value","isObject_default","tag","baseGetTag_default","isFunction_default","coreJsData","root_default","coreJsData_default","maskSrcKey","uid","coreJsData_default","isMasked","func","isMasked_default","funcProto","funcToString","toSource","func","toSource_default","reRegExpChar","reIsHostCtor","funcProto","objectProto","funcToString","hasOwnProperty","reIsNative","baseIsNative","value","isObject_default","isMasked_default","pattern","isFunction_default","toSource_default","baseIsNative_default","getValue","object","key","getValue_default","getNative","object","key","value","getValue_default","baseIsNative_default","getNative_default","WeakMap","getNative_default","root_default","WeakMap_default","objectCreate","baseCreate","object","proto","isObject_default","result","baseCreate_default","apply","func","thisArg","args","apply_default","noop","noop_default","copyArray","source","array","index","length","copyArray_default","HOT_COUNT","HOT_SPAN","nativeNow","shortOut","func","count","lastCalled","stamp","remaining","shortOut_default","constant","value","constant_default","defineProperty","func","getNative_default","defineProperty_default","baseSetToString","defineProperty_default","func","string","constant_default","identity_default","baseSetToString_default","setToString","shortOut_default","baseSetToString_default","setToString_default","arrayEach","array","iteratee","index","length","arrayEach_default","baseFindIndex","array","predicate","fromIndex","fromRight","length","index","baseFindIndex_default","baseIsNaN","value","baseIsNaN_default","strictIndexOf","array","value","fromIndex","index","length","strictIndexOf_default","baseIndexOf","array","value","fromIndex","strictIndexOf_default","baseFindIndex_default","baseIsNaN_default","baseIndexOf_default","arrayIncludes","array","value","length","baseIndexOf_default","arrayIncludes_default","MAX_SAFE_INTEGER","reIsUint","isIndex","value","length","type","isIndex_default","baseAssignValue","object","key","value","defineProperty_default","baseAssignValue_default","eq","value","other","eq_default","objectProto","hasOwnProperty","assignValue","object","key","value","objValue","eq_default","baseAssignValue_default","assignValue_default","copyObject","source","props","object","customizer","isNew","index","length","key","newValue","baseAssignValue_default","assignValue_default","copyObject_default","nativeMax","overRest","func","start","transform","args","index","length","array","otherArgs","apply_default","overRest_default","baseRest","func","start","setToString_default","overRest_default","identity_default","baseRest_default","MAX_SAFE_INTEGER","isLength","value","isLength_default","isArrayLike","value","isLength_default","isFunction_default","isArrayLike_default","isIterateeCall","value","index","object","isObject_default","type","isArrayLike_default","isIndex_default","eq_default","isIterateeCall_default","createAssigner","assigner","baseRest_default","object","sources","index","length","customizer","guard","isIterateeCall_default","source","createAssigner_default","objectProto","isPrototype","value","Ctor","proto","isPrototype_default","baseTimes","n","iteratee","index","result","baseTimes_default","argsTag","baseIsArguments","value","isObjectLike_default","baseGetTag_default","baseIsArguments_default","objectProto","hasOwnProperty","propertyIsEnumerable","isArguments","baseIsArguments_default","value","isObjectLike_default","isArguments_default","stubFalse","stubFalse_default","freeExports","freeModule","moduleExports","Buffer","root_default","nativeIsBuffer","isBuffer","stubFalse_default","isBuffer_default","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","value","isObjectLike_default","isLength_default","baseGetTag_default","baseIsTypedArray_default","baseUnary","func","value","baseUnary_default","freeExports","freeModule","moduleExports","freeProcess","freeGlobal_default","nodeUtil","types","nodeUtil_default","nodeIsTypedArray","nodeUtil_default","isTypedArray","baseUnary_default","baseIsTypedArray_default","isTypedArray_default","objectProto","hasOwnProperty","arrayLikeKeys","value","inherited","isArr","isArray_default","isArg","isArguments_default","isBuff","isBuffer_default","isType","isTypedArray_default","skipIndexes","result","baseTimes_default","length","key","isIndex_default","arrayLikeKeys_default","overArg","func","transform","arg","overArg_default","nativeKeys","overArg_default","nativeKeys_default","objectProto","hasOwnProperty","baseKeys","object","isPrototype_default","nativeKeys_default","result","key","baseKeys_default","keys","object","isArrayLike_default","arrayLikeKeys_default","baseKeys_default","keys_default","objectProto","hasOwnProperty","assign","createAssigner_default","object","source","isPrototype_default","isArrayLike_default","copyObject_default","keys_default","key","assignValue_default","assign_default","nativeKeysIn","object","result","key","nativeKeysIn_default","objectProto","hasOwnProperty","baseKeysIn","object","isObject_default","nativeKeysIn_default","isProto","isPrototype_default","result","key","baseKeysIn_default","keysIn","object","isArrayLike_default","arrayLikeKeys_default","baseKeysIn_default","keysIn_default","reIsDeepProp","reIsPlainProp","isKey","value","object","isArray_default","type","isSymbol_default","isKey_default","nativeCreate","getNative_default","nativeCreate_default","hashClear","nativeCreate_default","hashClear_default","hashDelete","key","result","hashDelete_default","HASH_UNDEFINED","objectProto","hasOwnProperty","hashGet","key","data","nativeCreate_default","result","hashGet_default","objectProto","hasOwnProperty","hashHas","key","data","nativeCreate_default","hashHas_default","HASH_UNDEFINED","hashSet","key","value","data","nativeCreate_default","hashSet_default","Hash","entries","index","length","entry","hashClear_default","hashDelete_default","hashGet_default","hashHas_default","hashSet_default","Hash_default","listCacheClear","listCacheClear_default","assocIndexOf","array","key","length","eq_default","assocIndexOf_default","arrayProto","splice","listCacheDelete","key","data","index","assocIndexOf_default","lastIndex","listCacheDelete_default","listCacheGet","key","data","index","assocIndexOf_default","listCacheGet_default","listCacheHas","key","assocIndexOf_default","listCacheHas_default","listCacheSet","key","value","data","index","assocIndexOf_default","listCacheSet_default","ListCache","entries","index","length","entry","listCacheClear_default","listCacheDelete_default","listCacheGet_default","listCacheHas_default","listCacheSet_default","ListCache_default","Map","getNative_default","root_default","Map_default","mapCacheClear","Hash_default","Map_default","ListCache_default","mapCacheClear_default","isKeyable","value","type","isKeyable_default","getMapData","map","key","data","isKeyable_default","getMapData_default","mapCacheDelete","key","result","getMapData_default","mapCacheDelete_default","mapCacheGet","key","getMapData_default","mapCacheGet_default","mapCacheHas","key","getMapData_default","mapCacheHas_default","mapCacheSet","key","value","data","getMapData_default","size","mapCacheSet_default","MapCache","entries","index","length","entry","mapCacheClear_default","mapCacheDelete_default","mapCacheGet_default","mapCacheHas_default","mapCacheSet_default","MapCache_default","FUNC_ERROR_TEXT","memoize","func","resolver","memoized","args","key","cache","result","MapCache_default","memoize_default","MAX_MEMOIZE_SIZE","memoizeCapped","func","result","memoize_default","key","cache","memoizeCapped_default","rePropName","reEscapeChar","stringToPath","memoizeCapped_default","string","result","match","number","quote","subString","stringToPath_default","toString","value","baseToString_default","toString_default","castPath","value","object","isArray_default","isKey_default","stringToPath_default","toString_default","castPath_default","INFINITY","toKey","value","isSymbol_default","result","toKey_default","baseGet","object","path","castPath_default","index","length","toKey_default","baseGet_default","get","object","path","defaultValue","result","baseGet_default","get_default","arrayPush","array","values","index","length","offset","arrayPush_default","spreadableSymbol","Symbol_default","isFlattenable","value","isArray_default","isArguments_default","isFlattenable_default","baseFlatten","array","depth","predicate","isStrict","result","index","length","isFlattenable_default","value","arrayPush_default","baseFlatten_default","flatten","array","length","baseFlatten_default","flatten_default","getPrototype","overArg_default","getPrototype_default","baseSlice","array","start","end","index","length","result","baseSlice_default","arrayReduce","array","iteratee","accumulator","initAccum","index","length","arrayReduce_default","stackClear","ListCache_default","stackClear_default","stackDelete","key","data","result","stackDelete_default","stackGet","key","stackGet_default","stackHas","key","stackHas_default","LARGE_ARRAY_SIZE","stackSet","key","value","data","ListCache_default","pairs","Map_default","MapCache_default","stackSet_default","Stack","entries","data","ListCache_default","stackClear_default","stackDelete_default","stackGet_default","stackHas_default","stackSet_default","Stack_default","baseAssign","object","source","copyObject_default","keys_default","baseAssign_default","baseAssignIn","object","source","copyObject_default","keysIn_default","baseAssignIn_default","freeExports","freeModule","moduleExports","Buffer","root_default","allocUnsafe","cloneBuffer","buffer","isDeep","length","result","cloneBuffer_default","arrayFilter","array","predicate","index","length","resIndex","result","value","arrayFilter_default","stubArray","stubArray_default","objectProto","propertyIsEnumerable","nativeGetSymbols","getSymbols","object","arrayFilter_default","symbol","stubArray_default","getSymbols_default","copySymbols","source","object","copyObject_default","getSymbols_default","copySymbols_default","nativeGetSymbols","getSymbolsIn","object","result","arrayPush_default","getSymbols_default","getPrototype_default","stubArray_default","getSymbolsIn_default","copySymbolsIn","source","object","copyObject_default","getSymbolsIn_default","copySymbolsIn_default","baseGetAllKeys","object","keysFunc","symbolsFunc","result","isArray_default","arrayPush_default","baseGetAllKeys_default","getAllKeys","object","baseGetAllKeys_default","keys_default","getSymbols_default","getAllKeys_default","getAllKeysIn","object","baseGetAllKeys_default","keysIn_default","getSymbolsIn_default","getAllKeysIn_default","DataView","getNative_default","root_default","DataView_default","Promise","getNative_default","root_default","Promise_default","Set","getNative_default","root_default","Set_default","mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","toSource_default","DataView_default","mapCtorString","Map_default","promiseCtorString","Promise_default","setCtorString","Set_default","weakMapCtorString","WeakMap_default","getTag","baseGetTag_default","value","result","Ctor","ctorString","getTag_default","objectProto","hasOwnProperty","initCloneArray","array","length","result","initCloneArray_default","Uint8Array","root_default","Uint8Array_default","cloneArrayBuffer","arrayBuffer","result","Uint8Array_default","cloneArrayBuffer_default","cloneDataView","dataView","isDeep","buffer","cloneArrayBuffer_default","cloneDataView_default","reFlags","cloneRegExp","regexp","result","cloneRegExp_default","symbolProto","Symbol_default","symbolValueOf","cloneSymbol","symbol","cloneSymbol_default","cloneTypedArray","typedArray","isDeep","buffer","cloneArrayBuffer_default","cloneTypedArray_default","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","object","tag","isDeep","Ctor","cloneArrayBuffer_default","cloneDataView_default","cloneTypedArray_default","cloneRegExp_default","cloneSymbol_default","initCloneByTag_default","initCloneObject","object","isPrototype_default","baseCreate_default","getPrototype_default","initCloneObject_default","mapTag","baseIsMap","value","isObjectLike_default","getTag_default","baseIsMap_default","nodeIsMap","nodeUtil_default","isMap","baseUnary_default","baseIsMap_default","isMap_default","setTag","baseIsSet","value","isObjectLike_default","getTag_default","baseIsSet_default","nodeIsSet","nodeUtil_default","isSet","baseUnary_default","baseIsSet_default","isSet_default","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneableTags","baseClone","value","bitmask","customizer","key","object","stack","result","isDeep","isFlat","isFull","isObject_default","isArr","isArray_default","initCloneArray_default","copyArray_default","tag","getTag_default","isFunc","isBuffer_default","cloneBuffer_default","initCloneObject_default","copySymbolsIn_default","baseAssignIn_default","copySymbols_default","baseAssign_default","initCloneByTag_default","Stack_default","stacked","isSet_default","subValue","isMap_default","keysFunc","getAllKeysIn_default","getAllKeys_default","keysIn_default","keys_default","props","arrayEach_default","assignValue_default","baseClone_default","CLONE_SYMBOLS_FLAG","clone","value","baseClone_default","clone_default","compact","array","index","length","resIndex","result","value","compact_default","HASH_UNDEFINED","setCacheAdd","value","setCacheAdd_default","setCacheHas","value","setCacheHas_default","SetCache","values","index","length","MapCache_default","setCacheAdd_default","setCacheHas_default","SetCache_default","arraySome","array","predicate","index","length","arraySome_default","cacheHas","cache","key","cacheHas_default","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","array","other","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","arrStacked","othStacked","index","result","seen","SetCache_default","arrValue","othValue","compared","arraySome_default","othIndex","cacheHas_default","equalArrays_default","mapToArray","map","index","result","value","key","mapToArray_default","setToArray","set","index","result","value","setToArray_default","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","Symbol_default","symbolValueOf","equalByTag","object","other","tag","bitmask","customizer","equalFunc","stack","Uint8Array_default","eq_default","convert","mapToArray_default","isPartial","setToArray_default","stacked","result","equalArrays_default","equalByTag_default","COMPARE_PARTIAL_FLAG","objectProto","hasOwnProperty","equalObjects","object","other","bitmask","customizer","equalFunc","stack","isPartial","objProps","getAllKeys_default","objLength","othProps","othLength","index","key","objStacked","othStacked","result","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects_default","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","isArray_default","othIsArr","objTag","getTag_default","othTag","objIsObj","othIsObj","isSameTag","isBuffer_default","Stack_default","isTypedArray_default","equalArrays_default","equalByTag_default","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects_default","baseIsEqualDeep_default","baseIsEqual","value","other","bitmask","customizer","stack","isObjectLike_default","baseIsEqualDeep_default","baseIsEqual_default","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","data","key","objValue","srcValue","stack","Stack_default","result","baseIsEqual_default","baseIsMatch_default","isStrictComparable","value","isObject_default","isStrictComparable_default","getMatchData","object","result","keys_default","length","key","value","isStrictComparable_default","getMatchData_default","matchesStrictComparable","key","srcValue","object","matchesStrictComparable_default","baseMatches","source","matchData","getMatchData_default","matchesStrictComparable_default","object","baseIsMatch_default","baseMatches_default","baseHasIn","object","key","baseHasIn_default","hasPath","object","path","hasFunc","castPath_default","index","length","result","key","toKey_default","isLength_default","isIndex_default","isArray_default","isArguments_default","hasPath_default","hasIn","object","path","hasPath_default","baseHasIn_default","hasIn_default","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","isKey_default","isStrictComparable_default","matchesStrictComparable_default","toKey_default","object","objValue","get_default","hasIn_default","baseIsEqual_default","baseMatchesProperty_default","baseProperty","key","object","baseProperty_default","basePropertyDeep","path","object","baseGet_default","basePropertyDeep_default","property","path","isKey_default","baseProperty_default","toKey_default","basePropertyDeep_default","property_default","baseIteratee","value","identity_default","isArray_default","baseMatchesProperty_default","baseMatches_default","property_default","baseIteratee_default","arrayAggregator","array","setter","iteratee","accumulator","index","length","value","arrayAggregator_default","createBaseFor","fromRight","object","iteratee","keysFunc","index","iterable","props","length","key","createBaseFor_default","baseFor","createBaseFor_default","baseFor_default","baseForOwn","object","iteratee","baseFor_default","keys_default","baseForOwn_default","createBaseEach","eachFunc","fromRight","collection","iteratee","isArrayLike_default","length","index","iterable","createBaseEach_default","baseEach","createBaseEach_default","baseForOwn_default","baseEach_default","baseAggregator","collection","setter","iteratee","accumulator","baseEach_default","value","key","baseAggregator_default","createAggregator","setter","initializer","collection","iteratee","func","isArray_default","arrayAggregator_default","baseAggregator_default","accumulator","baseIteratee_default","createAggregator_default","objectProto","hasOwnProperty","defaults","baseRest_default","object","sources","index","length","guard","isIterateeCall_default","source","props","keysIn_default","propsIndex","propsLength","key","value","eq_default","defaults_default","isArrayLikeObject","value","isObjectLike_default","isArrayLike_default","isArrayLikeObject_default","arrayIncludesWith","array","value","comparator","index","length","arrayIncludesWith_default","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","arrayIncludes_default","isCommon","length","result","valuesLength","arrayMap_default","baseUnary_default","arrayIncludesWith_default","cacheHas_default","SetCache_default","outer","value","computed","valuesIndex","baseDifference_default","difference","baseRest_default","array","values","isArrayLikeObject_default","baseDifference_default","baseFlatten_default","difference_default","last","array","length","last_default","drop","array","guard","length","toInteger_default","baseSlice_default","drop_default","dropRight","array","guard","length","toInteger_default","baseSlice_default","dropRight_default","castFunction","value","identity_default","castFunction_default","forEach","collection","iteratee","func","isArray_default","arrayEach_default","baseEach_default","castFunction_default","forEach_default","arrayEvery","array","predicate","index","length","arrayEvery_default","baseEvery","collection","predicate","result","baseEach_default","value","index","baseEvery_default","every","collection","predicate","guard","func","isArray_default","arrayEvery_default","baseEvery_default","isIterateeCall_default","baseIteratee_default","every_default","baseFilter","collection","predicate","result","baseEach_default","value","index","baseFilter_default","filter","collection","predicate","func","isArray_default","arrayFilter_default","baseFilter_default","baseIteratee_default","filter_default","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","isArrayLike_default","iteratee","baseIteratee_default","keys_default","key","index","createFind_default","nativeMax","findIndex","array","predicate","fromIndex","length","index","toInteger_default","baseFindIndex_default","baseIteratee_default","findIndex_default","find","createFind_default","findIndex_default","find_default","head","array","head_default","baseMap","collection","iteratee","index","result","isArrayLike_default","baseEach_default","value","key","baseMap_default","map","collection","iteratee","func","isArray_default","arrayMap_default","baseMap_default","baseIteratee_default","map_default","flatMap","collection","iteratee","baseFlatten_default","map_default","flatMap_default","objectProto","hasOwnProperty","groupBy","createAggregator_default","result","value","key","baseAssignValue_default","groupBy_default","objectProto","hasOwnProperty","baseHas","object","key","baseHas_default","has","object","path","hasPath_default","baseHas_default","has_default","stringTag","isString","value","isArray_default","isObjectLike_default","baseGetTag_default","isString_default","baseValues","object","props","arrayMap_default","key","baseValues_default","values","object","baseValues_default","keys_default","values_default","nativeMax","includes","collection","value","fromIndex","guard","isArrayLike_default","values_default","toInteger_default","length","isString_default","baseIndexOf_default","includes_default","nativeMax","indexOf","array","value","fromIndex","length","index","toInteger_default","baseIndexOf_default","indexOf_default","mapTag","setTag","objectProto","hasOwnProperty","isEmpty","value","isArrayLike_default","isArray_default","isBuffer_default","isTypedArray_default","isArguments_default","tag","getTag_default","isPrototype_default","baseKeys_default","key","isEmpty_default","regexpTag","baseIsRegExp","value","isObjectLike_default","baseGetTag_default","baseIsRegExp_default","nodeIsRegExp","nodeUtil_default","isRegExp","baseUnary_default","baseIsRegExp_default","isRegExp_default","isUndefined","value","isUndefined_default","FUNC_ERROR_TEXT","negate","predicate","args","negate_default","baseSet","object","path","value","customizer","isObject_default","castPath_default","index","length","lastIndex","nested","key","toKey_default","newValue","objValue","isIndex_default","assignValue_default","baseSet_default","basePickBy","object","paths","predicate","index","length","result","path","value","baseGet_default","baseSet_default","castPath_default","basePickBy_default","pickBy","object","predicate","props","arrayMap_default","getAllKeysIn_default","prop","baseIteratee_default","basePickBy_default","value","path","pickBy_default","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","value","index","baseReduce_default","reduce","collection","iteratee","accumulator","func","isArray_default","arrayReduce_default","baseReduce_default","initAccum","baseIteratee_default","baseEach_default","reduce_default","reject","collection","predicate","func","isArray_default","arrayFilter_default","baseFilter_default","negate_default","baseIteratee_default","reject_default","baseSome","collection","predicate","result","baseEach_default","value","index","baseSome_default","some","collection","predicate","guard","func","isArray_default","arraySome_default","baseSome_default","isIterateeCall_default","baseIteratee_default","some_default","INFINITY","createSet","Set_default","setToArray_default","values","noop_default","createSet_default","LARGE_ARRAY_SIZE","baseUniq","array","iteratee","comparator","index","includes","arrayIncludes_default","length","isCommon","result","seen","arrayIncludesWith_default","set","createSet_default","setToArray_default","cacheHas_default","SetCache_default","outer","value","computed","seenIndex","baseUniq_default","uniq","array","baseUniq_default","uniq_default","PRINT_ERROR","msg","PRINT_WARNING","timer","func","start","val","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","tokenLabel","tokType","hasTokenLabel","obj","isString_default","AbstractProduction","value","_definition","visitor","forEach_default","prod","NonTerminal","options","assign_default","pickBy_default","v","definition","Rule","Alternative","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","Terminal","serializeGrammar","topRules","map_default","serializeProduction","node","convertDefinition","serializedNonTerminal","serializedTerminal","pattern","isRegExp_default","GAstVisitor","node","nodeAny","NonTerminal","Alternative","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Repetition","Alternation","Terminal","Rule","isSequenceProd","prod","Alternative","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Terminal","Rule","isOptionalProd","alreadyVisited","Alternation","some_default","subProd","NonTerminal","includes_default","AbstractProduction","every_default","isBranchingProd","getProductionDslName","RestWalker","prod","prevRest","forEach_default","subProd","index","currRest","drop_default","NonTerminal","Terminal","Alternative","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Repetition","Alternation","terminal","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","first","prod","NonTerminal","Terminal","firstForTerminal","isSequenceProd","firstForSequence","isBranchingProd","firstForBranching","firstSet","seq","nextSubProdIdx","hasInnerProdsRemaining","currSubProd","isLastInnerProdOptional","isOptionalProd","uniq_default","allAlternativesFirsts","map_default","innerProd","flatten_default","terminal","IN","ResyncFollowsWalker","RestWalker","topProd","terminal","currRest","prevRest","refProd","followName","buildBetweenProdsFollowPrefix","fullRest","restProd","Alternative","t_in_topProd_follows","first","computeAllProdsFollows","topProductions","reSyncFollows","forEach_default","currRefsFollow","assign_default","inner","occurenceInParent","IN","cc","char","insertToSet","item","set","subItem","addFlag","flagObj","flagKey","x","ASSERT_EXISTS","obj","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","i","cc","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","newState","input","value","flags","addFlag","alts","begin","terms","type","ASSERT_EXISTS","disjunction","ASSERT_NEVER_REACH_HERE","isBacktracking","range","atLeast","atMost","atom","cc","set","complement","digitsCharCodes","whitespaceCodes","wordCharCodes","escapeCode","letter","escapedChar","nextChar","from","isFromSingleChar","isCharacter","to","isToSingleChar","insertToSet","capturing","groupAst","number","howMuch","prevState","howMany","hexString","i","hexChar","char","BaseRegExpVisitor","node","key","child","subChild","regExpAstCache","regExpParser","RegExpParser","getRegExpAst","regExp","regExpStr","regExpAst","clearRegExpParserCache","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","regExp","ensureOptimizations","ast","getRegExpAst","firstCharOptimizedIndices","PRINT_WARNING","msgSuffix","PRINT_ERROR","result","ignoreCase","i","terms","term","atom","addOptimizedIdxToResult","forEach_default","code","range","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","values_default","optimizedCharIdx","handleIgnoreCase","char","upperChar","lowerChar","findCode","setNode","targetCharCodes","find_default","codeOrRange","includes_default","targetCode","quantifier","isArray_default","every_default","CharCodeFinder","BaseRegExpVisitor","node","canMatchCharCode","charCodes","pattern","charCodeFinder","PATTERN","DEFAULT_MODE","MODES","SUPPORT_STICKY","analyzeTokenTypes","tokenTypes","options","defaults_default","SUPPORT_STICKY","msg","action","tracer","initCharCodeToOptimizedIndexMap","onlyRelevantTypes","reject_default","currType","PATTERN","Lexer","hasCustom","allTransformedPatterns","map_default","currPattern","isRegExp_default","regExpSource","includes_default","addStickyFlag","addStartOfInput","isFunction_default","escapedRegExpString","wrappedRegExp","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","clazz","groupName","isString_default","isUndefined_default","longerAltType","isArray_default","type","indexOf_default","has_default","patternIdxToCanLineTerminator","lineTerminatorCharCodes","getCharCodes","tokType","checkLineBreaksIssues","canMatchCharCode","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","isCustomPattern","isShortPattern","reduce_default","acc","x","idx","canBeOptimized","charCodeToPatternIdxToConfig","result","currTokType","charCode","optimizedIdx","charCodeToOptimizedIndex","addToMapOfArrays","lastOptimizedIdx","forEach_default","charOrInt","currOptimizedIdx","PRINT_ERROR","failedOptimizationPrefixMsg","optimizedCodes","getOptimizedStartCodesIndices","isEmpty_default","code","validatePatterns","validModesNames","errors","missingResult","findMissingPatterns","invalidResult","findInvalidPatterns","validTokenTypes","validateRegExpPattern","findInvalidGroupType","findModesThatDoNotExist","findUnreachablePatterns","withRegExpPatterns","filter_default","findEndOfInputAnchor","findStartOfInputAnchor","findUnsupportedFlags","findDuplicatePatterns","findEmptyMatchRegExps","tokenTypesWithMissingPattern","LexerDefinitionErrorType","valid","difference_default","tokenTypesWithInvalidPattern","pattern","end_of_input","EndAnchorFinder","BaseRegExpVisitor","node","invalidRegex","regexpAst","getRegExpAst","endAnchorVisitor","matchesEmptyString","start_of_input","StartAnchorFinder","startAnchorVisitor","invalidFlags","found","identicalPatterns","outerType","innerType","compact_default","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","head_default","invalidTypes","group","validModes","invalidModes","canBeTested","noMetaChar","testIdx","str","tokenType","testTokenType","regExpArray","regExp","find_default","char","flags","performRuntimeChecks","lexerDefinition","trackLines","lineTerminatorCharacters","DEFAULT_MODE","MODES","currModeValue","currModeName","currIdx","longerAlt","currLongerAlt","performWarningRuntimeChecks","warnings","hasAnyLineBreak","allTokenTypes","flatten_default","values_default","concreteTokenTypes","terminatorCharCodes","currIssue","warningDescriptor","buildLineBreakIssueMessage","cloneEmptyGroups","clonedResult","groupKeys","keys_default","currKey","currGroupValue","LineTerminatorOptimizedTester","text","len","i","c","details","charsOrCodes","numOrString","map","key","value","minOptimizationVal","charCodeToOptimizedIdxMap","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenStructuredMatcherNoCategories","token","tokType","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypes","tokenTypesAndParents","expandCategories","assignTokenDefaultProps","assignCategoriesMapProp","assignCategoriesTokensProp","forEach_default","result","clone_default","categories","searching","compact_default","flatten_default","map_default","currTokType","newCategories","difference_default","isEmpty_default","hasShortKeyProperty","hasCategoriesProperty","isArray_default","hasExtendingTokensTypesProperty","hasExtendingTokensTypesMapProperty","val","key","singleAssignCategoriesToksMap","path","nextNode","pathNode","nextCategory","newPath","includes_default","has_default","isTokenType","defaultLexerErrorProvider","token","fullText","startOffset","length","line","column","LexerDefinitionErrorType","DEFAULT_LEXER_CONFIG","defaultLexerErrorProvider","Lexer","lexerDefinition","config","phaseDesc","phaseImpl","indent","time","value","timer","traceMethod","assign_default","traceInitVal","actualDefinition","hasOnlySingleMode","LineTerminatorOptimizedTester","isArray_default","clone_default","DEFAULT_MODE","performRuntimeChecks","performWarningRuntimeChecks","forEach_default","currModeValue","currModeName","reject_default","currTokType","isUndefined_default","allModeNames","keys_default","currModDef","currModName","validatePatterns","isEmpty_default","augmentTokenTypes","currAnalyzeResult","analyzeTokenTypes","allErrMessagesString","map_default","error","warningDescriptor","PRINT_WARNING","SUPPORT_STICKY","identity_default","noop_default","unOptimizedModes","reduce_default","cannotBeOptimized","canBeOptimized","modeName","clearRegExpParserCache","toFastProperties","text","initialMode","i","j","k","matchAltImage","longerAlt","matchedImage","payload","altPayload","imageLength","group","tokType","newToken","errLength","droppedChar","msg","match","orgText","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","matchedTokens","errors","line","column","groups","cloneEmptyGroups","trackLines","lineTerminatorPattern","currModePatternsLength","patternIdxToConfig","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","charCode","optimizedCharIdx","charCodeToOptimizedIndex","possiblePatterns","pop_mode","popToken","newMode","last_default","modeCanBeOptimized","push_mode","currConfig","recoveryEnabled","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","currPattern","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","numOfLTsInMatch","foundTerminator","lastLTEndOffset","errorStartOffset","errorLine","errorColumn","foundResyncPoint","pushMode","length","regExp","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","image","startOffset","tokenTypeIdx","tokenType","startLine","startColumn","tokenVector","index","tokenToAdd","token","pattern","regExpArray","tokenLabel","tokType","hasTokenLabel","hasTokenLabel","obj","isString_default","PARENT","CATEGORIES","LABEL","GROUP","PUSH_MODE","POP_MODE","LONGER_ALT","LINE_BREAKS","START_CHARS_HINT","createToken","config","createTokenInternal","pattern","tokenType","isUndefined_default","has_default","augmentTokenTypes","EOF","Lexer","createTokenInstance","tokType","image","startOffset","endOffset","startLine","endLine","startColumn","endColumn","tokenMatcher","token","tokenStructuredMatcher","defaultParserErrorProvider","expected","actual","previous","ruleName","hasTokenLabel","tokenLabel","firstRedundant","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","head_default","allLookAheadPaths","reduce_default","result","currAltPaths","nextValidTokenSequences","map_default","currPath","currTokenType","calculatedDescription","itemMsg","idx","expectedIterationPaths","defaultGrammarResolverErrorProvider","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","duplicateProds","getExtraProductionArgument","prod","Terminal","NonTerminal","topLevelName","duplicateProd","index","dslName","getProductionDslName","extraArgument","hasExplicitIndex","msg","rule","options","pathMsg","currTok","occurrence","currtok","currMessage","pathNames","currRule","leftRecursivePath","Rule","resolveGrammar","topLevels","errMsgProvider","refResolver","GastRefResolverVisitor","GAstVisitor","nameToTopRule","forEach_default","values_default","prod","node","ref","msg","ParserDefinitionErrorType","AbstractNextPossibleTokensWalker","RestWalker","topProd","path","clone_default","prod","prevRest","refProd","currRest","fullRest","isEmpty_default","NextAfterTokenWalker","terminal","restProd","Alternative","first","AbstractNextTerminalAfterProductionWalker","topRule","occurrence","NextTerminalAfterManyWalker","manyProd","firstAfterMany","head_default","Terminal","NextTerminalAfterManySepWalker","manySepProd","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","atLeastOneProd","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","currPath","result","i","remainingPathWith","nextDef","drop_default","getAlternativesForProd","definition","alternatives","NonTerminal","Option","RepetitionMandatory","newDef","Repetition","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Alternation","forEach_default","currAlt","nextPossibleTokensAfter","initialDef","tokenVector","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","last_default","currDef","currIdx","currRuleStack","currOccurrenceStack","nextPath","dropRight_default","nextIdx","actualToken","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","Rule","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","prod","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Alternation","buildLookaheadFuncForOr","occurrence","ruleGrammar","maxLookahead","hasPredicates","dynamicTokensEnabled","laFuncBuilder","lookAheadPaths","getLookaheadPathsForOr","tokenMatcher","areTokenCategoriesNotUsed","tokenStructuredMatcherNoCategories","tokenStructuredMatcher","buildLookaheadFuncForOptionalProd","k","prodType","lookaheadBuilder","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","alts","numOfAlts","areAllOneTokenLookahead","every_default","currAlt","currPath","orAlts","predicates","map_default","t","currNumOfPaths","currPredicate","nextPath","j","currPathLength","i","nextToken","singleTokenAlts","flatten_default","choiceToAlt","reduce_default","result","idx","forEach_default","currTokType","has_default","currExtendingType","buildSingleAlternativeLookaheadFunction","alt","numOfPaths","singleTokensTypes","isEmpty_default","expectedTokenUniqueKey","RestDefinitionFinderWalker","RestWalker","topProd","targetOccurrence","targetProdType","node","expectedProdType","currRest","prevRest","optionProd","PROD_TYPE","atLeastOneProd","atLeastOneSepProd","manyProd","manySepProd","InsideDefinitionFinderVisitor","GAstVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","path","keys","tokType","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","searchKey","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","possiblePathsFrom","finalResult","altsHashes","currAltPaths","dict","item","currKey","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","suffixDef","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","key","orProd","visitor","insideDefVisitor","insideDef","afterDef","insideFlat","Alternative","afterFlat","alternative","searchPath","compareOtherPath","otherPath","searchTok","otherTok","isStrictPrefixOfPath","prefix","other","otherTokType","singleAltPaths","singlePath","token","validateLookahead","options","lookaheadValidationErrorMessages","map_default","errorMessage","ParserDefinitionErrorType","validateGrammar","topLevels","tokenTypes","errMsgProvider","grammarName","duplicateErrors","flatMap_default","currTopLevel","validateDuplicateProductions","termsNamespaceConflictErrors","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","validateTooManyAlts","duplicateRulesError","validateRuleDoesNotAlreadyExist","topLevelRule","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","productionGroups","groupBy_default","identifyProductionForDuplicates","duplicates","pickBy_default","currGroup","values_default","currDuplicates","firstProd","head_default","msg","dslName","getProductionDslName","defError","param","getExtraProductionArgument","prod","Terminal","NonTerminal","GAstVisitor","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","terminal","rule","allRules","className","errors","reduce_default","result","errMsg","validateRuleIsOverridden","ruleName","definedRulesNames","includes_default","validateNoLeftRecursion","topRule","currRule","path","nextNonTerminals","getFirstNoneTerminal","isEmpty_default","validNextSteps","difference_default","errorsFromNextSteps","currRefRule","newPath","clone_default","definition","Alternative","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Repetition","Alternation","flatten_default","currSubDef","isFirstOptional","isOptionalProd","hasMore","rest","drop_default","OrCollector","node","validateEmptyOrAlternative","orCollector","ors","currOr","exceptLast","dropRight_default","currAlternative","currAltIdx","possibleFirstInAlt","nextPossibleTokensAfter","tokenStructuredMatcher","validateAmbiguousAlternationAlternatives","globalMaxLookahead","reject_default","currOccurrence","actualMaxLookahead","alternatives","getLookaheadPathsForOr","altsAmbiguityErrors","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","checkPrefixAlternativesAmbiguities","RepetitionCollector","validateSomeNonEmptyLookaheadPath","topLevelRules","maxLookahead","forEach_default","currTopRule","currProd","prodType","getProdType","pathsInsideProduction","getLookaheadPathsForOptionalProd","alternation","foundAmbiguousPaths","identicalAmbiguities","currAlt","currPath","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","containsPath","currAmbDescriptor","ambgIndices","pathsAndIndices","idx","currPathsAndIdx","compact_default","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","filter_default","searchPathAndIdx","isStrictPrefixOfPath","currAmbPathAndIdx","occurrence","tokenNames","currToken","currRuleName","resolveGrammar","options","actualOptions","defaults_default","defaultGrammarResolverErrorProvider","topRulesTable","forEach_default","rule","validateGrammar","defaultGrammarValidatorErrorProvider","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","error","includes_default","RecognitionException","message","token","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","message","Recoverable","config","has_default","DEFAULT_PARSER_CONFIG","attemptInRepetitionRecovery","tokType","tokToInsert","createTokenInstance","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","savedLexerState","resyncedTokens","passedResyncPoint","nextTokenWithoutResync","currToken","generateErrorMessage","previousToken","msg","error","MismatchedTokenException","dropRight_default","expectTokAfterLastMatch","nextTokIdx","notStuck","tokIdxInRule","grammarPath","follows","nextTok","expectedToken","isEmpty_default","mismatchedTok","find_default","possibleFollowsTokType","tokenTypeIdx","followKey","currentRuleReSyncSet","includes_default","allPossibleReSyncTokTypes","nextToken","k","foundMatch","resyncTokType","tokenMatcher","currRuleShortName","currRuleIdx","prevRuleShortName","explicitRuleStack","explicitOccurrenceStack","map_default","ruleName","idx","followStack","currKey","flatten_default","EOF","followName","IN","token","resyncTokens","prodFunc","args","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","pathRuleStack","pathOccurrenceStack","clone_default","currShortName","key","firstAfterRepInfo","currRuleName","ruleGrammar","isEndOfRule","getKeyForAutomaticLookahead","ruleIdx","dslMethodIdx","occurrence","BITS_START_FOR_ALT_IDX","LLkLookaheadStrategy","options","_a","DEFAULT_PARSER_CONFIG","leftRecursionErrors","isEmpty_default","emptyAltErrors","ambiguousAltsErrors","emptyRepetitionErrors","rules","flatMap_default","currTopRule","validateNoLeftRecursion","defaultGrammarValidatorErrorProvider","validateEmptyOrAlternative","maxLookahead","validateAmbiguousAlternationAlternatives","validateSomeNonEmptyLookaheadPath","buildLookaheadFuncForOr","buildAlternativesLookAheadFunc","buildLookaheadFuncForOptionalProd","getProdType","buildSingleAlternativeLookaheadFunction","LooksAhead","config","has_default","DEFAULT_PARSER_CONFIG","LLkLookaheadStrategy","rules","forEach_default","currRule","alternation","repetition","option","repetitionMandatory","repetitionMandatoryWithSeparator","repetitionWithSeparator","collectMethods","currProd","prodIdx","getProductionDslName","laFunc","key","getKeyForAutomaticLookahead","rule","prodOccurrence","prodKey","prodType","prodMaxLookahead","dslMethodName","dslMethodIdx","occurrence","currRuleShortName","value","DslMethodsCollectorVisitor","GAstVisitor","manySep","atLeastOne","atLeastOneSep","many","or","collectorVisitor","dslMethods","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","setNodeLocationFull","addTerminalToCst","node","token","tokenTypeName","addNoneTerminalToCst","ruleName","ruleResult","NAME","defineNameProp","obj","nameValue","defaultVisit","ctx","param","childrenNames","keys_default","childrenNamesLength","i","currChildName","currChildArray","currChildArrayLength","j","currChild","createBaseSemanticVisitorConstructor","grammarName","ruleNames","derivedConstructor","defineNameProp","semanticProto","cstNode","isArray_default","isUndefined_default","semanticDefinitionErrors","validateVisitor","isEmpty_default","errorMessages","map_default","currDefError","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","forEach_default","ruleName","CstVisitorDefinitionError","visitorInstance","validateMissingCstMethods","missingRuleNames","filter_default","currRuleName","isFunction_default","errors","compact_default","TreeBuilder","config","has_default","DEFAULT_PARSER_CONFIG","noop_default","setNodeLocationFull","setNodeLocationOnlyOffset","cstNode","nextToken","fullRuleName","ruleCstNode","prevToken","loc","key","consumedToken","rootCst","addTerminalToCst","ruleCstResult","ruleName","preCstNode","addNoneTerminalToCst","isUndefined_default","newBaseCstVisitorConstructor","createBaseSemanticVisitorConstructor","keys_default","newConstructor","createBaseVisitorConstructorWithDefaults","ruleStack","occurrenceStack","LexerAdapter","newInput","END_OF_FILE","howMuch","soughtIdx","newState","RecognizerApi","impl","idx","tokType","options","ruleToCall","actionORMethodDef","altsOrOpts","name","implementation","config","DEFAULT_RULE_CONFIG","includes_default","error","defaultGrammarValidatorErrorProvider","ParserDefinitionErrorType","ruleImplementation","ruleErrors","validateRuleIsOverridden","grammarRule","args","orgState","e","isRecognitionException","serializeGrammar","values_default","RecognizerEngine","tokenVocabulary","config","tokenStructuredMatcherNoCategories","has_default","isArray_default","isEmpty_default","reduce_default","acc","tokType","every_default","flatten_default","values_default","isTokenType","allTokenTypes","uniqueTokens","uniq_default","isObject_default","clone_default","EOF","noTokenCategoriesUsed","tokenConstructor","tokenStructuredMatcher","augmentTokenTypes","ruleName","impl","resyncEnabled","DEFAULT_RULE_CONFIG","recoveryValueFunc","shortName","invokeRuleWithTry","args","cst","e","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","isRecognitionException","recogError","reSyncTokType","partialCstResult","actionORMethodDef","occurrence","key","lookAheadFunc","action","predicate","orgLookaheadFunction","prodOccurrence","laKey","notStuck","PROD_TYPE","NextTerminalAfterAtLeastOneWalker","options","separator","separatorLookAheadFunc","NextTerminalAfterAtLeastOneSepWalker","lookaheadFunction","NextTerminalAfterManyWalker","NextTerminalAfterManySepWalker","nextTerminalAfterWalker","beforeIteration","altsOrOpts","alts","altIdxToTake","firstRedundantTok","errMsg","NotAllInputParsedException","ruleToCall","idx","ruleResult","consumedToken","nextToken","eFromConsumption","msg","previousToken","MismatchedTokenException","follows","eFromInRuleRecovery","IN_RULE_RECOVERY_EXCEPTION","savedErrors","savedRuleStack","newState","fullName","idxInCallingRule","ErrorHandler","config","has_default","DEFAULT_PARSER_CONFIG","error","isRecognitionException","clone_default","newErrors","occurrence","prodType","userDefinedErrMsg","ruleName","ruleGrammar","insideProdPaths","getLookaheadPathsForOptionalProd","actualTokens","i","msg","EarlyExitException","errMsgTypes","lookAheadPathsPerAlternative","getLookaheadPathsForOr","previousToken","errMsg","NoViableAltException","ContentAssist","startRuleName","precedingInput","startRuleGast","isUndefined_default","nextPossibleTokensAfter","grammarPath","topRuleName","head_default","topProduction","NextAfterTokenWalker","RECORDING_NULL_OBJECT","HANDLE_SEPARATOR","MAX_METHOD_IDX","RFT","createToken","Lexer","augmentTokenTypes","RECORDING_PHASE_TOKEN","createTokenInstance","RECORDING_PHASE_CSTNODE","GastRecorder","config","i","idx","arg1","arg2","that","impl","grammarRule","args","howMuch","END_OF_FILE","name","def","newTopLevelRule","Rule","originalError","actionORMethodDef","occurrence","recordProd","Option","RepetitionMandatory","options","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","altsOrOpts","recordOrProd","ruleToCall","assertMethodIdxIsValid","has_default","error","getIdxSuffix","prevProd","last_default","ruleName","newNoneTerminal","NonTerminal","tokType","hasShortKeyProperty","Terminal","prodConstructor","mainProdArg","handleSep","grammarAction","isFunction_default","newProd","hasOptions","isArray_default","alts","newOrProd","Alternation","hasPredicates","some_default","currAlt","forEach_default","currAltFlat","Alternative","PerformanceTracer","config","has_default","userTraceInitPerf","traceIsNumber","DEFAULT_PARSER_CONFIG","phaseDesc","phaseImpl","indent","time","value","timer","traceMethod","applyMixins","derivedCtor","baseCtors","baseCtor","baseProto","propName","basePropDescriptor","END_OF_FILE","createTokenInstance","EOF","DEFAULT_PARSER_CONFIG","defaultParserErrorProvider","DEFAULT_RULE_CONFIG","ParserDefinitionErrorType","Parser","_Parser","parserInstance","defErrorsMsgs","className","toFastProperties","forEach_default","currRuleName","originalGrammarAction","recordedRuleGast","resolverErrors","resolveGrammar","values_default","isEmpty_default","validationErrors","validateGrammar","defaultGrammarValidatorErrorProvider","lookaheadValidationErrors","validateLookahead","allFollows","computeAllProdsFollows","_b","_a","map_default","defError","tokenVocabulary","config","that","has_default","DEFAULT_PARSER_CONFIG","applyMixins","Recoverable","LooksAhead","TreeBuilder","LexerAdapter","RecognizerEngine","RecognizerApi","ErrorHandler","ContentAssist","GastRecorder","PerformanceTracer","CstParser","configClone","clone_default","RiScriptParser","CstParser","allTokens","textTypes","opts","cst","$","Tokens","t","_Util","s","quotify","chr","hash","strHash","txt","result","k","v","text","string","str","match","replacement","c","count","i","__publicField","Util","escapeText","stringHash","BaseVisitor","riScript","o","cstNode","param","name","location","RiScriptVisitor","context","ctx","types","acc","exprs","type","raw","mingoQuery","e","resolvedOps","unresolvedOps","operands","sym","resolved","isStatic","isUser","ident","value","info","image","original","symbol","msg","lookup","choiceKey","gateText","gateResult","decision","ginfo","orExpr","options","excluded","restored","tfs","transforms","transformNames","lhs","rhs","wexprs","wexpr","expr","weight","mult","index","excludes","valid","x","selected","txs","tx","obj","madeCast","num","table","allResolved","key","val","target","transform","RiTa","dyns","stats","args","getTokens","v2Compatible","Symbols","Escaped","escapeRegex","ENTITY_PATTERN","PENDING_GATE_PATTERN","Gate","createToken","bracketMatch","startOffset","openGate","endOffset","dbug","charCode","depth","matchedString","DYN","STAT","OC","CC","OS","CS","ELSE","OR","EQ","AMP","Transform","Symbol","Entity","Weight","PendingGate","Raw","TextTypes","RiGrammar","_RiGrammar","rules","RiScript","parseJSON","def","rg","visitor","clonedOpts","incoming","replacer","space","lb","res","json","script","start","rule","decode","he","Vowels","HtmlEntities","charCount","slashEscapesToEntities","escapeMarkdownLink","escapeJSONRegex","RiQuery","Query","scripting","condition","compiled","len","stack","keys","currentObj","ele","_RiScript","Constants","tokens","Lexer","lexResult","input","trace","onepass","silent","last","endingBreak","tag","replaced","matches","m","lines","eqIdx","opens","closes","line","rawQuery","gates","g","deferredGate","deferredContext","reject","unescapeRegexProperty","RegexEscape","parts","escaped","urp","Esc","open","close","anysym","w","phonemeAnalyzer","first","phones","pluralizer","RiTa","_RiTa","rules","context","options","RiGrammar","name","definition","word","RiScript","script","markov_default","keyword","text","arrayOrInt","seed","sentence","char","IS_LETTER","string","pattern","word1","word2","input","check","a","ONLY_PUNCT","delim","stemmer_default","verbWord","param1","param2","randgen_default","tagger_default","analyzer_default","concorder_default","tokenizer_default","inflector_default","lexicon_default","conjugator_default"]}